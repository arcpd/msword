package dml

import (
	_g "encoding/xml"
	_gf "fmt"
	_e "regexp"
	_c "strconv"
	_d "time"

	_ga "github.com/arcpd/msword"
	_b "github.com/arcpd/msword/common/logger"
	_ge "github.com/arcpd/msword/schema/soo/ofc/sharedTypes"
)

func (_ffbed *ST_AdjCoordinate) ValidateWithPath(path string) error {
	_cdfdf := []string{}
	if _ffbed.ST_Coordinate != nil {
		if _edgde := _ffbed.ST_Coordinate.ValidateWithPath(path + "\u002f\u0053\u0054\u005f\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065"); _edgde != nil {
			return _edgde
		}
		_cdfdf = append(_cdfdf, "\u0053\u0054\u005f\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065")
	}
	if _ffbed.ST_GeomGuideName != nil {
		_cdfdf = append(_cdfdf, "\u0053\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004e\u0061\u006d\u0065")
	}
	if len(_cdfdf) > 1 {
		return _gf.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _cdfdf)
	}
	return nil
}

func NewCT_Camera() *CT_Camera {
	_gbgg := &CT_Camera{}
	_gbgg.PrstAttr = ST_PresetCameraType(1)
	return _gbgg
}

// ValidateWithPath validates the CT_TextNormalAutofit and its children, prefixing error messages with path
func (_dgac *CT_TextNormalAutofit) ValidateWithPath(path string) error {
	if _dgac.FontScaleAttr != nil {
		if _dbedc := _dgac.FontScaleAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0053\u0063\u0061\u006ce\u0041\u0074\u0074\u0072"); _dbedc != nil {
			return _dbedc
		}
	}
	if _dgac.LnSpcReductionAttr != nil {
		if _fbgad := _dgac.LnSpcReductionAttr.ValidateWithPath(path + "\u002f\u004c\u006e\u0053pc\u0052\u0065\u0064\u0075\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _fbgad != nil {
			return _fbgad
		}
	}
	return nil
}

// Validate validates the CT_EmptyElement and its children
func (_adbab *CT_EmptyElement) Validate() error {
	return _adbab.ValidateWithPath("\u0043T\u005fE\u006d\u0070\u0074\u0079\u0045\u006c\u0065\u006d\u0065\u006e\u0074")
}

// Validate validates the CT_FillEffect and its children
func (_cfaa *CT_FillEffect) Validate() error {
	return _cfaa.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_decebc ST_Coordinate) String() string {
	if _decebc.ST_CoordinateUnqualified != nil {
		return _gf.Sprintf("\u0025\u0076", *_decebc.ST_CoordinateUnqualified)
	}
	if _decebc.ST_UniversalMeasure != nil {
		return _gf.Sprintf("\u0025\u0076", *_decebc.ST_UniversalMeasure)
	}
	return ""
}

func NewCT_AlphaCeilingEffect() *CT_AlphaCeilingEffect { _dcg := &CT_AlphaCeilingEffect{}; return _dcg }

func (_gcbeb *ST_TextAutonumberScheme) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_efbee, _baedc := d.Token()
	if _baedc != nil {
		return _baedc
	}
	if _geeac, _cdfac := _efbee.(_g.EndElement); _cdfac && _geeac.Name == start.Name {
		*_gcbeb = 1
		return nil
	}
	if _cfbcd, _baab := _efbee.(_g.CharData); !_baab {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _efbee)
	} else {
		switch string(_cfbcd) {
		case "":
			*_gcbeb = 0
		case "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_gcbeb = 1
		case "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_gcbeb = 2
		case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_gcbeb = 3
		case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_gcbeb = 4
		case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gcbeb = 5
		case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gcbeb = 6
		case "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_gcbeb = 7
		case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_gcbeb = 8
		case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gcbeb = 9
		case "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e":
			*_gcbeb = 10
		case "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_gcbeb = 11
		case "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_gcbeb = 12
		case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_gcbeb = 13
		case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_gcbeb = 14
		case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gcbeb = 15
		case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gcbeb = 16
		case "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
			*_gcbeb = 17
		case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e":
			*_gcbeb = 18
		case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e":
			*_gcbeb = 19
		case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
			*_gcbeb = 20
		case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
			*_gcbeb = 21
		case "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gcbeb = 22
		case "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e":
			*_gcbeb = 23
		case "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gcbeb = 24
		case "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e":
			*_gcbeb = 25
		case "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
			*_gcbeb = 26
		case "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e":
			*_gcbeb = 27
		case "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gcbeb = 28
		case "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073":
			*_gcbeb = 29
		case "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073":
			*_gcbeb = 30
		case "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073":
			*_gcbeb = 31
		case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gcbeb = 32
		case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052":
			*_gcbeb = 33
		case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068":
			*_gcbeb = 34
		case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gcbeb = 35
		case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052":
			*_gcbeb = 36
		case "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_gcbeb = 37
		case "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
			*_gcbeb = 38
		case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064":
			*_gcbeb = 39
		case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052":
			*_gcbeb = 40
		case "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064":
			*_gcbeb = 41
		}
	}
	_efbee, _baedc = d.Token()
	if _baedc != nil {
		return _baedc
	}
	if _ecaagd, _beccg := _efbee.(_g.EndElement); _beccg && _ecaagd.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _efbee)
}

func (_acbed ST_TextVerticalType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_acbed.String(), start)
}

func (_fccaa ST_TextWrappingType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_gadbe := _g.Attr{}
	_gadbe.Name = name
	switch _fccaa {
	case ST_TextWrappingTypeUnset:
		_gadbe.Value = ""
	case ST_TextWrappingTypeNone:
		_gadbe.Value = "\u006e\u006f\u006e\u0065"
	case ST_TextWrappingTypeSquare:
		_gadbe.Value = "\u0073\u0071\u0075\u0061\u0072\u0065"
	}
	return _gadbe, nil
}

// Validate validates the CT_AlphaOutsetEffect and its children
func (_ffe *CT_AlphaOutsetEffect) Validate() error {
	return _ffe.ValidateWithPath("C\u0054_\u0041\u006c\u0070\u0068\u0061\u004f\u0075\u0074s\u0065\u0074\u0045\u0066fe\u0063\u0074")
}

func (_cdda *CT_CustomColor) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cdda.NameAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _gf.Sprintf("\u0025\u0076", *_cdda.NameAttr)})
	}
	e.EncodeToken(start)
	if _cdda.ScrgbClr != nil {
		_efcb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_cdda.ScrgbClr, _efcb)
	}
	if _cdda.SrgbClr != nil {
		_cgdd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_cdda.SrgbClr, _cgdd)
	}
	if _cdda.HslClr != nil {
		_dacf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_cdda.HslClr, _dacf)
	}
	if _cdda.SysClr != nil {
		_acgdb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_cdda.SysClr, _acgdb)
	}
	if _cdda.SchemeClr != nil {
		_bgfb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_cdda.SchemeClr, _bgfb)
	}
	if _cdda.PrstClr != nil {
		_afbfe := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_cdda.PrstClr, _afbfe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewEG_ThemeableEffectStyle() *EG_ThemeableEffectStyle {
	_aedgbb := &EG_ThemeableEffectStyle{}
	return _aedgbb
}

func NewCT_BackgroundFormatting() *CT_BackgroundFormatting {
	_ecff := &CT_BackgroundFormatting{}
	return _ecff
}

// Validate validates the CT_TileInfoProperties and its children
func (_fdbeb *CT_TileInfoProperties) Validate() error {
	return _fdbeb.ValidateWithPath("C\u0054\u005f\u0054\u0069le\u0049n\u0066\u006f\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

func NewCT_ReflectionEffect() *CT_ReflectionEffect { _gfge := &CT_ReflectionEffect{}; return _gfge }

func (_accb *CT_ClipboardStyleSheet) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_accb.ThemeElements = NewCT_BaseStyles()
	_accb.ClrMap = NewCT_ColorMapping()
_dbaa:
	for {
		_cbbc, _cffdc := d.Token()
		if _cffdc != nil {
			return _cffdc
		}
		switch _egba := _cbbc.(type) {
		case _g.StartElement:
			switch _egba.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}:
				if _acdf := d.DecodeElement(_accb.ThemeElements, &_egba); _acdf != nil {
					return _acdf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _cded := d.DecodeElement(_accb.ClrMap, &_egba); _cded != nil {
					return _cded
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u006c\u0069\u0070b\u006f\u0061\u0072\u0064\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _egba.Name)
				if _adbb := d.Skip(); _adbb != nil {
					return _adbb
				}
			}
		case _g.EndElement:
			break _dbaa
		case _g.CharData:
		}
	}
	return nil
}

func (_defad *CT_NonVisualGraphicFrameProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_edeag:
	for {
		_gffdd, _cfeac := d.Token()
		if _cfeac != nil {
			return _cfeac
		}
		switch _edcef := _gffdd.(type) {
		case _g.StartElement:
			switch _edcef.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065L\u006f\u0063\u006b\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065L\u006f\u0063\u006b\u0073"}:
				_defad.GraphicFrameLocks = NewCT_GraphicalObjectFrameLocking()
				if _fgdgc := d.DecodeElement(_defad.GraphicFrameLocks, &_edcef); _fgdgc != nil {
					return _fgdgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_defad.ExtLst = NewCT_OfficeArtExtensionList()
				if _adaef := d.DecodeElement(_defad.ExtLst, &_edcef); _adaef != nil {
					return _adaef
				}
			default:
				_b.Log.Debug("s\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006de\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020%\u0076", _edcef.Name)
				if _ebgcg := d.Skip(); _ebgcg != nil {
					return _ebgcg
				}
			}
		case _g.EndElement:
			break _edeag
		case _g.CharData:
		}
	}
	return nil
}

func (_gdd *CT_AnimationDgmBuildProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gdd.BldAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u006c\u0064"}, Value: _gf.Sprintf("\u0025\u0076", *_gdd.BldAttr)})
	}
	if _gdd.RevAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0065\u0076"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gdd.RevAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_AlphaOutsetEffect() *CT_AlphaOutsetEffect { _dac := &CT_AlphaOutsetEffect{}; return _dac }

// Validate validates the CT_SRgbColor and its children
func (_eeae *CT_SRgbColor) Validate() error {
	return _eeae.ValidateWithPath("\u0043\u0054\u005fS\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072")
}

func NewCT_ColorScheme() *CT_ColorScheme {
	_adff := &CT_ColorScheme{}
	_adff.Dk1 = NewCT_Color()
	_adff.Lt1 = NewCT_Color()
	_adff.Dk2 = NewCT_Color()
	_adff.Lt2 = NewCT_Color()
	_adff.Accent1 = NewCT_Color()
	_adff.Accent2 = NewCT_Color()
	_adff.Accent3 = NewCT_Color()
	_adff.Accent4 = NewCT_Color()
	_adff.Accent5 = NewCT_Color()
	_adff.Accent6 = NewCT_Color()
	_adff.Hlink = NewCT_Color()
	_adff.FolHlink = NewCT_Color()
	return _adff
}

// Validate validates the CT_PresetLineDashProperties and its children
func (_adabgg *CT_PresetLineDashProperties) Validate() error {
	return _adabgg.ValidateWithPath("C\u0054\u005f\u0050\u0072\u0065\u0073e\u0074\u004c\u0069\u006e\u0065\u0044\u0061\u0073\u0068P\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073")
}

func (_dffa ST_ColorSchemeIndex) Validate() error { return _dffa.ValidateWithPath("") }

// Validate validates the CT_TextSpacingPoint and its children
func (_fbegeg *CT_TextSpacingPoint) Validate() error {
	return _fbegeg.ValidateWithPath("\u0043\u0054\u005f\u0054ex\u0074\u0053\u0070\u0061\u0063\u0069\u006e\u0067\u0050\u006f\u0069\u006e\u0074")
}

func (_afac *CT_WholeE2oFormatting) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fegga:
	for {
		_edgfb, _facbag := d.Token()
		if _facbag != nil {
			return _facbag
		}
		switch _gaacad := _edgfb.(type) {
		case _g.StartElement:
			switch _gaacad.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_afac.Ln = NewCT_LineProperties()
				if _bcefa := d.DecodeElement(_afac.Ln, &_gaacad); _bcefa != nil {
					return _bcefa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_afac.EffectLst = NewCT_EffectList()
				if _eadad := d.DecodeElement(_afac.EffectLst, &_gaacad); _eadad != nil {
					return _eadad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_afac.EffectDag = NewCT_EffectContainer()
				if _bcfeb := d.DecodeElement(_afac.EffectDag, &_gaacad); _bcfeb != nil {
					return _bcfeb
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0057\u0068\u006f\u006c\u0065\u0045\u0032\u006f\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067\u0020\u0025\u0076", _gaacad.Name)
				if _daaca := d.Skip(); _daaca != nil {
					return _daaca
				}
			}
		case _g.EndElement:
			break _fegga
		case _g.CharData:
		}
	}
	return nil
}

func NewEG_TextUnderlineFill() *EG_TextUnderlineFill {
	_gegdd := &EG_TextUnderlineFill{}
	return _gegdd
}

// Validate validates the CT_AlphaReplaceEffect and its children
func (_ccfd *CT_AlphaReplaceEffect) Validate() error {
	return _ccfd.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_bgbf *CT_Color) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _bgbf.ScrgbClr != nil {
		_cbbed := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_bgbf.ScrgbClr, _cbbed)
	}
	if _bgbf.SrgbClr != nil {
		_caafa := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_bgbf.SrgbClr, _caafa)
	}
	if _bgbf.HslClr != nil {
		_egcg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_bgbf.HslClr, _egcg)
	}
	if _bgbf.SysClr != nil {
		_gbge := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_bgbf.SysClr, _gbge)
	}
	if _bgbf.SchemeClr != nil {
		_fceeb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_bgbf.SchemeClr, _fceeb)
	}
	if _bgbf.PrstClr != nil {
		_gbcb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_bgbf.PrstClr, _gbcb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_eebac *CT_GradientStop) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0070\u006f\u0073"}, Value: _gf.Sprintf("\u0025\u0076", _eebac.PosAttr)})
	e.EncodeToken(start)
	if _eebac.ScrgbClr != nil {
		_aedf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_eebac.ScrgbClr, _aedf)
	}
	if _eebac.SrgbClr != nil {
		_dbfd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_eebac.SrgbClr, _dbfd)
	}
	if _eebac.HslClr != nil {
		_bdbb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_eebac.HslClr, _bdbb)
	}
	if _eebac.SysClr != nil {
		_bebcg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_eebac.SysClr, _bebcg)
	}
	if _eebac.SchemeClr != nil {
		_fdgdg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_eebac.SchemeClr, _fdgdg)
	}
	if _eebac.PrstClr != nil {
		_adfba := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_eebac.PrstClr, _adfba)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ffea *CT_BackgroundFormatting) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_aabd:
	for {
		_efad, _egff := d.Token()
		if _egff != nil {
			return _egff
		}
		switch _deae := _efad.(type) {
		case _g.StartElement:
			switch _deae.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_ffea.NoFill = NewCT_NoFillProperties()
				if _accc := d.DecodeElement(_ffea.NoFill, &_deae); _accc != nil {
					return _accc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_ffea.SolidFill = NewCT_SolidColorFillProperties()
				if _aabc := d.DecodeElement(_ffea.SolidFill, &_deae); _aabc != nil {
					return _aabc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_ffea.GradFill = NewCT_GradientFillProperties()
				if _faba := d.DecodeElement(_ffea.GradFill, &_deae); _faba != nil {
					return _faba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_ffea.BlipFill = NewCT_BlipFillProperties()
				if _deab := d.DecodeElement(_ffea.BlipFill, &_deae); _deab != nil {
					return _deab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_ffea.PattFill = NewCT_PatternFillProperties()
				if _eeba := d.DecodeElement(_ffea.PattFill, &_deae); _eeba != nil {
					return _eeba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_ffea.GrpFill = NewCT_GroupFillProperties()
				if _ebde := d.DecodeElement(_ffea.GrpFill, &_deae); _ebde != nil {
					return _ebde
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_ffea.EffectLst = NewCT_EffectList()
				if _edc := d.DecodeElement(_ffea.EffectLst, &_deae); _edc != nil {
					return _edc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_ffea.EffectDag = NewCT_EffectContainer()
				if _gfgbb := d.DecodeElement(_ffea.EffectDag, &_deae); _gfgbb != nil {
					return _gfgbb
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006ed\u0046\u006f\u0072\u006d\u0061\u0074t\u0069\u006e\u0067 \u0025\u0076", _deae.Name)
				if _fbbd := d.Skip(); _fbbd != nil {
					return _fbbd
				}
			}
		case _g.EndElement:
			break _aabd
		case _g.CharData:
		}
	}
	return nil
}

type ST_TextStrikeType byte

// ValidateWithPath validates the CT_LineProperties and its children, prefixing error messages with path
func (_cbagg *CT_LineProperties) ValidateWithPath(path string) error {
	if _cbagg.WAttr != nil {
		if *_cbagg.WAttr < 0 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0057A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_cbagg.WAttr)
		}
		if *_cbagg.WAttr > 20116800 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020<\u003d\u0020\u0032\u0030\u0031\u0031\u0036\u0038\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_cbagg.WAttr)
		}
	}
	if _gfddff := _cbagg.CapAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u0070\u0041\u0074\u0074\u0072"); _gfddff != nil {
		return _gfddff
	}
	if _accga := _cbagg.CmpdAttr.ValidateWithPath(path + "\u002fC\u006d\u0070\u0064\u0041\u0074\u0074r"); _accga != nil {
		return _accga
	}
	if _bcbga := _cbagg.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _bcbga != nil {
		return _bcbga
	}
	if _cbagg.NoFill != nil {
		if _cbed := _cbagg.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _cbed != nil {
			return _cbed
		}
	}
	if _cbagg.SolidFill != nil {
		if _cfffd := _cbagg.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _cfffd != nil {
			return _cfffd
		}
	}
	if _cbagg.GradFill != nil {
		if _fgfe := _cbagg.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _fgfe != nil {
			return _fgfe
		}
	}
	if _cbagg.PattFill != nil {
		if _cbgff := _cbagg.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _cbgff != nil {
			return _cbgff
		}
	}
	if _cbagg.PrstDash != nil {
		if _degdg := _cbagg.PrstDash.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0044\u0061\u0073h"); _degdg != nil {
			return _degdg
		}
	}
	if _cbagg.CustDash != nil {
		if _ebbg := _cbagg.CustDash.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0044\u0061\u0073h"); _ebbg != nil {
			return _ebbg
		}
	}
	if _cbagg.Round != nil {
		if _bfdg := _cbagg.Round.ValidateWithPath(path + "\u002f\u0052\u006f\u0075\u006e\u0064"); _bfdg != nil {
			return _bfdg
		}
	}
	if _cbagg.Bevel != nil {
		if _bdgdb := _cbagg.Bevel.ValidateWithPath(path + "\u002f\u0042\u0065\u0076\u0065\u006c"); _bdgdb != nil {
			return _bdgdb
		}
	}
	if _cbagg.Miter != nil {
		if _beec := _cbagg.Miter.ValidateWithPath(path + "\u002f\u004d\u0069\u0074\u0065\u0072"); _beec != nil {
			return _beec
		}
	}
	if _cbagg.HeadEnd != nil {
		if _cbae := _cbagg.HeadEnd.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0045\u006e\u0064"); _cbae != nil {
			return _cbae
		}
	}
	if _cbagg.TailEnd != nil {
		if _cfbfe := _cbagg.TailEnd.ValidateWithPath(path + "\u002f\u0054\u0061\u0069\u006c\u0045\u006e\u0064"); _cfbfe != nil {
			return _cfbfe
		}
	}
	if _cbagg.ExtLst != nil {
		if _aeda := _cbagg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aeda != nil {
			return _aeda
		}
	}
	return nil
}

// ValidateWithPath validates the CT_HslColor and its children, prefixing error messages with path
func (_agcgd *CT_HslColor) ValidateWithPath(path string) error {
	if _agcgd.HueAttr < 0 {
		return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0048\u0075e\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _agcgd.HueAttr)
	}
	if _agcgd.HueAttr >= 21600000 {
		return _gf.Errorf("\u0025\u0073\u002f\u006d\u002eH\u0075\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _agcgd.HueAttr)
	}
	if _dgfa := _agcgd.SatAttr.ValidateWithPath(path + "\u002f\u0053\u0061\u0074\u0041\u0074\u0074\u0072"); _dgfa != nil {
		return _dgfa
	}
	if _ebead := _agcgd.LumAttr.ValidateWithPath(path + "\u002f\u004c\u0075\u006d\u0041\u0074\u0074\u0072"); _ebead != nil {
		return _ebead
	}
	for _eagb, _dffcb := range _agcgd.EG_ColorTransform {
		if _gbgea := _dffcb.ValidateWithPath(_gf.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _eagb)); _gbgea != nil {
			return _gbgea
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AudioFile and its children, prefixing error messages with path
func (_gef *CT_AudioFile) ValidateWithPath(path string) error {
	if _gef.ExtLst != nil {
		if _cede := _gef.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cede != nil {
			return _cede
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Percentage and its children, prefixing error messages with path
func (_afgd *CT_Percentage) ValidateWithPath(path string) error {
	if _beced := _afgd.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _beced != nil {
		return _beced
	}
	return nil
}

// Validate validates the EG_EffectProperties and its children
func (_acbfcg *EG_EffectProperties) Validate() error {
	return _acbfcg.ValidateWithPath("\u0045\u0047\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_fcadggg ST_TextAnchoringType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cdegf := _g.Attr{}
	_cdegf.Name = name
	switch _fcadggg {
	case ST_TextAnchoringTypeUnset:
		_cdegf.Value = ""
	case ST_TextAnchoringTypeT:
		_cdegf.Value = "\u0074"
	case ST_TextAnchoringTypeCtr:
		_cdegf.Value = "\u0063\u0074\u0072"
	case ST_TextAnchoringTypeB:
		_cdegf.Value = "\u0062"
	case ST_TextAnchoringTypeJust:
		_cdegf.Value = "\u006a\u0075\u0073\u0074"
	case ST_TextAnchoringTypeDist:
		_cdegf.Value = "\u0064\u0069\u0073\u0074"
	}
	return _cdegf, nil
}

type CT_BackgroundFormatting struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

// ValidateWithPath validates the CT_AudioCD and its children, prefixing error messages with path
func (_gcfb *CT_AudioCD) ValidateWithPath(path string) error {
	if _bcg := _gcfb.St.ValidateWithPath(path + "\u002f\u0053\u0074"); _bcg != nil {
		return _bcg
	}
	if _babd := _gcfb.End.ValidateWithPath(path + "\u002f\u0045\u006e\u0064"); _babd != nil {
		return _babd
	}
	if _gcfb.ExtLst != nil {
		if _gbbd := _gcfb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbbd != nil {
			return _gbbd
		}
	}
	return nil
}

func (_bggg *CT_BiLevelEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0068\u0072\u0065\u0073\u0068"}, Value: _gf.Sprintf("\u0025\u0076", _bggg.ThreshAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_LuminanceEffect and its children, prefixing error messages with path
func (_cddcg *CT_LuminanceEffect) ValidateWithPath(path string) error {
	if _cddcg.BrightAttr != nil {
		if _cecbgb := _cddcg.BrightAttr.ValidateWithPath(path + "/\u0042\u0072\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072"); _cecbgb != nil {
			return _cecbgb
		}
	}
	if _cddcg.ContrastAttr != nil {
		if _beae := _cddcg.ContrastAttr.ValidateWithPath(path + "\u002f\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0041\u0074\u0074\u0072"); _beae != nil {
			return _beae
		}
	}
	return nil
}

type CT_Cell3D struct {
	PrstMaterialAttr ST_PresetMaterialType
	Bevel            *CT_Bevel
	LightRig         *CT_LightRig
	ExtLst           *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_TextUnderlineFillFollowText and its children, prefixing error messages with path
func (_agbbb *CT_TextUnderlineFillFollowText) ValidateWithPath(path string) error { return nil }

func (_egaac ST_FontCollectionIndex) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_egaac.String(), start)
}

func (_bggcc *CT_RegularTextRun) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bgadd:
	for {
		_fcffg, _dbgdd := d.Token()
		if _dbgdd != nil {
			return _dbgdd
		}
		switch _dfgcd := _fcffg.(type) {
		case _g.StartElement:
			switch _dfgcd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_bggcc.RPr = NewCT_TextCharacterProperties()
				if _ebffg := d.DecodeElement(_bggcc.RPr, &_dfgcd); _ebffg != nil {
					return _ebffg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				if _abec := d.DecodeElement(&_bggcc.T, &_dfgcd); _abec != nil {
					return _abec
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0067\u0075\u006c\u0061\u0072\u0054\u0065\u0078\u0074\u0052\u0075\u006e\u0020\u0025\u0076", _dfgcd.Name)
				if _ccfaa := d.Skip(); _ccfaa != nil {
					return _ccfaa
				}
			}
		case _g.EndElement:
			break _bgadd
		case _g.CharData:
		}
	}
	return nil
}

func (_dbebd *CT_TextNormalAutofit) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cfafb := range start.Attr {
		if _cfafb.Name.Local == "\u0066o\u006e\u0074\u0053\u0063\u0061\u006ce" {
			_adbbd, _fagab := ParseUnionST_TextFontScalePercentOrPercentString(_cfafb.Value)
			if _fagab != nil {
				return _fagab
			}
			_dbebd.FontScaleAttr = &_adbbd
			continue
		}
		if _cfafb.Name.Local == "\u006c\u006e\u0053\u0070\u0063\u0052\u0065\u0064\u0075c\u0074\u0069\u006f\u006e" {
			_daefg, _bfeedf := ParseUnionST_TextSpacingPercentOrPercentString(_cfafb.Value)
			if _bfeedf != nil {
				return _bfeedf
			}
			_dbebd.LnSpcReductionAttr = &_daefg
			continue
		}
	}
	for {
		_bbedb, _ggebd := d.Token()
		if _ggebd != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074N\u006fr\u006d\u0061\u006c\u0041\u0075\u0074\u006f\u0066\u0069\u0074\u003a\u0020\u0025\u0073", _ggebd)
		}
		if _befeea, _deegb := _bbedb.(_g.EndElement); _deegb && _befeea.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_ColorMappingOverride() *CT_ColorMappingOverride {
	_efae := &CT_ColorMappingOverride{}
	_efae.Choice = NewCT_ColorMappingOverrideChoice()
	return _efae
}

type CT_PatternFillProperties struct {
	PrstAttr ST_PresetPatternVal
	FgClr    *CT_Color
	BgClr    *CT_Color
}

type CT_ContentPartLocking struct {
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

func (_cfefde *ST_AnimationDgmOnlyBuildType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gbced, _bgfgb := d.Token()
	if _bgfgb != nil {
		return _bgfgb
	}
	if _gdegf, _ccab := _gbced.(_g.EndElement); _ccab && _gdegf.Name == start.Name {
		*_cfefde = 1
		return nil
	}
	if _cegbf, _eaafc := _gbced.(_g.CharData); !_eaafc {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gbced)
	} else {
		switch string(_cegbf) {
		case "":
			*_cfefde = 0
		case "\u006f\u006e\u0065":
			*_cfefde = 1
		case "\u006c\u0076\u006c\u004f\u006e\u0065":
			*_cfefde = 2
		case "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_cfefde = 3
		}
	}
	_gbced, _bgfgb = d.Token()
	if _bgfgb != nil {
		return _bgfgb
	}
	if _fagdf, _deddf := _gbced.(_g.EndElement); _deddf && _fagdf.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gbced)
}

const (
	ST_TextCapsTypeUnset ST_TextCapsType = 0
	ST_TextCapsTypeNone  ST_TextCapsType = 1
	ST_TextCapsTypeSmall ST_TextCapsType = 2
	ST_TextCapsTypeAll   ST_TextCapsType = 3
)

func (_fcbad *CT_CustomGeometry2D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _fcbad.AvLst != nil {
		_fcaa := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_fcbad.AvLst, _fcaa)
	}
	if _fcbad.GdLst != nil {
		_agffa := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_fcbad.GdLst, _agffa)
	}
	if _fcbad.AhLst != nil {
		_ggc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0068\u004c\u0073\u0074"}}
		e.EncodeElement(_fcbad.AhLst, _ggc)
	}
	if _fcbad.CxnLst != nil {
		_ffef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0078\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_fcbad.CxnLst, _ffef)
	}
	if _fcbad.Rect != nil {
		_fbaa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072\u0065\u0063\u0074"}}
		e.EncodeElement(_fcbad.Rect, _fbaa)
	}
	_ecee := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0061\u0074\u0068\u004c\u0073t"}}
	e.EncodeElement(_fcbad.PathLst, _ecee)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_TextUnderlineLineFollowText struct{}

func (_geag *CT_GvmlGraphicFrameNonVisual) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_geag.CNvPr = NewCT_NonVisualDrawingProps()
	_geag.CNvGraphicFramePr = NewCT_NonVisualGraphicFrameProperties()
_abcfc:
	for {
		_adae, _dfag := d.Token()
		if _dfag != nil {
			return _dfag
		}
		switch _acaae := _adae.(type) {
		case _g.StartElement:
			switch _acaae.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _agbad := d.DecodeElement(_geag.CNvPr, &_acaae); _agbad != nil {
					return _agbad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}:
				if _cdfeg := d.DecodeElement(_geag.CNvGraphicFramePr, &_acaae); _cdfeg != nil {
					return _cdfeg
				}
			default:
				_b.Log.Debug("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061m\u0065\u004eon\u0056\u0069\u0073u\u0061\u006c\u0020\u0025\u0076", _acaae.Name)
				if _bfad := d.Skip(); _bfad != nil {
					return _bfad
				}
			}
		case _g.EndElement:
			break _abcfc
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the EG_TextBullet and its children, prefixing error messages with path
func (_fcffa *EG_TextBullet) ValidateWithPath(path string) error {
	if _fcffa.BuNone != nil {
		if _ddagc := _fcffa.BuNone.ValidateWithPath(path + "\u002fB\u0075\u004e\u006f\u006e\u0065"); _ddagc != nil {
			return _ddagc
		}
	}
	if _fcffa.BuAutoNum != nil {
		if _cgbbd := _fcffa.BuAutoNum.ValidateWithPath(path + "\u002f\u0042\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"); _cgbbd != nil {
			return _cgbbd
		}
	}
	if _fcffa.BuChar != nil {
		if _edcfc := _fcffa.BuChar.ValidateWithPath(path + "\u002fB\u0075\u0043\u0068\u0061\u0072"); _edcfc != nil {
			return _edcfc
		}
	}
	if _fcffa.BuBlip != nil {
		if _eccbf := _fcffa.BuBlip.ValidateWithPath(path + "\u002fB\u0075\u0042\u006c\u0069\u0070"); _eccbf != nil {
			return _eccbf
		}
	}
	return nil
}

type CT_GvmlShape struct {
	NvSpPr *CT_GvmlShapeNonVisual
	SpPr   *CT_ShapeProperties
	TxSp   *CT_GvmlTextShape
	Style  *CT_ShapeStyle
	ExtLst *CT_OfficeArtExtensionList
}

func (_ffgfc *CT_PathShadeProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ffgfc.PathAttr != ST_PathShadeTypeUnset {
		_bbfed, _eeagc := _ffgfc.PathAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0061\u0074\u0068"})
		if _eeagc != nil {
			return _eeagc
		}
		start.Attr = append(start.Attr, _bbfed)
	}
	e.EncodeToken(start)
	if _ffgfc.FillToRect != nil {
		_efcdb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066i\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_ffgfc.FillToRect, _efcdb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ecfg *CT_BaseStyles) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_bef := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0063\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_ecfg.ClrScheme, _bef)
	_cffd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066o\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_ecfg.FontScheme, _cffd)
	_addg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0066\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_ecfg.FmtScheme, _addg)
	if _ecfg.ExtLst != nil {
		_ccbd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ecfg.ExtLst, _ccbd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_ThemeableEffectStyle and its children, prefixing error messages with path
func (_ecefc *EG_ThemeableEffectStyle) ValidateWithPath(path string) error {
	if _ecefc.Effect != nil {
		if _gcdeb := _ecefc.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _gcdeb != nil {
			return _gcdeb
		}
	}
	if _ecefc.EffectRef != nil {
		if _gbcfd := _ecefc.EffectRef.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"); _gbcfd != nil {
			return _gbcfd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_LinearShadeProperties and its children, prefixing error messages with path
func (_gbce *CT_LinearShadeProperties) ValidateWithPath(path string) error {
	if _gbce.AngAttr != nil {
		if *_gbce.AngAttr < 0 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0041\u006eg\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_gbce.AngAttr)
		}
		if *_gbce.AngAttr >= 21600000 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002eA\u006e\u0067\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_gbce.AngAttr)
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ShapeProperties and its children, prefixing error messages with path
func (_fdbgb *CT_ShapeProperties) ValidateWithPath(path string) error {
	if _fdgdc := _fdbgb.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _fdgdc != nil {
		return _fdgdc
	}
	if _fdbgb.Xfrm != nil {
		if _daee := _fdbgb.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _daee != nil {
			return _daee
		}
	}
	if _fdbgb.CustGeom != nil {
		if _dccgd := _fdbgb.CustGeom.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0047\u0065\u006fm"); _dccgd != nil {
			return _dccgd
		}
	}
	if _fdbgb.PrstGeom != nil {
		if _aeaea := _fdbgb.PrstGeom.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0047\u0065\u006fm"); _aeaea != nil {
			return _aeaea
		}
	}
	if _fdbgb.NoFill != nil {
		if _bbff := _fdbgb.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _bbff != nil {
			return _bbff
		}
	}
	if _fdbgb.SolidFill != nil {
		if _gbedg := _fdbgb.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _gbedg != nil {
			return _gbedg
		}
	}
	if _fdbgb.GradFill != nil {
		if _bfgac := _fdbgb.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _bfgac != nil {
			return _bfgac
		}
	}
	if _fdbgb.BlipFill != nil {
		if _bfdbf := _fdbgb.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _bfdbf != nil {
			return _bfdbf
		}
	}
	if _fdbgb.PattFill != nil {
		if _dbccd := _fdbgb.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _dbccd != nil {
			return _dbccd
		}
	}
	if _fdbgb.GrpFill != nil {
		if _ddecb := _fdbgb.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _ddecb != nil {
			return _ddecb
		}
	}
	if _fdbgb.Ln != nil {
		if _dageb := _fdbgb.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _dageb != nil {
			return _dageb
		}
	}
	if _fdbgb.EffectLst != nil {
		if _aaee := _fdbgb.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _aaee != nil {
			return _aaee
		}
	}
	if _fdbgb.EffectDag != nil {
		if _ffeed := _fdbgb.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _ffeed != nil {
			return _ffeed
		}
	}
	if _fdbgb.Scene3d != nil {
		if _cbafgf := _fdbgb.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _cbafgf != nil {
			return _cbafgf
		}
	}
	if _fdbgb.Sp3d != nil {
		if _cgfa := _fdbgb.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _cgfa != nil {
			return _cgfa
		}
	}
	if _fdbgb.ExtLst != nil {
		if _gegec := _fdbgb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gegec != nil {
			return _gegec
		}
	}
	return nil
}

type TblStyleLst struct{ CT_TableStyleList }

func ParseUnionST_AdjCoordinate(s string) (ST_AdjCoordinate, error) {
	_fggfa := ST_AdjCoordinate{}
	if _ge.ST_UniversalMeasurePatternRe.MatchString(s) {
		_fggfa.ST_Coordinate = &ST_Coordinate{}
		_fggfa.ST_Coordinate.ST_UniversalMeasure = &s
	} else {
		_acgfd, _bcced := _c.ParseInt(s, 10, 64)
		if _bcced != nil {
			_fggfa.ST_GeomGuideName = &s
		} else {
			_fggfa.ST_Coordinate = &ST_Coordinate{}
			_fggfa.ST_Coordinate.ST_CoordinateUnqualified = &_acgfd
		}
	}
	return _fggfa, nil
}

// Validate validates the CT_DashStopList and its children
func (_aggf *CT_DashStopList) Validate() error {
	return _aggf.ValidateWithPath("\u0043T\u005fD\u0061\u0073\u0068\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_TextParagraphProperties and its children, prefixing error messages with path
func (_debeg *CT_TextParagraphProperties) ValidateWithPath(path string) error {
	if _debeg.MarLAttr != nil {
		if *_debeg.MarLAttr < 0 {
			return _gf.Errorf("\u0025\u0073/m\u002e\u004d\u0061r\u004c\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_debeg.MarLAttr)
		}
		if *_debeg.MarLAttr > 51206400 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u004d\u0061r\u004c\u0041\u0074t\u0072\u0020\u006d\u0075s\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_debeg.MarLAttr)
		}
	}
	if _debeg.MarRAttr != nil {
		if *_debeg.MarRAttr < 0 {
			return _gf.Errorf("\u0025\u0073/m\u002e\u004d\u0061r\u0052\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_debeg.MarRAttr)
		}
		if *_debeg.MarRAttr > 51206400 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u004d\u0061r\u0052\u0041\u0074t\u0072\u0020\u006d\u0075s\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_debeg.MarRAttr)
		}
	}
	if _debeg.LvlAttr != nil {
		if *_debeg.LvlAttr < 0 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u004c\u0076l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_debeg.LvlAttr)
		}
		if *_debeg.LvlAttr > 8 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u004c\u0076l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003c=\u0020\u0038\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_debeg.LvlAttr)
		}
	}
	if _debeg.IndentAttr != nil {
		if *_debeg.IndentAttr < -51206400 {
			return _gf.Errorf("\u0025\u0073/\u006d\u002e\u0049\u006e\u0064\u0065\u006e\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u002d\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_debeg.IndentAttr)
		}
		if *_debeg.IndentAttr > 51206400 {
			return _gf.Errorf("\u0025s\u002f\u006d.\u0049\u006e\u0064e\u006e\u0074\u0041\u0074\u0074\u0072\u0020m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_debeg.IndentAttr)
		}
	}
	if _gdfdg := _debeg.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _gdfdg != nil {
		return _gdfdg
	}
	if _debeg.DefTabSzAttr != nil {
		if _dafba := _debeg.DefTabSzAttr.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0054\u0061\u0062\u0053\u007a\u0041\u0074\u0074\u0072"); _dafba != nil {
			return _dafba
		}
	}
	if _bffbc := _debeg.FontAlgnAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0041\u006c\u0067\u006e\u0041\u0074\u0074\u0072"); _bffbc != nil {
		return _bffbc
	}
	if _debeg.LnSpc != nil {
		if _gceba := _debeg.LnSpc.ValidateWithPath(path + "\u002f\u004c\u006e\u0053\u0070\u0063"); _gceba != nil {
			return _gceba
		}
	}
	if _debeg.SpcBef != nil {
		if _gbfab := _debeg.SpcBef.ValidateWithPath(path + "\u002fS\u0070\u0063\u0042\u0065\u0066"); _gbfab != nil {
			return _gbfab
		}
	}
	if _debeg.SpcAft != nil {
		if _cfgg := _debeg.SpcAft.ValidateWithPath(path + "\u002fS\u0070\u0063\u0041\u0066\u0074"); _cfgg != nil {
			return _cfgg
		}
	}
	if _debeg.BuClrTx != nil {
		if _bffda := _debeg.BuClrTx.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072\u0054\u0078"); _bffda != nil {
			return _bffda
		}
	}
	if _debeg.BuClr != nil {
		if _dafeag := _debeg.BuClr.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072"); _dafeag != nil {
			return _dafeag
		}
	}
	if _debeg.BuSzTx != nil {
		if _bgegga := _debeg.BuSzTx.ValidateWithPath(path + "\u002fB\u0075\u0053\u007a\u0054\u0078"); _bgegga != nil {
			return _bgegga
		}
	}
	if _debeg.BuSzPct != nil {
		if _cfbef := _debeg.BuSzPct.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0063\u0074"); _cfbef != nil {
			return _cfbef
		}
	}
	if _debeg.BuSzPts != nil {
		if _fdfdf := _debeg.BuSzPts.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0074\u0073"); _fdfdf != nil {
			return _fdfdf
		}
	}
	if _debeg.BuFontTx != nil {
		if _ddggc := _debeg.BuFontTx.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074\u0054x"); _ddggc != nil {
			return _ddggc
		}
	}
	if _debeg.BuFont != nil {
		if _dfagdg := _debeg.BuFont.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074"); _dfagdg != nil {
			return _dfagdg
		}
	}
	if _debeg.BuNone != nil {
		if _egadc := _debeg.BuNone.ValidateWithPath(path + "\u002fB\u0075\u004e\u006f\u006e\u0065"); _egadc != nil {
			return _egadc
		}
	}
	if _debeg.BuAutoNum != nil {
		if _badee := _debeg.BuAutoNum.ValidateWithPath(path + "\u002f\u0042\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"); _badee != nil {
			return _badee
		}
	}
	if _debeg.BuChar != nil {
		if _efadb := _debeg.BuChar.ValidateWithPath(path + "\u002fB\u0075\u0043\u0068\u0061\u0072"); _efadb != nil {
			return _efadb
		}
	}
	if _debeg.BuBlip != nil {
		if _ggbec := _debeg.BuBlip.ValidateWithPath(path + "\u002fB\u0075\u0042\u006c\u0069\u0070"); _ggbec != nil {
			return _ggbec
		}
	}
	if _debeg.TabLst != nil {
		if _gdafg := _debeg.TabLst.ValidateWithPath(path + "\u002fT\u0061\u0062\u004c\u0073\u0074"); _gdafg != nil {
			return _gdafg
		}
	}
	if _debeg.DefRPr != nil {
		if _dgdebd := _debeg.DefRPr.ValidateWithPath(path + "\u002fD\u0065\u0066\u0052\u0050\u0072"); _dgdebd != nil {
			return _dgdebd
		}
	}
	if _debeg.ExtLst != nil {
		if _abcff := _debeg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abcff != nil {
			return _abcff
		}
	}
	return nil
}

type CT_Hyperlink struct {
	IdAttr             *string
	InvalidUrlAttr     *string
	ActionAttr         *string
	TgtFrameAttr       *string
	TooltipAttr        *string
	HistoryAttr        *bool
	HighlightClickAttr *bool
	EndSndAttr         *bool
	Snd                *CT_EmbeddedWAVAudioFile
	ExtLst             *CT_OfficeArtExtensionList
}

func (_bgged ST_TextPoint) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _bgged.ST_TextPointUnqualified != nil {
		e.EncodeToken(_g.CharData(_gf.Sprintf("\u0025\u0064", *_bgged.ST_TextPointUnqualified)))
	}
	if _bgged.ST_UniversalMeasure != nil {
		e.EncodeToken(_g.CharData(*_bgged.ST_UniversalMeasure))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

type ST_TextTabAlignType byte

type ST_PitchFamily byte

func NewEG_FillProperties() *EG_FillProperties { _gfcfdb := &EG_FillProperties{}; return _gfcfdb }

func (_cbafe *CT_CustomGeometry2D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cbafe.PathLst = NewCT_Path2DList()
_cdeb:
	for {
		_gfdcc, _fbdb := d.Token()
		if _fbdb != nil {
			return _fbdb
		}
		switch _fgdga := _gfdcc.(type) {
		case _g.StartElement:
			switch _fgdga.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}:
				_cbafe.AvLst = NewCT_GeomGuideList()
				if _fabag := d.DecodeElement(_cbafe.AvLst, &_fgdga); _fabag != nil {
					return _fabag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064\u004cs\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064\u004cs\u0074"}:
				_cbafe.GdLst = NewCT_GeomGuideList()
				if _cebcf := d.DecodeElement(_cbafe.GdLst, &_fgdga); _cebcf != nil {
					return _cebcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u004cs\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u004cs\u0074"}:
				_cbafe.AhLst = NewCT_AdjustHandleList()
				if _bdec := d.DecodeElement(_cbafe.AhLst, &_fgdga); _bdec != nil {
					return _bdec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u004c\u0073\u0074"}:
				_cbafe.CxnLst = NewCT_ConnectionSiteList()
				if _fcfbg := d.DecodeElement(_cbafe.CxnLst, &_fgdga); _fcfbg != nil {
					return _fcfbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0063\u0074"}:
				_cbafe.Rect = NewCT_GeomRect()
				if _bebe := d.DecodeElement(_cbafe.Rect, &_fgdga); _bebe != nil {
					return _bebe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0074\u0068\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0074\u0068\u004c\u0073\u0074"}:
				if _bbdg := d.DecodeElement(_cbafe.PathLst, &_fgdga); _bbdg != nil {
					return _bbdg
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0047eo\u006d\u0065\u0074\u0072\u0079\u0032\u0044\u0020\u0025\u0076", _fgdga.Name)
				if _abbfd := d.Skip(); _abbfd != nil {
					return _abbfd
				}
			}
		case _g.EndElement:
			break _cdeb
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlUseShapeRectangle and its children, prefixing error messages with path
func (_acfd *CT_GvmlUseShapeRectangle) ValidateWithPath(path string) error { return nil }

func (_gaebf *CT_GroupShapeProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gaebf.BwModeAttr != ST_BlackWhiteModeUnset {
		_ebfff, _fagec := _gaebf.BwModeAttr.MarshalXMLAttr(_g.Name{Local: "\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _fagec != nil {
			return _fagec
		}
		start.Attr = append(start.Attr, _ebfff)
	}
	e.EncodeToken(start)
	if _gaebf.Xfrm != nil {
		_gbgbd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_gaebf.Xfrm, _gbgbd)
	}
	if _gaebf.NoFill != nil {
		_fdecad := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gaebf.NoFill, _fdecad)
	}
	if _gaebf.SolidFill != nil {
		_gfaga := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gaebf.SolidFill, _gfaga)
	}
	if _gaebf.GradFill != nil {
		_abad := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gaebf.GradFill, _abad)
	}
	if _gaebf.BlipFill != nil {
		_bdecc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gaebf.BlipFill, _bdecc)
	}
	if _gaebf.PattFill != nil {
		_faabb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gaebf.PattFill, _faabb)
	}
	if _gaebf.GrpFill != nil {
		_deaf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_gaebf.GrpFill, _deaf)
	}
	if _gaebf.EffectLst != nil {
		_aefd := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gaebf.EffectLst, _aefd)
	}
	if _gaebf.EffectDag != nil {
		_cfcc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_gaebf.EffectDag, _cfcc)
	}
	if _gaebf.Scene3d != nil {
		_dbgeb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_gaebf.Scene3d, _dbgeb)
	}
	if _gaebf.ExtLst != nil {
		_bebec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gaebf.ExtLst, _bebec)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextListStyle and its children, prefixing error messages with path
func (_gcbed *CT_TextListStyle) ValidateWithPath(path string) error {
	if _gcbed.DefPPr != nil {
		if _eebb := _gcbed.DefPPr.ValidateWithPath(path + "\u002fD\u0065\u0066\u0050\u0050\u0072"); _eebb != nil {
			return _eebb
		}
	}
	if _gcbed.Lvl1pPr != nil {
		if _cbagf := _gcbed.Lvl1pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0031\u0070\u0050\u0072"); _cbagf != nil {
			return _cbagf
		}
	}
	if _gcbed.Lvl2pPr != nil {
		if _efefaf := _gcbed.Lvl2pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0032\u0070\u0050\u0072"); _efefaf != nil {
			return _efefaf
		}
	}
	if _gcbed.Lvl3pPr != nil {
		if _bedfd := _gcbed.Lvl3pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0033\u0070\u0050\u0072"); _bedfd != nil {
			return _bedfd
		}
	}
	if _gcbed.Lvl4pPr != nil {
		if _bdabbc := _gcbed.Lvl4pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0034\u0070\u0050\u0072"); _bdabbc != nil {
			return _bdabbc
		}
	}
	if _gcbed.Lvl5pPr != nil {
		if _cdeddb := _gcbed.Lvl5pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0035\u0070\u0050\u0072"); _cdeddb != nil {
			return _cdeddb
		}
	}
	if _gcbed.Lvl6pPr != nil {
		if _acdfg := _gcbed.Lvl6pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0036\u0070\u0050\u0072"); _acdfg != nil {
			return _acdfg
		}
	}
	if _gcbed.Lvl7pPr != nil {
		if _eaeaf := _gcbed.Lvl7pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0037\u0070\u0050\u0072"); _eaeaf != nil {
			return _eaeaf
		}
	}
	if _gcbed.Lvl8pPr != nil {
		if _gfddb := _gcbed.Lvl8pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0038\u0070\u0050\u0072"); _gfddb != nil {
			return _gfddb
		}
	}
	if _gcbed.Lvl9pPr != nil {
		if _ddcd := _gcbed.Lvl9pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0039\u0070\u0050\u0072"); _ddcd != nil {
			return _ddcd
		}
	}
	if _gcbed.ExtLst != nil {
		if _aeafd := _gcbed.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aeafd != nil {
			return _aeafd
		}
	}
	return nil
}

func (_bfeb *CT_ColorMappingOverride) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bfeb.Choice = NewCT_ColorMappingOverrideChoice()
_daga:
	for {
		_aecg, _bgae := d.Token()
		if _bgae != nil {
			return _bgae
		}
		switch _cfbg := _aecg.(type) {
		case _g.StartElement:
			switch _cfbg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}:
				_bfeb.Choice = NewCT_ColorMappingOverrideChoice()
				if _bfff := d.DecodeElement(&_bfeb.Choice.MasterClrMapping, &_cfbg); _bfff != nil {
					return _bfff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}:
				_bfeb.Choice = NewCT_ColorMappingOverrideChoice()
				if _edfb := d.DecodeElement(&_bfeb.Choice.OverrideClrMapping, &_cfbg); _edfb != nil {
					return _edfb
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070i\u006e\u0067\u004f\u0076\u0065\u0072r\u0069\u0064\u0065 \u0025\u0076", _cfbg.Name)
				if _eaba := d.Skip(); _eaba != nil {
					return _eaba
				}
			}
		case _g.EndElement:
			break _daga
		case _g.CharData:
		}
	}
	return nil
}

func (_aaea *CT_Headers) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dcbdbc:
	for {
		_ggff, _dfaa := d.Token()
		if _dfaa != nil {
			return _dfaa
		}
		switch _cgdfg := _ggff.(type) {
		case _g.StartElement:
			switch _cgdfg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}:
				var _gefe string
				if _dgbe := d.DecodeElement(&_gefe, &_cgdfg); _dgbe != nil {
					return _dgbe
				}
				_aaea.Header = append(_aaea.Header, _gefe)
			default:
				_b.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fH\u0065\u0061\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _cgdfg.Name)
				if _bcbd := d.Skip(); _bcbd != nil {
					return _bcbd
				}
			}
		case _g.EndElement:
			break _dcbdbc
		case _g.CharData:
		}
	}
	return nil
}

func (_ebgec ST_Coordinate32) String() string {
	if _ebgec.ST_Coordinate32Unqualified != nil {
		return _gf.Sprintf("\u0025\u0076", *_ebgec.ST_Coordinate32Unqualified)
	}
	if _ebgec.ST_UniversalMeasure != nil {
		return _gf.Sprintf("\u0025\u0076", *_ebgec.ST_UniversalMeasure)
	}
	return ""
}

// ValidateWithPath validates the CT_GroupShapeProperties and its children, prefixing error messages with path
func (_afcfe *CT_GroupShapeProperties) ValidateWithPath(path string) error {
	if _bbdc := _afcfe.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _bbdc != nil {
		return _bbdc
	}
	if _afcfe.Xfrm != nil {
		if _ggbb := _afcfe.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _ggbb != nil {
			return _ggbb
		}
	}
	if _afcfe.NoFill != nil {
		if _cceag := _afcfe.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _cceag != nil {
			return _cceag
		}
	}
	if _afcfe.SolidFill != nil {
		if _bdgf := _afcfe.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _bdgf != nil {
			return _bdgf
		}
	}
	if _afcfe.GradFill != nil {
		if _gfafg := _afcfe.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _gfafg != nil {
			return _gfafg
		}
	}
	if _afcfe.BlipFill != nil {
		if _bgaeg := _afcfe.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _bgaeg != nil {
			return _bgaeg
		}
	}
	if _afcfe.PattFill != nil {
		if _afeb := _afcfe.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _afeb != nil {
			return _afeb
		}
	}
	if _afcfe.GrpFill != nil {
		if _gfbdf := _afcfe.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _gfbdf != nil {
			return _gfbdf
		}
	}
	if _afcfe.EffectLst != nil {
		if _aegbe := _afcfe.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _aegbe != nil {
			return _aegbe
		}
	}
	if _afcfe.EffectDag != nil {
		if _bfbfc := _afcfe.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _bfbfc != nil {
			return _bfbfc
		}
	}
	if _afcfe.Scene3d != nil {
		if _fbeb := _afcfe.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _fbeb != nil {
			return _fbeb
		}
	}
	if _afcfe.ExtLst != nil {
		if _babcc := _afcfe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _babcc != nil {
			return _babcc
		}
	}
	return nil
}

func (_cadceb ST_RectAlignment) ValidateWithPath(path string) error {
	switch _cadceb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cadceb))
	}
	return nil
}

// Validate validates the CT_ConnectionSiteList and its children
func (_adaaa *CT_ConnectionSiteList) Validate() error {
	return _adaaa.ValidateWithPath("C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u0069\u006f\u006e\u0053i\u0074\u0065\u004c\u0069\u0073\u0074")
}

// Validate validates the CT_FixedPercentage and its children
func (_gdfadg *CT_FixedPercentage) Validate() error {
	return _gdfadg.ValidateWithPath("\u0043T\u005fF\u0069\u0078\u0065\u0064\u0050e\u0072\u0063e\u006e\u0074\u0061\u0067\u0065")
}

func (_cafe *CT_EmptyElement) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cffff *ST_TextAnchoringType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cffff = 0
	case "\u0074":
		*_cffff = 1
	case "\u0063\u0074\u0072":
		*_cffff = 2
	case "\u0062":
		*_cffff = 3
	case "\u006a\u0075\u0073\u0074":
		*_cffff = 4
	case "\u0064\u0069\u0073\u0074":
		*_cffff = 5
	}
	return nil
}

func (_abdag ST_TextHorzOverflowType) Validate() error { return _abdag.ValidateWithPath("") }

func (_eccgf *CT_TextBulletTypefaceFollowText) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_ccfda, _cdbeg := d.Token()
		if _cdbeg != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005fT\u0065\u0078\u0074\u0042u\u006c\u006c\u0065\u0074\u0054\u0079\u0070\u0065\u0066\u0061\u0063\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _cdbeg)
		}
		if _cggce, _ceeab := _ccfda.(_g.EndElement); _ceeab && _cggce.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_AudioCDTime() *CT_AudioCDTime { _egdg := &CT_AudioCDTime{}; return _egdg }

type CT_ColorMRU struct{ EG_ColorChoice []*EG_ColorChoice }

func (_acedga ST_EffectContainerType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_acedga.String(), start)
}

func (_efd *CT_AlphaModulateEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_beg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
	e.EncodeElement(_efd.Cont, _beg)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_TextBulletTypeface and its children
func (_bcaef *EG_TextBulletTypeface) Validate() error {
	return _bcaef.ValidateWithPath("E\u0047\u005f\u0054\u0065xt\u0042u\u006c\u006c\u0065\u0074\u0054y\u0070\u0065\u0066\u0061\u0063\u0065")
}

func (_ccfcgc *CT_Scale2D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ccfcgc.Sx = NewCT_Ratio()
	_ccfcgc.Sy = NewCT_Ratio()
_baeeb:
	for {
		_bbdd, _fdbed := d.Token()
		if _fdbed != nil {
			return _fdbed
		}
		switch _fggca := _bbdd.(type) {
		case _g.StartElement:
			switch _fggca.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0078"}:
				if _bbadg := d.DecodeElement(_ccfcgc.Sx, &_fggca); _bbadg != nil {
					return _bbadg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079"}:
				if _edge := d.DecodeElement(_ccfcgc.Sy, &_fggca); _edge != nil {
					return _edge
				}
			default:
				_b.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0063\u0061\u006c\u0065\u0032\u0044\u0020\u0025\u0076", _fggca.Name)
				if _daefd := d.Skip(); _daefd != nil {
					return _daefd
				}
			}
		case _g.EndElement:
			break _baeeb
		case _g.CharData:
		}
	}
	return nil
}

func (_eagfa ST_ShapeType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cafdf := _g.Attr{}
	_cafdf.Name = name
	switch _eagfa {
	case ST_ShapeTypeUnset:
		_cafdf.Value = ""
	case ST_ShapeTypeLine:
		_cafdf.Value = "\u006c\u0069\u006e\u0065"
	case ST_ShapeTypeLineInv:
		_cafdf.Value = "\u006ci\u006e\u0065\u0049\u006e\u0076"
	case ST_ShapeTypeTriangle:
		_cafdf.Value = "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_ShapeTypeRtTriangle:
		_cafdf.Value = "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_ShapeTypeRect:
		_cafdf.Value = "\u0072\u0065\u0063\u0074"
	case ST_ShapeTypeDiamond:
		_cafdf.Value = "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case ST_ShapeTypeParallelogram:
		_cafdf.Value = "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d"
	case ST_ShapeTypeTrapezoid:
		_cafdf.Value = "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d"
	case ST_ShapeTypeNonIsoscelesTrapezoid:
		_cafdf.Value = "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064"
	case ST_ShapeTypePentagon:
		_cafdf.Value = "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeHexagon:
		_cafdf.Value = "\u0068e\u0078\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeHeptagon:
		_cafdf.Value = "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeOctagon:
		_cafdf.Value = "\u006fc\u0074\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeDecagon:
		_cafdf.Value = "\u0064e\u0063\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeDodecagon:
		_cafdf.Value = "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn"
	case ST_ShapeTypeStar4:
		_cafdf.Value = "\u0073\u0074\u0061r\u0034"
	case ST_ShapeTypeStar5:
		_cafdf.Value = "\u0073\u0074\u0061r\u0035"
	case ST_ShapeTypeStar6:
		_cafdf.Value = "\u0073\u0074\u0061r\u0036"
	case ST_ShapeTypeStar7:
		_cafdf.Value = "\u0073\u0074\u0061r\u0037"
	case ST_ShapeTypeStar8:
		_cafdf.Value = "\u0073\u0074\u0061r\u0038"
	case ST_ShapeTypeStar10:
		_cafdf.Value = "\u0073\u0074\u0061\u0072\u0031\u0030"
	case ST_ShapeTypeStar12:
		_cafdf.Value = "\u0073\u0074\u0061\u0072\u0031\u0032"
	case ST_ShapeTypeStar16:
		_cafdf.Value = "\u0073\u0074\u0061\u0072\u0031\u0036"
	case ST_ShapeTypeStar24:
		_cafdf.Value = "\u0073\u0074\u0061\u0072\u0032\u0034"
	case ST_ShapeTypeStar32:
		_cafdf.Value = "\u0073\u0074\u0061\u0072\u0033\u0032"
	case ST_ShapeTypeRoundRect:
		_cafdf.Value = "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t"
	case ST_ShapeTypeRound1Rect:
		_cafdf.Value = "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeRound2SameRect:
		_cafdf.Value = "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeRound2DiagRect:
		_cafdf.Value = "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeSnipRoundRect:
		_cafdf.Value = "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeSnip1Rect:
		_cafdf.Value = "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t"
	case ST_ShapeTypeSnip2SameRect:
		_cafdf.Value = "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeSnip2DiagRect:
		_cafdf.Value = "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074"
	case ST_ShapeTypePlaque:
		_cafdf.Value = "\u0070\u006c\u0061\u0071\u0075\u0065"
	case ST_ShapeTypeEllipse:
		_cafdf.Value = "\u0065l\u006c\u0069\u0070\u0073\u0065"
	case ST_ShapeTypeTeardrop:
		_cafdf.Value = "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070"
	case ST_ShapeTypeHomePlate:
		_cafdf.Value = "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e"
	case ST_ShapeTypeChevron:
		_cafdf.Value = "\u0063h\u0065\u0076\u0072\u006f\u006e"
	case ST_ShapeTypePieWedge:
		_cafdf.Value = "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065"
	case ST_ShapeTypePie:
		_cafdf.Value = "\u0070\u0069\u0065"
	case ST_ShapeTypeBlockArc:
		_cafdf.Value = "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063"
	case ST_ShapeTypeDonut:
		_cafdf.Value = "\u0064\u006f\u006eu\u0074"
	case ST_ShapeTypeNoSmoking:
		_cafdf.Value = "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg"
	case ST_ShapeTypeRightArrow:
		_cafdf.Value = "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftArrow:
		_cafdf.Value = "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeUpArrow:
		_cafdf.Value = "\u0075p\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeDownArrow:
		_cafdf.Value = "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeStripedRightArrow:
		_cafdf.Value = "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeNotchedRightArrow:
		_cafdf.Value = "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeBentUpArrow:
		_cafdf.Value = "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftRightArrow:
		_cafdf.Value = "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeUpDownArrow:
		_cafdf.Value = "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftUpArrow:
		_cafdf.Value = "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftRightUpArrow:
		_cafdf.Value = "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeQuadArrow:
		_cafdf.Value = "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeLeftArrowCallout:
		_cafdf.Value = "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeRightArrowCallout:
		_cafdf.Value = "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeUpArrowCallout:
		_cafdf.Value = "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeDownArrowCallout:
		_cafdf.Value = "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeLeftRightArrowCallout:
		_cafdf.Value = "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeUpDownArrowCallout:
		_cafdf.Value = "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeQuadArrowCallout:
		_cafdf.Value = "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeBentArrow:
		_cafdf.Value = "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeUturnArrow:
		_cafdf.Value = "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCircularArrow:
		_cafdf.Value = "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftCircularArrow:
		_cafdf.Value = "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftRightCircularArrow:
		_cafdf.Value = "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077"
	case ST_ShapeTypeCurvedRightArrow:
		_cafdf.Value = "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCurvedLeftArrow:
		_cafdf.Value = "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCurvedUpArrow:
		_cafdf.Value = "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCurvedDownArrow:
		_cafdf.Value = "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeSwooshArrow:
		_cafdf.Value = "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCube:
		_cafdf.Value = "\u0063\u0075\u0062\u0065"
	case ST_ShapeTypeCan:
		_cafdf.Value = "\u0063\u0061\u006e"
	case ST_ShapeTypeLightningBolt:
		_cafdf.Value = "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074"
	case ST_ShapeTypeHeart:
		_cafdf.Value = "\u0068\u0065\u0061r\u0074"
	case ST_ShapeTypeSun:
		_cafdf.Value = "\u0073\u0075\u006e"
	case ST_ShapeTypeMoon:
		_cafdf.Value = "\u006d\u006f\u006f\u006e"
	case ST_ShapeTypeSmileyFace:
		_cafdf.Value = "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065"
	case ST_ShapeTypeIrregularSeal1:
		_cafdf.Value = "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031"
	case ST_ShapeTypeIrregularSeal2:
		_cafdf.Value = "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032"
	case ST_ShapeTypeFoldedCorner:
		_cafdf.Value = "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072"
	case ST_ShapeTypeBevel:
		_cafdf.Value = "\u0062\u0065\u0076e\u006c"
	case ST_ShapeTypeFrame:
		_cafdf.Value = "\u0066\u0072\u0061m\u0065"
	case ST_ShapeTypeHalfFrame:
		_cafdf.Value = "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de"
	case ST_ShapeTypeCorner:
		_cafdf.Value = "\u0063\u006f\u0072\u006e\u0065\u0072"
	case ST_ShapeTypeDiagStripe:
		_cafdf.Value = "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065"
	case ST_ShapeTypeChord:
		_cafdf.Value = "\u0063\u0068\u006fr\u0064"
	case ST_ShapeTypeArc:
		_cafdf.Value = "\u0061\u0072\u0063"
	case ST_ShapeTypeLeftBracket:
		_cafdf.Value = "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case ST_ShapeTypeRightBracket:
		_cafdf.Value = "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case ST_ShapeTypeLeftBrace:
		_cafdf.Value = "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e"
	case ST_ShapeTypeRightBrace:
		_cafdf.Value = "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065"
	case ST_ShapeTypeBracketPair:
		_cafdf.Value = "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072"
	case ST_ShapeTypeBracePair:
		_cafdf.Value = "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r"
	case ST_ShapeTypeStraightConnector1:
		_cafdf.Value = "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031"
	case ST_ShapeTypeBentConnector2:
		_cafdf.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032"
	case ST_ShapeTypeBentConnector3:
		_cafdf.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033"
	case ST_ShapeTypeBentConnector4:
		_cafdf.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034"
	case ST_ShapeTypeBentConnector5:
		_cafdf.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035"
	case ST_ShapeTypeCurvedConnector2:
		_cafdf.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032"
	case ST_ShapeTypeCurvedConnector3:
		_cafdf.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033"
	case ST_ShapeTypeCurvedConnector4:
		_cafdf.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034"
	case ST_ShapeTypeCurvedConnector5:
		_cafdf.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035"
	case ST_ShapeTypeCallout1:
		_cafdf.Value = "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031"
	case ST_ShapeTypeCallout2:
		_cafdf.Value = "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032"
	case ST_ShapeTypeCallout3:
		_cafdf.Value = "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033"
	case ST_ShapeTypeAccentCallout1:
		_cafdf.Value = "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case ST_ShapeTypeAccentCallout2:
		_cafdf.Value = "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case ST_ShapeTypeAccentCallout3:
		_cafdf.Value = "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case ST_ShapeTypeBorderCallout1:
		_cafdf.Value = "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case ST_ShapeTypeBorderCallout2:
		_cafdf.Value = "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case ST_ShapeTypeBorderCallout3:
		_cafdf.Value = "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case ST_ShapeTypeAccentBorderCallout1:
		_cafdf.Value = "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031"
	case ST_ShapeTypeAccentBorderCallout2:
		_cafdf.Value = "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032"
	case ST_ShapeTypeAccentBorderCallout3:
		_cafdf.Value = "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033"
	case ST_ShapeTypeWedgeRectCallout:
		_cafdf.Value = "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeWedgeRoundRectCallout:
		_cafdf.Value = "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeWedgeEllipseCallout:
		_cafdf.Value = "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeCloudCallout:
		_cafdf.Value = "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeCloud:
		_cafdf.Value = "\u0063\u006c\u006fu\u0064"
	case ST_ShapeTypeRibbon:
		_cafdf.Value = "\u0072\u0069\u0062\u0062\u006f\u006e"
	case ST_ShapeTypeRibbon2:
		_cafdf.Value = "\u0072i\u0062\u0062\u006f\u006e\u0032"
	case ST_ShapeTypeEllipseRibbon:
		_cafdf.Value = "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e"
	case ST_ShapeTypeEllipseRibbon2:
		_cafdf.Value = "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032"
	case ST_ShapeTypeLeftRightRibbon:
		_cafdf.Value = "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e"
	case ST_ShapeTypeVerticalScroll:
		_cafdf.Value = "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c"
	case ST_ShapeTypeHorizontalScroll:
		_cafdf.Value = "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c"
	case ST_ShapeTypeWave:
		_cafdf.Value = "\u0077\u0061\u0076\u0065"
	case ST_ShapeTypeDoubleWave:
		_cafdf.Value = "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065"
	case ST_ShapeTypePlus:
		_cafdf.Value = "\u0070\u006c\u0075\u0073"
	case ST_ShapeTypeFlowChartProcess:
		_cafdf.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073"
	case ST_ShapeTypeFlowChartDecision:
		_cafdf.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e"
	case ST_ShapeTypeFlowChartInputOutput:
		_cafdf.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074"
	case ST_ShapeTypeFlowChartPredefinedProcess:
		_cafdf.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073"
	case ST_ShapeTypeFlowChartInternalStorage:
		_cafdf.Value = "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case ST_ShapeTypeFlowChartDocument:
		_cafdf.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074"
	case ST_ShapeTypeFlowChartMultidocument:
		_cafdf.Value = "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074"
	case ST_ShapeTypeFlowChartTerminator:
		_cafdf.Value = "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072"
	case ST_ShapeTypeFlowChartPreparation:
		_cafdf.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e"
	case ST_ShapeTypeFlowChartManualInput:
		_cafdf.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074"
	case ST_ShapeTypeFlowChartManualOperation:
		_cafdf.Value = "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e"
	case ST_ShapeTypeFlowChartConnector:
		_cafdf.Value = "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072"
	case ST_ShapeTypeFlowChartPunchedCard:
		_cafdf.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064"
	case ST_ShapeTypeFlowChartPunchedTape:
		_cafdf.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065"
	case ST_ShapeTypeFlowChartSummingJunction:
		_cafdf.Value = "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e"
	case ST_ShapeTypeFlowChartOr:
		_cafdf.Value = "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072"
	case ST_ShapeTypeFlowChartCollate:
		_cafdf.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065"
	case ST_ShapeTypeFlowChartSort:
		_cafdf.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074"
	case ST_ShapeTypeFlowChartExtract:
		_cafdf.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074"
	case ST_ShapeTypeFlowChartMerge:
		_cafdf.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065"
	case ST_ShapeTypeFlowChartOfflineStorage:
		_cafdf.Value = "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case ST_ShapeTypeFlowChartOnlineStorage:
		_cafdf.Value = "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065"
	case ST_ShapeTypeFlowChartMagneticTape:
		_cafdf.Value = "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065"
	case ST_ShapeTypeFlowChartMagneticDisk:
		_cafdf.Value = "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b"
	case ST_ShapeTypeFlowChartMagneticDrum:
		_cafdf.Value = "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d"
	case ST_ShapeTypeFlowChartDisplay:
		_cafdf.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079"
	case ST_ShapeTypeFlowChartDelay:
		_cafdf.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079"
	case ST_ShapeTypeFlowChartAlternateProcess:
		_cafdf.Value = "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s"
	case ST_ShapeTypeFlowChartOffpageConnector:
		_cafdf.Value = "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr"
	case ST_ShapeTypeActionButtonBlank:
		_cafdf.Value = "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b"
	case ST_ShapeTypeActionButtonHome:
		_cafdf.Value = "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065"
	case ST_ShapeTypeActionButtonHelp:
		_cafdf.Value = "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070"
	case ST_ShapeTypeActionButtonInformation:
		_cafdf.Value = "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	case ST_ShapeTypeActionButtonForwardNext:
		_cafdf.Value = "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074"
	case ST_ShapeTypeActionButtonBackPrevious:
		_cafdf.Value = "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073"
	case ST_ShapeTypeActionButtonEnd:
		_cafdf.Value = "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064"
	case ST_ShapeTypeActionButtonBeginning:
		_cafdf.Value = "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067"
	case ST_ShapeTypeActionButtonReturn:
		_cafdf.Value = "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e"
	case ST_ShapeTypeActionButtonDocument:
		_cafdf.Value = "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074"
	case ST_ShapeTypeActionButtonSound:
		_cafdf.Value = "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064"
	case ST_ShapeTypeActionButtonMovie:
		_cafdf.Value = "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065"
	case ST_ShapeTypeGear6:
		_cafdf.Value = "\u0067\u0065\u0061r\u0036"
	case ST_ShapeTypeGear9:
		_cafdf.Value = "\u0067\u0065\u0061r\u0039"
	case ST_ShapeTypeFunnel:
		_cafdf.Value = "\u0066\u0075\u006e\u006e\u0065\u006c"
	case ST_ShapeTypeMathPlus:
		_cafdf.Value = "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073"
	case ST_ShapeTypeMathMinus:
		_cafdf.Value = "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s"
	case ST_ShapeTypeMathMultiply:
		_cafdf.Value = "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079"
	case ST_ShapeTypeMathDivide:
		_cafdf.Value = "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065"
	case ST_ShapeTypeMathEqual:
		_cafdf.Value = "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l"
	case ST_ShapeTypeMathNotEqual:
		_cafdf.Value = "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_ShapeTypeCornerTabs:
		_cafdf.Value = "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073"
	case ST_ShapeTypeSquareTabs:
		_cafdf.Value = "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073"
	case ST_ShapeTypePlaqueTabs:
		_cafdf.Value = "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073"
	case ST_ShapeTypeChartX:
		_cafdf.Value = "\u0063\u0068\u0061\u0072\u0074\u0058"
	case ST_ShapeTypeChartStar:
		_cafdf.Value = "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r"
	case ST_ShapeTypeChartPlus:
		_cafdf.Value = "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s"
	}
	return _cafdf, nil
}

func NewGraphic() *Graphic {
	_bfda := &Graphic{}
	_bfda.CT_GraphicalObject = *NewCT_GraphicalObject()
	return _bfda
}

// ValidateWithPath validates the CT_AnimationChartBuildProperties and its children, prefixing error messages with path
func (_dad *CT_AnimationChartBuildProperties) ValidateWithPath(path string) error {
	if _dad.BldAttr != nil {
		if _fed := _dad.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _fed != nil {
			return _fed
		}
	}
	return nil
}

// Validate validates the CT_ColorMappingOverrideChoice and its children
func (_cabg *CT_ColorMappingOverrideChoice) Validate() error {
	return _cabg.ValidateWithPath("\u0043\u0054_\u0043\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0043\u0068oi\u0063\u0065")
}

// Validate validates the EG_TextUnderlineLine and its children
func (_beagd *EG_TextUnderlineLine) Validate() error {
	return _beagd.ValidateWithPath("E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Li\u006e\u0065")
}

func NewCT_GroupLocking() *CT_GroupLocking { _gbcd := &CT_GroupLocking{}; return _gbcd }

func (_aefee *CT_GvmlConnector) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_affb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u006e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_aefee.NvCxnSpPr, _affb)
	_ebgag := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_aefee.SpPr, _ebgag)
	if _aefee.Style != nil {
		_eadca := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_aefee.Style, _eadca)
	}
	if _aefee.ExtLst != nil {
		_ffgeb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aefee.ExtLst, _ffgeb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_PresetCameraTypeUnset                               ST_PresetCameraType = 0
	ST_PresetCameraTypeLegacyObliqueTopLeft                ST_PresetCameraType = 1
	ST_PresetCameraTypeLegacyObliqueTop                    ST_PresetCameraType = 2
	ST_PresetCameraTypeLegacyObliqueTopRight               ST_PresetCameraType = 3
	ST_PresetCameraTypeLegacyObliqueLeft                   ST_PresetCameraType = 4
	ST_PresetCameraTypeLegacyObliqueFront                  ST_PresetCameraType = 5
	ST_PresetCameraTypeLegacyObliqueRight                  ST_PresetCameraType = 6
	ST_PresetCameraTypeLegacyObliqueBottomLeft             ST_PresetCameraType = 7
	ST_PresetCameraTypeLegacyObliqueBottom                 ST_PresetCameraType = 8
	ST_PresetCameraTypeLegacyObliqueBottomRight            ST_PresetCameraType = 9
	ST_PresetCameraTypeLegacyPerspectiveTopLeft            ST_PresetCameraType = 10
	ST_PresetCameraTypeLegacyPerspectiveTop                ST_PresetCameraType = 11
	ST_PresetCameraTypeLegacyPerspectiveTopRight           ST_PresetCameraType = 12
	ST_PresetCameraTypeLegacyPerspectiveLeft               ST_PresetCameraType = 13
	ST_PresetCameraTypeLegacyPerspectiveFront              ST_PresetCameraType = 14
	ST_PresetCameraTypeLegacyPerspectiveRight              ST_PresetCameraType = 15
	ST_PresetCameraTypeLegacyPerspectiveBottomLeft         ST_PresetCameraType = 16
	ST_PresetCameraTypeLegacyPerspectiveBottom             ST_PresetCameraType = 17
	ST_PresetCameraTypeLegacyPerspectiveBottomRight        ST_PresetCameraType = 18
	ST_PresetCameraTypeOrthographicFront                   ST_PresetCameraType = 19
	ST_PresetCameraTypeIsometricTopUp                      ST_PresetCameraType = 20
	ST_PresetCameraTypeIsometricTopDown                    ST_PresetCameraType = 21
	ST_PresetCameraTypeIsometricBottomUp                   ST_PresetCameraType = 22
	ST_PresetCameraTypeIsometricBottomDown                 ST_PresetCameraType = 23
	ST_PresetCameraTypeIsometricLeftUp                     ST_PresetCameraType = 24
	ST_PresetCameraTypeIsometricLeftDown                   ST_PresetCameraType = 25
	ST_PresetCameraTypeIsometricRightUp                    ST_PresetCameraType = 26
	ST_PresetCameraTypeIsometricRightDown                  ST_PresetCameraType = 27
	ST_PresetCameraTypeIsometricOffAxis1Left               ST_PresetCameraType = 28
	ST_PresetCameraTypeIsometricOffAxis1Right              ST_PresetCameraType = 29
	ST_PresetCameraTypeIsometricOffAxis1Top                ST_PresetCameraType = 30
	ST_PresetCameraTypeIsometricOffAxis2Left               ST_PresetCameraType = 31
	ST_PresetCameraTypeIsometricOffAxis2Right              ST_PresetCameraType = 32
	ST_PresetCameraTypeIsometricOffAxis2Top                ST_PresetCameraType = 33
	ST_PresetCameraTypeIsometricOffAxis3Left               ST_PresetCameraType = 34
	ST_PresetCameraTypeIsometricOffAxis3Right              ST_PresetCameraType = 35
	ST_PresetCameraTypeIsometricOffAxis3Bottom             ST_PresetCameraType = 36
	ST_PresetCameraTypeIsometricOffAxis4Left               ST_PresetCameraType = 37
	ST_PresetCameraTypeIsometricOffAxis4Right              ST_PresetCameraType = 38
	ST_PresetCameraTypeIsometricOffAxis4Bottom             ST_PresetCameraType = 39
	ST_PresetCameraTypeObliqueTopLeft                      ST_PresetCameraType = 40
	ST_PresetCameraTypeObliqueTop                          ST_PresetCameraType = 41
	ST_PresetCameraTypeObliqueTopRight                     ST_PresetCameraType = 42
	ST_PresetCameraTypeObliqueLeft                         ST_PresetCameraType = 43
	ST_PresetCameraTypeObliqueRight                        ST_PresetCameraType = 44
	ST_PresetCameraTypeObliqueBottomLeft                   ST_PresetCameraType = 45
	ST_PresetCameraTypeObliqueBottom                       ST_PresetCameraType = 46
	ST_PresetCameraTypeObliqueBottomRight                  ST_PresetCameraType = 47
	ST_PresetCameraTypePerspectiveFront                    ST_PresetCameraType = 48
	ST_PresetCameraTypePerspectiveLeft                     ST_PresetCameraType = 49
	ST_PresetCameraTypePerspectiveRight                    ST_PresetCameraType = 50
	ST_PresetCameraTypePerspectiveAbove                    ST_PresetCameraType = 51
	ST_PresetCameraTypePerspectiveBelow                    ST_PresetCameraType = 52
	ST_PresetCameraTypePerspectiveAboveLeftFacing          ST_PresetCameraType = 53
	ST_PresetCameraTypePerspectiveAboveRightFacing         ST_PresetCameraType = 54
	ST_PresetCameraTypePerspectiveContrastingLeftFacing    ST_PresetCameraType = 55
	ST_PresetCameraTypePerspectiveContrastingRightFacing   ST_PresetCameraType = 56
	ST_PresetCameraTypePerspectiveHeroicLeftFacing         ST_PresetCameraType = 57
	ST_PresetCameraTypePerspectiveHeroicRightFacing        ST_PresetCameraType = 58
	ST_PresetCameraTypePerspectiveHeroicExtremeLeftFacing  ST_PresetCameraType = 59
	ST_PresetCameraTypePerspectiveHeroicExtremeRightFacing ST_PresetCameraType = 60
	ST_PresetCameraTypePerspectiveRelaxed                  ST_PresetCameraType = 61
	ST_PresetCameraTypePerspectiveRelaxedModerately        ST_PresetCameraType = 62
)

// ValidateWithPath validates the CT_ColorSchemeAndMapping and its children, prefixing error messages with path
func (_abfd *CT_ColorSchemeAndMapping) ValidateWithPath(path string) error {
	if _gee := _abfd.ClrScheme.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"); _gee != nil {
		return _gee
	}
	if _abfd.ClrMap != nil {
		if _dbaaa := _abfd.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _dbaaa != nil {
			return _dbaaa
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GraphicalObjectData and its children, prefixing error messages with path
func (_acdfb *CT_GraphicalObjectData) ValidateWithPath(path string) error { return nil }

func NewCT_SphereCoords() *CT_SphereCoords {
	_befdc := &CT_SphereCoords{}
	_befdc.LatAttr = 0
	_befdc.LonAttr = 0
	_befdc.RevAttr = 0
	return _befdc
}

// ValidateWithPath validates the CT_EffectReference and its children, prefixing error messages with path
func (_beag *CT_EffectReference) ValidateWithPath(path string) error { return nil }

type CT_GradientStop struct {
	PosAttr   ST_PositiveFixedPercentage
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_adgfe ST_SystemColorVal) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_feffb := _g.Attr{}
	_feffb.Name = name
	switch _adgfe {
	case ST_SystemColorValUnset:
		_feffb.Value = ""
	case ST_SystemColorValScrollBar:
		_feffb.Value = "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r"
	case ST_SystemColorValBackground:
		_feffb.Value = "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064"
	case ST_SystemColorValActiveCaption:
		_feffb.Value = "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValInactiveCaption:
		_feffb.Value = "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValMenu:
		_feffb.Value = "\u006d\u0065\u006e\u0075"
	case ST_SystemColorValWindow:
		_feffb.Value = "\u0077\u0069\u006e\u0064\u006f\u0077"
	case ST_SystemColorValWindowFrame:
		_feffb.Value = "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065"
	case ST_SystemColorValMenuText:
		_feffb.Value = "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074"
	case ST_SystemColorValWindowText:
		_feffb.Value = "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074"
	case ST_SystemColorValCaptionText:
		_feffb.Value = "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case ST_SystemColorValActiveBorder:
		_feffb.Value = "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072"
	case ST_SystemColorValInactiveBorder:
		_feffb.Value = "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072"
	case ST_SystemColorValAppWorkspace:
		_feffb.Value = "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065"
	case ST_SystemColorValHighlight:
		_feffb.Value = "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"
	case ST_SystemColorValHighlightText:
		_feffb.Value = "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074"
	case ST_SystemColorValBtnFace:
		_feffb.Value = "\u0062t\u006e\u0046\u0061\u0063\u0065"
	case ST_SystemColorValBtnShadow:
		_feffb.Value = "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw"
	case ST_SystemColorValGrayText:
		_feffb.Value = "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074"
	case ST_SystemColorValBtnText:
		_feffb.Value = "\u0062t\u006e\u0054\u0065\u0078\u0074"
	case ST_SystemColorValInactiveCaptionText:
		_feffb.Value = "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case ST_SystemColorValBtnHighlight:
		_feffb.Value = "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case ST_SystemColorVal3dDkShadow:
		_feffb.Value = "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077"
	case ST_SystemColorVal3dLight:
		_feffb.Value = "\u0033d\u004c\u0069\u0067\u0068\u0074"
	case ST_SystemColorValInfoText:
		_feffb.Value = "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074"
	case ST_SystemColorValInfoBk:
		_feffb.Value = "\u0069\u006e\u0066\u006f\u0042\u006b"
	case ST_SystemColorValHotLight:
		_feffb.Value = "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074"
	case ST_SystemColorValGradientActiveCaption:
		_feffb.Value = "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValGradientInactiveCaption:
		_feffb.Value = "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValMenuHighlight:
		_feffb.Value = "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case ST_SystemColorValMenuBar:
		_feffb.Value = "\u006de\u006e\u0075\u0042\u0061\u0072"
	}
	return _feffb, nil
}

func (_cbcega ST_OnOffStyleType) String() string {
	switch _cbcega {
	case 0:
		return ""
	case 1:
		return "\u006f\u006e"
	case 2:
		return "\u006f\u0066\u0066"
	case 3:
		return "\u0064\u0065\u0066"
	}
	return ""
}

// ST_AnimationChartBuildType is a union type
type ST_AnimationChartBuildType struct {
	ST_AnimationBuildType          ST_AnimationBuildType
	ST_AnimationChartOnlyBuildType ST_AnimationChartOnlyBuildType
}

type EG_ColorChoice struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_faaba ST_BlendMode) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_faaba.String(), start)
}

type CT_FlatText struct{ ZAttr *ST_Coordinate }

// Validate validates the CT_AudioCD and its children
func (_gdcg *CT_AudioCD) Validate() error {
	return _gdcg.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043\u0044")
}

// ValidateWithPath validates the CT_Path2D and its children, prefixing error messages with path
func (_dcgbd *CT_Path2D) ValidateWithPath(path string) error {
	if _dcgbd.WAttr != nil {
		if *_dcgbd.WAttr < 0 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0057A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_dcgbd.WAttr)
		}
		if *_dcgbd.WAttr > 27273042316900 {
			return _gf.Errorf("\u0025\u0073/\u006d\u002e\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dcgbd.WAttr)
		}
	}
	if _dcgbd.HAttr != nil {
		if *_dcgbd.HAttr < 0 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0048A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_dcgbd.HAttr)
		}
		if *_dcgbd.HAttr > 27273042316900 {
			return _gf.Errorf("\u0025\u0073/\u006d\u002e\u0048\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dcgbd.HAttr)
		}
	}
	if _gbbea := _dcgbd.FillAttr.ValidateWithPath(path + "\u002fF\u0069\u006c\u006c\u0041\u0074\u0074r"); _gbbea != nil {
		return _gbbea
	}
	for _fcccf, _bbedd := range _dcgbd.Close {
		if _dacge := _bbedd.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002fC\u006c\u006f\u0073\u0065\u005b\u0025\u0064\u005d", path, _fcccf)); _dacge != nil {
			return _dacge
		}
	}
	for _eabce, _fbbfe := range _dcgbd.MoveTo {
		if _cefdc := _fbbfe.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u004d\u006f\u0076\u0065\u0054\u006f\u005b\u0025\u0064\u005d", path, _eabce)); _cefdc != nil {
			return _cefdc
		}
	}
	for _aggdg, _acgga := range _dcgbd.LnTo {
		if _dddddb := _acgga.ValidateWithPath(_gf.Sprintf("%\u0073\u002f\u004c\u006e\u0054\u006f\u005b\u0025\u0064\u005d", path, _aggdg)); _dddddb != nil {
			return _dddddb
		}
	}
	for _addfa, _gafbb := range _dcgbd.ArcTo {
		if _ccbbc := _gafbb.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002fA\u0072\u0063\u0054\u006f\u005b\u0025\u0064\u005d", path, _addfa)); _ccbbc != nil {
			return _ccbbc
		}
	}
	for _fgea, _abfdb := range _dcgbd.QuadBezTo {
		if _ecefe := _abfdb.ValidateWithPath(_gf.Sprintf("\u0025\u0073/\u0051\u0075\u0061d\u0042\u0065\u007a\u0054\u006f\u005b\u0025\u0064\u005d", path, _fgea)); _ecefe != nil {
			return _ecefe
		}
	}
	for _cdffd, _dagb := range _dcgbd.CubicBezTo {
		if _gbgef := _dagb.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0054o\u005b\u0025\u0064\u005d", path, _cdffd)); _gbgef != nil {
			return _gbgef
		}
	}
	return nil
}

func NewCT_ColorMapping() *CT_ColorMapping {
	_fgagd := &CT_ColorMapping{}
	_fgagd.Bg1Attr = ST_ColorSchemeIndex(1)
	_fgagd.Tx1Attr = ST_ColorSchemeIndex(1)
	_fgagd.Bg2Attr = ST_ColorSchemeIndex(1)
	_fgagd.Tx2Attr = ST_ColorSchemeIndex(1)
	_fgagd.Accent1Attr = ST_ColorSchemeIndex(1)
	_fgagd.Accent2Attr = ST_ColorSchemeIndex(1)
	_fgagd.Accent3Attr = ST_ColorSchemeIndex(1)
	_fgagd.Accent4Attr = ST_ColorSchemeIndex(1)
	_fgagd.Accent5Attr = ST_ColorSchemeIndex(1)
	_fgagd.Accent6Attr = ST_ColorSchemeIndex(1)
	_fgagd.HlinkAttr = ST_ColorSchemeIndex(1)
	_fgagd.FolHlinkAttr = ST_ColorSchemeIndex(1)
	return _fgagd
}

// Validate validates the CT_AnimationGraphicalObjectBuildProperties and its children
func (_dfbe *CT_AnimationGraphicalObjectBuildProperties) Validate() error {
	return _dfbe.ValidateWithPath("\u0043\u0054\u005fA\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0042\u0075\u0069\u006c\u0064\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func NewCT_ColorChangeEffect() *CT_ColorChangeEffect {
	_gaec := &CT_ColorChangeEffect{}
	_gaec.ClrFrom = NewCT_Color()
	_gaec.ClrTo = NewCT_Color()
	return _gaec
}

func (_ggfeg *ST_ColorSchemeIndex) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dcecgd, _gcaaf := d.Token()
	if _gcaaf != nil {
		return _gcaaf
	}
	if _ccadcb, _ffgbe := _dcecgd.(_g.EndElement); _ffgbe && _ccadcb.Name == start.Name {
		*_ggfeg = 1
		return nil
	}
	if _cecf, _fcgge := _dcecgd.(_g.CharData); !_fcgge {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dcecgd)
	} else {
		switch string(_cecf) {
		case "":
			*_ggfeg = 0
		case "\u0064\u006b\u0031":
			*_ggfeg = 1
		case "\u006c\u0074\u0031":
			*_ggfeg = 2
		case "\u0064\u006b\u0032":
			*_ggfeg = 3
		case "\u006c\u0074\u0032":
			*_ggfeg = 4
		case "\u0061c\u0063\u0065\u006e\u0074\u0031":
			*_ggfeg = 5
		case "\u0061c\u0063\u0065\u006e\u0074\u0032":
			*_ggfeg = 6
		case "\u0061c\u0063\u0065\u006e\u0074\u0033":
			*_ggfeg = 7
		case "\u0061c\u0063\u0065\u006e\u0074\u0034":
			*_ggfeg = 8
		case "\u0061c\u0063\u0065\u006e\u0074\u0035":
			*_ggfeg = 9
		case "\u0061c\u0063\u0065\u006e\u0074\u0036":
			*_ggfeg = 10
		case "\u0068\u006c\u0069n\u006b":
			*_ggfeg = 11
		case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
			*_ggfeg = 12
		}
	}
	_dcecgd, _gcaaf = d.Token()
	if _gcaaf != nil {
		return _gcaaf
	}
	if _cdbfa, _gdeged := _dcecgd.(_g.EndElement); _gdeged && _cdbfa.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dcecgd)
}

// Validate validates the CT_FontReference and its children
func (_dccdd *CT_FontReference) Validate() error {
	return _dccdd.ValidateWithPath("\u0043\u0054_\u0046\u006f\u006et\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065")
}

func NewCT_LineJoinMiterProperties() *CT_LineJoinMiterProperties {
	_eddbd := &CT_LineJoinMiterProperties{}
	return _eddbd
}

func NewCT_CustomColorList() *CT_CustomColorList { _cege := &CT_CustomColorList{}; return _cege }

func (_dcdde *CT_ThemeableLineStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _dcdde.Ln != nil {
		_afbad := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_dcdde.Ln, _afbad)
	}
	if _dcdde.LnRef != nil {
		_fbfea := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u006e\u0052\u0065\u0066"}}
		e.EncodeElement(_dcdde.LnRef, _fbfea)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bceb *CT_GradientFillProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bceb.FlipAttr != ST_TileFlipModeUnset {
		_gcbfd, _cfgf := _bceb.FlipAttr.MarshalXMLAttr(_g.Name{Local: "\u0066\u006c\u0069\u0070"})
		if _cfgf != nil {
			return _cfgf
		}
		start.Attr = append(start.Attr, _gcbfd)
	}
	if _bceb.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_bceb.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	if _bceb.GsLst != nil {
		_gabc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0073\u004c\u0073\u0074"}}
		e.EncodeElement(_bceb.GsLst, _gabc)
	}
	if _bceb.Lin != nil {
		_cgbc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006ci\u006e"}}
		e.EncodeElement(_bceb.Lin, _cgbc)
	}
	if _bceb.Path != nil {
		_cbbfd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0068"}}
		e.EncodeElement(_bceb.Path, _cbbfd)
	}
	if _bceb.TileRect != nil {
		_fbdf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0069\u006c\u0065\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_bceb.TileRect, _fbdf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_OnOffStyleTypeUnset ST_OnOffStyleType = 0
	ST_OnOffStyleTypeOn    ST_OnOffStyleType = 1
	ST_OnOffStyleTypeOff   ST_OnOffStyleType = 2
	ST_OnOffStyleTypeDef   ST_OnOffStyleType = 3
)

// Validate validates the CT_ColorSchemeList and its children
func (_bcdb *CT_ColorSchemeList) Validate() error {
	return _bcdb.ValidateWithPath("\u0043T\u005fC\u006f\u006c\u006f\u0072\u0053c\u0068\u0065m\u0065\u004c\u0069\u0073\u0074")
}

type EG_FillProperties struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

type CT_BackgroundFillStyleList struct{ EG_FillProperties []*EG_FillProperties }

func (_ffbce ST_AnimationChartOnlyBuildType) Validate() error { return _ffbce.ValidateWithPath("") }

func (_bgddd *ST_AdjCoordinate) Validate() error { return _bgddd.ValidateWithPath("") }

type CT_GroupTransform2D struct {
	RotAttr   *int32
	FlipHAttr *bool
	FlipVAttr *bool
	Off       *CT_Point2D
	Ext       *CT_PositiveSize2D
	ChOff     *CT_Point2D
	ChExt     *CT_PositiveSize2D
}

func NewCT_ConnectionSite() *CT_ConnectionSite {
	_eecc := &CT_ConnectionSite{}
	_eecc.Pos = NewCT_AdjPoint2D()
	return _eecc
}

type CT_GvmlUseShapeRectangle struct{}

// ValidateWithPath validates the CT_AdjPoint2D and its children, prefixing error messages with path
func (_gb *CT_AdjPoint2D) ValidateWithPath(path string) error {
	if _eg := _gb.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _eg != nil {
		return _eg
	}
	if _bgd := _gb.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _bgd != nil {
		return _bgd
	}
	return nil
}

// ValidateWithPath validates the CT_FillStyleList and its children, prefixing error messages with path
func (_cebfa *CT_FillStyleList) ValidateWithPath(path string) error {
	for _bggf, _gabac := range _cebfa.EG_FillProperties {
		if _eeecg := _gabac.ValidateWithPath(_gf.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073\u005b\u0025\u0064\u005d", path, _bggf)); _eeecg != nil {
			return _eeecg
		}
	}
	return nil
}

func NewEG_Text3D() *EG_Text3D { _fgdaa := &EG_Text3D{}; return _fgdaa }

func (_bbgc *CT_Ratio) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e"}, Value: _gf.Sprintf("\u0025\u0076", _bbgc.NAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064"}, Value: _gf.Sprintf("\u0025\u0076", _bbgc.DAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type ST_ShapeType byte

// ValidateWithPath validates the CT_GradientStop and its children, prefixing error messages with path
func (_cbdca *CT_GradientStop) ValidateWithPath(path string) error {
	if _cgdfc := _cbdca.PosAttr.ValidateWithPath(path + "\u002f\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _cgdfc != nil {
		return _cgdfc
	}
	if _cbdca.ScrgbClr != nil {
		if _cfeeg := _cbdca.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _cfeeg != nil {
			return _cfeeg
		}
	}
	if _cbdca.SrgbClr != nil {
		if _bggcaa := _cbdca.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _bggcaa != nil {
			return _bggcaa
		}
	}
	if _cbdca.HslClr != nil {
		if _faebge := _cbdca.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _faebge != nil {
			return _faebge
		}
	}
	if _cbdca.SysClr != nil {
		if _afcea := _cbdca.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _afcea != nil {
			return _afcea
		}
	}
	if _cbdca.SchemeClr != nil {
		if _aecge := _cbdca.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _aecge != nil {
			return _aecge
		}
	}
	if _cbdca.PrstClr != nil {
		if _ccbgd := _cbdca.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _ccbgd != nil {
			return _ccbgd
		}
	}
	return nil
}

type CT_Vector3D struct {
	DxAttr ST_Coordinate
	DyAttr ST_Coordinate
	DzAttr ST_Coordinate
}

func (_fbfb *CT_ColorSchemeList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fadag:
	for {
		_dbgc, _eece := d.Token()
		if _eece != nil {
			return _eece
		}
		switch _dga := _dbgc.(type) {
		case _g.StartElement:
			switch _dga.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053c\u0068\u0065\u006d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053c\u0068\u0065\u006d\u0065"}:
				_aeebd := NewCT_ColorSchemeAndMapping()
				if _eega := d.DecodeElement(_aeebd, &_dga); _eega != nil {
					return _eega
				}
				_fbfb.ExtraClrScheme = append(_fbfb.ExtraClrScheme, _aeebd)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _dga.Name)
				if _aaba := d.Skip(); _aaba != nil {
					return _aaba
				}
			}
		case _g.EndElement:
			break _fadag
		case _g.CharData:
		}
	}
	return nil
}

func (_faebg *CT_EffectList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _faebg.Blur != nil {
		_dbgee := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		e.EncodeElement(_faebg.Blur, _dbgee)
	}
	if _faebg.FillOverlay != nil {
		_ddcea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		e.EncodeElement(_faebg.FillOverlay, _ddcea)
	}
	if _faebg.Glow != nil {
		_abbb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u006c\u006f\u0077"}}
		e.EncodeElement(_faebg.Glow, _abbb)
	}
	if _faebg.InnerShdw != nil {
		_fdcag := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0069\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_faebg.InnerShdw, _fdcag)
	}
	if _faebg.OuterShdw != nil {
		_bgef := _g.StartElement{Name: _g.Name{Local: "a\u003a\u006f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_faebg.OuterShdw, _bgef)
	}
	if _faebg.PrstShdw != nil {
		_agdbc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_faebg.PrstShdw, _agdbc)
	}
	if _faebg.Reflection != nil {
		_dbeea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072e\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_faebg.Reflection, _dbeea)
	}
	if _faebg.SoftEdge != nil {
		_cdbbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}}
		e.EncodeElement(_faebg.SoftEdge, _cdbbe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fdfce *ST_DgmBuildStep) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_afagf, _cgfed := d.Token()
	if _cgfed != nil {
		return _cgfed
	}
	if _eccge, _afcgbg := _afagf.(_g.EndElement); _afcgbg && _eccge.Name == start.Name {
		*_fdfce = 1
		return nil
	}
	if _fcgea, _dbdfc := _afagf.(_g.CharData); !_dbdfc {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _afagf)
	} else {
		switch string(_fcgea) {
		case "":
			*_fdfce = 0
		case "\u0073\u0070":
			*_fdfce = 1
		case "\u0062\u0067":
			*_fdfce = 2
		}
	}
	_afagf, _cgfed = d.Token()
	if _cgfed != nil {
		return _cgfed
	}
	if _deaba, _cadg := _afagf.(_g.EndElement); _cadg && _deaba.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _afagf)
}

func (_aeacg *EG_TextBullet) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _aeacg.BuNone != nil {
		_deafd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u004e\u006f\u006e\u0065"}}
		e.EncodeElement(_aeacg.BuNone, _deafd)
	}
	if _aeacg.BuAutoNum != nil {
		_dbdff := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0062\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"}}
		e.EncodeElement(_aeacg.BuAutoNum, _dbdff)
	}
	if _aeacg.BuChar != nil {
		_bbadf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0043\u0068\u0061\u0072"}}
		e.EncodeElement(_aeacg.BuChar, _bbadf)
	}
	if _aeacg.BuBlip != nil {
		_ffcbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0042\u006c\u0069\u0070"}}
		e.EncodeElement(_aeacg.BuBlip, _ffcbe)
	}
	return nil
}

// ValidateWithPath validates the CT_AnimationDgmBuildProperties and its children, prefixing error messages with path
func (_feg *CT_AnimationDgmBuildProperties) ValidateWithPath(path string) error {
	if _feg.BldAttr != nil {
		if _ecfcf := _feg.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _ecfcf != nil {
			return _ecfcf
		}
	}
	return nil
}

func (_eaece *ST_TileFlipMode) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_eaece = 0
	case "\u006e\u006f\u006e\u0065":
		*_eaece = 1
	case "\u0078":
		*_eaece = 2
	case "\u0079":
		*_eaece = 3
	case "\u0078\u0079":
		*_eaece = 4
	}
	return nil
}

type CT_Percentage struct{ ValAttr ST_Percentage }

func (_fbbf *CT_FontReference) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_ggbcd, _aadg := _fbbf.IdxAttr.MarshalXMLAttr(_g.Name{Local: "\u0069\u0064\u0078"})
	if _aadg != nil {
		return _aadg
	}
	start.Attr = append(start.Attr, _ggbcd)
	e.EncodeToken(start)
	if _fbbf.ScrgbClr != nil {
		_acaag := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_fbbf.ScrgbClr, _acaag)
	}
	if _fbbf.SrgbClr != nil {
		_bbfa := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_fbbf.SrgbClr, _bbfa)
	}
	if _fbbf.HslClr != nil {
		_gcce := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_fbbf.HslClr, _gcce)
	}
	if _fbbf.SysClr != nil {
		_edfdg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_fbbf.SysClr, _edfdg)
	}
	if _fbbf.SchemeClr != nil {
		_eagga := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_fbbf.SchemeClr, _eagga)
	}
	if _fbbf.PrstClr != nil {
		_agab := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_fbbf.PrstClr, _agab)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_faedd *CT_TextShapeAutofit) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_BlipChoice struct {
	AlphaBiLevel []*CT_AlphaBiLevelEffect
	AlphaCeiling []*CT_AlphaCeilingEffect
	AlphaFloor   []*CT_AlphaFloorEffect
	AlphaInv     []*CT_AlphaInverseEffect
	AlphaMod     []*CT_AlphaModulateEffect
	AlphaModFix  []*CT_AlphaModulateFixedEffect
	AlphaRepl    []*CT_AlphaReplaceEffect
	BiLevel      []*CT_BiLevelEffect
	Blur         []*CT_BlurEffect
	ClrChange    []*CT_ColorChangeEffect
	ClrRepl      []*CT_ColorReplaceEffect
	Duotone      []*CT_DuotoneEffect
	FillOverlay  []*CT_FillOverlayEffect
	Grayscl      []*CT_GrayscaleEffect
	Hsl          []*CT_HSLEffect
	Lum          []*CT_LuminanceEffect
	Tint         []*CT_TintEffect
}

func (_ddfe *CT_PresetColor) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ddfe.ValAttr = ST_PresetColorVal(1)
	for _, _egefe := range start.Attr {
		if _egefe.Name.Local == "\u0076\u0061\u006c" {
			_ddfe.ValAttr.UnmarshalXMLAttr(_egefe)
			continue
		}
	}
_bgcgf:
	for {
		_gfdgce, _egegb := d.Token()
		if _egegb != nil {
			return _egegb
		}
		switch _dcaag := _gfdgce.(type) {
		case _g.StartElement:
			switch _dcaag.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_gebc := NewEG_ColorTransform()
				_gebc.Tint = NewCT_PositiveFixedPercentage()
				if _afae := d.DecodeElement(_gebc.Tint, &_dcaag); _afae != nil {
					return _afae
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _gebc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_acdcd := NewEG_ColorTransform()
				_acdcd.Shade = NewCT_PositiveFixedPercentage()
				if _ccfae := d.DecodeElement(_acdcd.Shade, &_dcaag); _ccfae != nil {
					return _ccfae
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _acdcd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_aebd := NewEG_ColorTransform()
				_aebd.Comp = NewCT_ComplementTransform()
				if _bdbdg := d.DecodeElement(_aebd.Comp, &_dcaag); _bdbdg != nil {
					return _bdbdg
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _aebd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_aefgg := NewEG_ColorTransform()
				_aefgg.Inv = NewCT_InverseTransform()
				if _badef := d.DecodeElement(_aefgg.Inv, &_dcaag); _badef != nil {
					return _badef
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _aefgg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_bcbfe := NewEG_ColorTransform()
				_bcbfe.Gray = NewCT_GrayscaleTransform()
				if _fcadg := d.DecodeElement(_bcbfe.Gray, &_dcaag); _fcadg != nil {
					return _fcadg
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _bcbfe)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_bbfde := NewEG_ColorTransform()
				_bbfde.Alpha = NewCT_PositiveFixedPercentage()
				if _badaf := d.DecodeElement(_bbfde.Alpha, &_dcaag); _badaf != nil {
					return _badaf
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _bbfde)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_fdegg := NewEG_ColorTransform()
				_fdegg.AlphaOff = NewCT_FixedPercentage()
				if _dgaa := d.DecodeElement(_fdegg.AlphaOff, &_dcaag); _dgaa != nil {
					return _dgaa
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _fdegg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_abcbg := NewEG_ColorTransform()
				_abcbg.AlphaMod = NewCT_PositivePercentage()
				if _dfdfd := d.DecodeElement(_abcbg.AlphaMod, &_dcaag); _dfdfd != nil {
					return _dfdfd
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _abcbg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_daaefc := NewEG_ColorTransform()
				_daaefc.Hue = NewCT_PositiveFixedAngle()
				if _afaee := d.DecodeElement(_daaefc.Hue, &_dcaag); _afaee != nil {
					return _afaee
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _daaefc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_gdcb := NewEG_ColorTransform()
				_gdcb.HueOff = NewCT_Angle()
				if _eagfd := d.DecodeElement(_gdcb.HueOff, &_dcaag); _eagfd != nil {
					return _eagfd
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _gdcb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_ggdg := NewEG_ColorTransform()
				_ggdg.HueMod = NewCT_PositivePercentage()
				if _cecd := d.DecodeElement(_ggdg.HueMod, &_dcaag); _cecd != nil {
					return _cecd
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _ggdg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_egfc := NewEG_ColorTransform()
				_egfc.Sat = NewCT_Percentage()
				if _cdebd := d.DecodeElement(_egfc.Sat, &_dcaag); _cdebd != nil {
					return _cdebd
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _egfc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_eeagce := NewEG_ColorTransform()
				_eeagce.SatOff = NewCT_Percentage()
				if _gggde := d.DecodeElement(_eeagce.SatOff, &_dcaag); _gggde != nil {
					return _gggde
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _eeagce)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_bcgbb := NewEG_ColorTransform()
				_bcgbb.SatMod = NewCT_Percentage()
				if _aebeca := d.DecodeElement(_bcgbb.SatMod, &_dcaag); _aebeca != nil {
					return _aebeca
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _bcgbb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_bfffg := NewEG_ColorTransform()
				_bfffg.Lum = NewCT_Percentage()
				if _gcgb := d.DecodeElement(_bfffg.Lum, &_dcaag); _gcgb != nil {
					return _gcgb
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _bfffg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_bccg := NewEG_ColorTransform()
				_bccg.LumOff = NewCT_Percentage()
				if _gdgdg := d.DecodeElement(_bccg.LumOff, &_dcaag); _gdgdg != nil {
					return _gdgdg
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _bccg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_ageeb := NewEG_ColorTransform()
				_ageeb.LumMod = NewCT_Percentage()
				if _fgffd := d.DecodeElement(_ageeb.LumMod, &_dcaag); _fgffd != nil {
					return _fgffd
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _ageeb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_egcb := NewEG_ColorTransform()
				_egcb.Red = NewCT_Percentage()
				if _bbbab := d.DecodeElement(_egcb.Red, &_dcaag); _bbbab != nil {
					return _bbbab
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _egcb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_gadee := NewEG_ColorTransform()
				_gadee.RedOff = NewCT_Percentage()
				if _fccbg := d.DecodeElement(_gadee.RedOff, &_dcaag); _fccbg != nil {
					return _fccbg
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _gadee)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_bcbfg := NewEG_ColorTransform()
				_bcbfg.RedMod = NewCT_Percentage()
				if _fbaad := d.DecodeElement(_bcbfg.RedMod, &_dcaag); _fbaad != nil {
					return _fbaad
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _bcbfg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_gcgbc := NewEG_ColorTransform()
				_gcgbc.Green = NewCT_Percentage()
				if _bdgga := d.DecodeElement(_gcgbc.Green, &_dcaag); _bdgga != nil {
					return _bdgga
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _gcgbc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_ceafb := NewEG_ColorTransform()
				_ceafb.GreenOff = NewCT_Percentage()
				if _eddef := d.DecodeElement(_ceafb.GreenOff, &_dcaag); _eddef != nil {
					return _eddef
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _ceafb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_fefg := NewEG_ColorTransform()
				_fefg.GreenMod = NewCT_Percentage()
				if _faedf := d.DecodeElement(_fefg.GreenMod, &_dcaag); _faedf != nil {
					return _faedf
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _fefg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_dbaag := NewEG_ColorTransform()
				_dbaag.Blue = NewCT_Percentage()
				if _dccbe := d.DecodeElement(_dbaag.Blue, &_dcaag); _dccbe != nil {
					return _dccbe
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _dbaag)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_bccag := NewEG_ColorTransform()
				_bccag.BlueOff = NewCT_Percentage()
				if _fcgg := d.DecodeElement(_bccag.BlueOff, &_dcaag); _fcgg != nil {
					return _fcgg
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _bccag)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_afcga := NewEG_ColorTransform()
				_afcga.BlueMod = NewCT_Percentage()
				if _decaa := d.DecodeElement(_afcga.BlueMod, &_dcaag); _decaa != nil {
					return _decaa
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _afcga)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_bbbag := NewEG_ColorTransform()
				_bbbag.Gamma = NewCT_GammaTransform()
				if _dedgc := d.DecodeElement(_bbbag.Gamma, &_dcaag); _dedgc != nil {
					return _dedgc
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _bbbag)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_fbgbbb := NewEG_ColorTransform()
				_fbgbbb.InvGamma = NewCT_InverseGammaTransform()
				if _fcfac := d.DecodeElement(_fbgbbb.InvGamma, &_dcaag); _fcfac != nil {
					return _fcfac
				}
				_ddfe.EG_ColorTransform = append(_ddfe.EG_ColorTransform, _fbgbbb)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074\u0043o\u006co\u0072\u0020\u0025\u0076", _dcaag.Name)
				if _afcfb := d.Skip(); _afcfb != nil {
					return _afcfb
				}
			}
		case _g.EndElement:
			break _bgcgf
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_SRgbColor() *CT_SRgbColor { _bdcfe := &CT_SRgbColor{}; return _bdcfe }

func (_debac *CT_TableProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gbaga := range start.Attr {
		if _gbaga.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077" {
			_bfcc, _abefd := _c.ParseBool(_gbaga.Value)
			if _abefd != nil {
				return _abefd
			}
			_debac.FirstRowAttr = &_bfcc
			continue
		}
		if _gbaga.Name.Local == "\u006ca\u0073\u0074\u0052\u006f\u0077" {
			_aabgf, _gabcd := _c.ParseBool(_gbaga.Value)
			if _gabcd != nil {
				return _gabcd
			}
			_debac.LastRowAttr = &_aabgf
			continue
		}
		if _gbaga.Name.Local == "\u0062a\u006e\u0064\u0052\u006f\u0077" {
			_aafc, _efegb := _c.ParseBool(_gbaga.Value)
			if _efegb != nil {
				return _efegb
			}
			_debac.BandRowAttr = &_aafc
			continue
		}
		if _gbaga.Name.Local == "\u0062a\u006e\u0064\u0043\u006f\u006c" {
			_fgebcg, _fbfe := _c.ParseBool(_gbaga.Value)
			if _fbfe != nil {
				return _fbfe
			}
			_debac.BandColAttr = &_fgebcg
			continue
		}
		if _gbaga.Name.Local == "\u0072\u0074\u006c" {
			_afdf, _bbggc := _c.ParseBool(_gbaga.Value)
			if _bbggc != nil {
				return _bbggc
			}
			_debac.RtlAttr = &_afdf
			continue
		}
		if _gbaga.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c" {
			_adaaad, _gddebb := _c.ParseBool(_gbaga.Value)
			if _gddebb != nil {
				return _gddebb
			}
			_debac.FirstColAttr = &_adaaad
			continue
		}
		if _gbaga.Name.Local == "\u006ca\u0073\u0074\u0043\u006f\u006c" {
			_gfgfe, _ebged := _c.ParseBool(_gbaga.Value)
			if _ebged != nil {
				return _ebged
			}
			_debac.LastColAttr = &_gfgfe
			continue
		}
	}
_beea:
	for {
		_eaebc, _gbdfb := d.Token()
		if _gbdfb != nil {
			return _gbdfb
		}
		switch _ccgbb := _eaebc.(type) {
		case _g.StartElement:
			switch _ccgbb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_debac.NoFill = NewCT_NoFillProperties()
				if _efebg := d.DecodeElement(_debac.NoFill, &_ccgbb); _efebg != nil {
					return _efebg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_debac.SolidFill = NewCT_SolidColorFillProperties()
				if _dbdaf := d.DecodeElement(_debac.SolidFill, &_ccgbb); _dbdaf != nil {
					return _dbdaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_debac.GradFill = NewCT_GradientFillProperties()
				if _bcffa := d.DecodeElement(_debac.GradFill, &_ccgbb); _bcffa != nil {
					return _bcffa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_debac.BlipFill = NewCT_BlipFillProperties()
				if _ggeaf := d.DecodeElement(_debac.BlipFill, &_ccgbb); _ggeaf != nil {
					return _ggeaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_debac.PattFill = NewCT_PatternFillProperties()
				if _dbccg := d.DecodeElement(_debac.PattFill, &_ccgbb); _dbccg != nil {
					return _dbccg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_debac.GrpFill = NewCT_GroupFillProperties()
				if _cdece := d.DecodeElement(_debac.GrpFill, &_ccgbb); _cdece != nil {
					return _cdece
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_debac.EffectLst = NewCT_EffectList()
				if _egcbf := d.DecodeElement(_debac.EffectLst, &_ccgbb); _egcbf != nil {
					return _egcbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_debac.EffectDag = NewCT_EffectContainer()
				if _gadda := d.DecodeElement(_debac.EffectDag, &_ccgbb); _gadda != nil {
					return _gadda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_debac.Choice = NewCT_TablePropertiesChoice()
				if _afbcc := d.DecodeElement(&_debac.Choice.TableStyle, &_ccgbb); _afbcc != nil {
					return _afbcc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}:
				_debac.Choice = NewCT_TablePropertiesChoice()
				if _caccd := d.DecodeElement(&_debac.Choice.TableStyleId, &_ccgbb); _caccd != nil {
					return _caccd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_debac.ExtLst = NewCT_OfficeArtExtensionList()
				if _ceefe := d.DecodeElement(_debac.ExtLst, &_ccgbb); _ceefe != nil {
					return _ceefe
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ccgbb.Name)
				if _decea := d.Skip(); _decea != nil {
					return _decea
				}
			}
		case _g.EndElement:
			break _beea
		case _g.CharData:
		}
	}
	return nil
}

func (_abbee *CT_GvmlGroupShapeNonVisual) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_abbee.CNvPr = NewCT_NonVisualDrawingProps()
	_abbee.CNvGrpSpPr = NewCT_NonVisualGroupDrawingShapeProps()
_gccca:
	for {
		_ggee, _fbgbf := d.Token()
		if _fbgbf != nil {
			return _fbgbf
		}
		switch _gccfb := _ggee.(type) {
		case _g.StartElement:
			switch _gccfb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _cddaa := d.DecodeElement(_abbee.CNvPr, &_gccfb); _cddaa != nil {
					return _cddaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}:
				if _bfcaf := d.DecodeElement(_abbee.CNvGrpSpPr, &_gccfb); _bfcaf != nil {
					return _bfcaf
				}
			default:
				_b.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0047\u0076m\u006c\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _gccfb.Name)
				if _aegdfb := d.Skip(); _aegdfb != nil {
					return _aegdfb
				}
			}
		case _g.EndElement:
			break _gccca
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_LineJoinRound and its children, prefixing error messages with path
func (_dabfe *CT_LineJoinRound) ValidateWithPath(path string) error { return nil }

func (_dafeac ST_LineEndLength) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cbceg := _g.Attr{}
	_cbceg.Name = name
	switch _dafeac {
	case ST_LineEndLengthUnset:
		_cbceg.Value = ""
	case ST_LineEndLengthSm:
		_cbceg.Value = "\u0073\u006d"
	case ST_LineEndLengthMed:
		_cbceg.Value = "\u006d\u0065\u0064"
	case ST_LineEndLengthLg:
		_cbceg.Value = "\u006c\u0067"
	}
	return _cbceg, nil
}

func (_aef *CT_AnimationElementChoice) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _aef.Dgm != nil {
		_fag := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0064g\u006d"}}
		e.EncodeElement(_aef.Dgm, _fag)
	}
	if _aef.Chart != nil {
		_abbd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u0068\u0061\u0072\u0074"}}
		e.EncodeElement(_aef.Chart, _abbd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_Path2DCubicBezierTo() *CT_Path2DCubicBezierTo {
	_bgegb := &CT_Path2DCubicBezierTo{}
	return _bgegb
}

func (_efc *CT_AlphaReplaceEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061"}, Value: _gf.Sprintf("\u0025\u0076", _efc.AAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_LightRigTypeUnset         ST_LightRigType = 0
	ST_LightRigTypeLegacyFlat1   ST_LightRigType = 1
	ST_LightRigTypeLegacyFlat2   ST_LightRigType = 2
	ST_LightRigTypeLegacyFlat3   ST_LightRigType = 3
	ST_LightRigTypeLegacyFlat4   ST_LightRigType = 4
	ST_LightRigTypeLegacyNormal1 ST_LightRigType = 5
	ST_LightRigTypeLegacyNormal2 ST_LightRigType = 6
	ST_LightRigTypeLegacyNormal3 ST_LightRigType = 7
	ST_LightRigTypeLegacyNormal4 ST_LightRigType = 8
	ST_LightRigTypeLegacyHarsh1  ST_LightRigType = 9
	ST_LightRigTypeLegacyHarsh2  ST_LightRigType = 10
	ST_LightRigTypeLegacyHarsh3  ST_LightRigType = 11
	ST_LightRigTypeLegacyHarsh4  ST_LightRigType = 12
	ST_LightRigTypeThreePt       ST_LightRigType = 13
	ST_LightRigTypeBalanced      ST_LightRigType = 14
	ST_LightRigTypeSoft          ST_LightRigType = 15
	ST_LightRigTypeHarsh         ST_LightRigType = 16
	ST_LightRigTypeFlood         ST_LightRigType = 17
	ST_LightRigTypeContrasting   ST_LightRigType = 18
	ST_LightRigTypeMorning       ST_LightRigType = 19
	ST_LightRigTypeSunrise       ST_LightRigType = 20
	ST_LightRigTypeSunset        ST_LightRigType = 21
	ST_LightRigTypeChilly        ST_LightRigType = 22
	ST_LightRigTypeFreezing      ST_LightRigType = 23
	ST_LightRigTypeFlat          ST_LightRigType = 24
	ST_LightRigTypeTwoPt         ST_LightRigType = 25
	ST_LightRigTypeGlow          ST_LightRigType = 26
	ST_LightRigTypeBrightRoom    ST_LightRigType = 27
)

type CT_Color struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_gffae *ST_SchemeColorVal) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_gffae = 0
	case "\u0062\u0067\u0031":
		*_gffae = 1
	case "\u0074\u0078\u0031":
		*_gffae = 2
	case "\u0062\u0067\u0032":
		*_gffae = 3
	case "\u0074\u0078\u0032":
		*_gffae = 4
	case "\u0061c\u0063\u0065\u006e\u0074\u0031":
		*_gffae = 5
	case "\u0061c\u0063\u0065\u006e\u0074\u0032":
		*_gffae = 6
	case "\u0061c\u0063\u0065\u006e\u0074\u0033":
		*_gffae = 7
	case "\u0061c\u0063\u0065\u006e\u0074\u0034":
		*_gffae = 8
	case "\u0061c\u0063\u0065\u006e\u0074\u0035":
		*_gffae = 9
	case "\u0061c\u0063\u0065\u006e\u0074\u0036":
		*_gffae = 10
	case "\u0068\u006c\u0069n\u006b":
		*_gffae = 11
	case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
		*_gffae = 12
	case "\u0070\u0068\u0043l\u0072":
		*_gffae = 13
	case "\u0064\u006b\u0031":
		*_gffae = 14
	case "\u006c\u0074\u0031":
		*_gffae = 15
	case "\u0064\u006b\u0032":
		*_gffae = 16
	case "\u006c\u0074\u0032":
		*_gffae = 17
	}
	return nil
}

func (_bfebb *CT_ComplementTransform) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_bdea, _agecg := d.Token()
		if _agecg != nil {
			return _gf.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u006f\u006dp\u006ce\u006de\u006et\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u0073", _agecg)
		}
		if _cbbf, _fgec := _bdea.(_g.EndElement); _fgec && _cbbf.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_TableStyle() *CT_TableStyle {
	_badca := &CT_TableStyle{}
	_badca.StyleIdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _badca
}

func (_bagfg *CT_SphereCoords) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0061\u0074"}, Value: _gf.Sprintf("\u0025\u0076", _bagfg.LatAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u006f\u006e"}, Value: _gf.Sprintf("\u0025\u0076", _bagfg.LonAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0065\u0076"}, Value: _gf.Sprintf("\u0025\u0076", _bagfg.RevAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_acfb *CT_DuotoneEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	for _, _aebf := range _acfb.EG_ColorChoice {
		_aebf.MarshalXML(e, _g.StartElement{})
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_GvmlConnector struct {
	NvCxnSpPr *CT_GvmlConnectorNonVisual
	SpPr      *CT_ShapeProperties
	Style     *CT_ShapeStyle
	ExtLst    *CT_OfficeArtExtensionList
}

func (_gfbae *ST_AdjAngle) Validate() error { return _gfbae.ValidateWithPath("") }

// Validate validates the CT_RelativeRect and its children
func (_fadb *CT_RelativeRect) Validate() error {
	return _fadb.ValidateWithPath("\u0043T\u005fR\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0052\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_TextCharacterProperties and its children, prefixing error messages with path
func (_fbbgc *CT_TextCharacterProperties) ValidateWithPath(path string) error {
	if _fbbgc.SzAttr != nil {
		if *_fbbgc.SzAttr < 100 {
			return _gf.Errorf("\u0025\u0073/m\u002e\u0053\u007aA\u0074\u0074\u0072\u0020mus\u0074 b\u0065\u0020\u003e\u003d\u0020\u0031\u00300 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fbbgc.SzAttr)
		}
		if *_fbbgc.SzAttr > 400000 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u007a\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u003d\u0020\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_fbbgc.SzAttr)
		}
	}
	if _bgdff := _fbbgc.UAttr.ValidateWithPath(path + "\u002f\u0055\u0041\u0074\u0074\u0072"); _bgdff != nil {
		return _bgdff
	}
	if _eacca := _fbbgc.StrikeAttr.ValidateWithPath(path + "/\u0053\u0074\u0072\u0069\u006b\u0065\u0041\u0074\u0074\u0072"); _eacca != nil {
		return _eacca
	}
	if _fbbgc.KernAttr != nil {
		if *_fbbgc.KernAttr < 0 {
			return _gf.Errorf("\u0025\u0073/m\u002e\u004b\u0065r\u006e\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fbbgc.KernAttr)
		}
		if *_fbbgc.KernAttr > 400000 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002eK\u0065\u0072\u006e\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u003c\u003d\u0020\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fbbgc.KernAttr)
		}
	}
	if _edcgf := _fbbgc.CapAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u0070\u0041\u0074\u0074\u0072"); _edcgf != nil {
		return _edcgf
	}
	if _fbbgc.SpcAttr != nil {
		if _cfgddg := _fbbgc.SpcAttr.ValidateWithPath(path + "\u002f\u0053\u0070\u0063\u0041\u0074\u0074\u0072"); _cfgddg != nil {
			return _cfgddg
		}
	}
	if _fbbgc.BaselineAttr != nil {
		if _ffdaec := _fbbgc.BaselineAttr.ValidateWithPath(path + "\u002f\u0042\u0061\u0073\u0065\u006c\u0069\u006e\u0065\u0041\u0074\u0074\u0072"); _ffdaec != nil {
			return _ffdaec
		}
	}
	if _fbbgc.Ln != nil {
		if _bcgfb := _fbbgc.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _bcgfb != nil {
			return _bcgfb
		}
	}
	if _fbbgc.NoFill != nil {
		if _ecgad := _fbbgc.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _ecgad != nil {
			return _ecgad
		}
	}
	if _fbbgc.SolidFill != nil {
		if _fgda := _fbbgc.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _fgda != nil {
			return _fgda
		}
	}
	if _fbbgc.GradFill != nil {
		if _gadaa := _fbbgc.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _gadaa != nil {
			return _gadaa
		}
	}
	if _fbbgc.BlipFill != nil {
		if _bgbfe := _fbbgc.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _bgbfe != nil {
			return _bgbfe
		}
	}
	if _fbbgc.PattFill != nil {
		if _fbebc := _fbbgc.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _fbebc != nil {
			return _fbebc
		}
	}
	if _fbbgc.GrpFill != nil {
		if _bbdcf := _fbbgc.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _bbdcf != nil {
			return _bbdcf
		}
	}
	if _fbbgc.EffectLst != nil {
		if _afbda := _fbbgc.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _afbda != nil {
			return _afbda
		}
	}
	if _fbbgc.EffectDag != nil {
		if _ecfcd := _fbbgc.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _ecfcd != nil {
			return _ecfcd
		}
	}
	if _fbbgc.Highlight != nil {
		if _ddagb := _fbbgc.Highlight.ValidateWithPath(path + "\u002f\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"); _ddagb != nil {
			return _ddagb
		}
	}
	if _fbbgc.ULnTx != nil {
		if _fafd := _fbbgc.ULnTx.ValidateWithPath(path + "\u002f\u0055\u004c\u006e\u0054\u0078"); _fafd != nil {
			return _fafd
		}
	}
	if _fbbgc.ULn != nil {
		if _aebea := _fbbgc.ULn.ValidateWithPath(path + "\u002f\u0055\u004c\u006e"); _aebea != nil {
			return _aebea
		}
	}
	if _fbbgc.UFillTx != nil {
		if _begace := _fbbgc.UFillTx.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c\u0054\u0078"); _begace != nil {
			return _begace
		}
	}
	if _fbbgc.UFill != nil {
		if _fagac := _fbbgc.UFill.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c"); _fagac != nil {
			return _fagac
		}
	}
	if _fbbgc.Latin != nil {
		if _afca := _fbbgc.Latin.ValidateWithPath(path + "\u002f\u004c\u0061\u0074\u0069\u006e"); _afca != nil {
			return _afca
		}
	}
	if _fbbgc.Ea != nil {
		if _bdgag := _fbbgc.Ea.ValidateWithPath(path + "\u002f\u0045\u0061"); _bdgag != nil {
			return _bdgag
		}
	}
	if _fbbgc.Cs != nil {
		if _fcagb := _fbbgc.Cs.ValidateWithPath(path + "\u002f\u0043\u0073"); _fcagb != nil {
			return _fcagb
		}
	}
	if _fbbgc.Sym != nil {
		if _aebeb := _fbbgc.Sym.ValidateWithPath(path + "\u002f\u0053\u0079\u006d"); _aebeb != nil {
			return _aebeb
		}
	}
	if _fbbgc.HlinkClick != nil {
		if _gdbfc := _fbbgc.HlinkClick.ValidateWithPath(path + "/\u0048\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"); _gdbfc != nil {
			return _gdbfc
		}
	}
	if _fbbgc.HlinkMouseOver != nil {
		if _gefcab := _fbbgc.HlinkMouseOver.ValidateWithPath(path + "\u002fH\u006ci\u006e\u006b\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"); _gefcab != nil {
			return _gefcab
		}
	}
	if _fbbgc.Rtl != nil {
		if _gcgd := _fbbgc.Rtl.ValidateWithPath(path + "\u002f\u0052\u0074\u006c"); _gcgd != nil {
			return _gcgd
		}
	}
	if _fbbgc.ExtLst != nil {
		if _ecbe := _fbbgc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ecbe != nil {
			return _ecbe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DefaultShapeDefinition and its children, prefixing error messages with path
func (_dcag *CT_DefaultShapeDefinition) ValidateWithPath(path string) error {
	if _cddg := _dcag.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _cddg != nil {
		return _cddg
	}
	if _ceec := _dcag.BodyPr.ValidateWithPath(path + "\u002fB\u006f\u0064\u0079\u0050\u0072"); _ceec != nil {
		return _ceec
	}
	if _aebec := _dcag.LstStyle.ValidateWithPath(path + "\u002fL\u0073\u0074\u0053\u0074\u0079\u006ce"); _aebec != nil {
		return _aebec
	}
	if _dcag.Style != nil {
		if _bagef := _dcag.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _bagef != nil {
			return _bagef
		}
	}
	if _dcag.ExtLst != nil {
		if _dgdf := _dcag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgdf != nil {
			return _dgdf
		}
	}
	return nil
}

type ST_BevelPresetType byte

func (_bfcee ST_TextHorzOverflowType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_bfcee.String(), start)
}

func (_gbab *CT_GroupTransform2D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _efgc := range start.Attr {
		if _efgc.Name.Local == "\u0072\u006f\u0074" {
			_aceg, _gedd := _c.ParseInt(_efgc.Value, 10, 32)
			if _gedd != nil {
				return _gedd
			}
			_fadad := int32(_aceg)
			_gbab.RotAttr = &_fadad
			continue
		}
		if _efgc.Name.Local == "\u0066\u006c\u0069p\u0048" {
			_cdbee, _fgaec := _c.ParseBool(_efgc.Value)
			if _fgaec != nil {
				return _fgaec
			}
			_gbab.FlipHAttr = &_cdbee
			continue
		}
		if _efgc.Name.Local == "\u0066\u006c\u0069p\u0056" {
			_ceab, _fecd := _c.ParseBool(_efgc.Value)
			if _fecd != nil {
				return _fecd
			}
			_gbab.FlipVAttr = &_ceab
			continue
		}
	}
_cbce:
	for {
		_agaff, _cafb := d.Token()
		if _cafb != nil {
			return _cafb
		}
		switch _eafe := _agaff.(type) {
		case _g.StartElement:
			switch _eafe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}:
				_gbab.Off = NewCT_Point2D()
				if _ffdedg := d.DecodeElement(_gbab.Off, &_eafe); _ffdedg != nil {
					return _ffdedg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_gbab.Ext = NewCT_PositiveSize2D()
				if _eagdd := d.DecodeElement(_gbab.Ext, &_eafe); _eagdd != nil {
					return _eagdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u004ff\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u004ff\u0066"}:
				_gbab.ChOff = NewCT_Point2D()
				if _agdbb := d.DecodeElement(_gbab.ChOff, &_eafe); _agdbb != nil {
					return _agdbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0045x\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0045x\u0074"}:
				_gbab.ChExt = NewCT_PositiveSize2D()
				if _fcfba := d.DecodeElement(_gbab.ChExt, &_eafe); _fcfba != nil {
					return _fcfba
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u0032\u0044\u0020\u0025\u0076", _eafe.Name)
				if _geba := d.Skip(); _geba != nil {
					return _geba
				}
			}
		case _g.EndElement:
			break _cbce
		case _g.CharData:
		}
	}
	return nil
}

func (_age *CT_AlphaInverseEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_gfc:
	for {
		_ccg, _gge := d.Token()
		if _gge != nil {
			return _gge
		}
		switch _fbg := _ccg.(type) {
		case _g.StartElement:
			switch _fbg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_age.ScrgbClr = NewCT_ScRgbColor()
				if _gedb := d.DecodeElement(_age.ScrgbClr, &_fbg); _gedb != nil {
					return _gedb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_age.SrgbClr = NewCT_SRgbColor()
				if _ffcfa := d.DecodeElement(_age.SrgbClr, &_fbg); _ffcfa != nil {
					return _ffcfa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_age.HslClr = NewCT_HslColor()
				if _bfgg := d.DecodeElement(_age.HslClr, &_fbg); _bfgg != nil {
					return _bfgg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_age.SysClr = NewCT_SystemColor()
				if _ebbb := d.DecodeElement(_age.SysClr, &_fbg); _ebbb != nil {
					return _ebbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_age.SchemeClr = NewCT_SchemeColor()
				if _ccfc := d.DecodeElement(_age.SchemeClr, &_fbg); _ccfc != nil {
					return _ccfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_age.PrstClr = NewCT_PresetColor()
				if _eeg := d.DecodeElement(_age.PrstClr, &_fbg); _eeg != nil {
					return _eeg
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0049\u006e\u0076\u0065\u0072\u0073\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _fbg.Name)
				if _acgd := d.Skip(); _acgd != nil {
					return _acgd
				}
			}
		case _g.EndElement:
			break _gfc
		case _g.CharData:
		}
	}
	return nil
}

func (_bfbda *ST_BevelPresetType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_bfbda = 0
	case "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074":
		*_bfbda = 1
	case "\u0063\u0069\u0072\u0063\u006c\u0065":
		*_bfbda = 2
	case "\u0073\u006c\u006fp\u0065":
		*_bfbda = 3
	case "\u0063\u0072\u006fs\u0073":
		*_bfbda = 4
	case "\u0061\u006e\u0067l\u0065":
		*_bfbda = 5
	case "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed":
		*_bfbda = 6
	case "\u0063\u006f\u006e\u0076\u0065\u0078":
		*_bfbda = 7
	case "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et":
		*_bfbda = 8
	case "\u0064\u0069\u0076o\u0074":
		*_bfbda = 9
	case "\u0072\u0069\u0062\u006c\u0065\u0074":
		*_bfbda = 10
	case "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065":
		*_bfbda = 11
	case "\u0061r\u0074\u0044\u0065\u0063\u006f":
		*_bfbda = 12
	}
	return nil
}

// Validate validates the CT_BackgroundFormatting and its children
func (_fadc *CT_BackgroundFormatting) Validate() error {
	return _fadc.ValidateWithPath("\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067")
}

// Validate validates the CT_PositivePercentage and its children
func (_geaf *CT_PositivePercentage) Validate() error {
	return _geaf.ValidateWithPath("C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0050\u0065\u0072c\u0065\u006e\u0074\u0061\u0067\u0065")
}

type EG_ThemeableEffectStyle struct {
	Effect    *CT_EffectProperties
	EffectRef *CT_StyleMatrixReference
}

func (_dfga ST_OnOffStyleType) Validate() error { return _dfga.ValidateWithPath("") }

const (
	ST_BlipCompressionUnset   ST_BlipCompression = 0
	ST_BlipCompressionEmail   ST_BlipCompression = 1
	ST_BlipCompressionScreen  ST_BlipCompression = 2
	ST_BlipCompressionPrint   ST_BlipCompression = 3
	ST_BlipCompressionHqprint ST_BlipCompression = 4
	ST_BlipCompressionNone    ST_BlipCompression = 5
)

func (_bcdec ST_BevelPresetType) ValidateWithPath(path string) error {
	switch _bcdec {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bcdec))
	}
	return nil
}

func (_debbb ST_PathShadeType) String() string {
	switch _debbb {
	case 0:
		return ""
	case 1:
		return "\u0073\u0068\u0061p\u0065"
	case 2:
		return "\u0063\u0069\u0072\u0063\u006c\u0065"
	case 3:
		return "\u0072\u0065\u0063\u0074"
	}
	return ""
}

func (_ddcb *CT_OuterShadowEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ddcb.BlurRadAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062l\u0075\u0072\u0052\u0061\u0064"}, Value: _gf.Sprintf("\u0025\u0076", *_ddcb.BlurRadAttr)})
	}
	if _ddcb.DistAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _gf.Sprintf("\u0025\u0076", *_ddcb.DistAttr)})
	}
	if _ddcb.DirAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0072"}, Value: _gf.Sprintf("\u0025\u0076", *_ddcb.DirAttr)})
	}
	if _ddcb.SxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0078"}, Value: _gf.Sprintf("\u0025\u0076", *_ddcb.SxAttr)})
	}
	if _ddcb.SyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0079"}, Value: _gf.Sprintf("\u0025\u0076", *_ddcb.SyAttr)})
	}
	if _ddcb.KxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006b\u0078"}, Value: _gf.Sprintf("\u0025\u0076", *_ddcb.KxAttr)})
	}
	if _ddcb.KyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006b\u0079"}, Value: _gf.Sprintf("\u0025\u0076", *_ddcb.KyAttr)})
	}
	if _ddcb.AlgnAttr != ST_RectAlignmentUnset {
		_cadcb, _acgbe := _ddcb.AlgnAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _acgbe != nil {
			return _acgbe
		}
		start.Attr = append(start.Attr, _cadcb)
	}
	if _ddcb.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_ddcb.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	if _ddcb.ScrgbClr != nil {
		_gebb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_ddcb.ScrgbClr, _gebb)
	}
	if _ddcb.SrgbClr != nil {
		_fdda := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_ddcb.SrgbClr, _fdda)
	}
	if _ddcb.HslClr != nil {
		_cgga := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_ddcb.HslClr, _cgga)
	}
	if _ddcb.SysClr != nil {
		_ccbbf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_ddcb.SysClr, _ccbbf)
	}
	if _ddcb.SchemeClr != nil {
		_bggae := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_ddcb.SchemeClr, _bggae)
	}
	if _ddcb.PrstClr != nil {
		_cbbcf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_ddcb.PrstClr, _cbbcf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TablePropertiesChoice and its children, prefixing error messages with path
func (_dfdaa *CT_TablePropertiesChoice) ValidateWithPath(path string) error {
	if _dfdaa.TableStyle != nil {
		if _ddfgfa := _dfdaa.TableStyle.ValidateWithPath(path + "/\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"); _ddfgfa != nil {
			return _ddfgfa
		}
	}
	if _dfdaa.TableStyleId != nil {
		if !_ge.ST_GuidPatternRe.MatchString(*_dfdaa.TableStyleId) {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0054\u0061b\u006c\u0065\u0053t\u0079\u006c\u0065\u0049d\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ge.ST_GuidPatternRe, *_dfdaa.TableStyleId)
		}
	}
	return nil
}

func NewCT_GvmlGroupShapeChoice() *CT_GvmlGroupShapeChoice {
	_bbga := &CT_GvmlGroupShapeChoice{}
	return _bbga
}

func (_bcb *AG_Locking) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bcb.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_bcb.NoGrpAttr))})
	}
	if _bcb.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_bcb.NoSelectAttr))})
	}
	if _bcb.NoRotAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_bcb.NoRotAttr))})
	}
	if _bcb.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_bcb.NoChangeAspectAttr))})
	}
	if _bcb.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_bcb.NoMoveAttr))})
	}
	if _bcb.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_bcb.NoResizeAttr))})
	}
	if _bcb.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_bcb.NoEditPointsAttr))})
	}
	if _bcb.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_bcb.NoAdjustHandlesAttr))})
	}
	if _bcb.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_bcb.NoChangeArrowheadsAttr))})
	}
	if _bcb.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_bcb.NoChangeShapeTypeAttr))})
	}
	return nil
}

func (_gafd *CT_Boolean) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fdaa := range start.Attr {
		if _fdaa.Name.Local == "\u0076\u0061\u006c" {
			_edad, _gfbc := ParseUnionST_OnOff(_fdaa.Value)
			if _gfbc != nil {
				return _gfbc
			}
			_gafd.ValAttr = &_edad
			continue
		}
	}
	for {
		_dabf, _bga := d.Token()
		if _bga != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e\u003a\u0020%\u0073", _bga)
		}
		if _abca, _ffaa := _dabf.(_g.EndElement); _ffaa && _abca.Name == start.Name {
			break
		}
	}
	return nil
}

func (_febeg *CT_LineEndProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _febeg.TypeAttr != ST_LineEndTypeUnset {
		_ebbbf, _gdbdc := _febeg.TypeAttr.MarshalXMLAttr(_g.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _gdbdc != nil {
			return _gdbdc
		}
		start.Attr = append(start.Attr, _ebbbf)
	}
	if _febeg.WAttr != ST_LineEndWidthUnset {
		_gbfae, _dgebg := _febeg.WAttr.MarshalXMLAttr(_g.Name{Local: "\u0077"})
		if _dgebg != nil {
			return _dgebg
		}
		start.Attr = append(start.Attr, _gbfae)
	}
	if _febeg.LenAttr != ST_LineEndLengthUnset {
		_cfgd, _gaac := _febeg.LenAttr.MarshalXMLAttr(_g.Name{Local: "\u006c\u0065\u006e"})
		if _gaac != nil {
			return _gaac
		}
		start.Attr = append(start.Attr, _cfgd)
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dbcgd *CT_ScRgbColor) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072"}, Value: _gf.Sprintf("\u0025\u0076", _dbcgd.RAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067"}, Value: _gf.Sprintf("\u0025\u0076", _dbcgd.GAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062"}, Value: _gf.Sprintf("\u0025\u0076", _dbcgd.BAttr)})
	e.EncodeToken(start)
	if _dbcgd.EG_ColorTransform != nil {
		for _, _gdec := range _dbcgd.EG_ColorTransform {
			_gdec.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_aaffc *CT_TableCell) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bbeg := range start.Attr {
		if _bbeg.Name.Local == "\u0072o\u0077\u0053\u0070\u0061\u006e" {
			_eedgb, _edgc := _c.ParseInt(_bbeg.Value, 10, 32)
			if _edgc != nil {
				return _edgc
			}
			_adebd := int32(_eedgb)
			_aaffc.RowSpanAttr = &_adebd
			continue
		}
		if _bbeg.Name.Local == "\u0067\u0072\u0069\u0064\u0053\u0070\u0061\u006e" {
			_fggfd, _adcea := _c.ParseInt(_bbeg.Value, 10, 32)
			if _adcea != nil {
				return _adcea
			}
			_eagbg := int32(_fggfd)
			_aaffc.GridSpanAttr = &_eagbg
			continue
		}
		if _bbeg.Name.Local == "\u0068\u004d\u0065\u0072\u0067\u0065" {
			_fgcfd, _cdeec := _c.ParseBool(_bbeg.Value)
			if _cdeec != nil {
				return _cdeec
			}
			_aaffc.HMergeAttr = &_fgcfd
			continue
		}
		if _bbeg.Name.Local == "\u0076\u004d\u0065\u0072\u0067\u0065" {
			_ddee, _eeddd := _c.ParseBool(_bbeg.Value)
			if _eeddd != nil {
				return _eeddd
			}
			_aaffc.VMergeAttr = &_ddee
			continue
		}
		if _bbeg.Name.Local == "\u0069\u0064" {
			_bfdbc, _ffeba := _bbeg.Value, error(nil)
			if _ffeba != nil {
				return _ffeba
			}
			_aaffc.IdAttr = &_bfdbc
			continue
		}
	}
_ceece:
	for {
		_fbaec, _abeeb := d.Token()
		if _abeeb != nil {
			return _abeeb
		}
		switch _begbg := _fbaec.(type) {
		case _g.StartElement:
			switch _begbg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				_aaffc.TxBody = NewCT_TextBody()
				if _dbbd := d.DecodeElement(_aaffc.TxBody, &_begbg); _dbbd != nil {
					return _dbbd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0050\u0072"}:
				_aaffc.TcPr = NewCT_TableCellProperties()
				if _gcfgad := d.DecodeElement(_aaffc.TcPr, &_begbg); _gcfgad != nil {
					return _gcfgad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aaffc.ExtLst = NewCT_OfficeArtExtensionList()
				if _bcfea := d.DecodeElement(_aaffc.ExtLst, &_begbg); _bcfea != nil {
					return _bcfea
				}
			default:
				_b.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_T\u0061\u0062l\u0065\u0043\u0065\u006c\u006c\u0020\u0025\u0076", _begbg.Name)
				if _gbeff := d.Skip(); _gbeff != nil {
					return _gbeff
				}
			}
		case _g.EndElement:
			break _ceece
		case _g.CharData:
		}
	}
	return nil
}

func (_baag *CT_ClipboardStyleSheet) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Name.Local = "\u0061:\u0043\u0054\u005f\u0043\u006c\u0069\u0070\u0062\u006f\u0061\u0072d\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074"
	e.EncodeToken(start)
	_adbc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074h\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}}
	e.EncodeElement(_baag.ThemeElements, _adbc)
	_dcdf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_baag.ClrMap, _dcdf)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_TableStyleList() *CT_TableStyleList {
	_feegg := &CT_TableStyleList{}
	_feegg.DefAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _feegg
}

func (_ggbd *CT_BlendEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_eabc, _agda := _ggbd.BlendAttr.MarshalXMLAttr(_g.Name{Local: "\u0062\u006c\u0065n\u0064"})
	if _agda != nil {
		return _agda
	}
	start.Attr = append(start.Attr, _eabc)
	e.EncodeToken(start)
	_agfa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
	e.EncodeElement(_ggbd.Cont, _agfa)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ad *AG_Locking) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gd := range start.Attr {
		if _gd.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_fac, _da := _c.ParseBool(_gd.Value)
			if _da != nil {
				return _da
			}
			_ad.NoGrpAttr = &_fac
			continue
		}
		if _gd.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_df, _fd := _c.ParseBool(_gd.Value)
			if _fd != nil {
				return _fd
			}
			_ad.NoSelectAttr = &_df
			continue
		}
		if _gd.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_cd, _ff := _c.ParseBool(_gd.Value)
			if _ff != nil {
				return _ff
			}
			_ad.NoRotAttr = &_cd
			continue
		}
		if _gd.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_fc, _fff := _c.ParseBool(_gd.Value)
			if _fff != nil {
				return _fff
			}
			_ad.NoChangeAspectAttr = &_fc
			continue
		}
		if _gd.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_cb, _dgc := _c.ParseBool(_gd.Value)
			if _dgc != nil {
				return _dgc
			}
			_ad.NoMoveAttr = &_cb
			continue
		}
		if _gd.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_def, _deff := _c.ParseBool(_gd.Value)
			if _deff != nil {
				return _deff
			}
			_ad.NoResizeAttr = &_def
			continue
		}
		if _gd.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_ae, _aa := _c.ParseBool(_gd.Value)
			if _aa != nil {
				return _aa
			}
			_ad.NoEditPointsAttr = &_ae
			continue
		}
		if _gd.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_fffb, _dc := _c.ParseBool(_gd.Value)
			if _dc != nil {
				return _dc
			}
			_ad.NoAdjustHandlesAttr = &_fffb
			continue
		}
		if _gd.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_fb, _ef := _c.ParseBool(_gd.Value)
			if _ef != nil {
				return _ef
			}
			_ad.NoChangeArrowheadsAttr = &_fb
			continue
		}
		if _gd.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_ca, _ecd := _c.ParseBool(_gd.Value)
			if _ecd != nil {
				return _ecd
			}
			_ad.NoChangeShapeTypeAttr = &_ca
			continue
		}
	}
	for {
		_cde, _ee := d.Token()
		if _ee != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u003a\u0020%\u0073", _ee)
		}
		if _gae, _bcc := _cde.(_g.EndElement); _bcc && _gae.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_PitchFamilyUnset ST_PitchFamily = 0
	ST_PitchFamily00    ST_PitchFamily = 1
	ST_PitchFamily01    ST_PitchFamily = 2
	ST_PitchFamily02    ST_PitchFamily = 3
	ST_PitchFamily16    ST_PitchFamily = 4
	ST_PitchFamily17    ST_PitchFamily = 5
	ST_PitchFamily18    ST_PitchFamily = 6
	ST_PitchFamily32    ST_PitchFamily = 7
	ST_PitchFamily33    ST_PitchFamily = 8
	ST_PitchFamily34    ST_PitchFamily = 9
	ST_PitchFamily48    ST_PitchFamily = 10
	ST_PitchFamily49    ST_PitchFamily = 11
	ST_PitchFamily50    ST_PitchFamily = 12
	ST_PitchFamily64    ST_PitchFamily = 13
	ST_PitchFamily65    ST_PitchFamily = 14
	ST_PitchFamily66    ST_PitchFamily = 15
	ST_PitchFamily80    ST_PitchFamily = 16
	ST_PitchFamily81    ST_PitchFamily = 17
	ST_PitchFamily82    ST_PitchFamily = 18
)

func NewCT_GraphicalObjectFrameLocking() *CT_GraphicalObjectFrameLocking {
	_gceb := &CT_GraphicalObjectFrameLocking{}
	return _gceb
}

// Validate validates the CT_ColorMapping and its children
func (_ecffa *CT_ColorMapping) Validate() error {
	return _ecffa.ValidateWithPath("\u0043T\u005fC\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067")
}

func NewCT_GvmlGraphicalObjectFrame() *CT_GvmlGraphicalObjectFrame {
	_fgcd := &CT_GvmlGraphicalObjectFrame{}
	_fgcd.NvGraphicFramePr = NewCT_GvmlGraphicFrameNonVisual()
	_fgcd.Graphic = NewGraphic()
	_fgcd.Xfrm = NewCT_Transform2D()
	return _fgcd
}

// ValidateWithPath validates the EG_OfficeArtExtensionList and its children, prefixing error messages with path
func (_ddfbb *EG_OfficeArtExtensionList) ValidateWithPath(path string) error {
	for _cgegg, _dbdc := range _ddfbb.Ext {
		if _baeae := _dbdc.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _cgegg)); _baeae != nil {
			return _baeae
		}
	}
	return nil
}

func (_fbaadf *ST_FixedPercentage) ValidateWithPath(path string) error {
	_edgaga := []string{}
	if _fbaadf.ST_FixedPercentageDecimal != nil {
		_edgaga = append(_edgaga, "\u0053T\u005f\u0046\u0069\u0078e\u0064\u0050\u0065\u0072\u0063e\u006et\u0061g\u0065\u0044\u0065\u0063\u0069\u006d\u0061l")
	}
	if _fbaadf.ST_FixedPercentage != nil {
		if _gdaeb := _fbaadf.ST_FixedPercentage.ValidateWithPath(path + "\u002f\u0053\u0054\u005fFi\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065"); _gdaeb != nil {
			return _gdaeb
		}
		_edgaga = append(_edgaga, "\u0053T\u005fF\u0069\u0078\u0065\u0064\u0050e\u0072\u0063e\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_edgaga) > 1 {
		return _gf.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _edgaga)
	}
	return nil
}

func (_fabgf ST_TextAnchoringType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fabgf.String(), start)
}

// ValidateWithPath validates the CT_GeomGuide and its children, prefixing error messages with path
func (_aeebde *CT_GeomGuide) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_ThemeableLineStyle and its children
func (_cccaf *CT_ThemeableLineStyle) Validate() error {
	return _cccaf.ValidateWithPath("C\u0054\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u004c\u0069n\u0065\u0053\u0074\u0079\u006c\u0065")
}

func (_gbgcbe *ST_TextStrikeType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cccdda, _bbdeb := d.Token()
	if _bbdeb != nil {
		return _bbdeb
	}
	if _egcag, _egefd := _cccdda.(_g.EndElement); _egefd && _egcag.Name == start.Name {
		*_gbgcbe = 1
		return nil
	}
	if _bbaggd, _bdbed := _cccdda.(_g.CharData); !_bdbed {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cccdda)
	} else {
		switch string(_bbaggd) {
		case "":
			*_gbgcbe = 0
		case "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065":
			*_gbgcbe = 1
		case "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be":
			*_gbgcbe = 2
		case "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be":
			*_gbgcbe = 3
		}
	}
	_cccdda, _bbdeb = d.Token()
	if _bbdeb != nil {
		return _bbdeb
	}
	if _efedag, _bebcbd := _cccdda.(_g.EndElement); _bebcbd && _efedag.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cccdda)
}

type CT_GvmlGroupShapeChoice struct {
	TxSp         []*CT_GvmlTextShape
	Sp           []*CT_GvmlShape
	CxnSp        []*CT_GvmlConnector
	Pic          []*CT_GvmlPicture
	GraphicFrame []*CT_GvmlGraphicalObjectFrame
	GrpSp        []*CT_GvmlGroupShape
}

func (_fecba *CT_OfficeArtExtensionList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cfbdd:
	for {
		_dbgf, _ddgg := d.Token()
		if _ddgg != nil {
			return _ddgg
		}
		switch _bfedb := _dbgf.(type) {
		case _g.StartElement:
			switch _bfedb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_dbcda := NewCT_OfficeArtExtension()
				if _dbgfb := d.DecodeElement(_dbcda, &_bfedb); _dbgfb != nil {
					return _dbgfb
				}
				_fecba.Ext = append(_fecba.Ext, _dbcda)
			default:
				_b.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0066\u0066\u0069\u0063\u0065\u0041\u0072t\u0045x\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004ci\u0073t\u0020\u0025v", _bfedb.Name)
				if _gfgbe := d.Skip(); _gfgbe != nil {
					return _gfgbe
				}
			}
		case _g.EndElement:
			break _cfbdd
		case _g.CharData:
		}
	}
	return nil
}

type CT_OuterShadowEffect struct {
	BlurRadAttr      *int64
	DistAttr         *int64
	DirAttr          *int32
	SxAttr           *ST_Percentage
	SyAttr           *ST_Percentage
	KxAttr           *int32
	KyAttr           *int32
	AlgnAttr         ST_RectAlignment
	RotWithShapeAttr *bool
	ScrgbClr         *CT_ScRgbColor
	SrgbClr          *CT_SRgbColor
	HslClr           *CT_HslColor
	SysClr           *CT_SystemColor
	SchemeClr        *CT_SchemeColor
	PrstClr          *CT_PresetColor
}

func NewCT_AudioCD() *CT_AudioCD {
	_ffca := &CT_AudioCD{}
	_ffca.St = NewCT_AudioCDTime()
	_ffca.End = NewCT_AudioCDTime()
	return _ffca
}

// Validate validates the CT_AlphaModulateFixedEffect and its children
func (_bbe *CT_AlphaModulateFixedEffect) Validate() error {
	return _bbe.ValidateWithPath("C\u0054\u005f\u0041\u006c\u0070\u0068a\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0046i\u0078\u0065\u0064E\u0066f\u0065\u0063\u0074")
}

func (_aab *CT_AlphaCeilingEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_gde, _gdb := d.Token()
		if _gdb != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0043\u0065\u0069\u006ci\u006e\u0067\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _gdb)
		}
		if _eb, _aegcd := _gde.(_g.EndElement); _aegcd && _eb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_egebc *CT_TextNoAutofit) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_TextAutofit and its children
func (_ecbde *EG_TextAutofit) Validate() error {
	return _ecbde.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0041\u0075t\u006f\u0066\u0069\u0074")
}

func (_agcae *CT_Transform2D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _abcec := range start.Attr {
		if _abcec.Name.Local == "\u0072\u006f\u0074" {
			_edbaa, _fefgf := _c.ParseInt(_abcec.Value, 10, 32)
			if _fefgf != nil {
				return _fefgf
			}
			_ccgfb := int32(_edbaa)
			_agcae.RotAttr = &_ccgfb
			continue
		}
		if _abcec.Name.Local == "\u0066\u006c\u0069p\u0048" {
			_efdab, _ffdfc := _c.ParseBool(_abcec.Value)
			if _ffdfc != nil {
				return _ffdfc
			}
			_agcae.FlipHAttr = &_efdab
			continue
		}
		if _abcec.Name.Local == "\u0066\u006c\u0069p\u0056" {
			_eafdbe, _afabe := _c.ParseBool(_abcec.Value)
			if _afabe != nil {
				return _afabe
			}
			_agcae.FlipVAttr = &_eafdbe
			continue
		}
	}
_daed:
	for {
		_ccdbb, _ddbaf := d.Token()
		if _ddbaf != nil {
			return _ddbaf
		}
		switch _fcadgg := _ccdbb.(type) {
		case _g.StartElement:
			switch _fcadgg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}:
				_agcae.Off = NewCT_Point2D()
				if _cdcge := d.DecodeElement(_agcae.Off, &_fcadgg); _cdcge != nil {
					return _cdcge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_agcae.Ext = NewCT_PositiveSize2D()
				if _bfffe := d.DecodeElement(_agcae.Ext, &_fcadgg); _bfffe != nil {
					return _bfffe
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d2\u0044\u0020\u0025\u0076", _fcadgg.Name)
				if _becgc := d.Skip(); _becgc != nil {
					return _becgc
				}
			}
		case _g.EndElement:
			break _daed
		case _g.CharData:
		}
	}
	return nil
}

func (_efdc *CT_EffectReference) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _eebf := range start.Attr {
		if _eebf.Name.Local == "\u0072\u0065\u0066" {
			_gfcf, _dfbea := _eebf.Value, error(nil)
			if _dfbea != nil {
				return _dfbea
			}
			_efdc.RefAttr = _gfcf
			continue
		}
	}
	for {
		_cebb, _ebeca := d.Token()
		if _ebeca != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0045\u0066\u0066\u0065\u0063\u0074\u0052e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u003a\u0020\u0025\u0073", _ebeca)
		}
		if _cegbg, _adcc := _cebb.(_g.EndElement); _adcc && _cegbg.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_TextAnchoringType byte

// ValidateWithPath validates the CT_FlatText and its children, prefixing error messages with path
func (_dgee *CT_FlatText) ValidateWithPath(path string) error {
	if _dgee.ZAttr != nil {
		if _cebfg := _dgee.ZAttr.ValidateWithPath(path + "\u002f\u005a\u0041\u0074\u0074\u0072"); _cebfg != nil {
			return _cebfg
		}
	}
	return nil
}

type CT_ClipboardStyleSheet struct {
	ThemeElements *CT_BaseStyles
	ClrMap        *CT_ColorMapping
}

// ValidateWithPath validates the CT_DashStop and its children, prefixing error messages with path
func (_faaag *CT_DashStop) ValidateWithPath(path string) error {
	if _gfcd := _faaag.DAttr.ValidateWithPath(path + "\u002f\u0044\u0041\u0074\u0074\u0072"); _gfcd != nil {
		return _gfcd
	}
	if _bfdde := _faaag.SpAttr.ValidateWithPath(path + "\u002fS\u0070\u0041\u0074\u0074\u0072"); _bfdde != nil {
		return _bfdde
	}
	return nil
}

func (_bbadb *EG_Media) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_aaag:
	for {
		_ffcge, _ceabb := d.Token()
		if _ceabb != nil {
			return _ceabb
		}
		switch _bbedbf := _ffcge.(type) {
		case _g.StartElement:
			switch _bbedbf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}:
				_bbadb.AudioCd = NewCT_AudioCD()
				if _dbfg := d.DecodeElement(_bbadb.AudioCd, &_bbedbf); _dbfg != nil {
					return _dbfg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}:
				_bbadb.WavAudioFile = NewCT_EmbeddedWAVAudioFile()
				if _ebcdb := d.DecodeElement(_bbadb.WavAudioFile, &_bbedbf); _ebcdb != nil {
					return _ebcdb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}:
				_bbadb.AudioFile = NewCT_AudioFile()
				if _dfbdd := d.DecodeElement(_bbadb.AudioFile, &_bbedbf); _dfbdd != nil {
					return _dfbdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}:
				_bbadb.VideoFile = NewCT_VideoFile()
				if _efgaa := d.DecodeElement(_bbadb.VideoFile, &_bbedbf); _efgaa != nil {
					return _efgaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}:
				_bbadb.QuickTimeFile = NewCT_QuickTimeFile()
				if _baea := d.DecodeElement(_bbadb.QuickTimeFile, &_bbedbf); _baea != nil {
					return _baea
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u004d\u0065\u0064\u0069\u0061\u0020\u0025\u0076", _bbedbf.Name)
				if _gbffb := d.Skip(); _gbffb != nil {
					return _gbffb
				}
			}
		case _g.EndElement:
			break _aaag
		case _g.CharData:
		}
	}
	return nil
}

type CT_EmptyElement struct{}

func (_caab *CT_LineJoinBevel) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_decf, _dgdc := d.Token()
		if _dgdc != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065J\u006fi\u006e\u0042\u0065\u0076\u0065\u006c\u003a \u0025\u0073", _dgdc)
		}
		if _dbff, _aefc := _decf.(_g.EndElement); _aefc && _dbff.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_ComplementTransform() *CT_ComplementTransform {
	_abfba := &CT_ComplementTransform{}
	return _abfba
}

func NewCT_TableCellProperties() *CT_TableCellProperties {
	_eaadbd := &CT_TableCellProperties{}
	return _eaadbd
}

func NewEG_TextUnderlineLine() *EG_TextUnderlineLine {
	_ffgdb := &EG_TextUnderlineLine{}
	return _ffgdb
}

type CT_TintEffect struct {
	HueAttr *int32
	AmtAttr *ST_FixedPercentage
}

func (_dffbbf *CT_Vector3D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0078"}, Value: _gf.Sprintf("\u0025\u0076", _dffbbf.DxAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0079"}, Value: _gf.Sprintf("\u0025\u0076", _dffbbf.DyAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u007a"}, Value: _gf.Sprintf("\u0025\u0076", _dffbbf.DzAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fgadc ST_TextShapeType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fgadc.String(), start)
}

func NewCT_NoFillProperties() *CT_NoFillProperties { _ddefg := &CT_NoFillProperties{}; return _ddefg }

// Validate validates the CT_Transform2D and its children
func (_abdcd *CT_Transform2D) Validate() error {
	return _abdcd.ValidateWithPath("\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d\u0032\u0044")
}

type CT_TextBulletSizePoint struct{ ValAttr int32 }

// Validate validates the CT_GvmlTextShapeChoice and its children
func (_ffdae *CT_GvmlTextShapeChoice) Validate() error {
	return _ffdae.ValidateWithPath("\u0043\u0054\u005f\u0047vm\u006c\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069c\u0065")
}

type Any interface {
	MarshalXML(_fbfee *_g.Encoder, _dacaa _g.StartElement) error
	UnmarshalXML(_gdce *_g.Decoder, _fbddb _g.StartElement) error
}

// ValidateWithPath validates the CT_TableCol and its children, prefixing error messages with path
func (_fbage *CT_TableCol) ValidateWithPath(path string) error {
	if _ecgbe := _fbage.WAttr.ValidateWithPath(path + "\u002f\u0057\u0041\u0074\u0074\u0072"); _ecgbe != nil {
		return _ecgbe
	}
	if _fbage.ExtLst != nil {
		if _cggga := _fbage.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cggga != nil {
			return _cggga
		}
	}
	return nil
}

func NewCT_AnimationChartBuildProperties() *CT_AnimationChartBuildProperties {
	_ecgb := &CT_AnimationChartBuildProperties{}
	return _ecgb
}

func (_eaggg *ThemeOverride) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_eaggg.CT_BaseStylesOverride = *NewCT_BaseStylesOverride()
_fcfeab:
	for {
		_cfcaa, _bfeaf := d.Token()
		if _bfeaf != nil {
			return _bfeaf
		}
		switch _fagcb := _cfcaa.(type) {
		case _g.StartElement:
			switch _fagcb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				_eaggg.ClrScheme = NewCT_ColorScheme()
				if _fgeec := d.DecodeElement(_eaggg.ClrScheme, &_fagcb); _fgeec != nil {
					return _fgeec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}:
				_eaggg.FontScheme = NewCT_FontScheme()
				if _gdfbef := d.DecodeElement(_eaggg.FontScheme, &_fagcb); _gdfbef != nil {
					return _gdfbef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}:
				_eaggg.FmtScheme = NewCT_StyleMatrix()
				if _cdbd := d.DecodeElement(_eaggg.FmtScheme, &_fagcb); _cdbd != nil {
					return _cdbd
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0054\u0068\u0065\u006de\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065 \u0025\u0076", _fagcb.Name)
				if _bbbfg := d.Skip(); _bbbfg != nil {
					return _bbbfg
				}
			}
		case _g.EndElement:
			break _fcfeab
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_Cell3D() *CT_Cell3D { _baggb := &CT_Cell3D{}; _baggb.Bevel = NewCT_Bevel(); return _baggb }

// ValidateWithPath validates the CT_ColorMapping and its children, prefixing error messages with path
func (_adaa *CT_ColorMapping) ValidateWithPath(path string) error {
	if _adaa.Bg1Attr == ST_ColorSchemeIndexUnset {
		return _gf.Errorf("\u0025\u0073\u002fB\u0067\u0031\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fbgaa := _adaa.Bg1Attr.ValidateWithPath(path + "\u002f\u0042\u0067\u0031\u0041\u0074\u0074\u0072"); _fbgaa != nil {
		return _fbgaa
	}
	if _adaa.Tx1Attr == ST_ColorSchemeIndexUnset {
		return _gf.Errorf("\u0025\u0073\u002fT\u0078\u0031\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gdfd := _adaa.Tx1Attr.ValidateWithPath(path + "\u002f\u0054\u0078\u0031\u0041\u0074\u0074\u0072"); _gdfd != nil {
		return _gdfd
	}
	if _adaa.Bg2Attr == ST_ColorSchemeIndexUnset {
		return _gf.Errorf("\u0025\u0073\u002fB\u0067\u0032\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _afag := _adaa.Bg2Attr.ValidateWithPath(path + "\u002f\u0042\u0067\u0032\u0041\u0074\u0074\u0072"); _afag != nil {
		return _afag
	}
	if _adaa.Tx2Attr == ST_ColorSchemeIndexUnset {
		return _gf.Errorf("\u0025\u0073\u002fT\u0078\u0032\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ccfa := _adaa.Tx2Attr.ValidateWithPath(path + "\u002f\u0054\u0078\u0032\u0041\u0074\u0074\u0072"); _ccfa != nil {
		return _ccfa
	}
	if _adaa.Accent1Attr == ST_ColorSchemeIndexUnset {
		return _gf.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0031\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _gabe := _adaa.Accent1Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0031\u0041\u0074\u0074\u0072"); _gabe != nil {
		return _gabe
	}
	if _adaa.Accent2Attr == ST_ColorSchemeIndexUnset {
		return _gf.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0032\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _gbccf := _adaa.Accent2Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0032\u0041\u0074\u0074\u0072"); _gbccf != nil {
		return _gbccf
	}
	if _adaa.Accent3Attr == ST_ColorSchemeIndexUnset {
		return _gf.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0033\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _aeagg := _adaa.Accent3Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0033\u0041\u0074\u0074\u0072"); _aeagg != nil {
		return _aeagg
	}
	if _adaa.Accent4Attr == ST_ColorSchemeIndexUnset {
		return _gf.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0034\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _gfec := _adaa.Accent4Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0034\u0041\u0074\u0074\u0072"); _gfec != nil {
		return _gfec
	}
	if _adaa.Accent5Attr == ST_ColorSchemeIndexUnset {
		return _gf.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0035\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _gbef := _adaa.Accent5Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0035\u0041\u0074\u0074\u0072"); _gbef != nil {
		return _gbef
	}
	if _adaa.Accent6Attr == ST_ColorSchemeIndexUnset {
		return _gf.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0036\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _eeebe := _adaa.Accent6Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0036\u0041\u0074\u0074\u0072"); _eeebe != nil {
		return _eeebe
	}
	if _adaa.HlinkAttr == ST_ColorSchemeIndexUnset {
		return _gf.Errorf("\u0025\u0073\u002f\u0048\u006c\u0069n\u006b\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _aeadf := _adaa.HlinkAttr.ValidateWithPath(path + "\u002f\u0048\u006c\u0069\u006e\u006b\u0041\u0074\u0074\u0072"); _aeadf != nil {
		return _aeadf
	}
	if _adaa.FolHlinkAttr == ST_ColorSchemeIndexUnset {
		return _gf.Errorf("\u0025\u0073/F\u006f\u006c\u0048l\u0069\u006e\u006b\u0041ttr\u0020is\u0020\u0061\u0020\u006d\u0061\u006e\u0064at\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _dgfe := _adaa.FolHlinkAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006c\u0048\u006c\u0069\u006e\u006b\u0041\u0074\u0074\u0072"); _dgfe != nil {
		return _dgfe
	}
	if _adaa.ExtLst != nil {
		if _decb := _adaa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _decb != nil {
			return _decb
		}
	}
	return nil
}

// Validate validates the CT_AnimationDgmBuildProperties and its children
func (_beba *CT_AnimationDgmBuildProperties) Validate() error {
	return _beba.ValidateWithPath("\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069o\u006e\u0044\u0067\u006d\u0042\u0075\u0069l\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_dgcde *CT_TextBulletColorFollowText) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_deefb, _baef := d.Token()
		if _baef != nil {
			return _gf.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006ce\u0074\u0043\u006f\u006c\u006f\u0072\u0046\u006f\u006c\u006cow\u0054\u0065\u0078t\u003a \u0025\u0073", _baef)
		}
		if _fagga, _dgegfb := _deefb.(_g.EndElement); _dgegfb && _fagga.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_FlatText() *CT_FlatText { _agcc := &CT_FlatText{}; return _agcc }

func (_cfcbg ST_BlendMode) String() string {
	switch _cfcbg {
	case 0:
		return ""
	case 1:
		return "\u006f\u0076\u0065\u0072"
	case 2:
		return "\u006d\u0075\u006c\u0074"
	case 3:
		return "\u0073\u0063\u0072\u0065\u0065\u006e"
	case 4:
		return "\u0064\u0061\u0072\u006b\u0065\u006e"
	case 5:
		return "\u006ci\u0067\u0068\u0074\u0065\u006e"
	}
	return ""
}

// ValidateWithPath validates the CT_FillOverlayEffect and its children, prefixing error messages with path
func (_cdfbf *CT_FillOverlayEffect) ValidateWithPath(path string) error {
	if _cdfbf.BlendAttr == ST_BlendModeUnset {
		return _gf.Errorf("\u0025\u0073\u002f\u0042\u006c\u0065n\u0064\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _bbba := _cdfbf.BlendAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064\u0041\u0074\u0074\u0072"); _bbba != nil {
		return _bbba
	}
	if _cdfbf.NoFill != nil {
		if _fcag := _cdfbf.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _fcag != nil {
			return _fcag
		}
	}
	if _cdfbf.SolidFill != nil {
		if _cgbbc := _cdfbf.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _cgbbc != nil {
			return _cgbbc
		}
	}
	if _cdfbf.GradFill != nil {
		if _gdca := _cdfbf.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _gdca != nil {
			return _gdca
		}
	}
	if _cdfbf.BlipFill != nil {
		if _gbedc := _cdfbf.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _gbedc != nil {
			return _gbedc
		}
	}
	if _cdfbf.PattFill != nil {
		if _caff := _cdfbf.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _caff != nil {
			return _caff
		}
	}
	if _cdfbf.GrpFill != nil {
		if _cecg := _cdfbf.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _cecg != nil {
			return _cecg
		}
	}
	return nil
}

// Validate validates the EG_TextBulletColor and its children
func (_ggcc *EG_TextBulletColor) Validate() error {
	return _ggcc.ValidateWithPath("\u0045G\u005fT\u0065\u0078\u0074\u0042\u0075l\u006c\u0065t\u0043\u006f\u006c\u006f\u0072")
}

func (_dcfd *CT_LineStyleList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_cfccc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u006e"}}
	for _, _dfee := range _dcfd.Ln {
		e.EncodeElement(_dfee, _cfccc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fefab *CT_SoftEdgesEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0061\u0064"}, Value: _gf.Sprintf("\u0025\u0076", _fefab.RadAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_Bevel() *CT_Bevel { _ada := &CT_Bevel{}; return _ada }

func (_fgade *ST_ChartBuildStep) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_fgade = 0
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_fgade = 1
	case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_fgade = 2
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_fgade = 3
	case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
		*_fgade = 4
	case "\u0061\u006c\u006c\u0050\u0074\u0073":
		*_fgade = 5
	case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
		*_fgade = 6
	}
	return nil
}

func (_fgaba *CT_TextUnderlineFillFollowText) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_gfgaa, _cgfaf := d.Token()
		if _cgfaf != nil {
			return _gf.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0046\u006f\u006c\u006c\u006fw\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _cgfaf)
		}
		if _eebfbd, _gbbde := _gfgaa.(_g.EndElement); _gbbde && _eebfbd.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_TextLineBreak() *CT_TextLineBreak { _dacga := &CT_TextLineBreak{}; return _dacga }

func NewCT_GroupTransform2D() *CT_GroupTransform2D { _efddg := &CT_GroupTransform2D{}; return _efddg }

// Validate validates the CT_TextFont and its children
func (_acgced *CT_TextFont) Validate() error {
	return _acgced.ValidateWithPath("C\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u006f\u006e\u0074")
}

// Validate validates the CT_Point3D and its children
func (_cedg *CT_Point3D) Validate() error {
	return _cedg.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0033\u0044")
}

func (_bccec *CT_GroupShapeProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gafeg := range start.Attr {
		if _gafeg.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_bccec.BwModeAttr.UnmarshalXMLAttr(_gafeg)
			continue
		}
	}
_cfgb:
	for {
		_gbgd, _fddg := d.Token()
		if _fddg != nil {
			return _fddg
		}
		switch _cffeg := _gbgd.(type) {
		case _g.StartElement:
			switch _cffeg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_bccec.Xfrm = NewCT_GroupTransform2D()
				if _dgeec := d.DecodeElement(_bccec.Xfrm, &_cffeg); _dgeec != nil {
					return _dgeec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_bccec.NoFill = NewCT_NoFillProperties()
				if _cagda := d.DecodeElement(_bccec.NoFill, &_cffeg); _cagda != nil {
					return _cagda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_bccec.SolidFill = NewCT_SolidColorFillProperties()
				if _dcef := d.DecodeElement(_bccec.SolidFill, &_cffeg); _dcef != nil {
					return _dcef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_bccec.GradFill = NewCT_GradientFillProperties()
				if _geaa := d.DecodeElement(_bccec.GradFill, &_cffeg); _geaa != nil {
					return _geaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_bccec.BlipFill = NewCT_BlipFillProperties()
				if _beafb := d.DecodeElement(_bccec.BlipFill, &_cffeg); _beafb != nil {
					return _beafb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_bccec.PattFill = NewCT_PatternFillProperties()
				if _cdad := d.DecodeElement(_bccec.PattFill, &_cffeg); _cdad != nil {
					return _cdad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_bccec.GrpFill = NewCT_GroupFillProperties()
				if _ageb := d.DecodeElement(_bccec.GrpFill, &_cffeg); _ageb != nil {
					return _ageb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_bccec.EffectLst = NewCT_EffectList()
				if _gdgfd := d.DecodeElement(_bccec.EffectLst, &_cffeg); _gdgfd != nil {
					return _gdgfd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_bccec.EffectDag = NewCT_EffectContainer()
				if _edeg := d.DecodeElement(_bccec.EffectDag, &_cffeg); _edeg != nil {
					return _edeg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_bccec.Scene3d = NewCT_Scene3D()
				if _gcfaa := d.DecodeElement(_bccec.Scene3d, &_cffeg); _gcfaa != nil {
					return _gcfaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bccec.ExtLst = NewCT_OfficeArtExtensionList()
				if _acffeg := d.DecodeElement(_bccec.ExtLst, &_cffeg); _acffeg != nil {
					return _acffeg
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070e\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _cffeg.Name)
				if _agbdb := d.Skip(); _agbdb != nil {
					return _agbdb
				}
			}
		case _g.EndElement:
			break _cfgb
		case _g.CharData:
		}
	}
	return nil
}

func (_ebbaa *CT_StyleMatrixReference) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064\u0078"}, Value: _gf.Sprintf("\u0025\u0076", _ebbaa.IdxAttr)})
	e.EncodeToken(start)
	if _ebbaa.ScrgbClr != nil {
		_ebbf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_ebbaa.ScrgbClr, _ebbf)
	}
	if _ebbaa.SrgbClr != nil {
		_adbac := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_ebbaa.SrgbClr, _adbac)
	}
	if _ebbaa.HslClr != nil {
		_eadcb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_ebbaa.HslClr, _eadcb)
	}
	if _ebbaa.SysClr != nil {
		_efage := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_ebbaa.SysClr, _efage)
	}
	if _ebbaa.SchemeClr != nil {
		_eegc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_ebbaa.SchemeClr, _eegc)
	}
	if _ebbaa.PrstClr != nil {
		_bedgb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_ebbaa.PrstClr, _bedgb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fcbab *CT_FillStyleList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ccda:
	for {
		_deabd, _fbgfd := d.Token()
		if _fbgfd != nil {
			return _fbgfd
		}
		switch _beafd := _deabd.(type) {
		case _g.StartElement:
			switch _beafd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_feeg := NewEG_FillProperties()
				_feeg.NoFill = NewCT_NoFillProperties()
				if _ggdd := d.DecodeElement(_feeg.NoFill, &_beafd); _ggdd != nil {
					return _ggdd
				}
				_fcbab.EG_FillProperties = append(_fcbab.EG_FillProperties, _feeg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_fbgbc := NewEG_FillProperties()
				_fbgbc.SolidFill = NewCT_SolidColorFillProperties()
				if _cdbg := d.DecodeElement(_fbgbc.SolidFill, &_beafd); _cdbg != nil {
					return _cdbg
				}
				_fcbab.EG_FillProperties = append(_fcbab.EG_FillProperties, _fbgbc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_gegfb := NewEG_FillProperties()
				_gegfb.GradFill = NewCT_GradientFillProperties()
				if _ddbbf := d.DecodeElement(_gegfb.GradFill, &_beafd); _ddbbf != nil {
					return _ddbbf
				}
				_fcbab.EG_FillProperties = append(_fcbab.EG_FillProperties, _gegfb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_gegde := NewEG_FillProperties()
				_gegde.BlipFill = NewCT_BlipFillProperties()
				if _bfcab := d.DecodeElement(_gegde.BlipFill, &_beafd); _bfcab != nil {
					return _bfcab
				}
				_fcbab.EG_FillProperties = append(_fcbab.EG_FillProperties, _gegde)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_eccb := NewEG_FillProperties()
				_eccb.PattFill = NewCT_PatternFillProperties()
				if _addf := d.DecodeElement(_eccb.PattFill, &_beafd); _addf != nil {
					return _addf
				}
				_fcbab.EG_FillProperties = append(_fcbab.EG_FillProperties, _eccb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_affgb := NewEG_FillProperties()
				_affgb.GrpFill = NewCT_GroupFillProperties()
				if _fdff := d.DecodeElement(_affgb.GrpFill, &_beafd); _fdff != nil {
					return _fdff
				}
				_fcbab.EG_FillProperties = append(_fcbab.EG_FillProperties, _affgb)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025v", _beafd.Name)
				if _fcbg := d.Skip(); _fcbg != nil {
					return _fcbg
				}
			}
		case _g.EndElement:
			break _ccda
		case _g.CharData:
		}
	}
	return nil
}

func (_deffc *CT_Percentage) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _gf.Sprintf("\u0025\u0076", _deffc.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cebf *CT_Cell3D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cebf.PrstMaterialAttr != ST_PresetMaterialTypeUnset {
		_baae, _abfad := _cebf.PrstMaterialAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c"})
		if _abfad != nil {
			return _abfad
		}
		start.Attr = append(start.Attr, _baae)
	}
	e.EncodeToken(start)
	_dagc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0065\u0076\u0065\u006c"}}
	e.EncodeElement(_cebf.Bevel, _dagc)
	if _cebf.LightRig != nil {
		_cbbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}}
		e.EncodeElement(_cebf.LightRig, _cbbe)
	}
	if _cebf.ExtLst != nil {
		_eadc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cebf.ExtLst, _eadc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gcacd *CT_InverseGammaTransform) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_dafef, _befgb := d.Token()
		if _befgb != nil {
			return _gf.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0049nve\u0072se\u0047\u0061\u006d\u006d\u0061\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u003a\u0020%\u0073", _befgb)
		}
		if _bcfad, _fbgbb := _dafef.(_g.EndElement); _fbgbb && _bcfad.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TablePropertiesChoice struct {
	TableStyle   *CT_TableStyle
	TableStyleId *string
}

func (_cbdcb ST_FixedPercentage) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _cbdcb.ST_FixedPercentageDecimal != nil {
		e.EncodeToken(_g.CharData(_gf.Sprintf("\u0025\u0064", *_cbdcb.ST_FixedPercentageDecimal)))
	}
	if _cbdcb.ST_FixedPercentage != nil {
		e.Encode(_cbdcb.ST_FixedPercentage)
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

type ST_TextVerticalType byte

func (_addd *CT_ContentPartLocking) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bcdaa := range start.Attr {
		if _bcdaa.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_dgce, _egafa := _c.ParseBool(_bcdaa.Value)
			if _egafa != nil {
				return _egafa
			}
			_addd.NoGrpAttr = &_dgce
			continue
		}
		if _bcdaa.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_agfac, _ggad := _c.ParseBool(_bcdaa.Value)
			if _ggad != nil {
				return _ggad
			}
			_addd.NoSelectAttr = &_agfac
			continue
		}
		if _bcdaa.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_cggc, _ggef := _c.ParseBool(_bcdaa.Value)
			if _ggef != nil {
				return _ggef
			}
			_addd.NoRotAttr = &_cggc
			continue
		}
		if _bcdaa.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_cgbg, _fbbde := _c.ParseBool(_bcdaa.Value)
			if _fbbde != nil {
				return _fbbde
			}
			_addd.NoChangeAspectAttr = &_cgbg
			continue
		}
		if _bcdaa.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_fdefd, _caga := _c.ParseBool(_bcdaa.Value)
			if _caga != nil {
				return _caga
			}
			_addd.NoMoveAttr = &_fdefd
			continue
		}
		if _bcdaa.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_dcgd, _agca := _c.ParseBool(_bcdaa.Value)
			if _agca != nil {
				return _agca
			}
			_addd.NoResizeAttr = &_dcgd
			continue
		}
		if _bcdaa.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_edbd, _cfcg := _c.ParseBool(_bcdaa.Value)
			if _cfcg != nil {
				return _cfcg
			}
			_addd.NoEditPointsAttr = &_edbd
			continue
		}
		if _bcdaa.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_eddg, _bfbce := _c.ParseBool(_bcdaa.Value)
			if _bfbce != nil {
				return _bfbce
			}
			_addd.NoAdjustHandlesAttr = &_eddg
			continue
		}
		if _bcdaa.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_cedd, _bdcag := _c.ParseBool(_bcdaa.Value)
			if _bdcag != nil {
				return _bdcag
			}
			_addd.NoChangeArrowheadsAttr = &_cedd
			continue
		}
		if _bcdaa.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_gddb, _cfeca := _c.ParseBool(_bcdaa.Value)
			if _cfeca != nil {
				return _cfeca
			}
			_addd.NoChangeShapeTypeAttr = &_gddb
			continue
		}
	}
_egdfg:
	for {
		_dfaf, _babg := d.Token()
		if _babg != nil {
			return _babg
		}
		switch _bebb := _dfaf.(type) {
		case _g.StartElement:
			switch _bebb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_addd.ExtLst = NewCT_OfficeArtExtensionList()
				if _debd := d.DecodeElement(_addd.ExtLst, &_bebb); _debd != nil {
					return _debd
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _bebb.Name)
				if _ddbb := d.Skip(); _ddbb != nil {
					return _ddbb
				}
			}
		case _g.EndElement:
			break _egdfg
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AlphaInverseEffect and its children, prefixing error messages with path
func (_dcf *CT_AlphaInverseEffect) ValidateWithPath(path string) error {
	if _dcf.ScrgbClr != nil {
		if _addb := _dcf.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _addb != nil {
			return _addb
		}
	}
	if _dcf.SrgbClr != nil {
		if _bac := _dcf.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _bac != nil {
			return _bac
		}
	}
	if _dcf.HslClr != nil {
		if _bbfe := _dcf.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _bbfe != nil {
			return _bbfe
		}
	}
	if _dcf.SysClr != nil {
		if _gdc := _dcf.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _gdc != nil {
			return _gdc
		}
	}
	if _dcf.SchemeClr != nil {
		if _gede := _dcf.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _gede != nil {
			return _gede
		}
	}
	if _dcf.PrstClr != nil {
		if _ebf := _dcf.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _ebf != nil {
			return _ebf
		}
	}
	return nil
}

func NewCT_AdjustHandleList() *CT_AdjustHandleList { _fdec := &CT_AdjustHandleList{}; return _fdec }

func NewCT_TextBulletSizePoint() *CT_TextBulletSizePoint {
	_ccgf := &CT_TextBulletSizePoint{}
	_ccgf.ValAttr = 100
	return _ccgf
}

type CT_GradientStopList struct{ Gs []*CT_GradientStop }

func (_cdd *CT_AudioFile) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cfba := range start.Attr {
		if _cfba.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cfba.Name.Local == "\u006c\u0069\u006e\u006b" || _cfba.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cfba.Name.Local == "\u006c\u0069\u006e\u006b" {
			_ddb, _bcge := _cfba.Value, error(nil)
			if _bcge != nil {
				return _bcge
			}
			_cdd.LinkAttr = _ddb
			continue
		}
		if _cfba.Name.Local == "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065" {
			_ffdf, _cbf := _cfba.Value, error(nil)
			if _cbf != nil {
				return _cbf
			}
			_cdd.ContentTypeAttr = &_ffdf
			continue
		}
	}
_fdgd:
	for {
		_eddb, _fcee := d.Token()
		if _fcee != nil {
			return _fcee
		}
		switch _adge := _eddb.(type) {
		case _g.StartElement:
			switch _adge.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdd.ExtLst = NewCT_OfficeArtExtensionList()
				if _abdg := d.DecodeElement(_cdd.ExtLst, &_adge); _abdg != nil {
					return _abdg
				}
			default:
				_b.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_A\u0075\u0064i\u006f\u0046\u0069\u006c\u0065\u0020\u0025\u0076", _adge.Name)
				if _cggf := d.Skip(); _cggf != nil {
					return _cggf
				}
			}
		case _g.EndElement:
			break _fdgd
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GraphicalObject and its children, prefixing error messages with path
func (_ddefb *CT_GraphicalObject) ValidateWithPath(path string) error {
	if _bfbf := _ddefb.GraphicData.ValidateWithPath(path + "\u002f\u0047\u0072a\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"); _bfbf != nil {
		return _bfbf
	}
	return nil
}

type CT_AdjustHandleList struct {
	AhXY    []*CT_XYAdjustHandle
	AhPolar []*CT_PolarAdjustHandle
}

// Validate validates the CT_TableBackgroundStyle and its children
func (_ffbba *CT_TableBackgroundStyle) Validate() error {
	return _ffbba.ValidateWithPath("\u0043\u0054\u005fTa\u0062\u006c\u0065\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0053\u0074\u0079\u006c\u0065")
}

type CT_TextBulletTypefaceFollowText struct{}

func (_gfe *CT_AudioCD) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gfe.St = NewCT_AudioCDTime()
	_gfe.End = NewCT_AudioCDTime()
_dfg:
	for {
		_egc, _bdcg := d.Token()
		if _bdcg != nil {
			return _bdcg
		}
		switch _bge := _egc.(type) {
		case _g.StartElement:
			switch _bge.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074"}:
				if _bab := d.DecodeElement(_gfe.St, &_bge); _bab != nil {
					return _bab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}:
				if _gdbd := d.DecodeElement(_gfe.End, &_bge); _gdbd != nil {
					return _gdbd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfe.ExtLst = NewCT_OfficeArtExtensionList()
				if _eceg := d.DecodeElement(_gfe.ExtLst, &_bge); _eceg != nil {
					return _eceg
				}
			default:
				_b.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0043\u0044\u0020\u0025\u0076", _bge.Name)
				if _dadc := d.Skip(); _dadc != nil {
					return _dadc
				}
			}
		case _g.EndElement:
			break _dfg
		case _g.CharData:
		}
	}
	return nil
}

type CT_GroupShapeProperties struct {
	BwModeAttr ST_BlackWhiteMode
	Xfrm       *CT_GroupTransform2D
	NoFill     *CT_NoFillProperties
	SolidFill  *CT_SolidColorFillProperties
	GradFill   *CT_GradientFillProperties
	BlipFill   *CT_BlipFillProperties
	PattFill   *CT_PatternFillProperties
	GrpFill    *CT_GroupFillProperties
	EffectLst  *CT_EffectList
	EffectDag  *CT_EffectContainer
	Scene3d    *CT_Scene3D
	ExtLst     *CT_OfficeArtExtensionList
}

func (_cbbg *CT_GraphicalObjectFrameLocking) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	if _cbbg.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_cbbg.NoGrpAttr))})
	}
	if _cbbg.NoDrilldownAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "n\u006f\u0044\u0072\u0069\u006c\u006c\u0064\u006f\u0077\u006e"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_cbbg.NoDrilldownAttr))})
	}
	if _cbbg.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_cbbg.NoSelectAttr))})
	}
	if _cbbg.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_cbbg.NoChangeAspectAttr))})
	}
	if _cbbg.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_cbbg.NoMoveAttr))})
	}
	if _cbbg.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_cbbg.NoResizeAttr))})
	}
	e.EncodeToken(start)
	if _cbbg.ExtLst != nil {
		_gcfae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cbbg.ExtLst, _gcfae)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_deagbd *ST_TextFontAlignType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_deagbd = 0
	case "\u0061\u0075\u0074\u006f":
		*_deagbd = 1
	case "\u0074":
		*_deagbd = 2
	case "\u0063\u0074\u0072":
		*_deagbd = 3
	case "\u0062\u0061\u0073\u0065":
		*_deagbd = 4
	case "\u0062":
		*_deagbd = 5
	}
	return nil
}

func (_eeaa *CT_Path2DList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _eeaa.Path != nil {
		_ggeec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0068"}}
		for _, _ccdfe := range _eeaa.Path {
			e.EncodeElement(_ccdfe, _ggeec)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_StyleMatrixReference struct {
	IdxAttr   uint32
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_gabfa ST_AnimationChartBuildType) String() string {
	if _gabfa.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		return _gabfa.ST_AnimationBuildType.String()
	}
	if _gabfa.ST_AnimationChartOnlyBuildType != ST_AnimationChartOnlyBuildTypeUnset {
		return _gabfa.ST_AnimationChartOnlyBuildType.String()
	}
	return ""
}

// Validate validates the EG_TextBulletSize and its children
func (_agagg *EG_TextBulletSize) Validate() error {
	return _agagg.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065t\u0053\u0069\u007a\u0065")
}

func (_aagg ST_LineEndType) ValidateWithPath(path string) error {
	switch _aagg {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aagg))
	}
	return nil
}

func NewCT_PositiveFixedPercentage() *CT_PositiveFixedPercentage {
	_gffgf := &CT_PositiveFixedPercentage{}
	return _gffgf
}

func (_bdcgc ST_PresetPatternVal) String() string {
	switch _bdcgc {
	case 0:
		return ""
	case 1:
		return "\u0070\u0063\u0074\u0035"
	case 2:
		return "\u0070\u0063\u00741\u0030"
	case 3:
		return "\u0070\u0063\u00742\u0030"
	case 4:
		return "\u0070\u0063\u00742\u0035"
	case 5:
		return "\u0070\u0063\u00743\u0030"
	case 6:
		return "\u0070\u0063\u00744\u0030"
	case 7:
		return "\u0070\u0063\u00745\u0030"
	case 8:
		return "\u0070\u0063\u00746\u0030"
	case 9:
		return "\u0070\u0063\u00747\u0030"
	case 10:
		return "\u0070\u0063\u00747\u0035"
	case 11:
		return "\u0070\u0063\u00748\u0030"
	case 12:
		return "\u0070\u0063\u00749\u0030"
	case 13:
		return "\u0068\u006f\u0072\u007a"
	case 14:
		return "\u0076\u0065\u0072\u0074"
	case 15:
		return "\u006c\u0074\u0048\u006f\u0072\u007a"
	case 16:
		return "\u006c\u0074\u0056\u0065\u0072\u0074"
	case 17:
		return "\u0064\u006b\u0048\u006f\u0072\u007a"
	case 18:
		return "\u0064\u006b\u0056\u0065\u0072\u0074"
	case 19:
		return "\u006ea\u0072\u0048\u006f\u0072\u007a"
	case 20:
		return "\u006ea\u0072\u0056\u0065\u0072\u0074"
	case 21:
		return "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a"
	case 22:
		return "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074"
	case 23:
		return "\u0063\u0072\u006fs\u0073"
	case 24:
		return "\u0064\u006e\u0044\u0069\u0061\u0067"
	case 25:
		return "\u0075\u0070\u0044\u0069\u0061\u0067"
	case 26:
		return "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067"
	case 27:
		return "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067"
	case 28:
		return "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067"
	case 29:
		return "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067"
	case 30:
		return "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067"
	case 31:
		return "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067"
	case 32:
		return "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067"
	case 33:
		return "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067"
	case 34:
		return "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s"
	case 35:
		return "\u0073m\u0043\u0068\u0065\u0063\u006b"
	case 36:
		return "\u006cg\u0043\u0068\u0065\u0063\u006b"
	case 37:
		return "\u0073\u006d\u0047\u0072\u0069\u0064"
	case 38:
		return "\u006c\u0067\u0047\u0072\u0069\u0064"
	case 39:
		return "\u0064o\u0074\u0047\u0072\u0069\u0064"
	case 40:
		return "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case 41:
		return "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case 42:
		return "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k"
	case 43:
		return "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k"
	case 44:
		return "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed"
	case 45:
		return "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064"
	case 46:
		return "\u0064o\u0074\u0044\u006d\u006e\u0064"
	case 47:
		return "\u0070\u006c\u0061i\u0064"
	case 48:
		return "\u0073\u0070\u0068\u0065\u0072\u0065"
	case 49:
		return "\u0077\u0065\u0061v\u0065"
	case 50:
		return "\u0064\u0069\u0076o\u0074"
	case 51:
		return "\u0073h\u0069\u006e\u0067\u006c\u0065"
	case 52:
		return "\u0077\u0061\u0076\u0065"
	case 53:
		return "\u0074r\u0065\u006c\u006c\u0069\u0073"
	case 54:
		return "\u007a\u0069\u0067\u005a\u0061\u0067"
	}
	return ""
}

func (_egga *CT_GvmlUseShapeRectangle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_adabf, _decbg := d.Token()
		if _decbg != nil {
			return _gf.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0047vml\u0055se\u0053\u0068\u0061\u0070\u0065\u0052\u0065ct\u0061\u006e\u0067\u006c\u0065\u003a\u0020%\u0073", _decbg)
		}
		if _debde, _ecda := _adabf.(_g.EndElement); _ecda && _debde.Name == start.Name {
			break
		}
	}
	return nil
}

func (_aeca *CT_ConnectionSiteList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_efda:
	for {
		_faea, _aggg := d.Token()
		if _aggg != nil {
			return _aggg
		}
		switch _ddae := _faea.(type) {
		case _g.StartElement:
			switch _ddae.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e"}:
				_eefg := NewCT_ConnectionSite()
				if _fbag := d.DecodeElement(_eefg, &_ddae); _fbag != nil {
					return _fbag
				}
				_aeca.Cxn = append(_aeca.Cxn, _eefg)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0053\u0069\u0074\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ddae.Name)
				if _gccd := d.Skip(); _gccd != nil {
					return _gccd
				}
			}
		case _g.EndElement:
			break _efda
		case _g.CharData:
		}
	}
	return nil
}

func (_bgde *CT_Path2DQuadBezierTo) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_acae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0074"}}
	for _, _ccfcb := range _bgde.Pt {
		e.EncodeElement(_ccfcb, _acae)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ConnectionSiteList and its children, prefixing error messages with path
func (_ccgd *CT_ConnectionSiteList) ValidateWithPath(path string) error {
	for _bace, _dcad := range _ccgd.Cxn {
		if _ceaf := _dcad.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0043\u0078\u006e\u005b\u0025\u0064\u005d", path, _bace)); _ceaf != nil {
			return _ceaf
		}
	}
	return nil
}

// Validate validates the CT_BaseStylesOverride and its children
func (_eaec *CT_BaseStylesOverride) Validate() error {
	return _eaec.ValidateWithPath("C\u0054\u005f\u0042\u0061se\u0053t\u0079\u006c\u0065\u0073\u004fv\u0065\u0072\u0072\u0069\u0064\u0065")
}

func (_dgabb *VideoFile) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "a\u003a\u0076\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"
	return _dgabb.CT_VideoFile.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_TableStyleCellStyle and its children, prefixing error messages with path
func (_cbbcb *CT_TableStyleCellStyle) ValidateWithPath(path string) error {
	if _cbbcb.TcBdr != nil {
		if _ffdbg := _cbbcb.TcBdr.ValidateWithPath(path + "\u002f\u0054\u0063\u0042\u0064\u0072"); _ffdbg != nil {
			return _ffdbg
		}
	}
	if _cbbcb.Fill != nil {
		if _ddead := _cbbcb.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _ddead != nil {
			return _ddead
		}
	}
	if _cbbcb.FillRef != nil {
		if _bcae := _cbbcb.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _bcae != nil {
			return _bcae
		}
	}
	if _cbbcb.Cell3D != nil {
		if _fagea := _cbbcb.Cell3D.ValidateWithPath(path + "\u002fC\u0065\u006c\u006c\u0033\u0044"); _fagea != nil {
			return _fagea
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AlphaCeilingEffect and its children, prefixing error messages with path
func (_bdc *CT_AlphaCeilingEffect) ValidateWithPath(path string) error { return nil }

type ST_PresetLineDashVal byte

// Validate validates the CT_BiLevelEffect and its children
func (_fba *CT_BiLevelEffect) Validate() error {
	return _fba.ValidateWithPath("\u0043\u0054_\u0042\u0069\u004ce\u0076\u0065\u006c\u0045\u0066\u0066\u0065\u0063\u0074")
}

// Validate validates the CT_GvmlShapeNonVisual and its children
func (_ddgde *CT_GvmlShapeNonVisual) Validate() error {
	return _ddgde.ValidateWithPath("C\u0054\u005f\u0047\u0076ml\u0053h\u0061\u0070\u0065\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c")
}

func ParseUnionST_OnOff(s string) (_ge.ST_OnOff, error) { return _ge.ST_OnOff{}, nil }

// Validate validates the EG_ShadeProperties and its children
func (_gecebf *EG_ShadeProperties) Validate() error {
	return _gecebf.ValidateWithPath("\u0045G\u005fS\u0068\u0061\u0064\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}

func (_fdbaf ST_BlipCompression) String() string {
	switch _fdbaf {
	case 0:
		return ""
	case 1:
		return "\u0065\u006d\u0061i\u006c"
	case 2:
		return "\u0073\u0063\u0072\u0065\u0065\u006e"
	case 3:
		return "\u0070\u0072\u0069n\u0074"
	case 4:
		return "\u0068q\u0070\u0072\u0069\u006e\u0074"
	case 5:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

func NewCT_Transform2D() *CT_Transform2D { _eabf := &CT_Transform2D{}; return _eabf }

type CT_SchemeColor struct {
	ValAttr           ST_SchemeColorVal
	EG_ColorTransform []*EG_ColorTransform
}

// ValidateWithPath validates the CT_SoftEdgesEffect and its children, prefixing error messages with path
func (_bdcee *CT_SoftEdgesEffect) ValidateWithPath(path string) error {
	if _bdcee.RadAttr < 0 {
		return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0061d\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _bdcee.RadAttr)
	}
	if _bdcee.RadAttr > 27273042316900 {
		return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0052\u0061\u0064A\u0074\u0074\u0072 m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020%\u0076\u0029", path, _bdcee.RadAttr)
	}
	return nil
}

// ValidateWithPath validates the CT_PolarAdjustHandle and its children, prefixing error messages with path
func (_ffadc *CT_PolarAdjustHandle) ValidateWithPath(path string) error {
	if _ffadc.MinRAttr != nil {
		if _cdgd := _ffadc.MinRAttr.ValidateWithPath(path + "\u002fM\u0069\u006e\u0052\u0041\u0074\u0074r"); _cdgd != nil {
			return _cdgd
		}
	}
	if _ffadc.MaxRAttr != nil {
		if _debdb := _ffadc.MaxRAttr.ValidateWithPath(path + "\u002fM\u0061\u0078\u0052\u0041\u0074\u0074r"); _debdb != nil {
			return _debdb
		}
	}
	if _ffadc.MinAngAttr != nil {
		if _afadg := _ffadc.MinAngAttr.ValidateWithPath(path + "/\u004d\u0069\u006e\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _afadg != nil {
			return _afadg
		}
	}
	if _ffadc.MaxAngAttr != nil {
		if _egbd := _ffadc.MaxAngAttr.ValidateWithPath(path + "/\u004d\u0061\u0078\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _egbd != nil {
			return _egbd
		}
	}
	if _bfdbg := _ffadc.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _bfdbg != nil {
		return _bfdbg
	}
	return nil
}

func NewEG_TextBulletColor() *EG_TextBulletColor { _dbcge := &EG_TextBulletColor{}; return _dbcge }

func (_fbcdg *CT_TableStyleTextStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fbcdg.BAttr != ST_OnOffStyleTypeUnset {
		_beecd, _cfagb := _fbcdg.BAttr.MarshalXMLAttr(_g.Name{Local: "\u0062"})
		if _cfagb != nil {
			return _cfagb
		}
		start.Attr = append(start.Attr, _beecd)
	}
	if _fbcdg.IAttr != ST_OnOffStyleTypeUnset {
		_cfge, _ecged := _fbcdg.IAttr.MarshalXMLAttr(_g.Name{Local: "\u0069"})
		if _ecged != nil {
			return _ecged
		}
		start.Attr = append(start.Attr, _cfge)
	}
	e.EncodeToken(start)
	if _fbcdg.Font != nil {
		_dbgbfe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u006f\u006e\u0074"}}
		e.EncodeElement(_fbcdg.Font, _dbgbfe)
	}
	if _fbcdg.FontRef != nil {
		_bfcdb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0066\u006f\u006e\u0074\u0052\u0065f"}}
		e.EncodeElement(_fbcdg.FontRef, _bfcdb)
	}
	if _fbcdg.ScrgbClr != nil {
		_efbff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_fbcdg.ScrgbClr, _efbff)
	}
	if _fbcdg.SrgbClr != nil {
		_bgbc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_fbcdg.SrgbClr, _bgbc)
	}
	if _fbcdg.HslClr != nil {
		_gbeb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_fbcdg.HslClr, _gbeb)
	}
	if _fbcdg.SysClr != nil {
		_edgdc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_fbcdg.SysClr, _edgdc)
	}
	if _fbcdg.SchemeClr != nil {
		_bbcga := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_fbcdg.SchemeClr, _bbcga)
	}
	if _fbcdg.PrstClr != nil {
		_dadad := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_fbcdg.PrstClr, _dadad)
	}
	if _fbcdg.ExtLst != nil {
		_bdggg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fbcdg.ExtLst, _bdggg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_PositiveSize2D struct {
	CxAttr int64
	CyAttr int64
}

// Validate validates the CT_GvmlConnectorNonVisual and its children
func (_fece *CT_GvmlConnectorNonVisual) Validate() error {
	return _fece.ValidateWithPath("\u0043T\u005f\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065c\u0074o\u0072N\u006f\u006e\u0056\u0069\u0073\u0075\u0061l")
}

func (_cef *CT_AlphaModulateFixedEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cef.AmtAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u006d\u0074"}, Value: _gf.Sprintf("\u0025\u0076", *_cef.AmtAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Path2DArcTo and its children
func (_bcaad *CT_Path2DArcTo) Validate() error {
	return _bcaad.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044A\u0072\u0063\u0054\u006f")
}

func (_cfdd *CT_OfficeStyleSheet) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cfdd.ThemeElements = NewCT_BaseStyles()
	for _, _baggga := range start.Attr {
		if _baggga.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bgcg, _edcea := _baggga.Value, error(nil)
			if _edcea != nil {
				return _edcea
			}
			_cfdd.NameAttr = &_bgcg
			continue
		}
	}
_edbdbe:
	for {
		_cfgfa, _acecd := d.Token()
		if _acecd != nil {
			return _acecd
		}
		switch _ggga := _cfgfa.(type) {
		case _g.StartElement:
			switch _ggga.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}:
				if _deeg := d.DecodeElement(_cfdd.ThemeElements, &_ggga); _deeg != nil {
					return _deeg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}:
				_cfdd.ObjectDefaults = NewCT_ObjectStyleDefaults()
				if _dffdc := d.DecodeElement(_cfdd.ObjectDefaults, &_ggga); _dffdc != nil {
					return _dffdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}:
				_cfdd.ExtraClrSchemeLst = NewCT_ColorSchemeList()
				if _ddeff := d.DecodeElement(_cfdd.ExtraClrSchemeLst, &_ggga); _ddeff != nil {
					return _ddeff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}:
				_cfdd.CustClrLst = NewCT_CustomColorList()
				if _dfcec := d.DecodeElement(_cfdd.CustClrLst, &_ggga); _dfcec != nil {
					return _dfcec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfdd.ExtLst = NewCT_OfficeArtExtensionList()
				if _bgeb := d.DecodeElement(_cfdd.ExtLst, &_ggga); _bgeb != nil {
					return _bgeb
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u004f\u0066\u0066\u0069\u0063\u0065\u0053ty\u006c\u0065\u0053\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _ggga.Name)
				if _cedc := d.Skip(); _cedc != nil {
					return _cedc
				}
			}
		case _g.EndElement:
			break _edbdbe
		case _g.CharData:
		}
	}
	return nil
}

func (_dgdfa *CT_PositiveSize2D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u0078"}, Value: _gf.Sprintf("\u0025\u0076", _dgdfa.CxAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u0079"}, Value: _gf.Sprintf("\u0025\u0076", _dgdfa.CyAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewEG_ColorChoice() *EG_ColorChoice { _fffec := &EG_ColorChoice{}; return _fffec }

func NewCT_FontScheme() *CT_FontScheme {
	_dcggcg := &CT_FontScheme{}
	_dcggcg.MajorFont = NewCT_FontCollection()
	_dcggcg.MinorFont = NewCT_FontCollection()
	return _dcggcg
}

func (_gafee ST_LineCap) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_gafee.String(), start)
}

// Validate validates the CT_Color and its children
func (_dfgb *CT_Color) Validate() error {
	return _dfgb.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072")
}

func (_agbb *CT_GraphicalObject) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_cbdf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_agbb.GraphicData, _cbdf)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_begb *CT_Bevel) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dadf := range start.Attr {
		if _dadf.Name.Local == "\u0077" {
			_bfgb, _dcfec := _c.ParseInt(_dadf.Value, 10, 64)
			if _dcfec != nil {
				return _dcfec
			}
			_begb.WAttr = &_bfgb
			continue
		}
		if _dadf.Name.Local == "\u0068" {
			_eef, _aead := _c.ParseInt(_dadf.Value, 10, 64)
			if _aead != nil {
				return _aead
			}
			_begb.HAttr = &_eef
			continue
		}
		if _dadf.Name.Local == "\u0070\u0072\u0073\u0074" {
			_begb.PrstAttr.UnmarshalXMLAttr(_dadf)
			continue
		}
	}
	for {
		_dcga, _dgba := d.Token()
		if _dgba != nil {
			return _gf.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fB\u0065\u0076\u0065\u006c: \u0025\u0073", _dgba)
		}
		if _fbga, _befa := _dcga.(_g.EndElement); _befa && _fbga.Name == start.Name {
			break
		}
	}
	return nil
}

func (_caad *CT_PictureLocking) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gfgfd := range start.Attr {
		if _gfgfd.Name.Local == "\u006e\u006f\u0043\u0072\u006f\u0070" {
			_acbe, _bccfa := _c.ParseBool(_gfgfd.Value)
			if _bccfa != nil {
				return _bccfa
			}
			_caad.NoCropAttr = &_acbe
			continue
		}
		if _gfgfd.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_daccf, _bfdf := _c.ParseBool(_gfgfd.Value)
			if _bfdf != nil {
				return _bfdf
			}
			_caad.NoGrpAttr = &_daccf
			continue
		}
		if _gfgfd.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_dgca, _dgfca := _c.ParseBool(_gfgfd.Value)
			if _dgfca != nil {
				return _dgfca
			}
			_caad.NoSelectAttr = &_dgca
			continue
		}
		if _gfgfd.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_cedcg, _bacef := _c.ParseBool(_gfgfd.Value)
			if _bacef != nil {
				return _bacef
			}
			_caad.NoRotAttr = &_cedcg
			continue
		}
		if _gfgfd.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_eabad, _gccab := _c.ParseBool(_gfgfd.Value)
			if _gccab != nil {
				return _gccab
			}
			_caad.NoChangeAspectAttr = &_eabad
			continue
		}
		if _gfgfd.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_daac, _eebe := _c.ParseBool(_gfgfd.Value)
			if _eebe != nil {
				return _eebe
			}
			_caad.NoMoveAttr = &_daac
			continue
		}
		if _gfgfd.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_dbcdd, _eddba := _c.ParseBool(_gfgfd.Value)
			if _eddba != nil {
				return _eddba
			}
			_caad.NoResizeAttr = &_dbcdd
			continue
		}
		if _gfgfd.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_ccfcge, _egafaf := _c.ParseBool(_gfgfd.Value)
			if _egafaf != nil {
				return _egafaf
			}
			_caad.NoEditPointsAttr = &_ccfcge
			continue
		}
		if _gfgfd.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_aaae, _ggcdd := _c.ParseBool(_gfgfd.Value)
			if _ggcdd != nil {
				return _ggcdd
			}
			_caad.NoAdjustHandlesAttr = &_aaae
			continue
		}
		if _gfgfd.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_feedc, _acabc := _c.ParseBool(_gfgfd.Value)
			if _acabc != nil {
				return _acabc
			}
			_caad.NoChangeArrowheadsAttr = &_feedc
			continue
		}
		if _gfgfd.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_dggge, _gefeb := _c.ParseBool(_gfgfd.Value)
			if _gefeb != nil {
				return _gefeb
			}
			_caad.NoChangeShapeTypeAttr = &_dggge
			continue
		}
	}
_aebaf:
	for {
		_cccbb, _fdcb := d.Token()
		if _fdcb != nil {
			return _fdcb
		}
		switch _aeafc := _cccbb.(type) {
		case _g.StartElement:
			switch _aeafc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_caad.ExtLst = NewCT_OfficeArtExtensionList()
				if _efagd := d.DecodeElement(_caad.ExtLst, &_aeafc); _efagd != nil {
					return _efagd
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _aeafc.Name)
				if _cfdf := d.Skip(); _cfdf != nil {
					return _cfdf
				}
			}
		case _g.EndElement:
			break _aebaf
		case _g.CharData:
		}
	}
	return nil
}

func (_efcfc *EG_FillModeProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _efcfc.Tile != nil {
		_facdc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0069\u006c\u0065"}}
		e.EncodeElement(_efcfc.Tile, _facdc)
	}
	if _efcfc.Stretch != nil {
		_cgaeg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0074\u0072\u0065\u0074\u0063h"}}
		e.EncodeElement(_efcfc.Stretch, _cgaeg)
	}
	return nil
}

// ValidateWithPath validates the CT_Path2DList and its children, prefixing error messages with path
func (_fbcdc *CT_Path2DList) ValidateWithPath(path string) error {
	for _bcdcb, _bddbf := range _fbcdc.Path {
		if _gecbg := _bddbf.ValidateWithPath(_gf.Sprintf("%\u0073\u002f\u0050\u0061\u0074\u0068\u005b\u0025\u0064\u005d", path, _bcdcb)); _gecbg != nil {
			return _gecbg
		}
	}
	return nil
}

// ValidateWithPath validates the EG_LineFillProperties and its children, prefixing error messages with path
func (_aagab *EG_LineFillProperties) ValidateWithPath(path string) error {
	if _aagab.NoFill != nil {
		if _deegd := _aagab.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _deegd != nil {
			return _deegd
		}
	}
	if _aagab.SolidFill != nil {
		if _dcgf := _aagab.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _dcgf != nil {
			return _dcgf
		}
	}
	if _aagab.GradFill != nil {
		if _fegcdg := _aagab.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _fegcdg != nil {
			return _fegcdg
		}
	}
	if _aagab.PattFill != nil {
		if _bfbac := _aagab.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _bfbac != nil {
			return _bfbac
		}
	}
	return nil
}

type CT_FontScheme struct {
	NameAttr  string
	MajorFont *CT_FontCollection
	MinorFont *CT_FontCollection
	ExtLst    *CT_OfficeArtExtensionList
}

type CT_Point3D struct {
	XAttr ST_Coordinate
	YAttr ST_Coordinate
	ZAttr ST_Coordinate
}

func (_fceee *CT_ColorMapping) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_dbee, _bdccb := _fceee.Bg1Attr.MarshalXMLAttr(_g.Name{Local: "\u0062\u0067\u0031"})
	if _bdccb != nil {
		return _bdccb
	}
	start.Attr = append(start.Attr, _dbee)
	_dbee, _bdccb = _fceee.Tx1Attr.MarshalXMLAttr(_g.Name{Local: "\u0074\u0078\u0031"})
	if _bdccb != nil {
		return _bdccb
	}
	start.Attr = append(start.Attr, _dbee)
	_dbee, _bdccb = _fceee.Bg2Attr.MarshalXMLAttr(_g.Name{Local: "\u0062\u0067\u0032"})
	if _bdccb != nil {
		return _bdccb
	}
	start.Attr = append(start.Attr, _dbee)
	_dbee, _bdccb = _fceee.Tx2Attr.MarshalXMLAttr(_g.Name{Local: "\u0074\u0078\u0032"})
	if _bdccb != nil {
		return _bdccb
	}
	start.Attr = append(start.Attr, _dbee)
	_dbee, _bdccb = _fceee.Accent1Attr.MarshalXMLAttr(_g.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0031"})
	if _bdccb != nil {
		return _bdccb
	}
	start.Attr = append(start.Attr, _dbee)
	_dbee, _bdccb = _fceee.Accent2Attr.MarshalXMLAttr(_g.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0032"})
	if _bdccb != nil {
		return _bdccb
	}
	start.Attr = append(start.Attr, _dbee)
	_dbee, _bdccb = _fceee.Accent3Attr.MarshalXMLAttr(_g.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0033"})
	if _bdccb != nil {
		return _bdccb
	}
	start.Attr = append(start.Attr, _dbee)
	_dbee, _bdccb = _fceee.Accent4Attr.MarshalXMLAttr(_g.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0034"})
	if _bdccb != nil {
		return _bdccb
	}
	start.Attr = append(start.Attr, _dbee)
	_dbee, _bdccb = _fceee.Accent5Attr.MarshalXMLAttr(_g.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0035"})
	if _bdccb != nil {
		return _bdccb
	}
	start.Attr = append(start.Attr, _dbee)
	_dbee, _bdccb = _fceee.Accent6Attr.MarshalXMLAttr(_g.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0036"})
	if _bdccb != nil {
		return _bdccb
	}
	start.Attr = append(start.Attr, _dbee)
	_dbee, _bdccb = _fceee.HlinkAttr.MarshalXMLAttr(_g.Name{Local: "\u0068\u006c\u0069n\u006b"})
	if _bdccb != nil {
		return _bdccb
	}
	start.Attr = append(start.Attr, _dbee)
	_dbee, _bdccb = _fceee.FolHlinkAttr.MarshalXMLAttr(_g.Name{Local: "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"})
	if _bdccb != nil {
		return _bdccb
	}
	start.Attr = append(start.Attr, _dbee)
	e.EncodeToken(start)
	if _fceee.ExtLst != nil {
		_babe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fceee.ExtLst, _babe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gbaadb *ST_PathShadeType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cgdeb, _gabdd := d.Token()
	if _gabdd != nil {
		return _gabdd
	}
	if _bdaeb, _efgdb := _cgdeb.(_g.EndElement); _efgdb && _bdaeb.Name == start.Name {
		*_gbaadb = 1
		return nil
	}
	if _fbeaa, _dcffd := _cgdeb.(_g.CharData); !_dcffd {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgdeb)
	} else {
		switch string(_fbeaa) {
		case "":
			*_gbaadb = 0
		case "\u0073\u0068\u0061p\u0065":
			*_gbaadb = 1
		case "\u0063\u0069\u0072\u0063\u006c\u0065":
			*_gbaadb = 2
		case "\u0072\u0065\u0063\u0074":
			*_gbaadb = 3
		}
	}
	_cgdeb, _gabdd = d.Token()
	if _gabdd != nil {
		return _gabdd
	}
	if _afbdd, _cfdfb := _cgdeb.(_g.EndElement); _cfdfb && _afbdd.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgdeb)
}

type ST_PresetCameraType byte

type CT_GradientFillProperties struct {
	FlipAttr         ST_TileFlipMode
	RotWithShapeAttr *bool
	GsLst            *CT_GradientStopList
	Lin              *CT_LinearShadeProperties
	Path             *CT_PathShadeProperties
	TileRect         *CT_RelativeRect
}

// ValidateWithPath validates the CT_TablePartStyle and its children, prefixing error messages with path
func (_egad *CT_TablePartStyle) ValidateWithPath(path string) error {
	if _egad.TcTxStyle != nil {
		if _cbgd := _egad.TcTxStyle.ValidateWithPath(path + "\u002f\u0054\u0063\u0054\u0078\u0053\u0074\u0079\u006c\u0065"); _cbgd != nil {
			return _cbgd
		}
	}
	if _egad.TcStyle != nil {
		if _egbae := _egad.TcStyle.ValidateWithPath(path + "\u002f\u0054\u0063\u0053\u0074\u0079\u006c\u0065"); _egbae != nil {
			return _egbae
		}
	}
	return nil
}

// Validate validates the CT_LightRig and its children
func (_gefa *CT_LightRig) Validate() error {
	return _gefa.ValidateWithPath("C\u0054\u005f\u004c\u0069\u0067\u0068\u0074\u0052\u0069\u0067")
}

func NewCT_Scene3D() *CT_Scene3D {
	_edbdfd := &CT_Scene3D{}
	_edbdfd.Camera = NewCT_Camera()
	_edbdfd.LightRig = NewCT_LightRig()
	return _edbdfd
}

func ParseStdlibTime(s string) (_d.Time, error) { return _d.Time{}, nil }

func (_cbac *CT_AlphaOutsetEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cbac.RadAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0061\u0064"}, Value: _gf.Sprintf("\u0025\u0076", *_cbac.RadAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_NonVisualGroupDrawingShapeProps and its children
func (_dccad *CT_NonVisualGroupDrawingShapeProps) Validate() error {
	return _dccad.ValidateWithPath("\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072o\u0075p\u0044r\u0061w\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0073")
}

func NewCT_ShapeProperties() *CT_ShapeProperties { _faafg := &CT_ShapeProperties{}; return _faafg }

// Validate validates the CT_GvmlPicture and its children
func (_gaee *CT_GvmlPicture) Validate() error {
	return _gaee.ValidateWithPath("\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069c\u0074\u0075\u0072\u0065")
}

const (
	ST_LineEndWidthUnset ST_LineEndWidth = 0
	ST_LineEndWidthSm    ST_LineEndWidth = 1
	ST_LineEndWidthMed   ST_LineEndWidth = 2
	ST_LineEndWidthLg    ST_LineEndWidth = 3
)

func (_bfebd *CT_TextAutonumberBullet) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bfebd.TypeAttr = ST_TextAutonumberScheme(1)
	for _, _acegf := range start.Attr {
		if _acegf.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bfebd.TypeAttr.UnmarshalXMLAttr(_acegf)
			continue
		}
		if _acegf.Name.Local == "\u0073t\u0061\u0072\u0074\u0041\u0074" {
			_agfdd, _gdddf := _c.ParseInt(_acegf.Value, 10, 32)
			if _gdddf != nil {
				return _gdddf
			}
			_fdecf := int32(_agfdd)
			_bfebd.StartAtAttr = &_fdecf
			continue
		}
	}
	for {
		_fcgdg, _afgb := d.Token()
		if _afgb != nil {
			return _gf.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0065\u0078t\u0041\u0075\u0074\u006f\u006e\u0075\u006db\u0065\u0072\u0042\u0075\u006c\u006c\u0065\u0074\u003a\u0020%\u0073", _afgb)
		}
		if _bbagg, _gggbg := _fcgdg.(_g.EndElement); _gggbg && _bbagg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_PathShadeProperties struct {
	PathAttr   ST_PathShadeType
	FillToRect *CT_RelativeRect
}

func (_bbgea *ST_LineEndWidth) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fffdca, _ebedf := d.Token()
	if _ebedf != nil {
		return _ebedf
	}
	if _fbggbd, _geadd := _fffdca.(_g.EndElement); _geadd && _fbggbd.Name == start.Name {
		*_bbgea = 1
		return nil
	}
	if _eedab, _fbcdga := _fffdca.(_g.CharData); !_fbcdga {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fffdca)
	} else {
		switch string(_eedab) {
		case "":
			*_bbgea = 0
		case "\u0073\u006d":
			*_bbgea = 1
		case "\u006d\u0065\u0064":
			*_bbgea = 2
		case "\u006c\u0067":
			*_bbgea = 3
		}
	}
	_fffdca, _ebedf = d.Token()
	if _ebedf != nil {
		return _ebedf
	}
	if _fdgbg, _eebeeb := _fffdca.(_g.EndElement); _eebeeb && _fdgbg.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fffdca)
}

type CT_DashStop struct {
	DAttr  ST_PositivePercentage
	SpAttr ST_PositivePercentage
}

func (_bdefa *CT_TextNormalAutofit) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bdefa.FontScaleAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066o\u006e\u0074\u0053\u0063\u0061\u006ce"}, Value: _gf.Sprintf("\u0025\u0076", *_bdefa.FontScaleAttr)})
	}
	if _bdefa.LnSpcReductionAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u006e\u0053\u0070\u0063\u0052\u0065\u0064\u0075c\u0074\u0069\u006f\u006e"}, Value: _gf.Sprintf("\u0025\u0076", *_bdefa.LnSpcReductionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gfaf *CT_Blip) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gfaf.CstateAttr != ST_BlipCompressionUnset {
		_dff, _agff := _gfaf.CstateAttr.MarshalXMLAttr(_g.Name{Local: "\u0063\u0073\u0074\u0061\u0074\u0065"})
		if _agff != nil {
			return _agff
		}
		start.Attr = append(start.Attr, _dff)
	}
	if _gfaf.EmbedAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072:\u0065\u006d\u0062\u0065\u0064"}, Value: _gf.Sprintf("\u0025\u0076", *_gfaf.EmbedAttr)})
	}
	if _gfaf.LinkAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _gf.Sprintf("\u0025\u0076", *_gfaf.LinkAttr)})
	}
	e.EncodeToken(start)
	if _gfaf.Choice != nil {
		for _, _bfce := range _gfaf.Choice {
			_bfce.MarshalXML(e, _g.StartElement{})
		}
	}
	if _gfaf.ExtLst != nil {
		_bdee := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gfaf.ExtLst, _bdee)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TextLineBreak and its children
func (_gfabe *CT_TextLineBreak) Validate() error {
	return _gfabe.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u006e\u0065\u0042\u0072\u0065\u0061\u006b")
}

func (_aece *CT_CustomColor) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _faag := range start.Attr {
		if _faag.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ddgeg, _gffb := _faag.Value, error(nil)
			if _gffb != nil {
				return _gffb
			}
			_aece.NameAttr = &_ddgeg
			continue
		}
	}
_bbea:
	for {
		_cgaf, _adbd := d.Token()
		if _adbd != nil {
			return _adbd
		}
		switch _geaef := _cgaf.(type) {
		case _g.StartElement:
			switch _geaef.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_aece.ScrgbClr = NewCT_ScRgbColor()
				if _dbbg := d.DecodeElement(_aece.ScrgbClr, &_geaef); _dbbg != nil {
					return _dbbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_aece.SrgbClr = NewCT_SRgbColor()
				if _dcbfa := d.DecodeElement(_aece.SrgbClr, &_geaef); _dcbfa != nil {
					return _dcbfa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_aece.HslClr = NewCT_HslColor()
				if _gcfe := d.DecodeElement(_aece.HslClr, &_geaef); _gcfe != nil {
					return _gcfe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_aece.SysClr = NewCT_SystemColor()
				if _cffe := d.DecodeElement(_aece.SysClr, &_geaef); _cffe != nil {
					return _cffe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_aece.SchemeClr = NewCT_SchemeColor()
				if _affg := d.DecodeElement(_aece.SchemeClr, &_geaef); _affg != nil {
					return _affg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_aece.PrstClr = NewCT_PresetColor()
				if _gdef := d.DecodeElement(_aece.PrstClr, &_geaef); _gdef != nil {
					return _gdef
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043o\u006co\u0072\u0020\u0025\u0076", _geaef.Name)
				if _gbagc := d.Skip(); _gbagc != nil {
					return _gbagc
				}
			}
		case _g.EndElement:
			break _bbea
		case _g.CharData:
		}
	}
	return nil
}

func (_dafea *CT_PolarAdjustHandle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dafea.Pos = NewCT_AdjPoint2D()
	for _, _bdcdad := range start.Attr {
		if _bdcdad.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0052" {
			_aefdg, _fbaae := _bdcdad.Value, error(nil)
			if _fbaae != nil {
				return _fbaae
			}
			_dafea.GdRefRAttr = &_aefdg
			continue
		}
		if _bdcdad.Name.Local == "\u006d\u0069\u006e\u0052" {
			_adcd, _gdfba := ParseUnionST_AdjCoordinate(_bdcdad.Value)
			if _gdfba != nil {
				return _gdfba
			}
			_dafea.MinRAttr = &_adcd
			continue
		}
		if _bdcdad.Name.Local == "\u006d\u0061\u0078\u0052" {
			_adbde, _dgdag := ParseUnionST_AdjCoordinate(_bdcdad.Value)
			if _dgdag != nil {
				return _dgdag
			}
			_dafea.MaxRAttr = &_adbde
			continue
		}
		if _bdcdad.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0041\u006e\u0067" {
			_fabcf, _fadaaa := _bdcdad.Value, error(nil)
			if _fadaaa != nil {
				return _fadaaa
			}
			_dafea.GdRefAngAttr = &_fabcf
			continue
		}
		if _bdcdad.Name.Local == "\u006d\u0069\u006e\u0041\u006e\u0067" {
			_adbfb, _bgcfe := ParseUnionST_AdjAngle(_bdcdad.Value)
			if _bgcfe != nil {
				return _bgcfe
			}
			_dafea.MinAngAttr = &_adbfb
			continue
		}
		if _bdcdad.Name.Local == "\u006d\u0061\u0078\u0041\u006e\u0067" {
			_gdcd, _cggfa := ParseUnionST_AdjAngle(_bdcdad.Value)
			if _cggfa != nil {
				return _cggfa
			}
			_dafea.MaxAngAttr = &_gdcd
			continue
		}
	}
_fddab:
	for {
		_eabac, _cebaa := d.Token()
		if _cebaa != nil {
			return _cebaa
		}
		switch _gfbee := _eabac.(type) {
		case _g.StartElement:
			switch _gfbee.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _dgbaf := d.DecodeElement(_dafea.Pos, &_gfbee); _dgbaf != nil {
					return _dgbaf
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0050\u006f\u006c\u0061\u0072\u0041\u0064\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0020\u0025\u0076", _gfbee.Name)
				if _fdffe := d.Skip(); _fdffe != nil {
					return _fdffe
				}
			}
		case _g.EndElement:
			break _fddab
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_LineProperties() *CT_LineProperties { _ebdd := &CT_LineProperties{}; return _ebdd }

type CT_TextNormalAutofit struct {
	FontScaleAttr      *ST_TextFontScalePercentOrPercentString
	LnSpcReductionAttr *ST_TextSpacingPercentOrPercentString
}

func (_eeddf *ST_ShapeType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_eeddf = 0
	case "\u006c\u0069\u006e\u0065":
		*_eeddf = 1
	case "\u006ci\u006e\u0065\u0049\u006e\u0076":
		*_eeddf = 2
	case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_eeddf = 3
	case "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_eeddf = 4
	case "\u0072\u0065\u0063\u0074":
		*_eeddf = 5
	case "\u0064i\u0061\u006d\u006f\u006e\u0064":
		*_eeddf = 6
	case "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d":
		*_eeddf = 7
	case "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d":
		*_eeddf = 8
	case "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064":
		*_eeddf = 9
	case "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e":
		*_eeddf = 10
	case "\u0068e\u0078\u0061\u0067\u006f\u006e":
		*_eeddf = 11
	case "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e":
		*_eeddf = 12
	case "\u006fc\u0074\u0061\u0067\u006f\u006e":
		*_eeddf = 13
	case "\u0064e\u0063\u0061\u0067\u006f\u006e":
		*_eeddf = 14
	case "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn":
		*_eeddf = 15
	case "\u0073\u0074\u0061r\u0034":
		*_eeddf = 16
	case "\u0073\u0074\u0061r\u0035":
		*_eeddf = 17
	case "\u0073\u0074\u0061r\u0036":
		*_eeddf = 18
	case "\u0073\u0074\u0061r\u0037":
		*_eeddf = 19
	case "\u0073\u0074\u0061r\u0038":
		*_eeddf = 20
	case "\u0073\u0074\u0061\u0072\u0031\u0030":
		*_eeddf = 21
	case "\u0073\u0074\u0061\u0072\u0031\u0032":
		*_eeddf = 22
	case "\u0073\u0074\u0061\u0072\u0031\u0036":
		*_eeddf = 23
	case "\u0073\u0074\u0061\u0072\u0032\u0034":
		*_eeddf = 24
	case "\u0073\u0074\u0061\u0072\u0033\u0032":
		*_eeddf = 25
	case "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t":
		*_eeddf = 26
	case "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074":
		*_eeddf = 27
	case "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074":
		*_eeddf = 28
	case "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074":
		*_eeddf = 29
	case "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074":
		*_eeddf = 30
	case "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t":
		*_eeddf = 31
	case "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074":
		*_eeddf = 32
	case "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074":
		*_eeddf = 33
	case "\u0070\u006c\u0061\u0071\u0075\u0065":
		*_eeddf = 34
	case "\u0065l\u006c\u0069\u0070\u0073\u0065":
		*_eeddf = 35
	case "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070":
		*_eeddf = 36
	case "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e":
		*_eeddf = 37
	case "\u0063h\u0065\u0076\u0072\u006f\u006e":
		*_eeddf = 38
	case "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065":
		*_eeddf = 39
	case "\u0070\u0069\u0065":
		*_eeddf = 40
	case "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063":
		*_eeddf = 41
	case "\u0064\u006f\u006eu\u0074":
		*_eeddf = 42
	case "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg":
		*_eeddf = 43
	case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
		*_eeddf = 44
	case "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw":
		*_eeddf = 45
	case "\u0075p\u0041\u0072\u0072\u006f\u0077":
		*_eeddf = 46
	case "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw":
		*_eeddf = 47
	case "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
		*_eeddf = 48
	case "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
		*_eeddf = 49
	case "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_eeddf = 50
	case "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
		*_eeddf = 51
	case "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
		*_eeddf = 52
	case "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_eeddf = 53
	case "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_eeddf = 54
	case "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw":
		*_eeddf = 55
	case "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_eeddf = 56
	case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
		*_eeddf = 57
	case "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
		*_eeddf = 58
	case "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_eeddf = 59
	case "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074":
		*_eeddf = 60
	case "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074":
		*_eeddf = 61
	case "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_eeddf = 62
	case "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw":
		*_eeddf = 63
	case "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077":
		*_eeddf = 64
	case "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077":
		*_eeddf = 65
	case "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077":
		*_eeddf = 66
	case "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077":
		*_eeddf = 67
	case "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
		*_eeddf = 68
	case "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077":
		*_eeddf = 69
	case "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_eeddf = 70
	case "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
		*_eeddf = 71
	case "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077":
		*_eeddf = 72
	case "\u0063\u0075\u0062\u0065":
		*_eeddf = 73
	case "\u0063\u0061\u006e":
		*_eeddf = 74
	case "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074":
		*_eeddf = 75
	case "\u0068\u0065\u0061r\u0074":
		*_eeddf = 76
	case "\u0073\u0075\u006e":
		*_eeddf = 77
	case "\u006d\u006f\u006f\u006e":
		*_eeddf = 78
	case "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065":
		*_eeddf = 79
	case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031":
		*_eeddf = 80
	case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032":
		*_eeddf = 81
	case "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072":
		*_eeddf = 82
	case "\u0062\u0065\u0076e\u006c":
		*_eeddf = 83
	case "\u0066\u0072\u0061m\u0065":
		*_eeddf = 84
	case "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de":
		*_eeddf = 85
	case "\u0063\u006f\u0072\u006e\u0065\u0072":
		*_eeddf = 86
	case "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065":
		*_eeddf = 87
	case "\u0063\u0068\u006fr\u0064":
		*_eeddf = 88
	case "\u0061\u0072\u0063":
		*_eeddf = 89
	case "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
		*_eeddf = 90
	case "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
		*_eeddf = 91
	case "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e":
		*_eeddf = 92
	case "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065":
		*_eeddf = 93
	case "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072":
		*_eeddf = 94
	case "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r":
		*_eeddf = 95
	case "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031":
		*_eeddf = 96
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032":
		*_eeddf = 97
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033":
		*_eeddf = 98
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034":
		*_eeddf = 99
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035":
		*_eeddf = 100
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032":
		*_eeddf = 101
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033":
		*_eeddf = 102
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034":
		*_eeddf = 103
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035":
		*_eeddf = 104
	case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031":
		*_eeddf = 105
	case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032":
		*_eeddf = 106
	case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033":
		*_eeddf = 107
	case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
		*_eeddf = 108
	case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
		*_eeddf = 109
	case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
		*_eeddf = 110
	case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
		*_eeddf = 111
	case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
		*_eeddf = 112
	case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
		*_eeddf = 113
	case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031":
		*_eeddf = 114
	case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032":
		*_eeddf = 115
	case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033":
		*_eeddf = 116
	case "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_eeddf = 117
	case "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074":
		*_eeddf = 118
	case "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_eeddf = 119
	case "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_eeddf = 120
	case "\u0063\u006c\u006fu\u0064":
		*_eeddf = 121
	case "\u0072\u0069\u0062\u0062\u006f\u006e":
		*_eeddf = 122
	case "\u0072i\u0062\u0062\u006f\u006e\u0032":
		*_eeddf = 123
	case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e":
		*_eeddf = 124
	case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032":
		*_eeddf = 125
	case "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e":
		*_eeddf = 126
	case "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c":
		*_eeddf = 127
	case "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c":
		*_eeddf = 128
	case "\u0077\u0061\u0076\u0065":
		*_eeddf = 129
	case "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065":
		*_eeddf = 130
	case "\u0070\u006c\u0075\u0073":
		*_eeddf = 131
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073":
		*_eeddf = 132
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e":
		*_eeddf = 133
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074":
		*_eeddf = 134
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073":
		*_eeddf = 135
	case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
		*_eeddf = 136
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074":
		*_eeddf = 137
	case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074":
		*_eeddf = 138
	case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072":
		*_eeddf = 139
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e":
		*_eeddf = 140
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074":
		*_eeddf = 141
	case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e":
		*_eeddf = 142
	case "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072":
		*_eeddf = 143
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064":
		*_eeddf = 144
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065":
		*_eeddf = 145
	case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e":
		*_eeddf = 146
	case "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072":
		*_eeddf = 147
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065":
		*_eeddf = 148
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074":
		*_eeddf = 149
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074":
		*_eeddf = 150
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065":
		*_eeddf = 151
	case "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
		*_eeddf = 152
	case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065":
		*_eeddf = 153
	case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065":
		*_eeddf = 154
	case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b":
		*_eeddf = 155
	case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d":
		*_eeddf = 156
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079":
		*_eeddf = 157
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079":
		*_eeddf = 158
	case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s":
		*_eeddf = 159
	case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr":
		*_eeddf = 160
	case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b":
		*_eeddf = 161
	case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065":
		*_eeddf = 162
	case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070":
		*_eeddf = 163
	case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
		*_eeddf = 164
	case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074":
		*_eeddf = 165
	case "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073":
		*_eeddf = 166
	case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064":
		*_eeddf = 167
	case "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067":
		*_eeddf = 168
	case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e":
		*_eeddf = 169
	case "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074":
		*_eeddf = 170
	case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064":
		*_eeddf = 171
	case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065":
		*_eeddf = 172
	case "\u0067\u0065\u0061r\u0036":
		*_eeddf = 173
	case "\u0067\u0065\u0061r\u0039":
		*_eeddf = 174
	case "\u0066\u0075\u006e\u006e\u0065\u006c":
		*_eeddf = 175
	case "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073":
		*_eeddf = 176
	case "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s":
		*_eeddf = 177
	case "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079":
		*_eeddf = 178
	case "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065":
		*_eeddf = 179
	case "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l":
		*_eeddf = 180
	case "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_eeddf = 181
	case "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073":
		*_eeddf = 182
	case "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073":
		*_eeddf = 183
	case "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073":
		*_eeddf = 184
	case "\u0063\u0068\u0061\u0072\u0074\u0058":
		*_eeddf = 185
	case "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r":
		*_eeddf = 186
	case "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s":
		*_eeddf = 187
	}
	return nil
}

func (_adeaac *CT_XYAdjustHandle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_adeaac.Pos = NewCT_AdjPoint2D()
	for _, _cadaf := range start.Attr {
		if _cadaf.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0058" {
			_bgegbe, _bfaga := _cadaf.Value, error(nil)
			if _bfaga != nil {
				return _bfaga
			}
			_adeaac.GdRefXAttr = &_bgegbe
			continue
		}
		if _cadaf.Name.Local == "\u006d\u0069\u006e\u0058" {
			_adfgbb, _cccad := ParseUnionST_AdjCoordinate(_cadaf.Value)
			if _cccad != nil {
				return _cccad
			}
			_adeaac.MinXAttr = &_adfgbb
			continue
		}
		if _cadaf.Name.Local == "\u006d\u0061\u0078\u0058" {
			_agddg, _cebcg := ParseUnionST_AdjCoordinate(_cadaf.Value)
			if _cebcg != nil {
				return _cebcg
			}
			_adeaac.MaxXAttr = &_agddg
			continue
		}
		if _cadaf.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0059" {
			_gdbagc, _gcbdc := _cadaf.Value, error(nil)
			if _gcbdc != nil {
				return _gcbdc
			}
			_adeaac.GdRefYAttr = &_gdbagc
			continue
		}
		if _cadaf.Name.Local == "\u006d\u0069\u006e\u0059" {
			_edcfa, _bbfba := ParseUnionST_AdjCoordinate(_cadaf.Value)
			if _bbfba != nil {
				return _bbfba
			}
			_adeaac.MinYAttr = &_edcfa
			continue
		}
		if _cadaf.Name.Local == "\u006d\u0061\u0078\u0059" {
			_beccag, _dggga := ParseUnionST_AdjCoordinate(_cadaf.Value)
			if _dggga != nil {
				return _dggga
			}
			_adeaac.MaxYAttr = &_beccag
			continue
		}
	}
_aade:
	for {
		_ecdfg, _defc := d.Token()
		if _defc != nil {
			return _defc
		}
		switch _bgega := _ecdfg.(type) {
		case _g.StartElement:
			switch _bgega.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _ecccb := d.DecodeElement(_adeaac.Pos, &_bgega); _ecccb != nil {
					return _ecccb
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0058\u0059\u0041\u0064\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0020\u0025\u0076", _bgega.Name)
				if _eeeae := d.Skip(); _eeeae != nil {
					return _eeeae
				}
			}
		case _g.EndElement:
			break _aade
		case _g.CharData:
		}
	}
	return nil
}

func NewEG_EffectProperties() *EG_EffectProperties { _eeaaec := &EG_EffectProperties{}; return _eeaaec }

// Validate validates the CT_TextParagraph and its children
func (_gcgec *CT_TextParagraph) Validate() error {
	return _gcgec.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068")
}

// ValidateWithPath validates the CT_TextBulletTypefaceFollowText and its children, prefixing error messages with path
func (_cgcbf *CT_TextBulletTypefaceFollowText) ValidateWithPath(path string) error { return nil }

func (_fgdc *CT_PositiveSize2D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fgdc.CxAttr = 0
	_fgdc.CyAttr = 0
	for _, _efcfa := range start.Attr {
		if _efcfa.Name.Local == "\u0063\u0078" {
			_aagcc, _ffcab := _c.ParseInt(_efcfa.Value, 10, 64)
			if _ffcab != nil {
				return _ffcab
			}
			_fgdc.CxAttr = _aagcc
			continue
		}
		if _efcfa.Name.Local == "\u0063\u0079" {
			_cfeegb, _gdbe := _c.ParseInt(_efcfa.Value, 10, 64)
			if _gdbe != nil {
				return _gdbe
			}
			_fgdc.CyAttr = _cfeegb
			continue
		}
	}
	for {
		_cbcc, _ebacb := d.Token()
		if _ebacb != nil {
			return _gf.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0053\u0069\u007a\u0065\u0032\u0044: \u0025\u0073", _ebacb)
		}
		if _acfda, _dbacc := _cbcc.(_g.EndElement); _dbacc && _acfda.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the EG_LineJoinProperties and its children
func (_aadga *EG_LineJoinProperties) Validate() error {
	return _aadga.ValidateWithPath("E\u0047\u005f\u004c\u0069ne\u004ao\u0069\u006e\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_RelativeRect struct {
	LAttr *ST_Percentage
	TAttr *ST_Percentage
	RAttr *ST_Percentage
	BAttr *ST_Percentage
}

func (_dbecc ST_TextVerticalType) Validate() error { return _dbecc.ValidateWithPath("") }

type CT_GrayscaleTransform struct{}

func ParseUnionST_PositivePercentage(s string) (ST_PositivePercentage, error) {
	_fagge := ST_PositivePercentage{}
	if _ge.ST_PositivePercentagePatternRe.MatchString(s) {
		_fagge.ST_PositivePercentage = &ST_Percentage{}
		_fagge.ST_PositivePercentage.ST_Percentage = &s
	} else {
		_gfegd, _eagad := _c.ParseInt(s, 10, 32)
		if _eagad != nil {
			return _fagge, _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _eagad)
		}
		_bggedg := int32(_gfegd)
		_fagge.ST_PositivePercentageDecimal = &_bggedg
	}
	return _fagge, nil
}

// ValidateWithPath validates the CT_AudioCDTime and its children, prefixing error messages with path
func (_ceba *CT_AudioCDTime) ValidateWithPath(path string) error { return nil }

func (_dfgd *CT_FixedPercentage) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gbeaa := range start.Attr {
		if _gbeaa.Name.Local == "\u0076\u0061\u006c" {
			_eecaa, _caee := ParseUnionST_FixedPercentage(_gbeaa.Value)
			if _caee != nil {
				return _caee
			}
			_dfgd.ValAttr = _eecaa
			continue
		}
	}
	for {
		_fcabb, _beffa := d.Token()
		if _beffa != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0046\u0069\u0078\u0065\u0064\u0050\u0065r\u0063\u0065\u006e\u0074\u0061\u0067\u0065\u003a\u0020\u0025\u0073", _beffa)
		}
		if _eefc, _gdege := _fcabb.(_g.EndElement); _gdege && _eefc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the EG_Media and its children
func (_dbcff *EG_Media) Validate() error {
	return _dbcff.ValidateWithPath("\u0045\u0047\u005f\u004d\u0065\u0064\u0069\u0061")
}

func (_ggcff ST_SchemeColorVal) ValidateWithPath(path string) error {
	switch _ggcff {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ggcff))
	}
	return nil
}

// Validate validates the CT_GvmlGraphicFrameNonVisual and its children
func (_cagcg *CT_GvmlGraphicFrameNonVisual) Validate() error {
	return _cagcg.ValidateWithPath("\u0043\u0054\u005f\u0047v\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046r\u0061m\u0065\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c")
}

func NewCT_TableCellBorderStyle() *CT_TableCellBorderStyle {
	_abgbe := &CT_TableCellBorderStyle{}
	return _abgbe
}

func (_dccbef *EG_ThemeableFillStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_gdfbf:
	for {
		_bfcabf, _afabb := d.Token()
		if _afabb != nil {
			return _afabb
		}
		switch _acfbc := _bfcabf.(type) {
		case _g.StartElement:
			switch _acfbc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_dccbef.Fill = NewCT_FillProperties()
				if _aaab := d.DecodeElement(_dccbef.Fill, &_acfbc); _aaab != nil {
					return _aaab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				_dccbef.FillRef = NewCT_StyleMatrixReference()
				if _adbdb := d.DecodeElement(_dccbef.FillRef, &_acfbc); _adbdb != nil {
					return _adbdb
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u0054\u0068\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _acfbc.Name)
				if _cgafe := d.Skip(); _cgafe != nil {
					return _cgafe
				}
			}
		case _g.EndElement:
			break _gdfbf
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextUnderlineFillGroupWrapper and its children, prefixing error messages with path
func (_afddeb *CT_TextUnderlineFillGroupWrapper) ValidateWithPath(path string) error {
	if _afddeb.NoFill != nil {
		if _bcbfc := _afddeb.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _bcbfc != nil {
			return _bcbfc
		}
	}
	if _afddeb.SolidFill != nil {
		if _ggeg := _afddeb.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _ggeg != nil {
			return _ggeg
		}
	}
	if _afddeb.GradFill != nil {
		if _cbbdae := _afddeb.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _cbbdae != nil {
			return _cbbdae
		}
	}
	if _afddeb.BlipFill != nil {
		if _bbccg := _afddeb.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _bbccg != nil {
			return _bbccg
		}
	}
	if _afddeb.PattFill != nil {
		if _bcfff := _afddeb.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _bcfff != nil {
			return _bcfff
		}
	}
	if _afddeb.GrpFill != nil {
		if _eccgd := _afddeb.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _eccgd != nil {
			return _eccgd
		}
	}
	return nil
}

type CT_AdjPoint2D struct {
	XAttr ST_AdjCoordinate
	YAttr ST_AdjCoordinate
}

func (_cccbbg *ST_SchemeColorVal) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dagecg, _ffadb := d.Token()
	if _ffadb != nil {
		return _ffadb
	}
	if _cgddbb, _abage := _dagecg.(_g.EndElement); _abage && _cgddbb.Name == start.Name {
		*_cccbbg = 1
		return nil
	}
	if _fbded, _cfcfg := _dagecg.(_g.CharData); !_cfcfg {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dagecg)
	} else {
		switch string(_fbded) {
		case "":
			*_cccbbg = 0
		case "\u0062\u0067\u0031":
			*_cccbbg = 1
		case "\u0074\u0078\u0031":
			*_cccbbg = 2
		case "\u0062\u0067\u0032":
			*_cccbbg = 3
		case "\u0074\u0078\u0032":
			*_cccbbg = 4
		case "\u0061c\u0063\u0065\u006e\u0074\u0031":
			*_cccbbg = 5
		case "\u0061c\u0063\u0065\u006e\u0074\u0032":
			*_cccbbg = 6
		case "\u0061c\u0063\u0065\u006e\u0074\u0033":
			*_cccbbg = 7
		case "\u0061c\u0063\u0065\u006e\u0074\u0034":
			*_cccbbg = 8
		case "\u0061c\u0063\u0065\u006e\u0074\u0035":
			*_cccbbg = 9
		case "\u0061c\u0063\u0065\u006e\u0074\u0036":
			*_cccbbg = 10
		case "\u0068\u006c\u0069n\u006b":
			*_cccbbg = 11
		case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
			*_cccbbg = 12
		case "\u0070\u0068\u0043l\u0072":
			*_cccbbg = 13
		case "\u0064\u006b\u0031":
			*_cccbbg = 14
		case "\u006c\u0074\u0031":
			*_cccbbg = 15
		case "\u0064\u006b\u0032":
			*_cccbbg = 16
		case "\u006c\u0074\u0032":
			*_cccbbg = 17
		}
	}
	_dagecg, _ffadb = d.Token()
	if _ffadb != nil {
		return _ffadb
	}
	if _bgeef, _efaee := _dagecg.(_g.EndElement); _efaee && _bgeef.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dagecg)
}

func (_afedca ST_RectAlignment) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_feda := _g.Attr{}
	_feda.Name = name
	switch _afedca {
	case ST_RectAlignmentUnset:
		_feda.Value = ""
	case ST_RectAlignmentTl:
		_feda.Value = "\u0074\u006c"
	case ST_RectAlignmentT:
		_feda.Value = "\u0074"
	case ST_RectAlignmentTr:
		_feda.Value = "\u0074\u0072"
	case ST_RectAlignmentL:
		_feda.Value = "\u006c"
	case ST_RectAlignmentCtr:
		_feda.Value = "\u0063\u0074\u0072"
	case ST_RectAlignmentR:
		_feda.Value = "\u0072"
	case ST_RectAlignmentBl:
		_feda.Value = "\u0062\u006c"
	case ST_RectAlignmentB:
		_feda.Value = "\u0062"
	case ST_RectAlignmentBr:
		_feda.Value = "\u0062\u0072"
	}
	return _feda, nil
}

// ValidateWithPath validates the CT_TransformEffect and its children, prefixing error messages with path
func (_aabdea *CT_TransformEffect) ValidateWithPath(path string) error {
	if _aabdea.SxAttr != nil {
		if _gadg := _aabdea.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _gadg != nil {
			return _gadg
		}
	}
	if _aabdea.SyAttr != nil {
		if _ffbe := _aabdea.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _ffbe != nil {
			return _ffbe
		}
	}
	if _aabdea.KxAttr != nil {
		if *_aabdea.KxAttr <= -5400000 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_aabdea.KxAttr)
		}
		if *_aabdea.KxAttr >= 5400000 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_aabdea.KxAttr)
		}
	}
	if _aabdea.KyAttr != nil {
		if *_aabdea.KyAttr <= -5400000 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_aabdea.KyAttr)
		}
		if *_aabdea.KyAttr >= 5400000 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_aabdea.KyAttr)
		}
	}
	if _aabdea.TxAttr != nil {
		if _gbbf := _aabdea.TxAttr.ValidateWithPath(path + "\u002fT\u0078\u0041\u0074\u0074\u0072"); _gbbf != nil {
			return _gbbf
		}
	}
	if _aabdea.TyAttr != nil {
		if _ebdbd := _aabdea.TyAttr.ValidateWithPath(path + "\u002fT\u0079\u0041\u0074\u0074\u0072"); _ebdbd != nil {
			return _ebdbd
		}
	}
	return nil
}

func (_agfdb *ST_LineEndWidth) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_agfdb = 0
	case "\u0073\u006d":
		*_agfdb = 1
	case "\u006d\u0065\u0064":
		*_agfdb = 2
	case "\u006c\u0067":
		*_agfdb = 3
	}
	return nil
}

func (_gefac ST_SystemColorVal) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_gefac.String(), start)
}

func NewCT_TileInfoProperties() *CT_TileInfoProperties {
	_dgfgdb := &CT_TileInfoProperties{}
	return _dgfgdb
}

// Validate validates the EG_ColorTransform and its children
func (_eeeda *EG_ColorTransform) Validate() error {
	return _eeeda.ValidateWithPath("\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d")
}

// Validate validates the CT_StyleMatrix and its children
func (_dbfcb *CT_StyleMatrix) Validate() error {
	return _dbfcb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004da\u0074\u0072\u0069\u0078")
}

// ValidateWithPath validates the AG_Blob and its children, prefixing error messages with path
func (_ece *AG_Blob) ValidateWithPath(path string) error { return nil }

func NewCT_BackgroundFillStyleList() *CT_BackgroundFillStyleList {
	_dabd := &CT_BackgroundFillStyleList{}
	return _dabd
}

type CT_LightRig struct {
	RigAttr ST_LightRigType
	DirAttr ST_LightRigDirection
	Rot     *CT_SphereCoords
}

func (_cbfef *ST_AnimationChartOnlyBuildType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_agafb, _ggfc := d.Token()
	if _ggfc != nil {
		return _ggfc
	}
	if _bbgbb, _ccgde := _agafb.(_g.EndElement); _ccgde && _bbgbb.Name == start.Name {
		*_cbfef = 1
		return nil
	}
	if _ggffa, _gegbb := _agafb.(_g.CharData); !_gegbb {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agafb)
	} else {
		switch string(_ggffa) {
		case "":
			*_cbfef = 0
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_cbfef = 1
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_cbfef = 2
		case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
			*_cbfef = 3
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
			*_cbfef = 4
		}
	}
	_agafb, _ggfc = d.Token()
	if _ggfc != nil {
		return _ggfc
	}
	if _acaac, _aeedeg := _agafb.(_g.EndElement); _aeedeg && _acaac.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agafb)
}

func (_bbbe *CT_ColorMappingOverrideChoice) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bbbe.MasterClrMapping != nil {
		_fbgg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006da\u0073\u0074\u0065\u0072\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}}
		e.EncodeElement(_bbbe.MasterClrMapping, _fbgg)
	}
	if _bbbe.OverrideClrMapping != nil {
		_acdd := _g.StartElement{Name: _g.Name{Local: "a\u003ao\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0043l\u0072\u004d\u0061\u0070pi\u006e\u0067"}}
		e.EncodeElement(_bbbe.OverrideClrMapping, _acdd)
	}
	return nil
}

func (_eedae *CT_TextUnderlineLineFollowText) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_TableBackgroundStyle() *CT_TableBackgroundStyle {
	_efcgb := &CT_TableBackgroundStyle{}
	return _efcgb
}

func (_bggac *CT_TextListStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _bggac.DefPPr != nil {
		_aecfb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0064\u0065\u0066\u0050\u0050\u0072"}}
		e.EncodeElement(_bggac.DefPPr, _aecfb)
	}
	if _bggac.Lvl1pPr != nil {
		_bcdfe := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0076\u006c\u0031\u0070\u0050r"}}
		e.EncodeElement(_bggac.Lvl1pPr, _bcdfe)
	}
	if _bggac.Lvl2pPr != nil {
		_dbgfbf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0076\u006c\u0032\u0070\u0050r"}}
		e.EncodeElement(_bggac.Lvl2pPr, _dbgfbf)
	}
	if _bggac.Lvl3pPr != nil {
		_fdgda := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0076\u006c\u0033\u0070\u0050r"}}
		e.EncodeElement(_bggac.Lvl3pPr, _fdgda)
	}
	if _bggac.Lvl4pPr != nil {
		_gddbg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0076\u006c\u0034\u0070\u0050r"}}
		e.EncodeElement(_bggac.Lvl4pPr, _gddbg)
	}
	if _bggac.Lvl5pPr != nil {
		_defbab := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0076\u006c\u0035\u0070\u0050r"}}
		e.EncodeElement(_bggac.Lvl5pPr, _defbab)
	}
	if _bggac.Lvl6pPr != nil {
		_fdceg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0076\u006c\u0036\u0070\u0050r"}}
		e.EncodeElement(_bggac.Lvl6pPr, _fdceg)
	}
	if _bggac.Lvl7pPr != nil {
		_eaed := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0076\u006c\u0037\u0070\u0050r"}}
		e.EncodeElement(_bggac.Lvl7pPr, _eaed)
	}
	if _bggac.Lvl8pPr != nil {
		_debag := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0076\u006c\u0038\u0070\u0050r"}}
		e.EncodeElement(_bggac.Lvl8pPr, _debag)
	}
	if _bggac.Lvl9pPr != nil {
		_ggbbf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0076\u006c\u0039\u0070\u0050r"}}
		e.EncodeElement(_bggac.Lvl9pPr, _ggbbf)
	}
	if _bggac.ExtLst != nil {
		_egfebc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bggac.ExtLst, _egfebc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_edada *CT_GrayscaleEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_bcbf, _adefe := d.Token()
		if _adefe != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0047\u0072\u0061\u0079\u0073\u0063\u0061l\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _adefe)
		}
		if _ebgdg, _eaage := _bcbf.(_g.EndElement); _eaage && _ebgdg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_eefbg *CT_TextBlipBullet) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_eefbg.Blip = NewCT_Blip()
_eefac:
	for {
		_gdaa, _bgcdf := d.Token()
		if _bgcdf != nil {
			return _bgcdf
		}
		switch _bdeagc := _gdaa.(type) {
		case _g.StartElement:
			switch _bdeagc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}:
				if _abgad := d.DecodeElement(_eefbg.Blip, &_bdeagc); _abgad != nil {
					return _abgad
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006c\u0069\u0070\u0042\u0075\u006c\u006c\u0065\u0074\u0020\u0025\u0076", _bdeagc.Name)
				if _cebaeg := d.Skip(); _cebaeg != nil {
					return _cebaeg
				}
			}
		case _g.EndElement:
			break _eefac
		case _g.CharData:
		}
	}
	return nil
}

type CT_PositivePercentage struct{ ValAttr ST_PositivePercentage }

type CT_ThemeableLineStyle struct {
	Ln    *CT_LineProperties
	LnRef *CT_StyleMatrixReference
}

func (_gbabd ST_PresetCameraType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_gbabd.String(), start)
}

func (_cdedcf *CT_TextBulletSizePoint) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _gf.Sprintf("\u0025\u0076", _cdedcf.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_ShapeLocking() *CT_ShapeLocking { _bdag := &CT_ShapeLocking{}; return _bdag }

// ValidateWithPath validates the CT_PositiveSize2D and its children, prefixing error messages with path
func (_dgdb *CT_PositiveSize2D) ValidateWithPath(path string) error {
	if _dgdb.CxAttr < 0 {
		return _gf.Errorf("\u0025\u0073\u002fm.\u0043\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _dgdb.CxAttr)
	}
	if _dgdb.CxAttr > 27273042316900 {
		return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0043\u0078\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u0062e \u003c\u003d\u0020\u00327\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u003690\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _dgdb.CxAttr)
	}
	if _dgdb.CyAttr < 0 {
		return _gf.Errorf("\u0025\u0073\u002fm.\u0043\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _dgdb.CyAttr)
	}
	if _dgdb.CyAttr > 27273042316900 {
		return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0043\u0079\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u0062e \u003c\u003d\u0020\u00327\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u003690\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _dgdb.CyAttr)
	}
	return nil
}

// ValidateWithPath validates the CT_GeomGuideList and its children, prefixing error messages with path
func (_ecfb *CT_GeomGuideList) ValidateWithPath(path string) error {
	for _aegdf, _bbbef := range _ecfb.Gd {
		if _afab := _bbbef.ValidateWithPath(_gf.Sprintf("\u0025s\u002f\u0047\u0064\u005b\u0025\u0064]", path, _aegdf)); _afab != nil {
			return _afab
		}
	}
	return nil
}

func (_geff *CT_GvmlGraphicalObjectFrame) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_geff.NvGraphicFramePr = NewCT_GvmlGraphicFrameNonVisual()
	_geff.Graphic = NewGraphic()
	_geff.Xfrm = NewCT_Transform2D()
_fcac:
	for {
		_dgeff, _aecgg := d.Token()
		if _aecgg != nil {
			return _aecgg
		}
		switch _fdfb := _dgeff.(type) {
		case _g.StartElement:
			switch _fdfb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}:
				if _cdabe := d.DecodeElement(_geff.NvGraphicFramePr, &_fdfb); _cdabe != nil {
					return _cdabe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}:
				if _effc := d.DecodeElement(_geff.Graphic, &_fdfb); _effc != nil {
					return _effc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				if _dfba := d.DecodeElement(_geff.Xfrm, &_fdfb); _dfba != nil {
					return _dfba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_geff.ExtLst = NewCT_OfficeArtExtensionList()
				if _cgdfe := d.DecodeElement(_geff.ExtLst, &_fdfb); _cgdfe != nil {
					return _cgdfe
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0047\u0076\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065c\u0074\u0046\u0072\u0061\u006d\u0065\u0020\u0025\u0076", _fdfb.Name)
				if _aeedg := d.Skip(); _aeedg != nil {
					return _aeedg
				}
			}
		case _g.EndElement:
			break _fcac
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_GvmlShape and its children
func (_abgeg *CT_GvmlShape) Validate() error {
	return _abgeg.ValidateWithPath("\u0043\u0054\u005fG\u0076\u006d\u006c\u0053\u0068\u0061\u0070\u0065")
}

func NewCT_AnimationChartElement() *CT_AnimationChartElement {
	_dcb := &CT_AnimationChartElement{}
	_dcb.BldStepAttr = ST_ChartBuildStep(1)
	return _dcb
}

// Validate validates the EG_ThemeableEffectStyle and its children
func (_cdage *EG_ThemeableEffectStyle) Validate() error {
	return _cdage.ValidateWithPath("\u0045\u0047\u005fTh\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065")
}

func (_dcbfgb ST_TextUnderlineType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_fecff := _g.Attr{}
	_fecff.Name = name
	switch _dcbfgb {
	case ST_TextUnderlineTypeUnset:
		_fecff.Value = ""
	case ST_TextUnderlineTypeNone:
		_fecff.Value = "\u006e\u006f\u006e\u0065"
	case ST_TextUnderlineTypeWords:
		_fecff.Value = "\u0077\u006f\u0072d\u0073"
	case ST_TextUnderlineTypeSng:
		_fecff.Value = "\u0073\u006e\u0067"
	case ST_TextUnderlineTypeDbl:
		_fecff.Value = "\u0064\u0062\u006c"
	case ST_TextUnderlineTypeHeavy:
		_fecff.Value = "\u0068\u0065\u0061v\u0079"
	case ST_TextUnderlineTypeDotted:
		_fecff.Value = "\u0064\u006f\u0074\u0074\u0065\u0064"
	case ST_TextUnderlineTypeDottedHeavy:
		_fecff.Value = "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeDash:
		_fecff.Value = "\u0064\u0061\u0073\u0068"
	case ST_TextUnderlineTypeDashHeavy:
		_fecff.Value = "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y"
	case ST_TextUnderlineTypeDashLong:
		_fecff.Value = "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067"
	case ST_TextUnderlineTypeDashLongHeavy:
		_fecff.Value = "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeDotDash:
		_fecff.Value = "\u0064o\u0074\u0044\u0061\u0073\u0068"
	case ST_TextUnderlineTypeDotDashHeavy:
		_fecff.Value = "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeDotDotDash:
		_fecff.Value = "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068"
	case ST_TextUnderlineTypeDotDotDashHeavy:
		_fecff.Value = "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeWavy:
		_fecff.Value = "\u0077\u0061\u0076\u0079"
	case ST_TextUnderlineTypeWavyHeavy:
		_fecff.Value = "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y"
	case ST_TextUnderlineTypeWavyDbl:
		_fecff.Value = "\u0077a\u0076\u0079\u0044\u0062\u006c"
	}
	return _fecff, nil
}

func (_gebab *CT_GvmlGraphicalObjectFrame) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_baeef := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_gebab.NvGraphicFramePr, _baeef)
	_adbdc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0061\u0070\u0068\u0069c"}}
	_adbdc.Attr = append(_adbdc.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	e.EncodeElement(_gebab.Graphic, _adbdc)
	_bdbeb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
	e.EncodeElement(_gebab.Xfrm, _bdbeb)
	if _gebab.ExtLst != nil {
		_bbfeg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gebab.ExtLst, _bbfeg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GeomGuideList and its children
func (_fceeee *CT_GeomGuideList) Validate() error {
	return _fceeee.ValidateWithPath("\u0043\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074")
}

type CT_Transform2D struct {
	RotAttr   *int32
	FlipHAttr *bool
	FlipVAttr *bool
	Off       *CT_Point2D
	Ext       *CT_PositiveSize2D
}

type CT_ColorSchemeList struct{ ExtraClrScheme []*CT_ColorSchemeAndMapping }

// Validate validates the CT_Bevel and its children
func (_dedd *CT_Bevel) Validate() error {
	return _dedd.ValidateWithPath("\u0043\u0054\u005f\u0042\u0065\u0076\u0065\u006c")
}

// Validate validates the CT_OfficeArtExtension and its children
func (_fdggb *CT_OfficeArtExtension) Validate() error {
	return _fdggb.ValidateWithPath("C\u0054\u005f\u004f\u0066fi\u0063e\u0041\u0072\u0074\u0045\u0078t\u0065\u006e\u0073\u0069\u006f\u006e")
}

type CT_ColorScheme struct {
	NameAttr string
	Dk1      *CT_Color
	Lt1      *CT_Color
	Dk2      *CT_Color
	Lt2      *CT_Color
	Accent1  *CT_Color
	Accent2  *CT_Color
	Accent3  *CT_Color
	Accent4  *CT_Color
	Accent5  *CT_Color
	Accent6  *CT_Color
	Hlink    *CT_Color
	FolHlink *CT_Color
	ExtLst   *CT_OfficeArtExtensionList
}

func (_cgbac *CT_GeomGuideList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_adab:
	for {
		_gbcff, _fgff := d.Token()
		if _fgff != nil {
			return _fgff
		}
		switch _bgbad := _gbcff.(type) {
		case _g.StartElement:
			switch _bgbad.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064"}:
				_dacef := NewCT_GeomGuide()
				if _dgece := d.DecodeElement(_dacef, &_bgbad); _dgece != nil {
					return _dgece
				}
				_cgbac.Gd = append(_cgbac.Gd, _dacef)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0065\u006f\u006d\u0047\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074\u0020\u0025v", _bgbad.Name)
				if _aebc := d.Skip(); _aebc != nil {
					return _aebc
				}
			}
		case _g.EndElement:
			break _adab
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_OuterShadowEffect() *CT_OuterShadowEffect {
	_eeagd := &CT_OuterShadowEffect{}
	return _eeagd
}

// Validate validates the CT_FontCollection and its children
func (_gdge *CT_FontCollection) Validate() error {
	return _gdge.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006c\u0065c\u0074\u0069\u006f\u006e")
}

func (_adgec ST_AnimationDgmOnlyBuildType) ValidateWithPath(path string) error {
	switch _adgec {
	case 0, 1, 2, 3:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_adgec))
	}
	return nil
}

// Validate validates the CT_OfficeStyleSheet and its children
func (_cdceb *CT_OfficeStyleSheet) Validate() error {
	return _cdceb.ValidateWithPath("\u0043\u0054\u005f\u004fff\u0069\u0063\u0065\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074")
}

func (_fgeed *CT_Camera) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_aaf, _dfbcc := _fgeed.PrstAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _dfbcc != nil {
		return _dfbcc
	}
	start.Attr = append(start.Attr, _aaf)
	if _fgeed.FovAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u006f\u0076"}, Value: _gf.Sprintf("\u0025\u0076", *_fgeed.FovAttr)})
	}
	if _fgeed.ZoomAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u007a\u006f\u006f\u006d"}, Value: _gf.Sprintf("\u0025\u0076", *_fgeed.ZoomAttr)})
	}
	e.EncodeToken(start)
	if _fgeed.Rot != nil {
		_gafdd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072o\u0074"}}
		e.EncodeElement(_fgeed.Rot, _gafdd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_TextUnderlineLineFollowText() *CT_TextUnderlineLineFollowText {
	_bgcfg := &CT_TextUnderlineLineFollowText{}
	return _bgcfg
}

// ValidateWithPath validates the CT_Transform2D and its children, prefixing error messages with path
func (_bbggg *CT_Transform2D) ValidateWithPath(path string) error {
	if _bbggg.Off != nil {
		if _addffc := _bbggg.Off.ValidateWithPath(path + "\u002f\u004f\u0066\u0066"); _addffc != nil {
			return _addffc
		}
	}
	if _bbggg.Ext != nil {
		if _eggfe := _bbggg.Ext.ValidateWithPath(path + "\u002f\u0045\u0078\u0074"); _eggfe != nil {
			return _eggfe
		}
	}
	return nil
}

// ValidateWithPath validates the EG_FillModeProperties and its children, prefixing error messages with path
func (_aefb *EG_FillModeProperties) ValidateWithPath(path string) error {
	if _aefb.Tile != nil {
		if _abgf := _aefb.Tile.ValidateWithPath(path + "\u002f\u0054\u0069l\u0065"); _abgf != nil {
			return _abgf
		}
	}
	if _aefb.Stretch != nil {
		if _ebcdaa := _aefb.Stretch.ValidateWithPath(path + "\u002f\u0053\u0074\u0072\u0065\u0074\u0063\u0068"); _ebcdaa != nil {
			return _ebcdaa
		}
	}
	return nil
}

func (_gebde *CT_Ratio) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _egfeb := range start.Attr {
		if _egfeb.Name.Local == "\u006e" {
			_cgdca, _ccdg := _c.ParseInt(_egfeb.Value, 10, 64)
			if _ccdg != nil {
				return _ccdg
			}
			_gebde.NAttr = _cgdca
			continue
		}
		if _egfeb.Name.Local == "\u0064" {
			_fccba, _dfffb := _c.ParseInt(_egfeb.Value, 10, 64)
			if _dfffb != nil {
				return _dfffb
			}
			_gebde.DAttr = _fccba
			continue
		}
	}
	for {
		_egedf, _acafa := d.Token()
		if _acafa != nil {
			return _gf.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fR\u0061\u0074\u0069\u006f: \u0025\u0073", _acafa)
		}
		if _egab, _gdgcf := _egedf.(_g.EndElement); _gdgcf && _egab.Name == start.Name {
			break
		}
	}
	return nil
}

func NewEG_TextAutofit() *EG_TextAutofit { _cddgba := &EG_TextAutofit{}; return _cddgba }

func (_eaecgg *CT_Path2DClose) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_aadd, _cacc := d.Token()
		if _cacc != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0074\u0068\u0032\u0044\u0043\u006c\u006f\u0073\u0065:\u0020\u0025\u0073", _cacc)
		}
		if _eddab, _gcdad := _aadd.(_g.EndElement); _gcdad && _eddab.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TextCharacterProperties struct {
	KumimojiAttr   *bool
	LangAttr       *string
	AltLangAttr    *string
	SzAttr         *int32
	BAttr          *bool
	IAttr          *bool
	UAttr          ST_TextUnderlineType
	StrikeAttr     ST_TextStrikeType
	KernAttr       *int32
	CapAttr        ST_TextCapsType
	SpcAttr        *ST_TextPoint
	NormalizeHAttr *bool
	BaselineAttr   *ST_Percentage
	NoProofAttr    *bool
	DirtyAttr      *bool
	ErrAttr        *bool
	SmtCleanAttr   *bool
	SmtIdAttr      *uint32
	BmkAttr        *string
	Ln             *CT_LineProperties
	NoFill         *CT_NoFillProperties
	SolidFill      *CT_SolidColorFillProperties
	GradFill       *CT_GradientFillProperties
	BlipFill       *CT_BlipFillProperties
	PattFill       *CT_PatternFillProperties
	GrpFill        *CT_GroupFillProperties
	EffectLst      *CT_EffectList
	EffectDag      *CT_EffectContainer
	Highlight      *CT_Color
	ULnTx          *CT_TextUnderlineLineFollowText
	ULn            *CT_LineProperties
	UFillTx        *CT_TextUnderlineFillFollowText
	UFill          *CT_TextUnderlineFillGroupWrapper
	Latin          *CT_TextFont
	Ea             *CT_TextFont
	Cs             *CT_TextFont
	Sym            *CT_TextFont
	HlinkClick     *CT_Hyperlink
	HlinkMouseOver *CT_Hyperlink
	Rtl            *CT_Boolean
	ExtLst         *CT_OfficeArtExtensionList
}

func (_ccfee *CT_PatternFillProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ccfee.PrstAttr != ST_PresetPatternValUnset {
		_aegge, _dgdeb := _ccfee.PrstAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0072\u0073\u0074"})
		if _dgdeb != nil {
			return _dgdeb
		}
		start.Attr = append(start.Attr, _aegge)
	}
	e.EncodeToken(start)
	if _ccfee.FgClr != nil {
		_ddbfd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0066\u0067\u0043\u006c\u0072"}}
		e.EncodeElement(_ccfee.FgClr, _ddbfd)
	}
	if _ccfee.BgClr != nil {
		_fedg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0067\u0043\u006c\u0072"}}
		e.EncodeElement(_ccfee.BgClr, _fedg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PositiveFixedAngle and its children
func (_gfcea *CT_PositiveFixedAngle) Validate() error {
	return _gfcea.ValidateWithPath("C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0046\u0069\u0078e\u0064\u0041\u006e\u0067\u006c\u0065")
}

func (_eebd *CT_GeomRect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c"}, Value: _gf.Sprintf("\u0025\u0076", _eebd.LAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074"}, Value: _gf.Sprintf("\u0025\u0076", _eebd.TAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072"}, Value: _gf.Sprintf("\u0025\u0076", _eebd.RAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062"}, Value: _gf.Sprintf("\u0025\u0076", _eebd.BAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_Geometry and its children
func (_fddebd *EG_Geometry) Validate() error {
	return _fddebd.ValidateWithPath("E\u0047\u005f\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079")
}

func (_bedc *CT_Scene3D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_acded := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0061\u006d\u0065\u0072\u0061"}}
	e.EncodeElement(_bedc.Camera, _acded)
	_bdeg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}}
	e.EncodeElement(_bedc.LightRig, _bdeg)
	if _bedc.Backdrop != nil {
		_dacae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0061\u0063\u006b\u0064\u0072\u006f\u0070"}}
		e.EncodeElement(_bedc.Backdrop, _dacae)
	}
	if _bedc.ExtLst != nil {
		_cdac := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bedc.ExtLst, _cdac)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Hyperlink and its children
func (_afcb *CT_Hyperlink) Validate() error {
	return _afcb.ValidateWithPath("\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b")
}

func NewCT_FillEffect() *CT_FillEffect { _effb := &CT_FillEffect{}; return _effb }

func (_ffcc ST_PenAlignment) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_ffcc.String(), start)
}

type CT_Ratio struct {
	NAttr int64
	DAttr int64
}

type CT_TableCell struct {
	RowSpanAttr  *int32
	GridSpanAttr *int32
	HMergeAttr   *bool
	VMergeAttr   *bool
	IdAttr       *string
	TxBody       *CT_TextBody
	TcPr         *CT_TableCellProperties
	ExtLst       *CT_OfficeArtExtensionList
}

func (_cccef *CT_SystemColor) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_bagaf, _bbbge := _cccef.ValAttr.MarshalXMLAttr(_g.Name{Local: "\u0076\u0061\u006c"})
	if _bbbge != nil {
		return _bbbge
	}
	start.Attr = append(start.Attr, _bagaf)
	if _cccef.LastClrAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006ca\u0073\u0074\u0043\u006c\u0072"}, Value: _gf.Sprintf("\u0025\u0076", *_cccef.LastClrAttr)})
	}
	e.EncodeToken(start)
	if _cccef.EG_ColorTransform != nil {
		for _, _beddd := range _cccef.EG_ColorTransform {
			_beddd.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GvmlUseShapeRectangle and its children
func (_cfdcc *CT_GvmlUseShapeRectangle) Validate() error {
	return _cfdcc.ValidateWithPath("\u0043T\u005f\u0047\u0076\u006d\u006c\u0055\u0073\u0065\u0053\u0068\u0061p\u0065\u0052\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065")
}

func (_dacgcd *ST_TextCapsType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ccggf, _cagbb := d.Token()
	if _cagbb != nil {
		return _cagbb
	}
	if _ffefe, _fbcbfg := _ccggf.(_g.EndElement); _fbcbfg && _ffefe.Name == start.Name {
		*_dacgcd = 1
		return nil
	}
	if _cgfgc, _cffbg := _ccggf.(_g.CharData); !_cffbg {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccggf)
	} else {
		switch string(_cgfgc) {
		case "":
			*_dacgcd = 0
		case "\u006e\u006f\u006e\u0065":
			*_dacgcd = 1
		case "\u0073\u006d\u0061l\u006c":
			*_dacgcd = 2
		case "\u0061\u006c\u006c":
			*_dacgcd = 3
		}
	}
	_ccggf, _cagbb = d.Token()
	if _cagbb != nil {
		return _cagbb
	}
	if _abbcb, _ggafg := _ccggf.(_g.EndElement); _ggafg && _abbcb.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccggf)
}

// Validate validates the CT_GradientStopList and its children
func (_gafeb *CT_GradientStopList) Validate() error {
	return _gafeb.ValidateWithPath("\u0043\u0054\u005f\u0047ra\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074")
}

type CT_AlphaReplaceEffect struct{ AAttr ST_PositiveFixedPercentage }

func (_gggbgg *ST_AnimationChartBuildType) ValidateWithPath(path string) error {
	_cecc := []string{}
	if _gggbgg.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		_cecc = append(_cecc, "S\u0054\u005f\u0041\u006eim\u0061t\u0069\u006f\u006e\u0042\u0075i\u006c\u0064\u0054\u0079\u0070\u0065")
	}
	if _gggbgg.ST_AnimationChartOnlyBuildType != ST_AnimationChartOnlyBuildTypeUnset {
		_cecc = append(_cecc, "\u0053\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069o\u006e\u0043\u0068\u0061\u0072\u0074\u004fn\u006c\u0079\u0042\u0075\u0069\u006c\u0064\u0054\u0079\u0070\u0065")
	}
	if len(_cecc) > 1 {
		return _gf.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _cecc)
	}
	return nil
}

func (_ggfcc ST_BlipCompression) Validate() error { return _ggfcc.ValidateWithPath("") }

func (_dgfdb ST_PresetMaterialType) ValidateWithPath(path string) error {
	switch _dgfdb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgfdb))
	}
	return nil
}

func (_gbbed *CT_PresetGeometry2D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_gbfd, _ddeg := _gbbed.PrstAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _ddeg != nil {
		return _ddeg
	}
	start.Attr = append(start.Attr, _gbfd)
	e.EncodeToken(start)
	if _gbbed.AvLst != nil {
		_cbffe := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_gbbed.AvLst, _cbffe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fgba *CT_FlatText) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cfaaa := range start.Attr {
		if _cfaaa.Name.Local == "\u007a" {
			_cbag, _ddaa := ParseUnionST_Coordinate(_cfaaa.Value)
			if _ddaa != nil {
				return _ddaa
			}
			_fgba.ZAttr = &_cbag
			continue
		}
	}
	for {
		_fcdf, _eadbc := d.Token()
		if _eadbc != nil {
			return _gf.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u006c\u0061\u0074\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _eadbc)
		}
		if _eadcg, _cedf := _fcdf.(_g.EndElement); _cedf && _eadcg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_ObjectStyleDefaults struct {
	SpDef  *CT_DefaultShapeDefinition
	LnDef  *CT_DefaultShapeDefinition
	TxDef  *CT_DefaultShapeDefinition
	ExtLst *CT_OfficeArtExtensionList
}

func NewCT_Path2DLineTo() *CT_Path2DLineTo {
	_gedfb := &CT_Path2DLineTo{}
	_gedfb.Pt = NewCT_AdjPoint2D()
	return _gedfb
}

func (_fefe *CT_LineProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fefe.WAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0077"}, Value: _gf.Sprintf("\u0025\u0076", *_fefe.WAttr)})
	}
	if _fefe.CapAttr != ST_LineCapUnset {
		_ceaa, _gebad := _fefe.CapAttr.MarshalXMLAttr(_g.Name{Local: "\u0063\u0061\u0070"})
		if _gebad != nil {
			return _gebad
		}
		start.Attr = append(start.Attr, _ceaa)
	}
	if _fefe.CmpdAttr != ST_CompoundLineUnset {
		_gfdgc, _caeg := _fefe.CmpdAttr.MarshalXMLAttr(_g.Name{Local: "\u0063\u006d\u0070\u0064"})
		if _caeg != nil {
			return _caeg
		}
		start.Attr = append(start.Attr, _gfdgc)
	}
	if _fefe.AlgnAttr != ST_PenAlignmentUnset {
		_bcfgg, _fccf := _fefe.AlgnAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _fccf != nil {
			return _fccf
		}
		start.Attr = append(start.Attr, _bcfgg)
	}
	e.EncodeToken(start)
	if _fefe.NoFill != nil {
		_ebgab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fefe.NoFill, _ebgab)
	}
	if _fefe.SolidFill != nil {
		_eadef := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fefe.SolidFill, _eadef)
	}
	if _fefe.GradFill != nil {
		_cgfb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fefe.GradFill, _cgfb)
	}
	if _fefe.PattFill != nil {
		_gadd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fefe.PattFill, _gadd)
	}
	if _fefe.PrstDash != nil {
		_cdbae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_fefe.PrstDash, _cdbae)
	}
	if _fefe.CustDash != nil {
		_fbbg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_fefe.CustDash, _fbbg)
	}
	if _fefe.Round != nil {
		_fbbb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0072\u006f\u0075\u006e\u0064"}}
		e.EncodeElement(_fefe.Round, _fbbb)
	}
	if _fefe.Bevel != nil {
		_bdfag := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_fefe.Bevel, _bdfag)
	}
	if _fefe.Miter != nil {
		_bdfb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006d\u0069\u0074\u0065\u0072"}}
		e.EncodeElement(_fefe.Miter, _bdfb)
	}
	if _fefe.HeadEnd != nil {
		_bdcgg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0068\u0065\u0061\u0064\u0045\u006ed"}}
		e.EncodeElement(_fefe.HeadEnd, _bdcgg)
	}
	if _fefe.TailEnd != nil {
		_cccba := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074\u0061\u0069\u006c\u0045\u006ed"}}
		e.EncodeElement(_fefe.TailEnd, _cccba)
	}
	if _fefe.ExtLst != nil {
		_addff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fefe.ExtLst, _addff)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GraphicalObjectData and its children
func (_gbfa *CT_GraphicalObjectData) Validate() error {
	return _gbfa.ValidateWithPath("\u0043\u0054\u005f\u0047ra\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0061t\u0061")
}

// Validate validates the CT_LineJoinMiterProperties and its children
func (_fgcgbb *CT_LineJoinMiterProperties) Validate() error {
	return _fgcgbb.ValidateWithPath("\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006eM\u0069\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}

func (_cgg *CT_AnimationGraphicalObjectBuildProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_gga:
	for {
		_gedg, _dafae := d.Token()
		if _dafae != nil {
			return _dafae
		}
		switch _bcfe := _gedg.(type) {
		case _g.StartElement:
			switch _bcfe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}:
				_cgg.BldDgm = NewCT_AnimationDgmBuildProperties()
				if _gdfc := d.DecodeElement(_cgg.BldDgm, &_bcfe); _gdfc != nil {
					return _gdfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0043\u0068\u0061\u0072\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0043\u0068\u0061\u0072\u0074"}:
				_cgg.BldChart = NewCT_AnimationChartBuildProperties()
				if _dacc := d.DecodeElement(_cgg.BldChart, &_bcfe); _dacc != nil {
					return _dacc
				}
			default:
				_b.Log.Debug("sk\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0047\u0072\u0061p\u0068\u0069\u0063\u0061\u006c\u004fb\u006a\u0065\u0063\u0074\u0042\u0075\u0069\u006c\u0064P\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bcfe.Name)
				if _eagg := d.Skip(); _eagg != nil {
					return _eagg
				}
			}
		case _g.EndElement:
			break _gga
		case _g.CharData:
		}
	}
	return nil
}

type CT_TextBulletColorFollowText struct{}

func (_ageea *CT_PositiveFixedAngle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _gf.Sprintf("\u0025\u0076", _ageea.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ReflectionEffect and its children, prefixing error messages with path
func (_ddbac *CT_ReflectionEffect) ValidateWithPath(path string) error {
	if _ddbac.BlurRadAttr != nil {
		if *_ddbac.BlurRadAttr < 0 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006c\u0075\u0072\u0052\u0061\u0064\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_ddbac.BlurRadAttr)
		}
		if *_ddbac.BlurRadAttr > 27273042316900 {
			return _gf.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006c\u0075r\u0052\u0061\u0064\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_ddbac.BlurRadAttr)
		}
	}
	if _ddbac.StAAttr != nil {
		if _egddg := _ddbac.StAAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0041\u0041\u0074\u0074\u0072"); _egddg != nil {
			return _egddg
		}
	}
	if _ddbac.StPosAttr != nil {
		if _eaaf := _ddbac.StPosAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _eaaf != nil {
			return _eaaf
		}
	}
	if _ddbac.EndAAttr != nil {
		if _dcdff := _ddbac.EndAAttr.ValidateWithPath(path + "\u002fE\u006e\u0064\u0041\u0041\u0074\u0074r"); _dcdff != nil {
			return _dcdff
		}
	}
	if _ddbac.EndPosAttr != nil {
		if _befgbb := _ddbac.EndPosAttr.ValidateWithPath(path + "/\u0045\u006e\u0064\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _befgbb != nil {
			return _befgbb
		}
	}
	if _ddbac.DistAttr != nil {
		if *_ddbac.DistAttr < 0 {
			return _gf.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_ddbac.DistAttr)
		}
		if *_ddbac.DistAttr > 27273042316900 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_ddbac.DistAttr)
		}
	}
	if _ddbac.DirAttr != nil {
		if *_ddbac.DirAttr < 0 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_ddbac.DirAttr)
		}
		if *_ddbac.DirAttr >= 21600000 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_ddbac.DirAttr)
		}
	}
	if _ddbac.FadeDirAttr != nil {
		if *_ddbac.FadeDirAttr < 0 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0046\u0061\u0064\u0065\u0044\u0069\u0072\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_ddbac.FadeDirAttr)
		}
		if *_ddbac.FadeDirAttr >= 21600000 {
			return _gf.Errorf("\u0025s\u002f\u006d.\u0046\u0061\u0064e\u0044\u0069\u0072\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_ddbac.FadeDirAttr)
		}
	}
	if _ddbac.SxAttr != nil {
		if _fgcf := _ddbac.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _fgcf != nil {
			return _fgcf
		}
	}
	if _ddbac.SyAttr != nil {
		if _dgfaf := _ddbac.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _dgfaf != nil {
			return _dgfaf
		}
	}
	if _ddbac.KxAttr != nil {
		if *_ddbac.KxAttr <= -5400000 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_ddbac.KxAttr)
		}
		if *_ddbac.KxAttr >= 5400000 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_ddbac.KxAttr)
		}
	}
	if _ddbac.KyAttr != nil {
		if *_ddbac.KyAttr <= -5400000 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_ddbac.KyAttr)
		}
		if *_ddbac.KyAttr >= 5400000 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_ddbac.KyAttr)
		}
	}
	if _ggage := _ddbac.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _ggage != nil {
		return _ggage
	}
	return nil
}

// Validate validates the CT_Ratio and its children
func (_fcaga *CT_Ratio) Validate() error {
	return _fcaga.ValidateWithPath("\u0043\u0054\u005f\u0052\u0061\u0074\u0069\u006f")
}

func (_egeee ST_TextFontScalePercentOrPercentString) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _egeee.ST_TextFontScalePercent != nil {
		e.EncodeToken(_g.CharData(_gf.Sprintf("\u0025\u0064", *_egeee.ST_TextFontScalePercent)))
	}
	if _egeee.ST_Percentage != nil {
		e.EncodeToken(_g.CharData(*_egeee.ST_Percentage))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

type EG_OfficeArtExtensionList struct{ Ext []*CT_OfficeArtExtension }

func (_ffada ST_TextStrikeType) ValidateWithPath(path string) error {
	switch _ffada {
	case 0, 1, 2, 3:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffada))
	}
	return nil
}

// Validate validates the EG_TextRun and its children
func (_degfbc *EG_TextRun) Validate() error {
	return _degfbc.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0052\u0075\u006e")
}

func (_adcec ST_LineEndWidth) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bgcbg := _g.Attr{}
	_bgcbg.Name = name
	switch _adcec {
	case ST_LineEndWidthUnset:
		_bgcbg.Value = ""
	case ST_LineEndWidthSm:
		_bgcbg.Value = "\u0073\u006d"
	case ST_LineEndWidthMed:
		_bgcbg.Value = "\u006d\u0065\u0064"
	case ST_LineEndWidthLg:
		_bgcbg.Value = "\u006c\u0067"
	}
	return _bgcbg, nil
}

// ValidateWithPath validates the CT_Ratio and its children, prefixing error messages with path
func (_fbbeg *CT_Ratio) ValidateWithPath(path string) error { return nil }

func NewCT_LineJoinBevel() *CT_LineJoinBevel { _beggc := &CT_LineJoinBevel{}; return _beggc }

func (_fcage ST_BevelPresetType) String() string {
	switch _fcage {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074"
	case 2:
		return "\u0063\u0069\u0072\u0063\u006c\u0065"
	case 3:
		return "\u0073\u006c\u006fp\u0065"
	case 4:
		return "\u0063\u0072\u006fs\u0073"
	case 5:
		return "\u0061\u006e\u0067l\u0065"
	case 6:
		return "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed"
	case 7:
		return "\u0063\u006f\u006e\u0076\u0065\u0078"
	case 8:
		return "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et"
	case 9:
		return "\u0064\u0069\u0076o\u0074"
	case 10:
		return "\u0072\u0069\u0062\u006c\u0065\u0074"
	case 11:
		return "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065"
	case 12:
		return "\u0061r\u0074\u0044\u0065\u0063\u006f"
	}
	return ""
}

func NewCT_ScRgbColor() *CT_ScRgbColor { _gbdc := &CT_ScRgbColor{}; return _gbdc }

func (_dcfcb *CT_StretchInfoProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cbbegd:
	for {
		_ffgag, _fgge := d.Token()
		if _fgge != nil {
			return _fgge
		}
		switch _agaab := _ffgag.(type) {
		case _g.StartElement:
			switch _agaab.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0052\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0052\u0065\u0063\u0074"}:
				_dcfcb.FillRect = NewCT_RelativeRect()
				if _gaab := d.DecodeElement(_dcfcb.FillRect, &_agaab); _gaab != nil {
					return _gaab
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0074\u0072\u0065\u0074\u0063\u0068\u0049\u006e\u0066\u006f\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _agaab.Name)
				if _cdaf := d.Skip(); _cdaf != nil {
					return _cdaf
				}
			}
		case _g.EndElement:
			break _cbbegd
		case _g.CharData:
		}
	}
	return nil
}

func (_cgfab *ST_LightRigType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bdgcc, _ecbbag := d.Token()
	if _ecbbag != nil {
		return _ecbbag
	}
	if _efdeg, _fagfc := _bdgcc.(_g.EndElement); _fagfc && _efdeg.Name == start.Name {
		*_cgfab = 1
		return nil
	}
	if _daedg, _ffbgb := _bdgcc.(_g.CharData); !_ffbgb {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdgcc)
	} else {
		switch string(_daedg) {
		case "":
			*_cgfab = 0
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031":
			*_cgfab = 1
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032":
			*_cgfab = 2
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033":
			*_cgfab = 3
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034":
			*_cgfab = 4
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031":
			*_cgfab = 5
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032":
			*_cgfab = 6
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033":
			*_cgfab = 7
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034":
			*_cgfab = 8
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031":
			*_cgfab = 9
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032":
			*_cgfab = 10
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033":
			*_cgfab = 11
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034":
			*_cgfab = 12
		case "\u0074h\u0072\u0065\u0065\u0050\u0074":
			*_cgfab = 13
		case "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064":
			*_cgfab = 14
		case "\u0073\u006f\u0066\u0074":
			*_cgfab = 15
		case "\u0068\u0061\u0072s\u0068":
			*_cgfab = 16
		case "\u0066\u006c\u006fo\u0064":
			*_cgfab = 17
		case "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067":
			*_cgfab = 18
		case "\u006do\u0072\u006e\u0069\u006e\u0067":
			*_cgfab = 19
		case "\u0073u\u006e\u0072\u0069\u0073\u0065":
			*_cgfab = 20
		case "\u0073\u0075\u006e\u0073\u0065\u0074":
			*_cgfab = 21
		case "\u0063\u0068\u0069\u006c\u006c\u0079":
			*_cgfab = 22
		case "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067":
			*_cgfab = 23
		case "\u0066\u006c\u0061\u0074":
			*_cgfab = 24
		case "\u0074\u0077\u006fP\u0074":
			*_cgfab = 25
		case "\u0067\u006c\u006f\u0077":
			*_cgfab = 26
		case "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d":
			*_cgfab = 27
		}
	}
	_bdgcc, _ecbbag = d.Token()
	if _ecbbag != nil {
		return _ecbbag
	}
	if _febgd, _dbffb := _bdgcc.(_g.EndElement); _dbffb && _febgd.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdgcc)
}

func (_edceg ST_DgmBuildStep) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_gcabc := _g.Attr{}
	_gcabc.Name = name
	switch _edceg {
	case ST_DgmBuildStepUnset:
		_gcabc.Value = ""
	case ST_DgmBuildStepSp:
		_gcabc.Value = "\u0073\u0070"
	case ST_DgmBuildStepBg:
		_gcabc.Value = "\u0062\u0067"
	}
	return _gcabc, nil
}

func NewCT_OfficeStyleSheet() *CT_OfficeStyleSheet {
	_caedb := &CT_OfficeStyleSheet{}
	_caedb.ThemeElements = NewCT_BaseStyles()
	return _caedb
}

func (_gfage ST_FontCollectionIndex) ValidateWithPath(path string) error {
	switch _gfage {
	case 0, 1, 2, 3:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gfage))
	}
	return nil
}

func NewCT_TextBulletColorFollowText() *CT_TextBulletColorFollowText {
	_aegdd := &CT_TextBulletColorFollowText{}
	return _aegdd
}

// ST_TextSpacingPercentOrPercentString is a union type
type ST_TextSpacingPercentOrPercentString struct {
	ST_TextSpacingPercent *int32
	ST_Percentage         *string
}

func (_fdfba *CT_PathShadeProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dadb := range start.Attr {
		if _dadb.Name.Local == "\u0070\u0061\u0074\u0068" {
			_fdfba.PathAttr.UnmarshalXMLAttr(_dadb)
			continue
		}
	}
_eeccc:
	for {
		_eabbg, _bdace := d.Token()
		if _bdace != nil {
			return _bdace
		}
		switch _gdfga := _eabbg.(type) {
		case _g.StartElement:
			switch _gdfga.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"}:
				_fdfba.FillToRect = NewCT_RelativeRect()
				if _ddddf := d.DecodeElement(_fdfba.FillToRect, &_gdfga); _ddddf != nil {
					return _ddddf
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0050\u0061\u0074\u0068S\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gdfga.Name)
				if _aagb := d.Skip(); _aagb != nil {
					return _aagb
				}
			}
		case _g.EndElement:
			break _eeccc
		case _g.CharData:
		}
	}
	return nil
}

func (_eddbdd *CT_TextBulletColorFollowText) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_TableProperties struct {
	RtlAttr      *bool
	FirstRowAttr *bool
	FirstColAttr *bool
	LastRowAttr  *bool
	LastColAttr  *bool
	BandRowAttr  *bool
	BandColAttr  *bool
	NoFill       *CT_NoFillProperties
	SolidFill    *CT_SolidColorFillProperties
	GradFill     *CT_GradientFillProperties
	BlipFill     *CT_BlipFillProperties
	PattFill     *CT_PatternFillProperties
	GrpFill      *CT_GroupFillProperties
	EffectLst    *CT_EffectList
	EffectDag    *CT_EffectContainer
	Choice       *CT_TablePropertiesChoice
	ExtLst       *CT_OfficeArtExtensionList
}

type CT_TableStyle struct {
	StyleIdAttr   string
	StyleNameAttr string
	TblBg         *CT_TableBackgroundStyle
	WholeTbl      *CT_TablePartStyle
	Band1H        *CT_TablePartStyle
	Band2H        *CT_TablePartStyle
	Band1V        *CT_TablePartStyle
	Band2V        *CT_TablePartStyle
	LastCol       *CT_TablePartStyle
	FirstCol      *CT_TablePartStyle
	LastRow       *CT_TablePartStyle
	SeCell        *CT_TablePartStyle
	SwCell        *CT_TablePartStyle
	FirstRow      *CT_TablePartStyle
	NeCell        *CT_TablePartStyle
	NwCell        *CT_TablePartStyle
	ExtLst        *CT_OfficeArtExtensionList
}

type CT_AlphaModulateFixedEffect struct{ AmtAttr *ST_PositivePercentage }

func (_acccb *CT_RelativeRect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bcccd := range start.Attr {
		if _bcccd.Name.Local == "\u006c" {
			_fbege, _bbfdc := ParseUnionST_Percentage(_bcccd.Value)
			if _bbfdc != nil {
				return _bbfdc
			}
			_acccb.LAttr = &_fbege
			continue
		}
		if _bcccd.Name.Local == "\u0074" {
			_ccagg, _eeece := ParseUnionST_Percentage(_bcccd.Value)
			if _eeece != nil {
				return _eeece
			}
			_acccb.TAttr = &_ccagg
			continue
		}
		if _bcccd.Name.Local == "\u0072" {
			_eceee, _fgaee := ParseUnionST_Percentage(_bcccd.Value)
			if _fgaee != nil {
				return _fgaee
			}
			_acccb.RAttr = &_eceee
			continue
		}
		if _bcccd.Name.Local == "\u0062" {
			_gcfbca, _babbd := ParseUnionST_Percentage(_bcccd.Value)
			if _babbd != nil {
				return _babbd
			}
			_acccb.BAttr = &_gcfbca
			continue
		}
	}
	for {
		_gfac, _bgffc := d.Token()
		if _bgffc != nil {
			return _gf.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0052\u0065\u006c\u0061\u0074\u0069v\u0065\u0052\u0065c\u0074:\u0020\u0025\u0073", _bgffc)
		}
		if _ebgff, _fgebb := _gfac.(_g.EndElement); _fgebb && _ebgff.Name == start.Name {
			break
		}
	}
	return nil
}

func (_afaba *CT_NonVisualDrawingProps) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dbfda := range start.Attr {
		if _dbfda.Name.Local == "\u0069\u0064" {
			_efacac, _aabad := _c.ParseUint(_dbfda.Value, 10, 32)
			if _aabad != nil {
				return _aabad
			}
			_afaba.IdAttr = uint32(_efacac)
			continue
		}
		if _dbfda.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gdfgf, _eafa := _dbfda.Value, error(nil)
			if _eafa != nil {
				return _eafa
			}
			_afaba.NameAttr = _gdfgf
			continue
		}
		if _dbfda.Name.Local == "\u0064\u0065\u0073c\u0072" {
			_gcaca, _ceaeg := _dbfda.Value, error(nil)
			if _ceaeg != nil {
				return _ceaeg
			}
			_afaba.DescrAttr = &_gcaca
			continue
		}
		if _dbfda.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_dfgef, _feded := _c.ParseBool(_dbfda.Value)
			if _feded != nil {
				return _feded
			}
			_afaba.HiddenAttr = &_dfgef
			continue
		}
		if _dbfda.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_cggdd, _fddf := _dbfda.Value, error(nil)
			if _fddf != nil {
				return _fddf
			}
			_afaba.TitleAttr = &_cggdd
			continue
		}
	}
_aagc:
	for {
		_dcbbd, _dfbd := d.Token()
		if _dfbd != nil {
			return _dfbd
		}
		switch _ffgg := _dcbbd.(type) {
		case _g.StartElement:
			switch _ffgg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}:
				_afaba.HlinkClick = NewCT_Hyperlink()
				if _afef := d.DecodeElement(_afaba.HlinkClick, &_ffgg); _afef != nil {
					return _afef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"}:
				_afaba.HlinkHover = NewCT_Hyperlink()
				if _gedcf := d.DecodeElement(_afaba.HlinkHover, &_ffgg); _gedcf != nil {
					return _gedcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afaba.ExtLst = NewCT_OfficeArtExtensionList()
				if _dfeg := d.DecodeElement(_afaba.ExtLst, &_ffgg); _dfeg != nil {
					return _dfeg
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006e\u0067P\u0072\u006f\u0070\u0073\u0020%\u0076", _ffgg.Name)
				if _eafef := d.Skip(); _eafef != nil {
					return _eafef
				}
			}
		case _g.EndElement:
			break _aagc
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_Path2DQuadBezierTo() *CT_Path2DQuadBezierTo {
	_cccdd := &CT_Path2DQuadBezierTo{}
	return _cccdd
}

func (_bada *CT_ColorMappingOverrideChoice) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dced:
	for {
		_daff, _badc := d.Token()
		if _badc != nil {
			return _badc
		}
		switch _bffad := _daff.(type) {
		case _g.StartElement:
			switch _bffad.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}:
				_bada.MasterClrMapping = NewCT_EmptyElement()
				if _cfegc := d.DecodeElement(_bada.MasterClrMapping, &_bffad); _cfegc != nil {
					return _cfegc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}:
				_bada.OverrideClrMapping = NewCT_ColorMapping()
				if _ddbg := d.DecodeElement(_bada.OverrideClrMapping, &_bffad); _ddbg != nil {
					return _ddbg
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067O\u0076\u0065\u0072\u0072\u0069\u0064e\u0043\u0068o\u0069\u0063e\u0020%\u0076", _bffad.Name)
				if _gcga := d.Skip(); _gcga != nil {
					return _gcga
				}
			}
		case _g.EndElement:
			break _dced
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PresetShadowEffect and its children
func (_fega *CT_PresetShadowEffect) Validate() error {
	return _fega.ValidateWithPath("C\u0054\u005f\u0050\u0072es\u0065t\u0053\u0068\u0061\u0064\u006fw\u0045\u0066\u0066\u0065\u0063\u0074")
}

func NewCT_EffectProperties() *CT_EffectProperties { _bdfa := &CT_EffectProperties{}; return _bdfa }

// ValidateWithPath validates the CT_ColorReplaceEffect and its children, prefixing error messages with path
func (_cccc *CT_ColorReplaceEffect) ValidateWithPath(path string) error {
	if _cccc.ScrgbClr != nil {
		if _cgbb := _cccc.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _cgbb != nil {
			return _cgbb
		}
	}
	if _cccc.SrgbClr != nil {
		if _ceac := _cccc.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _ceac != nil {
			return _ceac
		}
	}
	if _cccc.HslClr != nil {
		if _eaege := _cccc.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _eaege != nil {
			return _eaege
		}
	}
	if _cccc.SysClr != nil {
		if _addc := _cccc.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _addc != nil {
			return _addc
		}
	}
	if _cccc.SchemeClr != nil {
		if _deddb := _cccc.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _deddb != nil {
			return _deddb
		}
	}
	if _cccc.PrstClr != nil {
		if _gecg := _cccc.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _gecg != nil {
			return _gecg
		}
	}
	return nil
}

type CT_GraphicalObject struct{ GraphicData *CT_GraphicalObjectData }

// ValidateWithPath validates the CT_HSLEffect and its children, prefixing error messages with path
func (_ebgggb *CT_HSLEffect) ValidateWithPath(path string) error {
	if _ebgggb.HueAttr != nil {
		if *_ebgggb.HueAttr < 0 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0048\u0075e\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_ebgggb.HueAttr)
		}
		if *_ebgggb.HueAttr >= 21600000 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002eH\u0075\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_ebgggb.HueAttr)
		}
	}
	if _ebgggb.SatAttr != nil {
		if _egeef := _ebgggb.SatAttr.ValidateWithPath(path + "\u002f\u0053\u0061\u0074\u0041\u0074\u0074\u0072"); _egeef != nil {
			return _egeef
		}
	}
	if _ebgggb.LumAttr != nil {
		if _aeac := _ebgggb.LumAttr.ValidateWithPath(path + "\u002f\u004c\u0075\u006d\u0041\u0074\u0074\u0072"); _aeac != nil {
			return _aeac
		}
	}
	return nil
}

type CT_Path2D struct {
	WAttr           *int64
	HAttr           *int64
	FillAttr        ST_PathFillMode
	StrokeAttr      *bool
	ExtrusionOkAttr *bool
	Close           []*CT_Path2DClose
	MoveTo          []*CT_Path2DMoveTo
	LnTo            []*CT_Path2DLineTo
	ArcTo           []*CT_Path2DArcTo
	QuadBezTo       []*CT_Path2DQuadBezierTo
	CubicBezTo      []*CT_Path2DCubicBezierTo
}

func NewCT_NonVisualDrawingShapeProps() *CT_NonVisualDrawingShapeProps {
	_dcagc := &CT_NonVisualDrawingShapeProps{}
	return _dcagc
}

func (_fecfb *CT_HslColor) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u0075\u0065"}, Value: _gf.Sprintf("\u0025\u0076", _fecfb.HueAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0061\u0074"}, Value: _gf.Sprintf("\u0025\u0076", _fecfb.SatAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0075\u006d"}, Value: _gf.Sprintf("\u0025\u0076", _fecfb.LumAttr)})
	e.EncodeToken(start)
	if _fecfb.EG_ColorTransform != nil {
		for _, _bffd := range _fecfb.EG_ColorTransform {
			_bffd.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_FillOverlayEffect() *CT_FillOverlayEffect {
	_gccde := &CT_FillOverlayEffect{}
	_gccde.BlendAttr = ST_BlendMode(1)
	return _gccde
}

func (_aefe *CT_FillEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _aefe.NoFill != nil {
		_ggeab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aefe.NoFill, _ggeab)
	}
	if _aefe.SolidFill != nil {
		_fbac := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aefe.SolidFill, _fbac)
	}
	if _aefe.GradFill != nil {
		_aedb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aefe.GradFill, _aedb)
	}
	if _aefe.BlipFill != nil {
		_gfga := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aefe.BlipFill, _gfga)
	}
	if _aefe.PattFill != nil {
		_bcabd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aefe.PattFill, _bcabd)
	}
	if _aefe.GrpFill != nil {
		_bebee := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_aefe.GrpFill, _bebee)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cdadb *ST_SystemColorVal) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_caec, _aagaee := d.Token()
	if _aagaee != nil {
		return _aagaee
	}
	if _cbcff, _edbb := _caec.(_g.EndElement); _edbb && _cbcff.Name == start.Name {
		*_cdadb = 1
		return nil
	}
	if _fcceg, _gaaaf := _caec.(_g.CharData); !_gaaaf {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _caec)
	} else {
		switch string(_fcceg) {
		case "":
			*_cdadb = 0
		case "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r":
			*_cdadb = 1
		case "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064":
			*_cdadb = 2
		case "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
			*_cdadb = 3
		case "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
			*_cdadb = 4
		case "\u006d\u0065\u006e\u0075":
			*_cdadb = 5
		case "\u0077\u0069\u006e\u0064\u006f\u0077":
			*_cdadb = 6
		case "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065":
			*_cdadb = 7
		case "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074":
			*_cdadb = 8
		case "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074":
			*_cdadb = 9
		case "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
			*_cdadb = 10
		case "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072":
			*_cdadb = 11
		case "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072":
			*_cdadb = 12
		case "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065":
			*_cdadb = 13
		case "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t":
			*_cdadb = 14
		case "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074":
			*_cdadb = 15
		case "\u0062t\u006e\u0046\u0061\u0063\u0065":
			*_cdadb = 16
		case "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw":
			*_cdadb = 17
		case "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074":
			*_cdadb = 18
		case "\u0062t\u006e\u0054\u0065\u0078\u0074":
			*_cdadb = 19
		case "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
			*_cdadb = 20
		case "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
			*_cdadb = 21
		case "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077":
			*_cdadb = 22
		case "\u0033d\u004c\u0069\u0067\u0068\u0074":
			*_cdadb = 23
		case "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074":
			*_cdadb = 24
		case "\u0069\u006e\u0066\u006f\u0042\u006b":
			*_cdadb = 25
		case "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074":
			*_cdadb = 26
		case "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e":
			*_cdadb = 27
		case "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
			*_cdadb = 28
		case "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
			*_cdadb = 29
		case "\u006de\u006e\u0075\u0042\u0061\u0072":
			*_cdadb = 30
		}
	}
	_caec, _aagaee = d.Token()
	if _aagaee != nil {
		return _aagaee
	}
	if _ebfcg, _faegbb := _caec.(_g.EndElement); _faegbb && _ebfcg.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _caec)
}

func (_febf *CT_ColorMRU) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_gdgc:
	for {
		_gfgde, _aegg := d.Token()
		if _aegg != nil {
			return _aegg
		}
		switch _gbea := _gfgde.(type) {
		case _g.StartElement:
			switch _gbea.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_eaf := NewEG_ColorChoice()
				_eaf.ScrgbClr = NewCT_ScRgbColor()
				if _ebeb := d.DecodeElement(_eaf.ScrgbClr, &_gbea); _ebeb != nil {
					return _ebeb
				}
				_febf.EG_ColorChoice = append(_febf.EG_ColorChoice, _eaf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_facb := NewEG_ColorChoice()
				_facb.SrgbClr = NewCT_SRgbColor()
				if _deed := d.DecodeElement(_facb.SrgbClr, &_gbea); _deed != nil {
					return _deed
				}
				_febf.EG_ColorChoice = append(_febf.EG_ColorChoice, _facb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_ddgb := NewEG_ColorChoice()
				_ddgb.HslClr = NewCT_HslColor()
				if _gfed := d.DecodeElement(_ddgb.HslClr, &_gbea); _gfed != nil {
					return _gfed
				}
				_febf.EG_ColorChoice = append(_febf.EG_ColorChoice, _ddgb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_eafc := NewEG_ColorChoice()
				_eafc.SysClr = NewCT_SystemColor()
				if _gbcbb := d.DecodeElement(_eafc.SysClr, &_gbea); _gbcbb != nil {
					return _gbcbb
				}
				_febf.EG_ColorChoice = append(_febf.EG_ColorChoice, _eafc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_aabe := NewEG_ColorChoice()
				_aabe.SchemeClr = NewCT_SchemeColor()
				if _dbed := d.DecodeElement(_aabe.SchemeClr, &_gbea); _dbed != nil {
					return _dbed
				}
				_febf.EG_ColorChoice = append(_febf.EG_ColorChoice, _aabe)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_cfec := NewEG_ColorChoice()
				_cfec.PrstClr = NewCT_PresetColor()
				if _gaecc := d.DecodeElement(_cfec.PrstClr, &_gbea); _gaecc != nil {
					return _gaecc
				}
				_febf.EG_ColorChoice = append(_febf.EG_ColorChoice, _cfec)
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0052\u0055\u0020\u0025\u0076", _gbea.Name)
				if _afe := d.Skip(); _afe != nil {
					return _afe
				}
			}
		case _g.EndElement:
			break _gdgc
		case _g.CharData:
		}
	}
	return nil
}

func (_aced *CT_TextBulletSizePercent) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_aced.ValAttr = "\u0031\u0030\u0030\u0025"
	for _, _bbdb := range start.Attr {
		if _bbdb.Name.Local == "\u0076\u0061\u006c" {
			_dgafd, _gefag := _bbdb.Value, error(nil)
			if _gefag != nil {
				return _gefag
			}
			_aced.ValAttr = _dgafd
			continue
		}
	}
	for {
		_cfcbe, _ceaca := d.Token()
		if _ceaca != nil {
			return _gf.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054ext\u0042ul\u006c\u0065\u0074\u0053\u0069\u007a\u0065Pe\u0072\u0063\u0065\u006e\u0074\u003a\u0020%\u0073", _ceaca)
		}
		if _dcgge, _cgdcff := _cfcbe.(_g.EndElement); _cgdcff && _dcgge.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the EG_Media and its children, prefixing error messages with path
func (_eadcbb *EG_Media) ValidateWithPath(path string) error {
	if _eadcbb.AudioCd != nil {
		if _faecf := _eadcbb.AudioCd.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0043\u0064"); _faecf != nil {
			return _faecf
		}
	}
	if _eadcbb.WavAudioFile != nil {
		if _ffdgfc := _eadcbb.WavAudioFile.ValidateWithPath(path + "\u002f\u0057\u0061\u0076\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _ffdgfc != nil {
			return _ffdgfc
		}
	}
	if _eadcbb.AudioFile != nil {
		if _bgfbe := _eadcbb.AudioFile.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _bgfbe != nil {
			return _bgfbe
		}
	}
	if _eadcbb.VideoFile != nil {
		if _fddabbd := _eadcbb.VideoFile.ValidateWithPath(path + "\u002f\u0056\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"); _fddabbd != nil {
			return _fddabbd
		}
	}
	if _eadcbb.QuickTimeFile != nil {
		if _caddg := _eadcbb.QuickTimeFile.ValidateWithPath(path + "\u002f\u0051\u0075\u0069\u0063\u006b\u0054\u0069\u006de\u0046\u0069\u006c\u0065"); _caddg != nil {
			return _caddg
		}
	}
	return nil
}

func (_gaf *AG_Blob) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _de := range start.Attr {
		if _de.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _de.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_cg, _cgc := _de.Value, error(nil)
			if _cgc != nil {
				return _cgc
			}
			_gaf.EmbedAttr = &_cg
			continue
		}
		if _de.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _de.Name.Local == "\u006c\u0069\u006e\u006b" {
			_ag, _ba := _de.Value, error(nil)
			if _ba != nil {
				return _ba
			}
			_gaf.LinkAttr = &_ag
			continue
		}
	}
	for {
		_dg, _bf := d.Token()
		if _bf != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u0042\u006c\u006f\u0062\u003a\u0020\u0025\u0073", _bf)
		}
		if _gc, _bc := _dg.(_g.EndElement); _bc && _gc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_DefaultShapeDefinition and its children
func (_dabc *CT_DefaultShapeDefinition) Validate() error {
	return _dabc.ValidateWithPath("\u0043T\u005f\u0044\u0065\u0066a\u0075\u006c\u0074\u0053\u0068a\u0070e\u0044e\u0066\u0069\u006e\u0069\u0074\u0069\u006fn")
}

func (_fcgga *ST_Percentage) Validate() error { return _fcgga.ValidateWithPath("") }

func (_gbaad *CT_GraphicalObjectData) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075\u0072\u0069"}, Value: _gf.Sprintf("\u0025\u0076", _gbaad.UriAttr)})
	e.EncodeToken(start)
	if _gbaad.Any != nil {
		for _, _cdbed := range _gbaad.Any {
			_cdbed.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cegbe ST_LineEndWidth) ValidateWithPath(path string) error {
	switch _cegbe {
	case 0, 1, 2, 3:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cegbe))
	}
	return nil
}

func (_gbaaf *CT_NonVisualDrawingProps) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064"}, Value: _gf.Sprintf("\u0025\u0076", _gbaaf.IdAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _gf.Sprintf("\u0025\u0076", _gbaaf.NameAttr)})
	if _gbaaf.DescrAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0065\u0073c\u0072"}, Value: _gf.Sprintf("\u0025\u0076", *_gbaaf.DescrAttr)})
	}
	if _gbaaf.HiddenAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gbaaf.HiddenAttr))})
	}
	if _gbaaf.TitleAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _gf.Sprintf("\u0025\u0076", *_gbaaf.TitleAttr)})
	}
	e.EncodeToken(start)
	if _gbaaf.HlinkClick != nil {
		_ddfaa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068l\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}}
		e.EncodeElement(_gbaaf.HlinkClick, _ddfaa)
	}
	if _gbaaf.HlinkHover != nil {
		_cfbc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068l\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"}}
		e.EncodeElement(_gbaaf.HlinkHover, _cfbc)
	}
	if _gbaaf.ExtLst != nil {
		_gbde := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gbaaf.ExtLst, _gbde)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SoftEdgesEffect and its children
func (_cdgebf *CT_SoftEdgesEffect) Validate() error {
	return _cdgebf.ValidateWithPath("\u0043T\u005fS\u006f\u0066\u0074\u0045\u0064g\u0065\u0073E\u0066\u0066\u0065\u0063\u0074")
}

// ValidateWithPath validates the EG_Geometry and its children, prefixing error messages with path
func (_accae *EG_Geometry) ValidateWithPath(path string) error {
	if _accae.CustGeom != nil {
		if _baeecf := _accae.CustGeom.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0047\u0065\u006fm"); _baeecf != nil {
			return _baeecf
		}
	}
	if _accae.PrstGeom != nil {
		if _bafc := _accae.PrstGeom.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0047\u0065\u006fm"); _bafc != nil {
			return _bafc
		}
	}
	return nil
}

// Validate validates the CT_Path2DClose and its children
func (_dcaad *CT_Path2DClose) Validate() error {
	return _dcaad.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044C\u006c\u006f\u0073\u0065")
}

// ValidateWithPath validates the CT_TextBulletColorFollowText and its children, prefixing error messages with path
func (_becf *CT_TextBulletColorFollowText) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_GraphicalObject and its children
func (_cdab *CT_GraphicalObject) Validate() error {
	return _cdab.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0070\u0068\u0069c\u0061\u006cO\u0062\u006a\u0065\u0063\u0074")
}

func NewCT_TextSpacing() *CT_TextSpacing { _gabaa := &CT_TextSpacing{}; return _gabaa }

func (_cebe *CT_PresetGeometry2D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cebe.PrstAttr = ST_ShapeType(1)
	for _, _gedfe := range start.Attr {
		if _gedfe.Name.Local == "\u0070\u0072\u0073\u0074" {
			_cebe.PrstAttr.UnmarshalXMLAttr(_gedfe)
			continue
		}
	}
_cfaf:
	for {
		_cgff, _dfffg := d.Token()
		if _dfffg != nil {
			return _dfffg
		}
		switch _edddd := _cgff.(type) {
		case _g.StartElement:
			switch _edddd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}:
				_cebe.AvLst = NewCT_GeomGuideList()
				if _egagb := d.DecodeElement(_cebe.AvLst, &_edddd); _egagb != nil {
					return _egagb
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074\u0047eo\u006d\u0065\u0074\u0072\u0079\u0032\u0044\u0020\u0025\u0076", _edddd.Name)
				if _ddedg := d.Skip(); _ddedg != nil {
					return _ddedg
				}
			}
		case _g.EndElement:
			break _cfaf
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Shape3D and its children, prefixing error messages with path
func (_caefe *CT_Shape3D) ValidateWithPath(path string) error {
	if _caefe.ZAttr != nil {
		if _cbeeg := _caefe.ZAttr.ValidateWithPath(path + "\u002f\u005a\u0041\u0074\u0074\u0072"); _cbeeg != nil {
			return _cbeeg
		}
	}
	if _caefe.ExtrusionHAttr != nil {
		if *_caefe.ExtrusionHAttr < 0 {
			return _gf.Errorf("\u0025\u0073\u002fm\u002e\u0045\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0048\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_caefe.ExtrusionHAttr)
		}
		if *_caefe.ExtrusionHAttr > 27273042316900 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0045\u0078t\u0072\u0075\u0073i\u006f\u006e\u0048A\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020b\u0065 <\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_caefe.ExtrusionHAttr)
		}
	}
	if _caefe.ContourWAttr != nil {
		if *_caefe.ContourWAttr < 0 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0043\u006f\u006e\u0074\u006f\u0075\u0072\u0057\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_caefe.ContourWAttr)
		}
		if *_caefe.ContourWAttr > 27273042316900 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u006f\u006e\u0074\u006f\u0075r\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_caefe.ContourWAttr)
		}
	}
	if _dggcb := _caefe.PrstMaterialAttr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u004d\u0061\u0074\u0065\u0072\u0069\u0061l\u0041\u0074\u0074\u0072"); _dggcb != nil {
		return _dggcb
	}
	if _caefe.BevelT != nil {
		if _cedce := _caefe.BevelT.ValidateWithPath(path + "\u002fB\u0065\u0076\u0065\u006c\u0054"); _cedce != nil {
			return _cedce
		}
	}
	if _caefe.BevelB != nil {
		if _gebdg := _caefe.BevelB.ValidateWithPath(path + "\u002fB\u0065\u0076\u0065\u006c\u0042"); _gebdg != nil {
			return _gebdg
		}
	}
	if _caefe.ExtrusionClr != nil {
		if _dcdgd := _caefe.ExtrusionClr.ValidateWithPath(path + "\u002f\u0045\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0043\u006c\u0072"); _dcdgd != nil {
			return _dcdgd
		}
	}
	if _caefe.ContourClr != nil {
		if _aebgg := _caefe.ContourClr.ValidateWithPath(path + "/\u0043\u006f\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"); _aebgg != nil {
			return _aebgg
		}
	}
	if _caefe.ExtLst != nil {
		if _adfbfe := _caefe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _adfbfe != nil {
			return _adfbfe
		}
	}
	return nil
}

type CT_Table struct {
	TblPr   *CT_TableProperties
	TblGrid *CT_TableGrid
	Tr      []*CT_TableRow
}

// Validate validates the CT_TextListStyle and its children
func (_agabf *CT_TextListStyle) Validate() error {
	return _agabf.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u0073\u0074\u0053\u0074\u0079\u006c\u0065")
}

type CT_TextParagraph struct {
	PPr        *CT_TextParagraphProperties
	EG_TextRun []*EG_TextRun
	EndParaRPr *CT_TextCharacterProperties
}

func (_bad *CT_AlphaCeilingEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_AlphaModulateEffect() *CT_AlphaModulateEffect {
	_ffbc := &CT_AlphaModulateEffect{}
	_ffbc.Cont = NewCT_EffectContainer()
	return _ffbc
}

func (_dceg *CT_EffectStyleItem) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bcgaa:
	for {
		_ggbg, _cfbaa := d.Token()
		if _cfbaa != nil {
			return _cfbaa
		}
		switch _gfcfg := _ggbg.(type) {
		case _g.StartElement:
			switch _gfcfg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_dceg.EffectLst = NewCT_EffectList()
				if _fbeag := d.DecodeElement(_dceg.EffectLst, &_gfcfg); _fbeag != nil {
					return _fbeag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_dceg.EffectDag = NewCT_EffectContainer()
				if _fdgf := d.DecodeElement(_dceg.EffectDag, &_gfcfg); _fdgf != nil {
					return _fdgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_dceg.Scene3d = NewCT_Scene3D()
				if _afbee := d.DecodeElement(_dceg.Scene3d, &_gfcfg); _afbee != nil {
					return _afbee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_dceg.Sp3d = NewCT_Shape3D()
				if _fbfcd := d.DecodeElement(_dceg.Sp3d, &_gfcfg); _fbfcd != nil {
					return _fbfcd
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074S\u0074\u0079\u006c\u0065\u0049\u0074\u0065\u006d\u0020\u0025\u0076", _gfcfg.Name)
				if _becd := d.Skip(); _becd != nil {
					return _becd
				}
			}
		case _g.EndElement:
			break _bcgaa
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_EffectStyleList() *CT_EffectStyleList { _aedd := &CT_EffectStyleList{}; return _aedd }

// ValidateWithPath validates the CT_TextBody and its children, prefixing error messages with path
func (_ebbac *CT_TextBody) ValidateWithPath(path string) error {
	if _degde := _ebbac.BodyPr.ValidateWithPath(path + "\u002fB\u006f\u0064\u0079\u0050\u0072"); _degde != nil {
		return _degde
	}
	if _ebbac.LstStyle != nil {
		if _agbef := _ebbac.LstStyle.ValidateWithPath(path + "\u002fL\u0073\u0074\u0053\u0074\u0079\u006ce"); _agbef != nil {
			return _agbef
		}
	}
	for _eefgb, _gcfec := range _ebbac.P {
		if _geeg := _gcfec.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0050\u005b\u0025\u0064\u005d", path, _eefgb)); _geeg != nil {
			return _geeg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlShape and its children, prefixing error messages with path
func (_eccg *CT_GvmlShape) ValidateWithPath(path string) error {
	if _gacd := _eccg.NvSpPr.ValidateWithPath(path + "\u002fN\u0076\u0053\u0070\u0050\u0072"); _gacd != nil {
		return _gacd
	}
	if _edfc := _eccg.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _edfc != nil {
		return _edfc
	}
	if _eccg.TxSp != nil {
		if _fdbda := _eccg.TxSp.ValidateWithPath(path + "\u002f\u0054\u0078S\u0070"); _fdbda != nil {
			return _fdbda
		}
	}
	if _eccg.Style != nil {
		if _gbbca := _eccg.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _gbbca != nil {
			return _gbbca
		}
	}
	if _eccg.ExtLst != nil {
		if _cgbbg := _eccg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cgbbg != nil {
			return _cgbbg
		}
	}
	return nil
}

// ST_Coordinate is a union type
type ST_Coordinate struct {
	ST_CoordinateUnqualified *int64
	ST_UniversalMeasure      *string
}

func NewCT_LineStyleList() *CT_LineStyleList { _fedfe := &CT_LineStyleList{}; return _fedfe }

// Validate validates the CT_Table and its children
func (_bbfgc *CT_Table) Validate() error {
	return _bbfgc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065")
}

func (_fgcbge *EG_ColorChoice) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_afbeg:
	for {
		_cadeg, _acad := d.Token()
		if _acad != nil {
			return _acad
		}
		switch _efcgg := _cadeg.(type) {
		case _g.StartElement:
			switch _efcgg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_fgcbge.ScrgbClr = NewCT_ScRgbColor()
				if _abbea := d.DecodeElement(_fgcbge.ScrgbClr, &_efcgg); _abbea != nil {
					return _abbea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_fgcbge.SrgbClr = NewCT_SRgbColor()
				if _egdgb := d.DecodeElement(_fgcbge.SrgbClr, &_efcgg); _egdgb != nil {
					return _egdgb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_fgcbge.HslClr = NewCT_HslColor()
				if _abcfd := d.DecodeElement(_fgcbge.HslClr, &_efcgg); _abcfd != nil {
					return _abcfd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_fgcbge.SysClr = NewCT_SystemColor()
				if _dcbad := d.DecodeElement(_fgcbge.SysClr, &_efcgg); _dcbad != nil {
					return _dcbad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_fgcbge.SchemeClr = NewCT_SchemeColor()
				if _fadff := d.DecodeElement(_fgcbge.SchemeClr, &_efcgg); _fadff != nil {
					return _fadff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_fgcbge.PrstClr = NewCT_PresetColor()
				if _fefdf := d.DecodeElement(_fgcbge.PrstClr, &_efcgg); _fefdf != nil {
					return _fefdf
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0043\u0068o\u0069c\u0065\u0020\u0025\u0076", _efcgg.Name)
				if _cegdc := d.Skip(); _cegdc != nil {
					return _cegdc
				}
			}
		case _g.EndElement:
			break _afbeg
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_StretchInfoProperties and its children
func (_fagb *CT_StretchInfoProperties) Validate() error {
	return _fagb.ValidateWithPath("\u0043T\u005f\u0053\u0074\u0072\u0065\u0074\u0063\u0068\u0049\u006e\u0066o\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_abcab *CT_NonVisualPictureProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gdcfe := range start.Attr {
		if _gdcfe.Name.Local == "p\u0072e\u0066\u0065\u0072\u0052\u0065\u006c\u0061\u0074i\u0076\u0065\u0052\u0065si\u007a\u0065" {
			_bgda, _ecgdd := _c.ParseBool(_gdcfe.Value)
			if _ecgdd != nil {
				return _ecgdd
			}
			_abcab.PreferRelativeResizeAttr = &_bgda
			continue
		}
	}
_bbage:
	for {
		_ccbb, _dgdg := d.Token()
		if _dgdg != nil {
			return _dgdg
		}
		switch _fcfcg := _ccbb.(type) {
		case _g.StartElement:
			switch _fcfcg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063\u004c\u006f\u0063\u006b\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063\u004c\u006f\u0063\u006b\u0073"}:
				_abcab.PicLocks = NewCT_PictureLocking()
				if _gcda := d.DecodeElement(_abcab.PicLocks, &_fcfcg); _gcda != nil {
					return _gcda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abcab.ExtLst = NewCT_OfficeArtExtensionList()
				if _fcfgg := d.DecodeElement(_abcab.ExtLst, &_fcfcg); _fcfgg != nil {
					return _fcfgg
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0050\u0069\u0063t\u0075\u0072\u0065\u0050\u0072\u006fp\u0065\u0072t\u0069\u0065s\u0020%\u0076", _fcfcg.Name)
				if _ccfg := d.Skip(); _ccfg != nil {
					return _ccfg
				}
			}
		case _g.EndElement:
			break _bbage
		case _g.CharData:
		}
	}
	return nil
}

type EG_EffectProperties struct {
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

func (_caffg ST_PresetCameraType) ValidateWithPath(path string) error {
	switch _caffg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_caffg))
	}
	return nil
}

// ValidateWithPath validates the CT_LineJoinBevel and its children, prefixing error messages with path
func (_dcecg *CT_LineJoinBevel) ValidateWithPath(path string) error { return nil }

func (_ffffc *CT_TableStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073t\u0079\u006c\u0065\u0049\u0064"}, Value: _gf.Sprintf("\u0025\u0076", _ffffc.StyleIdAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073t\u0079\u006c\u0065\u004e\u0061\u006de"}, Value: _gf.Sprintf("\u0025\u0076", _ffffc.StyleNameAttr)})
	e.EncodeToken(start)
	if _ffffc.TblBg != nil {
		_cbfeg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074\u0062\u006c\u0042\u0067"}}
		e.EncodeElement(_ffffc.TblBg, _cbfeg)
	}
	if _ffffc.WholeTbl != nil {
		_bcgf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0077\u0068\u006f\u006c\u0065\u0054\u0062\u006c"}}
		e.EncodeElement(_ffffc.WholeTbl, _bcgf)
	}
	if _ffffc.Band1H != nil {
		_dgga := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0031\u0048"}}
		e.EncodeElement(_ffffc.Band1H, _dgga)
	}
	if _ffffc.Band2H != nil {
		_afea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0032\u0048"}}
		e.EncodeElement(_ffffc.Band2H, _afea)
	}
	if _ffffc.Band1V != nil {
		_gggdc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0031\u0056"}}
		e.EncodeElement(_ffffc.Band1V, _gggdc)
	}
	if _ffffc.Band2V != nil {
		_bdaec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0032\u0056"}}
		e.EncodeElement(_ffffc.Band2V, _bdaec)
	}
	if _ffffc.LastCol != nil {
		_abcd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0061\u0073\u0074\u0043\u006fl"}}
		e.EncodeElement(_ffffc.LastCol, _abcd)
	}
	if _ffffc.FirstCol != nil {
		_afcbf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}}
		e.EncodeElement(_ffffc.FirstCol, _afcbf)
	}
	if _ffffc.LastRow != nil {
		_ddefbg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0061\u0073\u0074\u0052\u006fw"}}
		e.EncodeElement(_ffffc.LastRow, _ddefbg)
	}
	if _ffffc.SeCell != nil {
		_cefba := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0065\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_ffffc.SeCell, _cefba)
	}
	if _ffffc.SwCell != nil {
		_faagd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0077\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_ffffc.SwCell, _faagd)
	}
	if _ffffc.FirstRow != nil {
		_bbccc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}}
		e.EncodeElement(_ffffc.FirstRow, _bbccc)
	}
	if _ffffc.NeCell != nil {
		_afffd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u0065\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_ffffc.NeCell, _afffd)
	}
	if _ffffc.NwCell != nil {
		_edfa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u0077\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_ffffc.NwCell, _edfa)
	}
	if _ffffc.ExtLst != nil {
		_gabebe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ffffc.ExtLst, _gabebe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_RelativeRect() *CT_RelativeRect { _dbcbd := &CT_RelativeRect{}; return _dbcbd }

// ValidateWithPath validates the CT_LineJoinMiterProperties and its children, prefixing error messages with path
func (_ddddd *CT_LineJoinMiterProperties) ValidateWithPath(path string) error {
	if _ddddd.LimAttr != nil {
		if _beggd := _ddddd.LimAttr.ValidateWithPath(path + "\u002f\u004c\u0069\u006d\u0041\u0074\u0074\u0072"); _beggd != nil {
			return _beggd
		}
	}
	return nil
}

type CT_TextField struct {
	IdAttr   string
	TypeAttr *string
	RPr      *CT_TextCharacterProperties
	PPr      *CT_TextParagraphProperties
	T        *string
}

type CT_RelativeOffsetEffect struct {
	TxAttr *ST_Percentage
	TyAttr *ST_Percentage
}

func (_edfde ST_TileFlipMode) Validate() error { return _edfde.ValidateWithPath("") }

// Validate validates the CT_FillProperties and its children
func (_abged *CT_FillProperties) Validate() error {
	return _abged.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

func NewCT_GroupFillProperties() *CT_GroupFillProperties {
	_agbda := &CT_GroupFillProperties{}
	return _agbda
}

type CT_XYAdjustHandle struct {
	GdRefXAttr *string
	MinXAttr   *ST_AdjCoordinate
	MaxXAttr   *ST_AdjCoordinate
	GdRefYAttr *string
	MinYAttr   *ST_AdjCoordinate
	MaxYAttr   *ST_AdjCoordinate
	Pos        *CT_AdjPoint2D
}

// ValidateWithPath validates the CT_TextParagraph and its children, prefixing error messages with path
func (_decba *CT_TextParagraph) ValidateWithPath(path string) error {
	if _decba.PPr != nil {
		if _agaec := _decba.PPr.ValidateWithPath(path + "\u002f\u0050\u0050\u0072"); _agaec != nil {
			return _agaec
		}
	}
	for _edbde, _cfdeg := range _decba.EG_TextRun {
		if _cdfc := _cfdeg.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0052\u0075n\u005b\u0025\u0064\u005d", path, _edbde)); _cdfc != nil {
			return _cdfc
		}
	}
	if _decba.EndParaRPr != nil {
		if _ddefd := _decba.EndParaRPr.ValidateWithPath(path + "/\u0045\u006e\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"); _ddefd != nil {
			return _ddefd
		}
	}
	return nil
}

func (_aceebe ST_TextShapeType) String() string {
	switch _aceebe {
	case 0:
		return ""
	case 1:
		return "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065"
	case 2:
		return "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n"
	case 3:
		return "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070"
	case 4:
		return "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 5:
		return "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064"
	case 6:
		return "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e"
	case 7:
		return "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064"
	case 8:
		return "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065"
	case 9:
		return "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065"
	case 10:
		return "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070"
	case 11:
		return "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e"
	case 12:
		return "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065"
	case 13:
		return "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e"
	case 14:
		return "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072"
	case 15:
		return "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072"
	case 16:
		return "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072"
	case 17:
		return "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072"
	case 18:
		return "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070"
	case 19:
		return "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e"
	case 20:
		return "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p"
	case 21:
		return "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e"
	case 22:
		return "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651"
	case 23:
		return "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652"
	case 24:
		return "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031"
	case 25:
		return "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654"
	case 26:
		return "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065"
	case 27:
		return "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065"
	case 28:
		return "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case 29:
		return "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case 30:
		return "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case 31:
		return "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case 32:
		return "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065"
	case 33:
		return "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e"
	case 34:
		return "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074"
	case 35:
		return "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074"
	case 36:
		return "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070"
	case 37:
		return "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	case 38:
		return "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070"
	case 39:
		return "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e"
	case 40:
		return "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070"
	case 41:
		return "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	}
	return ""
}

// ValidateWithPath validates the CT_BlipFillProperties and its children, prefixing error messages with path
func (_ccbc *CT_BlipFillProperties) ValidateWithPath(path string) error {
	if _ccbc.Blip != nil {
		if _bage := _ccbc.Blip.ValidateWithPath(path + "\u002f\u0042\u006ci\u0070"); _bage != nil {
			return _bage
		}
	}
	if _ccbc.SrcRect != nil {
		if _agec := _ccbc.SrcRect.ValidateWithPath(path + "\u002f\u0053\u0072\u0063\u0052\u0065\u0063\u0074"); _agec != nil {
			return _agec
		}
	}
	if _ccbc.Tile != nil {
		if _cfeg := _ccbc.Tile.ValidateWithPath(path + "\u002f\u0054\u0069l\u0065"); _cfeg != nil {
			return _cfeg
		}
	}
	if _ccbc.Stretch != nil {
		if _faec := _ccbc.Stretch.ValidateWithPath(path + "\u002f\u0053\u0074\u0072\u0065\u0074\u0063\u0068"); _faec != nil {
			return _faec
		}
	}
	return nil
}

func (_fccd *CT_FontCollection) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fccd.Latin = NewCT_TextFont()
	_fccd.Ea = NewCT_TextFont()
	_fccd.Cs = NewCT_TextFont()
_abdb:
	for {
		_egdd, _bfed := d.Token()
		if _bfed != nil {
			return _bfed
		}
		switch _daaeg := _egdd.(type) {
		case _g.StartElement:
			switch _daaeg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}:
				if _gdebe := d.DecodeElement(_fccd.Latin, &_daaeg); _gdebe != nil {
					return _gdebe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}:
				if _fbcfd := d.DecodeElement(_fccd.Ea, &_daaeg); _fbcfd != nil {
					return _fbcfd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}:
				if _aacc := d.DecodeElement(_fccd.Cs, &_daaeg); _aacc != nil {
					return _aacc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_abab := NewCT_SupplementalFont()
				if _feaf := d.DecodeElement(_abab, &_daaeg); _feaf != nil {
					return _feaf
				}
				_fccd.Font = append(_fccd.Font, _abab)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fccd.ExtLst = NewCT_OfficeArtExtensionList()
				if _cbd := d.DecodeElement(_fccd.ExtLst, &_daaeg); _cbd != nil {
					return _cbd
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _daaeg.Name)
				if _gcacc := d.Skip(); _gcacc != nil {
					return _gcacc
				}
			}
		case _g.EndElement:
			break _abdb
		case _g.CharData:
		}
	}
	return nil
}

func (_edde *CT_BaseStylesOverride) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fbbc:
	for {
		_bdcf, _gfab := d.Token()
		if _gfab != nil {
			return _gfab
		}
		switch _abga := _bdcf.(type) {
		case _g.StartElement:
			switch _abga.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				_edde.ClrScheme = NewCT_ColorScheme()
				if _eea := d.DecodeElement(_edde.ClrScheme, &_abga); _eea != nil {
					return _eea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}:
				_edde.FontScheme = NewCT_FontScheme()
				if _gbac := d.DecodeElement(_edde.FontScheme, &_abga); _gbac != nil {
					return _gbac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}:
				_edde.FmtScheme = NewCT_StyleMatrix()
				if _dgg := d.DecodeElement(_edde.FmtScheme, &_abga); _dgg != nil {
					return _dgg
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0042\u0061\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0020\u0025\u0076", _abga.Name)
				if _degb := d.Skip(); _degb != nil {
					return _degb
				}
			}
		case _g.EndElement:
			break _fbbc
		case _g.CharData:
		}
	}
	return nil
}

func (_deecf *CT_Table) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _deecf.TblPr != nil {
		_gggf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074\u0062\u006c\u0050\u0072"}}
		e.EncodeElement(_deecf.TblPr, _gggf)
	}
	_bcbda := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074\u0062\u006c\u0047\u0072\u0069d"}}
	e.EncodeElement(_deecf.TblGrid, _bcbda)
	if _deecf.Tr != nil {
		_baedf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0072"}}
		for _, _ceag := range _deecf.Tr {
			e.EncodeElement(_ceag, _baedf)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_AnimationGraphicalObjectBuildProperties and its children, prefixing error messages with path
func (_gbd *CT_AnimationGraphicalObjectBuildProperties) ValidateWithPath(path string) error {
	if _gbd.BldDgm != nil {
		if _gcd := _gbd.BldDgm.ValidateWithPath(path + "\u002fB\u006c\u0064\u0044\u0067\u006d"); _gcd != nil {
			return _gcd
		}
	}
	if _gbd.BldChart != nil {
		if _dcfe := _gbd.BldChart.ValidateWithPath(path + "\u002fB\u006c\u0064\u0043\u0068\u0061\u0072t"); _dcfe != nil {
			return _dcfe
		}
	}
	return nil
}

func NewVideoFile() *VideoFile {
	_dddecb := &VideoFile{}
	_dddecb.CT_VideoFile = *NewCT_VideoFile()
	return _dddecb
}

func (_dcccce ST_AnimationDgmBuildType) String() string {
	if _dcccce.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		return _dcccce.ST_AnimationBuildType.String()
	}
	if _dcccce.ST_AnimationDgmOnlyBuildType != ST_AnimationDgmOnlyBuildTypeUnset {
		return _dcccce.ST_AnimationDgmOnlyBuildType.String()
	}
	return ""
}

const (
	ST_ColorSchemeIndexUnset    ST_ColorSchemeIndex = 0
	ST_ColorSchemeIndexDk1      ST_ColorSchemeIndex = 1
	ST_ColorSchemeIndexLt1      ST_ColorSchemeIndex = 2
	ST_ColorSchemeIndexDk2      ST_ColorSchemeIndex = 3
	ST_ColorSchemeIndexLt2      ST_ColorSchemeIndex = 4
	ST_ColorSchemeIndexAccent1  ST_ColorSchemeIndex = 5
	ST_ColorSchemeIndexAccent2  ST_ColorSchemeIndex = 6
	ST_ColorSchemeIndexAccent3  ST_ColorSchemeIndex = 7
	ST_ColorSchemeIndexAccent4  ST_ColorSchemeIndex = 8
	ST_ColorSchemeIndexAccent5  ST_ColorSchemeIndex = 9
	ST_ColorSchemeIndexAccent6  ST_ColorSchemeIndex = 10
	ST_ColorSchemeIndexHlink    ST_ColorSchemeIndex = 11
	ST_ColorSchemeIndexFolHlink ST_ColorSchemeIndex = 12
)

// Validate validates the CT_Camera and its children
func (_ecbb *CT_Camera) Validate() error {
	return _ecbb.ValidateWithPath("\u0043T\u005f\u0043\u0061\u006d\u0065\u0072a")
}

func (_eeec *CT_AnimationGraphicalObjectBuildProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _eeec.BldDgm != nil {
		_dfbf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0064\u0044\u0067\u006d"}}
		e.EncodeElement(_eeec.BldDgm, _dfbf)
	}
	if _eeec.BldChart != nil {
		_ecfa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0064\u0043\u0068\u0061\u0072\u0074"}}
		e.EncodeElement(_eeec.BldChart, _ecfa)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_afdb *CT_BlipFillProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bggd := range start.Attr {
		if _bggd.Name.Local == "\u0064\u0070\u0069" {
			_cecae, _ggdf := _c.ParseUint(_bggd.Value, 10, 32)
			if _ggdf != nil {
				return _ggdf
			}
			_gdcgc := uint32(_cecae)
			_afdb.DpiAttr = &_gdcgc
			continue
		}
		if _bggd.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_bfdb, _cbcbb := _c.ParseBool(_bggd.Value)
			if _cbcbb != nil {
				return _cbcbb
			}
			_afdb.RotWithShapeAttr = &_bfdb
			continue
		}
	}
_abaa:
	for {
		_gbg, _bec := d.Token()
		if _bec != nil {
			return _bec
		}
		switch _fggd := _gbg.(type) {
		case _g.StartElement:
			switch _fggd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}:
				_afdb.Blip = NewCT_Blip()
				if _geaeg := d.DecodeElement(_afdb.Blip, &_fggd); _geaeg != nil {
					return _geaeg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0063\u0052\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0063\u0052\u0065\u0063\u0074"}:
				_afdb.SrcRect = NewCT_RelativeRect()
				if _fgab := d.DecodeElement(_afdb.SrcRect, &_fggd); _fgab != nil {
					return _fgab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}:
				_afdb.Tile = NewCT_TileInfoProperties()
				if _cbge := d.DecodeElement(_afdb.Tile, &_fggd); _cbge != nil {
					return _cbge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}:
				_afdb.Stretch = NewCT_StretchInfoProperties()
				if _cbfa := d.DecodeElement(_afdb.Stretch, &_fggd); _cbfa != nil {
					return _cbfa
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0042\u006c\u0069\u0070\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _fggd.Name)
				if _adfd := d.Skip(); _adfd != nil {
					return _adfd
				}
			}
		case _g.EndElement:
			break _abaa
		case _g.CharData:
		}
	}
	return nil
}

func (_bdgbg *CT_Path2DList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ccdbf:
	for {
		_bcecg, _caggg := d.Token()
		if _caggg != nil {
			return _caggg
		}
		switch _cfed := _bcecg.(type) {
		case _g.StartElement:
			switch _cfed.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}:
				_eabcg := NewCT_Path2D()
				if _cggee := d.DecodeElement(_eabcg, &_cfed); _cggee != nil {
					return _cggee
				}
				_bdgbg.Path = append(_bdgbg.Path, _eabcg)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050a\u0074\u0068\u0032\u0044\u004c\u0069\u0073\u0074 \u0025\u0076", _cfed.Name)
				if _fcaae := d.Skip(); _fcaae != nil {
					return _fcaae
				}
			}
		case _g.EndElement:
			break _ccdbf
		case _g.CharData:
		}
	}
	return nil
}

type CT_FontReference struct {
	IdxAttr   ST_FontCollectionIndex
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

type CT_GraphicalObjectFrameLocking struct {
	NoGrpAttr          *bool
	NoDrilldownAttr    *bool
	NoSelectAttr       *bool
	NoChangeAspectAttr *bool
	NoMoveAttr         *bool
	NoResizeAttr       *bool
	ExtLst             *CT_OfficeArtExtensionList
}

// Validate validates the CT_DuotoneEffect and its children
func (_gcge *CT_DuotoneEffect) Validate() error {
	return _gcge.ValidateWithPath("\u0043\u0054_\u0044\u0075\u006ft\u006f\u006e\u0065\u0045\u0066\u0066\u0065\u0063\u0074")
}

// Validate validates the CT_AnimationChartBuildProperties and its children
func (_cga *CT_AnimationChartBuildProperties) Validate() error {
	return _cga.ValidateWithPath("\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043\u0068\u0061r\u0074B\u0075\u0069\u006c\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func NewEG_ShadeProperties() *EG_ShadeProperties { _dbbeb := &EG_ShadeProperties{}; return _dbbeb }

func (_ebccd *CT_SolidColorFillProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_eafgb:
	for {
		_edcfgc, _cffa := d.Token()
		if _cffa != nil {
			return _cffa
		}
		switch _aacgg := _edcfgc.(type) {
		case _g.StartElement:
			switch _aacgg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_ebccd.ScrgbClr = NewCT_ScRgbColor()
				if _dcgcb := d.DecodeElement(_ebccd.ScrgbClr, &_aacgg); _dcgcb != nil {
					return _dcgcb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_ebccd.SrgbClr = NewCT_SRgbColor()
				if _cdcf := d.DecodeElement(_ebccd.SrgbClr, &_aacgg); _cdcf != nil {
					return _cdcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_ebccd.HslClr = NewCT_HslColor()
				if _bcfb := d.DecodeElement(_ebccd.HslClr, &_aacgg); _bcfb != nil {
					return _bcfb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_ebccd.SysClr = NewCT_SystemColor()
				if _gegb := d.DecodeElement(_ebccd.SysClr, &_aacgg); _gegb != nil {
					return _gegb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_ebccd.SchemeClr = NewCT_SchemeColor()
				if _bdadc := d.DecodeElement(_ebccd.SchemeClr, &_aacgg); _bdadc != nil {
					return _bdadc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_ebccd.PrstClr = NewCT_PresetColor()
				if _ebgdc := d.DecodeElement(_ebccd.PrstClr, &_aacgg); _ebgdc != nil {
					return _ebgdc
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0053\u006f\u006c\u0069\u0064\u0043\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _aacgg.Name)
				if _dfgge := d.Skip(); _dfgge != nil {
					return _dfgge
				}
			}
		case _g.EndElement:
			break _eafgb
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_VideoFile and its children, prefixing error messages with path
func (_acbad *CT_VideoFile) ValidateWithPath(path string) error {
	if _acbad.ExtLst != nil {
		if _bfgga := _acbad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfgga != nil {
			return _bfgga
		}
	}
	return nil
}

func (_effbfg ST_PresetShadowVal) Validate() error { return _effbfg.ValidateWithPath("") }

func (_afgbf ST_LineEndLength) Validate() error { return _afgbf.ValidateWithPath("") }

// Validate validates the CT_ShapeStyle and its children
func (_eeage *CT_ShapeStyle) Validate() error {
	return _eeage.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0053\u0074\u0079\u006c\u0065")
}

// Validate validates the CT_AdjPoint2D and its children
func (_dce *CT_AdjPoint2D) Validate() error {
	return _dce.ValidateWithPath("\u0043\u0054\u005f\u0041\u0064\u006a\u0050\u006f\u0069\u006e\u0074\u0032\u0044")
}

const (
	ST_LineEndTypeUnset    ST_LineEndType = 0
	ST_LineEndTypeNone     ST_LineEndType = 1
	ST_LineEndTypeTriangle ST_LineEndType = 2
	ST_LineEndTypeStealth  ST_LineEndType = 3
	ST_LineEndTypeDiamond  ST_LineEndType = 4
	ST_LineEndTypeOval     ST_LineEndType = 5
	ST_LineEndTypeArrow    ST_LineEndType = 6
)

// Validate validates the CT_SystemColor and its children
func (_cbec *CT_SystemColor) Validate() error {
	return _cbec.ValidateWithPath("\u0043\u0054\u005f\u0053\u0079\u0073\u0074\u0065\u006dC\u006f\u006c\u006f\u0072")
}

// ValidateWithPath validates the CT_Cell3D and its children, prefixing error messages with path
func (_eaea *CT_Cell3D) ValidateWithPath(path string) error {
	if _ccgc := _eaea.PrstMaterialAttr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u004d\u0061\u0074\u0065\u0072\u0069\u0061l\u0041\u0074\u0074\u0072"); _ccgc != nil {
		return _ccgc
	}
	if _gdfa := _eaea.Bevel.ValidateWithPath(path + "\u002f\u0042\u0065\u0076\u0065\u006c"); _gdfa != nil {
		return _gdfa
	}
	if _eaea.LightRig != nil {
		if _gbca := _eaea.LightRig.ValidateWithPath(path + "\u002fL\u0069\u0067\u0068\u0074\u0052\u0069g"); _gbca != nil {
			return _gbca
		}
	}
	if _eaea.ExtLst != nil {
		if _ecgcf := _eaea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ecgcf != nil {
			return _ecgcf
		}
	}
	return nil
}

func (_dfegg ST_EffectContainerType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_gcbbf := _g.Attr{}
	_gcbbf.Name = name
	switch _dfegg {
	case ST_EffectContainerTypeUnset:
		_gcbbf.Value = ""
	case ST_EffectContainerTypeSib:
		_gcbbf.Value = "\u0073\u0069\u0062"
	case ST_EffectContainerTypeTree:
		_gcbbf.Value = "\u0074\u0072\u0065\u0065"
	}
	return _gcbbf, nil
}

func (_ecdg *CT_PresetLineDashProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bfcda := range start.Attr {
		if _bfcda.Name.Local == "\u0076\u0061\u006c" {
			_ecdg.ValAttr.UnmarshalXMLAttr(_bfcda)
			continue
		}
	}
	for {
		_ebfde, _dcdfa := d.Token()
		if _dcdfa != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0072e\u0073\u0065\u0074\u004c\u0069\u006ee\u0044\u0061\u0073\u0068\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065s\u003a\u0020\u0025\u0073", _dcdfa)
		}
		if _aagbb, _afbdb := _ebfde.(_g.EndElement); _afbdb && _aagbb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gdfcd *CT_ReflectionEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gdfcd.BlurRadAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062l\u0075\u0072\u0052\u0061\u0064"}, Value: _gf.Sprintf("\u0025\u0076", *_gdfcd.BlurRadAttr)})
	}
	if _gdfcd.StAAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0074\u0041"}, Value: _gf.Sprintf("\u0025\u0076", *_gdfcd.StAAttr)})
	}
	if _gdfcd.StPosAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0074\u0050o\u0073"}, Value: _gf.Sprintf("\u0025\u0076", *_gdfcd.StPosAttr)})
	}
	if _gdfcd.EndAAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0065\u006e\u0064\u0041"}, Value: _gf.Sprintf("\u0025\u0076", *_gdfcd.EndAAttr)})
	}
	if _gdfcd.EndPosAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0065\u006e\u0064\u0050\u006f\u0073"}, Value: _gf.Sprintf("\u0025\u0076", *_gdfcd.EndPosAttr)})
	}
	if _gdfcd.DistAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _gf.Sprintf("\u0025\u0076", *_gdfcd.DistAttr)})
	}
	if _gdfcd.DirAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0072"}, Value: _gf.Sprintf("\u0025\u0076", *_gdfcd.DirAttr)})
	}
	if _gdfcd.FadeDirAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066a\u0064\u0065\u0044\u0069\u0072"}, Value: _gf.Sprintf("\u0025\u0076", *_gdfcd.FadeDirAttr)})
	}
	if _gdfcd.SxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0078"}, Value: _gf.Sprintf("\u0025\u0076", *_gdfcd.SxAttr)})
	}
	if _gdfcd.SyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0079"}, Value: _gf.Sprintf("\u0025\u0076", *_gdfcd.SyAttr)})
	}
	if _gdfcd.KxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006b\u0078"}, Value: _gf.Sprintf("\u0025\u0076", *_gdfcd.KxAttr)})
	}
	if _gdfcd.KyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006b\u0079"}, Value: _gf.Sprintf("\u0025\u0076", *_gdfcd.KyAttr)})
	}
	if _gdfcd.AlgnAttr != ST_RectAlignmentUnset {
		_fbcbf, _agbc := _gdfcd.AlgnAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _agbc != nil {
			return _agbc
		}
		start.Attr = append(start.Attr, _fbcbf)
	}
	if _gdfcd.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gdfcd.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_ConnectorLocking() *CT_ConnectorLocking { _gead := &CT_ConnectorLocking{}; return _gead }

func (_dafbe ST_TextShapeType) ValidateWithPath(path string) error {
	switch _dafbe {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dafbe))
	}
	return nil
}

func (_bffee *CT_GroupLocking) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cecbg := range start.Attr {
		if _cecbg.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_fcfg, _ebad := _c.ParseBool(_cecbg.Value)
			if _ebad != nil {
				return _ebad
			}
			_bffee.NoGrpAttr = &_fcfg
			continue
		}
		if _cecbg.Name.Local == "\u006eo\u0055\u006e\u0067\u0072\u0070" {
			_gdfgc, _defef := _c.ParseBool(_cecbg.Value)
			if _defef != nil {
				return _defef
			}
			_bffee.NoUngrpAttr = &_gdfgc
			continue
		}
		if _cecbg.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_cbbd, _degdf := _c.ParseBool(_cecbg.Value)
			if _degdf != nil {
				return _degdf
			}
			_bffee.NoSelectAttr = &_cbbd
			continue
		}
		if _cecbg.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_gagb, _eede := _c.ParseBool(_cecbg.Value)
			if _eede != nil {
				return _eede
			}
			_bffee.NoRotAttr = &_gagb
			continue
		}
		if _cecbg.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_dfcg, _bbad := _c.ParseBool(_cecbg.Value)
			if _bbad != nil {
				return _bbad
			}
			_bffee.NoChangeAspectAttr = &_dfcg
			continue
		}
		if _cecbg.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_gdgfc, _adabg := _c.ParseBool(_cecbg.Value)
			if _adabg != nil {
				return _adabg
			}
			_bffee.NoMoveAttr = &_gdgfc
			continue
		}
		if _cecbg.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_eccdg, _agcff := _c.ParseBool(_cecbg.Value)
			if _agcff != nil {
				return _agcff
			}
			_bffee.NoResizeAttr = &_eccdg
			continue
		}
	}
_cbba:
	for {
		_agded, _befc := d.Token()
		if _befc != nil {
			return _befc
		}
		switch _eaggb := _agded.(type) {
		case _g.StartElement:
			switch _eaggb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bffee.ExtLst = NewCT_OfficeArtExtensionList()
				if _baad := d.DecodeElement(_bffee.ExtLst, &_eaggb); _baad != nil {
					return _baad
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006fu\u0070\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _eaggb.Name)
				if _cfde := d.Skip(); _cfde != nil {
					return _cfde
				}
			}
		case _g.EndElement:
			break _cbba
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_TextCharBullet() *CT_TextCharBullet { _cbbfg := &CT_TextCharBullet{}; return _cbbfg }

// Validate validates the CT_GraphicalObjectFrameLocking and its children
func (_dcabg *CT_GraphicalObjectFrameLocking) Validate() error {
	return _dcabg.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063a\u006c\u004f\u0062\u006a\u0065\u0063\u0074F\u0072\u0061\u006d\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}

func (_geadcg *TblStyleLst) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"
	return _geadcg.CT_TableStyleList.MarshalXML(e, start)
}

type CT_NonVisualGraphicFrameProperties struct {
	GraphicFrameLocks *CT_GraphicalObjectFrameLocking
	ExtLst            *CT_OfficeArtExtensionList
}

func (_efafe *CT_TableBackgroundStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_acag:
	for {
		_gfbgec, _cbbac := d.Token()
		if _cbbac != nil {
			return _cbbac
		}
		switch _dacb := _gfbgec.(type) {
		case _g.StartElement:
			switch _dacb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_efafe.Fill = NewCT_FillProperties()
				if _egbgc := d.DecodeElement(_efafe.Fill, &_dacb); _egbgc != nil {
					return _egbgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				_efafe.FillRef = NewCT_StyleMatrixReference()
				if _bdgfd := d.DecodeElement(_efafe.FillRef, &_dacb); _bdgfd != nil {
					return _bdgfd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_efafe.Effect = NewCT_EffectProperties()
				if _geadc := d.DecodeElement(_efafe.Effect, &_dacb); _geadc != nil {
					return _geadc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}:
				_efafe.EffectRef = NewCT_StyleMatrixReference()
				if _ggddfe := d.DecodeElement(_efafe.EffectRef, &_dacb); _ggddfe != nil {
					return _ggddfe
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0042\u0061\u0063\u006bg\u0072\u006f\u0075\u006e\u0064\u0053t\u0079\u006c\u0065 \u0025\u0076", _dacb.Name)
				if _ggae := d.Skip(); _ggae != nil {
					return _ggae
				}
			}
		case _g.EndElement:
			break _acag
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_TableRow() *CT_TableRow { _eafcg := &CT_TableRow{}; return _eafcg }

// ValidateWithPath validates the CT_Vector3D and its children, prefixing error messages with path
func (_fccfc *CT_Vector3D) ValidateWithPath(path string) error {
	if _dbafb := _fccfc.DxAttr.ValidateWithPath(path + "\u002fD\u0078\u0041\u0074\u0074\u0072"); _dbafb != nil {
		return _dbafb
	}
	if _abfade := _fccfc.DyAttr.ValidateWithPath(path + "\u002fD\u0079\u0041\u0074\u0074\u0072"); _abfade != nil {
		return _abfade
	}
	if _cccee := _fccfc.DzAttr.ValidateWithPath(path + "\u002fD\u007a\u0041\u0074\u0074\u0072"); _cccee != nil {
		return _cccee
	}
	return nil
}

func (_cefb *CT_BlurEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cefb.RadAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0061\u0064"}, Value: _gf.Sprintf("\u0025\u0076", *_cefb.RadAttr)})
	}
	if _cefb.GrowAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067\u0072\u006f\u0077"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_cefb.GrowAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TableStyleTextStyle and its children
func (_fegbg *CT_TableStyleTextStyle) Validate() error {
	return _fegbg.ValidateWithPath("\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0054\u0065\u0078\u0074\u0053\u0074\u0079l\u0065")
}

func (_bffdd *ST_AnimationDgmBuildType) ValidateWithPath(path string) error {
	_effega := []string{}
	if _bffdd.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		_effega = append(_effega, "S\u0054\u005f\u0041\u006eim\u0061t\u0069\u006f\u006e\u0042\u0075i\u006c\u0064\u0054\u0079\u0070\u0065")
	}
	if _bffdd.ST_AnimationDgmOnlyBuildType != ST_AnimationDgmOnlyBuildTypeUnset {
		_effega = append(_effega, "\u0053\u0054\u005f\u0041n\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006dO\u006el\u0079\u0042\u0075\u0069\u006c\u0064\u0054y\u0070\u0065")
	}
	if len(_effega) > 1 {
		return _gf.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _effega)
	}
	return nil
}

func (_eaae *CT_FillProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _eaae.NoFill != nil {
		_ebcf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eaae.NoFill, _ebcf)
	}
	if _eaae.SolidFill != nil {
		_edgd := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eaae.SolidFill, _edgd)
	}
	if _eaae.GradFill != nil {
		_edbdb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eaae.GradFill, _edbdb)
	}
	if _eaae.BlipFill != nil {
		_eecfc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eaae.BlipFill, _eecfc)
	}
	if _eaae.PattFill != nil {
		_adfb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eaae.PattFill, _adfb)
	}
	if _eaae.GrpFill != nil {
		_fgcgb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_eaae.GrpFill, _fgcgb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cefad *CT_InnerShadowEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _beacc := range start.Attr {
		if _beacc.Name.Local == "\u0062l\u0075\u0072\u0052\u0061\u0064" {
			_agcb, _fdead := _c.ParseInt(_beacc.Value, 10, 64)
			if _fdead != nil {
				return _fdead
			}
			_cefad.BlurRadAttr = &_agcb
			continue
		}
		if _beacc.Name.Local == "\u0064\u0069\u0073\u0074" {
			_edcg, _agfe := _c.ParseInt(_beacc.Value, 10, 64)
			if _agfe != nil {
				return _agfe
			}
			_cefad.DistAttr = &_edcg
			continue
		}
		if _beacc.Name.Local == "\u0064\u0069\u0072" {
			_ebgc, _aeffc := _c.ParseInt(_beacc.Value, 10, 32)
			if _aeffc != nil {
				return _aeffc
			}
			_aeceb := int32(_ebgc)
			_cefad.DirAttr = &_aeceb
			continue
		}
	}
_fgbc:
	for {
		_agcab, _dcaa := d.Token()
		if _dcaa != nil {
			return _dcaa
		}
		switch _eface := _agcab.(type) {
		case _g.StartElement:
			switch _eface.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_cefad.ScrgbClr = NewCT_ScRgbColor()
				if _aaecac := d.DecodeElement(_cefad.ScrgbClr, &_eface); _aaecac != nil {
					return _aaecac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_cefad.SrgbClr = NewCT_SRgbColor()
				if _gbfg := d.DecodeElement(_cefad.SrgbClr, &_eface); _gbfg != nil {
					return _gbfg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_cefad.HslClr = NewCT_HslColor()
				if _febb := d.DecodeElement(_cefad.HslClr, &_eface); _febb != nil {
					return _febb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_cefad.SysClr = NewCT_SystemColor()
				if _ecfgd := d.DecodeElement(_cefad.SysClr, &_eface); _ecfgd != nil {
					return _ecfgd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_cefad.SchemeClr = NewCT_SchemeColor()
				if _ebbbb := d.DecodeElement(_cefad.SchemeClr, &_eface); _ebbbb != nil {
					return _ebbbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_cefad.PrstClr = NewCT_PresetColor()
				if _bdgg := d.DecodeElement(_cefad.PrstClr, &_eface); _bdgg != nil {
					return _bdgg
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0061\u0064\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _eface.Name)
				if _gcgf := d.Skip(); _gcgf != nil {
					return _gcgf
				}
			}
		case _g.EndElement:
			break _fgbc
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextBulletSizeFollowText and its children, prefixing error messages with path
func (_ffgac *CT_TextBulletSizeFollowText) ValidateWithPath(path string) error { return nil }

func (_dggcd *CT_EffectList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bggb:
	for {
		_cccd, _eggfg := d.Token()
		if _eggfg != nil {
			return _eggfg
		}
		switch _bee := _cccd.(type) {
		case _g.StartElement:
			switch _bee.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_dggcd.Blur = NewCT_BlurEffect()
				if _geec := d.DecodeElement(_dggcd.Blur, &_bee); _geec != nil {
					return _geec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_dggcd.FillOverlay = NewCT_FillOverlayEffect()
				if _cbcbg := d.DecodeElement(_dggcd.FillOverlay, &_bee); _cbcbg != nil {
					return _cbcbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}:
				_dggcd.Glow = NewCT_GlowEffect()
				if _dccae := d.DecodeElement(_dggcd.Glow, &_bee); _dccae != nil {
					return _dccae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}:
				_dggcd.InnerShdw = NewCT_InnerShadowEffect()
				if _ccagc := d.DecodeElement(_dggcd.InnerShdw, &_bee); _ccagc != nil {
					return _ccagc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}:
				_dggcd.OuterShdw = NewCT_OuterShadowEffect()
				if _abdc := d.DecodeElement(_dggcd.OuterShdw, &_bee); _abdc != nil {
					return _abdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}:
				_dggcd.PrstShdw = NewCT_PresetShadowEffect()
				if _ggbc := d.DecodeElement(_dggcd.PrstShdw, &_bee); _ggbc != nil {
					return _ggbc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_dggcd.Reflection = NewCT_ReflectionEffect()
				if _ebbdb := d.DecodeElement(_dggcd.Reflection, &_bee); _ebbdb != nil {
					return _ebbdb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}:
				_dggcd.SoftEdge = NewCT_SoftEdgesEffect()
				if _ccbce := d.DecodeElement(_dggcd.SoftEdge, &_bee); _ccbce != nil {
					return _ccbce
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045f\u0066\u0065\u0063\u0074\u004c\u0069\u0073\u0074 \u0025\u0076", _bee.Name)
				if _daae := d.Skip(); _daae != nil {
					return _daae
				}
			}
		case _g.EndElement:
			break _bggb
		case _g.CharData:
		}
	}
	return nil
}

func (_gcbebc ST_TextTabAlignType) Validate() error { return _gcbebc.ValidateWithPath("") }

// Validate validates the CT_GvmlGraphicalObjectFrame and its children
func (_dcdg *CT_GvmlGraphicalObjectFrame) Validate() error {
	return _dcdg.ValidateWithPath("C\u0054\u005f\u0047\u0076\u006d\u006cG\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004fb\u006a\u0065\u0063t\u0046r\u0061\u006d\u0065")
}

// ValidateWithPath validates the CT_BiLevelEffect and its children, prefixing error messages with path
func (_gbag *CT_BiLevelEffect) ValidateWithPath(path string) error {
	if _fbcda := _gbag.ThreshAttr.ValidateWithPath(path + "/\u0054\u0068\u0072\u0065\u0073\u0068\u0041\u0074\u0074\u0072"); _fbcda != nil {
		return _fbcda
	}
	return nil
}

type CT_FixedPercentage struct{ ValAttr ST_FixedPercentage }

func (_cgfdb *EG_TextUnderlineFill) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cgfdb.UFillTx != nil {
		_daggd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c\u0054x"}}
		e.EncodeElement(_cgfdb.UFillTx, _daggd)
	}
	if _cgfdb.UFill != nil {
		_cfddf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cgfdb.UFill, _cfddf)
	}
	return nil
}

const (
	ST_TextAlignTypeUnset    ST_TextAlignType = 0
	ST_TextAlignTypeL        ST_TextAlignType = 1
	ST_TextAlignTypeCtr      ST_TextAlignType = 2
	ST_TextAlignTypeR        ST_TextAlignType = 3
	ST_TextAlignTypeJust     ST_TextAlignType = 4
	ST_TextAlignTypeJustLow  ST_TextAlignType = 5
	ST_TextAlignTypeDist     ST_TextAlignType = 6
	ST_TextAlignTypeThaiDist ST_TextAlignType = 7
)

func (_gcaad ST_ColorSchemeIndex) ValidateWithPath(path string) error {
	switch _gcaad {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcaad))
	}
	return nil
}

func (_aaedb *ST_LightRigDirection) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_aaedb = 0
	case "\u0074\u006c":
		*_aaedb = 1
	case "\u0074":
		*_aaedb = 2
	case "\u0074\u0072":
		*_aaedb = 3
	case "\u006c":
		*_aaedb = 4
	case "\u0072":
		*_aaedb = 5
	case "\u0062\u006c":
		*_aaedb = 6
	case "\u0062":
		*_aaedb = 7
	case "\u0062\u0072":
		*_aaedb = 8
	}
	return nil
}

func (_aabce *CT_OfficeArtExtension) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075\u0072\u0069"}, Value: _gf.Sprintf("\u0025\u0076", _aabce.UriAttr)})
	e.EncodeToken(start)
	if _aabce.Any != nil {
		for _, _dbcd := range _aabce.Any {
			_dbcd.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_Text3D and its children, prefixing error messages with path
func (_ddggg *EG_Text3D) ValidateWithPath(path string) error {
	if _ddggg.Sp3d != nil {
		if _gbfabg := _ddggg.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _gbfabg != nil {
			return _gbfabg
		}
	}
	if _ddggg.FlatTx != nil {
		if _afdeg := _ddggg.FlatTx.ValidateWithPath(path + "\u002fF\u006c\u0061\u0074\u0054\u0078"); _afdeg != nil {
			return _afdeg
		}
	}
	return nil
}

func (_dgde *CT_ContentPartLocking) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dgde.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dgde.NoGrpAttr))})
	}
	if _dgde.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dgde.NoSelectAttr))})
	}
	if _dgde.NoRotAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dgde.NoRotAttr))})
	}
	if _dgde.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dgde.NoChangeAspectAttr))})
	}
	if _dgde.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dgde.NoMoveAttr))})
	}
	if _dgde.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dgde.NoResizeAttr))})
	}
	if _dgde.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dgde.NoEditPointsAttr))})
	}
	if _dgde.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dgde.NoAdjustHandlesAttr))})
	}
	if _dgde.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dgde.NoChangeArrowheadsAttr))})
	}
	if _dgde.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dgde.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _dgde.ExtLst != nil {
		_daebge := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dgde.ExtLst, _daebge)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextTabStopList and its children, prefixing error messages with path
func (_acdcc *CT_TextTabStopList) ValidateWithPath(path string) error {
	for _febgf, _bfadg := range _acdcc.Tab {
		if _eedfd := _bfadg.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0062\u005b\u0025\u0064\u005d", path, _febgf)); _eedfd != nil {
			return _eedfd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ObjectStyleDefaults and its children, prefixing error messages with path
func (_gbeg *CT_ObjectStyleDefaults) ValidateWithPath(path string) error {
	if _gbeg.SpDef != nil {
		if _cgcec := _gbeg.SpDef.ValidateWithPath(path + "\u002f\u0053\u0070\u0044\u0065\u0066"); _cgcec != nil {
			return _cgcec
		}
	}
	if _gbeg.LnDef != nil {
		if _effba := _gbeg.LnDef.ValidateWithPath(path + "\u002f\u004c\u006e\u0044\u0065\u0066"); _effba != nil {
			return _effba
		}
	}
	if _gbeg.TxDef != nil {
		if _deea := _gbeg.TxDef.ValidateWithPath(path + "\u002f\u0054\u0078\u0044\u0065\u0066"); _deea != nil {
			return _deea
		}
	}
	if _gbeg.ExtLst != nil {
		if _degbe := _gbeg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _degbe != nil {
			return _degbe
		}
	}
	return nil
}

func (_aggafa ST_TextUnderlineType) Validate() error { return _aggafa.ValidateWithPath("") }

func (_dagecb *CT_TintEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dgfbc := range start.Attr {
		if _dgfbc.Name.Local == "\u0068\u0075\u0065" {
			_bgbfdf, _eaddb := _c.ParseInt(_dgfbc.Value, 10, 32)
			if _eaddb != nil {
				return _eaddb
			}
			_gaag := int32(_bgbfdf)
			_dagecb.HueAttr = &_gaag
			continue
		}
		if _dgfbc.Name.Local == "\u0061\u006d\u0074" {
			_fcccbe, _bcdae := ParseUnionST_FixedPercentage(_dgfbc.Value)
			if _bcdae != nil {
				return _bcdae
			}
			_dagecb.AmtAttr = &_fcccbe
			continue
		}
	}
	for {
		_beggag, _ffadcf := d.Token()
		if _ffadcf != nil {
			return _gf.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0054i\u006et\u0045f\u0066\u0065\u0063\u0074\u003a\u0020\u0025s", _ffadcf)
		}
		if _ggadf, _gdcfd := _beggag.(_g.EndElement); _gdcfd && _ggadf.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_FontCollection struct {
	Latin  *CT_TextFont
	Ea     *CT_TextFont
	Cs     *CT_TextFont
	Font   []*CT_SupplementalFont
	ExtLst *CT_OfficeArtExtensionList
}

func (_ddccea *CT_NonVisualDrawingShapeProps) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bgddb := range start.Attr {
		if _bgddb.Name.Local == "\u0074\u0078\u0042o\u0078" {
			_bbdgf, _gecb := _c.ParseBool(_bgddb.Value)
			if _gecb != nil {
				return _gecb
			}
			_ddccea.TxBoxAttr = &_bbdgf
			continue
		}
	}
_cbfda:
	for {
		_deffe, _ebbdc := d.Token()
		if _ebbdc != nil {
			return _ebbdc
		}
		switch _bfbde := _deffe.(type) {
		case _g.StartElement:
			switch _bfbde.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u004c\u006f\u0063\u006b\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u004c\u006f\u0063\u006b\u0073"}:
				_ddccea.SpLocks = NewCT_ShapeLocking()
				if _ffgfb := d.DecodeElement(_ddccea.SpLocks, &_bfbde); _ffgfb != nil {
					return _ffgfb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ddccea.ExtLst = NewCT_OfficeArtExtensionList()
				if _abbfc := d.DecodeElement(_ddccea.ExtLst, &_bfbde); _abbfc != nil {
					return _abbfc
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061w\u0069\u006e\u0067\u0053\u0068\u0061p\u0065\u0050r\u006f\u0070s\u0020%\u0076", _bfbde.Name)
				if _ddcca := d.Skip(); _ddcca != nil {
					return _ddcca
				}
			}
		case _g.EndElement:
			break _cbfda
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_AlphaInverseEffect() *CT_AlphaInverseEffect { _dba := &CT_AlphaInverseEffect{}; return _dba }

type ThemeManager struct{ CT_EmptyElement }

func (_dafdg ST_LightRigDirection) String() string {
	switch _dafdg {
	case 0:
		return ""
	case 1:
		return "\u0074\u006c"
	case 2:
		return "\u0074"
	case 3:
		return "\u0074\u0072"
	case 4:
		return "\u006c"
	case 5:
		return "\u0072"
	case 6:
		return "\u0062\u006c"
	case 7:
		return "\u0062"
	case 8:
		return "\u0062\u0072"
	}
	return ""
}

func (_gbgefe ST_PresetLineDashVal) Validate() error { return _gbgefe.ValidateWithPath("") }

func NewCT_RegularTextRun() *CT_RegularTextRun { _fcgeg := &CT_RegularTextRun{}; return _fcgeg }

func NewCT_ContentPartLocking() *CT_ContentPartLocking {
	_bgff := &CT_ContentPartLocking{}
	return _bgff
}

// ValidateWithPath validates the CT_TableCellBorderStyle and its children, prefixing error messages with path
func (_bgagd *CT_TableCellBorderStyle) ValidateWithPath(path string) error {
	if _bgagd.Left != nil {
		if _dcfff := _bgagd.Left.ValidateWithPath(path + "\u002f\u004c\u0065f\u0074"); _dcfff != nil {
			return _dcfff
		}
	}
	if _bgagd.Right != nil {
		if _agggb := _bgagd.Right.ValidateWithPath(path + "\u002f\u0052\u0069\u0067\u0068\u0074"); _agggb != nil {
			return _agggb
		}
	}
	if _bgagd.Top != nil {
		if _gcbc := _bgagd.Top.ValidateWithPath(path + "\u002f\u0054\u006f\u0070"); _gcbc != nil {
			return _gcbc
		}
	}
	if _bgagd.Bottom != nil {
		if _efadf := _bgagd.Bottom.ValidateWithPath(path + "\u002fB\u006f\u0074\u0074\u006f\u006d"); _efadf != nil {
			return _efadf
		}
	}
	if _bgagd.InsideH != nil {
		if _cbabg := _bgagd.InsideH.ValidateWithPath(path + "\u002f\u0049\u006e\u0073\u0069\u0064\u0065\u0048"); _cbabg != nil {
			return _cbabg
		}
	}
	if _bgagd.InsideV != nil {
		if _dfgce := _bgagd.InsideV.ValidateWithPath(path + "\u002f\u0049\u006e\u0073\u0069\u0064\u0065\u0056"); _dfgce != nil {
			return _dfgce
		}
	}
	if _bgagd.Tl2br != nil {
		if _bbbefd := _bgagd.Tl2br.ValidateWithPath(path + "\u002f\u0054\u006c\u0032\u0062\u0072"); _bbbefd != nil {
			return _bbbefd
		}
	}
	if _bgagd.Tr2bl != nil {
		if _deccg := _bgagd.Tr2bl.ValidateWithPath(path + "\u002f\u0054\u0072\u0032\u0062\u006c"); _deccg != nil {
			return _deccg
		}
	}
	if _bgagd.ExtLst != nil {
		if _gfeda := _bgagd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfeda != nil {
			return _gfeda
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OfficeStyleSheet and its children, prefixing error messages with path
func (_cegg *CT_OfficeStyleSheet) ValidateWithPath(path string) error {
	if _dfbbg := _cegg.ThemeElements.ValidateWithPath(path + "\u002f\u0054\u0068\u0065\u006d\u0065\u0045\u006c\u0065m\u0065\u006e\u0074\u0073"); _dfbbg != nil {
		return _dfbbg
	}
	if _cegg.ObjectDefaults != nil {
		if _bfcac := _cegg.ObjectDefaults.ValidateWithPath(path + "\u002fO\u0062j\u0065\u0063\u0074\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0073"); _bfcac != nil {
			return _bfcac
		}
	}
	if _cegg.ExtraClrSchemeLst != nil {
		if _bgadb := _cegg.ExtraClrSchemeLst.ValidateWithPath(path + "\u002fE\u0078t\u0072\u0061\u0043\u006c\u0072S\u0063\u0068e\u006d\u0065\u004c\u0073\u0074"); _bgadb != nil {
			return _bgadb
		}
	}
	if _cegg.CustClrLst != nil {
		if _gacbd := _cegg.CustClrLst.ValidateWithPath(path + "/\u0043\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"); _gacbd != nil {
			return _gacbd
		}
	}
	if _cegg.ExtLst != nil {
		if _aeffb := _cegg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aeffb != nil {
			return _aeffb
		}
	}
	return nil
}

// Validate validates the CT_InnerShadowEffect and its children
func (_eedaa *CT_InnerShadowEffect) Validate() error {
	return _eedaa.ValidateWithPath("C\u0054_\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074")
}

// ValidateWithPath validates the CT_Path2DClose and its children, prefixing error messages with path
func (_accac *CT_Path2DClose) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_TextTabStop and its children
func (_gagbf *CT_TextTabStop) Validate() error {
	return _gagbf.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0054\u0061b\u0053\u0074\u006f\u0070")
}

func (_edfee *CT_ColorChangeEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _edfee.UseAAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075\u0073\u0065\u0041"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_edfee.UseAAttr))})
	}
	e.EncodeToken(start)
	_gffd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u006c\u0072\u0046\u0072\u006fm"}}
	e.EncodeElement(_edfee.ClrFrom, _gffd)
	_gaca := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u006c\u0072\u0054\u006f"}}
	e.EncodeElement(_edfee.ClrTo, _gaca)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fca *CT_AnimationDgmBuildProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cgeg := range start.Attr {
		if _cgeg.Name.Local == "\u0062\u006c\u0064" {
			_ccgg, _dec := ParseUnionST_AnimationDgmBuildType(_cgeg.Value)
			if _dec != nil {
				return _dec
			}
			_fca.BldAttr = &_ccgg
			continue
		}
		if _cgeg.Name.Local == "\u0072\u0065\u0076" {
			_fbcd, _cbca := _c.ParseBool(_cgeg.Value)
			if _cbca != nil {
				return _cbca
			}
			_fca.RevAttr = &_fbcd
			continue
		}
	}
	for {
		_ecdb, _cgcg := d.Token()
		if _cgcg != nil {
			return _gf.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006d\u0042\u0075\u0069\u006c\u0064\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _cgcg)
		}
		if _gda, _cadf := _ecdb.(_g.EndElement); _cadf && _gda.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dgeee ST_PresetMaterialType) String() string {
	switch _dgeee {
	case 0:
		return ""
	case 1:
		return "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065"
	case 2:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063"
	case 3:
		return "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c"
	case 4:
		return "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065"
	case 5:
		return "\u006d\u0061\u0074t\u0065"
	case 6:
		return "\u0070l\u0061\u0073\u0074\u0069\u0063"
	case 7:
		return "\u006d\u0065\u0074a\u006c"
	case 8:
		return "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e"
	case 9:
		return "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072"
	case 10:
		return "\u0070\u006f\u0077\u0064\u0065\u0072"
	case 11:
		return "\u0064\u006b\u0045\u0064\u0067\u0065"
	case 12:
		return "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"
	case 13:
		return "\u0063\u006c\u0065a\u0072"
	case 14:
		return "\u0066\u006c\u0061\u0074"
	case 15:
		return "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l"
	}
	return ""
}

func (_ddgeac *CT_ColorScheme) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ddgeac.Dk1 = NewCT_Color()
	_ddgeac.Lt1 = NewCT_Color()
	_ddgeac.Dk2 = NewCT_Color()
	_ddgeac.Lt2 = NewCT_Color()
	_ddgeac.Accent1 = NewCT_Color()
	_ddgeac.Accent2 = NewCT_Color()
	_ddgeac.Accent3 = NewCT_Color()
	_ddgeac.Accent4 = NewCT_Color()
	_ddgeac.Accent5 = NewCT_Color()
	_ddgeac.Accent6 = NewCT_Color()
	_ddgeac.Hlink = NewCT_Color()
	_ddgeac.FolHlink = NewCT_Color()
	for _, _cagc := range start.Attr {
		if _cagc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gfgf, _afagb := _cagc.Value, error(nil)
			if _afagb != nil {
				return _afagb
			}
			_ddgeac.NameAttr = _gfgf
			continue
		}
	}
_ebba:
	for {
		_aggb, _afc := d.Token()
		if _afc != nil {
			return _afc
		}
		switch _bcda := _aggb.(type) {
		case _g.StartElement:
			switch _bcda.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0031"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0031"}:
				if _abbf := d.DecodeElement(_ddgeac.Dk1, &_bcda); _abbf != nil {
					return _abbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0031"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0031"}:
				if _feag := d.DecodeElement(_ddgeac.Lt1, &_bcda); _feag != nil {
					return _feag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0032"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0032"}:
				if _debc := d.DecodeElement(_ddgeac.Dk2, &_bcda); _debc != nil {
					return _debc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0032"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0032"}:
				if _ddfa := d.DecodeElement(_ddgeac.Lt2, &_bcda); _ddfa != nil {
					return _ddfa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0031"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0031"}:
				if _dbde := d.DecodeElement(_ddgeac.Accent1, &_bcda); _dbde != nil {
					return _dbde
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0032"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0032"}:
				if _aafd := d.DecodeElement(_ddgeac.Accent2, &_bcda); _aafd != nil {
					return _aafd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0033"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0033"}:
				if _fecf := d.DecodeElement(_ddgeac.Accent3, &_bcda); _fecf != nil {
					return _fecf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0034"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0034"}:
				if _bedg := d.DecodeElement(_ddgeac.Accent4, &_bcda); _bedg != nil {
					return _bedg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0035"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0035"}:
				if _fcdc := d.DecodeElement(_ddgeac.Accent5, &_bcda); _fcdc != nil {
					return _fcdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0036"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0036"}:
				if _ebabe := d.DecodeElement(_ddgeac.Accent6, &_bcda); _ebabe != nil {
					return _ebabe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069n\u006b"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069n\u006b"}:
				if _ggecg := d.DecodeElement(_ddgeac.Hlink, &_bcda); _ggecg != nil {
					return _ggecg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"}:
				if _dfce := d.DecodeElement(_ddgeac.FolHlink, &_bcda); _dfce != nil {
					return _dfce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ddgeac.ExtLst = NewCT_OfficeArtExtensionList()
				if _fcfea := d.DecodeElement(_ddgeac.ExtLst, &_bcda); _fcfea != nil {
					return _fcfea
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063h\u0065m\u0065\u0020\u0025\u0076", _bcda.Name)
				if _gaeaf := d.Skip(); _gaeaf != nil {
					return _gaeaf
				}
			}
		case _g.EndElement:
			break _ebba
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextBody and its children
func (_eecae *CT_TextBody) Validate() error {
	return _eecae.ValidateWithPath("C\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079")
}

type ST_SchemeColorVal byte

// ValidateWithPath validates the CT_GvmlGroupShape and its children, prefixing error messages with path
func (_dagca *CT_GvmlGroupShape) ValidateWithPath(path string) error {
	if _efbgc := _dagca.NvGrpSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _efbgc != nil {
		return _efbgc
	}
	if _bdadg := _dagca.GrpSpPr.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _bdadg != nil {
		return _bdadg
	}
	for _dfbgf, _gacfa := range _dagca.Choice {
		if _gdfbe := _gacfa.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _dfbgf)); _gdfbe != nil {
			return _gdfbe
		}
	}
	if _dagca.ExtLst != nil {
		if _cgecc := _dagca.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cgecc != nil {
			return _cgecc
		}
	}
	return nil
}

func (_bagcg *CT_TableCol) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0077"}, Value: _gf.Sprintf("\u0025\u0076", _bagcg.WAttr)})
	e.EncodeToken(start)
	if _bagcg.ExtLst != nil {
		_gbdf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bagcg.ExtLst, _gbdf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_XYAdjustHandle() *CT_XYAdjustHandle {
	_ccaab := &CT_XYAdjustHandle{}
	_ccaab.Pos = NewCT_AdjPoint2D()
	return _ccaab
}

type EG_ThemeableFontStyles struct {
	Font    *CT_FontCollection
	FontRef *CT_FontReference
}

func (_ffgee *CT_SupplementalFont) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _efaga := range start.Attr {
		if _efaga.Name.Local == "\u0073\u0063\u0072\u0069\u0070\u0074" {
			_badab, _bcccga := _efaga.Value, error(nil)
			if _bcccga != nil {
				return _bcccga
			}
			_ffgee.ScriptAttr = _badab
			continue
		}
		if _efaga.Name.Local == "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065" {
			_gfgce, _agbba := _efaga.Value, error(nil)
			if _agbba != nil {
				return _agbba
			}
			_ffgee.TypefaceAttr = _gfgce
			continue
		}
	}
	for {
		_geddf, _dbffe := d.Token()
		if _dbffe != nil {
			return _gf.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0053\u0075\u0070\u0070\u006ce\u006d\u0065\u006e\u0074\u0061\u006c\u0046\u006f\u006e\u0074\u003a\u0020\u0025\u0073", _dbffe)
		}
		if _gbba, _gaedf := _geddf.(_g.EndElement); _gaedf && _gbba.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dddbe ST_PresetColorVal) String() string {
	switch _dddbe {
	case 0:
		return ""
	case 1:
		return "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e"
	case 2:
		return "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065"
	case 3:
		return "\u0061\u0071\u0075\u0061"
	case 4:
		return "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case 5:
		return "\u0061\u007a\u0075r\u0065"
	case 6:
		return "\u0062\u0065\u0069g\u0065"
	case 7:
		return "\u0062\u0069\u0073\u0071\u0075\u0065"
	case 8:
		return "\u0062\u006c\u0061c\u006b"
	case 9:
		return "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064"
	case 10:
		return "\u0062\u006c\u0075\u0065"
	case 11:
		return "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074"
	case 12:
		return "\u0062\u0072\u006fw\u006e"
	case 13:
		return "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd"
	case 14:
		return "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e"
	case 15:
		return "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065"
	case 16:
		return "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e"
	case 17:
		return "\u0063\u006f\u0072a\u006c"
	case 18:
		return "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065"
	case 19:
		return "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b"
	case 20:
		return "\u0063r\u0069\u006d\u0073\u006f\u006e"
	case 21:
		return "\u0063\u0079\u0061\u006e"
	case 22:
		return "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065"
	case 23:
		return "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e"
	case 24:
		return "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case 25:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case 26:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079"
	case 27:
		return "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n"
	case 28:
		return "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi"
	case 29:
		return "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061"
	case 30:
		return "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e"
	case 31:
		return "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case 32:
		return "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case 33:
		return "\u0064a\u0072\u006b\u0052\u0065\u0064"
	case 34:
		return "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case 35:
		return "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 36:
		return "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 37:
		return "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case 38:
		return "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case 39:
		return "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 40:
		return "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case 41:
		return "\u0064\u006b\u0042\u006c\u0075\u0065"
	case 42:
		return "\u0064\u006b\u0043\u0079\u0061\u006e"
	case 43:
		return "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case 44:
		return "\u0064\u006b\u0047\u0072\u0061\u0079"
	case 45:
		return "\u0064\u006b\u0047\u0072\u0065\u0079"
	case 46:
		return "\u0064k\u0047\u0072\u0065\u0065\u006e"
	case 47:
		return "\u0064k\u004b\u0068\u0061\u006b\u0069"
	case 48:
		return "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a"
	case 49:
		return "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e"
	case 50:
		return "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case 51:
		return "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case 52:
		return "\u0064\u006b\u0052e\u0064"
	case 53:
		return "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case 54:
		return "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 55:
		return "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 56:
		return "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case 57:
		return "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case 58:
		return "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 59:
		return "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case 60:
		return "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b"
	case 61:
		return "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case 62:
		return "\u0064i\u006d\u0047\u0072\u0061\u0079"
	case 63:
		return "\u0064i\u006d\u0047\u0072\u0065\u0079"
	case 64:
		return "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065"
	case 65:
		return "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k"
	case 66:
		return "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065"
	case 67:
		return "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e"
	case 68:
		return "\u0066u\u0063\u0068\u0073\u0069\u0061"
	case 69:
		return "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o"
	case 70:
		return "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065"
	case 71:
		return "\u0067\u006f\u006c\u0064"
	case 72:
		return "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd"
	case 73:
		return "\u0067\u0072\u0061\u0079"
	case 74:
		return "\u0067\u0072\u0065\u0079"
	case 75:
		return "\u0067\u0072\u0065e\u006e"
	case 76:
		return "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077"
	case 77:
		return "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077"
	case 78:
		return "\u0068o\u0074\u0050\u0069\u006e\u006b"
	case 79:
		return "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d"
	case 80:
		return "\u0069\u006e\u0064\u0069\u0067\u006f"
	case 81:
		return "\u0069\u0076\u006fr\u0079"
	case 82:
		return "\u006b\u0068\u0061k\u0069"
	case 83:
		return "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072"
	case 84:
		return "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068"
	case 85:
		return "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n"
	case 86:
		return "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e"
	case 87:
		return "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e"
	case 88:
		return "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c"
	case 89:
		return "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n"
	case 90:
		return "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077"
	case 91:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case 92:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y"
	case 93:
		return "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e"
	case 94:
		return "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek"
	case 95:
		return "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case 96:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 97:
		return "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case 98:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079"
	case 99:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079"
	case 100:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065"
	case 101:
		return "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case 102:
		return "\u006c\u0074\u0042\u006c\u0075\u0065"
	case 103:
		return "\u006ct\u0043\u006f\u0072\u0061\u006c"
	case 104:
		return "\u006c\u0074\u0043\u0079\u0061\u006e"
	case 105:
		return "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077"
	case 106:
		return "\u006c\u0074\u0047\u0072\u0061\u0079"
	case 107:
		return "\u006c\u0074\u0047\u0072\u0065\u0079"
	case 108:
		return "\u006ct\u0047\u0072\u0065\u0065\u006e"
	case 109:
		return "\u006c\u0074\u0050\u0069\u006e\u006b"
	case 110:
		return "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case 111:
		return "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 112:
		return "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e"
	case 113:
		return "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case 114:
		return "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case 115:
		return "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065"
	case 116:
		return "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case 117:
		return "\u006c\u0069\u006d\u0065"
	case 118:
		return "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n"
	case 119:
		return "\u006c\u0069\u006ee\u006e"
	case 120:
		return "\u006da\u0067\u0065\u006e\u0074\u0061"
	case 121:
		return "\u006d\u0061\u0072\u006f\u006f\u006e"
	case 122:
		return "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case 123:
		return "\u006de\u0064\u0042\u006c\u0075\u0065"
	case 124:
		return "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d"
	case 125:
		return "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce"
	case 126:
		return "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 127:
		return "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 128:
		return "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case 129:
		return "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 130:
		return "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case 131:
		return "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case 132:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065"
	case 133:
		return "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064"
	case 134:
		return "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065"
	case 135:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e"
	case 136:
		return "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 137:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case 138:
		return "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 139:
		return "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case 140:
		return "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065"
	case 141:
		return "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m"
	case 142:
		return "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e"
	case 143:
		return "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e"
	case 144:
		return "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065"
	case 145:
		return "\u006e\u0061\u0076\u0079"
	case 146:
		return "\u006fl\u0064\u004c\u0061\u0063\u0065"
	case 147:
		return "\u006f\u006c\u0069v\u0065"
	case 148:
		return "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b"
	case 149:
		return "\u006f\u0072\u0061\u006e\u0067\u0065"
	case 150:
		return "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d"
	case 151:
		return "\u006f\u0072\u0063\u0068\u0069\u0064"
	case 152:
		return "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case 153:
		return "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n"
	case 154:
		return "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 155:
		return "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case 156:
		return "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070"
	case 157:
		return "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f"
	case 158:
		return "\u0070\u0065\u0072\u0075"
	case 159:
		return "\u0070\u0069\u006e\u006b"
	case 160:
		return "\u0070\u006c\u0075\u006d"
	case 161:
		return "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065"
	case 162:
		return "\u0070\u0075\u0072\u0070\u006c\u0065"
	case 163:
		return "\u0072\u0065\u0064"
	case 164:
		return "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n"
	case 165:
		return "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e"
	case 166:
		return "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e"
	case 167:
		return "\u0073\u0061\u006c\u006d\u006f\u006e"
	case 168:
		return "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e"
	case 169:
		return "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 170:
		return "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c"
	case 171:
		return "\u0073\u0069\u0065\u006e\u006e\u0061"
	case 172:
		return "\u0073\u0069\u006c\u0076\u0065\u0072"
	case 173:
		return "\u0073k\u0079\u0042\u006c\u0075\u0065"
	case 174:
		return "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e"
	case 175:
		return "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y"
	case 176:
		return "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y"
	case 177:
		return "\u0073\u006e\u006f\u0077"
	case 178:
		return "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e"
	case 179:
		return "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e"
	case 180:
		return "\u0074\u0061\u006e"
	case 181:
		return "\u0074\u0065\u0061\u006c"
	case 182:
		return "\u0074h\u0069\u0073\u0074\u006c\u0065"
	case 183:
		return "\u0074\u006f\u006d\u0061\u0074\u006f"
	case 184:
		return "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e"
	case 185:
		return "\u0076\u0069\u006f\u006c\u0065\u0074"
	case 186:
		return "\u0077\u0068\u0065a\u0074"
	case 187:
		return "\u0077\u0068\u0069t\u0065"
	case 188:
		return "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065"
	case 189:
		return "\u0079\u0065\u006c\u006c\u006f\u0077"
	case 190:
		return "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e"
	}
	return ""
}

type CT_OfficeStyleSheet struct {
	NameAttr          *string
	ThemeElements     *CT_BaseStyles
	ObjectDefaults    *CT_ObjectStyleDefaults
	ExtraClrSchemeLst *CT_ColorSchemeList
	CustClrLst        *CT_CustomColorList
	ExtLst            *CT_OfficeArtExtensionList
}

func (_ededb ST_LineEndType) String() string {
	switch _ededb {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 3:
		return "\u0073t\u0065\u0061\u006c\u0074\u0068"
	case 4:
		return "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case 5:
		return "\u006f\u0076\u0061\u006c"
	case 6:
		return "\u0061\u0072\u0072o\u0077"
	}
	return ""
}

// ValidateWithPath validates the CT_OfficeArtExtensionList and its children, prefixing error messages with path
func (_ecacb *CT_OfficeArtExtensionList) ValidateWithPath(path string) error {
	for _bafbb, _ggaf := range _ecacb.Ext {
		if _afedd := _ggaf.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _bafbb)); _afedd != nil {
			return _afedd
		}
	}
	return nil
}

// Validate validates the CT_PositiveSize2D and its children
func (_dbcb *CT_PositiveSize2D) Validate() error {
	return _dbcb.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0053i\u007a\u0065\u0032\u0044")
}

// Validate validates the CT_ObjectStyleDefaults and its children
func (_feagdb *CT_ObjectStyleDefaults) Validate() error {
	return _feagdb.ValidateWithPath("\u0043\u0054\u005f\u004fbj\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065\u0044\u0065\u0066\u0061\u0075\u006ct\u0073")
}

func (_edgea *ST_BevelPresetType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_egdga, _cfaad := d.Token()
	if _cfaad != nil {
		return _cfaad
	}
	if _dgdcb, _egefg := _egdga.(_g.EndElement); _egefg && _dgdcb.Name == start.Name {
		*_edgea = 1
		return nil
	}
	if _gbdce, _gbgddf := _egdga.(_g.CharData); !_gbgddf {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _egdga)
	} else {
		switch string(_gbdce) {
		case "":
			*_edgea = 0
		case "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074":
			*_edgea = 1
		case "\u0063\u0069\u0072\u0063\u006c\u0065":
			*_edgea = 2
		case "\u0073\u006c\u006fp\u0065":
			*_edgea = 3
		case "\u0063\u0072\u006fs\u0073":
			*_edgea = 4
		case "\u0061\u006e\u0067l\u0065":
			*_edgea = 5
		case "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed":
			*_edgea = 6
		case "\u0063\u006f\u006e\u0076\u0065\u0078":
			*_edgea = 7
		case "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et":
			*_edgea = 8
		case "\u0064\u0069\u0076o\u0074":
			*_edgea = 9
		case "\u0072\u0069\u0062\u006c\u0065\u0074":
			*_edgea = 10
		case "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065":
			*_edgea = 11
		case "\u0061r\u0074\u0044\u0065\u0063\u006f":
			*_edgea = 12
		}
	}
	_egdga, _cfaad = d.Token()
	if _cfaad != nil {
		return _cfaad
	}
	if _aefccf, _bbdgfa := _egdga.(_g.EndElement); _bbdgfa && _aefccf.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _egdga)
}

type EG_TextUnderlineLine struct {
	ULnTx *CT_TextUnderlineLineFollowText
	ULn   *CT_LineProperties
}

type CT_FillEffect struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

func (_facfa ST_AnimationDgmBuildType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _facfa.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		e.EncodeToken(_g.CharData(_facfa.ST_AnimationBuildType.String()))
	}
	if _facfa.ST_AnimationDgmOnlyBuildType != ST_AnimationDgmOnlyBuildTypeUnset {
		e.EncodeToken(_g.CharData(_facfa.ST_AnimationDgmOnlyBuildType.String()))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

type CT_TextBulletSizePercent struct{ ValAttr string }

type CT_AudioCDTime struct {
	TrackAttr uint8
	TimeAttr  *uint32
}

func (_cdecg *CT_Point2D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078"}, Value: _gf.Sprintf("\u0025\u0076", _cdecg.XAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0079"}, Value: _gf.Sprintf("\u0025\u0076", _cdecg.YAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_OfficeArtExtension and its children, prefixing error messages with path
func (_ebadc *CT_OfficeArtExtension) ValidateWithPath(path string) error { return nil }

func (_bgbfd *CT_Path2D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _adbf := range start.Attr {
		if _adbf.Name.Local == "\u0077" {
			_dgfgd, _gefc := _c.ParseInt(_adbf.Value, 10, 64)
			if _gefc != nil {
				return _gefc
			}
			_bgbfd.WAttr = &_dgfgd
			continue
		}
		if _adbf.Name.Local == "\u0068" {
			_cagfg, _fcge := _c.ParseInt(_adbf.Value, 10, 64)
			if _fcge != nil {
				return _fcge
			}
			_bgbfd.HAttr = &_cagfg
			continue
		}
		if _adbf.Name.Local == "\u0066\u0069\u006c\u006c" {
			_bgbfd.FillAttr.UnmarshalXMLAttr(_adbf)
			continue
		}
		if _adbf.Name.Local == "\u0073\u0074\u0072\u006f\u006b\u0065" {
			_fabe, _gdeab := _c.ParseBool(_adbf.Value)
			if _gdeab != nil {
				return _gdeab
			}
			_bgbfd.StrokeAttr = &_fabe
			continue
		}
		if _adbf.Name.Local == "e\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u004f\u006b" {
			_edffg, _bfegd := _c.ParseBool(_adbf.Value)
			if _bfegd != nil {
				return _bfegd
			}
			_bgbfd.ExtrusionOkAttr = &_edffg
			continue
		}
	}
_dcea:
	for {
		_ggbed, _cdbbc := d.Token()
		if _cdbbc != nil {
			return _cdbbc
		}
		switch _gacc := _ggbed.(type) {
		case _g.StartElement:
			switch _gacc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u006fs\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u006fs\u0065"}:
				_efgf := NewCT_Path2DClose()
				if _ebcdd := d.DecodeElement(_efgf, &_gacc); _ebcdd != nil {
					return _ebcdd
				}
				_bgbfd.Close = append(_bgbfd.Close, _efgf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0076\u0065\u0054\u006f"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0076\u0065\u0054\u006f"}:
				_faebgb := NewCT_Path2DMoveTo()
				if _bcaca := d.DecodeElement(_faebgb, &_gacc); _bcaca != nil {
					return _bcaca
				}
				_bgbfd.MoveTo = append(_bgbfd.MoveTo, _faebgb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006f"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006f"}:
				_fecde := NewCT_Path2DLineTo()
				if _aega := d.DecodeElement(_fecde, &_gacc); _aega != nil {
					return _aega
				}
				_bgbfd.LnTo = append(_bgbfd.LnTo, _fecde)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0072\u0063T\u006f"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0072\u0063T\u006f"}:
				_bbefc := NewCT_Path2DArcTo()
				if _ffafb := d.DecodeElement(_bbefc, &_gacc); _ffafb != nil {
					return _ffafb
				}
				_bgbfd.ArcTo = append(_bgbfd.ArcTo, _bbefc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0061\u0064\u0042\u0065\u007a\u0054o"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0061\u0064\u0042\u0065\u007a\u0054o"}:
				_dbaf := NewCT_Path2DQuadBezierTo()
				if _gbcbf := d.DecodeElement(_dbaf, &_gacc); _gbcbf != nil {
					return _gbcbf
				}
				_bgbfd.QuadBezTo = append(_bgbfd.QuadBezTo, _dbaf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0054\u006f"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0054\u006f"}:
				_addbd := NewCT_Path2DCubicBezierTo()
				if _dadae := d.DecodeElement(_addbd, &_gacc); _dadae != nil {
					return _dadae
				}
				_bgbfd.CubicBezTo = append(_bgbfd.CubicBezTo, _addbd)
			default:
				_b.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0050\u0061\u0074h\u0032\u0044 \u0025\u0076", _gacc.Name)
				if _cdfeb := d.Skip(); _cdfeb != nil {
					return _cdfeb
				}
			}
		case _g.EndElement:
			break _dcea
		case _g.CharData:
		}
	}
	return nil
}

func (_dggfd *CT_PolarAdjustHandle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dggfd.GdRefRAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0052"}, Value: _gf.Sprintf("\u0025\u0076", *_dggfd.GdRefRAttr)})
	}
	if _dggfd.MinRAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0069\u006e\u0052"}, Value: _gf.Sprintf("\u0025\u0076", *_dggfd.MinRAttr)})
	}
	if _dggfd.MaxRAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0078\u0052"}, Value: _gf.Sprintf("\u0025\u0076", *_dggfd.MaxRAttr)})
	}
	if _dggfd.GdRefAngAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0041\u006e\u0067"}, Value: _gf.Sprintf("\u0025\u0076", *_dggfd.GdRefAngAttr)})
	}
	if _dggfd.MinAngAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0069\u006e\u0041\u006e\u0067"}, Value: _gf.Sprintf("\u0025\u0076", *_dggfd.MinAngAttr)})
	}
	if _dggfd.MaxAngAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0078\u0041\u006e\u0067"}, Value: _gf.Sprintf("\u0025\u0076", *_dggfd.MaxAngAttr)})
	}
	e.EncodeToken(start)
	_fefa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070o\u0073"}}
	e.EncodeElement(_dggfd.Pos, _fefa)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_TextListStyle() *CT_TextListStyle { _fbfcb := &CT_TextListStyle{}; return _fbfcb }

func (_begd *CT_BlipChoice) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _begd.AlphaBiLevel != nil {
		_faeb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0042\u0069L\u0065\u0076\u0065\u006c"}}
		for _, _gafb := range _begd.AlphaBiLevel {
			e.EncodeElement(_gafb, _faeb)
		}
	}
	if _begd.AlphaCeiling != nil {
		_ebaf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0043\u0065i\u006c\u0069\u006e\u0067"}}
		for _, _dbd := range _begd.AlphaCeiling {
			e.EncodeElement(_dbd, _ebaf)
		}
	}
	if _begd.AlphaFloor != nil {
		_ggd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061l\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}}
		for _, _ggag := range _begd.AlphaFloor {
			e.EncodeElement(_ggag, _ggd)
		}
	}
	if _begd.AlphaInv != nil {
		_eda := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}}
		for _, _egbf := range _begd.AlphaInv {
			e.EncodeElement(_egbf, _eda)
		}
	}
	if _begd.AlphaMod != nil {
		_fegb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		for _, _fbgc := range _begd.AlphaMod {
			e.EncodeElement(_fbgc, _fegb)
		}
	}
	if _begd.AlphaModFix != nil {
		_eead := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}}
		for _, _fadac := range _begd.AlphaModFix {
			e.EncodeElement(_fadac, _eead)
		}
	}
	if _begd.AlphaRepl != nil {
		_gebe := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0061\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"}}
		for _, _gfgg := range _begd.AlphaRepl {
			e.EncodeElement(_gfgg, _gebe)
		}
	}
	if _begd.BiLevel != nil {
		_abfb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0069\u004c\u0065\u0076\u0065l"}}
		for _, _cefg := range _begd.BiLevel {
			e.EncodeElement(_cefg, _abfb)
		}
	}
	if _begd.Blur != nil {
		_ddbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		for _, _gaea := range _begd.Blur {
			e.EncodeElement(_gaea, _ddbe)
		}
	}
	if _begd.ClrChange != nil {
		_faafc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0063\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"}}
		for _, _bda := range _begd.ClrChange {
			e.EncodeElement(_bda, _faafc)
		}
	}
	if _begd.ClrRepl != nil {
		_daag := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u006c\u0072\u0052\u0065\u0070l"}}
		for _, _agfd := range _begd.ClrRepl {
			e.EncodeElement(_agfd, _daag)
		}
	}
	if _begd.Duotone != nil {
		_ccfdb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0064\u0075\u006f\u0074\u006f\u006ee"}}
		for _, _abeb := range _begd.Duotone {
			e.EncodeElement(_abeb, _ccfdb)
		}
	}
	if _begd.FillOverlay != nil {
		_gceda := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		for _, _bea := range _begd.FillOverlay {
			e.EncodeElement(_bea, _gceda)
		}
	}
	if _begd.Grayscl != nil {
		_eefb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0061\u0079\u0073\u0063l"}}
		for _, _acac := range _begd.Grayscl {
			e.EncodeElement(_acac, _eefb)
		}
	}
	if _begd.Hsl != nil {
		_dda := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068s\u006c"}}
		for _, _adcg := range _begd.Hsl {
			e.EncodeElement(_adcg, _dda)
		}
	}
	if _begd.Lum != nil {
		_cbcb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		for _, _caf := range _begd.Lum {
			e.EncodeElement(_caf, _cbcb)
		}
	}
	if _begd.Tint != nil {
		_adba := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		for _, _cagd := range _begd.Tint {
			e.EncodeElement(_cagd, _adba)
		}
	}
	return nil
}

func (_efdfg *CT_TextUnderlineLineFollowText) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_ecbaed, _ccffe := d.Token()
		if _ccffe != nil {
			return _gf.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u004c\u0069\u006e\u0065\u0046\u006f\u006c\u006c\u006fw\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _ccffe)
		}
		if _fdbeda, _ggfaf := _ecbaed.(_g.EndElement); _ggfaf && _fdbeda.Name == start.Name {
			break
		}
	}
	return nil
}

func (_bcada *CT_RegularTextRun) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _bcada.RPr != nil {
		_fdeb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072P\u0072"}}
		e.EncodeElement(_bcada.RPr, _fdeb)
	}
	_defba := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074"}}
	_ga.AddPreserveSpaceAttr(&_defba, _bcada.T)
	e.EncodeElement(_bcada.T, _defba)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_efbga *CT_FontScheme) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_efbga.MajorFont = NewCT_FontCollection()
	_efbga.MinorFont = NewCT_FontCollection()
	for _, _cdeg := range start.Attr {
		if _cdeg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_eefdd, _dedab := _cdeg.Value, error(nil)
			if _dedab != nil {
				return _dedab
			}
			_efbga.NameAttr = _eefdd
			continue
		}
	}
_aeba:
	for {
		_fefd, _cedde := d.Token()
		if _cedde != nil {
			return _cedde
		}
		switch _ggcfb := _fefd.(type) {
		case _g.StartElement:
			switch _ggcfb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006da\u006a\u006f\u0072\u0046\u006f\u006et"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006da\u006a\u006f\u0072\u0046\u006f\u006et"}:
				if _befag := d.DecodeElement(_efbga.MajorFont, &_ggcfb); _befag != nil {
					return _befag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006di\u006e\u006f\u0072\u0046\u006f\u006et"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006di\u006e\u006f\u0072\u0046\u006f\u006et"}:
				if _afdbb := d.DecodeElement(_efbga.MinorFont, &_ggcfb); _afdbb != nil {
					return _afdbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efbga.ExtLst = NewCT_OfficeArtExtensionList()
				if _egec := d.DecodeElement(_efbga.ExtLst, &_ggcfb); _egec != nil {
					return _egec
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046o\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065 \u0025\u0076", _ggcfb.Name)
				if _affe := d.Skip(); _affe != nil {
					return _affe
				}
			}
		case _g.EndElement:
			break _aeba
		case _g.CharData:
		}
	}
	return nil
}

func (_eeada *CT_LinearShadeProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _adfdd := range start.Attr {
		if _adfdd.Name.Local == "\u0061\u006e\u0067" {
			_fbggf, _cdccd := _c.ParseInt(_adfdd.Value, 10, 32)
			if _cdccd != nil {
				return _cdccd
			}
			_afdd := int32(_fbggf)
			_eeada.AngAttr = &_afdd
			continue
		}
		if _adfdd.Name.Local == "\u0073\u0063\u0061\u006c\u0065\u0064" {
			_fagdg, _gffff := _c.ParseBool(_adfdd.Value)
			if _gffff != nil {
				return _gffff
			}
			_eeada.ScaledAttr = &_fagdg
			continue
		}
	}
	for {
		_ggebe, _dgfcg := d.Token()
		if _dgfcg != nil {
			return _gf.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u004cine\u0061rS\u0068\u0061\u0064\u0065\u0050\u0072\u006fpe\u0072\u0074\u0069\u0065\u0073\u003a\u0020%\u0073", _dgfcg)
		}
		if _fbaf, _ffdb := _ggebe.(_g.EndElement); _ffdb && _fbaf.Name == start.Name {
			break
		}
	}
	return nil
}

func ParseUnionST_Coordinate(s string) (ST_Coordinate, error) {
	_bebf := ST_Coordinate{}
	if _ge.ST_UniversalMeasurePatternRe.MatchString(s) {
		_bebf.ST_UniversalMeasure = &s
	} else {
		_bgddf, _fceg := _c.ParseInt(s, 10, 64)
		if _fceg != nil {
			return _bebf, _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _fceg)
		}
		_bebf.ST_CoordinateUnqualified = &_bgddf
	}
	return _bebf, nil
}

// Validate validates the CT_FillStyleList and its children
func (_fecgg *CT_FillStyleList) Validate() error {
	return _fecgg.ValidateWithPath("\u0043\u0054_\u0046\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074")
}

type ST_ChartBuildStep byte

// Validate validates the CT_RegularTextRun and its children
func (_eeccd *CT_RegularTextRun) Validate() error {
	return _eeccd.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0067\u0075\u006c\u0061\u0072\u0054\u0065x\u0074\u0052\u0075\u006e")
}

func (_feeceb *CT_TableStyleCellStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _feeceb.TcBdr != nil {
		_bcbgb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074\u0063\u0042\u0064\u0072"}}
		e.EncodeElement(_feeceb.TcBdr, _bcbgb)
	}
	if _feeceb.Fill != nil {
		_bccgd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_feeceb.Fill, _bccgd)
	}
	if _feeceb.FillRef != nil {
		_eadeea := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
		e.EncodeElement(_feeceb.FillRef, _eadeea)
	}
	if _feeceb.Cell3D != nil {
		_defec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0065\u006c\u006c\u0033\u0044"}}
		e.EncodeElement(_feeceb.Cell3D, _defec)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_HSLEffect() *CT_HSLEffect { _ffdgf := &CT_HSLEffect{}; return _ffdgf }

type ST_EffectContainerType byte

// ValidateWithPath validates the CT_GvmlGroupShapeChoice and its children, prefixing error messages with path
func (_bcfa *CT_GvmlGroupShapeChoice) ValidateWithPath(path string) error {
	for _fabaa, _cegc := range _bcfa.TxSp {
		if _facbf := _cegc.ValidateWithPath(_gf.Sprintf("%\u0073\u002f\u0054\u0078\u0053\u0070\u005b\u0025\u0064\u005d", path, _fabaa)); _facbf != nil {
			return _facbf
		}
	}
	for _cedabb, _cdggd := range _bcfa.Sp {
		if _cafaf := _cdggd.ValidateWithPath(_gf.Sprintf("\u0025s\u002f\u0053\u0070\u005b\u0025\u0064]", path, _cedabb)); _cafaf != nil {
			return _cafaf
		}
	}
	for _dgcgc, _debb := range _bcfa.CxnSp {
		if _ffac := _debb.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002fC\u0078\u006e\u0053\u0070\u005b\u0025\u0064\u005d", path, _dgcgc)); _ffac != nil {
			return _ffac
		}
	}
	for _bfcgg, _baaag := range _bcfa.Pic {
		if _fgfbd := _baaag.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0063\u005b\u0025\u0064\u005d", path, _bfcgg)); _fgfbd != nil {
			return _fgfbd
		}
	}
	for _afbef, _gage := range _bcfa.GraphicFrame {
		if _babb := _gage.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0047ra\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _afbef)); _babb != nil {
			return _babb
		}
	}
	for _eacc, _fbcdb := range _bcfa.GrpSp {
		if _dbdda := _fbcdb.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002fG\u0072\u0070\u0053\u0070\u005b\u0025\u0064\u005d", path, _eacc)); _dbdda != nil {
			return _dbdda
		}
	}
	return nil
}

func (_facacb ST_BlendMode) ValidateWithPath(path string) error {
	switch _facacb {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_facacb))
	}
	return nil
}

type CT_Headers struct{ Header []string }

// Validate validates the CT_RelativeOffsetEffect and its children
func (_gccff *CT_RelativeOffsetEffect) Validate() error {
	return _gccff.ValidateWithPath("\u0043\u0054\u005fRe\u006c\u0061\u0074\u0069\u0076\u0065\u004f\u0066\u0066\u0073\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_cbdb *EG_Text3D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cbdb.Sp3d != nil {
		_afeee := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_cbdb.Sp3d, _afeee)
	}
	if _cbdb.FlatTx != nil {
		_aegecf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u006c\u0061\u0074\u0054\u0078"}}
		e.EncodeElement(_cbdb.FlatTx, _aegecf)
	}
	return nil
}

func NewAG_Blob() *AG_Blob { _a := &AG_Blob{}; return _a }

func (_ecec *CT_ColorMapping) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ecec.Bg1Attr = ST_ColorSchemeIndex(1)
	_ecec.Tx1Attr = ST_ColorSchemeIndex(1)
	_ecec.Bg2Attr = ST_ColorSchemeIndex(1)
	_ecec.Tx2Attr = ST_ColorSchemeIndex(1)
	_ecec.Accent1Attr = ST_ColorSchemeIndex(1)
	_ecec.Accent2Attr = ST_ColorSchemeIndex(1)
	_ecec.Accent3Attr = ST_ColorSchemeIndex(1)
	_ecec.Accent4Attr = ST_ColorSchemeIndex(1)
	_ecec.Accent5Attr = ST_ColorSchemeIndex(1)
	_ecec.Accent6Attr = ST_ColorSchemeIndex(1)
	_ecec.HlinkAttr = ST_ColorSchemeIndex(1)
	_ecec.FolHlinkAttr = ST_ColorSchemeIndex(1)
	for _, _cfffe := range start.Attr {
		if _cfffe.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0033" {
			_ecec.Accent3Attr.UnmarshalXMLAttr(_cfffe)
			continue
		}
		if _cfffe.Name.Local == "\u0074\u0078\u0031" {
			_ecec.Tx1Attr.UnmarshalXMLAttr(_cfffe)
			continue
		}
		if _cfffe.Name.Local == "\u0062\u0067\u0032" {
			_ecec.Bg2Attr.UnmarshalXMLAttr(_cfffe)
			continue
		}
		if _cfffe.Name.Local == "\u0074\u0078\u0032" {
			_ecec.Tx2Attr.UnmarshalXMLAttr(_cfffe)
			continue
		}
		if _cfffe.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0031" {
			_ecec.Accent1Attr.UnmarshalXMLAttr(_cfffe)
			continue
		}
		if _cfffe.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0032" {
			_ecec.Accent2Attr.UnmarshalXMLAttr(_cfffe)
			continue
		}
		if _cfffe.Name.Local == "\u0062\u0067\u0031" {
			_ecec.Bg1Attr.UnmarshalXMLAttr(_cfffe)
			continue
		}
		if _cfffe.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0034" {
			_ecec.Accent4Attr.UnmarshalXMLAttr(_cfffe)
			continue
		}
		if _cfffe.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0035" {
			_ecec.Accent5Attr.UnmarshalXMLAttr(_cfffe)
			continue
		}
		if _cfffe.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0036" {
			_ecec.Accent6Attr.UnmarshalXMLAttr(_cfffe)
			continue
		}
		if _cfffe.Name.Local == "\u0068\u006c\u0069n\u006b" {
			_ecec.HlinkAttr.UnmarshalXMLAttr(_cfffe)
			continue
		}
		if _cfffe.Name.Local == "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b" {
			_ecec.FolHlinkAttr.UnmarshalXMLAttr(_cfffe)
			continue
		}
	}
_dcgad:
	for {
		_bgc, _ebdg := d.Token()
		if _ebdg != nil {
			return _ebdg
		}
		switch _bcgc := _bgc.(type) {
		case _g.StartElement:
			switch _bcgc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ecec.ExtLst = NewCT_OfficeArtExtensionList()
				if _adfdc := d.DecodeElement(_ecec.ExtLst, &_bcgc); _adfdc != nil {
					return _adfdc
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006co\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u0020\u0025\u0076", _bcgc.Name)
				if _faedb := d.Skip(); _faedb != nil {
					return _faedb
				}
			}
		case _g.EndElement:
			break _dcgad
		case _g.CharData:
		}
	}
	return nil
}

func (_gafad *CT_SchemeColor) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_dffdcg, _eggeg := _gafad.ValAttr.MarshalXMLAttr(_g.Name{Local: "\u0076\u0061\u006c"})
	if _eggeg != nil {
		return _eggeg
	}
	start.Attr = append(start.Attr, _dffdcg)
	e.EncodeToken(start)
	if _gafad.EG_ColorTransform != nil {
		for _, _cbafa := range _gafad.EG_ColorTransform {
			_cbafa.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_LightRig and its children, prefixing error messages with path
func (_bbfac *CT_LightRig) ValidateWithPath(path string) error {
	if _bbfac.RigAttr == ST_LightRigTypeUnset {
		return _gf.Errorf("\u0025\u0073\u002fR\u0069\u0067\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ccdad := _bbfac.RigAttr.ValidateWithPath(path + "\u002f\u0052\u0069\u0067\u0041\u0074\u0074\u0072"); _ccdad != nil {
		return _ccdad
	}
	if _bbfac.DirAttr == ST_LightRigDirectionUnset {
		return _gf.Errorf("\u0025\u0073\u002fD\u0069\u0072\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _aegbf := _bbfac.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _aegbf != nil {
		return _aegbf
	}
	if _bbfac.Rot != nil {
		if _dcddg := _bbfac.Rot.ValidateWithPath(path + "\u002f\u0052\u006f\u0074"); _dcddg != nil {
			return _dcddg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColorSchemeList and its children, prefixing error messages with path
func (_bdce *CT_ColorSchemeList) ValidateWithPath(path string) error {
	for _ffdfd, _deag := range _bdce.ExtraClrScheme {
		if _dbcc := _deag.ValidateWithPath(_gf.Sprintf("%\u0073\u002f\u0045\u0078tr\u0061C\u006c\u0072\u0053\u0063\u0068e\u006d\u0065\u005b\u0025\u0064\u005d", path, _ffdfd)); _dbcc != nil {
			return _dbcc
		}
	}
	return nil
}

func (_gabag *CT_OfficeArtExtensionList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _gabag.Ext != nil {
		_dfed := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		for _, _daad := range _gabag.Ext {
			e.EncodeElement(_daad, _dfed)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_aabbab *ST_EffectContainerType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cedfc, _eadda := d.Token()
	if _eadda != nil {
		return _eadda
	}
	if _gaacg, _addcd := _cedfc.(_g.EndElement); _addcd && _gaacg.Name == start.Name {
		*_aabbab = 1
		return nil
	}
	if _ccaaf, _defeb := _cedfc.(_g.CharData); !_defeb {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cedfc)
	} else {
		switch string(_ccaaf) {
		case "":
			*_aabbab = 0
		case "\u0073\u0069\u0062":
			*_aabbab = 1
		case "\u0074\u0072\u0065\u0065":
			*_aabbab = 2
		}
	}
	_cedfc, _eadda = d.Token()
	if _eadda != nil {
		return _eadda
	}
	if _ddafe, _cbbbeg := _cedfc.(_g.EndElement); _cbbbeg && _ddafe.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cedfc)
}

// Validate validates the CT_TableCol and its children
func (_gccaf *CT_TableCol) Validate() error {
	return _gccaf.ValidateWithPath("C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c")
}

// Validate validates the CT_TableStyleList and its children
func (_bcffae *CT_TableStyleList) Validate() error {
	return _bcffae.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u004c\u0069\u0073\u0074")
}

type ST_FontCollectionIndex byte

func NewEG_ThemeableFontStyles() *EG_ThemeableFontStyles {
	_dedeg := &EG_ThemeableFontStyles{}
	return _dedeg
}

func (_aacbg ST_OnOffStyleType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bgcfb := _g.Attr{}
	_bgcfb.Name = name
	switch _aacbg {
	case ST_OnOffStyleTypeUnset:
		_bgcfb.Value = ""
	case ST_OnOffStyleTypeOn:
		_bgcfb.Value = "\u006f\u006e"
	case ST_OnOffStyleTypeOff:
		_bgcfb.Value = "\u006f\u0066\u0066"
	case ST_OnOffStyleTypeDef:
		_bgcfb.Value = "\u0064\u0065\u0066"
	}
	return _bgcfb, nil
}

// Validate validates the CT_XYAdjustHandle and its children
func (_fcgega *CT_XYAdjustHandle) Validate() error {
	return _fcgega.ValidateWithPath("\u0043\u0054\u005f\u0058\u0059\u0041\u0064\u006a\u0075\u0073\u0074\u0048a\u006e\u0064\u006c\u0065")
}

func (_ageed *CT_TextBulletTypefaceFollowText) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_NoFillProperties and its children, prefixing error messages with path
func (_bbfge *CT_NoFillProperties) ValidateWithPath(path string) error { return nil }

func NewCT_LineEndProperties() *CT_LineEndProperties {
	_dcbed := &CT_LineEndProperties{}
	return _dcbed
}

const (
	ST_TextWrappingTypeUnset  ST_TextWrappingType = 0
	ST_TextWrappingTypeNone   ST_TextWrappingType = 1
	ST_TextWrappingTypeSquare ST_TextWrappingType = 2
)

func NewCT_GroupShapeProperties() *CT_GroupShapeProperties {
	_faga := &CT_GroupShapeProperties{}
	return _faga
}

func (_ecgd *CT_InverseTransform) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_beabd, _dbaeb := d.Token()
		if _dbaeb != nil {
			return _gf.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0049\u006e\u0076\u0065\u0072s\u0065\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u0073", _dbaeb)
		}
		if _fbddc, _ddfdg := _beabd.(_g.EndElement); _ddfdg && _fbddc.Name == start.Name {
			break
		}
	}
	return nil
}

func NewEG_LineDashProperties() *EG_LineDashProperties {
	_decfc := &EG_LineDashProperties{}
	return _decfc
}

// ValidateWithPath validates the CT_GvmlConnector and its children, prefixing error messages with path
func (_dabce *CT_GvmlConnector) ValidateWithPath(path string) error {
	if _gccf := _dabce.NvCxnSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _gccf != nil {
		return _gccf
	}
	if _gdadd := _dabce.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _gdadd != nil {
		return _gdadd
	}
	if _dabce.Style != nil {
		if _cceab := _dabce.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _cceab != nil {
			return _cceab
		}
	}
	if _dabce.ExtLst != nil {
		if _aaeca := _dabce.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aaeca != nil {
			return _aaeca
		}
	}
	return nil
}

func (_bbbf *CT_GeomGuide) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _gf.Sprintf("\u0025\u0076", _bbbf.NameAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u006d\u006c\u0061"}, Value: _gf.Sprintf("\u0025\u0076", _bbbf.FmlaAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cgcgg *CT_NonVisualPictureProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cgcgg.PreferRelativeResizeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "p\u0072e\u0066\u0065\u0072\u0052\u0065\u006c\u0061\u0074i\u0076\u0065\u0052\u0065si\u007a\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_cgcgg.PreferRelativeResizeAttr))})
	}
	e.EncodeToken(start)
	if _cgcgg.PicLocks != nil {
		_cgacc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0069\u0063\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_cgcgg.PicLocks, _cgacc)
	}
	if _cgcgg.ExtLst != nil {
		_cddfd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cgcgg.ExtLst, _cddfd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_aacbf *CT_TableRow) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068"}, Value: _gf.Sprintf("\u0025\u0076", _aacbf.HAttr)})
	e.EncodeToken(start)
	if _aacbf.Tc != nil {
		_fcfef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0063"}}
		for _, _bccb := range _aacbf.Tc {
			e.EncodeElement(_bccb, _fcfef)
		}
	}
	if _aacbf.ExtLst != nil {
		_dddb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aacbf.ExtLst, _dddb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ecaf *CT_Color) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_egdff:
	for {
		_fabf, _dcbfbd := d.Token()
		if _dcbfbd != nil {
			return _dcbfbd
		}
		switch _fcfa := _fabf.(type) {
		case _g.StartElement:
			switch _fcfa.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_ecaf.ScrgbClr = NewCT_ScRgbColor()
				if _cgefe := d.DecodeElement(_ecaf.ScrgbClr, &_fcfa); _cgefe != nil {
					return _cgefe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_ecaf.SrgbClr = NewCT_SRgbColor()
				if _edfe := d.DecodeElement(_ecaf.SrgbClr, &_fcfa); _edfe != nil {
					return _edfe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_ecaf.HslClr = NewCT_HslColor()
				if _gcae := d.DecodeElement(_ecaf.HslClr, &_fcfa); _gcae != nil {
					return _gcae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_ecaf.SysClr = NewCT_SystemColor()
				if _gcggf := d.DecodeElement(_ecaf.SysClr, &_fcfa); _gcggf != nil {
					return _gcggf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_ecaf.SchemeClr = NewCT_SchemeColor()
				if _aecc := d.DecodeElement(_ecaf.SchemeClr, &_fcfa); _aecc != nil {
					return _aecc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_ecaf.PrstClr = NewCT_PresetColor()
				if _ecga := d.DecodeElement(_ecaf.PrstClr, &_fcfa); _ecga != nil {
					return _ecga
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _fcfa.Name)
				if _ecdf := d.Skip(); _ecdf != nil {
					return _ecdf
				}
			}
		case _g.EndElement:
			break _egdff
		case _g.CharData:
		}
	}
	return nil
}

type CT_Boolean struct{ ValAttr *_ge.ST_OnOff }

func (_fgeag ST_TextAlignType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_affae := _g.Attr{}
	_affae.Name = name
	switch _fgeag {
	case ST_TextAlignTypeUnset:
		_affae.Value = ""
	case ST_TextAlignTypeL:
		_affae.Value = "\u006c"
	case ST_TextAlignTypeCtr:
		_affae.Value = "\u0063\u0074\u0072"
	case ST_TextAlignTypeR:
		_affae.Value = "\u0072"
	case ST_TextAlignTypeJust:
		_affae.Value = "\u006a\u0075\u0073\u0074"
	case ST_TextAlignTypeJustLow:
		_affae.Value = "\u006au\u0073\u0074\u004c\u006f\u0077"
	case ST_TextAlignTypeDist:
		_affae.Value = "\u0064\u0069\u0073\u0074"
	case ST_TextAlignTypeThaiDist:
		_affae.Value = "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074"
	}
	return _affae, nil
}

func (_bcfca *EG_TextGeometry) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Name.Local = "\u0061\u003a\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0047\u0065\u006fm\u0065\u0074\u0072\u0079"
	if _bcfca.CustGeom != nil {
		_bdcfc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_bcfca.CustGeom, _bdcfc)
	}
	if _bcfca.PrstTxWarp != nil {
		_fbdfb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070r\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}}
		e.EncodeElement(_bcfca.PrstTxWarp, _fbdfb)
	}
	return nil
}

func (_fdagcf *CT_TextUnderlineFillGroupWrapper) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cdfgf:
	for {
		_dbebg, _gafbg := d.Token()
		if _gafbg != nil {
			return _gafbg
		}
		switch _abba := _dbebg.(type) {
		case _g.StartElement:
			switch _abba.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_fdagcf.NoFill = NewCT_NoFillProperties()
				if _gbeade := d.DecodeElement(_fdagcf.NoFill, &_abba); _gbeade != nil {
					return _gbeade
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_fdagcf.SolidFill = NewCT_SolidColorFillProperties()
				if _abdgb := d.DecodeElement(_fdagcf.SolidFill, &_abba); _abdgb != nil {
					return _abdgb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_fdagcf.GradFill = NewCT_GradientFillProperties()
				if _cfbgb := d.DecodeElement(_fdagcf.GradFill, &_abba); _cfbgb != nil {
					return _cfbgb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_fdagcf.BlipFill = NewCT_BlipFillProperties()
				if _aeece := d.DecodeElement(_fdagcf.BlipFill, &_abba); _aeece != nil {
					return _aeece
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_fdagcf.PattFill = NewCT_PatternFillProperties()
				if _cccddc := d.DecodeElement(_fdagcf.PattFill, &_abba); _cccddc != nil {
					return _cccddc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_fdagcf.GrpFill = NewCT_GroupFillProperties()
				if _egbfac := d.DecodeElement(_fdagcf.GrpFill, &_abba); _egbfac != nil {
					return _egbfac
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078t\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0047\u0072o\u0075\u0070\u0057\u0072\u0061\u0070\u0070\u0065r\u0020\u0025\u0076", _abba.Name)
				if _accgc := d.Skip(); _accgc != nil {
					return _accgc
				}
			}
		case _g.EndElement:
			break _cdfgf
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_FillOverlayEffect and its children
func (_edab *CT_FillOverlayEffect) Validate() error {
	return _edab.ValidateWithPath("C\u0054_\u0046\u0069\u006c\u006c\u004f\u0076\u0065\u0072l\u0061\u0079\u0045\u0066fe\u0063\u0074")
}

// Validate validates the CT_InverseTransform and its children
func (_dega *CT_InverseTransform) Validate() error {
	return _dega.ValidateWithPath("\u0043\u0054\u005f\u0049nv\u0065\u0072\u0073\u0065\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}

// Validate validates the CT_LuminanceEffect and its children
func (_caaed *CT_LuminanceEffect) Validate() error {
	return _caaed.ValidateWithPath("\u0043T\u005fL\u0075\u006d\u0069\u006e\u0061n\u0063\u0065E\u0066\u0066\u0065\u0063\u0074")
}

func (_aafg *EG_FillProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _aafg.NoFill != nil {
		_gbbb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aafg.NoFill, _gbbb)
	}
	if _aafg.SolidFill != nil {
		_bcecgd := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aafg.SolidFill, _bcecgd)
	}
	if _aafg.GradFill != nil {
		_begeea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aafg.GradFill, _begeea)
	}
	if _aafg.BlipFill != nil {
		_aceeb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aafg.BlipFill, _aceeb)
	}
	if _aafg.PattFill != nil {
		_gebdea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aafg.PattFill, _gebdea)
	}
	if _aafg.GrpFill != nil {
		_dfcedd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_aafg.GrpFill, _dfcedd)
	}
	return nil
}

func (_eecgf *CT_TextBulletSizeFollowText) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_bgbbbe, _bbbb := d.Token()
		if _bbbb != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065x\u0074\u0042\u0075\u006c\u006c\u0065t\u0053\u0069\u007a\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078t\u003a\u0020\u0025\u0073", _bbbb)
		}
		if _facab, _efbbge := _bgbbbe.(_g.EndElement); _efbbge && _facab.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dgegff *CT_TextTabStopList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_begdee:
	for {
		_gcdga, _dcfdff := d.Token()
		if _dcfdff != nil {
			return _dcfdff
		}
		switch _dbcf := _gcdga.(type) {
		case _g.StartElement:
			switch _dbcf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062"}:
				_agcde := NewCT_TextTabStop()
				if _deddde := d.DecodeElement(_agcde, &_dbcf); _deddde != nil {
					return _deddde
				}
				_dgegff.Tab = append(_dgegff.Tab, _agcde)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0054\u0061b\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _dbcf.Name)
				if _fdcgg := d.Skip(); _fdcgg != nil {
					return _fdcgg
				}
			}
		case _g.EndElement:
			break _begdee
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_LineEndProperties and its children
func (_ebdac *CT_LineEndProperties) Validate() error {
	return _ebdac.ValidateWithPath("C\u0054_\u004c\u0069\u006e\u0065\u0045\u006e\u0064\u0050r\u006f\u0070\u0065\u0072ti\u0065\u0073")
}

func NewCT_DashStop() *CT_DashStop { _acdc := &CT_DashStop{}; return _acdc }

type CT_AnimationElementChoice struct {
	Dgm   *CT_AnimationDgmElement
	Chart *CT_AnimationChartElement
}

// ValidateWithPath validates the CT_ContentPartLocking and its children, prefixing error messages with path
func (_gdeb *CT_ContentPartLocking) ValidateWithPath(path string) error {
	if _gdeb.ExtLst != nil {
		if _dcec := _gdeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dcec != nil {
			return _dcec
		}
	}
	return nil
}

func (_edbdfdf *CT_TextBulletSizePercent) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _gf.Sprintf("\u0025\u0076", _edbdfdf.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_InverseGammaTransform() *CT_InverseGammaTransform {
	_adebg := &CT_InverseGammaTransform{}
	return _adebg
}

func (_ggf *CT_AdjustHandleList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _ggf.AhXY != nil {
		_dead := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u0068\u0058\u0059"}}
		for _, _cgdg := range _ggf.AhXY {
			e.EncodeElement(_cgdg, _dead)
		}
	}
	if _ggf.AhPolar != nil {
		_geb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0068\u0050\u006f\u006c\u0061r"}}
		for _, _dge := range _ggf.AhPolar {
			e.EncodeElement(_dge, _geb)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_abadcf ST_SchemeColorVal) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_abadcf.String(), start)
}

func (_gbbfe ST_TextAutonumberScheme) ValidateWithPath(path string) error {
	switch _gbbfe {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbbfe))
	}
	return nil
}

func NewTheme() *Theme {
	_cgfbgd := &Theme{}
	_cgfbgd.CT_OfficeStyleSheet = *NewCT_OfficeStyleSheet()
	return _cgfbgd
}

type CT_Path2DQuadBezierTo struct{ Pt []*CT_AdjPoint2D }

func NewCT_TextAutonumberBullet() *CT_TextAutonumberBullet {
	_ccade := &CT_TextAutonumberBullet{}
	_ccade.TypeAttr = ST_TextAutonumberScheme(1)
	return _ccade
}

// Validate validates the CT_TextBulletSizeFollowText and its children
func (_bfgfd *CT_TextBulletSizeFollowText) Validate() error {
	return _bfgfd.ValidateWithPath("C\u0054\u005f\u0054\u0065\u0078\u0074B\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065F\u006f\u006c\u006co\u0077T\u0065\u0078\u0074")
}

func (_cdeaa *CT_TextTabStopList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _cdeaa.Tab != nil {
		_egbgcf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074a\u0062"}}
		for _, _cdbaf := range _cdeaa.Tab {
			e.EncodeElement(_cdbaf, _egbgcf)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TableProperties and its children
func (_gcdee *CT_TableProperties) Validate() error {
	return _gcdee.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}

func (_egceg *CT_ColorMappingOverride) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_egceg.Choice.MarshalXML(e, _g.StartElement{})
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bbef *CT_FixedPercentage) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _gf.Sprintf("\u0025\u0076", _bbef.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_TextCharBullet struct{ CharAttr string }

// ValidateWithPath validates the CT_TintEffect and its children, prefixing error messages with path
func (_cffef *CT_TintEffect) ValidateWithPath(path string) error {
	if _cffef.HueAttr != nil {
		if *_cffef.HueAttr < 0 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0048\u0075e\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_cffef.HueAttr)
		}
		if *_cffef.HueAttr >= 21600000 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002eH\u0075\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_cffef.HueAttr)
		}
	}
	if _cffef.AmtAttr != nil {
		if _cgaecc := _cffef.AmtAttr.ValidateWithPath(path + "\u002f\u0041\u006d\u0074\u0041\u0074\u0074\u0072"); _cgaecc != nil {
			return _cgaecc
		}
	}
	return nil
}

// Validate validates the CT_PositiveFixedPercentage and its children
func (_dfdcc *CT_PositiveFixedPercentage) Validate() error {
	return _dfdcc.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065")
}

// Validate validates the CT_WholeE2oFormatting and its children
func (_egedb *CT_WholeE2oFormatting) Validate() error {
	return _egedb.ValidateWithPath("C\u0054\u005f\u0057\u0068ol\u0065E\u0032\u006f\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067")
}

// ValidateWithPath validates the EG_ThemeableFontStyles and its children, prefixing error messages with path
func (_bggfg *EG_ThemeableFontStyles) ValidateWithPath(path string) error {
	if _bggfg.Font != nil {
		if _bgeac := _bggfg.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _bgeac != nil {
			return _bgeac
		}
	}
	if _bggfg.FontRef != nil {
		if _geacf := _bggfg.FontRef.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0052\u0065\u0066"); _geacf != nil {
			return _geacf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AlphaReplaceEffect and its children, prefixing error messages with path
func (_dafd *CT_AlphaReplaceEffect) ValidateWithPath(path string) error {
	if _aea := _dafd.AAttr.ValidateWithPath(path + "\u002f\u0041\u0041\u0074\u0074\u0072"); _aea != nil {
		return _aea
	}
	return nil
}

func (_gdbag *CT_TableStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gdbag.StyleIdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _bggcad := range start.Attr {
		if _bggcad.Name.Local == "\u0073t\u0079\u006c\u0065\u004e\u0061\u006de" {
			_dddba, _fgbdf := _bggcad.Value, error(nil)
			if _fgbdf != nil {
				return _fgbdf
			}
			_gdbag.StyleNameAttr = _dddba
			continue
		}
		if _bggcad.Name.Local == "\u0073t\u0079\u006c\u0065\u0049\u0064" {
			_cddgb, _accfe := _bggcad.Value, error(nil)
			if _accfe != nil {
				return _accfe
			}
			_gdbag.StyleIdAttr = _cddgb
			continue
		}
	}
_egefa:
	for {
		_cfedc, _abaaac := d.Token()
		if _abaaac != nil {
			return _abaaac
		}
		switch _eafefa := _cfedc.(type) {
		case _g.StartElement:
			switch _eafefa.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cB\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cB\u0067"}:
				_gdbag.TblBg = NewCT_TableBackgroundStyle()
				if _fbbcb := d.DecodeElement(_gdbag.TblBg, &_eafefa); _fbbcb != nil {
					return _fbbcb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u006f\u006c\u0065\u0054\u0062\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u006f\u006c\u0065\u0054\u0062\u006c"}:
				_gdbag.WholeTbl = NewCT_TablePartStyle()
				if _beecg := d.DecodeElement(_gdbag.WholeTbl, &_eafefa); _beecg != nil {
					return _beecg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0048"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0048"}:
				_gdbag.Band1H = NewCT_TablePartStyle()
				if _egdda := d.DecodeElement(_gdbag.Band1H, &_eafefa); _egdda != nil {
					return _egdda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0048"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0048"}:
				_gdbag.Band2H = NewCT_TablePartStyle()
				if _dbffeb := d.DecodeElement(_gdbag.Band2H, &_eafefa); _dbffeb != nil {
					return _dbffeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0056"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0056"}:
				_gdbag.Band1V = NewCT_TablePartStyle()
				if _defbg := d.DecodeElement(_gdbag.Band1V, &_eafefa); _defbg != nil {
					return _defbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0056"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0056"}:
				_gdbag.Band2V = NewCT_TablePartStyle()
				if _dfdgc := d.DecodeElement(_gdbag.Band2V, &_eafefa); _dfdgc != nil {
					return _dfdgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0043\u006f\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0043\u006f\u006c"}:
				_gdbag.LastCol = NewCT_TablePartStyle()
				if _bgabg := d.DecodeElement(_gdbag.LastCol, &_eafefa); _bgabg != nil {
					return _bgabg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}:
				_gdbag.FirstCol = NewCT_TablePartStyle()
				if _dccddd := d.DecodeElement(_gdbag.FirstCol, &_eafefa); _dccddd != nil {
					return _dccddd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0052\u006f\u0077"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0052\u006f\u0077"}:
				_gdbag.LastRow = NewCT_TablePartStyle()
				if _feggg := d.DecodeElement(_gdbag.LastRow, &_eafefa); _feggg != nil {
					return _feggg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0043\u0065\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0043\u0065\u006c\u006c"}:
				_gdbag.SeCell = NewCT_TablePartStyle()
				if _efcfg := d.DecodeElement(_gdbag.SeCell, &_eafefa); _efcfg != nil {
					return _efcfg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0077\u0043\u0065\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0077\u0043\u0065\u006c\u006c"}:
				_gdbag.SwCell = NewCT_TablePartStyle()
				if _ccee := d.DecodeElement(_gdbag.SwCell, &_eafefa); _ccee != nil {
					return _ccee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}:
				_gdbag.FirstRow = NewCT_TablePartStyle()
				if _dbgefg := d.DecodeElement(_gdbag.FirstRow, &_eafefa); _dbgefg != nil {
					return _dbgefg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0065\u0043\u0065\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0065\u0043\u0065\u006c\u006c"}:
				_gdbag.NeCell = NewCT_TablePartStyle()
				if _bbegg := d.DecodeElement(_gdbag.NeCell, &_eafefa); _bbegg != nil {
					return _bbegg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0077\u0043\u0065\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0077\u0043\u0065\u006c\u006c"}:
				_gdbag.NwCell = NewCT_TablePartStyle()
				if _ggcbe := d.DecodeElement(_gdbag.NwCell, &_eafefa); _ggcbe != nil {
					return _ggcbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdbag.ExtLst = NewCT_OfficeArtExtensionList()
				if _eafdb := d.DecodeElement(_gdbag.ExtLst, &_eafefa); _eafdb != nil {
					return _eafdb
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054a\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065 \u0025\u0076", _eafefa.Name)
				if _adbdd := d.Skip(); _adbdd != nil {
					return _adbdd
				}
			}
		case _g.EndElement:
			break _egefa
		case _g.CharData:
		}
	}
	return nil
}

type Blip struct{ CT_Blip }

// Validate validates the CT_SchemeColor and its children
func (_ggddf *CT_SchemeColor) Validate() error {
	return _ggddf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0065C\u006f\u006c\u006f\u0072")
}

func (_gdddfg *EG_TextAutofit) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ccegf:
	for {
		_ecddg, _aadbaa := d.Token()
		if _aadbaa != nil {
			return _aadbaa
		}
		switch _edgac := _ecddg.(type) {
		case _g.StartElement:
			switch _edgac.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}:
				_gdddfg.NoAutofit = NewCT_TextNoAutofit()
				if _adbce := d.DecodeElement(_gdddfg.NoAutofit, &_edgac); _adbce != nil {
					return _adbce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}:
				_gdddfg.NormAutofit = NewCT_TextNormalAutofit()
				if _geega := d.DecodeElement(_gdddfg.NormAutofit, &_edgac); _geega != nil {
					return _geega
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}:
				_gdddfg.SpAutoFit = NewCT_TextShapeAutofit()
				if _eggfd := d.DecodeElement(_gdddfg.SpAutoFit, &_edgac); _eggfd != nil {
					return _eggfd
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0041\u0075\u0074o\u0066i\u0074\u0020\u0025\u0076", _edgac.Name)
				if _fbggg := d.Skip(); _fbggg != nil {
					return _fbggg
				}
			}
		case _g.EndElement:
			break _ccegf
		case _g.CharData:
		}
	}
	return nil
}

func ParseUnionST_PositiveFixedPercentage(s string) (ST_PositiveFixedPercentage, error) {
	_ababbf := ST_PositiveFixedPercentage{}
	if _ge.ST_PercentagePatternRe.MatchString(s) {
		_ababbf.ST_PositiveFixedPercentage = &ST_Percentage{}
		_ababbf.ST_PositiveFixedPercentage.ST_Percentage = &s
	} else {
		_efcbg, _aebbc := _c.ParseInt(s, 10, 64)
		if _aebbc != nil {
			return _ababbf, _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _aebbc)
		}
		_dacfec := int32(_efcbg)
		_ababbf.ST_PositiveFixedPercentageDecimal = &_dacfec
	}
	return _ababbf, nil
}

func (_dgeb *CT_GlowEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cffba := range start.Attr {
		if _cffba.Name.Local == "\u0072\u0061\u0064" {
			_baaad, _ggge := _c.ParseInt(_cffba.Value, 10, 64)
			if _ggge != nil {
				return _ggge
			}
			_dgeb.RadAttr = &_baaad
			continue
		}
	}
_dfbfd:
	for {
		_gggd, _gdad := d.Token()
		if _gdad != nil {
			return _gdad
		}
		switch _dagcg := _gggd.(type) {
		case _g.StartElement:
			switch _dagcg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_dgeb.ScrgbClr = NewCT_ScRgbColor()
				if _bbgg := d.DecodeElement(_dgeb.ScrgbClr, &_dagcg); _bbgg != nil {
					return _bbgg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_dgeb.SrgbClr = NewCT_SRgbColor()
				if _dfcd := d.DecodeElement(_dgeb.SrgbClr, &_dagcg); _dfcd != nil {
					return _dfcd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_dgeb.HslClr = NewCT_HslColor()
				if _aabfb := d.DecodeElement(_dgeb.HslClr, &_dagcg); _aabfb != nil {
					return _aabfb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_dgeb.SysClr = NewCT_SystemColor()
				if _abfdd := d.DecodeElement(_dgeb.SysClr, &_dagcg); _abfdd != nil {
					return _abfdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_dgeb.SchemeClr = NewCT_SchemeColor()
				if _dfef := d.DecodeElement(_dgeb.SchemeClr, &_dagcg); _dfef != nil {
					return _dfef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_dgeb.PrstClr = NewCT_PresetColor()
				if _cbafee := d.DecodeElement(_dgeb.PrstClr, &_dagcg); _cbafee != nil {
					return _cbafee
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047l\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074 \u0025\u0076", _dagcg.Name)
				if _fcbcd := d.Skip(); _fcbcd != nil {
					return _fcbcd
				}
			}
		case _g.EndElement:
			break _dfbfd
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_Hyperlink() *CT_Hyperlink { _cgddb := &CT_Hyperlink{}; return _cgddb }

// ValidateWithPath validates the CT_WholeE2oFormatting and its children, prefixing error messages with path
func (_dcedg *CT_WholeE2oFormatting) ValidateWithPath(path string) error {
	if _dcedg.Ln != nil {
		if _bfgaa := _dcedg.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _bfgaa != nil {
			return _bfgaa
		}
	}
	if _dcedg.EffectLst != nil {
		if _ggacf := _dcedg.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _ggacf != nil {
			return _ggacf
		}
	}
	if _dcedg.EffectDag != nil {
		if _gedfd := _dcedg.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _gedfd != nil {
			return _gedfd
		}
	}
	return nil
}

type CT_GvmlGraphicalObjectFrame struct {
	NvGraphicFramePr *CT_GvmlGraphicFrameNonVisual
	Graphic          *Graphic
	Xfrm             *CT_Transform2D
	ExtLst           *CT_OfficeArtExtensionList
}

func NewCT_TextFont() *CT_TextFont { _febfg := &CT_TextFont{}; return _febfg }

func (_gcacdd *ST_PresetMaterialType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_gcacdd = 0
	case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065":
		*_gcacdd = 1
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063":
		*_gcacdd = 2
	case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c":
		*_gcacdd = 3
	case "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065":
		*_gcacdd = 4
	case "\u006d\u0061\u0074t\u0065":
		*_gcacdd = 5
	case "\u0070l\u0061\u0073\u0074\u0069\u0063":
		*_gcacdd = 6
	case "\u006d\u0065\u0074a\u006c":
		*_gcacdd = 7
	case "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e":
		*_gcacdd = 8
	case "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072":
		*_gcacdd = 9
	case "\u0070\u006f\u0077\u0064\u0065\u0072":
		*_gcacdd = 10
	case "\u0064\u006b\u0045\u0064\u0067\u0065":
		*_gcacdd = 11
	case "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065":
		*_gcacdd = 12
	case "\u0063\u006c\u0065a\u0072":
		*_gcacdd = 13
	case "\u0066\u006c\u0061\u0074":
		*_gcacdd = 14
	case "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l":
		*_gcacdd = 15
	}
	return nil
}

func (_bdabc *CT_ObjectStyleDefaults) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dbbga:
	for {
		_ebgea, _ebbad := d.Token()
		if _ebbad != nil {
			return _ebbad
		}
		switch _befeb := _ebgea.(type) {
		case _g.StartElement:
			switch _befeb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0044e\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0044e\u0066"}:
				_bdabc.SpDef = NewCT_DefaultShapeDefinition()
				if _gbbgc := d.DecodeElement(_bdabc.SpDef, &_befeb); _gbbgc != nil {
					return _gbbgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0044e\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0044e\u0066"}:
				_bdabc.LnDef = NewCT_DefaultShapeDefinition()
				if _daccce := d.DecodeElement(_bdabc.LnDef, &_befeb); _daccce != nil {
					return _daccce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0044e\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0044e\u0066"}:
				_bdabc.TxDef = NewCT_DefaultShapeDefinition()
				if _edfcf := d.DecodeElement(_bdabc.TxDef, &_befeb); _edfcf != nil {
					return _edfcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bdabc.ExtLst = NewCT_OfficeArtExtensionList()
				if _adade := d.DecodeElement(_bdabc.ExtLst, &_befeb); _adade != nil {
					return _adade
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u004f\u0062\u006a\u0065c\u0074\u0053\u0074\u0079\u006c\u0065\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0073\u0020\u0025\u0076", _befeb.Name)
				if _acde := d.Skip(); _acde != nil {
					return _acde
				}
			}
		case _g.EndElement:
			break _dbbga
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_GvmlShapeNonVisual() *CT_GvmlShapeNonVisual {
	_agbag := &CT_GvmlShapeNonVisual{}
	_agbag.CNvPr = NewCT_NonVisualDrawingProps()
	_agbag.CNvSpPr = NewCT_NonVisualDrawingShapeProps()
	return _agbag
}

type CT_SolidColorFillProperties struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_ccegbe *ST_AnimationBuildType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fbgbg, _ddfae := d.Token()
	if _ddfae != nil {
		return _ddfae
	}
	if _effca, _fgbf := _fbgbg.(_g.EndElement); _fgbf && _effca.Name == start.Name {
		*_ccegbe = 1
		return nil
	}
	if _ecede, _aggga := _fbgbg.(_g.CharData); !_aggga {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbgbg)
	} else {
		switch string(_ecede) {
		case "":
			*_ccegbe = 0
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_ccegbe = 1
		}
	}
	_fbgbg, _ddfae = d.Token()
	if _ddfae != nil {
		return _ddfae
	}
	if _cdadf, _agbcb := _fbgbg.(_g.EndElement); _agbcb && _cdadf.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbgbg)
}

func NewCT_Scale2D() *CT_Scale2D {
	_bcbcf := &CT_Scale2D{}
	_bcbcf.Sx = NewCT_Ratio()
	_bcbcf.Sy = NewCT_Ratio()
	return _bcbcf
}

// Validate validates the CT_AudioCDTime and its children
func (_abbc *CT_AudioCDTime) Validate() error {
	return _abbc.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043D\u0054\u0069\u006d\u0065")
}

type CT_ShapeLocking struct {
	NoTextEditAttr         *bool
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

// ValidateWithPath validates the CT_PositivePercentage and its children, prefixing error messages with path
func (_becbc *CT_PositivePercentage) ValidateWithPath(path string) error {
	if _cfca := _becbc.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cfca != nil {
		return _cfca
	}
	return nil
}

type ST_TextAutonumberScheme byte

// ValidateWithPath validates the CT_SupplementalFont and its children, prefixing error messages with path
func (_efcg *CT_SupplementalFont) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_SolidColorFillProperties and its children, prefixing error messages with path
func (_adabgd *CT_SolidColorFillProperties) ValidateWithPath(path string) error {
	if _adabgd.ScrgbClr != nil {
		if _cceb := _adabgd.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _cceb != nil {
			return _cceb
		}
	}
	if _adabgd.SrgbClr != nil {
		if _fbcgb := _adabgd.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _fbcgb != nil {
			return _fbcgb
		}
	}
	if _adabgd.HslClr != nil {
		if _fgfee := _adabgd.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _fgfee != nil {
			return _fgfee
		}
	}
	if _adabgd.SysClr != nil {
		if _aeedee := _adabgd.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _aeedee != nil {
			return _aeedee
		}
	}
	if _adabgd.SchemeClr != nil {
		if _daffd := _adabgd.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _daffd != nil {
			return _daffd
		}
	}
	if _adabgd.PrstClr != nil {
		if _baggc := _adabgd.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _baggc != nil {
			return _baggc
		}
	}
	return nil
}

func (_daeed ST_TileFlipMode) String() string {
	switch _daeed {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0078"
	case 3:
		return "\u0079"
	case 4:
		return "\u0078\u0079"
	}
	return ""
}

type CT_TextParagraphProperties struct {
	MarLAttr         *int32
	MarRAttr         *int32
	LvlAttr          *int32
	IndentAttr       *int32
	AlgnAttr         ST_TextAlignType
	DefTabSzAttr     *ST_Coordinate32
	RtlAttr          *bool
	EaLnBrkAttr      *bool
	FontAlgnAttr     ST_TextFontAlignType
	LatinLnBrkAttr   *bool
	HangingPunctAttr *bool
	LnSpc            *CT_TextSpacing
	SpcBef           *CT_TextSpacing
	SpcAft           *CT_TextSpacing
	BuClrTx          *CT_TextBulletColorFollowText
	BuClr            *CT_Color
	BuSzTx           *CT_TextBulletSizeFollowText
	BuSzPct          *CT_TextBulletSizePercent
	BuSzPts          *CT_TextBulletSizePoint
	BuFontTx         *CT_TextBulletTypefaceFollowText
	BuFont           *CT_TextFont
	BuNone           *CT_TextNoBullet
	BuAutoNum        *CT_TextAutonumberBullet
	BuChar           *CT_TextCharBullet
	BuBlip           *CT_TextBlipBullet
	TabLst           *CT_TextTabStopList
	DefRPr           *CT_TextCharacterProperties
	ExtLst           *CT_OfficeArtExtensionList
}

func (_ageae *CT_LinearShadeProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ageae.AngAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u006e\u0067"}, Value: _gf.Sprintf("\u0025\u0076", *_ageae.AngAttr)})
	}
	if _ageae.ScaledAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0063\u0061\u006c\u0065\u0064"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_ageae.ScaledAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cfeeb *ST_FixedPercentage) Validate() error { return _cfeeb.ValidateWithPath("") }

func (_bfcd *CT_GvmlTextShapeChoice) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bfcd.UseSpRect != nil {
		_bcbbc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0075\u0073\u0065\u0053\u0070\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_bfcd.UseSpRect, _bcbbc)
	}
	if _bfcd.Xfrm != nil {
		_efab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_bfcd.Xfrm, _efab)
	}
	return nil
}

// ValidateWithPath validates the CT_GradientStopList and its children, prefixing error messages with path
func (_bbdgc *CT_GradientStopList) ValidateWithPath(path string) error {
	for _eaag, _fdefb := range _bbdgc.Gs {
		if _fffa := _fdefb.ValidateWithPath(_gf.Sprintf("\u0025s\u002f\u0047\u0073\u005b\u0025\u0064]", path, _eaag)); _fffa != nil {
			return _fffa
		}
	}
	return nil
}

type CT_EffectStyleList struct{ EffectStyle []*CT_EffectStyleItem }

func NewCT_DashStopList() *CT_DashStopList { _aggge := &CT_DashStopList{}; return _aggge }

// Validate validates the CT_NonVisualDrawingShapeProps and its children
func (_dbbf *CT_NonVisualDrawingShapeProps) Validate() error {
	return _dbbf.ValidateWithPath("\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050ro\u0070\u0073")
}

// ValidateWithPath validates the CT_ThemeableLineStyle and its children, prefixing error messages with path
func (_gbabe *CT_ThemeableLineStyle) ValidateWithPath(path string) error {
	if _gbabe.Ln != nil {
		if _cccdf := _gbabe.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _cccdf != nil {
			return _cccdf
		}
	}
	if _gbabe.LnRef != nil {
		if _bcafea := _gbabe.LnRef.ValidateWithPath(path + "\u002f\u004c\u006e\u0052\u0065\u0066"); _bcafea != nil {
			return _bcafea
		}
	}
	return nil
}

// ValidateWithPath validates the AG_Locking and its children, prefixing error messages with path
func (_gaa *AG_Locking) ValidateWithPath(path string) error { return nil }

func NewCT_TextParagraphProperties() *CT_TextParagraphProperties {
	_aedfb := &CT_TextParagraphProperties{}
	return _aedfb
}

// Validate validates the CT_TableRow and its children
func (_cdedb *CT_TableRow) Validate() error {
	return _cdedb.ValidateWithPath("C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0052\u006f\u0077")
}

type CT_OfficeArtExtension struct {
	UriAttr string
	Any     []_ga.Any
}

func (_aebae ST_PresetColorVal) ValidateWithPath(path string) error {
	switch _aebae {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aebae))
	}
	return nil
}

type CT_Path2DLineTo struct{ Pt *CT_AdjPoint2D }

func (_eabd *CT_AnimationChartBuildProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _aee := range start.Attr {
		if _aee.Name.Local == "\u0062\u006c\u0064" {
			_cdg, _ccec := ParseUnionST_AnimationChartBuildType(_aee.Value)
			if _ccec != nil {
				return _ccec
			}
			_eabd.BldAttr = &_cdg
			continue
		}
		if _aee.Name.Local == "\u0061\u006e\u0069\u006d\u0042\u0067" {
			_edec, _deg := _c.ParseBool(_aee.Value)
			if _deg != nil {
				return _deg
			}
			_eabd.AnimBgAttr = &_edec
			continue
		}
	}
	for {
		_cge, _ebd := d.Token()
		if _ebd != nil {
			return _gf.Errorf("\u0070a\u0072\u0073i\u006e\u0067\u0020\u0043T\u005f\u0041\u006ei\u006d\u0061\u0074\u0069\u006f\u006e\u0043\u0068\u0061rt\u0042\u0075\u0069l\u0064\u0050r\u006f\u0070\u0065\u0072\u0074\u0069e\u0073\u003a \u0025\u0073", _ebd)
		}
		if _eed, _eccc := _cge.(_g.EndElement); _eccc && _eed.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cegbc *EG_ThemeableFillStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cegbc.Fill != nil {
		_cdeee := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_cegbc.Fill, _cdeee)
	}
	if _cegbc.FillRef != nil {
		_ddgcf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
		e.EncodeElement(_cegbc.FillRef, _ddgcf)
	}
	return nil
}

func (_edac *Theme) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_edac.CT_OfficeStyleSheet = *NewCT_OfficeStyleSheet()
	for _, _febeb := range start.Attr {
		if _febeb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gadag, _cfgfb := _febeb.Value, error(nil)
			if _cfgfb != nil {
				return _cfgfb
			}
			_edac.NameAttr = &_gadag
			continue
		}
	}
_cffea:
	for {
		_bbbc, _efbgd := d.Token()
		if _efbgd != nil {
			return _efbgd
		}
		switch _cdegdf := _bbbc.(type) {
		case _g.StartElement:
			switch _cdegdf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}:
				if _gdace := d.DecodeElement(_edac.ThemeElements, &_cdegdf); _gdace != nil {
					return _gdace
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}:
				_edac.ObjectDefaults = NewCT_ObjectStyleDefaults()
				if _bbaef := d.DecodeElement(_edac.ObjectDefaults, &_cdegdf); _bbaef != nil {
					return _bbaef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}:
				_edac.ExtraClrSchemeLst = NewCT_ColorSchemeList()
				if _afefe := d.DecodeElement(_edac.ExtraClrSchemeLst, &_cdegdf); _afefe != nil {
					return _afefe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}:
				_edac.CustClrLst = NewCT_CustomColorList()
				if _ecfce := d.DecodeElement(_edac.CustClrLst, &_cdegdf); _ecfce != nil {
					return _ecfce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edac.ExtLst = NewCT_OfficeArtExtensionList()
				if _agefb := d.DecodeElement(_edac.ExtLst, &_cdegdf); _agefb != nil {
					return _agefb
				}
			default:
				_b.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0068\u0065m\u0065 \u0025\u0076", _cdegdf.Name)
				if _fgced := d.Skip(); _fgced != nil {
					return _fgced
				}
			}
		case _g.EndElement:
			break _cffea
		case _g.CharData:
		}
	}
	return nil
}

type CT_Path2DClose struct{}

// Validate validates the CT_TextNoAutofit and its children
func (_dabcge *CT_TextNoAutofit) Validate() error {
	return _dabcge.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074")
}

func (_feac *CT_TextField) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_feac.IdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _cbbda := range start.Attr {
		if _cbbda.Name.Local == "\u0069\u0064" {
			_gdggbe, _ddbaea := _cbbda.Value, error(nil)
			if _ddbaea != nil {
				return _ddbaea
			}
			_feac.IdAttr = _gdggbe
			continue
		}
		if _cbbda.Name.Local == "\u0074\u0079\u0070\u0065" {
			_cdaba, _ddfgfd := _cbbda.Value, error(nil)
			if _ddfgfd != nil {
				return _ddfgfd
			}
			_feac.TypeAttr = &_cdaba
			continue
		}
	}
_gebce:
	for {
		_cdced, _abde := d.Token()
		if _abde != nil {
			return _abde
		}
		switch _ccdbe := _cdced.(type) {
		case _g.StartElement:
			switch _ccdbe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_feac.RPr = NewCT_TextCharacterProperties()
				if _aeaa := d.DecodeElement(_feac.RPr, &_ccdbe); _aeaa != nil {
					return _aeaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}:
				_feac.PPr = NewCT_TextParagraphProperties()
				if _eeaed := d.DecodeElement(_feac.PPr, &_ccdbe); _eeaed != nil {
					return _eeaed
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				_feac.T = new(string)
				if _gdbdd := d.DecodeElement(_feac.T, &_ccdbe); _gdbdd != nil {
					return _gdbdd
				}
			default:
				_b.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_T\u0065\u0078t\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _ccdbe.Name)
				if _gcfdc := d.Skip(); _gcfdc != nil {
					return _gcfdc
				}
			}
		case _g.EndElement:
			break _gebce
		case _g.CharData:
		}
	}
	return nil
}

func (_daa *CT_AudioFile) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _gf.Sprintf("\u0025\u0076", _daa.LinkAttr)})
	if _daa.ContentTypeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"}, Value: _gf.Sprintf("\u0025\u0076", *_daa.ContentTypeAttr)})
	}
	e.EncodeToken(start)
	if _daa.ExtLst != nil {
		_efff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_daa.ExtLst, _efff)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ScRgbColor and its children, prefixing error messages with path
func (_gcab *CT_ScRgbColor) ValidateWithPath(path string) error {
	if _cacf := _gcab.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _cacf != nil {
		return _cacf
	}
	if _bbgbc := _gcab.GAttr.ValidateWithPath(path + "\u002f\u0047\u0041\u0074\u0074\u0072"); _bbgbc != nil {
		return _bbgbc
	}
	if _dcfdg := _gcab.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _dcfdg != nil {
		return _dcfdg
	}
	for _gbead, _cgdab := range _gcab.EG_ColorTransform {
		if _abeef := _cgdab.ValidateWithPath(_gf.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _gbead)); _abeef != nil {
			return _abeef
		}
	}
	return nil
}

func (_beacd *CT_TextBulletSizeFollowText) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_eebfee *EG_Geometry) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ebaee:
	for {
		_ababbd, _dbbgab := d.Token()
		if _dbbgab != nil {
			return _dbbgab
		}
		switch _bdccbd := _ababbd.(type) {
		case _g.StartElement:
			switch _bdccbd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_eebfee.CustGeom = NewCT_CustomGeometry2D()
				if _gdgga := d.DecodeElement(_eebfee.CustGeom, &_bdccbd); _gdgga != nil {
					return _gdgga
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_eebfee.PrstGeom = NewCT_PresetGeometry2D()
				if _eefba := d.DecodeElement(_eebfee.PrstGeom, &_bdccbd); _eefba != nil {
					return _eefba
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0020\u0025\u0076", _bdccbd.Name)
				if _eggdd := d.Skip(); _eggdd != nil {
					return _eggdd
				}
			}
		case _g.EndElement:
			break _ebaee
		case _g.CharData:
		}
	}
	return nil
}

const (
	ST_ShapeTypeUnset                      ST_ShapeType = 0
	ST_ShapeTypeLine                       ST_ShapeType = 1
	ST_ShapeTypeLineInv                    ST_ShapeType = 2
	ST_ShapeTypeTriangle                   ST_ShapeType = 3
	ST_ShapeTypeRtTriangle                 ST_ShapeType = 4
	ST_ShapeTypeRect                       ST_ShapeType = 5
	ST_ShapeTypeDiamond                    ST_ShapeType = 6
	ST_ShapeTypeParallelogram              ST_ShapeType = 7
	ST_ShapeTypeTrapezoid                  ST_ShapeType = 8
	ST_ShapeTypeNonIsoscelesTrapezoid      ST_ShapeType = 9
	ST_ShapeTypePentagon                   ST_ShapeType = 10
	ST_ShapeTypeHexagon                    ST_ShapeType = 11
	ST_ShapeTypeHeptagon                   ST_ShapeType = 12
	ST_ShapeTypeOctagon                    ST_ShapeType = 13
	ST_ShapeTypeDecagon                    ST_ShapeType = 14
	ST_ShapeTypeDodecagon                  ST_ShapeType = 15
	ST_ShapeTypeStar4                      ST_ShapeType = 16
	ST_ShapeTypeStar5                      ST_ShapeType = 17
	ST_ShapeTypeStar6                      ST_ShapeType = 18
	ST_ShapeTypeStar7                      ST_ShapeType = 19
	ST_ShapeTypeStar8                      ST_ShapeType = 20
	ST_ShapeTypeStar10                     ST_ShapeType = 21
	ST_ShapeTypeStar12                     ST_ShapeType = 22
	ST_ShapeTypeStar16                     ST_ShapeType = 23
	ST_ShapeTypeStar24                     ST_ShapeType = 24
	ST_ShapeTypeStar32                     ST_ShapeType = 25
	ST_ShapeTypeRoundRect                  ST_ShapeType = 26
	ST_ShapeTypeRound1Rect                 ST_ShapeType = 27
	ST_ShapeTypeRound2SameRect             ST_ShapeType = 28
	ST_ShapeTypeRound2DiagRect             ST_ShapeType = 29
	ST_ShapeTypeSnipRoundRect              ST_ShapeType = 30
	ST_ShapeTypeSnip1Rect                  ST_ShapeType = 31
	ST_ShapeTypeSnip2SameRect              ST_ShapeType = 32
	ST_ShapeTypeSnip2DiagRect              ST_ShapeType = 33
	ST_ShapeTypePlaque                     ST_ShapeType = 34
	ST_ShapeTypeEllipse                    ST_ShapeType = 35
	ST_ShapeTypeTeardrop                   ST_ShapeType = 36
	ST_ShapeTypeHomePlate                  ST_ShapeType = 37
	ST_ShapeTypeChevron                    ST_ShapeType = 38
	ST_ShapeTypePieWedge                   ST_ShapeType = 39
	ST_ShapeTypePie                        ST_ShapeType = 40
	ST_ShapeTypeBlockArc                   ST_ShapeType = 41
	ST_ShapeTypeDonut                      ST_ShapeType = 42
	ST_ShapeTypeNoSmoking                  ST_ShapeType = 43
	ST_ShapeTypeRightArrow                 ST_ShapeType = 44
	ST_ShapeTypeLeftArrow                  ST_ShapeType = 45
	ST_ShapeTypeUpArrow                    ST_ShapeType = 46
	ST_ShapeTypeDownArrow                  ST_ShapeType = 47
	ST_ShapeTypeStripedRightArrow          ST_ShapeType = 48
	ST_ShapeTypeNotchedRightArrow          ST_ShapeType = 49
	ST_ShapeTypeBentUpArrow                ST_ShapeType = 50
	ST_ShapeTypeLeftRightArrow             ST_ShapeType = 51
	ST_ShapeTypeUpDownArrow                ST_ShapeType = 52
	ST_ShapeTypeLeftUpArrow                ST_ShapeType = 53
	ST_ShapeTypeLeftRightUpArrow           ST_ShapeType = 54
	ST_ShapeTypeQuadArrow                  ST_ShapeType = 55
	ST_ShapeTypeLeftArrowCallout           ST_ShapeType = 56
	ST_ShapeTypeRightArrowCallout          ST_ShapeType = 57
	ST_ShapeTypeUpArrowCallout             ST_ShapeType = 58
	ST_ShapeTypeDownArrowCallout           ST_ShapeType = 59
	ST_ShapeTypeLeftRightArrowCallout      ST_ShapeType = 60
	ST_ShapeTypeUpDownArrowCallout         ST_ShapeType = 61
	ST_ShapeTypeQuadArrowCallout           ST_ShapeType = 62
	ST_ShapeTypeBentArrow                  ST_ShapeType = 63
	ST_ShapeTypeUturnArrow                 ST_ShapeType = 64
	ST_ShapeTypeCircularArrow              ST_ShapeType = 65
	ST_ShapeTypeLeftCircularArrow          ST_ShapeType = 66
	ST_ShapeTypeLeftRightCircularArrow     ST_ShapeType = 67
	ST_ShapeTypeCurvedRightArrow           ST_ShapeType = 68
	ST_ShapeTypeCurvedLeftArrow            ST_ShapeType = 69
	ST_ShapeTypeCurvedUpArrow              ST_ShapeType = 70
	ST_ShapeTypeCurvedDownArrow            ST_ShapeType = 71
	ST_ShapeTypeSwooshArrow                ST_ShapeType = 72
	ST_ShapeTypeCube                       ST_ShapeType = 73
	ST_ShapeTypeCan                        ST_ShapeType = 74
	ST_ShapeTypeLightningBolt              ST_ShapeType = 75
	ST_ShapeTypeHeart                      ST_ShapeType = 76
	ST_ShapeTypeSun                        ST_ShapeType = 77
	ST_ShapeTypeMoon                       ST_ShapeType = 78
	ST_ShapeTypeSmileyFace                 ST_ShapeType = 79
	ST_ShapeTypeIrregularSeal1             ST_ShapeType = 80
	ST_ShapeTypeIrregularSeal2             ST_ShapeType = 81
	ST_ShapeTypeFoldedCorner               ST_ShapeType = 82
	ST_ShapeTypeBevel                      ST_ShapeType = 83
	ST_ShapeTypeFrame                      ST_ShapeType = 84
	ST_ShapeTypeHalfFrame                  ST_ShapeType = 85
	ST_ShapeTypeCorner                     ST_ShapeType = 86
	ST_ShapeTypeDiagStripe                 ST_ShapeType = 87
	ST_ShapeTypeChord                      ST_ShapeType = 88
	ST_ShapeTypeArc                        ST_ShapeType = 89
	ST_ShapeTypeLeftBracket                ST_ShapeType = 90
	ST_ShapeTypeRightBracket               ST_ShapeType = 91
	ST_ShapeTypeLeftBrace                  ST_ShapeType = 92
	ST_ShapeTypeRightBrace                 ST_ShapeType = 93
	ST_ShapeTypeBracketPair                ST_ShapeType = 94
	ST_ShapeTypeBracePair                  ST_ShapeType = 95
	ST_ShapeTypeStraightConnector1         ST_ShapeType = 96
	ST_ShapeTypeBentConnector2             ST_ShapeType = 97
	ST_ShapeTypeBentConnector3             ST_ShapeType = 98
	ST_ShapeTypeBentConnector4             ST_ShapeType = 99
	ST_ShapeTypeBentConnector5             ST_ShapeType = 100
	ST_ShapeTypeCurvedConnector2           ST_ShapeType = 101
	ST_ShapeTypeCurvedConnector3           ST_ShapeType = 102
	ST_ShapeTypeCurvedConnector4           ST_ShapeType = 103
	ST_ShapeTypeCurvedConnector5           ST_ShapeType = 104
	ST_ShapeTypeCallout1                   ST_ShapeType = 105
	ST_ShapeTypeCallout2                   ST_ShapeType = 106
	ST_ShapeTypeCallout3                   ST_ShapeType = 107
	ST_ShapeTypeAccentCallout1             ST_ShapeType = 108
	ST_ShapeTypeAccentCallout2             ST_ShapeType = 109
	ST_ShapeTypeAccentCallout3             ST_ShapeType = 110
	ST_ShapeTypeBorderCallout1             ST_ShapeType = 111
	ST_ShapeTypeBorderCallout2             ST_ShapeType = 112
	ST_ShapeTypeBorderCallout3             ST_ShapeType = 113
	ST_ShapeTypeAccentBorderCallout1       ST_ShapeType = 114
	ST_ShapeTypeAccentBorderCallout2       ST_ShapeType = 115
	ST_ShapeTypeAccentBorderCallout3       ST_ShapeType = 116
	ST_ShapeTypeWedgeRectCallout           ST_ShapeType = 117
	ST_ShapeTypeWedgeRoundRectCallout      ST_ShapeType = 118
	ST_ShapeTypeWedgeEllipseCallout        ST_ShapeType = 119
	ST_ShapeTypeCloudCallout               ST_ShapeType = 120
	ST_ShapeTypeCloud                      ST_ShapeType = 121
	ST_ShapeTypeRibbon                     ST_ShapeType = 122
	ST_ShapeTypeRibbon2                    ST_ShapeType = 123
	ST_ShapeTypeEllipseRibbon              ST_ShapeType = 124
	ST_ShapeTypeEllipseRibbon2             ST_ShapeType = 125
	ST_ShapeTypeLeftRightRibbon            ST_ShapeType = 126
	ST_ShapeTypeVerticalScroll             ST_ShapeType = 127
	ST_ShapeTypeHorizontalScroll           ST_ShapeType = 128
	ST_ShapeTypeWave                       ST_ShapeType = 129
	ST_ShapeTypeDoubleWave                 ST_ShapeType = 130
	ST_ShapeTypePlus                       ST_ShapeType = 131
	ST_ShapeTypeFlowChartProcess           ST_ShapeType = 132
	ST_ShapeTypeFlowChartDecision          ST_ShapeType = 133
	ST_ShapeTypeFlowChartInputOutput       ST_ShapeType = 134
	ST_ShapeTypeFlowChartPredefinedProcess ST_ShapeType = 135
	ST_ShapeTypeFlowChartInternalStorage   ST_ShapeType = 136
	ST_ShapeTypeFlowChartDocument          ST_ShapeType = 137
	ST_ShapeTypeFlowChartMultidocument     ST_ShapeType = 138
	ST_ShapeTypeFlowChartTerminator        ST_ShapeType = 139
	ST_ShapeTypeFlowChartPreparation       ST_ShapeType = 140
	ST_ShapeTypeFlowChartManualInput       ST_ShapeType = 141
	ST_ShapeTypeFlowChartManualOperation   ST_ShapeType = 142
	ST_ShapeTypeFlowChartConnector         ST_ShapeType = 143
	ST_ShapeTypeFlowChartPunchedCard       ST_ShapeType = 144
	ST_ShapeTypeFlowChartPunchedTape       ST_ShapeType = 145
	ST_ShapeTypeFlowChartSummingJunction   ST_ShapeType = 146
	ST_ShapeTypeFlowChartOr                ST_ShapeType = 147
	ST_ShapeTypeFlowChartCollate           ST_ShapeType = 148
	ST_ShapeTypeFlowChartSort              ST_ShapeType = 149
	ST_ShapeTypeFlowChartExtract           ST_ShapeType = 150
	ST_ShapeTypeFlowChartMerge             ST_ShapeType = 151
	ST_ShapeTypeFlowChartOfflineStorage    ST_ShapeType = 152
	ST_ShapeTypeFlowChartOnlineStorage     ST_ShapeType = 153
	ST_ShapeTypeFlowChartMagneticTape      ST_ShapeType = 154
	ST_ShapeTypeFlowChartMagneticDisk      ST_ShapeType = 155
	ST_ShapeTypeFlowChartMagneticDrum      ST_ShapeType = 156
	ST_ShapeTypeFlowChartDisplay           ST_ShapeType = 157
	ST_ShapeTypeFlowChartDelay             ST_ShapeType = 158
	ST_ShapeTypeFlowChartAlternateProcess  ST_ShapeType = 159
	ST_ShapeTypeFlowChartOffpageConnector  ST_ShapeType = 160
	ST_ShapeTypeActionButtonBlank          ST_ShapeType = 161
	ST_ShapeTypeActionButtonHome           ST_ShapeType = 162
	ST_ShapeTypeActionButtonHelp           ST_ShapeType = 163
	ST_ShapeTypeActionButtonInformation    ST_ShapeType = 164
	ST_ShapeTypeActionButtonForwardNext    ST_ShapeType = 165
	ST_ShapeTypeActionButtonBackPrevious   ST_ShapeType = 166
	ST_ShapeTypeActionButtonEnd            ST_ShapeType = 167
	ST_ShapeTypeActionButtonBeginning      ST_ShapeType = 168
	ST_ShapeTypeActionButtonReturn         ST_ShapeType = 169
	ST_ShapeTypeActionButtonDocument       ST_ShapeType = 170
	ST_ShapeTypeActionButtonSound          ST_ShapeType = 171
	ST_ShapeTypeActionButtonMovie          ST_ShapeType = 172
	ST_ShapeTypeGear6                      ST_ShapeType = 173
	ST_ShapeTypeGear9                      ST_ShapeType = 174
	ST_ShapeTypeFunnel                     ST_ShapeType = 175
	ST_ShapeTypeMathPlus                   ST_ShapeType = 176
	ST_ShapeTypeMathMinus                  ST_ShapeType = 177
	ST_ShapeTypeMathMultiply               ST_ShapeType = 178
	ST_ShapeTypeMathDivide                 ST_ShapeType = 179
	ST_ShapeTypeMathEqual                  ST_ShapeType = 180
	ST_ShapeTypeMathNotEqual               ST_ShapeType = 181
	ST_ShapeTypeCornerTabs                 ST_ShapeType = 182
	ST_ShapeTypeSquareTabs                 ST_ShapeType = 183
	ST_ShapeTypePlaqueTabs                 ST_ShapeType = 184
	ST_ShapeTypeChartX                     ST_ShapeType = 185
	ST_ShapeTypeChartStar                  ST_ShapeType = 186
	ST_ShapeTypeChartPlus                  ST_ShapeType = 187
)

// ValidateWithPath validates the CT_GvmlTextShapeChoice and its children, prefixing error messages with path
func (_acaf *CT_GvmlTextShapeChoice) ValidateWithPath(path string) error {
	if _acaf.UseSpRect != nil {
		if _bfab := _acaf.UseSpRect.ValidateWithPath(path + "\u002f\u0055\u0073\u0065\u0053\u0070\u0052\u0065\u0063\u0074"); _bfab != nil {
			return _bfab
		}
	}
	if _acaf.Xfrm != nil {
		if _fcbd := _acaf.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _fcbd != nil {
			return _fcbd
		}
	}
	return nil
}

type EG_TextBulletSize struct {
	BuSzTx  *CT_TextBulletSizeFollowText
	BuSzPct *CT_TextBulletSizePercent
	BuSzPts *CT_TextBulletSizePoint
}

func (_bcbea *ST_TextWrappingType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_bcbea = 0
	case "\u006e\u006f\u006e\u0065":
		*_bcbea = 1
	case "\u0073\u0071\u0075\u0061\u0072\u0065":
		*_bcbea = 2
	}
	return nil
}

func (_cdcbb *CT_TextCharacterProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cdcbb.KumimojiAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006b\u0075\u006d\u0069\u006d\u006f\u006a\u0069"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_cdcbb.KumimojiAttr))})
	}
	if _cdcbb.LangAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0061\u006e\u0067"}, Value: _gf.Sprintf("\u0025\u0076", *_cdcbb.LangAttr)})
	}
	if _cdcbb.AltLangAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061l\u0074\u004c\u0061\u006e\u0067"}, Value: _gf.Sprintf("\u0025\u0076", *_cdcbb.AltLangAttr)})
	}
	if _cdcbb.SzAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u007a"}, Value: _gf.Sprintf("\u0025\u0076", *_cdcbb.SzAttr)})
	}
	if _cdcbb.BAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_cdcbb.BAttr))})
	}
	if _cdcbb.IAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_cdcbb.IAttr))})
	}
	if _cdcbb.UAttr != ST_TextUnderlineTypeUnset {
		_bbagf, _ggcec := _cdcbb.UAttr.MarshalXMLAttr(_g.Name{Local: "\u0075"})
		if _ggcec != nil {
			return _ggcec
		}
		start.Attr = append(start.Attr, _bbagf)
	}
	if _cdcbb.StrikeAttr != ST_TextStrikeTypeUnset {
		_gdcce, _bgdgd := _cdcbb.StrikeAttr.MarshalXMLAttr(_g.Name{Local: "\u0073\u0074\u0072\u0069\u006b\u0065"})
		if _bgdgd != nil {
			return _bgdgd
		}
		start.Attr = append(start.Attr, _gdcce)
	}
	if _cdcbb.KernAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006b\u0065\u0072\u006e"}, Value: _gf.Sprintf("\u0025\u0076", *_cdcbb.KernAttr)})
	}
	if _cdcbb.CapAttr != ST_TextCapsTypeUnset {
		_gdefgg, _eadfe := _cdcbb.CapAttr.MarshalXMLAttr(_g.Name{Local: "\u0063\u0061\u0070"})
		if _eadfe != nil {
			return _eadfe
		}
		start.Attr = append(start.Attr, _gdefgg)
	}
	if _cdcbb.SpcAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070\u0063"}, Value: _gf.Sprintf("\u0025\u0076", *_cdcbb.SpcAttr)})
	}
	if _cdcbb.NormalizeHAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0048"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_cdcbb.NormalizeHAttr))})
	}
	if _cdcbb.BaselineAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u0061\u0073\u0065\u006c\u0069\u006e\u0065"}, Value: _gf.Sprintf("\u0025\u0076", *_cdcbb.BaselineAttr)})
	}
	if _cdcbb.NoProofAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0050\u0072\u006f\u006f\u0066"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_cdcbb.NoProofAttr))})
	}
	if _cdcbb.DirtyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0072t\u0079"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_cdcbb.DirtyAttr))})
	}
	if _cdcbb.ErrAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0065\u0072\u0072"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_cdcbb.ErrAttr))})
	}
	if _cdcbb.SmtCleanAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u006d\u0074\u0043\u006c\u0065\u0061\u006e"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_cdcbb.SmtCleanAttr))})
	}
	if _cdcbb.SmtIdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u006d\u0074I\u0064"}, Value: _gf.Sprintf("\u0025\u0076", *_cdcbb.SmtIdAttr)})
	}
	if _cdcbb.BmkAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u006d\u006b"}, Value: _gf.Sprintf("\u0025\u0076", *_cdcbb.BmkAttr)})
	}
	e.EncodeToken(start)
	if _cdcbb.Ln != nil {
		_agdcfb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_cdcbb.Ln, _agdcfb)
	}
	if _cdcbb.NoFill != nil {
		_ebddf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cdcbb.NoFill, _ebddf)
	}
	if _cdcbb.SolidFill != nil {
		_gfabcc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cdcbb.SolidFill, _gfabcc)
	}
	if _cdcbb.GradFill != nil {
		_affff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cdcbb.GradFill, _affff)
	}
	if _cdcbb.BlipFill != nil {
		_beefa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cdcbb.BlipFill, _beefa)
	}
	if _cdcbb.PattFill != nil {
		_cgbbf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cdcbb.PattFill, _cgbbf)
	}
	if _cdcbb.GrpFill != nil {
		_edgag := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_cdcbb.GrpFill, _edgag)
	}
	if _cdcbb.EffectLst != nil {
		_ffbfd := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cdcbb.EffectLst, _ffbfd)
	}
	if _cdcbb.EffectDag != nil {
		_agfca := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_cdcbb.EffectDag, _agfca)
	}
	if _cdcbb.Highlight != nil {
		_ebgcc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_cdcbb.Highlight, _ebgcc)
	}
	if _cdcbb.ULnTx != nil {
		_eaac := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0075\u004c\u006e\u0054\u0078"}}
		e.EncodeElement(_cdcbb.ULnTx, _eaac)
	}
	if _cdcbb.ULn != nil {
		_egdcg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0075L\u006e"}}
		e.EncodeElement(_cdcbb.ULn, _egdcg)
	}
	if _cdcbb.UFillTx != nil {
		_ecca := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c\u0054x"}}
		e.EncodeElement(_cdcbb.UFillTx, _ecca)
	}
	if _cdcbb.UFill != nil {
		_daecf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cdcbb.UFill, _daecf)
	}
	if _cdcbb.Latin != nil {
		_dceef := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0061\u0074\u0069\u006e"}}
		e.EncodeElement(_cdcbb.Latin, _dceef)
	}
	if _cdcbb.Ea != nil {
		_abcad := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0061"}}
		e.EncodeElement(_cdcbb.Ea, _abcad)
	}
	if _cdcbb.Cs != nil {
		_ebgcb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0073"}}
		e.EncodeElement(_cdcbb.Cs, _ebgcb)
	}
	if _cdcbb.Sym != nil {
		_bbdadb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073y\u006d"}}
		e.EncodeElement(_cdcbb.Sym, _bbdadb)
	}
	if _cdcbb.HlinkClick != nil {
		_aegfcb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068l\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}}
		e.EncodeElement(_cdcbb.HlinkClick, _aegfcb)
	}
	if _cdcbb.HlinkMouseOver != nil {
		_cdbfg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003ah\u006c\u0069\u006ek\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"}}
		e.EncodeElement(_cdcbb.HlinkMouseOver, _cdbfg)
	}
	if _cdcbb.Rtl != nil {
		_bfegg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072t\u006c"}}
		e.EncodeElement(_cdcbb.Rtl, _bfegg)
	}
	if _cdcbb.ExtLst != nil {
		_bbgge := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cdcbb.ExtLst, _bbgge)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bcdce *ST_TextVertOverflowType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_bcdce = 0
	case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
		*_bcdce = 1
	case "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073":
		*_bcdce = 2
	case "\u0063\u006c\u0069\u0070":
		*_bcdce = 3
	}
	return nil
}

type CT_BlurEffect struct {
	RadAttr  *int64
	GrowAttr *bool
}

func (_cecef *EG_ShadeProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_geccd:
	for {
		_gfbcc, _aacf := d.Token()
		if _aacf != nil {
			return _aacf
		}
		switch _baebe := _gfbcc.(type) {
		case _g.StartElement:
			switch _baebe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}:
				_cecef.Lin = NewCT_LinearShadeProperties()
				if _cacde := d.DecodeElement(_cecef.Lin, &_baebe); _cacde != nil {
					return _cacde
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}:
				_cecef.Path = NewCT_PathShadeProperties()
				if _debcc := d.DecodeElement(_cecef.Path, &_baebe); _debcc != nil {
					return _debcc
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u0068\u0061\u0064\u0065\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _baebe.Name)
				if _ddffd := d.Skip(); _ddffd != nil {
					return _ddffd
				}
			}
		case _g.EndElement:
			break _geccd
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ClipboardStyleSheet and its children
func (_eac *CT_ClipboardStyleSheet) Validate() error {
	return _eac.ValidateWithPath("\u0043\u0054\u005f\u0043li\u0070\u0062\u006f\u0061\u0072\u0064\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065e\u0074")
}

// ValidateWithPath validates the CT_TableCellProperties and its children, prefixing error messages with path
func (_degf *CT_TableCellProperties) ValidateWithPath(path string) error {
	if _degf.MarLAttr != nil {
		if _adgac := _degf.MarLAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u004c\u0041\u0074\u0074r"); _adgac != nil {
			return _adgac
		}
	}
	if _degf.MarRAttr != nil {
		if _ccegb := _degf.MarRAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u0052\u0041\u0074\u0074r"); _ccegb != nil {
			return _ccegb
		}
	}
	if _degf.MarTAttr != nil {
		if _afge := _degf.MarTAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u0054\u0041\u0074\u0074r"); _afge != nil {
			return _afge
		}
	}
	if _degf.MarBAttr != nil {
		if _cdcfc := _degf.MarBAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u0042\u0041\u0074\u0074r"); _cdcfc != nil {
			return _cdcfc
		}
	}
	if _gbeed := _degf.VertAttr.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u0041\u0074\u0074r"); _gbeed != nil {
		return _gbeed
	}
	if _ebfc := _degf.AnchorAttr.ValidateWithPath(path + "/\u0041\u006e\u0063\u0068\u006f\u0072\u0041\u0074\u0074\u0072"); _ebfc != nil {
		return _ebfc
	}
	if _afgde := _degf.HorzOverflowAttr.ValidateWithPath(path + "\u002f\u0048\u006f\u0072\u007a\u004f\u0076\u0065\u0072\u0066\u006c\u006fw\u0041\u0074\u0074\u0072"); _afgde != nil {
		return _afgde
	}
	if _degf.LnL != nil {
		if _gffge := _degf.LnL.ValidateWithPath(path + "\u002f\u004c\u006e\u004c"); _gffge != nil {
			return _gffge
		}
	}
	if _degf.LnR != nil {
		if _ecbae := _degf.LnR.ValidateWithPath(path + "\u002f\u004c\u006e\u0052"); _ecbae != nil {
			return _ecbae
		}
	}
	if _degf.LnT != nil {
		if _gfacc := _degf.LnT.ValidateWithPath(path + "\u002f\u004c\u006e\u0054"); _gfacc != nil {
			return _gfacc
		}
	}
	if _degf.LnB != nil {
		if _gabda := _degf.LnB.ValidateWithPath(path + "\u002f\u004c\u006e\u0042"); _gabda != nil {
			return _gabda
		}
	}
	if _degf.LnTlToBr != nil {
		if _dcedc := _degf.LnTlToBr.ValidateWithPath(path + "\u002fL\u006e\u0054\u006c\u0054\u006f\u0042r"); _dcedc != nil {
			return _dcedc
		}
	}
	if _degf.LnBlToTr != nil {
		if _efcbe := _degf.LnBlToTr.ValidateWithPath(path + "\u002fL\u006e\u0042\u006c\u0054\u006f\u0054r"); _efcbe != nil {
			return _efcbe
		}
	}
	if _degf.Cell3D != nil {
		if _becac := _degf.Cell3D.ValidateWithPath(path + "\u002fC\u0065\u006c\u006c\u0033\u0044"); _becac != nil {
			return _becac
		}
	}
	if _degf.NoFill != nil {
		if _ecae := _degf.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _ecae != nil {
			return _ecae
		}
	}
	if _degf.SolidFill != nil {
		if _gcgbg := _degf.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _gcgbg != nil {
			return _gcgbg
		}
	}
	if _degf.GradFill != nil {
		if _cdae := _degf.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _cdae != nil {
			return _cdae
		}
	}
	if _degf.BlipFill != nil {
		if _ffcfg := _degf.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _ffcfg != nil {
			return _ffcfg
		}
	}
	if _degf.PattFill != nil {
		if _gaadd := _degf.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _gaadd != nil {
			return _gaadd
		}
	}
	if _degf.GrpFill != nil {
		if _faebgd := _degf.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _faebgd != nil {
			return _faebgd
		}
	}
	if _degf.Headers != nil {
		if _bgcc := _degf.Headers.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0073"); _bgcc != nil {
			return _bgcc
		}
	}
	if _degf.ExtLst != nil {
		if _cfffc := _degf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cfffc != nil {
			return _cfffc
		}
	}
	return nil
}

func (_bebcbf *ST_PitchFamily) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cgfgf, _adgfed := d.Token()
	if _adgfed != nil {
		return _adgfed
	}
	if _bafda, _bedgd := _cgfgf.(_g.EndElement); _bedgd && _bafda.Name == start.Name {
		*_bebcbf = 1
		return nil
	}
	if _ebgdgd, _bbdacg := _cgfgf.(_g.CharData); !_bbdacg {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgfgf)
	} else {
		switch string(_ebgdgd) {
		case "":
			*_bebcbf = 0
		case "\u0030\u0030":
			*_bebcbf = 1
		case "\u0030\u0031":
			*_bebcbf = 2
		case "\u0030\u0032":
			*_bebcbf = 3
		case "\u0031\u0036":
			*_bebcbf = 4
		case "\u0031\u0037":
			*_bebcbf = 5
		case "\u0031\u0038":
			*_bebcbf = 6
		case "\u0033\u0032":
			*_bebcbf = 7
		case "\u0033\u0033":
			*_bebcbf = 8
		case "\u0033\u0034":
			*_bebcbf = 9
		case "\u0034\u0038":
			*_bebcbf = 10
		case "\u0034\u0039":
			*_bebcbf = 11
		case "\u0035\u0030":
			*_bebcbf = 12
		case "\u0036\u0034":
			*_bebcbf = 13
		case "\u0036\u0035":
			*_bebcbf = 14
		case "\u0036\u0036":
			*_bebcbf = 15
		case "\u0038\u0030":
			*_bebcbf = 16
		case "\u0038\u0031":
			*_bebcbf = 17
		case "\u0038\u0032":
			*_bebcbf = 18
		}
	}
	_cgfgf, _adgfed = d.Token()
	if _adgfed != nil {
		return _adgfed
	}
	if _feebf, _bfef := _cgfgf.(_g.EndElement); _bfef && _feebf.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgfgf)
}

// ValidateWithPath validates the CT_GlowEffect and its children, prefixing error messages with path
func (_babc *CT_GlowEffect) ValidateWithPath(path string) error {
	if _babc.RadAttr != nil {
		if *_babc.RadAttr < 0 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0061d\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_babc.RadAttr)
		}
		if *_babc.RadAttr > 27273042316900 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0052\u0061\u0064A\u0074\u0074\u0072 m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020%\u0076\u0029", path, *_babc.RadAttr)
		}
	}
	if _babc.ScrgbClr != nil {
		if _adbg := _babc.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _adbg != nil {
			return _adbg
		}
	}
	if _babc.SrgbClr != nil {
		if _gdag := _babc.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _gdag != nil {
			return _gdag
		}
	}
	if _babc.HslClr != nil {
		if _ebdb := _babc.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _ebdb != nil {
			return _ebdb
		}
	}
	if _babc.SysClr != nil {
		if _bfbe := _babc.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _bfbe != nil {
			return _bfbe
		}
	}
	if _babc.SchemeClr != nil {
		if _abfg := _babc.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _abfg != nil {
			return _abfg
		}
	}
	if _babc.PrstClr != nil {
		if _eeceb := _babc.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _eeceb != nil {
			return _eeceb
		}
	}
	return nil
}

func (_dcdce ST_LightRigDirection) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_dcdce.String(), start)
}

func (_effdec ST_TextFontAlignType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bceae := _g.Attr{}
	_bceae.Name = name
	switch _effdec {
	case ST_TextFontAlignTypeUnset:
		_bceae.Value = ""
	case ST_TextFontAlignTypeAuto:
		_bceae.Value = "\u0061\u0075\u0074\u006f"
	case ST_TextFontAlignTypeT:
		_bceae.Value = "\u0074"
	case ST_TextFontAlignTypeCtr:
		_bceae.Value = "\u0063\u0074\u0072"
	case ST_TextFontAlignTypeBase:
		_bceae.Value = "\u0062\u0061\u0073\u0065"
	case ST_TextFontAlignTypeB:
		_bceae.Value = "\u0062"
	}
	return _bceae, nil
}

func (_cecab ST_PresetPatternVal) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_cecab.String(), start)
}

func (_dadca *CT_LineProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ccaefd := range start.Attr {
		if _ccaefd.Name.Local == "\u0077" {
			_bgcff, _eaabf := _c.ParseInt(_ccaefd.Value, 10, 32)
			if _eaabf != nil {
				return _eaabf
			}
			_ffedg := int32(_bgcff)
			_dadca.WAttr = &_ffedg
			continue
		}
		if _ccaefd.Name.Local == "\u0063\u006d\u0070\u0064" {
			_dadca.CmpdAttr.UnmarshalXMLAttr(_ccaefd)
			continue
		}
		if _ccaefd.Name.Local == "\u0063\u0061\u0070" {
			_dadca.CapAttr.UnmarshalXMLAttr(_ccaefd)
			continue
		}
		if _ccaefd.Name.Local == "\u0061\u006c\u0067\u006e" {
			_dadca.AlgnAttr.UnmarshalXMLAttr(_ccaefd)
			continue
		}
	}
_acbf:
	for {
		_cfecg, _cecbc := d.Token()
		if _cecbc != nil {
			return _cecbc
		}
		switch _ccfb := _cfecg.(type) {
		case _g.StartElement:
			switch _ccfb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_dadca.NoFill = NewCT_NoFillProperties()
				if _efdcg := d.DecodeElement(_dadca.NoFill, &_ccfb); _efdcg != nil {
					return _efdcg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_dadca.SolidFill = NewCT_SolidColorFillProperties()
				if _egdc := d.DecodeElement(_dadca.SolidFill, &_ccfb); _egdc != nil {
					return _egdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_dadca.GradFill = NewCT_GradientFillProperties()
				if _efgac := d.DecodeElement(_dadca.GradFill, &_ccfb); _efgac != nil {
					return _efgac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_dadca.PattFill = NewCT_PatternFillProperties()
				if _cabbe := d.DecodeElement(_dadca.PattFill, &_ccfb); _cabbe != nil {
					return _cabbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_dadca.PrstDash = NewCT_PresetLineDashProperties()
				if _bafb := d.DecodeElement(_dadca.PrstDash, &_ccfb); _bafb != nil {
					return _bafb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_dadca.CustDash = NewCT_DashStopList()
				if _daeca := d.DecodeElement(_dadca.CustDash, &_ccfb); _daeca != nil {
					return _daeca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}:
				_dadca.Round = NewCT_LineJoinRound()
				if _dagcd := d.DecodeElement(_dadca.Round, &_ccfb); _dagcd != nil {
					return _dagcd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}:
				_dadca.Bevel = NewCT_LineJoinBevel()
				if _ddbae := d.DecodeElement(_dadca.Bevel, &_ccfb); _ddbae != nil {
					return _ddbae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}:
				_dadca.Miter = NewCT_LineJoinMiterProperties()
				if _dbeba := d.DecodeElement(_dadca.Miter, &_ccfb); _dbeba != nil {
					return _dbeba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0045\u006e\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0045\u006e\u0064"}:
				_dadca.HeadEnd = NewCT_LineEndProperties()
				if _feafd := d.DecodeElement(_dadca.HeadEnd, &_ccfb); _feafd != nil {
					return _feafd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0069\u006c\u0045\u006e\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0069\u006c\u0045\u006e\u0064"}:
				_dadca.TailEnd = NewCT_LineEndProperties()
				if _dacgc := d.DecodeElement(_dadca.TailEnd, &_ccfb); _dacgc != nil {
					return _dacgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dadca.ExtLst = NewCT_OfficeArtExtensionList()
				if _cbead := d.DecodeElement(_dadca.ExtLst, &_ccfb); _cbead != nil {
					return _cbead
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ccfb.Name)
				if _cace := d.Skip(); _cace != nil {
					return _cace
				}
			}
		case _g.EndElement:
			break _acbf
		case _g.CharData:
		}
	}
	return nil
}

func (_ccbeb *CT_TextFont) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065"}, Value: _gf.Sprintf("\u0025\u0076", _ccbeb.TypefaceAttr)})
	if _ccbeb.PanoseAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0070\u0061\u006e\u006f\u0073\u0065"}, Value: _gf.Sprintf("\u0025\u0076", *_ccbeb.PanoseAttr)})
	}
	if _ccbeb.PitchFamilyAttr != ST_PitchFamilyUnset {
		_gcgfc, _aagfe := _ccbeb.PitchFamilyAttr.MarshalXMLAttr(_g.Name{Local: "p\u0069\u0074\u0063\u0068\u0046\u0061\u006d\u0069\u006c\u0079"})
		if _aagfe != nil {
			return _aagfe
		}
		start.Attr = append(start.Attr, _gcgfc)
	}
	if _ccbeb.CharsetAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, Value: _gf.Sprintf("\u0025\u0076", *_ccbeb.CharsetAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ggbdfe *EG_EffectProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bdccbe:
	for {
		_ggbf, _bfcbd := d.Token()
		if _bfcbd != nil {
			return _bfcbd
		}
		switch _febbe := _ggbf.(type) {
		case _g.StartElement:
			switch _febbe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_ggbdfe.EffectLst = NewCT_EffectList()
				if _dabdg := d.DecodeElement(_ggbdfe.EffectLst, &_febbe); _dabdg != nil {
					return _dabdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_ggbdfe.EffectDag = NewCT_EffectContainer()
				if _gafba := d.DecodeElement(_ggbdfe.EffectDag, &_febbe); _gafba != nil {
					return _gafba
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0045\u0047\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _febbe.Name)
				if _bdffg := d.Skip(); _bdffg != nil {
					return _bdffg
				}
			}
		case _g.EndElement:
			break _bdccbe
		case _g.CharData:
		}
	}
	return nil
}

func (_egda *CT_NonVisualConnectorProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cggd:
	for {
		_gcdg, _babdg := d.Token()
		if _babdg != nil {
			return _babdg
		}
		switch _eggae := _gcdg.(type) {
		case _g.StartElement:
			switch _eggae.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}:
				_egda.CxnSpLocks = NewCT_ConnectorLocking()
				if _fceb := d.DecodeElement(_egda.CxnSpLocks, &_eggae); _fceb != nil {
					return _fceb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0043x\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0043x\u006e"}:
				_egda.StCxn = NewCT_Connection()
				if _faadd := d.DecodeElement(_egda.StCxn, &_eggae); _faadd != nil {
					return _faadd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u0078\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u0078\u006e"}:
				_egda.EndCxn = NewCT_Connection()
				if _cbee := d.DecodeElement(_egda.EndCxn, &_eggae); _cbee != nil {
					return _cbee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_egda.ExtLst = NewCT_OfficeArtExtensionList()
				if _dgad := d.DecodeElement(_egda.ExtLst, &_eggae); _dgad != nil {
					return _dgad
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065l\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006cC\u006f\u006en\u0065\u0063\u0074\u006fr\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _eggae.Name)
				if _bgea := d.Skip(); _bgea != nil {
					return _bgea
				}
			}
		case _g.EndElement:
			break _cggd
		case _g.CharData:
		}
	}
	return nil
}

func (_eccfce ST_TextCapsType) String() string {
	switch _eccfce {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u006d\u0061l\u006c"
	case 3:
		return "\u0061\u006c\u006c"
	}
	return ""
}

func (_ceccag ST_LineEndWidth) String() string {
	switch _ceccag {
	case 0:
		return ""
	case 1:
		return "\u0073\u006d"
	case 2:
		return "\u006d\u0065\u0064"
	case 3:
		return "\u006c\u0067"
	}
	return ""
}

func (_ddbef ST_PresetPatternVal) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_dfca := _g.Attr{}
	_dfca.Name = name
	switch _ddbef {
	case ST_PresetPatternValUnset:
		_dfca.Value = ""
	case ST_PresetPatternValPct5:
		_dfca.Value = "\u0070\u0063\u0074\u0035"
	case ST_PresetPatternValPct10:
		_dfca.Value = "\u0070\u0063\u00741\u0030"
	case ST_PresetPatternValPct20:
		_dfca.Value = "\u0070\u0063\u00742\u0030"
	case ST_PresetPatternValPct25:
		_dfca.Value = "\u0070\u0063\u00742\u0035"
	case ST_PresetPatternValPct30:
		_dfca.Value = "\u0070\u0063\u00743\u0030"
	case ST_PresetPatternValPct40:
		_dfca.Value = "\u0070\u0063\u00744\u0030"
	case ST_PresetPatternValPct50:
		_dfca.Value = "\u0070\u0063\u00745\u0030"
	case ST_PresetPatternValPct60:
		_dfca.Value = "\u0070\u0063\u00746\u0030"
	case ST_PresetPatternValPct70:
		_dfca.Value = "\u0070\u0063\u00747\u0030"
	case ST_PresetPatternValPct75:
		_dfca.Value = "\u0070\u0063\u00747\u0035"
	case ST_PresetPatternValPct80:
		_dfca.Value = "\u0070\u0063\u00748\u0030"
	case ST_PresetPatternValPct90:
		_dfca.Value = "\u0070\u0063\u00749\u0030"
	case ST_PresetPatternValHorz:
		_dfca.Value = "\u0068\u006f\u0072\u007a"
	case ST_PresetPatternValVert:
		_dfca.Value = "\u0076\u0065\u0072\u0074"
	case ST_PresetPatternValLtHorz:
		_dfca.Value = "\u006c\u0074\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValLtVert:
		_dfca.Value = "\u006c\u0074\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValDkHorz:
		_dfca.Value = "\u0064\u006b\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValDkVert:
		_dfca.Value = "\u0064\u006b\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValNarHorz:
		_dfca.Value = "\u006ea\u0072\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValNarVert:
		_dfca.Value = "\u006ea\u0072\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValDashHorz:
		_dfca.Value = "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValDashVert:
		_dfca.Value = "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValCross:
		_dfca.Value = "\u0063\u0072\u006fs\u0073"
	case ST_PresetPatternValDnDiag:
		_dfca.Value = "\u0064\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValUpDiag:
		_dfca.Value = "\u0075\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValLtDnDiag:
		_dfca.Value = "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValLtUpDiag:
		_dfca.Value = "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDkDnDiag:
		_dfca.Value = "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDkUpDiag:
		_dfca.Value = "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValWdDnDiag:
		_dfca.Value = "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValWdUpDiag:
		_dfca.Value = "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDashDnDiag:
		_dfca.Value = "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDashUpDiag:
		_dfca.Value = "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDiagCross:
		_dfca.Value = "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s"
	case ST_PresetPatternValSmCheck:
		_dfca.Value = "\u0073m\u0043\u0068\u0065\u0063\u006b"
	case ST_PresetPatternValLgCheck:
		_dfca.Value = "\u006cg\u0043\u0068\u0065\u0063\u006b"
	case ST_PresetPatternValSmGrid:
		_dfca.Value = "\u0073\u006d\u0047\u0072\u0069\u0064"
	case ST_PresetPatternValLgGrid:
		_dfca.Value = "\u006c\u0067\u0047\u0072\u0069\u0064"
	case ST_PresetPatternValDotGrid:
		_dfca.Value = "\u0064o\u0074\u0047\u0072\u0069\u0064"
	case ST_PresetPatternValSmConfetti:
		_dfca.Value = "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case ST_PresetPatternValLgConfetti:
		_dfca.Value = "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case ST_PresetPatternValHorzBrick:
		_dfca.Value = "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k"
	case ST_PresetPatternValDiagBrick:
		_dfca.Value = "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k"
	case ST_PresetPatternValSolidDmnd:
		_dfca.Value = "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed"
	case ST_PresetPatternValOpenDmnd:
		_dfca.Value = "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064"
	case ST_PresetPatternValDotDmnd:
		_dfca.Value = "\u0064o\u0074\u0044\u006d\u006e\u0064"
	case ST_PresetPatternValPlaid:
		_dfca.Value = "\u0070\u006c\u0061i\u0064"
	case ST_PresetPatternValSphere:
		_dfca.Value = "\u0073\u0070\u0068\u0065\u0072\u0065"
	case ST_PresetPatternValWeave:
		_dfca.Value = "\u0077\u0065\u0061v\u0065"
	case ST_PresetPatternValDivot:
		_dfca.Value = "\u0064\u0069\u0076o\u0074"
	case ST_PresetPatternValShingle:
		_dfca.Value = "\u0073h\u0069\u006e\u0067\u006c\u0065"
	case ST_PresetPatternValWave:
		_dfca.Value = "\u0077\u0061\u0076\u0065"
	case ST_PresetPatternValTrellis:
		_dfca.Value = "\u0074r\u0065\u006c\u006c\u0069\u0073"
	case ST_PresetPatternValZigZag:
		_dfca.Value = "\u007a\u0069\u0067\u005a\u0061\u0067"
	}
	return _dfca, nil
}

func (_cgegf *CT_Table) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cgegf.TblGrid = NewCT_TableGrid()
_cdeae:
	for {
		_agfef, _bcbfb := d.Token()
		if _bcbfb != nil {
			return _bcbfb
		}
		switch _gfecc := _agfef.(type) {
		case _g.StartElement:
			switch _gfecc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}:
				_cgegf.TblPr = NewCT_TableProperties()
				if _efabdb := d.DecodeElement(_cgegf.TblPr, &_gfecc); _efabdb != nil {
					return _efabdb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}:
				if _cdgbf := d.DecodeElement(_cgegf.TblGrid, &_gfecc); _cdgbf != nil {
					return _cdgbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}:
				_bdccf := NewCT_TableRow()
				if _gdefg := d.DecodeElement(_bdccf, &_gfecc); _gdefg != nil {
					return _gdefg
				}
				_cgegf.Tr = append(_cgegf.Tr, _bdccf)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0020\u0025\u0076", _gfecc.Name)
				if _fggf := d.Skip(); _fggf != nil {
					return _fggf
				}
			}
		case _g.EndElement:
			break _cdeae
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TableStyleCellStyle and its children
func (_bcgbc *CT_TableStyleCellStyle) Validate() error {
	return _bcgbc.ValidateWithPath("\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0043\u0065\u006c\u006c\u0053\u0074\u0079l\u0065")
}

// Validate validates the CT_NonVisualDrawingProps and its children
func (_efebd *CT_NonVisualDrawingProps) Validate() error {
	return _efebd.ValidateWithPath("\u0043T\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044r\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006f\u0070\u0073")
}

// ValidateWithPath validates the Graphic and its children, prefixing error messages with path
func (_gbcag *Graphic) ValidateWithPath(path string) error {
	if _eebafa := _gbcag.CT_GraphicalObject.ValidateWithPath(path); _eebafa != nil {
		return _eebafa
	}
	return nil
}

func (_eceed *CT_TextListStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_eefddc:
	for {
		_fbed, _eabdg := d.Token()
		if _eabdg != nil {
			return _eabdg
		}
		switch _dadba := _fbed.(type) {
		case _g.StartElement:
			switch _dadba.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0050\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0050\u0050\u0072"}:
				_eceed.DefPPr = NewCT_TextParagraphProperties()
				if _ecgada := d.DecodeElement(_eceed.DefPPr, &_dadba); _ecgada != nil {
					return _ecgada
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0031\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0031\u0070\u0050\u0072"}:
				_eceed.Lvl1pPr = NewCT_TextParagraphProperties()
				if _bbdcfd := d.DecodeElement(_eceed.Lvl1pPr, &_dadba); _bbdcfd != nil {
					return _bbdcfd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0032\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0032\u0070\u0050\u0072"}:
				_eceed.Lvl2pPr = NewCT_TextParagraphProperties()
				if _fbab := d.DecodeElement(_eceed.Lvl2pPr, &_dadba); _fbab != nil {
					return _fbab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0033\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0033\u0070\u0050\u0072"}:
				_eceed.Lvl3pPr = NewCT_TextParagraphProperties()
				if _fegfg := d.DecodeElement(_eceed.Lvl3pPr, &_dadba); _fegfg != nil {
					return _fegfg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0034\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0034\u0070\u0050\u0072"}:
				_eceed.Lvl4pPr = NewCT_TextParagraphProperties()
				if _afcac := d.DecodeElement(_eceed.Lvl4pPr, &_dadba); _afcac != nil {
					return _afcac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0035\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0035\u0070\u0050\u0072"}:
				_eceed.Lvl5pPr = NewCT_TextParagraphProperties()
				if _geegb := d.DecodeElement(_eceed.Lvl5pPr, &_dadba); _geegb != nil {
					return _geegb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0036\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0036\u0070\u0050\u0072"}:
				_eceed.Lvl6pPr = NewCT_TextParagraphProperties()
				if _bdggb := d.DecodeElement(_eceed.Lvl6pPr, &_dadba); _bdggb != nil {
					return _bdggb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0037\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0037\u0070\u0050\u0072"}:
				_eceed.Lvl7pPr = NewCT_TextParagraphProperties()
				if _fegab := d.DecodeElement(_eceed.Lvl7pPr, &_dadba); _fegab != nil {
					return _fegab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0038\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0038\u0070\u0050\u0072"}:
				_eceed.Lvl8pPr = NewCT_TextParagraphProperties()
				if _dadccd := d.DecodeElement(_eceed.Lvl8pPr, &_dadba); _dadccd != nil {
					return _dadccd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0039\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0039\u0070\u0050\u0072"}:
				_eceed.Lvl9pPr = NewCT_TextParagraphProperties()
				if _cgfc := d.DecodeElement(_eceed.Lvl9pPr, &_dadba); _cgfc != nil {
					return _cgfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eceed.ExtLst = NewCT_OfficeArtExtensionList()
				if _decfe := d.DecodeElement(_eceed.ExtLst, &_dadba); _decfe != nil {
					return _decfe
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u004c\u0069\u0073\u0074\u0053\u0074\u0079\u006c\u0065\u0020\u0025v", _dadba.Name)
				if _eddc := d.Skip(); _eddc != nil {
					return _eddc
				}
			}
		case _g.EndElement:
			break _eefddc
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_FillProperties() *CT_FillProperties { _acgda := &CT_FillProperties{}; return _acgda }

func (_feee *CT_EffectStyleItem) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _feee.EffectLst != nil {
		_gcac := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_feee.EffectLst, _gcac)
	}
	if _feee.EffectDag != nil {
		_eefbf := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_feee.EffectDag, _eefbf)
	}
	if _feee.Scene3d != nil {
		_dadcc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_feee.Scene3d, _dadcc)
	}
	if _feee.Sp3d != nil {
		_aeadc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_feee.Sp3d, _aeadc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_Shape3D() *CT_Shape3D { _ccad := &CT_Shape3D{}; return _ccad }

func NewCT_FontCollection() *CT_FontCollection {
	_ccbdf := &CT_FontCollection{}
	_ccbdf.Latin = NewCT_TextFont()
	_ccbdf.Ea = NewCT_TextFont()
	_ccbdf.Cs = NewCT_TextFont()
	return _ccbdf
}

// Validate validates the EG_ThemeableFontStyles and its children
func (_fccfg *EG_ThemeableFontStyles) Validate() error {
	return _fccfg.ValidateWithPath("\u0045\u0047\u005f\u0054he\u006d\u0065\u0061\u0062\u006c\u0065\u0046\u006f\u006e\u0074\u0053\u0074\u0079\u006ce\u0073")
}

// ValidateWithPath validates the CT_PositiveFixedAngle and its children, prefixing error messages with path
func (_fbdac *CT_PositiveFixedAngle) ValidateWithPath(path string) error {
	if _fbdac.ValAttr < 0 {
		return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _fbdac.ValAttr)
	}
	if _fbdac.ValAttr >= 21600000 {
		return _gf.Errorf("\u0025\u0073\u002f\u006d\u002eV\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _fbdac.ValAttr)
	}
	return nil
}

func (_eegaf ST_ChartBuildStep) ValidateWithPath(path string) error {
	switch _eegaf {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eegaf))
	}
	return nil
}

func NewCT_PresetTextShape() *CT_PresetTextShape {
	_fdgb := &CT_PresetTextShape{}
	_fdgb.PrstAttr = ST_TextShapeType(1)
	return _fdgb
}

func NewCT_PolarAdjustHandle() *CT_PolarAdjustHandle {
	_fbggb := &CT_PolarAdjustHandle{}
	_fbggb.Pos = NewCT_AdjPoint2D()
	return _fbggb
}

func (_efddc *ST_Coordinate) ValidateWithPath(path string) error {
	_gbgdd := []string{}
	if _efddc.ST_CoordinateUnqualified != nil {
		_gbgdd = append(_gbgdd, "\u0053T\u005f\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065U\u006e\u0071\u0075\u0061\u006c\u0069\u0066\u0069\u0065\u0064")
	}
	if _efddc.ST_UniversalMeasure != nil {
		_gbgdd = append(_gbgdd, "\u0053\u0054\u005f\u0055ni\u0076\u0065\u0072\u0073\u0061\u006c\u004d\u0065\u0061\u0073\u0075\u0072\u0065")
	}
	if len(_gbgdd) > 1 {
		return _gf.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _gbgdd)
	}
	return nil
}

func (_fffdb ST_TextVertOverflowType) Validate() error { return _fffdb.ValidateWithPath("") }

// Validate validates the CT_EffectReference and its children
func (_gedcb *CT_EffectReference) Validate() error {
	return _gedcb.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065")
}

// ValidateWithPath validates the Theme and its children, prefixing error messages with path
func (_eccbfe *Theme) ValidateWithPath(path string) error {
	if _acadb := _eccbfe.CT_OfficeStyleSheet.ValidateWithPath(path); _acadb != nil {
		return _acadb
	}
	return nil
}

// Validate validates the CT_LinearShadeProperties and its children
func (_abffg *CT_LinearShadeProperties) Validate() error {
	return _abffg.ValidateWithPath("\u0043T\u005f\u004c\u0069\u006e\u0065\u0061\u0072\u0053\u0068\u0061\u0064e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_fgage *ST_TextTabAlignType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_eedfb, _cfaea := d.Token()
	if _cfaea != nil {
		return _cfaea
	}
	if _cbgec, _faece := _eedfb.(_g.EndElement); _faece && _cbgec.Name == start.Name {
		*_fgage = 1
		return nil
	}
	if _gfefe, _gcagfe := _eedfb.(_g.CharData); !_gcagfe {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eedfb)
	} else {
		switch string(_gfefe) {
		case "":
			*_fgage = 0
		case "\u006c":
			*_fgage = 1
		case "\u0063\u0074\u0072":
			*_fgage = 2
		case "\u0072":
			*_fgage = 3
		case "\u0064\u0065\u0063":
			*_fgage = 4
		}
	}
	_eedfb, _cfaea = d.Token()
	if _cfaea != nil {
		return _cfaea
	}
	if _ddgecb, _efgcb := _eedfb.(_g.EndElement); _efgcb && _ddgecb.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eedfb)
}

type CT_ConnectionSiteList struct{ Cxn []*CT_ConnectionSite }

// ValidateWithPath validates the CT_TextSpacingPoint and its children, prefixing error messages with path
func (_aefda *CT_TextSpacingPoint) ValidateWithPath(path string) error {
	if _aefda.ValAttr < 0 {
		return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _aefda.ValAttr)
	}
	if _aefda.ValAttr > 158400 {
		return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u003d\u0020\u0031\u0035\u0038\u0034\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, _aefda.ValAttr)
	}
	return nil
}

func (_ccbcgb *EG_ThemeableEffectStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ecefb:
	for {
		_gabgb, _egeba := d.Token()
		if _egeba != nil {
			return _egeba
		}
		switch _bfebe := _gabgb.(type) {
		case _g.StartElement:
			switch _bfebe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_ccbcgb.Effect = NewCT_EffectProperties()
				if _fabdce := d.DecodeElement(_ccbcgb.Effect, &_bfebe); _fabdce != nil {
					return _fabdce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}:
				_ccbcgb.EffectRef = NewCT_StyleMatrixReference()
				if _ccef := d.DecodeElement(_ccbcgb.EffectRef, &_bfebe); _ccef != nil {
					return _ccef
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0045\u0047\u005f\u0054\u0068\u0065\u006d\u0065\u0061\u0062\u006c\u0065E\u0066\u0066\u0065\u0063\u0074\u0053t\u0079\u006c\u0065 \u0025\u0076", _bfebe.Name)
				if _fbbaeg := d.Skip(); _fbbaeg != nil {
					return _fbbaeg
				}
			}
		case _g.EndElement:
			break _ecefb
		case _g.CharData:
		}
	}
	return nil
}

type CT_PresetColor struct {
	ValAttr           ST_PresetColorVal
	EG_ColorTransform []*EG_ColorTransform
}

type CT_TextUnderlineFillFollowText struct{}

func (_fcda *CT_GvmlConnectorNonVisual) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fcda.CNvPr = NewCT_NonVisualDrawingProps()
	_fcda.CNvCxnSpPr = NewCT_NonVisualConnectorProperties()
_gfgfb:
	for {
		_cgbfc, _efcff := d.Token()
		if _efcff != nil {
			return _efcff
		}
		switch _acec := _cgbfc.(type) {
		case _g.StartElement:
			switch _acec.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _fgbag := d.DecodeElement(_fcda.CNvPr, &_acec); _fgbag != nil {
					return _fgbag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}:
				if _cadaa := d.DecodeElement(_fcda.CNvCxnSpPr, &_acec); _cadaa != nil {
					return _cadaa
				}
			default:
				_b.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0043\u006f\u006e\u006ee\u0063t\u006f\u0072\u004e\u006f\u006e\u0056\u0069\u0073u\u0061l\u0020\u0025v", _acec.Name)
				if _bgaf := d.Skip(); _bgaf != nil {
					return _bgaf
				}
			}
		case _g.EndElement:
			break _gfgfb
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_GvmlTextShapeChoice() *CT_GvmlTextShapeChoice {
	_cafec := &CT_GvmlTextShapeChoice{}
	return _cafec
}

func NewCT_TablePartStyle() *CT_TablePartStyle { _fgbe := &CT_TablePartStyle{}; return _fgbe }

func NewThemeManager() *ThemeManager {
	_decef := &ThemeManager{}
	_decef.CT_EmptyElement = *NewCT_EmptyElement()
	return _decef
}

func (_ecef *CT_OfficeArtExtension) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bcac := range start.Attr {
		if _bcac.Name.Local == "\u0075\u0072\u0069" {
			_gdcge, _ebcc := _bcac.Value, error(nil)
			if _ebcc != nil {
				return _ebcc
			}
			_ecef.UriAttr = _gdcge
			continue
		}
	}
_gaaca:
	for {
		_fbfd, _gafgb := d.Token()
		if _gafgb != nil {
			return _gafgb
		}
		switch _ebbgd := _fbfd.(type) {
		case _g.StartElement:
			switch _ebbgd.Name {
			default:
				if _bbde, _bdef := _ga.CreateElement(_ebbgd); _bdef != nil {
					return _bdef
				} else {
					if _fbbda := d.DecodeElement(_bbde, &_ebbgd); _fbbda != nil {
						return _fbbda
					}
					_ecef.Any = append(_ecef.Any, _bbde)
				}
			}
		case _g.EndElement:
			break _gaaca
		case _g.CharData:
		}
	}
	return nil
}

type CT_PositiveFixedAngle struct{ ValAttr int32 }

// ValidateWithPath validates the CT_TableGrid and its children, prefixing error messages with path
func (_dcggf *CT_TableGrid) ValidateWithPath(path string) error {
	for _dggfg, _ccdfb := range _dcggf.GridCol {
		if _gdgbg := _ccdfb.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0047\u0072\u0069\u0064\u0043\u006fl\u005b\u0025\u0064\u005d", path, _dggfg)); _gdgbg != nil {
			return _gdgbg
		}
	}
	return nil
}

type CT_TextBodyProperties struct {
	RotAttr              *int32
	SpcFirstLastParaAttr *bool
	VertOverflowAttr     ST_TextVertOverflowType
	HorzOverflowAttr     ST_TextHorzOverflowType
	VertAttr             ST_TextVerticalType
	WrapAttr             ST_TextWrappingType
	LInsAttr             *ST_Coordinate32
	TInsAttr             *ST_Coordinate32
	RInsAttr             *ST_Coordinate32
	BInsAttr             *ST_Coordinate32
	NumColAttr           *int32
	SpcColAttr           *int32
	RtlColAttr           *bool
	FromWordArtAttr      *bool
	AnchorAttr           ST_TextAnchoringType
	AnchorCtrAttr        *bool
	ForceAAAttr          *bool
	UprightAttr          *bool
	CompatLnSpcAttr      *bool
	PrstTxWarp           *CT_PresetTextShape
	NoAutofit            *CT_TextNoAutofit
	NormAutofit          *CT_TextNormalAutofit
	SpAutoFit            *CT_TextShapeAutofit
	Scene3d              *CT_Scene3D
	Sp3d                 *CT_Shape3D
	FlatTx               *CT_FlatText
	ExtLst               *CT_OfficeArtExtensionList
}

func (_bcdbg ST_PitchFamily) String() string {
	switch _bcdbg {
	case 0:
		return ""
	case 1:
		return "\u0030\u0030"
	case 2:
		return "\u0030\u0031"
	case 3:
		return "\u0030\u0032"
	case 4:
		return "\u0031\u0036"
	case 5:
		return "\u0031\u0037"
	case 6:
		return "\u0031\u0038"
	case 7:
		return "\u0033\u0032"
	case 8:
		return "\u0033\u0033"
	case 9:
		return "\u0033\u0034"
	case 10:
		return "\u0034\u0038"
	case 11:
		return "\u0034\u0039"
	case 12:
		return "\u0035\u0030"
	case 13:
		return "\u0036\u0034"
	case 14:
		return "\u0036\u0035"
	case 15:
		return "\u0036\u0036"
	case 16:
		return "\u0038\u0030"
	case 17:
		return "\u0038\u0031"
	case 18:
		return "\u0038\u0032"
	}
	return ""
}

func NewCT_DuotoneEffect() *CT_DuotoneEffect { _ddgc := &CT_DuotoneEffect{}; return _ddgc }

type ST_TileFlipMode byte

func NewCT_FontReference() *CT_FontReference {
	_bebc := &CT_FontReference{}
	_bebc.IdxAttr = ST_FontCollectionIndex(1)
	return _bebc
}

func NewCT_FillStyleList() *CT_FillStyleList { _fcaf := &CT_FillStyleList{}; return _fcaf }

type AG_Blob struct {
	EmbedAttr *string
	LinkAttr  *string
}

func (_gdfab *EG_LineDashProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gdfab.PrstDash != nil {
		_aedbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_gdfab.PrstDash, _aedbe)
	}
	if _gdfab.CustDash != nil {
		_aabae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_gdfab.CustDash, _aabae)
	}
	return nil
}

func NewCT_GeomGuideList() *CT_GeomGuideList { _dbae := &CT_GeomGuideList{}; return _dbae }

func (_bffde *CT_SchemeColor) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bffde.ValAttr = ST_SchemeColorVal(1)
	for _, _ababb := range start.Attr {
		if _ababb.Name.Local == "\u0076\u0061\u006c" {
			_bffde.ValAttr.UnmarshalXMLAttr(_ababb)
			continue
		}
	}
_debafc:
	for {
		_dacdg, _dgdbd := d.Token()
		if _dgdbd != nil {
			return _dgdbd
		}
		switch _bebg := _dacdg.(type) {
		case _g.StartElement:
			switch _bebg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_dfbff := NewEG_ColorTransform()
				_dfbff.Tint = NewCT_PositiveFixedPercentage()
				if _bdde := d.DecodeElement(_dfbff.Tint, &_bebg); _bdde != nil {
					return _bdde
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _dfbff)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_fdad := NewEG_ColorTransform()
				_fdad.Shade = NewCT_PositiveFixedPercentage()
				if _egcd := d.DecodeElement(_fdad.Shade, &_bebg); _egcd != nil {
					return _egcd
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _fdad)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_eceebd := NewEG_ColorTransform()
				_eceebd.Comp = NewCT_ComplementTransform()
				if _cagee := d.DecodeElement(_eceebd.Comp, &_bebg); _cagee != nil {
					return _cagee
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _eceebd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_eecg := NewEG_ColorTransform()
				_eecg.Inv = NewCT_InverseTransform()
				if _cbbgd := d.DecodeElement(_eecg.Inv, &_bebg); _cbbgd != nil {
					return _cbbgd
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _eecg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_cgeef := NewEG_ColorTransform()
				_cgeef.Gray = NewCT_GrayscaleTransform()
				if _gdbcea := d.DecodeElement(_cgeef.Gray, &_bebg); _gdbcea != nil {
					return _gdbcea
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _cgeef)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_dbacb := NewEG_ColorTransform()
				_dbacb.Alpha = NewCT_PositiveFixedPercentage()
				if _gcfgbb := d.DecodeElement(_dbacb.Alpha, &_bebg); _gcfgbb != nil {
					return _gcfgbb
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _dbacb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_affea := NewEG_ColorTransform()
				_affea.AlphaOff = NewCT_FixedPercentage()
				if _adaab := d.DecodeElement(_affea.AlphaOff, &_bebg); _adaab != nil {
					return _adaab
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _affea)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_fdaab := NewEG_ColorTransform()
				_fdaab.AlphaMod = NewCT_PositivePercentage()
				if _fffad := d.DecodeElement(_fdaab.AlphaMod, &_bebg); _fffad != nil {
					return _fffad
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _fdaab)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_ffcef := NewEG_ColorTransform()
				_ffcef.Hue = NewCT_PositiveFixedAngle()
				if _dfagg := d.DecodeElement(_ffcef.Hue, &_bebg); _dfagg != nil {
					return _dfagg
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _ffcef)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_afdbd := NewEG_ColorTransform()
				_afdbd.HueOff = NewCT_Angle()
				if _deadaa := d.DecodeElement(_afdbd.HueOff, &_bebg); _deadaa != nil {
					return _deadaa
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _afdbd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_bbcdg := NewEG_ColorTransform()
				_bbcdg.HueMod = NewCT_PositivePercentage()
				if _bagf := d.DecodeElement(_bbcdg.HueMod, &_bebg); _bagf != nil {
					return _bagf
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _bbcdg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_dfbge := NewEG_ColorTransform()
				_dfbge.Sat = NewCT_Percentage()
				if _edgbd := d.DecodeElement(_dfbge.Sat, &_bebg); _edgbd != nil {
					return _edgbd
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _dfbge)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_bffae := NewEG_ColorTransform()
				_bffae.SatOff = NewCT_Percentage()
				if _gcgad := d.DecodeElement(_bffae.SatOff, &_bebg); _gcgad != nil {
					return _gcgad
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _bffae)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_ebbgg := NewEG_ColorTransform()
				_ebbgg.SatMod = NewCT_Percentage()
				if _gegc := d.DecodeElement(_ebbgg.SatMod, &_bebg); _gegc != nil {
					return _gegc
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _ebbgg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_egacfc := NewEG_ColorTransform()
				_egacfc.Lum = NewCT_Percentage()
				if _dbgbf := d.DecodeElement(_egacfc.Lum, &_bebg); _dbgbf != nil {
					return _dbgbf
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _egacfc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_dacde := NewEG_ColorTransform()
				_dacde.LumOff = NewCT_Percentage()
				if _eecdb := d.DecodeElement(_dacde.LumOff, &_bebg); _eecdb != nil {
					return _eecdb
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _dacde)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_edbf := NewEG_ColorTransform()
				_edbf.LumMod = NewCT_Percentage()
				if _gdeacd := d.DecodeElement(_edbf.LumMod, &_bebg); _gdeacd != nil {
					return _gdeacd
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _edbf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_cdffg := NewEG_ColorTransform()
				_cdffg.Red = NewCT_Percentage()
				if _fegbb := d.DecodeElement(_cdffg.Red, &_bebg); _fegbb != nil {
					return _fegbb
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _cdffg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_dabad := NewEG_ColorTransform()
				_dabad.RedOff = NewCT_Percentage()
				if _fdcf := d.DecodeElement(_dabad.RedOff, &_bebg); _fdcf != nil {
					return _fdcf
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _dabad)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_fcdb := NewEG_ColorTransform()
				_fcdb.RedMod = NewCT_Percentage()
				if _bdga := d.DecodeElement(_fcdb.RedMod, &_bebg); _bdga != nil {
					return _bdga
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _fcdb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_bcef := NewEG_ColorTransform()
				_bcef.Green = NewCT_Percentage()
				if _aagd := d.DecodeElement(_bcef.Green, &_bebg); _aagd != nil {
					return _aagd
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _bcef)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_gegag := NewEG_ColorTransform()
				_gegag.GreenOff = NewCT_Percentage()
				if _baac := d.DecodeElement(_gegag.GreenOff, &_bebg); _baac != nil {
					return _baac
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _gegag)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_ffec := NewEG_ColorTransform()
				_ffec.GreenMod = NewCT_Percentage()
				if _ggcge := d.DecodeElement(_ffec.GreenMod, &_bebg); _ggcge != nil {
					return _ggcge
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _ffec)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_dbcba := NewEG_ColorTransform()
				_dbcba.Blue = NewCT_Percentage()
				if _feecg := d.DecodeElement(_dbcba.Blue, &_bebg); _feecg != nil {
					return _feecg
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _dbcba)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_dgbee := NewEG_ColorTransform()
				_dgbee.BlueOff = NewCT_Percentage()
				if _eadgb := d.DecodeElement(_dgbee.BlueOff, &_bebg); _eadgb != nil {
					return _eadgb
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _dgbee)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_fgbab := NewEG_ColorTransform()
				_fgbab.BlueMod = NewCT_Percentage()
				if _bdabb := d.DecodeElement(_fgbab.BlueMod, &_bebg); _bdabb != nil {
					return _bdabb
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _fgbab)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_ffffb := NewEG_ColorTransform()
				_ffffb.Gamma = NewCT_GammaTransform()
				if _eebee := d.DecodeElement(_ffffb.Gamma, &_bebg); _eebee != nil {
					return _eebee
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _ffffb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_ffgcb := NewEG_ColorTransform()
				_ffgcb.InvGamma = NewCT_InverseGammaTransform()
				if _bbaff := d.DecodeElement(_ffgcb.InvGamma, &_bebg); _bbaff != nil {
					return _bbaff
				}
				_bffde.EG_ColorTransform = append(_bffde.EG_ColorTransform, _ffgcb)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0065\u0043o\u006co\u0072\u0020\u0025\u0076", _bebg.Name)
				if _efgdf := d.Skip(); _efgdf != nil {
					return _efgdf
				}
			}
		case _g.EndElement:
			break _debafc
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextAutonumberBullet and its children
func (_gaeccf *CT_TextAutonumberBullet) Validate() error {
	return _gaeccf.ValidateWithPath("\u0043\u0054\u005fTe\u0078\u0074\u0041\u0075\u0074\u006f\u006e\u0075\u006d\u0062\u0065\u0072\u0042\u0075\u006c\u006c\u0065\u0074")
}

func (_afaf *CT_ColorSchemeList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _afaf.ExtraClrScheme != nil {
		_ecbbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003ae\u0078\u0074\u0072a\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
		for _, _gfdf := range _afaf.ExtraClrScheme {
			e.EncodeElement(_gfdf, _ecbbe)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_aeg *Blip) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0062\u006c\u0069\u0070"
	return _aeg.CT_Blip.MarshalXML(e, start)
}

type CT_BlipFillProperties struct {
	DpiAttr          *uint32
	RotWithShapeAttr *bool
	Blip             *CT_Blip
	SrcRect          *CT_RelativeRect
	Tile             *CT_TileInfoProperties
	Stretch          *CT_StretchInfoProperties
}

// Validate validates the CT_TableCellBorderStyle and its children
func (_fcdab *CT_TableCellBorderStyle) Validate() error {
	return _fcdab.ValidateWithPath("\u0043\u0054\u005fTa\u0062\u006c\u0065\u0043\u0065\u006c\u006c\u0042\u006f\u0072\u0064\u0065\u0072\u0053\u0074\u0079\u006c\u0065")
}

const ST_TextBulletSizePercentPattern = "\u0030\u002a\u0028\u0028\u0032\u005b\u0035\u002d9\u005d\u0029\u007c([\u0033\u002d\u0039\u005d\u005b\u0030-\u0039\u005d\u0029\u007c\u0028\u005b\u0031\u002d\u0033\u005d\u005b\u0030\u002d\u0039\u005d[\u0030\u002d\u0039\u005d\u0029\u007c\u0034\u00300\u0029\u0025"

func (_gdgec ST_BlipCompression) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_aeea := _g.Attr{}
	_aeea.Name = name
	switch _gdgec {
	case ST_BlipCompressionUnset:
		_aeea.Value = ""
	case ST_BlipCompressionEmail:
		_aeea.Value = "\u0065\u006d\u0061i\u006c"
	case ST_BlipCompressionScreen:
		_aeea.Value = "\u0073\u0063\u0072\u0065\u0065\u006e"
	case ST_BlipCompressionPrint:
		_aeea.Value = "\u0070\u0072\u0069n\u0074"
	case ST_BlipCompressionHqprint:
		_aeea.Value = "\u0068q\u0070\u0072\u0069\u006e\u0074"
	case ST_BlipCompressionNone:
		_aeea.Value = "\u006e\u006f\u006e\u0065"
	}
	return _aeea, nil
}

func (_abac *CT_SRgbColor) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _gf.Sprintf("\u0025\u0076", _abac.ValAttr)})
	e.EncodeToken(start)
	if _abac.EG_ColorTransform != nil {
		for _, _accd := range _abac.EG_ColorTransform {
			_accd.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fdeda *CT_ThemeableLineStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_degcg:
	for {
		_befda, _egeaf := d.Token()
		if _egeaf != nil {
			return _egeaf
		}
		switch _gbcbfc := _befda.(type) {
		case _g.StartElement:
			switch _gbcbfc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_fdeda.Ln = NewCT_LineProperties()
				if _fegag := d.DecodeElement(_fdeda.Ln, &_gbcbfc); _fegag != nil {
					return _fegag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}:
				_fdeda.LnRef = NewCT_StyleMatrixReference()
				if _bfbfbc := d.DecodeElement(_fdeda.LnRef, &_gbcbfc); _bfbfbc != nil {
					return _bfbfbc
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u0068\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u004c\u0069\u006e\u0065\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _gbcbfc.Name)
				if _cdccdb := d.Skip(); _cdccdb != nil {
					return _cdccdb
				}
			}
		case _g.EndElement:
			break _degcg
		case _g.CharData:
		}
	}
	return nil
}

func (_cfbd *CT_LineJoinMiterProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ecfga := range start.Attr {
		if _ecfga.Name.Local == "\u006c\u0069\u006d" {
			_ggfg, _ffae := ParseUnionST_PositivePercentage(_ecfga.Value)
			if _ffae != nil {
				return _ffae
			}
			_cfbd.LimAttr = &_ggfg
			continue
		}
	}
	for {
		_fdbdb, _ggddg := d.Token()
		if _ggddg != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006e\u004d\u0069\u0074\u0065\u0072P\u0072\u006f\u0070\u0065\u0072t\u0069\u0065s\u003a\u0020\u0025\u0073", _ggddg)
		}
		if _eecee, _cafeg := _fdbdb.(_g.EndElement); _cafeg && _eecee.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_AlphaInverseEffect and its children
func (_bffa *CT_AlphaInverseEffect) Validate() error {
	return _bffa.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061I\u006e\u0076\u0065\u0072\u0073e\u0045\u0066\u0066\u0065\u0063\u0074")
}

func NewCT_Headers() *CT_Headers { _agcgc := &CT_Headers{}; return _agcgc }

type CT_GvmlConnectorNonVisual struct {
	CNvPr      *CT_NonVisualDrawingProps
	CNvCxnSpPr *CT_NonVisualConnectorProperties
}

func (_bgac *CT_SoftEdgesEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bgac.RadAttr = 0
	for _, _bbbg := range start.Attr {
		if _bbbg.Name.Local == "\u0072\u0061\u0064" {
			_edcfg, _fbdfcf := _c.ParseInt(_bbbg.Value, 10, 64)
			if _fbdfcf != nil {
				return _fbdfcf
			}
			_bgac.RadAttr = _edcfg
			continue
		}
	}
	for {
		_aacad, _egbga := d.Token()
		if _egbga != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0053\u006f\u0066\u0074\u0045\u0064\u0067e\u0073\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _egbga)
		}
		if _cafadb, _dgeeg := _aacad.(_g.EndElement); _dgeeg && _cafadb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ccedb *CT_Path2DMoveTo) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ccedb.Pt = NewCT_AdjPoint2D()
_feeea:
	for {
		_dbfdad, _gdebb := d.Token()
		if _gdebb != nil {
			return _gdebb
		}
		switch _dfcfb := _dbfdad.(type) {
		case _g.StartElement:
			switch _dfcfb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				if _ebeef := d.DecodeElement(_ccedb.Pt, &_dfcfb); _ebeef != nil {
					return _ebeef
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074h\u0032\u0044\u004d\u006f\u0076\u0065\u0054\u006f\u0020\u0025\u0076", _dfcfb.Name)
				if _gbede := d.Skip(); _gbede != nil {
					return _gbede
				}
			}
		case _g.EndElement:
			break _feeea
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_AlphaFloorEffect() *CT_AlphaFloorEffect { _aeb := &CT_AlphaFloorEffect{}; return _aeb }

type CT_ColorSchemeAndMapping struct {
	ClrScheme *CT_ColorScheme
	ClrMap    *CT_ColorMapping
}

func (_cceac *CT_PresetShadowEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_dbbaf, _adefec := _cceac.PrstAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _adefec != nil {
		return _adefec
	}
	start.Attr = append(start.Attr, _dbbaf)
	if _cceac.DistAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _gf.Sprintf("\u0025\u0076", *_cceac.DistAttr)})
	}
	if _cceac.DirAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0072"}, Value: _gf.Sprintf("\u0025\u0076", *_cceac.DirAttr)})
	}
	e.EncodeToken(start)
	if _cceac.ScrgbClr != nil {
		_egcae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_cceac.ScrgbClr, _egcae)
	}
	if _cceac.SrgbClr != nil {
		_agcgb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_cceac.SrgbClr, _agcgb)
	}
	if _cceac.HslClr != nil {
		_cbgeg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_cceac.HslClr, _cbgeg)
	}
	if _cceac.SysClr != nil {
		_edbac := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_cceac.SysClr, _edbac)
	}
	if _cceac.SchemeClr != nil {
		_aaacg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_cceac.SchemeClr, _aaacg)
	}
	if _cceac.PrstClr != nil {
		_fdage := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_cceac.PrstClr, _fdage)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_PathShadeProperties() *CT_PathShadeProperties {
	_dbdfd := &CT_PathShadeProperties{}
	return _dbdfd
}

// ValidateWithPath validates the CT_PresetLineDashProperties and its children, prefixing error messages with path
func (_aabca *CT_PresetLineDashProperties) ValidateWithPath(path string) error {
	if _ccdfa := _aabca.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ccdfa != nil {
		return _ccdfa
	}
	return nil
}

func (_bdbfg *CT_TextAutonumberBullet) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_bdefgb, _acgee := _bdbfg.TypeAttr.MarshalXMLAttr(_g.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _acgee != nil {
		return _acgee
	}
	start.Attr = append(start.Attr, _bdefgb)
	if _bdbfg.StartAtAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073t\u0061\u0072\u0074\u0041\u0074"}, Value: _gf.Sprintf("\u0025\u0076", *_bdbfg.StartAtAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_GammaTransform() *CT_GammaTransform { _dcbg := &CT_GammaTransform{}; return _dcbg }

func (_fggef ST_PositiveFixedPercentage) String() string {
	if _fggef.ST_PositiveFixedPercentageDecimal != nil {
		return _gf.Sprintf("\u0025\u0076", *_fggef.ST_PositiveFixedPercentageDecimal)
	}
	if _fggef.ST_PositiveFixedPercentage != nil {
		return _fggef.ST_PositiveFixedPercentage.String()
	}
	return ""
}

func (_aacfd *ST_PresetShadowVal) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_acgcf, _dedbf := d.Token()
	if _dedbf != nil {
		return _dedbf
	}
	if _dgefd, _gcfee := _acgcf.(_g.EndElement); _gcfee && _dgefd.Name == start.Name {
		*_aacfd = 1
		return nil
	}
	if _ddbda, _dabfg := _acgcf.(_g.CharData); !_dabfg {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _acgcf)
	} else {
		switch string(_ddbda) {
		case "":
			*_aacfd = 0
		case "\u0073\u0068\u0064w\u0031":
			*_aacfd = 1
		case "\u0073\u0068\u0064w\u0032":
			*_aacfd = 2
		case "\u0073\u0068\u0064w\u0033":
			*_aacfd = 3
		case "\u0073\u0068\u0064w\u0034":
			*_aacfd = 4
		case "\u0073\u0068\u0064w\u0035":
			*_aacfd = 5
		case "\u0073\u0068\u0064w\u0036":
			*_aacfd = 6
		case "\u0073\u0068\u0064w\u0037":
			*_aacfd = 7
		case "\u0073\u0068\u0064w\u0038":
			*_aacfd = 8
		case "\u0073\u0068\u0064w\u0039":
			*_aacfd = 9
		case "\u0073\u0068\u0064\u0077\u0031\u0030":
			*_aacfd = 10
		case "\u0073\u0068\u0064\u0077\u0031\u0031":
			*_aacfd = 11
		case "\u0073\u0068\u0064\u0077\u0031\u0032":
			*_aacfd = 12
		case "\u0073\u0068\u0064\u0077\u0031\u0033":
			*_aacfd = 13
		case "\u0073\u0068\u0064\u0077\u0031\u0034":
			*_aacfd = 14
		case "\u0073\u0068\u0064\u0077\u0031\u0035":
			*_aacfd = 15
		case "\u0073\u0068\u0064\u0077\u0031\u0036":
			*_aacfd = 16
		case "\u0073\u0068\u0064\u0077\u0031\u0037":
			*_aacfd = 17
		case "\u0073\u0068\u0064\u0077\u0031\u0038":
			*_aacfd = 18
		case "\u0073\u0068\u0064\u0077\u0031\u0039":
			*_aacfd = 19
		case "\u0073\u0068\u0064\u0077\u0032\u0030":
			*_aacfd = 20
		}
	}
	_acgcf, _dedbf = d.Token()
	if _dedbf != nil {
		return _dedbf
	}
	if _fcbee, _egbdc := _acgcf.(_g.EndElement); _egbdc && _fcbee.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _acgcf)
}

func (_becgg *CT_TextBody) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_gegbc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006f\u0064\u0079\u0050\u0072"}}
	e.EncodeElement(_becgg.BodyPr, _gegbc)
	if _becgg.LstStyle != nil {
		_gcace := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_becgg.LstStyle, _gcace)
	}
	_fbaea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070"}}
	for _, _adagbg := range _becgg.P {
		e.EncodeElement(_adagbg, _fbaea)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gacg *CT_ColorReplaceEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fffd:
	for {
		_gcfd, _dbgb := d.Token()
		if _dbgb != nil {
			return _dbgb
		}
		switch _aeef := _gcfd.(type) {
		case _g.StartElement:
			switch _aeef.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_gacg.ScrgbClr = NewCT_ScRgbColor()
				if _egaee := d.DecodeElement(_gacg.ScrgbClr, &_aeef); _egaee != nil {
					return _egaee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_gacg.SrgbClr = NewCT_SRgbColor()
				if _gbcf := d.DecodeElement(_gacg.SrgbClr, &_aeef); _gbcf != nil {
					return _gbcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_gacg.HslClr = NewCT_HslColor()
				if _gaff := d.DecodeElement(_gacg.HslClr, &_aeef); _gaff != nil {
					return _gaff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_gacg.SysClr = NewCT_SystemColor()
				if _egffb := d.DecodeElement(_gacg.SysClr, &_aeef); _egffb != nil {
					return _egffb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_gacg.SchemeClr = NewCT_SchemeColor()
				if _agdb := d.DecodeElement(_gacg.SchemeClr, &_aeef); _agdb != nil {
					return _agdb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_gacg.PrstClr = NewCT_PresetColor()
				if _ddfg := d.DecodeElement(_gacg.PrstClr, &_aeef); _ddfg != nil {
					return _ddfg
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0052\u0065\u0070\u006c\u0061\u0063\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _aeef.Name)
				if _cgdc := d.Skip(); _cgdc != nil {
					return _cgdc
				}
			}
		case _g.EndElement:
			break _fffd
		case _g.CharData:
		}
	}
	return nil
}

type CT_OfficeArtExtensionList struct{ Ext []*CT_OfficeArtExtension }

type CT_Path2DMoveTo struct{ Pt *CT_AdjPoint2D }

type CT_DefaultShapeDefinition struct {
	SpPr     *CT_ShapeProperties
	BodyPr   *CT_TextBodyProperties
	LstStyle *CT_TextListStyle
	Style    *CT_ShapeStyle
	ExtLst   *CT_OfficeArtExtensionList
}

func (_gdfca *CT_TextFont) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bbcgc := range start.Attr {
		if _bbcgc.Name.Local == "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065" {
			_beefb, _eddgcd := _bbcgc.Value, error(nil)
			if _eddgcd != nil {
				return _eddgcd
			}
			_gdfca.TypefaceAttr = _beefb
			continue
		}
		if _bbcgc.Name.Local == "\u0070\u0061\u006e\u006f\u0073\u0065" {
			_cbagd, _dfaea := _bbcgc.Value, error(nil)
			if _dfaea != nil {
				return _dfaea
			}
			_gdfca.PanoseAttr = &_cbagd
			continue
		}
		if _bbcgc.Name.Local == "p\u0069\u0074\u0063\u0068\u0046\u0061\u006d\u0069\u006c\u0079" {
			_gdfca.PitchFamilyAttr.UnmarshalXMLAttr(_bbcgc)
			continue
		}
		if _bbcgc.Name.Local == "\u0063h\u0061\u0072\u0073\u0065\u0074" {
			_feggc, _dcgcda := _c.ParseInt(_bbcgc.Value, 10, 8)
			if _dcgcda != nil {
				return _dcgcda
			}
			_adbe := int8(_feggc)
			_gdfca.CharsetAttr = &_adbe
			continue
		}
	}
	for {
		_acfae, _gcccg := d.Token()
		if _gcccg != nil {
			return _gf.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u006f\u006e\u0074\u003a\u0020\u0025\u0073", _gcccg)
		}
		if _eeffa, _gddbe := _acfae.(_g.EndElement); _gddbe && _eeffa.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_BaseStylesOverride() *CT_BaseStylesOverride { _fbf := &CT_BaseStylesOverride{}; return _fbf }

const (
	ST_TextVerticalTypeUnset          ST_TextVerticalType = 0
	ST_TextVerticalTypeHorz           ST_TextVerticalType = 1
	ST_TextVerticalTypeVert           ST_TextVerticalType = 2
	ST_TextVerticalTypeVert270        ST_TextVerticalType = 3
	ST_TextVerticalTypeWordArtVert    ST_TextVerticalType = 4
	ST_TextVerticalTypeEaVert         ST_TextVerticalType = 5
	ST_TextVerticalTypeMongolianVert  ST_TextVerticalType = 6
	ST_TextVerticalTypeWordArtVertRtl ST_TextVerticalType = 7
)

type CT_TextShapeAutofit struct{}

func (_gffaee *ST_TextShapeType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cfbcc, _ddfgfab := d.Token()
	if _ddfgfab != nil {
		return _ddfgfab
	}
	if _bcccb, _dfdb := _cfbcc.(_g.EndElement); _dfdb && _bcccb.Name == start.Name {
		*_gffaee = 1
		return nil
	}
	if _fedec, _accaf := _cfbcc.(_g.CharData); !_accaf {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cfbcc)
	} else {
		switch string(_fedec) {
		case "":
			*_gffaee = 0
		case "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065":
			*_gffaee = 1
		case "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n":
			*_gffaee = 2
		case "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070":
			*_gffaee = 3
		case "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_gffaee = 4
		case "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064":
			*_gffaee = 5
		case "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e":
			*_gffaee = 6
		case "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064":
			*_gffaee = 7
		case "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065":
			*_gffaee = 8
		case "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065":
			*_gffaee = 9
		case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070":
			*_gffaee = 10
		case "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e":
			*_gffaee = 11
		case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065":
			*_gffaee = 12
		case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e":
			*_gffaee = 13
		case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072":
			*_gffaee = 14
		case "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072":
			*_gffaee = 15
		case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072":
			*_gffaee = 16
		case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072":
			*_gffaee = 17
		case "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070":
			*_gffaee = 18
		case "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e":
			*_gffaee = 19
		case "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p":
			*_gffaee = 20
		case "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e":
			*_gffaee = 21
		case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651":
			*_gffaee = 22
		case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652":
			*_gffaee = 23
		case "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031":
			*_gffaee = 24
		case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654":
			*_gffaee = 25
		case "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065":
			*_gffaee = 26
		case "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065":
			*_gffaee = 27
		case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
			*_gffaee = 28
		case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
			*_gffaee = 29
		case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
			*_gffaee = 30
		case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
			*_gffaee = 31
		case "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065":
			*_gffaee = 32
		case "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e":
			*_gffaee = 33
		case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074":
			*_gffaee = 34
		case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074":
			*_gffaee = 35
		case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070":
			*_gffaee = 36
		case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
			*_gffaee = 37
		case "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070":
			*_gffaee = 38
		case "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e":
			*_gffaee = 39
		case "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070":
			*_gffaee = 40
		case "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
			*_gffaee = 41
		}
	}
	_cfbcc, _ddfgfab = d.Token()
	if _ddfgfab != nil {
		return _ddfgfab
	}
	if _agdcb, _cefe := _cfbcc.(_g.EndElement); _cefe && _agdcb.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cfbcc)
}

// Validate validates the CT_GeomRect and its children
func (_bgab *CT_GeomRect) Validate() error {
	return _bgab.ValidateWithPath("C\u0054\u005f\u0047\u0065\u006f\u006d\u0052\u0065\u0063\u0074")
}

func (_gadefd *CT_TextNoBullet) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_InverseGammaTransform struct{}

func (_bbfdf ST_BevelPresetType) Validate() error { return _bbfdf.ValidateWithPath("") }

func (_cfef *CT_Boolean) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cfef.ValAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _gf.Sprintf("\u0025\u0076", *_cfef.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dbacg *CT_SolidColorFillProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _dbacg.ScrgbClr != nil {
		_fbcec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_dbacg.ScrgbClr, _fbcec)
	}
	if _dbacg.SrgbClr != nil {
		_fdce := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_dbacg.SrgbClr, _fdce)
	}
	if _dbacg.HslClr != nil {
		_ddfea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_dbacg.HslClr, _ddfea)
	}
	if _dbacg.SysClr != nil {
		_dgag := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_dbacg.SysClr, _dgag)
	}
	if _dbacg.SchemeClr != nil {
		_eefdg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_dbacg.SchemeClr, _eefdg)
	}
	if _dbacg.PrstClr != nil {
		_efgfe := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_dbacg.PrstClr, _efgfe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TextUnderlineTypeUnset           ST_TextUnderlineType = 0
	ST_TextUnderlineTypeNone            ST_TextUnderlineType = 1
	ST_TextUnderlineTypeWords           ST_TextUnderlineType = 2
	ST_TextUnderlineTypeSng             ST_TextUnderlineType = 3
	ST_TextUnderlineTypeDbl             ST_TextUnderlineType = 4
	ST_TextUnderlineTypeHeavy           ST_TextUnderlineType = 5
	ST_TextUnderlineTypeDotted          ST_TextUnderlineType = 6
	ST_TextUnderlineTypeDottedHeavy     ST_TextUnderlineType = 7
	ST_TextUnderlineTypeDash            ST_TextUnderlineType = 8
	ST_TextUnderlineTypeDashHeavy       ST_TextUnderlineType = 9
	ST_TextUnderlineTypeDashLong        ST_TextUnderlineType = 10
	ST_TextUnderlineTypeDashLongHeavy   ST_TextUnderlineType = 11
	ST_TextUnderlineTypeDotDash         ST_TextUnderlineType = 12
	ST_TextUnderlineTypeDotDashHeavy    ST_TextUnderlineType = 13
	ST_TextUnderlineTypeDotDotDash      ST_TextUnderlineType = 14
	ST_TextUnderlineTypeDotDotDashHeavy ST_TextUnderlineType = 15
	ST_TextUnderlineTypeWavy            ST_TextUnderlineType = 16
	ST_TextUnderlineTypeWavyHeavy       ST_TextUnderlineType = 17
	ST_TextUnderlineTypeWavyDbl         ST_TextUnderlineType = 18
)

func (_bgdggd ST_CompoundLine) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_bgdggd.String(), start)
}

// Validate validates the CT_FontScheme and its children
func (_dfff *CT_FontScheme) Validate() error {
	return _dfff.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065")
}

func NewCT_AnimationElementChoice() *CT_AnimationElementChoice {
	_eag := &CT_AnimationElementChoice{}
	return _eag
}

// Validate validates the CT_TablePropertiesChoice and its children
func (_bgbdf *CT_TablePropertiesChoice) Validate() error {
	return _bgbdf.ValidateWithPath("\u0043T\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0043\u0068\u006f\u0069\u0063\u0065")
}

func (_gffgg *CT_TableStyleList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gffgg.DefAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _dbgfbg := range start.Attr {
		if _dbgfbg.Name.Local == "\u0064\u0065\u0066" {
			_accgg, _gddbag := _dbgfbg.Value, error(nil)
			if _gddbag != nil {
				return _gddbag
			}
			_gffgg.DefAttr = _accgg
			continue
		}
	}
_dfegd:
	for {
		_ffagd, _gceae := d.Token()
		if _gceae != nil {
			return _gceae
		}
		switch _ecfgad := _ffagd.(type) {
		case _g.StartElement:
			switch _ecfgad.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}:
				_cegba := NewCT_TableStyle()
				if _fafc := d.DecodeElement(_cegba, &_ecfgad); _fafc != nil {
					return _fafc
				}
				_gffgg.TblStyle = append(_gffgg.TblStyle, _cegba)
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ecfgad.Name)
				if _bgbaf := d.Skip(); _bgbaf != nil {
					return _bgbaf
				}
			}
		case _g.EndElement:
			break _dfegd
		case _g.CharData:
		}
	}
	return nil
}

func (_ggfdg *CT_GvmlGroupShape) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ggfdg.NvGrpSpPr = NewCT_GvmlGroupShapeNonVisual()
	_ggfdg.GrpSpPr = NewCT_GroupShapeProperties()
_cgbff:
	for {
		_baf, _facaa := d.Token()
		if _facaa != nil {
			return _facaa
		}
		switch _ccged := _baf.(type) {
		case _g.StartElement:
			switch _ccged.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}:
				if _bdcd := d.DecodeElement(_ggfdg.NvGrpSpPr, &_ccged); _bdcd != nil {
					return _bdcd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}:
				if _dcbdb := d.DecodeElement(_ggfdg.GrpSpPr, &_ccged); _dcbdb != nil {
					return _dcbdb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}:
				_cddbc := NewCT_GvmlGroupShapeChoice()
				if _bfee := d.DecodeElement(&_cddbc.TxSp, &_ccged); _bfee != nil {
					return _bfee
				}
				_ggfdg.Choice = append(_ggfdg.Choice, _cddbc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_abdgg := NewCT_GvmlGroupShapeChoice()
				if _ddfge := d.DecodeElement(&_abdgg.Sp, &_ccged); _ddfge != nil {
					return _ddfge
				}
				_ggfdg.Choice = append(_ggfdg.Choice, _abdgg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_daef := NewCT_GvmlGroupShapeChoice()
				if _cac := d.DecodeElement(&_daef.CxnSp, &_ccged); _cac != nil {
					return _cac
				}
				_ggfdg.Choice = append(_ggfdg.Choice, _daef)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_gccb := NewCT_GvmlGroupShapeChoice()
				if _adcga := d.DecodeElement(&_gccb.Pic, &_ccged); _adcga != nil {
					return _adcga
				}
				_ggfdg.Choice = append(_ggfdg.Choice, _gccb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_dgaf := NewCT_GvmlGroupShapeChoice()
				if _abdba := d.DecodeElement(&_dgaf.GraphicFrame, &_ccged); _abdba != nil {
					return _abdba
				}
				_ggfdg.Choice = append(_ggfdg.Choice, _dgaf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_geabg := NewCT_GvmlGroupShapeChoice()
				if _adccd := d.DecodeElement(&_geabg.GrpSp, &_ccged); _adccd != nil {
					return _adccd
				}
				_ggfdg.Choice = append(_ggfdg.Choice, _geabg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggfdg.ExtLst = NewCT_OfficeArtExtensionList()
				if _acab := d.DecodeElement(_ggfdg.ExtLst, &_ccged); _acab != nil {
					return _acab
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _ccged.Name)
				if _badg := d.Skip(); _badg != nil {
					return _badg
				}
			}
		case _g.EndElement:
			break _cgbff
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableStyleList and its children, prefixing error messages with path
func (_dcebg *CT_TableStyleList) ValidateWithPath(path string) error {
	if !_ge.ST_GuidPatternRe.MatchString(_dcebg.DefAttr) {
		return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044\u0065\u0066\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020'\u0025\u0073\u0027\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ge.ST_GuidPatternRe, _dcebg.DefAttr)
	}
	for _aeefa, _cgeba := range _dcebg.TblStyle {
		if _gecgc := _cgeba.ValidateWithPath(_gf.Sprintf("\u0025s\u002fT\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u005b\u0025\u0064\u005d", path, _aeefa)); _gecgc != nil {
			return _gecgc
		}
	}
	return nil
}

// Validate validates the EG_ThemeableFillStyle and its children
func (_ccegfa *EG_ThemeableFillStyle) Validate() error {
	return _ccegfa.ValidateWithPath("E\u0047\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u0046\u0069l\u006c\u0053\u0074\u0079\u006c\u0065")
}

func NewCT_StyleMatrix() *CT_StyleMatrix {
	_bdeeb := &CT_StyleMatrix{}
	_bdeeb.FillStyleLst = NewCT_FillStyleList()
	_bdeeb.LnStyleLst = NewCT_LineStyleList()
	_bdeeb.EffectStyleLst = NewCT_EffectStyleList()
	_bdeeb.BgFillStyleLst = NewCT_BackgroundFillStyleList()
	return _bdeeb
}

type CT_AlphaFloorEffect struct{}

func (_ffacg *ST_TextHorzOverflowType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bdfdbg, _edebc := d.Token()
	if _edebc != nil {
		return _edebc
	}
	if _gccgf, _cdeeg := _bdfdbg.(_g.EndElement); _cdeeg && _gccgf.Name == start.Name {
		*_ffacg = 1
		return nil
	}
	if _bfadc, _cdabeb := _bdfdbg.(_g.CharData); !_cdabeb {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdfdbg)
	} else {
		switch string(_bfadc) {
		case "":
			*_ffacg = 0
		case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
			*_ffacg = 1
		case "\u0063\u006c\u0069\u0070":
			*_ffacg = 2
		}
	}
	_bdfdbg, _edebc = d.Token()
	if _edebc != nil {
		return _edebc
	}
	if _afdag, _fdcdgg := _bdfdbg.(_g.EndElement); _fdcdgg && _afdag.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdfdbg)
}

// ValidateWithPath validates the CT_SystemColor and its children, prefixing error messages with path
func (_aeeef *CT_SystemColor) ValidateWithPath(path string) error {
	if _aeeef.ValAttr == ST_SystemColorValUnset {
		return _gf.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ecaca := _aeeef.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ecaca != nil {
		return _ecaca
	}
	for _dccc, _dgced := range _aeeef.EG_ColorTransform {
		if _becge := _dgced.ValidateWithPath(_gf.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _dccc)); _becge != nil {
			return _becge
		}
	}
	return nil
}

type CT_NoFillProperties struct{}

func (_fcegg ST_BlendMode) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_ccaaba := _g.Attr{}
	_ccaaba.Name = name
	switch _fcegg {
	case ST_BlendModeUnset:
		_ccaaba.Value = ""
	case ST_BlendModeOver:
		_ccaaba.Value = "\u006f\u0076\u0065\u0072"
	case ST_BlendModeMult:
		_ccaaba.Value = "\u006d\u0075\u006c\u0074"
	case ST_BlendModeScreen:
		_ccaaba.Value = "\u0073\u0063\u0072\u0065\u0065\u006e"
	case ST_BlendModeDarken:
		_ccaaba.Value = "\u0064\u0061\u0072\u006b\u0065\u006e"
	case ST_BlendModeLighten:
		_ccaaba.Value = "\u006ci\u0067\u0068\u0074\u0065\u006e"
	}
	return _ccaaba, nil
}

func (_cgffg *CT_TextTabStop) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gdacd := range start.Attr {
		if _gdacd.Name.Local == "\u0070\u006f\u0073" {
			_afec, _bcbdf := ParseUnionST_Coordinate32(_gdacd.Value)
			if _bcbdf != nil {
				return _bcbdf
			}
			_cgffg.PosAttr = &_afec
			continue
		}
		if _gdacd.Name.Local == "\u0061\u006c\u0067\u006e" {
			_cgffg.AlgnAttr.UnmarshalXMLAttr(_gdacd)
			continue
		}
	}
	for {
		_beeag, _bfcff := d.Token()
		if _bfcff != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fT\u0065\u0078\u0074\u0054\u0061\u0062\u0053\u0074\u006f\u0070:\u0020\u0025\u0073", _bfcff)
		}
		if _fbacb, _cgaec := _beeag.(_g.EndElement); _cgaec && _fbacb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_egag *CT_GvmlGroupShapeNonVisual) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_eegf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_egag.CNvPr, _eegf)
	_aebcb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063N\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_egag.CNvGrpSpPr, _aebcb)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dcbfg *Theme) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061:\u0074\u0068\u0065\u006d\u0065"
	return _dcbfg.CT_OfficeStyleSheet.MarshalXML(e, start)
}

func (_fffed ST_ChartBuildStep) Validate() error { return _fffed.ValidateWithPath("") }

// Validate validates the CT_ShapeProperties and its children
func (_cfefb *CT_ShapeProperties) Validate() error {
	return _cfefb.ValidateWithPath("\u0043T\u005fS\u0068\u0061\u0070\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}

type CT_ColorChangeEffect struct {
	UseAAttr *bool
	ClrFrom  *CT_Color
	ClrTo    *CT_Color
}

func NewCT_OfficeArtExtensionList() *CT_OfficeArtExtensionList {
	_ddfaf := &CT_OfficeArtExtensionList{}
	return _ddfaf
}

func (_adbabg ST_TextAlignType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_adbabg.String(), start)
}

func (_ccbfd *CT_VideoFile) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _gf.Sprintf("\u0025\u0076", _ccbfd.LinkAttr)})
	if _ccbfd.ContentTypeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"}, Value: _gf.Sprintf("\u0025\u0076", *_ccbfd.ContentTypeAttr)})
	}
	e.EncodeToken(start)
	if _ccbfd.ExtLst != nil {
		_bbfea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ccbfd.ExtLst, _bbfea)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type EG_Text3D struct {
	Sp3d   *CT_Shape3D
	FlatTx *CT_FlatText
}

// ValidateWithPath validates the CT_Hyperlink and its children, prefixing error messages with path
func (_bgdfb *CT_Hyperlink) ValidateWithPath(path string) error {
	if _bgdfb.Snd != nil {
		if _bbagb := _bgdfb.Snd.ValidateWithPath(path + "\u002f\u0053\u006e\u0064"); _bbagb != nil {
			return _bbagb
		}
	}
	if _bgdfb.ExtLst != nil {
		if _gbcbc := _bgdfb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbcbc != nil {
			return _gbcbc
		}
	}
	return nil
}

type CT_GeomGuide struct {
	NameAttr string
	FmlaAttr string
}

func (_agffed *ST_TextShapeType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_agffed = 0
	case "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065":
		*_agffed = 1
	case "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n":
		*_agffed = 2
	case "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070":
		*_agffed = 3
	case "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_agffed = 4
	case "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064":
		*_agffed = 5
	case "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e":
		*_agffed = 6
	case "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064":
		*_agffed = 7
	case "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065":
		*_agffed = 8
	case "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065":
		*_agffed = 9
	case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070":
		*_agffed = 10
	case "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e":
		*_agffed = 11
	case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065":
		*_agffed = 12
	case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e":
		*_agffed = 13
	case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072":
		*_agffed = 14
	case "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072":
		*_agffed = 15
	case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072":
		*_agffed = 16
	case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072":
		*_agffed = 17
	case "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070":
		*_agffed = 18
	case "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e":
		*_agffed = 19
	case "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p":
		*_agffed = 20
	case "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e":
		*_agffed = 21
	case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651":
		*_agffed = 22
	case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652":
		*_agffed = 23
	case "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031":
		*_agffed = 24
	case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654":
		*_agffed = 25
	case "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065":
		*_agffed = 26
	case "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065":
		*_agffed = 27
	case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
		*_agffed = 28
	case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
		*_agffed = 29
	case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
		*_agffed = 30
	case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
		*_agffed = 31
	case "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065":
		*_agffed = 32
	case "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e":
		*_agffed = 33
	case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074":
		*_agffed = 34
	case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074":
		*_agffed = 35
	case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070":
		*_agffed = 36
	case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
		*_agffed = 37
	case "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070":
		*_agffed = 38
	case "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e":
		*_agffed = 39
	case "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070":
		*_agffed = 40
	case "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
		*_agffed = 41
	}
	return nil
}

func (_ccccc *ST_LightRigDirection) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_accgcb, _eggdg := d.Token()
	if _eggdg != nil {
		return _eggdg
	}
	if _bbadgg, _fefad := _accgcb.(_g.EndElement); _fefad && _bbadgg.Name == start.Name {
		*_ccccc = 1
		return nil
	}
	if _cggceg, _fbbggc := _accgcb.(_g.CharData); !_fbbggc {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _accgcb)
	} else {
		switch string(_cggceg) {
		case "":
			*_ccccc = 0
		case "\u0074\u006c":
			*_ccccc = 1
		case "\u0074":
			*_ccccc = 2
		case "\u0074\u0072":
			*_ccccc = 3
		case "\u006c":
			*_ccccc = 4
		case "\u0072":
			*_ccccc = 5
		case "\u0062\u006c":
			*_ccccc = 6
		case "\u0062":
			*_ccccc = 7
		case "\u0062\u0072":
			*_ccccc = 8
		}
	}
	_accgcb, _eggdg = d.Token()
	if _eggdg != nil {
		return _eggdg
	}
	if _ffaga, _gaedfb := _accgcb.(_g.EndElement); _gaedfb && _ffaga.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _accgcb)
}

func NewEG_Geometry() *EG_Geometry { _cdede := &EG_Geometry{}; return _cdede }

// Validate validates the EG_Text3D and its children
func (_fdbgd *EG_Text3D) Validate() error {
	return _fdbgd.ValidateWithPath("\u0045G\u005f\u0054\u0065\u0078\u0074\u0033D")
}

type CT_LineJoinBevel struct{}

// ValidateWithPath validates the CT_EmbeddedWAVAudioFile and its children, prefixing error messages with path
func (_agfg *CT_EmbeddedWAVAudioFile) ValidateWithPath(path string) error { return nil }

type ST_PresetPatternVal byte

// Validate validates the CT_TableCellProperties and its children
func (_eaaee *CT_TableCellProperties) Validate() error {
	return _eaaee.ValidateWithPath("\u0043\u0054\u005f\u0054ab\u006c\u0065\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

// ValidateWithPath validates the CT_AlphaModulateEffect and its children, prefixing error messages with path
func (_cgb *CT_AlphaModulateEffect) ValidateWithPath(path string) error {
	if _ebfd := _cgb.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _ebfd != nil {
		return _ebfd
	}
	return nil
}

func (_cdedga ST_LightRigDirection) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_daaba := _g.Attr{}
	_daaba.Name = name
	switch _cdedga {
	case ST_LightRigDirectionUnset:
		_daaba.Value = ""
	case ST_LightRigDirectionTl:
		_daaba.Value = "\u0074\u006c"
	case ST_LightRigDirectionT:
		_daaba.Value = "\u0074"
	case ST_LightRigDirectionTr:
		_daaba.Value = "\u0074\u0072"
	case ST_LightRigDirectionL:
		_daaba.Value = "\u006c"
	case ST_LightRigDirectionR:
		_daaba.Value = "\u0072"
	case ST_LightRigDirectionBl:
		_daaba.Value = "\u0062\u006c"
	case ST_LightRigDirectionB:
		_daaba.Value = "\u0062"
	case ST_LightRigDirectionBr:
		_daaba.Value = "\u0062\u0072"
	}
	return _daaba, nil
}

// ValidateWithPath validates the CT_GammaTransform and its children, prefixing error messages with path
func (_cfga *CT_GammaTransform) ValidateWithPath(path string) error { return nil }

// Validate validates the EG_LineFillProperties and its children
func (_ggecce *EG_LineFillProperties) Validate() error {
	return _ggecce.ValidateWithPath("E\u0047\u005f\u004c\u0069ne\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_facag *VideoFile) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_facag.CT_VideoFile = *NewCT_VideoFile()
	for _, _bcebf := range start.Attr {
		if _bcebf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bcebf.Name.Local == "\u006c\u0069\u006e\u006b" || _bcebf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bcebf.Name.Local == "\u006c\u0069\u006e\u006b" {
			_ecbaeb, _cadfad := _bcebf.Value, error(nil)
			if _cadfad != nil {
				return _cadfad
			}
			_facag.LinkAttr = _ecbaeb
			continue
		}
		if _bcebf.Name.Local == "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065" {
			_geacd, _abbcc := _bcebf.Value, error(nil)
			if _abbcc != nil {
				return _abbcc
			}
			_facag.ContentTypeAttr = &_geacd
			continue
		}
	}
_bceee:
	for {
		_febbc, _eebfbb := d.Token()
		if _eebfbb != nil {
			return _eebfbb
		}
		switch _gcad := _febbc.(type) {
		case _g.StartElement:
			switch _gcad.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_facag.ExtLst = NewCT_OfficeArtExtensionList()
				if _bbgcf := d.DecodeElement(_facag.ExtLst, &_gcad); _bbgcf != nil {
					return _bbgcf
				}
			default:
				_b.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0056\u0069\u0064\u0065\u006f\u0046i\u006c\u0065 \u0025\u0076", _gcad.Name)
				if _gabfgg := d.Skip(); _gabfgg != nil {
					return _gabfgg
				}
			}
		case _g.EndElement:
			break _bceee
		case _g.CharData:
		}
	}
	return nil
}

func NewEG_LineJoinProperties() *EG_LineJoinProperties {
	_badgc := &EG_LineJoinProperties{}
	return _badgc
}

// ValidateWithPath validates the EG_Effect and its children, prefixing error messages with path
func (_baced *EG_Effect) ValidateWithPath(path string) error {
	if _baced.Cont != nil {
		if _eddgg := _baced.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _eddgg != nil {
			return _eddgg
		}
	}
	if _baced.Effect != nil {
		if _ccega := _baced.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _ccega != nil {
			return _ccega
		}
	}
	if _baced.AlphaBiLevel != nil {
		if _fgfff := _baced.AlphaBiLevel.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _fgfff != nil {
			return _fgfff
		}
	}
	if _baced.AlphaCeiling != nil {
		if _gbafa := _baced.AlphaCeiling.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"); _gbafa != nil {
			return _gbafa
		}
	}
	if _baced.AlphaFloor != nil {
		if _dbaaf := _baced.AlphaFloor.ValidateWithPath(path + "/\u0041\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"); _dbaaf != nil {
			return _dbaaf
		}
	}
	if _baced.AlphaInv != nil {
		if _ecgba := _baced.AlphaInv.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u0049\u006ev"); _ecgba != nil {
			return _ecgba
		}
	}
	if _baced.AlphaMod != nil {
		if _feffc := _baced.AlphaMod.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004d\u006fd"); _feffc != nil {
			return _feffc
		}
	}
	if _baced.AlphaModFix != nil {
		if _dfeaa := _baced.AlphaModFix.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"); _dfeaa != nil {
			return _dfeaa
		}
	}
	if _baced.AlphaOutset != nil {
		if _cdaee := _baced.AlphaOutset.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"); _cdaee != nil {
			return _cdaee
		}
	}
	if _baced.AlphaRepl != nil {
		if _bageb := _baced.AlphaRepl.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"); _bageb != nil {
			return _bageb
		}
	}
	if _baced.BiLevel != nil {
		if _ebbge := _baced.BiLevel.ValidateWithPath(path + "\u002f\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _ebbge != nil {
			return _ebbge
		}
	}
	if _baced.Blend != nil {
		if _fbbae := _baced.Blend.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064"); _fbbae != nil {
			return _fbbae
		}
	}
	if _baced.Blur != nil {
		if _cagga := _baced.Blur.ValidateWithPath(path + "\u002f\u0042\u006cu\u0072"); _cagga != nil {
			return _cagga
		}
	}
	if _baced.ClrChange != nil {
		if _aeaba := _baced.ClrChange.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"); _aeaba != nil {
			return _aeaba
		}
	}
	if _baced.ClrRepl != nil {
		if _aedegc := _baced.ClrRepl.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0052\u0065\u0070\u006c"); _aedegc != nil {
			return _aedegc
		}
	}
	if _baced.Duotone != nil {
		if _gbbda := _baced.Duotone.ValidateWithPath(path + "\u002f\u0044\u0075\u006f\u0074\u006f\u006e\u0065"); _gbbda != nil {
			return _gbbda
		}
	}
	if _baced.Fill != nil {
		if _ffbea := _baced.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _ffbea != nil {
			return _ffbea
		}
	}
	if _baced.FillOverlay != nil {
		if _cbdcaf := _baced.FillOverlay.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"); _cbdcaf != nil {
			return _cbdcaf
		}
	}
	if _baced.Glow != nil {
		if _eeaaag := _baced.Glow.ValidateWithPath(path + "\u002f\u0047\u006co\u0077"); _eeaaag != nil {
			return _eeaaag
		}
	}
	if _baced.Grayscl != nil {
		if _gagbgf := _baced.Grayscl.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0079\u0073\u0063\u006c"); _gagbgf != nil {
			return _gagbgf
		}
	}
	if _baced.Hsl != nil {
		if _ccccf := _baced.Hsl.ValidateWithPath(path + "\u002f\u0048\u0073\u006c"); _ccccf != nil {
			return _ccccf
		}
	}
	if _baced.InnerShdw != nil {
		if _dafgb := _baced.InnerShdw.ValidateWithPath(path + "\u002f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"); _dafgb != nil {
			return _dafgb
		}
	}
	if _baced.Lum != nil {
		if _adcf := _baced.Lum.ValidateWithPath(path + "\u002f\u004c\u0075\u006d"); _adcf != nil {
			return _adcf
		}
	}
	if _baced.OuterShdw != nil {
		if _egdfc := _baced.OuterShdw.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"); _egdfc != nil {
			return _egdfc
		}
	}
	if _baced.PrstShdw != nil {
		if _ecceb := _baced.PrstShdw.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0053\u0068\u0064w"); _ecceb != nil {
			return _ecceb
		}
	}
	if _baced.Reflection != nil {
		if _efdae := _baced.Reflection.ValidateWithPath(path + "/\u0052\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _efdae != nil {
			return _efdae
		}
	}
	if _baced.RelOff != nil {
		if _dedgd := _baced.RelOff.ValidateWithPath(path + "\u002fR\u0065\u006c\u004f\u0066\u0066"); _dedgd != nil {
			return _dedgd
		}
	}
	if _baced.SoftEdge != nil {
		if _adafa := _baced.SoftEdge.ValidateWithPath(path + "\u002fS\u006f\u0066\u0074\u0045\u0064\u0067e"); _adafa != nil {
			return _adafa
		}
	}
	if _baced.Tint != nil {
		if _ageabd := _baced.Tint.ValidateWithPath(path + "\u002f\u0054\u0069n\u0074"); _ageabd != nil {
			return _ageabd
		}
	}
	if _baced.Xfrm != nil {
		if _bcdea := _baced.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _bcdea != nil {
			return _bcdea
		}
	}
	return nil
}

func (_egabe ST_TextBulletSize) String() string {
	if _egabe.ST_TextBulletSizePercent != nil {
		return _gf.Sprintf("\u0025\u0076", *_egabe.ST_TextBulletSizePercent)
	}
	if _egabe.ST_TextBulletSizeDecimal != nil {
		return _gf.Sprintf("\u0025\u0076", *_egabe.ST_TextBulletSizeDecimal)
	}
	return ""
}

func (_bacc *CT_TextBodyProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gbccd := range start.Attr {
		if _gbccd.Name.Local == "f\u0072\u006f\u006d\u0057\u006f\u0072\u0064\u0041\u0072\u0074" {
			_aadda, _ebfce := _c.ParseBool(_gbccd.Value)
			if _ebfce != nil {
				return _ebfce
			}
			_bacc.FromWordArtAttr = &_aadda
			continue
		}
		if _gbccd.Name.Local == "\u0061\u006e\u0063\u0068\u006f\u0072" {
			_bacc.AnchorAttr.UnmarshalXMLAttr(_gbccd)
			continue
		}
		if _gbccd.Name.Local == "\u0073\u0070c\u0046\u0069\u0072s\u0074\u004c\u0061\u0073\u0074\u0050\u0061\u0072\u0061" {
			_cadce, _cccgb := _c.ParseBool(_gbccd.Value)
			if _cccgb != nil {
				return _cccgb
			}
			_bacc.SpcFirstLastParaAttr = &_cadce
			continue
		}
		if _gbccd.Name.Local == "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r" {
			_fdegfc, _fbfeg := _c.ParseBool(_gbccd.Value)
			if _fbfeg != nil {
				return _fbfeg
			}
			_bacc.AnchorCtrAttr = &_fdegfc
			continue
		}
		if _gbccd.Name.Local == "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077" {
			_bacc.HorzOverflowAttr.UnmarshalXMLAttr(_gbccd)
			continue
		}
		if _gbccd.Name.Local == "\u0066o\u0072\u0063\u0065\u0041\u0041" {
			_daacd, _accfef := _c.ParseBool(_gbccd.Value)
			if _accfef != nil {
				return _accfef
			}
			_bacc.ForceAAAttr = &_daacd
			continue
		}
		if _gbccd.Name.Local == "\u0077\u0072\u0061\u0070" {
			_bacc.WrapAttr.UnmarshalXMLAttr(_gbccd)
			continue
		}
		if _gbccd.Name.Local == "\u0075p\u0072\u0069\u0067\u0068\u0074" {
			_aeabf, _ccbdg := _c.ParseBool(_gbccd.Value)
			if _ccbdg != nil {
				return _ccbdg
			}
			_bacc.UprightAttr = &_aeabf
			continue
		}
		if _gbccd.Name.Local == "\u0074\u0049\u006e\u0073" {
			_ggdb, _fgfbdg := ParseUnionST_Coordinate32(_gbccd.Value)
			if _fgfbdg != nil {
				return _fgfbdg
			}
			_bacc.TInsAttr = &_ggdb
			continue
		}
		if _gbccd.Name.Local == "c\u006f\u006d\u0070\u0061\u0074\u004c\u006e\u0053\u0070\u0063" {
			_bcafe, _gbaf := _c.ParseBool(_gbccd.Value)
			if _gbaf != nil {
				return _gbaf
			}
			_bacc.CompatLnSpcAttr = &_bcafe
			continue
		}
		if _gbccd.Name.Local == "\u0062\u0049\u006e\u0073" {
			_ebabfa, _dcgbc := ParseUnionST_Coordinate32(_gbccd.Value)
			if _dcgbc != nil {
				return _dcgbc
			}
			_bacc.BInsAttr = &_ebabfa
			continue
		}
		if _gbccd.Name.Local == "\u0076\u0065\u0072t\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077" {
			_bacc.VertOverflowAttr.UnmarshalXMLAttr(_gbccd)
			continue
		}
		if _gbccd.Name.Local == "\u0072\u006f\u0074" {
			_ccac, _ebdbf := _c.ParseInt(_gbccd.Value, 10, 32)
			if _ebdbf != nil {
				return _ebdbf
			}
			_ecad := int32(_ccac)
			_bacc.RotAttr = &_ecad
			continue
		}
		if _gbccd.Name.Local == "\u0073\u0070\u0063\u0043\u006f\u006c" {
			_gbcad, _bdcedf := _c.ParseInt(_gbccd.Value, 10, 32)
			if _bdcedf != nil {
				return _bdcedf
			}
			_daecc := int32(_gbcad)
			_bacc.SpcColAttr = &_daecc
			continue
		}
		if _gbccd.Name.Local == "\u0076\u0065\u0072\u0074" {
			_bacc.VertAttr.UnmarshalXMLAttr(_gbccd)
			continue
		}
		if _gbccd.Name.Local == "\u0072\u0049\u006e\u0073" {
			_deadg, _ddda := ParseUnionST_Coordinate32(_gbccd.Value)
			if _ddda != nil {
				return _ddda
			}
			_bacc.RInsAttr = &_deadg
			continue
		}
		if _gbccd.Name.Local == "\u006e\u0075\u006d\u0043\u006f\u006c" {
			_ggcfc, _agafg := _c.ParseInt(_gbccd.Value, 10, 32)
			if _agafg != nil {
				return _agafg
			}
			_ddedc := int32(_ggcfc)
			_bacc.NumColAttr = &_ddedc
			continue
		}
		if _gbccd.Name.Local == "\u0072\u0074\u006c\u0043\u006f\u006c" {
			_adfgb, _dcbaf := _c.ParseBool(_gbccd.Value)
			if _dcbaf != nil {
				return _dcbaf
			}
			_bacc.RtlColAttr = &_adfgb
			continue
		}
		if _gbccd.Name.Local == "\u006c\u0049\u006e\u0073" {
			_bagb, _gcaec := ParseUnionST_Coordinate32(_gbccd.Value)
			if _gcaec != nil {
				return _gcaec
			}
			_bacc.LInsAttr = &_bagb
			continue
		}
	}
_geaecf:
	for {
		_fecddf, _gcfab := d.Token()
		if _gcfab != nil {
			return _gcfab
		}
		switch _eaebf := _fecddf.(type) {
		case _g.StartElement:
			switch _eaebf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}:
				_bacc.PrstTxWarp = NewCT_PresetTextShape()
				if _bgcb := d.DecodeElement(_bacc.PrstTxWarp, &_eaebf); _bgcb != nil {
					return _bgcb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}:
				_bacc.NoAutofit = NewCT_TextNoAutofit()
				if _fcdgg := d.DecodeElement(_bacc.NoAutofit, &_eaebf); _fcdgg != nil {
					return _fcdgg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}:
				_bacc.NormAutofit = NewCT_TextNormalAutofit()
				if _acaage := d.DecodeElement(_bacc.NormAutofit, &_eaebf); _acaage != nil {
					return _acaage
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}:
				_bacc.SpAutoFit = NewCT_TextShapeAutofit()
				if _accdd := d.DecodeElement(_bacc.SpAutoFit, &_eaebf); _accdd != nil {
					return _accdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_bacc.Scene3d = NewCT_Scene3D()
				if _ebcab := d.DecodeElement(_bacc.Scene3d, &_eaebf); _ebcab != nil {
					return _ebcab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_bacc.Sp3d = NewCT_Shape3D()
				if _bbaggf := d.DecodeElement(_bacc.Sp3d, &_eaebf); _bbaggf != nil {
					return _bbaggf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}:
				_bacc.FlatTx = NewCT_FlatText()
				if _fdgaa := d.DecodeElement(_bacc.FlatTx, &_eaebf); _fdgaa != nil {
					return _fdgaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bacc.ExtLst = NewCT_OfficeArtExtensionList()
				if _fceae := d.DecodeElement(_bacc.ExtLst, &_eaebf); _fceae != nil {
					return _fceae
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _eaebf.Name)
				if _fbebg := d.Skip(); _fbebg != nil {
					return _fbebg
				}
			}
		case _g.EndElement:
			break _geaecf
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_AdjPoint2D() *CT_AdjPoint2D { _ecf := &CT_AdjPoint2D{}; return _ecf }

func (_cdgeb *CT_InverseGammaTransform) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_efagg *CT_TableCell) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _efagg.RowSpanAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072o\u0077\u0053\u0070\u0061\u006e"}, Value: _gf.Sprintf("\u0025\u0076", *_efagg.RowSpanAttr)})
	}
	if _efagg.GridSpanAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067\u0072\u0069\u0064\u0053\u0070\u0061\u006e"}, Value: _gf.Sprintf("\u0025\u0076", *_efagg.GridSpanAttr)})
	}
	if _efagg.HMergeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u004d\u0065\u0072\u0067\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_efagg.HMergeAttr))})
	}
	if _efagg.VMergeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u004d\u0065\u0072\u0067\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_efagg.VMergeAttr))})
	}
	if _efagg.IdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064"}, Value: _gf.Sprintf("\u0025\u0076", *_efagg.IdAttr)})
	}
	e.EncodeToken(start)
	if _efagg.TxBody != nil {
		_fcagg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0078\u0042\u006f\u0064\u0079"}}
		e.EncodeElement(_efagg.TxBody, _fcagg)
	}
	if _efagg.TcPr != nil {
		_aeggb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0063\u0050\u0072"}}
		e.EncodeElement(_efagg.TcPr, _aeggb)
	}
	if _efagg.ExtLst != nil {
		_febaa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_efagg.ExtLst, _febaa)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_eebfb *CT_InverseTransform) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_acacc ST_PresetCameraType) String() string {
	switch _acacc {
	case 0:
		return ""
	case 1:
		return "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074"
	case 2:
		return "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case 3:
		return "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074"
	case 4:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074"
	case 5:
		return "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074"
	case 6:
		return "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074"
	case 7:
		return "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case 8:
		return "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case 9:
		return "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case 10:
		return "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074"
	case 11:
		return "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070"
	case 12:
		return "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t"
	case 13:
		return "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074"
	case 14:
		return "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074"
	case 15:
		return "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074"
	case 16:
		return "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074"
	case 17:
		return "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case 18:
		return "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074"
	case 19:
		return "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074"
	case 20:
		return "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070"
	case 21:
		return "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e"
	case 22:
		return "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070"
	case 23:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e"
	case 24:
		return "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070"
	case 25:
		return "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e"
	case 26:
		return "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070"
	case 27:
		return "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e"
	case 28:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074"
	case 29:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074"
	case 30:
		return "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070"
	case 31:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074"
	case 32:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074"
	case 33:
		return "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070"
	case 34:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074"
	case 35:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074"
	case 36:
		return "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d"
	case 37:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074"
	case 38:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074"
	case 39:
		return "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d"
	case 40:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074"
	case 41:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case 42:
		return "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case 43:
		return "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074"
	case 44:
		return "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074"
	case 45:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074"
	case 46:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case 47:
		return "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074"
	case 48:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074"
	case 49:
		return "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074"
	case 50:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074"
	case 51:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065"
	case 52:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077"
	case 53:
		return "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067"
	case 54:
		return "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067"
	case 55:
		return "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case 56:
		return "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067"
	case 57:
		return "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067"
	case 58:
		return "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067"
	case 59:
		return "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case 60:
		return "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067"
	case 61:
		return "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064"
	case 62:
		return "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079"
	}
	return ""
}

func NewCT_ShapeStyle() *CT_ShapeStyle {
	_ebgba := &CT_ShapeStyle{}
	_ebgba.LnRef = NewCT_StyleMatrixReference()
	_ebgba.FillRef = NewCT_StyleMatrixReference()
	_ebgba.EffectRef = NewCT_StyleMatrixReference()
	_ebgba.FontRef = NewCT_FontReference()
	return _ebgba
}

func NewCT_Point2D() *CT_Point2D { _gfbfe := &CT_Point2D{}; return _gfbfe }

// ValidateWithPath validates the EG_ColorChoice and its children, prefixing error messages with path
func (_fgcdd *EG_ColorChoice) ValidateWithPath(path string) error {
	if _fgcdd.ScrgbClr != nil {
		if _gfffff := _fgcdd.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _gfffff != nil {
			return _gfffff
		}
	}
	if _fgcdd.SrgbClr != nil {
		if _caadb := _fgcdd.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _caadb != nil {
			return _caadb
		}
	}
	if _fgcdd.HslClr != nil {
		if _beeg := _fgcdd.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _beeg != nil {
			return _beeg
		}
	}
	if _fgcdd.SysClr != nil {
		if _bdbea := _fgcdd.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _bdbea != nil {
			return _bdbea
		}
	}
	if _fgcdd.SchemeClr != nil {
		if _fabab := _fgcdd.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _fabab != nil {
			return _fabab
		}
	}
	if _fgcdd.PrstClr != nil {
		if _dcaac := _fgcdd.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _dcaac != nil {
			return _dcaac
		}
	}
	return nil
}

// Validate validates the CT_TextBodyProperties and its children
func (_bcdfc *CT_TextBodyProperties) Validate() error {
	return _bcdfc.ValidateWithPath("C\u0054\u005f\u0054\u0065xt\u0042o\u0064\u0079\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_bdgb *CT_EmptyElement) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_cfac, _dgda := d.Token()
		if _dgda != nil {
			return _gf.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079\u0045l\u0065\u006d\u0065n\u0074:\u0020\u0025\u0073", _dgda)
		}
		if _ecceg, _gbccfa := _cfac.(_g.EndElement); _gbccfa && _ecceg.Name == start.Name {
			break
		}
	}
	return nil
}

type EG_LineDashProperties struct {
	PrstDash *CT_PresetLineDashProperties
	CustDash *CT_DashStopList
}

func NewCT_SystemColor() *CT_SystemColor {
	_egeeg := &CT_SystemColor{}
	_egeeg.ValAttr = ST_SystemColorVal(1)
	return _egeeg
}

// ValidateWithPath validates the Blip and its children, prefixing error messages with path
func (_adef *Blip) ValidateWithPath(path string) error {
	if _ffb := _adef.CT_Blip.ValidateWithPath(path); _ffb != nil {
		return _ffb
	}
	return nil
}

func (_ggddgf ST_LineCap) Validate() error { return _ggddgf.ValidateWithPath("") }

type CT_LuminanceEffect struct {
	BrightAttr   *ST_FixedPercentage
	ContrastAttr *ST_FixedPercentage
}

// ValidateWithPath validates the EG_FillProperties and its children, prefixing error messages with path
func (_bcaec *EG_FillProperties) ValidateWithPath(path string) error {
	if _bcaec.NoFill != nil {
		if _eccdfe := _bcaec.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _eccdfe != nil {
			return _eccdfe
		}
	}
	if _bcaec.SolidFill != nil {
		if _ecfae := _bcaec.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _ecfae != nil {
			return _ecfae
		}
	}
	if _bcaec.GradFill != nil {
		if _fcggd := _bcaec.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _fcggd != nil {
			return _fcggd
		}
	}
	if _bcaec.BlipFill != nil {
		if _ffabc := _bcaec.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _ffabc != nil {
			return _ffabc
		}
	}
	if _bcaec.PattFill != nil {
		if _bdbaf := _bcaec.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _bdbaf != nil {
			return _bdbaf
		}
	}
	if _bcaec.GrpFill != nil {
		if _dbef := _bcaec.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _dbef != nil {
			return _dbef
		}
	}
	return nil
}

func (_fcga *ThemeManager) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fcga.CT_EmptyElement = *NewCT_EmptyElement()
	for {
		_afaeeb, _gcbef := d.Token()
		if _gcbef != nil {
			return _gf.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0054\u0068\u0065\u006d\u0065M\u0061\u006e\u0061\u0067\u0065\u0072\u003a\u0020\u0025\u0073", _gcbef)
		}
		if _eebaeb, _cbcde := _afaeeb.(_g.EndElement); _cbcde && _eebaeb.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ColorReplaceEffect and its children
func (_bgfcb *CT_ColorReplaceEffect) Validate() error {
	return _bgfcb.ValidateWithPath("C\u0054\u005f\u0043\u006flo\u0072R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074")
}

type CT_StretchInfoProperties struct{ FillRect *CT_RelativeRect }

func (_bgdc *CT_Scale2D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_bbbfc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0078"}}
	e.EncodeElement(_bgdc.Sx, _bbbfc)
	_cfaef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079"}}
	e.EncodeElement(_bgdc.Sy, _cfaef)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dccdf *EG_EffectProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dccdf.EffectLst != nil {
		_cfbbf := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dccdf.EffectLst, _cfbbf)
	}
	if _dccdf.EffectDag != nil {
		_gfaeg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_dccdf.EffectDag, _gfaeg)
	}
	return nil
}

// Validate validates the CT_Headers and its children
func (_eagf *CT_Headers) Validate() error {
	return _eagf.ValidateWithPath("\u0043\u0054\u005f\u0048\u0065\u0061\u0064\u0065\u0072\u0073")
}

func NewCT_PositivePercentage() *CT_PositivePercentage {
	_faafcd := &CT_PositivePercentage{}
	return _faafcd
}

func (_defa *CT_GlowEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _defa.RadAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0061\u0064"}, Value: _gf.Sprintf("\u0025\u0076", *_defa.RadAttr)})
	}
	e.EncodeToken(start)
	if _defa.ScrgbClr != nil {
		_cafc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_defa.ScrgbClr, _cafc)
	}
	if _defa.SrgbClr != nil {
		_bggcd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_defa.SrgbClr, _bggcd)
	}
	if _defa.HslClr != nil {
		_fgffc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_defa.HslClr, _fgffc)
	}
	if _defa.SysClr != nil {
		_efde := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_defa.SysClr, _efde)
	}
	if _defa.SchemeClr != nil {
		_fcfeac := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_defa.SchemeClr, _fcfeac)
	}
	if _defa.PrstClr != nil {
		_eaab := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_defa.PrstClr, _eaab)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fedab ST_PresetCameraType) Validate() error { return _fedab.ValidateWithPath("") }

func (_affaf ST_AnimationChartOnlyBuildType) String() string {
	switch _affaf {
	case 0:
		return ""
	case 1:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 2:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 3:
		return "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case 4:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return ""
}

// ValidateWithPath validates the CT_TableCell and its children, prefixing error messages with path
func (_bcbeg *CT_TableCell) ValidateWithPath(path string) error {
	if _bcbeg.TxBody != nil {
		if _dcdfc := _bcbeg.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _dcdfc != nil {
			return _dcdfc
		}
	}
	if _bcbeg.TcPr != nil {
		if _bgfa := _bcbeg.TcPr.ValidateWithPath(path + "\u002f\u0054\u0063P\u0072"); _bgfa != nil {
			return _bgfa
		}
	}
	if _bcbeg.ExtLst != nil {
		if _gggb := _bcbeg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gggb != nil {
			return _gggb
		}
	}
	return nil
}

type CT_ShapeStyle struct {
	LnRef     *CT_StyleMatrixReference
	FillRef   *CT_StyleMatrixReference
	EffectRef *CT_StyleMatrixReference
	FontRef   *CT_FontReference
}

// ValidateWithPath validates the CT_RelativeOffsetEffect and its children, prefixing error messages with path
func (_aegde *CT_RelativeOffsetEffect) ValidateWithPath(path string) error {
	if _aegde.TxAttr != nil {
		if _gegea := _aegde.TxAttr.ValidateWithPath(path + "\u002fT\u0078\u0041\u0074\u0074\u0072"); _gegea != nil {
			return _gegea
		}
	}
	if _aegde.TyAttr != nil {
		if _gcbfe := _aegde.TyAttr.ValidateWithPath(path + "\u002fT\u0079\u0041\u0074\u0074\u0072"); _gcbfe != nil {
			return _gcbfe
		}
	}
	return nil
}

func (_acffd *CT_GroupLocking) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _acffd.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_acffd.NoGrpAttr))})
	}
	if _acffd.NoUngrpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0055\u006e\u0067\u0072\u0070"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_acffd.NoUngrpAttr))})
	}
	if _acffd.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_acffd.NoSelectAttr))})
	}
	if _acffd.NoRotAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_acffd.NoRotAttr))})
	}
	if _acffd.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_acffd.NoChangeAspectAttr))})
	}
	if _acffd.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_acffd.NoMoveAttr))})
	}
	if _acffd.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_acffd.NoResizeAttr))})
	}
	e.EncodeToken(start)
	if _acffd.ExtLst != nil {
		_dbec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_acffd.ExtLst, _dbec)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Connection and its children
func (_fgaf *CT_Connection) Validate() error {
	return _fgaf.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e")
}

func (_bdfddf *ST_PositiveFixedPercentage) ValidateWithPath(path string) error {
	_ceddea := []string{}
	if _bdfddf.ST_PositiveFixedPercentageDecimal != nil {
		_ceddea = append(_ceddea, "\u0053\u0054\u005f\u0050\u006f\u0073i\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063e\u006e\u0074\u0061\u0067\u0065\u0044\u0065c\u0069\u006d\u0061\u006c")
	}
	if _bdfddf.ST_PositiveFixedPercentage != nil {
		if _gecgg := _bdfddf.ST_PositiveFixedPercentage.ValidateWithPath(path + "/\u0053\u0054\u005f\u0050\u006f\u0073i\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064P\u0065\u0072\u0063e\u006et\u0061\u0067\u0065"); _gecgg != nil {
			return _gecgg
		}
		_ceddea = append(_ceddea, "\u0053\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065")
	}
	if len(_ceddea) > 1 {
		return _gf.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _ceddea)
	}
	return nil
}

// Validate validates the CT_Point2D and its children
func (_dfeae *CT_Point2D) Validate() error {
	return _dfeae.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0032\u0044")
}

func (_efagfa ST_PathFillMode) Validate() error { return _efagfa.ValidateWithPath("") }

func (_aeggeb *EG_TextUnderlineFill) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fgdcg:
	for {
		_aagbc, _bafa := d.Token()
		if _bafa != nil {
			return _bafa
		}
		switch _cgfdfd := _aagbc.(type) {
		case _g.StartElement:
			switch _cgfdfd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}:
				_aeggeb.UFillTx = NewCT_TextUnderlineFillFollowText()
				if _bddge := d.DecodeElement(_aeggeb.UFillTx, &_cgfdfd); _bddge != nil {
					return _bddge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}:
				_aeggeb.UFill = NewCT_TextUnderlineFillGroupWrapper()
				if _gedbbd := d.DecodeElement(_aeggeb.UFill, &_cgfdfd); _gedbbd != nil {
					return _gedbbd
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0020\u0025\u0076", _cgfdfd.Name)
				if _bfdfc := d.Skip(); _bfdfc != nil {
					return _bfdfc
				}
			}
		case _g.EndElement:
			break _fgdcg
		case _g.CharData:
		}
	}
	return nil
}

func (_dgeba *ST_RectAlignment) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_dgeba = 0
	case "\u0074\u006c":
		*_dgeba = 1
	case "\u0074":
		*_dgeba = 2
	case "\u0074\u0072":
		*_dgeba = 3
	case "\u006c":
		*_dgeba = 4
	case "\u0063\u0074\u0072":
		*_dgeba = 5
	case "\u0072":
		*_dgeba = 6
	case "\u0062\u006c":
		*_dgeba = 7
	case "\u0062":
		*_dgeba = 8
	case "\u0062\u0072":
		*_dgeba = 9
	}
	return nil
}

// Validate validates the Blip and its children
func (_bcbb *Blip) Validate() error { return _bcbb.ValidateWithPath("\u0042\u006c\u0069\u0070") }

func (_aadf ST_ShapeType) Validate() error { return _aadf.ValidateWithPath("") }

// Validate validates the CT_GvmlGroupShape and its children
func (_dagg *CT_GvmlGroupShape) Validate() error {
	return _dagg.ValidateWithPath("\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070S\u0068\u0061\u0070\u0065")
}

// ValidateWithPath validates the CT_ColorChangeEffect and its children, prefixing error messages with path
func (_eadd *CT_ColorChangeEffect) ValidateWithPath(path string) error {
	if _ebgg := _eadd.ClrFrom.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0046\u0072\u006f\u006d"); _ebgg != nil {
		return _ebgg
	}
	if _dbeg := _eadd.ClrTo.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0054\u006f"); _dbeg != nil {
		return _dbeg
	}
	return nil
}

type CT_GroupLocking struct {
	NoGrpAttr          *bool
	NoUngrpAttr        *bool
	NoSelectAttr       *bool
	NoRotAttr          *bool
	NoChangeAspectAttr *bool
	NoMoveAttr         *bool
	NoResizeAttr       *bool
	ExtLst             *CT_OfficeArtExtensionList
}

type EG_Media struct {
	AudioCd       *CT_AudioCD
	WavAudioFile  *CT_EmbeddedWAVAudioFile
	AudioFile     *CT_AudioFile
	VideoFile     *CT_VideoFile
	QuickTimeFile *CT_QuickTimeFile
}

func (_bdffa *CT_TextCharBullet) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fcce := range start.Attr {
		if _fcce.Name.Local == "\u0063\u0068\u0061\u0072" {
			_cegag, _edgab := _fcce.Value, error(nil)
			if _edgab != nil {
				return _edgab
			}
			_bdffa.CharAttr = _cegag
			continue
		}
	}
	for {
		_afbcd, _daadf := d.Token()
		if _daadf != nil {
			return _gf.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072\u0042\u0075\u006c\u006c\u0065\u0074: \u0025\u0073", _daadf)
		}
		if _aebad, _eeead := _afbcd.(_g.EndElement); _eeead && _aebad.Name == start.Name {
			break
		}
	}
	return nil
}

// ST_TextFontScalePercentOrPercentString is a union type
type ST_TextFontScalePercentOrPercentString struct {
	ST_TextFontScalePercent *int32
	ST_Percentage           *string
}

func (_deccb *CT_TileInfoProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _deccb.TxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0078"}, Value: _gf.Sprintf("\u0025\u0076", *_deccb.TxAttr)})
	}
	if _deccb.TyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0079"}, Value: _gf.Sprintf("\u0025\u0076", *_deccb.TyAttr)})
	}
	if _deccb.SxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0078"}, Value: _gf.Sprintf("\u0025\u0076", *_deccb.SxAttr)})
	}
	if _deccb.SyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0079"}, Value: _gf.Sprintf("\u0025\u0076", *_deccb.SyAttr)})
	}
	if _deccb.FlipAttr != ST_TileFlipModeUnset {
		_daagb, _bbfb := _deccb.FlipAttr.MarshalXMLAttr(_g.Name{Local: "\u0066\u006c\u0069\u0070"})
		if _bbfb != nil {
			return _bbfb
		}
		start.Attr = append(start.Attr, _daagb)
	}
	if _deccb.AlgnAttr != ST_RectAlignmentUnset {
		_gdefc, _fegef := _deccb.AlgnAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _fegef != nil {
			return _fegef
		}
		start.Attr = append(start.Attr, _gdefc)
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_TextRun and its children, prefixing error messages with path
func (_aaddg *EG_TextRun) ValidateWithPath(path string) error {
	if _aaddg.R != nil {
		if _geebg := _aaddg.R.ValidateWithPath(path + "\u002f\u0052"); _geebg != nil {
			return _geebg
		}
	}
	if _aaddg.Br != nil {
		if _eedcd := _aaddg.Br.ValidateWithPath(path + "\u002f\u0042\u0072"); _eedcd != nil {
			return _eedcd
		}
	}
	if _aaddg.Fld != nil {
		if _dddga := _aaddg.Fld.ValidateWithPath(path + "\u002f\u0046\u006c\u0064"); _dddga != nil {
			return _dddga
		}
	}
	return nil
}

func (_ddbge *CT_SystemColor) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ddbge.ValAttr = ST_SystemColorVal(1)
	for _, _efbd := range start.Attr {
		if _efbd.Name.Local == "\u0076\u0061\u006c" {
			_ddbge.ValAttr.UnmarshalXMLAttr(_efbd)
			continue
		}
		if _efbd.Name.Local == "\u006ca\u0073\u0074\u0043\u006c\u0072" {
			_bdaa, _aggcf := _efbd.Value, error(nil)
			if _aggcf != nil {
				return _aggcf
			}
			_ddbge.LastClrAttr = &_bdaa
			continue
		}
	}
_begdce:
	for {
		_adaf, _dcfdf := d.Token()
		if _dcfdf != nil {
			return _dcfdf
		}
		switch _aggdc := _adaf.(type) {
		case _g.StartElement:
			switch _aggdc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_gfgge := NewEG_ColorTransform()
				_gfgge.Tint = NewCT_PositiveFixedPercentage()
				if _begef := d.DecodeElement(_gfgge.Tint, &_aggdc); _begef != nil {
					return _begef
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _gfgge)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_cgbef := NewEG_ColorTransform()
				_cgbef.Shade = NewCT_PositiveFixedPercentage()
				if _abggf := d.DecodeElement(_cgbef.Shade, &_aggdc); _abggf != nil {
					return _abggf
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _cgbef)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_cdcab := NewEG_ColorTransform()
				_cdcab.Comp = NewCT_ComplementTransform()
				if _baaae := d.DecodeElement(_cdcab.Comp, &_aggdc); _baaae != nil {
					return _baaae
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _cdcab)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_dbdag := NewEG_ColorTransform()
				_dbdag.Inv = NewCT_InverseTransform()
				if _gfbbc := d.DecodeElement(_dbdag.Inv, &_aggdc); _gfbbc != nil {
					return _gfbbc
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _dbdag)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_ffgfa := NewEG_ColorTransform()
				_ffgfa.Gray = NewCT_GrayscaleTransform()
				if _fagbf := d.DecodeElement(_ffgfa.Gray, &_aggdc); _fagbf != nil {
					return _fagbf
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _ffgfa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_aaaac := NewEG_ColorTransform()
				_aaaac.Alpha = NewCT_PositiveFixedPercentage()
				if _afbc := d.DecodeElement(_aaaac.Alpha, &_aggdc); _afbc != nil {
					return _afbc
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _aaaac)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_bdgce := NewEG_ColorTransform()
				_bdgce.AlphaOff = NewCT_FixedPercentage()
				if _ccgca := d.DecodeElement(_bdgce.AlphaOff, &_aggdc); _ccgca != nil {
					return _ccgca
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _bdgce)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_facac := NewEG_ColorTransform()
				_facac.AlphaMod = NewCT_PositivePercentage()
				if _bdfde := d.DecodeElement(_facac.AlphaMod, &_aggdc); _bdfde != nil {
					return _bdfde
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _facac)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_fcefa := NewEG_ColorTransform()
				_fcefa.Hue = NewCT_PositiveFixedAngle()
				if _cdffbe := d.DecodeElement(_fcefa.Hue, &_aggdc); _cdffbe != nil {
					return _cdffbe
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _fcefa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_dabcg := NewEG_ColorTransform()
				_dabcg.HueOff = NewCT_Angle()
				if _bbcff := d.DecodeElement(_dabcg.HueOff, &_aggdc); _bbcff != nil {
					return _bbcff
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _dabcg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_bdff := NewEG_ColorTransform()
				_bdff.HueMod = NewCT_PositivePercentage()
				if _aagfa := d.DecodeElement(_bdff.HueMod, &_aggdc); _aagfa != nil {
					return _aagfa
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _bdff)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_abgac := NewEG_ColorTransform()
				_abgac.Sat = NewCT_Percentage()
				if _caca := d.DecodeElement(_abgac.Sat, &_aggdc); _caca != nil {
					return _caca
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _abgac)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_aebag := NewEG_ColorTransform()
				_aebag.SatOff = NewCT_Percentage()
				if _bcdbb := d.DecodeElement(_aebag.SatOff, &_aggdc); _bcdbb != nil {
					return _bcdbb
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _aebag)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_cfacf := NewEG_ColorTransform()
				_cfacf.SatMod = NewCT_Percentage()
				if _daeef := d.DecodeElement(_cfacf.SatMod, &_aggdc); _daeef != nil {
					return _daeef
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _cfacf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_ggfa := NewEG_ColorTransform()
				_ggfa.Lum = NewCT_Percentage()
				if _gfcb := d.DecodeElement(_ggfa.Lum, &_aggdc); _gfcb != nil {
					return _gfcb
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _ggfa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_cdacg := NewEG_ColorTransform()
				_cdacg.LumOff = NewCT_Percentage()
				if _afba := d.DecodeElement(_cdacg.LumOff, &_aggdc); _afba != nil {
					return _afba
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _cdacg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_cbdga := NewEG_ColorTransform()
				_cbdga.LumMod = NewCT_Percentage()
				if _ecbba := d.DecodeElement(_cbdga.LumMod, &_aggdc); _ecbba != nil {
					return _ecbba
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _cbdga)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_fdffd := NewEG_ColorTransform()
				_fdffd.Red = NewCT_Percentage()
				if _ebdeb := d.DecodeElement(_fdffd.Red, &_aggdc); _ebdeb != nil {
					return _ebdeb
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _fdffd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_cegca := NewEG_ColorTransform()
				_cegca.RedOff = NewCT_Percentage()
				if _agddb := d.DecodeElement(_cegca.RedOff, &_aggdc); _agddb != nil {
					return _agddb
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _cegca)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_defea := NewEG_ColorTransform()
				_defea.RedMod = NewCT_Percentage()
				if _bedgba := d.DecodeElement(_defea.RedMod, &_aggdc); _bedgba != nil {
					return _bedgba
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _defea)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_bdage := NewEG_ColorTransform()
				_bdage.Green = NewCT_Percentage()
				if _efbbgb := d.DecodeElement(_bdage.Green, &_aggdc); _efbbgb != nil {
					return _efbbgb
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _bdage)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_gfda := NewEG_ColorTransform()
				_gfda.GreenOff = NewCT_Percentage()
				if _aebfc := d.DecodeElement(_gfda.GreenOff, &_aggdc); _aebfc != nil {
					return _aebfc
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _gfda)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_feced := NewEG_ColorTransform()
				_feced.GreenMod = NewCT_Percentage()
				if _bcfdab := d.DecodeElement(_feced.GreenMod, &_aggdc); _bcfdab != nil {
					return _bcfdab
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _feced)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_fgffg := NewEG_ColorTransform()
				_fgffg.Blue = NewCT_Percentage()
				if _cfbce := d.DecodeElement(_fgffg.Blue, &_aggdc); _cfbce != nil {
					return _cfbce
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _fgffg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_fggdc := NewEG_ColorTransform()
				_fggdc.BlueOff = NewCT_Percentage()
				if _efaef := d.DecodeElement(_fggdc.BlueOff, &_aggdc); _efaef != nil {
					return _efaef
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _fggdc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_daaa := NewEG_ColorTransform()
				_daaa.BlueMod = NewCT_Percentage()
				if _cffgc := d.DecodeElement(_daaa.BlueMod, &_aggdc); _cffgc != nil {
					return _cffgc
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _daaa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_cbfae := NewEG_ColorTransform()
				_cbfae.Gamma = NewCT_GammaTransform()
				if _cgcbe := d.DecodeElement(_cbfae.Gamma, &_aggdc); _cgcbe != nil {
					return _cgcbe
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _cbfae)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_gfdcca := NewEG_ColorTransform()
				_gfdcca.InvGamma = NewCT_InverseGammaTransform()
				if _gbagb := d.DecodeElement(_gfdcca.InvGamma, &_aggdc); _gbagb != nil {
					return _gbagb
				}
				_ddbge.EG_ColorTransform = append(_ddbge.EG_ColorTransform, _gfdcca)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0079\u0073\u0074\u0065\u006d\u0043o\u006co\u0072\u0020\u0025\u0076", _aggdc.Name)
				if _efabg := d.Skip(); _efabg != nil {
					return _efabg
				}
			}
		case _g.EndElement:
			break _begdce
		case _g.CharData:
		}
	}
	return nil
}

func (_eeff *CT_ShapeLocking) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cebeb := range start.Attr {
		if _cebeb.Name.Local == "\u006e\u006f\u0054\u0065\u0078\u0074\u0045\u0064\u0069\u0074" {
			_cgfbg, _caebe := _c.ParseBool(_cebeb.Value)
			if _caebe != nil {
				return _caebe
			}
			_eeff.NoTextEditAttr = &_cgfbg
			continue
		}
		if _cebeb.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_bfgcf, _eedb := _c.ParseBool(_cebeb.Value)
			if _eedb != nil {
				return _eedb
			}
			_eeff.NoGrpAttr = &_bfgcf
			continue
		}
		if _cebeb.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_feabf, _dddff := _c.ParseBool(_cebeb.Value)
			if _dddff != nil {
				return _dddff
			}
			_eeff.NoSelectAttr = &_feabf
			continue
		}
		if _cebeb.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_ddcac, _eadbd := _c.ParseBool(_cebeb.Value)
			if _eadbd != nil {
				return _eadbd
			}
			_eeff.NoRotAttr = &_ddcac
			continue
		}
		if _cebeb.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_dgfga, _ggece := _c.ParseBool(_cebeb.Value)
			if _ggece != nil {
				return _ggece
			}
			_eeff.NoChangeAspectAttr = &_dgfga
			continue
		}
		if _cebeb.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_fbafg, _adagb := _c.ParseBool(_cebeb.Value)
			if _adagb != nil {
				return _adagb
			}
			_eeff.NoMoveAttr = &_fbafg
			continue
		}
		if _cebeb.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_ccegg, _bdaeg := _c.ParseBool(_cebeb.Value)
			if _bdaeg != nil {
				return _bdaeg
			}
			_eeff.NoResizeAttr = &_ccegg
			continue
		}
		if _cebeb.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_bbdff, _begf := _c.ParseBool(_cebeb.Value)
			if _begf != nil {
				return _begf
			}
			_eeff.NoEditPointsAttr = &_bbdff
			continue
		}
		if _cebeb.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_bggcf, _adcda := _c.ParseBool(_cebeb.Value)
			if _adcda != nil {
				return _adcda
			}
			_eeff.NoAdjustHandlesAttr = &_bggcf
			continue
		}
		if _cebeb.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_eggd, _acffc := _c.ParseBool(_cebeb.Value)
			if _acffc != nil {
				return _acffc
			}
			_eeff.NoChangeArrowheadsAttr = &_eggd
			continue
		}
		if _cebeb.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_fbgag, _dcbca := _c.ParseBool(_cebeb.Value)
			if _dcbca != nil {
				return _dcbca
			}
			_eeff.NoChangeShapeTypeAttr = &_fbgag
			continue
		}
	}
_gfdb:
	for {
		_ffgfec, _ecaag := d.Token()
		if _ecaag != nil {
			return _ecaag
		}
		switch _gfgad := _ffgfec.(type) {
		case _g.StartElement:
			switch _gfgad.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eeff.ExtLst = NewCT_OfficeArtExtensionList()
				if _dfde := d.DecodeElement(_eeff.ExtLst, &_gfgad); _dfde != nil {
					return _dfde
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061p\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _gfgad.Name)
				if _gbgcb := d.Skip(); _gbgcb != nil {
					return _gbgcb
				}
			}
		case _g.EndElement:
			break _gfdb
		case _g.CharData:
		}
	}
	return nil
}

type CT_Connection struct {
	IdAttr  uint32
	IdxAttr uint32
}

// Validate validates the CT_TableStyle and its children
func (_eagfdb *CT_TableStyle) Validate() error {
	return _eagfdb.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065")
}

func NewCT_TableProperties() *CT_TableProperties { _effcf := &CT_TableProperties{}; return _effcf }

type CT_InverseTransform struct{}

// ValidateWithPath validates the CT_Table and its children, prefixing error messages with path
func (_effde *CT_Table) ValidateWithPath(path string) error {
	if _effde.TblPr != nil {
		if _dfbba := _effde.TblPr.ValidateWithPath(path + "\u002f\u0054\u0062\u006c\u0050\u0072"); _dfbba != nil {
			return _dfbba
		}
	}
	if _dbgef := _effde.TblGrid.ValidateWithPath(path + "\u002f\u0054\u0062\u006c\u0047\u0072\u0069\u0064"); _dbgef != nil {
		return _dbgef
	}
	for _fgcgc, _fdaf := range _effde.Tr {
		if _ggbea := _fdaf.ValidateWithPath(_gf.Sprintf("\u0025s\u002f\u0054\u0072\u005b\u0025\u0064]", path, _fgcgc)); _ggbea != nil {
			return _ggbea
		}
	}
	return nil
}

func (_fcfed *CT_ShapeLocking) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fcfed.NoTextEditAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0054\u0065\u0078\u0074\u0045\u0064\u0069\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_fcfed.NoTextEditAttr))})
	}
	if _fcfed.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_fcfed.NoGrpAttr))})
	}
	if _fcfed.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_fcfed.NoSelectAttr))})
	}
	if _fcfed.NoRotAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_fcfed.NoRotAttr))})
	}
	if _fcfed.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_fcfed.NoChangeAspectAttr))})
	}
	if _fcfed.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_fcfed.NoMoveAttr))})
	}
	if _fcfed.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_fcfed.NoResizeAttr))})
	}
	if _fcfed.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_fcfed.NoEditPointsAttr))})
	}
	if _fcfed.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_fcfed.NoAdjustHandlesAttr))})
	}
	if _fcfed.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_fcfed.NoChangeArrowheadsAttr))})
	}
	if _fcfed.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_fcfed.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _fcfed.ExtLst != nil {
		_ccadc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fcfed.ExtLst, _ccadc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_aefgd *ST_AnimationBuildType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_aefgd = 0
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_aefgd = 1
	}
	return nil
}

func (_cdfb *CT_DefaultShapeDefinition) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_aggd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_cdfb.SpPr, _aggd)
	_eaeb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006f\u0064\u0079\u0050\u0072"}}
	e.EncodeElement(_cdfb.BodyPr, _eaeb)
	_efggg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}}
	e.EncodeElement(_cdfb.LstStyle, _efggg)
	if _cdfb.Style != nil {
		_beff := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_cdfb.Style, _beff)
	}
	if _cdfb.ExtLst != nil {
		_gffc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cdfb.ExtLst, _gffc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_BlendEffect() *CT_BlendEffect {
	_ega := &CT_BlendEffect{}
	_ega.BlendAttr = ST_BlendMode(1)
	_ega.Cont = NewCT_EffectContainer()
	return _ega
}

// Validate validates the CT_ColorChangeEffect and its children
func (_caba *CT_ColorChangeEffect) Validate() error {
	return _caba.ValidateWithPath("C\u0054_\u0043\u006f\u006c\u006f\u0072\u0043\u0068\u0061n\u0067\u0065\u0045\u0066fe\u0063\u0074")
}

// ValidateWithPath validates the CT_AlphaBiLevelEffect and its children, prefixing error messages with path
func (_bbf *CT_AlphaBiLevelEffect) ValidateWithPath(path string) error {
	if _agf := _bbf.ThreshAttr.ValidateWithPath(path + "/\u0054\u0068\u0072\u0065\u0073\u0068\u0041\u0074\u0074\u0072"); _agf != nil {
		return _agf
	}
	return nil
}

func (_bgeea ST_CompoundLine) ValidateWithPath(path string) error {
	switch _bgeea {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bgeea))
	}
	return nil
}

type CT_CustomColorList struct{ CustClr []*CT_CustomColor }

// ValidateWithPath validates the CT_Path2DMoveTo and its children, prefixing error messages with path
func (_bcbbde *CT_Path2DMoveTo) ValidateWithPath(path string) error {
	if _bcadg := _bcbbde.Pt.ValidateWithPath(path + "\u002f\u0050\u0074"); _bcadg != nil {
		return _bcadg
	}
	return nil
}

func (_gcded ST_AnimationChartBuildType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _gcded.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		e.EncodeToken(_g.CharData(_gcded.ST_AnimationBuildType.String()))
	}
	if _gcded.ST_AnimationChartOnlyBuildType != ST_AnimationChartOnlyBuildTypeUnset {
		e.EncodeToken(_g.CharData(_gcded.ST_AnimationChartOnlyBuildType.String()))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

func (_beebd *CT_GraphicalObjectData) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gcaeb := range start.Attr {
		if _gcaeb.Name.Local == "\u0075\u0072\u0069" {
			_ffded, _bbgb := _gcaeb.Value, error(nil)
			if _bbgb != nil {
				return _bbgb
			}
			_beebd.UriAttr = _ffded
			continue
		}
	}
_acdbd:
	for {
		_cgec, _ecfde := d.Token()
		if _ecfde != nil {
			return _ecfde
		}
		switch _aggbg := _cgec.(type) {
		case _g.StartElement:
			switch _aggbg.Name {
			default:
				if _fddbc, _bdfdb := _ga.CreateElement(_aggbg); _bdfdb != nil {
					return _bdfdb
				} else {
					if _bfaac := d.DecodeElement(_fddbc, &_aggbg); _bfaac != nil {
						return _bfaac
					}
					_beebd.Any = append(_beebd.Any, _fddbc)
				}
			}
		case _g.EndElement:
			break _acdbd
		case _g.CharData:
		}
	}
	return nil
}

func (_gcdf *ST_TextFontAlignType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_caggc, _cfcbfc := d.Token()
	if _cfcbfc != nil {
		return _cfcbfc
	}
	if _fcbbb, _bdbef := _caggc.(_g.EndElement); _bdbef && _fcbbb.Name == start.Name {
		*_gcdf = 1
		return nil
	}
	if _dcbfe, _agfaf := _caggc.(_g.CharData); !_agfaf {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _caggc)
	} else {
		switch string(_dcbfe) {
		case "":
			*_gcdf = 0
		case "\u0061\u0075\u0074\u006f":
			*_gcdf = 1
		case "\u0074":
			*_gcdf = 2
		case "\u0063\u0074\u0072":
			*_gcdf = 3
		case "\u0062\u0061\u0073\u0065":
			*_gcdf = 4
		case "\u0062":
			*_gcdf = 5
		}
	}
	_caggc, _cfcbfc = d.Token()
	if _cfcbfc != nil {
		return _cfcbfc
	}
	if _bgfge, _aecdf := _caggc.(_g.EndElement); _aecdf && _bgfge.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _caggc)
}

// Validate validates the Theme and its children
func (_afcfc *Theme) Validate() error { return _afcfc.ValidateWithPath("\u0054\u0068\u0065m\u0065") }

func (_abgd *Tbl) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_abgd.CT_Table = *NewCT_Table()
_cfcae:
	for {
		_cfbfb, _baggea := d.Token()
		if _baggea != nil {
			return _baggea
		}
		switch _afedc := _cfbfb.(type) {
		case _g.StartElement:
			switch _afedc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}:
				_abgd.TblPr = NewCT_TableProperties()
				if _bedeb := d.DecodeElement(_abgd.TblPr, &_afedc); _bedeb != nil {
					return _bedeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}:
				if _dcgfb := d.DecodeElement(_abgd.TblGrid, &_afedc); _dcgfb != nil {
					return _dcgfb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}:
				_ffafba := NewCT_TableRow()
				if _abeffc := d.DecodeElement(_ffafba, &_afedc); _abeffc != nil {
					return _abeffc
				}
				_abgd.Tr = append(_abgd.Tr, _ffafba)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0054b\u006c\u0020\u0025\u0076", _afedc.Name)
				if _adfff := d.Skip(); _adfff != nil {
					return _adfff
				}
			}
		case _g.EndElement:
			break _cfcae
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_Point3D() *CT_Point3D { _cbaac := &CT_Point3D{}; return _cbaac }

// ValidateWithPath validates the CT_AlphaModulateFixedEffect and its children, prefixing error messages with path
func (_badf *CT_AlphaModulateFixedEffect) ValidateWithPath(path string) error {
	if _badf.AmtAttr != nil {
		if _fcb := _badf.AmtAttr.ValidateWithPath(path + "\u002f\u0041\u006d\u0074\u0041\u0074\u0074\u0072"); _fcb != nil {
			return _fcb
		}
	}
	return nil
}

// Validate validates the CT_ReflectionEffect and its children
func (_dgdea *CT_ReflectionEffect) Validate() error {
	return _dgdea.ValidateWithPath("\u0043\u0054\u005f\u0052ef\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_dcggg *CT_Path2DMoveTo) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_cafac := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0074"}}
	e.EncodeElement(_dcggg.Pt, _cafac)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_LineJoinRound() *CT_LineJoinRound { _acgde := &CT_LineJoinRound{}; return _acgde }

func NewCT_TextUnderlineFillFollowText() *CT_TextUnderlineFillFollowText {
	_aaacgf := &CT_TextUnderlineFillFollowText{}
	return _aaacgf
}

type CT_ReflectionEffect struct {
	BlurRadAttr      *int64
	StAAttr          *ST_PositiveFixedPercentage
	StPosAttr        *ST_PositiveFixedPercentage
	EndAAttr         *ST_PositiveFixedPercentage
	EndPosAttr       *ST_PositiveFixedPercentage
	DistAttr         *int64
	DirAttr          *int32
	FadeDirAttr      *int32
	SxAttr           *ST_Percentage
	SyAttr           *ST_Percentage
	KxAttr           *int32
	KyAttr           *int32
	AlgnAttr         ST_RectAlignment
	RotWithShapeAttr *bool
}

var ST_TextBulletSizePercentPatternRe = _e.MustCompile(ST_TextBulletSizePercentPattern)

func NewCT_TintEffect() *CT_TintEffect { _ddeca := &CT_TintEffect{}; return _ddeca }

func (_ccfec *EG_TextRun) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dbdgg:
	for {
		_acbbc, _cfaff := d.Token()
		if _cfaff != nil {
			return _cfaff
		}
		switch _bfcfe := _acbbc.(type) {
		case _g.StartElement:
			switch _bfcfe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_ccfec.R = NewCT_RegularTextRun()
				if _cbfbd := d.DecodeElement(_ccfec.R, &_bfcfe); _cbfbd != nil {
					return _cbfbd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}:
				_ccfec.Br = NewCT_TextLineBreak()
				if _eegd := d.DecodeElement(_ccfec.Br, &_bfcfe); _eegd != nil {
					return _eegd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}:
				_ccfec.Fld = NewCT_TextField()
				if _dcebc := d.DecodeElement(_ccfec.Fld, &_bfcfe); _dcebc != nil {
					return _dcebc
				}
			default:
				_b.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005fT\u0065\u0078\u0074\u0052\u0075\u006e\u0020\u0025\u0076", _bfcfe.Name)
				if _dbcec := d.Skip(); _dbcec != nil {
					return _dbcec
				}
			}
		case _g.EndElement:
			break _dbdgg
		case _g.CharData:
		}
	}
	return nil
}

func ParseUnionST_AnimationDgmBuildType(s string) (ST_AnimationDgmBuildType, error) {
	_eaabg := ST_AnimationDgmBuildType{}
	switch s {
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		_eaabg.ST_AnimationBuildType = ST_AnimationBuildTypeAllAtOnce
	case "\u006f\u006e\u0065":
		_eaabg.ST_AnimationDgmOnlyBuildType = ST_AnimationDgmOnlyBuildTypeOne
	case "\u006c\u0076\u006c\u004f\u006e\u0065":
		_eaabg.ST_AnimationDgmOnlyBuildType = ST_AnimationDgmOnlyBuildTypeLvlOne
	case "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e":
		_eaabg.ST_AnimationDgmOnlyBuildType = ST_AnimationDgmOnlyBuildTypeLvlAtOnce
	}
	return _eaabg, nil
}

func (_fcgc *CT_GrayscaleEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_NonVisualContentPartProperties struct {
	IsCommentAttr *bool
	CpLocks       *CT_ContentPartLocking
	ExtLst        *CT_OfficeArtExtensionList
}

type EG_TextBullet struct {
	BuNone    *CT_TextNoBullet
	BuAutoNum *CT_TextAutonumberBullet
	BuChar    *CT_TextCharBullet
	BuBlip    *CT_TextBlipBullet
}

func NewCT_TextNoAutofit() *CT_TextNoAutofit { _fdadb := &CT_TextNoAutofit{}; return _fdadb }

func (_gffg *CT_Path2DLineTo) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gffg.Pt = NewCT_AdjPoint2D()
_adeab:
	for {
		_eeeeg, _afded := d.Token()
		if _afded != nil {
			return _afded
		}
		switch _geceb := _eeeeg.(type) {
		case _g.StartElement:
			switch _geceb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				if _dcacc := d.DecodeElement(_gffg.Pt, &_geceb); _dcacc != nil {
					return _dcacc
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074h\u0032\u0044\u004c\u0069\u006e\u0065\u0054\u006f\u0020\u0025\u0076", _geceb.Name)
				if _cbeg := d.Skip(); _cbeg != nil {
					return _cbeg
				}
			}
		case _g.EndElement:
			break _adeab
		case _g.CharData:
		}
	}
	return nil
}

func (_dfdae ST_EffectContainerType) ValidateWithPath(path string) error {
	switch _dfdae {
	case 0, 1, 2:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dfdae))
	}
	return nil
}

// Validate validates the ThemeManager and its children
func (_dgfcgc *ThemeManager) Validate() error {
	return _dgfcgc.ValidateWithPath("\u0054\u0068\u0065m\u0065\u004d\u0061\u006e\u0061\u0067\u0065\u0072")
}

func NewCT_GeomRect() *CT_GeomRect { _eeadg := &CT_GeomRect{}; return _eeadg }

func (_bddgg ST_TileFlipMode) ValidateWithPath(path string) error {
	switch _bddgg {
	case 0, 1, 2, 3, 4:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bddgg))
	}
	return nil
}

func (_bbdag *CT_GradientStopList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_gadf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0073"}}
	for _, _afbfef := range _bbdag.Gs {
		e.EncodeElement(_afbfef, _gadf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_degba *CT_ColorChangeEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_degba.ClrFrom = NewCT_Color()
	_degba.ClrTo = NewCT_Color()
	for _, _cbacc := range start.Attr {
		if _cbacc.Name.Local == "\u0075\u0073\u0065\u0041" {
			_cbeab, _deaa := _c.ParseBool(_cbacc.Value)
			if _deaa != nil {
				return _deaa
			}
			_degba.UseAAttr = &_cbeab
			continue
		}
	}
_dcbc:
	for {
		_feff, _aaa := d.Token()
		if _aaa != nil {
			return _aaa
		}
		switch _ebff := _feff.(type) {
		case _g.StartElement:
			switch _ebff.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0046\u0072\u006f\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0046\u0072\u006f\u006d"}:
				if _bgga := d.DecodeElement(_degba.ClrFrom, &_ebff); _bgga != nil {
					return _bgga
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072T\u006f"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072T\u006f"}:
				if _dada := d.DecodeElement(_degba.ClrTo, &_ebff); _dada != nil {
					return _dada
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0043\u0068\u0061\u006e\u0067\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _ebff.Name)
				if _fagfa := d.Skip(); _fagfa != nil {
					return _fagfa
				}
			}
		case _g.EndElement:
			break _dcbc
		case _g.CharData:
		}
	}
	return nil
}

func NewTblStyleLst() *TblStyleLst {
	_fafcbe := &TblStyleLst{}
	_fafcbe.CT_TableStyleList = *NewCT_TableStyleList()
	return _fafcbe
}

// Validate validates the CT_VideoFile and its children
func (_dbaea *CT_VideoFile) Validate() error {
	return _dbaea.ValidateWithPath("\u0043\u0054\u005fV\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065")
}

func (_fdgg *CT_GrayscaleTransform) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_HslColor and its children
func (_gfagb *CT_HslColor) Validate() error {
	return _gfagb.ValidateWithPath("C\u0054\u005f\u0048\u0073\u006c\u0043\u006f\u006c\u006f\u0072")
}

// ValidateWithPath validates the CT_RelativeRect and its children, prefixing error messages with path
func (_aacea *CT_RelativeRect) ValidateWithPath(path string) error {
	if _aacea.LAttr != nil {
		if _gcdgg := _aacea.LAttr.ValidateWithPath(path + "\u002f\u004c\u0041\u0074\u0074\u0072"); _gcdgg != nil {
			return _gcdgg
		}
	}
	if _aacea.TAttr != nil {
		if _ddcgad := _aacea.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _ddcgad != nil {
			return _ddcgad
		}
	}
	if _aacea.RAttr != nil {
		if _abdde := _aacea.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _abdde != nil {
			return _abdde
		}
	}
	if _aacea.BAttr != nil {
		if _gfaa := _aacea.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _gfaa != nil {
			return _gfaa
		}
	}
	return nil
}

func NewCT_WholeE2oFormatting() *CT_WholeE2oFormatting {
	_ggead := &CT_WholeE2oFormatting{}
	return _ggead
}

func (_eefbfa ST_LineEndLength) String() string {
	switch _eefbfa {
	case 0:
		return ""
	case 1:
		return "\u0073\u006d"
	case 2:
		return "\u006d\u0065\u0064"
	case 3:
		return "\u006c\u0067"
	}
	return ""
}

func NewCT_LinearShadeProperties() *CT_LinearShadeProperties {
	_daeg := &CT_LinearShadeProperties{}
	return _daeg
}

func NewCT_Percentage() *CT_Percentage { _cfgba := &CT_Percentage{}; return _cfgba }

func ParseUnionST_AnimationChartBuildType(s string) (ST_AnimationChartBuildType, error) {
	_bccff := ST_AnimationChartBuildType{}
	switch s {
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		_bccff.ST_AnimationBuildType = ST_AnimationBuildTypeAllAtOnce
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		_bccff.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeSeries
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		_bccff.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeCategory
	case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
		_bccff.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeSeriesEl
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
		_bccff.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeCategoryEl
	}
	return _bccff, nil
}

func (_bcccf *CT_QuickTimeFile) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _gf.Sprintf("\u0025\u0076", _bcccf.LinkAttr)})
	e.EncodeToken(start)
	if _bcccf.ExtLst != nil {
		_eagab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bcccf.ExtLst, _eagab)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TextSpacing and its children
func (_fgcac *CT_TextSpacing) Validate() error {
	return _fgcac.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070a\u0063\u0069\u006e\u0067")
}

func NewCT_SupplementalFont() *CT_SupplementalFont { _cfbag := &CT_SupplementalFont{}; return _cfbag }

func (_ebdcc *CT_VideoFile) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fcaaa := range start.Attr {
		if _fcaaa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fcaaa.Name.Local == "\u006c\u0069\u006e\u006b" || _fcaaa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fcaaa.Name.Local == "\u006c\u0069\u006e\u006b" {
			_cgcd, _dfeef := _fcaaa.Value, error(nil)
			if _dfeef != nil {
				return _dfeef
			}
			_ebdcc.LinkAttr = _cgcd
			continue
		}
		if _fcaaa.Name.Local == "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065" {
			_cdag, _bfgcb := _fcaaa.Value, error(nil)
			if _bfgcb != nil {
				return _bfgcb
			}
			_ebdcc.ContentTypeAttr = &_cdag
			continue
		}
	}
_dgfgb:
	for {
		_fbeggd, _ddaae := d.Token()
		if _ddaae != nil {
			return _ddaae
		}
		switch _fbegc := _fbeggd.(type) {
		case _g.StartElement:
			switch _fbegc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebdcc.ExtLst = NewCT_OfficeArtExtensionList()
				if _fgeab := d.DecodeElement(_ebdcc.ExtLst, &_fbegc); _fgeab != nil {
					return _fgeab
				}
			default:
				_b.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_V\u0069\u0064e\u006f\u0046\u0069\u006c\u0065\u0020\u0025\u0076", _fbegc.Name)
				if _gcaf := d.Skip(); _gcaf != nil {
					return _gcaf
				}
			}
		case _g.EndElement:
			break _dgfgb
		case _g.CharData:
		}
	}
	return nil
}

type CT_TableStyleList struct {
	DefAttr  string
	TblStyle []*CT_TableStyle
}

// Validate validates the CT_TextBlipBullet and its children
func (_fddeg *CT_TextBlipBullet) Validate() error {
	return _fddeg.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006c\u0069\u0070\u0042u\u006c\u006c\u0065\u0074")
}

func (_aeead ST_CompoundLine) String() string {
	switch _aeead {
	case 0:
		return ""
	case 1:
		return "\u0073\u006e\u0067"
	case 2:
		return "\u0064\u0062\u006c"
	case 3:
		return "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n"
	case 4:
		return "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k"
	case 5:
		return "\u0074\u0072\u0069"
	}
	return ""
}

func (_feef *ST_BlipCompression) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_feef = 0
	case "\u0065\u006d\u0061i\u006c":
		*_feef = 1
	case "\u0073\u0063\u0072\u0065\u0065\u006e":
		*_feef = 2
	case "\u0070\u0072\u0069n\u0074":
		*_feef = 3
	case "\u0068q\u0070\u0072\u0069\u006e\u0074":
		*_feef = 4
	case "\u006e\u006f\u006e\u0065":
		*_feef = 5
	}
	return nil
}

// Validate validates the CT_SupplementalFont and its children
func (_eefeg *CT_SupplementalFont) Validate() error {
	return _eefeg.ValidateWithPath("\u0043\u0054\u005f\u0053up\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0061\u006c\u0046\u006f\u006e\u0074")
}

func (_bbaacc ST_EffectContainerType) String() string {
	switch _bbaacc {
	case 0:
		return ""
	case 1:
		return "\u0073\u0069\u0062"
	case 2:
		return "\u0074\u0072\u0065\u0065"
	}
	return ""
}

func (_cdccc *CT_GroupFillProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_bccf, _ebae := d.Token()
		if _ebae != nil {
			return _gf.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0072\u006fu\u0070F\u0069l\u006cP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _ebae)
		}
		if _bcdg, _gfde := _bccf.(_g.EndElement); _gfde && _bcdg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fcdfgg ST_PresetShadowVal) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bgdcb := _g.Attr{}
	_bgdcb.Name = name
	switch _fcdfgg {
	case ST_PresetShadowValUnset:
		_bgdcb.Value = ""
	case ST_PresetShadowValShdw1:
		_bgdcb.Value = "\u0073\u0068\u0064w\u0031"
	case ST_PresetShadowValShdw2:
		_bgdcb.Value = "\u0073\u0068\u0064w\u0032"
	case ST_PresetShadowValShdw3:
		_bgdcb.Value = "\u0073\u0068\u0064w\u0033"
	case ST_PresetShadowValShdw4:
		_bgdcb.Value = "\u0073\u0068\u0064w\u0034"
	case ST_PresetShadowValShdw5:
		_bgdcb.Value = "\u0073\u0068\u0064w\u0035"
	case ST_PresetShadowValShdw6:
		_bgdcb.Value = "\u0073\u0068\u0064w\u0036"
	case ST_PresetShadowValShdw7:
		_bgdcb.Value = "\u0073\u0068\u0064w\u0037"
	case ST_PresetShadowValShdw8:
		_bgdcb.Value = "\u0073\u0068\u0064w\u0038"
	case ST_PresetShadowValShdw9:
		_bgdcb.Value = "\u0073\u0068\u0064w\u0039"
	case ST_PresetShadowValShdw10:
		_bgdcb.Value = "\u0073\u0068\u0064\u0077\u0031\u0030"
	case ST_PresetShadowValShdw11:
		_bgdcb.Value = "\u0073\u0068\u0064\u0077\u0031\u0031"
	case ST_PresetShadowValShdw12:
		_bgdcb.Value = "\u0073\u0068\u0064\u0077\u0031\u0032"
	case ST_PresetShadowValShdw13:
		_bgdcb.Value = "\u0073\u0068\u0064\u0077\u0031\u0033"
	case ST_PresetShadowValShdw14:
		_bgdcb.Value = "\u0073\u0068\u0064\u0077\u0031\u0034"
	case ST_PresetShadowValShdw15:
		_bgdcb.Value = "\u0073\u0068\u0064\u0077\u0031\u0035"
	case ST_PresetShadowValShdw16:
		_bgdcb.Value = "\u0073\u0068\u0064\u0077\u0031\u0036"
	case ST_PresetShadowValShdw17:
		_bgdcb.Value = "\u0073\u0068\u0064\u0077\u0031\u0037"
	case ST_PresetShadowValShdw18:
		_bgdcb.Value = "\u0073\u0068\u0064\u0077\u0031\u0038"
	case ST_PresetShadowValShdw19:
		_bgdcb.Value = "\u0073\u0068\u0064\u0077\u0031\u0039"
	case ST_PresetShadowValShdw20:
		_bgdcb.Value = "\u0073\u0068\u0064\u0077\u0032\u0030"
	}
	return _bgdcb, nil
}

// ValidateWithPath validates the CT_Path2DQuadBezierTo and its children, prefixing error messages with path
func (_dgfeg *CT_Path2DQuadBezierTo) ValidateWithPath(path string) error {
	for _edcf, _gdged := range _dgfeg.Pt {
		if _gdagd := _gdged.ValidateWithPath(_gf.Sprintf("\u0025s\u002f\u0050\u0074\u005b\u0025\u0064]", path, _edcf)); _gdagd != nil {
			return _gdagd
		}
	}
	return nil
}

func (_gbec ST_PresetColorVal) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_gbec.String(), start)
}

func NewCT_GvmlUseShapeRectangle() *CT_GvmlUseShapeRectangle {
	_acggb := &CT_GvmlUseShapeRectangle{}
	return _acggb
}

// Validate validates the VideoFile and its children
func (_acegc *VideoFile) Validate() error {
	return _acegc.ValidateWithPath("\u0056i\u0064\u0065\u006f\u0046\u0069\u006ce")
}

func NewCT_TextBulletSizePercent() *CT_TextBulletSizePercent {
	_efagf := &CT_TextBulletSizePercent{}
	_efagf.ValAttr = "\u0031\u0030\u0030\u0025"
	return _efagf
}

func (_cccgdc ST_EffectContainerType) Validate() error { return _cccgdc.ValidateWithPath("") }

func (_ggde *CT_BlipFillProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ggde.DpiAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0070\u0069"}, Value: _gf.Sprintf("\u0025\u0076", *_ggde.DpiAttr)})
	}
	if _ggde.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_ggde.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	if _ggde.Blip != nil {
		_egbbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070"}}
		e.EncodeElement(_ggde.Blip, _egbbe)
	}
	if _ggde.SrcRect != nil {
		_fdfa := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0063\u0052\u0065\u0063t"}}
		e.EncodeElement(_ggde.SrcRect, _fdfa)
	}
	if _ggde.Tile != nil {
		_gff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0069\u006c\u0065"}}
		e.EncodeElement(_ggde.Tile, _gff)
	}
	if _ggde.Stretch != nil {
		_egde := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0074\u0072\u0065\u0074\u0063h"}}
		e.EncodeElement(_ggde.Stretch, _egde)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dceb *CT_ConnectorLocking) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dceb.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dceb.NoGrpAttr))})
	}
	if _dceb.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dceb.NoSelectAttr))})
	}
	if _dceb.NoRotAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dceb.NoRotAttr))})
	}
	if _dceb.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dceb.NoChangeAspectAttr))})
	}
	if _dceb.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dceb.NoMoveAttr))})
	}
	if _dceb.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dceb.NoResizeAttr))})
	}
	if _dceb.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dceb.NoEditPointsAttr))})
	}
	if _dceb.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dceb.NoAdjustHandlesAttr))})
	}
	if _dceb.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dceb.NoChangeArrowheadsAttr))})
	}
	if _dceb.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dceb.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _dceb.ExtLst != nil {
		_gbcbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dceb.ExtLst, _gbcbe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RegularTextRun and its children, prefixing error messages with path
func (_bceec *CT_RegularTextRun) ValidateWithPath(path string) error {
	if _bceec.RPr != nil {
		if _efgd := _bceec.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _efgd != nil {
			return _efgd
		}
	}
	return nil
}

func NewCT_Connection() *CT_Connection { _dbge := &CT_Connection{}; return _dbge }

func NewCT_ColorSchemeList() *CT_ColorSchemeList { _bcec := &CT_ColorSchemeList{}; return _bcec }

func (_fgcec ST_LineEndType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_gbabg := _g.Attr{}
	_gbabg.Name = name
	switch _fgcec {
	case ST_LineEndTypeUnset:
		_gbabg.Value = ""
	case ST_LineEndTypeNone:
		_gbabg.Value = "\u006e\u006f\u006e\u0065"
	case ST_LineEndTypeTriangle:
		_gbabg.Value = "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_LineEndTypeStealth:
		_gbabg.Value = "\u0073t\u0065\u0061\u006c\u0074\u0068"
	case ST_LineEndTypeDiamond:
		_gbabg.Value = "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case ST_LineEndTypeOval:
		_gbabg.Value = "\u006f\u0076\u0061\u006c"
	case ST_LineEndTypeArrow:
		_gbabg.Value = "\u0061\u0072\u0072o\u0077"
	}
	return _gbabg, nil
}

// Validate validates the CT_InverseGammaTransform and its children
func (_deaag *CT_InverseGammaTransform) Validate() error {
	return _deaag.ValidateWithPath("\u0043T\u005f\u0049\u006e\u0076\u0065\u0072\u0073\u0065\u0047\u0061\u006dm\u0061\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}

func (_dd *AG_Blob) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dd.EmbedAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072:\u0065\u006d\u0062\u0065\u0064"}, Value: _gf.Sprintf("\u0025\u0076", *_dd.EmbedAttr)})
	}
	if _dd.LinkAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _gf.Sprintf("\u0025\u0076", *_dd.LinkAttr)})
	}
	return nil
}

func NewCT_GraphicalObject() *CT_GraphicalObject {
	_ccbgb := &CT_GraphicalObject{}
	_ccbgb.GraphicData = NewCT_GraphicalObjectData()
	return _ccbgb
}

func (_badeg *ST_AnimationDgmOnlyBuildType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_badeg = 0
	case "\u006f\u006e\u0065":
		*_badeg = 1
	case "\u006c\u0076\u006c\u004f\u006e\u0065":
		*_badeg = 2
	case "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_badeg = 3
	}
	return nil
}

// ValidateWithPath validates the CT_CustomColor and its children, prefixing error messages with path
func (_aafdd *CT_CustomColor) ValidateWithPath(path string) error {
	if _aafdd.ScrgbClr != nil {
		if _dcfb := _aafdd.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _dcfb != nil {
			return _dcfb
		}
	}
	if _aafdd.SrgbClr != nil {
		if _cgefeg := _aafdd.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _cgefeg != nil {
			return _cgefeg
		}
	}
	if _aafdd.HslClr != nil {
		if _affgc := _aafdd.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _affgc != nil {
			return _affgc
		}
	}
	if _aafdd.SysClr != nil {
		if _fgdg := _aafdd.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _fgdg != nil {
			return _fgdg
		}
	}
	if _aafdd.SchemeClr != nil {
		if _bddf := _aafdd.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _bddf != nil {
			return _bddf
		}
	}
	if _aafdd.PrstClr != nil {
		if _edgg := _aafdd.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _edgg != nil {
			return _edgg
		}
	}
	return nil
}

const (
	ST_TextHorzOverflowTypeUnset    ST_TextHorzOverflowType = 0
	ST_TextHorzOverflowTypeOverflow ST_TextHorzOverflowType = 1
	ST_TextHorzOverflowTypeClip     ST_TextHorzOverflowType = 2
)

// Validate validates the CT_ContentPartLocking and its children
func (_fbgf *CT_ContentPartLocking) Validate() error {
	return _fbgf.ValidateWithPath("C\u0054\u005f\u0043\u006fnt\u0065n\u0074\u0050\u0061\u0072\u0074L\u006f\u0063\u006b\u0069\u006e\u0067")
}

type CT_FillStyleList struct{ EG_FillProperties []*EG_FillProperties }

// Validate validates the CT_AlphaBiLevelEffect and its children
func (_ecfc *CT_AlphaBiLevelEffect) Validate() error {
	return _ecfc.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061B\u0069\u004c\u0065\u0076\u0065l\u0045\u0066\u0066\u0065\u0063\u0074")
}

func NewCT_VideoFile() *CT_VideoFile { _aecea := &CT_VideoFile{}; return _aecea }

type ST_TextWrappingType byte

// ValidateWithPath validates the CT_GvmlGroupShapeNonVisual and its children, prefixing error messages with path
func (_beaa *CT_GvmlGroupShapeNonVisual) ValidateWithPath(path string) error {
	if _gbcdg := _beaa.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _gbcdg != nil {
		return _gbcdg
	}
	if _baggg := _beaa.CNvGrpSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _baggg != nil {
		return _baggg
	}
	return nil
}

func (_edfec ST_TextFontAlignType) String() string {
	switch _edfec {
	case 0:
		return ""
	case 1:
		return "\u0061\u0075\u0074\u006f"
	case 2:
		return "\u0074"
	case 3:
		return "\u0063\u0074\u0072"
	case 4:
		return "\u0062\u0061\u0073\u0065"
	case 5:
		return "\u0062"
	}
	return ""
}

const (
	ST_TextVertOverflowTypeUnset    ST_TextVertOverflowType = 0
	ST_TextVertOverflowTypeOverflow ST_TextVertOverflowType = 1
	ST_TextVertOverflowTypeEllipsis ST_TextVertOverflowType = 2
	ST_TextVertOverflowTypeClip     ST_TextVertOverflowType = 3
)

func (_edbfg *CT_TableStyleList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0065\u0066"}, Value: _gf.Sprintf("\u0025\u0076", _edbfg.DefAttr)})
	e.EncodeToken(start)
	if _edbfg.TblStyle != nil {
		_eagcf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}}
		for _, _edffe := range _edbfg.TblStyle {
			e.EncodeElement(_edffe, _eagcf)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fcfc *CT_GvmlGraphicFrameNonVisual) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_afbea := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_fcfc.CNvPr, _afbea)
	_agcffc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u004evG\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_fcfc.CNvGraphicFramePr, _agcffc)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_BlendModeUnset   ST_BlendMode = 0
	ST_BlendModeOver    ST_BlendMode = 1
	ST_BlendModeMult    ST_BlendMode = 2
	ST_BlendModeScreen  ST_BlendMode = 3
	ST_BlendModeDarken  ST_BlendMode = 4
	ST_BlendModeLighten ST_BlendMode = 5
)

func (_gagad *CT_NoFillProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_TextSpacingPercent struct {
	ValAttr ST_TextSpacingPercentOrPercentString
}

func (_bfcbgd ST_TextBulletSize) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _bfcbgd.ST_TextBulletSizePercent != nil {
		e.EncodeToken(_g.CharData(*_bfcbgd.ST_TextBulletSizePercent))
	}
	if _bfcbgd.ST_TextBulletSizeDecimal != nil {
		e.EncodeToken(_g.CharData(_gf.Sprintf("\u0025\u0064", *_bfcbgd.ST_TextBulletSizeDecimal)))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

func (_gccba ST_PositivePercentage) String() string {
	if _gccba.ST_PositivePercentageDecimal != nil {
		return _gf.Sprintf("\u0025\u0076", *_gccba.ST_PositivePercentageDecimal)
	}
	if _gccba.ST_PositivePercentage != nil {
		return _gccba.ST_PositivePercentage.String()
	}
	return ""
}

// ValidateWithPath validates the CT_Color and its children, prefixing error messages with path
func (_fegc *CT_Color) ValidateWithPath(path string) error {
	if _fegc.ScrgbClr != nil {
		if _ddec := _fegc.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _ddec != nil {
			return _ddec
		}
	}
	if _fegc.SrgbClr != nil {
		if _gedbb := _fegc.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _gedbb != nil {
			return _gedbb
		}
	}
	if _fegc.HslClr != nil {
		if _dded := _fegc.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _dded != nil {
			return _dded
		}
	}
	if _fegc.SysClr != nil {
		if _cegf := _fegc.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _cegf != nil {
			return _cegf
		}
	}
	if _fegc.SchemeClr != nil {
		if _accfg := _fegc.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _accfg != nil {
			return _accfg
		}
	}
	if _fegc.PrstClr != nil {
		if _facf := _fegc.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _facf != nil {
			return _facf
		}
	}
	return nil
}

func (_aagae *Graphic) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return _aagae.CT_GraphicalObject.MarshalXML(e, start)
}

func (_dcbe *CT_AnimationChartElement) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dcbe.BldStepAttr = ST_ChartBuildStep(1)
	for _, _dfd := range start.Attr {
		if _dfd.Name.Local == "\u0073e\u0072\u0069\u0065\u0073\u0049\u0064x" {
			_faed, _cbaf := _c.ParseInt(_dfd.Value, 10, 32)
			if _cbaf != nil {
				return _cbaf
			}
			_eee := int32(_faed)
			_dcbe.SeriesIdxAttr = &_eee
			continue
		}
		if _dfd.Name.Local == "c\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0049\u0064\u0078" {
			_geg, _agbd := _c.ParseInt(_dfd.Value, 10, 32)
			if _agbd != nil {
				return _agbd
			}
			_fec := int32(_geg)
			_dcbe.CategoryIdxAttr = &_fec
			continue
		}
		if _dfd.Name.Local == "\u0062l\u0064\u0053\u0074\u0065\u0070" {
			_dcbe.BldStepAttr.UnmarshalXMLAttr(_dfd)
			continue
		}
	}
	for {
		_ddc, _gdcf := d.Token()
		if _gdcf != nil {
			return _gf.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0041nim\u0061ti\u006f\u006e\u0043\u0068\u0061\u0072\u0074El\u0065\u006d\u0065\u006e\u0074\u003a\u0020%\u0073", _gdcf)
		}
		if _cabb, _dfb := _ddc.(_g.EndElement); _dfb && _cabb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Point2D struct {
	XAttr ST_Coordinate
	YAttr ST_Coordinate
}

// Validate validates the CT_EffectProperties and its children
func (_eedf *CT_EffectProperties) Validate() error {
	return _eedf.ValidateWithPath("\u0043\u0054\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func NewCT_GvmlConnector() *CT_GvmlConnector {
	_bebaa := &CT_GvmlConnector{}
	_bebaa.NvCxnSpPr = NewCT_GvmlConnectorNonVisual()
	_bebaa.SpPr = NewCT_ShapeProperties()
	return _bebaa
}

func (_gdbbe *EG_TextUnderlineLine) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cfbfea:
	for {
		_ffdfg, _aaddb := d.Token()
		if _aaddb != nil {
			return _aaddb
		}
		switch _dcgcg := _ffdfg.(type) {
		case _g.StartElement:
			switch _dcgcg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}:
				_gdbbe.ULnTx = NewCT_TextUnderlineLineFollowText()
				if _cfafcg := d.DecodeElement(_gdbbe.ULnTx, &_dcgcg); _cfafcg != nil {
					return _cfafcg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}:
				_gdbbe.ULn = NewCT_LineProperties()
				if _bdadaa := d.DecodeElement(_gdbbe.ULn, &_dcgcg); _bdadaa != nil {
					return _bdadaa
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u004c\u0069\u006e\u0065\u0020\u0025\u0076", _dcgcg.Name)
				if _cfadd := d.Skip(); _cfadd != nil {
					return _cfadd
				}
			}
		case _g.EndElement:
			break _cfbfea
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ComplementTransform and its children, prefixing error messages with path
func (_decg *CT_ComplementTransform) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_TextUnderlineLineFollowText and its children, prefixing error messages with path
func (_fdabd *CT_TextUnderlineLineFollowText) ValidateWithPath(path string) error { return nil }

func (_fadgbc ST_PitchFamily) Validate() error { return _fadgbc.ValidateWithPath("") }

func (_fgggc *CT_FillStyleList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	for _, _fgce := range _fgggc.EG_FillProperties {
		_fgce.MarshalXML(e, _g.StartElement{})
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_GvmlPictureNonVisual struct {
	CNvPr    *CT_NonVisualDrawingProps
	CNvPicPr *CT_NonVisualPictureProperties
}

func (_ggbda *CT_PresetShadowEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ggbda.PrstAttr = ST_PresetShadowVal(1)
	for _, _fedd := range start.Attr {
		if _fedd.Name.Local == "\u0070\u0072\u0073\u0074" {
			_ggbda.PrstAttr.UnmarshalXMLAttr(_fedd)
			continue
		}
		if _fedd.Name.Local == "\u0064\u0069\u0073\u0074" {
			_agbg, _efee := _c.ParseInt(_fedd.Value, 10, 64)
			if _efee != nil {
				return _efee
			}
			_ggbda.DistAttr = &_agbg
			continue
		}
		if _fedd.Name.Local == "\u0064\u0069\u0072" {
			_cbcg, _dgbda := _c.ParseInt(_fedd.Value, 10, 32)
			if _dgbda != nil {
				return _dgbda
			}
			_cdcd := int32(_cbcg)
			_ggbda.DirAttr = &_cdcd
			continue
		}
	}
_ebaab:
	for {
		_dafb, _cdega := d.Token()
		if _cdega != nil {
			return _cdega
		}
		switch _ccbgc := _dafb.(type) {
		case _g.StartElement:
			switch _ccbgc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_ggbda.ScrgbClr = NewCT_ScRgbColor()
				if _cgdcg := d.DecodeElement(_ggbda.ScrgbClr, &_ccbgc); _cgdcg != nil {
					return _cgdcg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_ggbda.SrgbClr = NewCT_SRgbColor()
				if _fcecd := d.DecodeElement(_ggbda.SrgbClr, &_ccbgc); _fcecd != nil {
					return _fcecd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_ggbda.HslClr = NewCT_HslColor()
				if _fcfd := d.DecodeElement(_ggbda.HslClr, &_ccbgc); _fcfd != nil {
					return _fcfd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_ggbda.SysClr = NewCT_SystemColor()
				if _edgf := d.DecodeElement(_ggbda.SysClr, &_ccbgc); _edgf != nil {
					return _edgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_ggbda.SchemeClr = NewCT_SchemeColor()
				if _aeabe := d.DecodeElement(_ggbda.SchemeClr, &_ccbgc); _aeabe != nil {
					return _aeabe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_ggbda.PrstClr = NewCT_PresetColor()
				if _ggcb := d.DecodeElement(_ggbda.PrstClr, &_ccbgc); _ggcb != nil {
					return _ggcb
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074\u0053\u0068\u0061\u0064\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _ccbgc.Name)
				if _abag := d.Skip(); _abag != nil {
					return _abag
				}
			}
		case _g.EndElement:
			break _ebaab
		case _g.CharData:
		}
	}
	return nil
}

type CT_HSLEffect struct {
	HueAttr *int32
	SatAttr *ST_FixedPercentage
	LumAttr *ST_FixedPercentage
}

type ST_OnOffStyleType byte

type CT_GeomGuideList struct{ Gd []*CT_GeomGuide }

type CT_AlphaCeilingEffect struct{}

type ST_DgmBuildStep byte

type ST_TextCapsType byte

type CT_GvmlShapeNonVisual struct {
	CNvPr   *CT_NonVisualDrawingProps
	CNvSpPr *CT_NonVisualDrawingShapeProps
}

func NewCT_CustomGeometry2D() *CT_CustomGeometry2D {
	_eefgc := &CT_CustomGeometry2D{}
	_eefgc.PathLst = NewCT_Path2DList()
	return _eefgc
}

// Validate validates the CT_ColorSchemeAndMapping and its children
func (_cbbeg *CT_ColorSchemeAndMapping) Validate() error {
	return _cbbeg.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006de\u0041\u006e\u0064\u004d\u0061\u0070\u0070\u0069\u006e\u0067")
}

type CT_LineJoinRound struct{}

type EG_TextRun struct {
	R   *CT_RegularTextRun
	Br  *CT_TextLineBreak
	Fld *CT_TextField
}

// ValidateWithPath validates the CT_AnimationDgmElement and its children, prefixing error messages with path
func (_ddd *CT_AnimationDgmElement) ValidateWithPath(path string) error {
	if _ddd.IdAttr != nil {
		if !_ge.ST_GuidPatternRe.MatchString(*_ddd.IdAttr) {
			return _gf.Errorf("\u0025\u0073/\u006d\u002e\u0049\u0064A\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061t\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ge.ST_GuidPatternRe, *_ddd.IdAttr)
		}
	}
	if _aba := _ddd.BldStepAttr.ValidateWithPath(path + "\u002f\u0042\u006cd\u0053\u0074\u0065\u0070\u0041\u0074\u0074\u0072"); _aba != nil {
		return _aba
	}
	return nil
}

// ValidateWithPath validates the EG_ShadeProperties and its children, prefixing error messages with path
func (_gdgca *EG_ShadeProperties) ValidateWithPath(path string) error {
	if _gdgca.Lin != nil {
		if _accabc := _gdgca.Lin.ValidateWithPath(path + "\u002f\u004c\u0069\u006e"); _accabc != nil {
			return _accabc
		}
	}
	if _gdgca.Path != nil {
		if _dafee := _gdgca.Path.ValidateWithPath(path + "\u002f\u0050\u0061t\u0068"); _dafee != nil {
			return _dafee
		}
	}
	return nil
}

func (_egaga *ST_LineEndLength) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_egaga = 0
	case "\u0073\u006d":
		*_egaga = 1
	case "\u006d\u0065\u0064":
		*_egaga = 2
	case "\u006c\u0067":
		*_egaga = 3
	}
	return nil
}

// ValidateWithPath validates the EG_ColorTransform and its children, prefixing error messages with path
func (_bcgcb *EG_ColorTransform) ValidateWithPath(path string) error {
	if _bcgcb.Tint != nil {
		if _baceb := _bcgcb.Tint.ValidateWithPath(path + "\u002f\u0054\u0069n\u0074"); _baceb != nil {
			return _baceb
		}
	}
	if _bcgcb.Shade != nil {
		if _gfecg := _bcgcb.Shade.ValidateWithPath(path + "\u002f\u0053\u0068\u0061\u0064\u0065"); _gfecg != nil {
			return _gfecg
		}
	}
	if _bcgcb.Comp != nil {
		if _fgddf := _bcgcb.Comp.ValidateWithPath(path + "\u002f\u0043\u006fm\u0070"); _fgddf != nil {
			return _fgddf
		}
	}
	if _bcgcb.Inv != nil {
		if _dagcc := _bcgcb.Inv.ValidateWithPath(path + "\u002f\u0049\u006e\u0076"); _dagcc != nil {
			return _dagcc
		}
	}
	if _bcgcb.Gray != nil {
		if _cfeegc := _bcgcb.Gray.ValidateWithPath(path + "\u002f\u0047\u0072a\u0079"); _cfeegc != nil {
			return _cfeegc
		}
	}
	if _bcgcb.Alpha != nil {
		if _fgcge := _bcgcb.Alpha.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061"); _fgcge != nil {
			return _fgcge
		}
	}
	if _bcgcb.AlphaOff != nil {
		if _cddca := _bcgcb.AlphaOff.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004f\u0066f"); _cddca != nil {
			return _cddca
		}
	}
	if _bcgcb.AlphaMod != nil {
		if _abgaca := _bcgcb.AlphaMod.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004d\u006fd"); _abgaca != nil {
			return _abgaca
		}
	}
	if _bcgcb.Hue != nil {
		if _fegaf := _bcgcb.Hue.ValidateWithPath(path + "\u002f\u0048\u0075\u0065"); _fegaf != nil {
			return _fegaf
		}
	}
	if _bcgcb.HueOff != nil {
		if _afcfa := _bcgcb.HueOff.ValidateWithPath(path + "\u002fH\u0075\u0065\u004f\u0066\u0066"); _afcfa != nil {
			return _afcfa
		}
	}
	if _bcgcb.HueMod != nil {
		if _fcabc := _bcgcb.HueMod.ValidateWithPath(path + "\u002fH\u0075\u0065\u004d\u006f\u0064"); _fcabc != nil {
			return _fcabc
		}
	}
	if _bcgcb.Sat != nil {
		if _cbeb := _bcgcb.Sat.ValidateWithPath(path + "\u002f\u0053\u0061\u0074"); _cbeb != nil {
			return _cbeb
		}
	}
	if _bcgcb.SatOff != nil {
		if _afeef := _bcgcb.SatOff.ValidateWithPath(path + "\u002fS\u0061\u0074\u004f\u0066\u0066"); _afeef != nil {
			return _afeef
		}
	}
	if _bcgcb.SatMod != nil {
		if _faagg := _bcgcb.SatMod.ValidateWithPath(path + "\u002fS\u0061\u0074\u004d\u006f\u0064"); _faagg != nil {
			return _faagg
		}
	}
	if _bcgcb.Lum != nil {
		if _fbffec := _bcgcb.Lum.ValidateWithPath(path + "\u002f\u004c\u0075\u006d"); _fbffec != nil {
			return _fbffec
		}
	}
	if _bcgcb.LumOff != nil {
		if _ecfdb := _bcgcb.LumOff.ValidateWithPath(path + "\u002fL\u0075\u006d\u004f\u0066\u0066"); _ecfdb != nil {
			return _ecfdb
		}
	}
	if _bcgcb.LumMod != nil {
		if _cgcbef := _bcgcb.LumMod.ValidateWithPath(path + "\u002fL\u0075\u006d\u004d\u006f\u0064"); _cgcbef != nil {
			return _cgcbef
		}
	}
	if _bcgcb.Red != nil {
		if _gbff := _bcgcb.Red.ValidateWithPath(path + "\u002f\u0052\u0065\u0064"); _gbff != nil {
			return _gbff
		}
	}
	if _bcgcb.RedOff != nil {
		if _cabfg := _bcgcb.RedOff.ValidateWithPath(path + "\u002fR\u0065\u0064\u004f\u0066\u0066"); _cabfg != nil {
			return _cabfg
		}
	}
	if _bcgcb.RedMod != nil {
		if _agffe := _bcgcb.RedMod.ValidateWithPath(path + "\u002fR\u0065\u0064\u004d\u006f\u0064"); _agffe != nil {
			return _agffe
		}
	}
	if _bcgcb.Green != nil {
		if _gaecg := _bcgcb.Green.ValidateWithPath(path + "\u002f\u0047\u0072\u0065\u0065\u006e"); _gaecg != nil {
			return _gaecg
		}
	}
	if _bcgcb.GreenOff != nil {
		if _fgfage := _bcgcb.GreenOff.ValidateWithPath(path + "\u002fG\u0072\u0065\u0065\u006e\u004f\u0066f"); _fgfage != nil {
			return _fgfage
		}
	}
	if _bcgcb.GreenMod != nil {
		if _dbfeb := _bcgcb.GreenMod.ValidateWithPath(path + "\u002fG\u0072\u0065\u0065\u006e\u004d\u006fd"); _dbfeb != nil {
			return _dbfeb
		}
	}
	if _bcgcb.Blue != nil {
		if _bdaece := _bcgcb.Blue.ValidateWithPath(path + "\u002f\u0042\u006cu\u0065"); _bdaece != nil {
			return _bdaece
		}
	}
	if _bcgcb.BlueOff != nil {
		if _fcbb := _bcgcb.BlueOff.ValidateWithPath(path + "\u002f\u0042\u006c\u0075\u0065\u004f\u0066\u0066"); _fcbb != nil {
			return _fcbb
		}
	}
	if _bcgcb.BlueMod != nil {
		if _ggdac := _bcgcb.BlueMod.ValidateWithPath(path + "\u002f\u0042\u006c\u0075\u0065\u004d\u006f\u0064"); _ggdac != nil {
			return _ggdac
		}
	}
	if _bcgcb.Gamma != nil {
		if _abeff := _bcgcb.Gamma.ValidateWithPath(path + "\u002f\u0047\u0061\u006d\u006d\u0061"); _abeff != nil {
			return _abeff
		}
	}
	if _bcgcb.InvGamma != nil {
		if _cggef := _bcgcb.InvGamma.ValidateWithPath(path + "\u002fI\u006e\u0076\u0047\u0061\u006d\u006da"); _cggef != nil {
			return _cggef
		}
	}
	return nil
}

type CT_TextListStyle struct {
	DefPPr  *CT_TextParagraphProperties
	Lvl1pPr *CT_TextParagraphProperties
	Lvl2pPr *CT_TextParagraphProperties
	Lvl3pPr *CT_TextParagraphProperties
	Lvl4pPr *CT_TextParagraphProperties
	Lvl5pPr *CT_TextParagraphProperties
	Lvl6pPr *CT_TextParagraphProperties
	Lvl7pPr *CT_TextParagraphProperties
	Lvl8pPr *CT_TextParagraphProperties
	Lvl9pPr *CT_TextParagraphProperties
	ExtLst  *CT_OfficeArtExtensionList
}

func (_gebdf *EG_TextBullet) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bgbfdc:
	for {
		_fabacg, _ccbde := d.Token()
		if _ccbde != nil {
			return _ccbde
		}
		switch _aebdb := _fabacg.(type) {
		case _g.StartElement:
			switch _aebdb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}:
				_gebdf.BuNone = NewCT_TextNoBullet()
				if _egadb := d.DecodeElement(_gebdf.BuNone, &_aebdb); _egadb != nil {
					return _egadb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}:
				_gebdf.BuAutoNum = NewCT_TextAutonumberBullet()
				if _aacgea := d.DecodeElement(_gebdf.BuAutoNum, &_aebdb); _aacgea != nil {
					return _aacgea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}:
				_gebdf.BuChar = NewCT_TextCharBullet()
				if _bfgba := d.DecodeElement(_gebdf.BuChar, &_aebdb); _bfgba != nil {
					return _bfgba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}:
				_gebdf.BuBlip = NewCT_TextBlipBullet()
				if _cecdf := d.DecodeElement(_gebdf.BuBlip, &_aebdb); _cecdf != nil {
					return _cecdf
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054e\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074 \u0025\u0076", _aebdb.Name)
				if _ccdbea := d.Skip(); _ccdbea != nil {
					return _ccdbea
				}
			}
		case _g.EndElement:
			break _bgbfdc
		case _g.CharData:
		}
	}
	return nil
}

func (_ggddfc *CT_TextSpacingPercent) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _gf.Sprintf("\u0025\u0076", _ggddfc.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fbdc *CT_GammaTransform) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_gafe, _edcd := d.Token()
		if _edcd != nil {
			return _gf.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0061\u006d\u006d\u0061\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d: \u0025\u0073", _edcd)
		}
		if _cbdc, _ddef := _gafe.(_g.EndElement); _ddef && _cbdc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_adgabc ST_AnimationChartOnlyBuildType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cfaca := _g.Attr{}
	_cfaca.Name = name
	switch _adgabc {
	case ST_AnimationChartOnlyBuildTypeUnset:
		_cfaca.Value = ""
	case ST_AnimationChartOnlyBuildTypeSeries:
		_cfaca.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_AnimationChartOnlyBuildTypeCategory:
		_cfaca.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_AnimationChartOnlyBuildTypeSeriesEl:
		_cfaca.Value = "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case ST_AnimationChartOnlyBuildTypeCategoryEl:
		_cfaca.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return _cfaca, nil
}

func (_cgfg *CT_FillOverlayEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cgfg.BlendAttr = ST_BlendMode(1)
	for _, _eaecg := range start.Attr {
		if _eaecg.Name.Local == "\u0062\u006c\u0065n\u0064" {
			_cgfg.BlendAttr.UnmarshalXMLAttr(_eaecg)
			continue
		}
	}
_bbabe:
	for {
		_gfabc, _efaf := d.Token()
		if _efaf != nil {
			return _efaf
		}
		switch _cfad := _gfabc.(type) {
		case _g.StartElement:
			switch _cfad.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_cgfg.NoFill = NewCT_NoFillProperties()
				if _gbee := d.DecodeElement(_cgfg.NoFill, &_cfad); _gbee != nil {
					return _gbee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_cgfg.SolidFill = NewCT_SolidColorFillProperties()
				if _cdgef := d.DecodeElement(_cgfg.SolidFill, &_cfad); _cdgef != nil {
					return _cdgef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_cgfg.GradFill = NewCT_GradientFillProperties()
				if _gdcc := d.DecodeElement(_cgfg.GradFill, &_cfad); _gdcc != nil {
					return _gdcc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_cgfg.BlipFill = NewCT_BlipFillProperties()
				if _ebgf := d.DecodeElement(_cgfg.BlipFill, &_cfad); _ebgf != nil {
					return _ebgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_cgfg.PattFill = NewCT_PatternFillProperties()
				if _cdcc := d.DecodeElement(_cgfg.PattFill, &_cfad); _cdcc != nil {
					return _cdcc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_cgfg.GrpFill = NewCT_GroupFillProperties()
				if _bdgd := d.DecodeElement(_cgfg.GrpFill, &_cfad); _bdgd != nil {
					return _bdgd
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _cfad.Name)
				if _dcbeb := d.Skip(); _dcbeb != nil {
					return _dcbeb
				}
			}
		case _g.EndElement:
			break _bbabe
		case _g.CharData:
		}
	}
	return nil
}

func ParseUnionST_FixedPercentage(s string) (ST_FixedPercentage, error) {
	_gdccg := ST_FixedPercentage{}
	if _ge.ST_FixedPercentagePatternRe.MatchString(s) {
		_gdccg.ST_FixedPercentage = &ST_Percentage{}
		_gdccg.ST_FixedPercentage.ST_Percentage = &s
	} else {
		_gdgdge, _bddab := _c.ParseInt(s, 10, 64)
		if _bddab != nil {
			return _gdccg, _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _bddab)
		}
		_aafe := int32(_gdgdge)
		_gdccg.ST_FixedPercentageDecimal = &_aafe
	}
	return _gdccg, nil
}

// ValidateWithPath validates the CT_SchemeColor and its children, prefixing error messages with path
func (_edebb *CT_SchemeColor) ValidateWithPath(path string) error {
	if _edebb.ValAttr == ST_SchemeColorValUnset {
		return _gf.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _aegfc := _edebb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _aegfc != nil {
		return _aegfc
	}
	for _eafcb, _bfggee := range _edebb.EG_ColorTransform {
		if _gbedce := _bfggee.ValidateWithPath(_gf.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _eafcb)); _gbedce != nil {
			return _gbedce
		}
	}
	return nil
}

func (_agbedc ST_AnimationChartOnlyBuildType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_agbedc.String(), start)
}

func NewCT_Blip() *CT_Blip { _fdfe := &CT_Blip{}; return _fdfe }

// ValidateWithPath validates the CT_TableProperties and its children, prefixing error messages with path
func (_fbafgd *CT_TableProperties) ValidateWithPath(path string) error {
	if _fbafgd.NoFill != nil {
		if _efeec := _fbafgd.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _efeec != nil {
			return _efeec
		}
	}
	if _fbafgd.SolidFill != nil {
		if _daccfa := _fbafgd.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _daccfa != nil {
			return _daccfa
		}
	}
	if _fbafgd.GradFill != nil {
		if _cabfc := _fbafgd.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _cabfc != nil {
			return _cabfc
		}
	}
	if _fbafgd.BlipFill != nil {
		if _gaebff := _fbafgd.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _gaebff != nil {
			return _gaebff
		}
	}
	if _fbafgd.PattFill != nil {
		if _degfd := _fbafgd.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _degfd != nil {
			return _degfd
		}
	}
	if _fbafgd.GrpFill != nil {
		if _dcebac := _fbafgd.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _dcebac != nil {
			return _dcebac
		}
	}
	if _fbafgd.EffectLst != nil {
		if _ffbfc := _fbafgd.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _ffbfc != nil {
			return _ffbfc
		}
	}
	if _fbafgd.EffectDag != nil {
		if _acce := _fbafgd.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _acce != nil {
			return _acce
		}
	}
	if _fbafgd.Choice != nil {
		if _gdbf := _fbafgd.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _gdbf != nil {
			return _gdbf
		}
	}
	if _fbafgd.ExtLst != nil {
		if _gccfa := _fbafgd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gccfa != nil {
			return _gccfa
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomGeometry2D and its children, prefixing error messages with path
func (_cgdeg *CT_CustomGeometry2D) ValidateWithPath(path string) error {
	if _cgdeg.AvLst != nil {
		if _dfbb := _cgdeg.AvLst.ValidateWithPath(path + "\u002f\u0041\u0076\u004c\u0073\u0074"); _dfbb != nil {
			return _dfbb
		}
	}
	if _cgdeg.GdLst != nil {
		if _bfaa := _cgdeg.GdLst.ValidateWithPath(path + "\u002f\u0047\u0064\u004c\u0073\u0074"); _bfaa != nil {
			return _bfaa
		}
	}
	if _cgdeg.AhLst != nil {
		if _cbab := _cgdeg.AhLst.ValidateWithPath(path + "\u002f\u0041\u0068\u004c\u0073\u0074"); _cbab != nil {
			return _cbab
		}
	}
	if _cgdeg.CxnLst != nil {
		if _gfag := _cgdeg.CxnLst.ValidateWithPath(path + "\u002fC\u0078\u006e\u004c\u0073\u0074"); _gfag != nil {
			return _gfag
		}
	}
	if _cgdeg.Rect != nil {
		if _gbbe := _cgdeg.Rect.ValidateWithPath(path + "\u002f\u0052\u0065c\u0074"); _gbbe != nil {
			return _gbbe
		}
	}
	if _dfe := _cgdeg.PathLst.ValidateWithPath(path + "\u002f\u0050\u0061\u0074\u0068\u004c\u0073\u0074"); _dfe != nil {
		return _dfe
	}
	return nil
}

func NewCT_NonVisualConnectorProperties() *CT_NonVisualConnectorProperties {
	_dffd := &CT_NonVisualConnectorProperties{}
	return _dffd
}

// ValidateWithPath validates the CT_EffectProperties and its children, prefixing error messages with path
func (_fedfd *CT_EffectProperties) ValidateWithPath(path string) error {
	if _fedfd.EffectLst != nil {
		if _dgfc := _fedfd.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _dgfc != nil {
			return _dgfc
		}
	}
	if _fedfd.EffectDag != nil {
		if _fbdbf := _fedfd.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _fbdbf != nil {
			return _fbdbf
		}
	}
	return nil
}

const (
	ST_SystemColorValUnset                   ST_SystemColorVal = 0
	ST_SystemColorValScrollBar               ST_SystemColorVal = 1
	ST_SystemColorValBackground              ST_SystemColorVal = 2
	ST_SystemColorValActiveCaption           ST_SystemColorVal = 3
	ST_SystemColorValInactiveCaption         ST_SystemColorVal = 4
	ST_SystemColorValMenu                    ST_SystemColorVal = 5
	ST_SystemColorValWindow                  ST_SystemColorVal = 6
	ST_SystemColorValWindowFrame             ST_SystemColorVal = 7
	ST_SystemColorValMenuText                ST_SystemColorVal = 8
	ST_SystemColorValWindowText              ST_SystemColorVal = 9
	ST_SystemColorValCaptionText             ST_SystemColorVal = 10
	ST_SystemColorValActiveBorder            ST_SystemColorVal = 11
	ST_SystemColorValInactiveBorder          ST_SystemColorVal = 12
	ST_SystemColorValAppWorkspace            ST_SystemColorVal = 13
	ST_SystemColorValHighlight               ST_SystemColorVal = 14
	ST_SystemColorValHighlightText           ST_SystemColorVal = 15
	ST_SystemColorValBtnFace                 ST_SystemColorVal = 16
	ST_SystemColorValBtnShadow               ST_SystemColorVal = 17
	ST_SystemColorValGrayText                ST_SystemColorVal = 18
	ST_SystemColorValBtnText                 ST_SystemColorVal = 19
	ST_SystemColorValInactiveCaptionText     ST_SystemColorVal = 20
	ST_SystemColorValBtnHighlight            ST_SystemColorVal = 21
	ST_SystemColorVal3dDkShadow              ST_SystemColorVal = 22
	ST_SystemColorVal3dLight                 ST_SystemColorVal = 23
	ST_SystemColorValInfoText                ST_SystemColorVal = 24
	ST_SystemColorValInfoBk                  ST_SystemColorVal = 25
	ST_SystemColorValHotLight                ST_SystemColorVal = 26
	ST_SystemColorValGradientActiveCaption   ST_SystemColorVal = 27
	ST_SystemColorValGradientInactiveCaption ST_SystemColorVal = 28
	ST_SystemColorValMenuHighlight           ST_SystemColorVal = 29
	ST_SystemColorValMenuBar                 ST_SystemColorVal = 30
)

func (_dbdaa *CT_Cell3D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dbdaa.Bevel = NewCT_Bevel()
	for _, _aaeb := range start.Attr {
		if _aaeb.Name.Local == "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c" {
			_dbdaa.PrstMaterialAttr.UnmarshalXMLAttr(_aaeb)
			continue
		}
	}
_fbfg:
	for {
		_dcab, _egdf := d.Token()
		if _egdf != nil {
			return _egdf
		}
		switch _ffbb := _dcab.(type) {
		case _g.StartElement:
			switch _ffbb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}:
				if _beaf := d.DecodeElement(_dbdaa.Bevel, &_ffbb); _beaf != nil {
					return _beaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}:
				_dbdaa.LightRig = NewCT_LightRig()
				if _dabdf := d.DecodeElement(_dbdaa.LightRig, &_ffbb); _dabdf != nil {
					return _dabdf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbdaa.ExtLst = NewCT_OfficeArtExtensionList()
				if _beac := d.DecodeElement(_dbdaa.ExtLst, &_ffbb); _beac != nil {
					return _beac
				}
			default:
				_b.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u0065\u006cl\u0033\u0044 \u0025\u0076", _ffbb.Name)
				if _bcfc := d.Skip(); _bcfc != nil {
					return _bcfc
				}
			}
		case _g.EndElement:
			break _fbfg
		case _g.CharData:
		}
	}
	return nil
}

type CT_PolarAdjustHandle struct {
	GdRefRAttr   *string
	MinRAttr     *ST_AdjCoordinate
	MaxRAttr     *ST_AdjCoordinate
	GdRefAngAttr *string
	MinAngAttr   *ST_AdjAngle
	MaxAngAttr   *ST_AdjAngle
	Pos          *CT_AdjPoint2D
}

func (_edcec ST_TextAlignType) Validate() error { return _edcec.ValidateWithPath("") }

func (_ceddg *CT_GrayscaleTransform) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_aaga, _dgeg := d.Token()
		if _dgeg != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0079\u0073\u0063\u0061\u006c\u0065T\u0072\u0061\u006e\u0073\u0066\u006f\u0072m\u003a\u0020\u0025\u0073", _dgeg)
		}
		if _cgcf, _gccg := _aaga.(_g.EndElement); _gccg && _cgcf.Name == start.Name {
			break
		}
	}
	return nil
}

func (_efaeb ST_TextAutonumberScheme) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_faebf := _g.Attr{}
	_faebf.Name = name
	switch _efaeb {
	case ST_TextAutonumberSchemeUnset:
		_faebf.Value = ""
	case ST_TextAutonumberSchemeAlphaLcParenBoth:
		_faebf.Value = "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeAlphaUcParenBoth:
		_faebf.Value = "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeAlphaLcParenR:
		_faebf.Value = "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeAlphaUcParenR:
		_faebf.Value = "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeAlphaLcPeriod:
		_faebf.Value = "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeAlphaUcPeriod:
		_faebf.Value = "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabicParenBoth:
		_faebf.Value = "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeArabicParenR:
		_faebf.Value = "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeArabicPeriod:
		_faebf.Value = "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabicPlain:
		_faebf.Value = "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeRomanLcParenBoth:
		_faebf.Value = "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeRomanUcParenBoth:
		_faebf.Value = "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeRomanLcParenR:
		_faebf.Value = "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeRomanUcParenR:
		_faebf.Value = "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeRomanLcPeriod:
		_faebf.Value = "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeRomanUcPeriod:
		_faebf.Value = "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeCircleNumDbPlain:
		_faebf.Value = "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeCircleNumWdBlackPlain:
		_faebf.Value = "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeCircleNumWdWhitePlain:
		_faebf.Value = "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeArabicDbPeriod:
		_faebf.Value = "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabicDbPlain:
		_faebf.Value = "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1ChsPeriod:
		_faebf.Value = "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeEa1ChsPlain:
		_faebf.Value = "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1ChtPeriod:
		_faebf.Value = "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeEa1ChtPlain:
		_faebf.Value = "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1JpnChsDbPeriod:
		_faebf.Value = "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeEa1JpnKorPlain:
		_faebf.Value = "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1JpnKorPeriod:
		_faebf.Value = "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabic1Minus:
		_faebf.Value = "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073"
	case ST_TextAutonumberSchemeArabic2Minus:
		_faebf.Value = "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073"
	case ST_TextAutonumberSchemeHebrew2Minus:
		_faebf.Value = "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073"
	case ST_TextAutonumberSchemeThaiAlphaPeriod:
		_faebf.Value = "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeThaiAlphaParenR:
		_faebf.Value = "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeThaiAlphaParenBoth:
		_faebf.Value = "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeThaiNumPeriod:
		_faebf.Value = "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeThaiNumParenR:
		_faebf.Value = "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeThaiNumParenBoth:
		_faebf.Value = "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeHindiAlphaPeriod:
		_faebf.Value = "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeHindiNumPeriod:
		_faebf.Value = "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeHindiNumParenR:
		_faebf.Value = "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeHindiAlpha1Period:
		_faebf.Value = "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064"
	}
	return _faebf, nil
}

func (_bccc *CT_Path2DArcTo) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fcccfg := range start.Attr {
		if _fcccfg.Name.Local == "\u0077\u0052" {
			_eddbda, _cabbb := ParseUnionST_AdjCoordinate(_fcccfg.Value)
			if _cabbb != nil {
				return _cabbb
			}
			_bccc.WRAttr = _eddbda
			continue
		}
		if _fcccfg.Name.Local == "\u0068\u0052" {
			_dbcdb, _ebfga := ParseUnionST_AdjCoordinate(_fcccfg.Value)
			if _ebfga != nil {
				return _ebfga
			}
			_bccc.HRAttr = _dbcdb
			continue
		}
		if _fcccfg.Name.Local == "\u0073\u0074\u0041n\u0067" {
			_dadac, _dgab := ParseUnionST_AdjAngle(_fcccfg.Value)
			if _dgab != nil {
				return _dgab
			}
			_bccc.StAngAttr = _dadac
			continue
		}
		if _fcccfg.Name.Local == "\u0073\u0077\u0041n\u0067" {
			_begca, _bcad := ParseUnionST_AdjAngle(_fcccfg.Value)
			if _bcad != nil {
				return _bcad
			}
			_bccc.SwAngAttr = _begca
			continue
		}
	}
	for {
		_dgbdc, _dbfb := d.Token()
		if _dbfb != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0074\u0068\u0032\u0044\u0041\u0072\u0063\u0054\u006f:\u0020\u0025\u0073", _dbfb)
		}
		if _dfea, _fbfbc := _dgbdc.(_g.EndElement); _fbfbc && _dfea.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_GvmlPictureNonVisual and its children
func (_fbbfb *CT_GvmlPictureNonVisual) Validate() error {
	return _fbbfb.ValidateWithPath("\u0043\u0054\u005fGv\u006d\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

// ValidateWithPath validates the CT_FillProperties and its children, prefixing error messages with path
func (_fagcg *CT_FillProperties) ValidateWithPath(path string) error {
	if _fagcg.NoFill != nil {
		if _cadag := _fagcg.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _cadag != nil {
			return _cadag
		}
	}
	if _fagcg.SolidFill != nil {
		if _eceaf := _fagcg.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _eceaf != nil {
			return _eceaf
		}
	}
	if _fagcg.GradFill != nil {
		if _cface := _fagcg.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _cface != nil {
			return _cface
		}
	}
	if _fagcg.BlipFill != nil {
		if _dede := _fagcg.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _dede != nil {
			return _dede
		}
	}
	if _fagcg.PattFill != nil {
		if _baagf := _fagcg.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _baagf != nil {
			return _baagf
		}
	}
	if _fagcg.GrpFill != nil {
		if _fgecb := _fagcg.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _fgecb != nil {
			return _fgecb
		}
	}
	return nil
}

func (_fafabb *ST_PresetShadowVal) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_fafabb = 0
	case "\u0073\u0068\u0064w\u0031":
		*_fafabb = 1
	case "\u0073\u0068\u0064w\u0032":
		*_fafabb = 2
	case "\u0073\u0068\u0064w\u0033":
		*_fafabb = 3
	case "\u0073\u0068\u0064w\u0034":
		*_fafabb = 4
	case "\u0073\u0068\u0064w\u0035":
		*_fafabb = 5
	case "\u0073\u0068\u0064w\u0036":
		*_fafabb = 6
	case "\u0073\u0068\u0064w\u0037":
		*_fafabb = 7
	case "\u0073\u0068\u0064w\u0038":
		*_fafabb = 8
	case "\u0073\u0068\u0064w\u0039":
		*_fafabb = 9
	case "\u0073\u0068\u0064\u0077\u0031\u0030":
		*_fafabb = 10
	case "\u0073\u0068\u0064\u0077\u0031\u0031":
		*_fafabb = 11
	case "\u0073\u0068\u0064\u0077\u0031\u0032":
		*_fafabb = 12
	case "\u0073\u0068\u0064\u0077\u0031\u0033":
		*_fafabb = 13
	case "\u0073\u0068\u0064\u0077\u0031\u0034":
		*_fafabb = 14
	case "\u0073\u0068\u0064\u0077\u0031\u0035":
		*_fafabb = 15
	case "\u0073\u0068\u0064\u0077\u0031\u0036":
		*_fafabb = 16
	case "\u0073\u0068\u0064\u0077\u0031\u0037":
		*_fafabb = 17
	case "\u0073\u0068\u0064\u0077\u0031\u0038":
		*_fafabb = 18
	case "\u0073\u0068\u0064\u0077\u0031\u0039":
		*_fafabb = 19
	case "\u0073\u0068\u0064\u0077\u0032\u0030":
		*_fafabb = 20
	}
	return nil
}

type CT_PresetShadowEffect struct {
	PrstAttr  ST_PresetShadowVal
	DistAttr  *int64
	DirAttr   *int32
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

// ValidateWithPath validates the CT_ShapeStyle and its children, prefixing error messages with path
func (_egacb *CT_ShapeStyle) ValidateWithPath(path string) error {
	if _ccaeff := _egacb.LnRef.ValidateWithPath(path + "\u002f\u004c\u006e\u0052\u0065\u0066"); _ccaeff != nil {
		return _ccaeff
	}
	if _feabfd := _egacb.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _feabfd != nil {
		return _feabfd
	}
	if _affgca := _egacb.EffectRef.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"); _affgca != nil {
		return _affgca
	}
	if _bfgd := _egacb.FontRef.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0052\u0065\u0066"); _bfgd != nil {
		return _bfgd
	}
	return nil
}

func (_ggce *CT_Path2DLineTo) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_gfced := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0074"}}
	e.EncodeElement(_ggce.Pt, _gfced)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bdffc ST_BlackWhiteMode) String() string {
	switch _bdffc {
	case 0:
		return ""
	case 1:
		return "\u0063\u006c\u0072"
	case 2:
		return "\u0061\u0075\u0074\u006f"
	case 3:
		return "\u0067\u0072\u0061\u0079"
	case 4:
		return "\u006c\u0074\u0047\u0072\u0061\u0079"
	case 5:
		return "\u0069n\u0076\u0047\u0072\u0061\u0079"
	case 6:
		return "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e"
	case 7:
		return "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y"
	case 8:
		return "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065"
	case 9:
		return "\u0062\u006c\u0061c\u006b"
	case 10:
		return "\u0077\u0068\u0069t\u0065"
	case 11:
		return "\u0068\u0069\u0064\u0064\u0065\u006e"
	}
	return ""
}

// Validate validates the CT_StyleMatrixReference and its children
func (_dgfce *CT_StyleMatrixReference) Validate() error {
	return _dgfce.ValidateWithPath("\u0043\u0054\u005fSt\u0079\u006c\u0065\u004d\u0061\u0074\u0072\u0069\u0078\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065")
}

// ValidateWithPath validates the CT_DuotoneEffect and its children, prefixing error messages with path
func (_fgae *CT_DuotoneEffect) ValidateWithPath(path string) error {
	for _dgbae, _gdde := range _fgae.EG_ColorChoice {
		if _dfae := _gdde.ValidateWithPath(_gf.Sprintf("%\u0073\u002f\u0045\u0047_C\u006fl\u006f\u0072\u0043\u0068\u006fi\u0063\u0065\u005b\u0025\u0064\u005d", path, _dgbae)); _dfae != nil {
			return _dfae
		}
	}
	return nil
}

func (_bgba *CT_CustomColorList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _bgba.CustClr != nil {
		_gadb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u0075\u0073\u0074\u0043\u006cr"}}
		for _, _cagcb := range _bgba.CustClr {
			e.EncodeElement(_cagcb, _gadb)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_EffectList struct {
	Blur        *CT_BlurEffect
	FillOverlay *CT_FillOverlayEffect
	Glow        *CT_GlowEffect
	InnerShdw   *CT_InnerShadowEffect
	OuterShdw   *CT_OuterShadowEffect
	PrstShdw    *CT_PresetShadowEffect
	Reflection  *CT_ReflectionEffect
	SoftEdge    *CT_SoftEdgesEffect
}

// Validate validates the EG_Effect and its children
func (_daeaf *EG_Effect) Validate() error {
	return _daeaf.ValidateWithPath("\u0045G\u005f\u0045\u0066\u0066\u0065\u0063t")
}

// ValidateWithPath validates the CT_AdjustHandleList and its children, prefixing error messages with path
func (_cab *CT_AdjustHandleList) ValidateWithPath(path string) error {
	for _gcg, _ecc := range _cab.AhXY {
		if _deb := _ecc.ValidateWithPath(_gf.Sprintf("%\u0073\u002f\u0041\u0068\u0058\u0059\u005b\u0025\u0064\u005d", path, _gcg)); _deb != nil {
			return _deb
		}
	}
	for _dgb, _fea := range _cab.AhPolar {
		if _egf := _fea.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0041\u0068\u0050\u006f\u006c\u0061r\u005b\u0025\u0064\u005d", path, _dgb)); _egf != nil {
			return _egf
		}
	}
	return nil
}

// Validate validates the CT_LineJoinRound and its children
func (_acccd *CT_LineJoinRound) Validate() error {
	return _acccd.ValidateWithPath("\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0052\u006f\u0075\u006e\u0064")
}

// Validate validates the CT_BlendEffect and its children
func (_fcc *CT_BlendEffect) Validate() error {
	return _fcc.ValidateWithPath("\u0043\u0054\u005f\u0042\u006c\u0065\u006e\u0064\u0045f\u0066\u0065\u0063\u0074")
}

func (_agbf *CT_ComplementTransform) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_aebfa *CT_RelativeOffsetEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ffdcg := range start.Attr {
		if _ffdcg.Name.Local == "\u0074\u0078" {
			_geaec, _egffc := ParseUnionST_Percentage(_ffdcg.Value)
			if _egffc != nil {
				return _egffc
			}
			_aebfa.TxAttr = &_geaec
			continue
		}
		if _ffdcg.Name.Local == "\u0074\u0079" {
			_ffbbb, _cagec := ParseUnionST_Percentage(_ffdcg.Value)
			if _cagec != nil {
				return _cagec
			}
			_aebfa.TyAttr = &_ffbbb
			continue
		}
	}
	for {
		_afbg, _befad := d.Token()
		if _befad != nil {
			return _gf.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0052\u0065\u006ca\u0074\u0069\u0076\u0065\u004f\u0066\u0066s\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020%\u0073", _befad)
		}
		if _fegd, _ggacg := _afbg.(_g.EndElement); _ggacg && _fegd.Name == start.Name {
			break
		}
	}
	return nil
}

// ST_FixedPercentage is a union type
type ST_FixedPercentage struct {
	ST_FixedPercentageDecimal *int32
	ST_FixedPercentage        *ST_Percentage
}

func (_ebdea ST_TextVerticalType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bdggf := _g.Attr{}
	_bdggf.Name = name
	switch _ebdea {
	case ST_TextVerticalTypeUnset:
		_bdggf.Value = ""
	case ST_TextVerticalTypeHorz:
		_bdggf.Value = "\u0068\u006f\u0072\u007a"
	case ST_TextVerticalTypeVert:
		_bdggf.Value = "\u0076\u0065\u0072\u0074"
	case ST_TextVerticalTypeVert270:
		_bdggf.Value = "\u0076e\u0072\u0074\u0032\u0037\u0030"
	case ST_TextVerticalTypeWordArtVert:
		_bdggf.Value = "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074"
	case ST_TextVerticalTypeEaVert:
		_bdggf.Value = "\u0065\u0061\u0056\u0065\u0072\u0074"
	case ST_TextVerticalTypeMongolianVert:
		_bdggf.Value = "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074"
	case ST_TextVerticalTypeWordArtVertRtl:
		_bdggf.Value = "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c"
	}
	return _bdggf, nil
}

func (_gccda *CT_TextParagraph) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _gccda.PPr != nil {
		_aebee := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070P\u0072"}}
		e.EncodeElement(_gccda.PPr, _aebee)
	}
	if _gccda.EG_TextRun != nil {
		for _, _eaabc := range _gccda.EG_TextRun {
			_eaabc.MarshalXML(e, _g.StartElement{})
		}
	}
	if _gccda.EndParaRPr != nil {
		_eecfe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065n\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"}}
		e.EncodeElement(_gccda.EndParaRPr, _eecfe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_PresetLineDashValUnset         ST_PresetLineDashVal = 0
	ST_PresetLineDashValSolid         ST_PresetLineDashVal = 1
	ST_PresetLineDashValDot           ST_PresetLineDashVal = 2
	ST_PresetLineDashValDash          ST_PresetLineDashVal = 3
	ST_PresetLineDashValLgDash        ST_PresetLineDashVal = 4
	ST_PresetLineDashValDashDot       ST_PresetLineDashVal = 5
	ST_PresetLineDashValLgDashDot     ST_PresetLineDashVal = 6
	ST_PresetLineDashValLgDashDotDot  ST_PresetLineDashVal = 7
	ST_PresetLineDashValSysDash       ST_PresetLineDashVal = 8
	ST_PresetLineDashValSysDot        ST_PresetLineDashVal = 9
	ST_PresetLineDashValSysDashDot    ST_PresetLineDashVal = 10
	ST_PresetLineDashValSysDashDotDot ST_PresetLineDashVal = 11
)

func (_badcc ST_TextHorzOverflowType) String() string {
	switch _badcc {
	case 0:
		return ""
	case 1:
		return "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case 2:
		return "\u0063\u006c\u0069\u0070"
	}
	return ""
}

func ParseUnionST_TextSpacingPercentOrPercentString(s string) (ST_TextSpacingPercentOrPercentString, error) {
	_fdabdf := ST_TextSpacingPercentOrPercentString{}
	if _ge.ST_PercentagePatternRe.MatchString(s) {
		_fdabdf.ST_Percentage = &s
	} else {
		_aggbc, _dabef := _c.ParseInt(s, 10, 64)
		if _dabef != nil {
			return _fdabdf, _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _dabef)
		}
		_ffacd := int32(_aggbc)
		_fdabdf.ST_TextSpacingPercent = &_ffacd
	}
	return _fdabdf, nil
}

func (_gaaa *CT_Hyperlink) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cafcb := range start.Attr {
		if _cafcb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cafcb.Name.Local == "\u0069\u0064" || _cafcb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cafcb.Name.Local == "\u0069\u0064" {
			_baaff, _bgfdb := _cafcb.Value, error(nil)
			if _bgfdb != nil {
				return _bgfdb
			}
			_gaaa.IdAttr = &_baaff
			continue
		}
		if _cafcb.Name.Local == "\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0055\u0072\u006c" {
			_fddbg, _fbdg := _cafcb.Value, error(nil)
			if _fbdg != nil {
				return _fbdg
			}
			_gaaa.InvalidUrlAttr = &_fddbg
			continue
		}
		if _cafcb.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_eded, _efdf := _cafcb.Value, error(nil)
			if _efdf != nil {
				return _efdf
			}
			_gaaa.ActionAttr = &_eded
			continue
		}
		if _cafcb.Name.Local == "\u0074\u0067\u0074\u0046\u0072\u0061\u006d\u0065" {
			_gefd, _fdcg := _cafcb.Value, error(nil)
			if _fdcg != nil {
				return _fdcg
			}
			_gaaa.TgtFrameAttr = &_gefd
			continue
		}
		if _cafcb.Name.Local == "\u0074o\u006f\u006c\u0074\u0069\u0070" {
			_eabb, _dcecc := _cafcb.Value, error(nil)
			if _dcecc != nil {
				return _dcecc
			}
			_gaaa.TooltipAttr = &_eabb
			continue
		}
		if _cafcb.Name.Local == "\u0068i\u0073\u0074\u006f\u0072\u0079" {
			_abdga, _eddedc := _c.ParseBool(_cafcb.Value)
			if _eddedc != nil {
				return _eddedc
			}
			_gaaa.HistoryAttr = &_abdga
			continue
		}
		if _cafcb.Name.Local == "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074C\u006c\u0069\u0063\u006b" {
			_dfgff, _ddcce := _c.ParseBool(_cafcb.Value)
			if _ddcce != nil {
				return _ddcce
			}
			_gaaa.HighlightClickAttr = &_dfgff
			continue
		}
		if _cafcb.Name.Local == "\u0065\u006e\u0064\u0053\u006e\u0064" {
			_aeff, _bdbbd := _c.ParseBool(_cafcb.Value)
			if _bdbbd != nil {
				return _bdbbd
			}
			_gaaa.EndSndAttr = &_aeff
			continue
		}
	}
_ebca:
	for {
		_bdgdf, _affeg := d.Token()
		if _affeg != nil {
			return _affeg
		}
		switch _fabdg := _bdgdf.(type) {
		case _g.StartElement:
			switch _fabdg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064"}:
				_gaaa.Snd = NewCT_EmbeddedWAVAudioFile()
				if _fbbfbe := d.DecodeElement(_gaaa.Snd, &_fabdg); _fbbfbe != nil {
					return _fbbfbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gaaa.ExtLst = NewCT_OfficeArtExtensionList()
				if _fegbe := d.DecodeElement(_gaaa.ExtLst, &_fabdg); _fegbe != nil {
					return _fegbe
				}
			default:
				_b.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_H\u0079\u0070e\u0072\u006c\u0069\u006e\u006b\u0020\u0025\u0076", _fabdg.Name)
				if _fbba := d.Skip(); _fbba != nil {
					return _fbba
				}
			}
		case _g.EndElement:
			break _ebca
		case _g.CharData:
		}
	}
	return nil
}

type ST_TextUnderlineType byte

func NewCT_PositiveFixedAngle() *CT_PositiveFixedAngle {
	_fdgc := &CT_PositiveFixedAngle{}
	_fdgc.ValAttr = 0
	return _fdgc
}

type CT_TableBackgroundStyle struct {
	Fill      *CT_FillProperties
	FillRef   *CT_StyleMatrixReference
	Effect    *CT_EffectProperties
	EffectRef *CT_StyleMatrixReference
}

// ValidateWithPath validates the CT_StyleMatrixReference and its children, prefixing error messages with path
func (_aegag *CT_StyleMatrixReference) ValidateWithPath(path string) error {
	if _aegag.ScrgbClr != nil {
		if _aggaa := _aegag.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _aggaa != nil {
			return _aggaa
		}
	}
	if _aegag.SrgbClr != nil {
		if _cgbbe := _aegag.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _cgbbe != nil {
			return _cgbbe
		}
	}
	if _aegag.HslClr != nil {
		if _aagf := _aegag.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _aagf != nil {
			return _aagf
		}
	}
	if _aegag.SysClr != nil {
		if _badgf := _aegag.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _badgf != nil {
			return _badgf
		}
	}
	if _aegag.SchemeClr != nil {
		if _edfef := _aegag.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _edfef != nil {
			return _edfef
		}
	}
	if _aegag.PrstClr != nil {
		if _fbddd := _aegag.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _fbddd != nil {
			return _fbddd
		}
	}
	return nil
}

func NewCT_CustomColor() *CT_CustomColor { _ddca := &CT_CustomColor{}; return _ddca }

type CT_FillOverlayEffect struct {
	BlendAttr ST_BlendMode
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

type CT_TextLineBreak struct{ RPr *CT_TextCharacterProperties }

// ST_AdjCoordinate is a union type
type ST_AdjCoordinate struct {
	ST_Coordinate    *ST_Coordinate
	ST_GeomGuideName *string
}

func (_ccgffa *ST_DgmBuildStep) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_ccgffa = 0
	case "\u0073\u0070":
		*_ccgffa = 1
	case "\u0062\u0067":
		*_ccgffa = 2
	}
	return nil
}

type EG_FillModeProperties struct {
	Tile    *CT_TileInfoProperties
	Stretch *CT_StretchInfoProperties
}

func (_cecbd *ST_PresetLineDashVal) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_egdee, _ccdag := d.Token()
	if _ccdag != nil {
		return _ccdag
	}
	if _cefac, _cbgfc := _egdee.(_g.EndElement); _cbgfc && _cefac.Name == start.Name {
		*_cecbd = 1
		return nil
	}
	if _dcfce, _fgfgb := _egdee.(_g.CharData); !_fgfgb {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _egdee)
	} else {
		switch string(_dcfce) {
		case "":
			*_cecbd = 0
		case "\u0073\u006f\u006ci\u0064":
			*_cecbd = 1
		case "\u0064\u006f\u0074":
			*_cecbd = 2
		case "\u0064\u0061\u0073\u0068":
			*_cecbd = 3
		case "\u006c\u0067\u0044\u0061\u0073\u0068":
			*_cecbd = 4
		case "\u0064a\u0073\u0068\u0044\u006f\u0074":
			*_cecbd = 5
		case "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft":
			*_cecbd = 6
		case "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_cecbd = 7
		case "\u0073y\u0073\u0044\u0061\u0073\u0068":
			*_cecbd = 8
		case "\u0073\u0079\u0073\u0044\u006f\u0074":
			*_cecbd = 9
		case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
			*_cecbd = 10
		case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_cecbd = 11
		}
	}
	_egdee, _ccdag = d.Token()
	if _ccdag != nil {
		return _ccdag
	}
	if _edgdb, _bbafe := _egdee.(_g.EndElement); _bbafe && _edgdb.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _egdee)
}

func (_afgc *CT_ShapeStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_aecec := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u006e\u0052\u0065\u0066"}}
	e.EncodeElement(_afgc.LnRef, _aecec)
	_faacc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
	e.EncodeElement(_afgc.FillRef, _faacc)
	_fded := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"}}
	e.EncodeElement(_afgc.EffectRef, _fded)
	_ggafc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0066\u006f\u006e\u0074\u0052\u0065f"}}
	e.EncodeElement(_afgc.FontRef, _ggafc)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_TextBulletTypeface and its children, prefixing error messages with path
func (_acfbbb *EG_TextBulletTypeface) ValidateWithPath(path string) error {
	if _acfbbb.BuFontTx != nil {
		if _fgdfd := _acfbbb.BuFontTx.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074\u0054x"); _fgdfd != nil {
			return _fgdfd
		}
	}
	if _acfbbb.BuFont != nil {
		if _becfa := _acfbbb.BuFont.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074"); _becfa != nil {
			return _becfa
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextBodyProperties and its children, prefixing error messages with path
func (_egfg *CT_TextBodyProperties) ValidateWithPath(path string) error {
	if _dfdcb := _egfg.VertOverflowAttr.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u004f\u0076\u0065\u0072\u0066\u006c\u006fw\u0041\u0074\u0074\u0072"); _dfdcb != nil {
		return _dfdcb
	}
	if _fcaad := _egfg.HorzOverflowAttr.ValidateWithPath(path + "\u002f\u0048\u006f\u0072\u007a\u004f\u0076\u0065\u0072\u0066\u006c\u006fw\u0041\u0074\u0074\u0072"); _fcaad != nil {
		return _fcaad
	}
	if _febbd := _egfg.VertAttr.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u0041\u0074\u0074r"); _febbd != nil {
		return _febbd
	}
	if _dafff := _egfg.WrapAttr.ValidateWithPath(path + "\u002fW\u0072\u0061\u0070\u0041\u0074\u0074r"); _dafff != nil {
		return _dafff
	}
	if _egfg.LInsAttr != nil {
		if _gdgac := _egfg.LInsAttr.ValidateWithPath(path + "\u002fL\u0049\u006e\u0073\u0041\u0074\u0074r"); _gdgac != nil {
			return _gdgac
		}
	}
	if _egfg.TInsAttr != nil {
		if _cbgdf := _egfg.TInsAttr.ValidateWithPath(path + "\u002fT\u0049\u006e\u0073\u0041\u0074\u0074r"); _cbgdf != nil {
			return _cbgdf
		}
	}
	if _egfg.RInsAttr != nil {
		if _eagacc := _egfg.RInsAttr.ValidateWithPath(path + "\u002fR\u0049\u006e\u0073\u0041\u0074\u0074r"); _eagacc != nil {
			return _eagacc
		}
	}
	if _egfg.BInsAttr != nil {
		if _ffdad := _egfg.BInsAttr.ValidateWithPath(path + "\u002fB\u0049\u006e\u0073\u0041\u0074\u0074r"); _ffdad != nil {
			return _ffdad
		}
	}
	if _egfg.NumColAttr != nil {
		if *_egfg.NumColAttr < 1 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u004e\u0075\u006d\u0043\u006f\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0031\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_egfg.NumColAttr)
		}
		if *_egfg.NumColAttr > 16 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u004e\u0075\u006d\u0043\u006f\u006c\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003c\u003d\u0020\u0031\u0036\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_egfg.NumColAttr)
		}
	}
	if _egfg.SpcColAttr != nil {
		if *_egfg.SpcColAttr < 0 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u0070\u0063\u0043\u006f\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0030\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_egfg.SpcColAttr)
		}
	}
	if _affbe := _egfg.AnchorAttr.ValidateWithPath(path + "/\u0041\u006e\u0063\u0068\u006f\u0072\u0041\u0074\u0074\u0072"); _affbe != nil {
		return _affbe
	}
	if _egfg.PrstTxWarp != nil {
		if _cgbeb := _egfg.PrstTxWarp.ValidateWithPath(path + "/\u0050\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"); _cgbeb != nil {
			return _cgbeb
		}
	}
	if _egfg.NoAutofit != nil {
		if _dcedb := _egfg.NoAutofit.ValidateWithPath(path + "\u002f\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _dcedb != nil {
			return _dcedb
		}
	}
	if _egfg.NormAutofit != nil {
		if _cdgcaf := _egfg.NormAutofit.ValidateWithPath(path + "\u002f\u004e\u006fr\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _cdgcaf != nil {
			return _cdgcaf
		}
	}
	if _egfg.SpAutoFit != nil {
		if _eefgba := _egfg.SpAutoFit.ValidateWithPath(path + "\u002f\u0053\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"); _eefgba != nil {
			return _eefgba
		}
	}
	if _egfg.Scene3d != nil {
		if _ecgfb := _egfg.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _ecgfb != nil {
			return _ecgfb
		}
	}
	if _egfg.Sp3d != nil {
		if _aedfc := _egfg.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _aedfc != nil {
			return _aedfc
		}
	}
	if _egfg.FlatTx != nil {
		if _dfbce := _egfg.FlatTx.ValidateWithPath(path + "\u002fF\u006c\u0061\u0074\u0054\u0078"); _dfbce != nil {
			return _dfbce
		}
	}
	if _egfg.ExtLst != nil {
		if _eefcd := _egfg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eefcd != nil {
			return _eefcd
		}
	}
	return nil
}

func (_fdgge *CT_HSLEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fdgge.HueAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u0075\u0065"}, Value: _gf.Sprintf("\u0025\u0076", *_fdgge.HueAttr)})
	}
	if _fdgge.SatAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0061\u0074"}, Value: _gf.Sprintf("\u0025\u0076", *_fdgge.SatAttr)})
	}
	if _fdgge.LumAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0075\u006d"}, Value: _gf.Sprintf("\u0025\u0076", *_fdgge.LumAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ColorMappingOverrideChoice and its children, prefixing error messages with path
func (_dccb *CT_ColorMappingOverrideChoice) ValidateWithPath(path string) error {
	if _dccb.MasterClrMapping != nil {
		if _dbdf := _dccb.MasterClrMapping.ValidateWithPath(path + "\u002f\u004d\u0061\u0073\u0074\u0065\u0072\u0043\u006c\u0072\u004d\u0061p\u0070\u0069\u006e\u0067"); _dbdf != nil {
			return _dbdf
		}
	}
	if _dccb.OverrideClrMapping != nil {
		if _abcc := _dccb.OverrideClrMapping.ValidateWithPath(path + "\u002f\u004f\u0076\u0065rr\u0069\u0064\u0065\u0043\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"); _abcc != nil {
			return _abcc
		}
	}
	return nil
}

type ST_CompoundLine byte

func (_aecade *CT_TransformEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dcgeb := range start.Attr {
		if _dcgeb.Name.Local == "\u0073\u0078" {
			_afdbe, _fdfgg := ParseUnionST_Percentage(_dcgeb.Value)
			if _fdfgg != nil {
				return _fdfgg
			}
			_aecade.SxAttr = &_afdbe
			continue
		}
		if _dcgeb.Name.Local == "\u0073\u0079" {
			_ddgda, _bedac := ParseUnionST_Percentage(_dcgeb.Value)
			if _bedac != nil {
				return _bedac
			}
			_aecade.SyAttr = &_ddgda
			continue
		}
		if _dcgeb.Name.Local == "\u006b\u0078" {
			_gedcba, _cabbf := _c.ParseInt(_dcgeb.Value, 10, 32)
			if _cabbf != nil {
				return _cabbf
			}
			_dgaae := int32(_gedcba)
			_aecade.KxAttr = &_dgaae
			continue
		}
		if _dcgeb.Name.Local == "\u006b\u0079" {
			_fbggfe, _agaeg := _c.ParseInt(_dcgeb.Value, 10, 32)
			if _agaeg != nil {
				return _agaeg
			}
			_gbfge := int32(_fbggfe)
			_aecade.KyAttr = &_gbfge
			continue
		}
		if _dcgeb.Name.Local == "\u0074\u0078" {
			_cbbab, _cfbbd := ParseUnionST_Coordinate(_dcgeb.Value)
			if _cfbbd != nil {
				return _cfbbd
			}
			_aecade.TxAttr = &_cbbab
			continue
		}
		if _dcgeb.Name.Local == "\u0074\u0079" {
			_agaee, _fbgcg := ParseUnionST_Coordinate(_dcgeb.Value)
			if _fbgcg != nil {
				return _fbgcg
			}
			_aecade.TyAttr = &_agaee
			continue
		}
	}
	for {
		_fcdfga, _dfdag := d.Token()
		if _dfdag != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _dfdag)
		}
		if _ccbfa, _cbbfb := _fcdfga.(_g.EndElement); _cbbfb && _ccbfa.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_GvmlTextShape and its children
func (_ccaef *CT_GvmlTextShape) Validate() error {
	return _ccaef.ValidateWithPath("\u0043\u0054_\u0047\u0076\u006dl\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065")
}

func (_afgg *CT_TextSpacing) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_eggga:
	for {
		_ggaea, _agdae := d.Token()
		if _agdae != nil {
			return _agdae
		}
		switch _bcaada := _ggaea.(type) {
		case _g.StartElement:
			switch _bcaada.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0063\u0074"}:
				_afgg.SpcPct = NewCT_TextSpacingPercent()
				if _bccfc := d.DecodeElement(_afgg.SpcPct, &_bcaada); _bccfc != nil {
					return _bccfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0074\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0074\u0073"}:
				_afgg.SpcPts = NewCT_TextSpacingPoint()
				if _adeba := d.DecodeElement(_afgg.SpcPts, &_bcaada); _adeba != nil {
					return _adeba
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070\u0061c\u0069n\u0067\u0020\u0025\u0076", _bcaada.Name)
				if _badag := d.Skip(); _badag != nil {
					return _badag
				}
			}
		case _g.EndElement:
			break _eggga
		case _g.CharData:
		}
	}
	return nil
}

func (_bddb *CT_HSLEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gcaed := range start.Attr {
		if _gcaed.Name.Local == "\u0068\u0075\u0065" {
			_bgcf, _eadee := _c.ParseInt(_gcaed.Value, 10, 32)
			if _eadee != nil {
				return _eadee
			}
			_ccgae := int32(_bgcf)
			_bddb.HueAttr = &_ccgae
			continue
		}
		if _gcaed.Name.Local == "\u0073\u0061\u0074" {
			_bdeag, _dcdd := ParseUnionST_FixedPercentage(_gcaed.Value)
			if _dcdd != nil {
				return _dcdd
			}
			_bddb.SatAttr = &_bdeag
			continue
		}
		if _gcaed.Name.Local == "\u006c\u0075\u006d" {
			_affc, _aecf := ParseUnionST_FixedPercentage(_gcaed.Value)
			if _aecf != nil {
				return _aecf
			}
			_bddb.LumAttr = &_affc
			continue
		}
	}
	for {
		_bfabg, _ggaa := d.Token()
		if _ggaa != nil {
			return _gf.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0048\u0053L\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _ggaa)
		}
		if _cgfdd, _ggfbe := _bfabg.(_g.EndElement); _ggfbe && _cgfdd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_bbcda ST_LightRigDirection) Validate() error { return _bbcda.ValidateWithPath("") }

// ValidateWithPath validates the CT_BlurEffect and its children, prefixing error messages with path
func (_aede *CT_BlurEffect) ValidateWithPath(path string) error {
	if _aede.RadAttr != nil {
		if *_aede.RadAttr < 0 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0061d\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_aede.RadAttr)
		}
		if *_aede.RadAttr > 27273042316900 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0052\u0061\u0064A\u0074\u0074\u0072 m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020%\u0076\u0029", path, *_aede.RadAttr)
		}
	}
	return nil
}

type ST_TextFontAlignType byte

type CT_NonVisualDrawingProps struct {
	IdAttr     uint32
	NameAttr   string
	DescrAttr  *string
	HiddenAttr *bool
	TitleAttr  *string
	HlinkClick *CT_Hyperlink
	HlinkHover *CT_Hyperlink
	ExtLst     *CT_OfficeArtExtensionList
}

func NewCT_ColorReplaceEffect() *CT_ColorReplaceEffect {
	_ecbf := &CT_ColorReplaceEffect{}
	return _ecbf
}

func (_efa *CT_AlphaFloorEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type ST_PresetMaterialType byte

func (_bdcfb *CT_Path2DCubicBezierTo) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_gggca := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0074"}}
	for _, _cfead := range _bdcfb.Pt {
		e.EncodeElement(_cfead, _gggca)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_afegd ST_OnOffStyleType) ValidateWithPath(path string) error {
	switch _afegd {
	case 0, 1, 2, 3:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_afegd))
	}
	return nil
}

type CT_TextSpacingPoint struct{ ValAttr int32 }

func (_fcccb *CT_LineJoinBevel) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_OuterShadowEffect and its children, prefixing error messages with path
func (_agbdbe *CT_OuterShadowEffect) ValidateWithPath(path string) error {
	if _agbdbe.BlurRadAttr != nil {
		if *_agbdbe.BlurRadAttr < 0 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006c\u0075\u0072\u0052\u0061\u0064\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_agbdbe.BlurRadAttr)
		}
		if *_agbdbe.BlurRadAttr > 27273042316900 {
			return _gf.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006c\u0075r\u0052\u0061\u0064\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_agbdbe.BlurRadAttr)
		}
	}
	if _agbdbe.DistAttr != nil {
		if *_agbdbe.DistAttr < 0 {
			return _gf.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_agbdbe.DistAttr)
		}
		if *_agbdbe.DistAttr > 27273042316900 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_agbdbe.DistAttr)
		}
	}
	if _agbdbe.DirAttr != nil {
		if *_agbdbe.DirAttr < 0 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_agbdbe.DirAttr)
		}
		if *_agbdbe.DirAttr >= 21600000 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_agbdbe.DirAttr)
		}
	}
	if _agbdbe.SxAttr != nil {
		if _adaac := _agbdbe.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _adaac != nil {
			return _adaac
		}
	}
	if _agbdbe.SyAttr != nil {
		if _efdcd := _agbdbe.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _efdcd != nil {
			return _efdcd
		}
	}
	if _agbdbe.KxAttr != nil {
		if *_agbdbe.KxAttr <= -5400000 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_agbdbe.KxAttr)
		}
		if *_agbdbe.KxAttr >= 5400000 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_agbdbe.KxAttr)
		}
	}
	if _agbdbe.KyAttr != nil {
		if *_agbdbe.KyAttr <= -5400000 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_agbdbe.KyAttr)
		}
		if *_agbdbe.KyAttr >= 5400000 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_agbdbe.KyAttr)
		}
	}
	if _facbd := _agbdbe.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _facbd != nil {
		return _facbd
	}
	if _agbdbe.ScrgbClr != nil {
		if _ddeae := _agbdbe.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _ddeae != nil {
			return _ddeae
		}
	}
	if _agbdbe.SrgbClr != nil {
		if _acgf := _agbdbe.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _acgf != nil {
			return _acgf
		}
	}
	if _agbdbe.HslClr != nil {
		if _bedf := _agbdbe.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _bedf != nil {
			return _bedf
		}
	}
	if _agbdbe.SysClr != nil {
		if _fbaag := _agbdbe.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _fbaag != nil {
			return _fbaag
		}
	}
	if _agbdbe.SchemeClr != nil {
		if _ecaa := _agbdbe.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _ecaa != nil {
			return _ecaa
		}
	}
	if _agbdbe.PrstClr != nil {
		if _bbacf := _agbdbe.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _bbacf != nil {
			return _bbacf
		}
	}
	return nil
}

func (_bcaga *ST_PresetPatternVal) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_bcaga = 0
	case "\u0070\u0063\u0074\u0035":
		*_bcaga = 1
	case "\u0070\u0063\u00741\u0030":
		*_bcaga = 2
	case "\u0070\u0063\u00742\u0030":
		*_bcaga = 3
	case "\u0070\u0063\u00742\u0035":
		*_bcaga = 4
	case "\u0070\u0063\u00743\u0030":
		*_bcaga = 5
	case "\u0070\u0063\u00744\u0030":
		*_bcaga = 6
	case "\u0070\u0063\u00745\u0030":
		*_bcaga = 7
	case "\u0070\u0063\u00746\u0030":
		*_bcaga = 8
	case "\u0070\u0063\u00747\u0030":
		*_bcaga = 9
	case "\u0070\u0063\u00747\u0035":
		*_bcaga = 10
	case "\u0070\u0063\u00748\u0030":
		*_bcaga = 11
	case "\u0070\u0063\u00749\u0030":
		*_bcaga = 12
	case "\u0068\u006f\u0072\u007a":
		*_bcaga = 13
	case "\u0076\u0065\u0072\u0074":
		*_bcaga = 14
	case "\u006c\u0074\u0048\u006f\u0072\u007a":
		*_bcaga = 15
	case "\u006c\u0074\u0056\u0065\u0072\u0074":
		*_bcaga = 16
	case "\u0064\u006b\u0048\u006f\u0072\u007a":
		*_bcaga = 17
	case "\u0064\u006b\u0056\u0065\u0072\u0074":
		*_bcaga = 18
	case "\u006ea\u0072\u0048\u006f\u0072\u007a":
		*_bcaga = 19
	case "\u006ea\u0072\u0056\u0065\u0072\u0074":
		*_bcaga = 20
	case "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a":
		*_bcaga = 21
	case "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074":
		*_bcaga = 22
	case "\u0063\u0072\u006fs\u0073":
		*_bcaga = 23
	case "\u0064\u006e\u0044\u0069\u0061\u0067":
		*_bcaga = 24
	case "\u0075\u0070\u0044\u0069\u0061\u0067":
		*_bcaga = 25
	case "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067":
		*_bcaga = 26
	case "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067":
		*_bcaga = 27
	case "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067":
		*_bcaga = 28
	case "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067":
		*_bcaga = 29
	case "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067":
		*_bcaga = 30
	case "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067":
		*_bcaga = 31
	case "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067":
		*_bcaga = 32
	case "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067":
		*_bcaga = 33
	case "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s":
		*_bcaga = 34
	case "\u0073m\u0043\u0068\u0065\u0063\u006b":
		*_bcaga = 35
	case "\u006cg\u0043\u0068\u0065\u0063\u006b":
		*_bcaga = 36
	case "\u0073\u006d\u0047\u0072\u0069\u0064":
		*_bcaga = 37
	case "\u006c\u0067\u0047\u0072\u0069\u0064":
		*_bcaga = 38
	case "\u0064o\u0074\u0047\u0072\u0069\u0064":
		*_bcaga = 39
	case "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
		*_bcaga = 40
	case "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
		*_bcaga = 41
	case "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k":
		*_bcaga = 42
	case "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k":
		*_bcaga = 43
	case "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed":
		*_bcaga = 44
	case "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064":
		*_bcaga = 45
	case "\u0064o\u0074\u0044\u006d\u006e\u0064":
		*_bcaga = 46
	case "\u0070\u006c\u0061i\u0064":
		*_bcaga = 47
	case "\u0073\u0070\u0068\u0065\u0072\u0065":
		*_bcaga = 48
	case "\u0077\u0065\u0061v\u0065":
		*_bcaga = 49
	case "\u0064\u0069\u0076o\u0074":
		*_bcaga = 50
	case "\u0073h\u0069\u006e\u0067\u006c\u0065":
		*_bcaga = 51
	case "\u0077\u0061\u0076\u0065":
		*_bcaga = 52
	case "\u0074r\u0065\u006c\u006c\u0069\u0073":
		*_bcaga = 53
	case "\u007a\u0069\u0067\u005a\u0061\u0067":
		*_bcaga = 54
	}
	return nil
}

func (_bcdag ST_ColorSchemeIndex) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_efgcd := _g.Attr{}
	_efgcd.Name = name
	switch _bcdag {
	case ST_ColorSchemeIndexUnset:
		_efgcd.Value = ""
	case ST_ColorSchemeIndexDk1:
		_efgcd.Value = "\u0064\u006b\u0031"
	case ST_ColorSchemeIndexLt1:
		_efgcd.Value = "\u006c\u0074\u0031"
	case ST_ColorSchemeIndexDk2:
		_efgcd.Value = "\u0064\u006b\u0032"
	case ST_ColorSchemeIndexLt2:
		_efgcd.Value = "\u006c\u0074\u0032"
	case ST_ColorSchemeIndexAccent1:
		_efgcd.Value = "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case ST_ColorSchemeIndexAccent2:
		_efgcd.Value = "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case ST_ColorSchemeIndexAccent3:
		_efgcd.Value = "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case ST_ColorSchemeIndexAccent4:
		_efgcd.Value = "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case ST_ColorSchemeIndexAccent5:
		_efgcd.Value = "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case ST_ColorSchemeIndexAccent6:
		_efgcd.Value = "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case ST_ColorSchemeIndexHlink:
		_efgcd.Value = "\u0068\u006c\u0069n\u006b"
	case ST_ColorSchemeIndexFolHlink:
		_efgcd.Value = "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	}
	return _efgcd, nil
}

// ValidateWithPath validates the CT_XYAdjustHandle and its children, prefixing error messages with path
func (_gecfe *CT_XYAdjustHandle) ValidateWithPath(path string) error {
	if _gecfe.MinXAttr != nil {
		if _bdadae := _gecfe.MinXAttr.ValidateWithPath(path + "\u002fM\u0069\u006e\u0058\u0041\u0074\u0074r"); _bdadae != nil {
			return _bdadae
		}
	}
	if _gecfe.MaxXAttr != nil {
		if _ddegb := _gecfe.MaxXAttr.ValidateWithPath(path + "\u002fM\u0061\u0078\u0058\u0041\u0074\u0074r"); _ddegb != nil {
			return _ddegb
		}
	}
	if _gecfe.MinYAttr != nil {
		if _geacg := _gecfe.MinYAttr.ValidateWithPath(path + "\u002fM\u0069\u006e\u0059\u0041\u0074\u0074r"); _geacg != nil {
			return _geacg
		}
	}
	if _gecfe.MaxYAttr != nil {
		if _caffb := _gecfe.MaxYAttr.ValidateWithPath(path + "\u002fM\u0061\u0078\u0059\u0041\u0074\u0074r"); _caffb != nil {
			return _caffb
		}
	}
	if _cebd := _gecfe.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _cebd != nil {
		return _cebd
	}
	return nil
}

// Validate validates the CT_TextCharBullet and its children
func (_acgdf *CT_TextCharBullet) Validate() error {
	return _acgdf.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072\u0042u\u006c\u006c\u0065\u0074")
}

func (_gedc *CT_ColorSchemeAndMapping) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_fdae := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0063\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_gedc.ClrScheme, _fdae)
	if _gedc.ClrMap != nil {
		_fdbb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
		e.EncodeElement(_gedc.ClrMap, _fdbb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextBlipBullet and its children, prefixing error messages with path
func (_bacbf *CT_TextBlipBullet) ValidateWithPath(path string) error {
	if _fgedc := _bacbf.Blip.ValidateWithPath(path + "\u002f\u0042\u006ci\u0070"); _fgedc != nil {
		return _fgedc
	}
	return nil
}

type CT_TextBody struct {
	BodyPr   *CT_TextBodyProperties
	LstStyle *CT_TextListStyle
	P        []*CT_TextParagraph
}

func (_cdgg *CT_GeomRect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dcdcc := range start.Attr {
		if _dcdcc.Name.Local == "\u006c" {
			_fadf, _edabg := ParseUnionST_AdjCoordinate(_dcdcc.Value)
			if _edabg != nil {
				return _edabg
			}
			_cdgg.LAttr = _fadf
			continue
		}
		if _dcdcc.Name.Local == "\u0074" {
			_efbc, _fddc := ParseUnionST_AdjCoordinate(_dcdcc.Value)
			if _fddc != nil {
				return _fddc
			}
			_cdgg.TAttr = _efbc
			continue
		}
		if _dcdcc.Name.Local == "\u0072" {
			_bbda, _afcg := ParseUnionST_AdjCoordinate(_dcdcc.Value)
			if _afcg != nil {
				return _afcg
			}
			_cdgg.RAttr = _bbda
			continue
		}
		if _dcdcc.Name.Local == "\u0062" {
			_cbgc, _gbbg := ParseUnionST_AdjCoordinate(_dcdcc.Value)
			if _gbbg != nil {
				return _gbbg
			}
			_cdgg.BAttr = _cbgc
			continue
		}
	}
	for {
		_acgg, _agbfa := d.Token()
		if _agbfa != nil {
			return _gf.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0065\u006f\u006d\u0052\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _agbfa)
		}
		if _fgbd, _gafg := _acgg.(_g.EndElement); _gafg && _fgbd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_EmbeddedWAVAudioFile struct {
	EmbedAttr string
	NameAttr  *string
}

func (_efeag *CT_RelativeOffsetEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _efeag.TxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0078"}, Value: _gf.Sprintf("\u0025\u0076", *_efeag.TxAttr)})
	}
	if _efeag.TyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0079"}, Value: _gf.Sprintf("\u0025\u0076", *_efeag.TyAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_DefaultShapeDefinition() *CT_DefaultShapeDefinition {
	_fdccc := &CT_DefaultShapeDefinition{}
	_fdccc.SpPr = NewCT_ShapeProperties()
	_fdccc.BodyPr = NewCT_TextBodyProperties()
	_fdccc.LstStyle = NewCT_TextListStyle()
	return _fdccc
}

type CT_PresetGeometry2D struct {
	PrstAttr ST_ShapeType
	AvLst    *CT_GeomGuideList
}

func (_ddebf *CT_LineEndProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dfgg := range start.Attr {
		if _dfgg.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ddebf.TypeAttr.UnmarshalXMLAttr(_dfgg)
			continue
		}
		if _dfgg.Name.Local == "\u0077" {
			_ddebf.WAttr.UnmarshalXMLAttr(_dfgg)
			continue
		}
		if _dfgg.Name.Local == "\u006c\u0065\u006e" {
			_ddebf.LenAttr.UnmarshalXMLAttr(_dfgg)
			continue
		}
	}
	for {
		_gaaad, _adgaa := d.Token()
		if _adgaa != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065E\u006ed\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _adgaa)
		}
		if _bagc, _dbfa := _gaaad.(_g.EndElement); _dbfa && _bagc.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_GrayscaleEffect struct{}

// ValidateWithPath validates the CT_FillEffect and its children, prefixing error messages with path
func (_bged *CT_FillEffect) ValidateWithPath(path string) error {
	if _bged.NoFill != nil {
		if _agcg := _bged.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _agcg != nil {
			return _agcg
		}
	}
	if _bged.SolidFill != nil {
		if _dddf := _bged.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _dddf != nil {
			return _dddf
		}
	}
	if _bged.GradFill != nil {
		if _eceeb := _bged.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _eceeb != nil {
			return _eceeb
		}
	}
	if _bged.BlipFill != nil {
		if _cfeag := _bged.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _cfeag != nil {
			return _cfeag
		}
	}
	if _bged.PattFill != nil {
		if _bbcf := _bged.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _bbcf != nil {
			return _bbcf
		}
	}
	if _bged.GrpFill != nil {
		if _efbg := _bged.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _efbg != nil {
			return _efbg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupLocking and its children, prefixing error messages with path
func (_gbcg *CT_GroupLocking) ValidateWithPath(path string) error {
	if _gbcg.ExtLst != nil {
		if _gagg := _gbcg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gagg != nil {
			return _gagg
		}
	}
	return nil
}

// Validate validates the CT_PatternFillProperties and its children
func (_ddcef *CT_PatternFillProperties) Validate() error {
	return _ddcef.ValidateWithPath("\u0043T\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006cl\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_cdgbfc *EG_TextAutofit) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cdgbfc.NoAutofit != nil {
		_eecb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u006e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_cdgbfc.NoAutofit, _eecb)
	}
	if _cdgbfc.NormAutofit != nil {
		_cccab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_cdgbfc.NormAutofit, _cccab)
	}
	if _cdgbfc.SpAutoFit != nil {
		_bbeb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"}}
		e.EncodeElement(_cdgbfc.SpAutoFit, _bbeb)
	}
	return nil
}

// Validate validates the CT_Path2D and its children
func (_gaae *CT_Path2D) Validate() error {
	return _gaae.ValidateWithPath("\u0043T\u005f\u0050\u0061\u0074\u0068\u0032D")
}

func (_dafad *ST_TextSpacingPercentOrPercentString) ValidateWithPath(path string) error {
	_dabda := []string{}
	if _dafad.ST_TextSpacingPercent != nil {
		_dabda = append(_dabda, "S\u0054\u005f\u0054\u0065xt\u0053p\u0061\u0063\u0069\u006e\u0067P\u0065\u0072\u0063\u0065\u006e\u0074")
	}
	if _dafad.ST_Percentage != nil {
		_dabda = append(_dabda, "\u0053\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_dabda) > 1 {
		return _gf.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _dabda)
	}
	return nil
}

func (_agbfe ST_LineCap) ValidateWithPath(path string) error {
	switch _agbfe {
	case 0, 1, 2, 3:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_agbfe))
	}
	return nil
}

// ValidateWithPath validates the ThemeOverride and its children, prefixing error messages with path
func (_debef *ThemeOverride) ValidateWithPath(path string) error {
	if _fegac := _debef.CT_BaseStylesOverride.ValidateWithPath(path); _fegac != nil {
		return _fegac
	}
	return nil
}

func (_ccde *EG_TextBulletTypeface) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ccde.BuFontTx != nil {
		_abcfe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}}
		e.EncodeElement(_ccde.BuFontTx, _abcfe)
	}
	if _ccde.BuFont != nil {
		_cecgf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074"}}
		e.EncodeElement(_ccde.BuFont, _cecgf)
	}
	return nil
}

func (_beace *CT_ColorMRU) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _beace.EG_ColorChoice != nil {
		for _, _eebc := range _beace.EG_ColorChoice {
			_eebc.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TransformEffect and its children
func (_fdcdg *CT_TransformEffect) Validate() error {
	return _fdcdg.ValidateWithPath("\u0043T\u005fT\u0072\u0061\u006e\u0073\u0066o\u0072\u006dE\u0066\u0066\u0065\u0063\u0074")
}

func (_bdeff ST_LineCap) String() string {
	switch _bdeff {
	case 0:
		return ""
	case 1:
		return "\u0072\u006e\u0064"
	case 2:
		return "\u0073\u0071"
	case 3:
		return "\u0066\u006c\u0061\u0074"
	}
	return ""
}

type ST_LineEndWidth byte

func (_dgcfc *ST_CompoundLine) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dbcdbc, _gacbdf := d.Token()
	if _gacbdf != nil {
		return _gacbdf
	}
	if _fdedg, _aeaac := _dbcdbc.(_g.EndElement); _aeaac && _fdedg.Name == start.Name {
		*_dgcfc = 1
		return nil
	}
	if _gfbfed, _cgbcd := _dbcdbc.(_g.CharData); !_cgbcd {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbcdbc)
	} else {
		switch string(_gfbfed) {
		case "":
			*_dgcfc = 0
		case "\u0073\u006e\u0067":
			*_dgcfc = 1
		case "\u0064\u0062\u006c":
			*_dgcfc = 2
		case "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n":
			*_dgcfc = 3
		case "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k":
			*_dgcfc = 4
		case "\u0074\u0072\u0069":
			*_dgcfc = 5
		}
	}
	_dbcdbc, _gacbdf = d.Token()
	if _gacbdf != nil {
		return _gacbdf
	}
	if _baedb, _afffa := _dbcdbc.(_g.EndElement); _afffa && _baedb.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbcdbc)
}

func (_dacfe *CT_TileInfoProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bcdbfb := range start.Attr {
		if _bcdbfb.Name.Local == "\u0074\u0078" {
			_degfb, _ffffg := ParseUnionST_Coordinate(_bcdbfb.Value)
			if _ffffg != nil {
				return _ffffg
			}
			_dacfe.TxAttr = &_degfb
			continue
		}
		if _bcdbfb.Name.Local == "\u0074\u0079" {
			_bdddf, _eeefe := ParseUnionST_Coordinate(_bcdbfb.Value)
			if _eeefe != nil {
				return _eeefe
			}
			_dacfe.TyAttr = &_bdddf
			continue
		}
		if _bcdbfb.Name.Local == "\u0073\u0078" {
			_eecfge, _acgcb := ParseUnionST_Percentage(_bcdbfb.Value)
			if _acgcb != nil {
				return _acgcb
			}
			_dacfe.SxAttr = &_eecfge
			continue
		}
		if _bcdbfb.Name.Local == "\u0073\u0079" {
			_ccbac, _ecbabc := ParseUnionST_Percentage(_bcdbfb.Value)
			if _ecbabc != nil {
				return _ecbabc
			}
			_dacfe.SyAttr = &_ccbac
			continue
		}
		if _bcdbfb.Name.Local == "\u0066\u006c\u0069\u0070" {
			_dacfe.FlipAttr.UnmarshalXMLAttr(_bcdbfb)
			continue
		}
		if _bcdbfb.Name.Local == "\u0061\u006c\u0067\u006e" {
			_dacfe.AlgnAttr.UnmarshalXMLAttr(_bcdbfb)
			continue
		}
	}
	for {
		_fcadc, _gfcde := d.Token()
		if _gfcde != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0054\u0069\u006c\u0065\u0049\u006e\u0066\u006f\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s\u003a\u0020\u0025\u0073", _gfcde)
		}
		if _dgdebf, _fabfe := _fcadc.(_g.EndElement); _fabfe && _dgdebf.Name == start.Name {
			break
		}
	}
	return nil
}

func NewThemeOverride() *ThemeOverride {
	_gbegf := &ThemeOverride{}
	_gbegf.CT_BaseStylesOverride = *NewCT_BaseStylesOverride()
	return _gbegf
}

// ValidateWithPath validates the CT_PositiveFixedPercentage and its children, prefixing error messages with path
func (_ecgce *CT_PositiveFixedPercentage) ValidateWithPath(path string) error {
	if _ebfbe := _ecgce.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ebfbe != nil {
		return _ebfbe
	}
	return nil
}

func NewTbl() *Tbl { _ddadc := &Tbl{}; _ddadc.CT_Table = *NewCT_Table(); return _ddadc }

func (_fafeg ST_SchemeColorVal) Validate() error { return _fafeg.ValidateWithPath("") }

func (_fddeb *CT_Point3D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ffcbb := range start.Attr {
		if _ffcbb.Name.Local == "\u0078" {
			_bgbbb, _cabga := ParseUnionST_Coordinate(_ffcbb.Value)
			if _cabga != nil {
				return _cabga
			}
			_fddeb.XAttr = _bgbbb
			continue
		}
		if _ffcbb.Name.Local == "\u0079" {
			_cdfa, _caac := ParseUnionST_Coordinate(_ffcbb.Value)
			if _caac != nil {
				return _caac
			}
			_fddeb.YAttr = _cdfa
			continue
		}
		if _ffcbb.Name.Local == "\u007a" {
			_fdbdc, _gfgbg := ParseUnionST_Coordinate(_ffcbb.Value)
			if _gfgbg != nil {
				return _gfgbg
			}
			_fddeb.ZAttr = _fdbdc
			continue
		}
	}
	for {
		_defae, _eagc := d.Token()
		if _eagc != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0033\u0044\u003a\u0020%\u0073", _eagc)
		}
		if _aacd, _aaecc := _defae.(_g.EndElement); _aaecc && _aacd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cedgd *CT_TextShapeAutofit) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_aaeaa, _dbgefe := d.Token()
		if _dbgefe != nil {
			return _gf.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0054\u0065\u0078\u0074\u0053h\u0061\u0070\u0065\u0041\u0075\u0074\u006f\u0066\u0069\u0074\u003a\u0020\u0025\u0073", _dbgefe)
		}
		if _edgfe, _gecd := _aaeaa.(_g.EndElement); _gecd && _edgfe.Name == start.Name {
			break
		}
	}
	return nil
}

func (_eeeee *CT_NonVisualContentPartProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _becbag := range start.Attr {
		if _becbag.Name.Local == "\u0069s\u0043\u006f\u006d\u006d\u0065\u006et" {
			_ffeb, _egbc := _c.ParseBool(_becbag.Value)
			if _egbc != nil {
				return _egbc
			}
			_eeeee.IsCommentAttr = &_ffeb
			continue
		}
	}
_eaeee:
	for {
		_gbggd, _accfa := d.Token()
		if _accfa != nil {
			return _accfa
		}
		switch _debf := _gbggd.(type) {
		case _g.StartElement:
			switch _debf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063p\u004c\u006f\u0063\u006b\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063p\u004c\u006f\u0063\u006b\u0073"}:
				_eeeee.CpLocks = NewCT_ContentPartLocking()
				if _aebgf := d.DecodeElement(_eeeee.CpLocks, &_debf); _aebgf != nil {
					return _aebgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eeeee.ExtLst = NewCT_OfficeArtExtensionList()
				if _gfegb := d.DecodeElement(_eeeee.ExtLst, &_debf); _gfegb != nil {
					return _gfegb
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074\u0050\u0072o\u0070\u0065\u0072t\u0069\u0065\u0073\u0020\u0025\u0076", _debf.Name)
				if _dggg := d.Skip(); _dggg != nil {
					return _dggg
				}
			}
		case _g.EndElement:
			break _eaeee
		case _g.CharData:
		}
	}
	return nil
}

func (_effag *ST_BlendMode) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gfedb, _fcgdb := d.Token()
	if _fcgdb != nil {
		return _fcgdb
	}
	if _degdgg, _bfdbfc := _gfedb.(_g.EndElement); _bfdbfc && _degdgg.Name == start.Name {
		*_effag = 1
		return nil
	}
	if _gdaca, _cccfg := _gfedb.(_g.CharData); !_cccfg {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gfedb)
	} else {
		switch string(_gdaca) {
		case "":
			*_effag = 0
		case "\u006f\u0076\u0065\u0072":
			*_effag = 1
		case "\u006d\u0075\u006c\u0074":
			*_effag = 2
		case "\u0073\u0063\u0072\u0065\u0065\u006e":
			*_effag = 3
		case "\u0064\u0061\u0072\u006b\u0065\u006e":
			*_effag = 4
		case "\u006ci\u0067\u0068\u0074\u0065\u006e":
			*_effag = 5
		}
	}
	_gfedb, _fcgdb = d.Token()
	if _fcgdb != nil {
		return _fcgdb
	}
	if _cafef, _effbad := _gfedb.(_g.EndElement); _effbad && _cafef.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gfedb)
}

// ValidateWithPath validates the CT_TextSpacing and its children, prefixing error messages with path
func (_bgdgg *CT_TextSpacing) ValidateWithPath(path string) error {
	if _bgdgg.SpcPct != nil {
		if _bcafa := _bgdgg.SpcPct.ValidateWithPath(path + "\u002fS\u0070\u0063\u0050\u0063\u0074"); _bcafa != nil {
			return _bcafa
		}
	}
	if _bgdgg.SpcPts != nil {
		if _gdfcc := _bgdgg.SpcPts.ValidateWithPath(path + "\u002fS\u0070\u0063\u0050\u0074\u0073"); _gdfcc != nil {
			return _gdfcc
		}
	}
	return nil
}

func (_edded *CT_FontScheme) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _gf.Sprintf("\u0025\u0076", _edded.NameAttr)})
	e.EncodeToken(start)
	_fbda := _g.StartElement{Name: _g.Name{Local: "a\u003a\u006d\u0061\u006a\u006f\u0072\u0046\u006f\u006e\u0074"}}
	e.EncodeElement(_edded.MajorFont, _fbda)
	_gdgd := _g.StartElement{Name: _g.Name{Local: "a\u003a\u006d\u0069\u006e\u006f\u0072\u0046\u006f\u006e\u0074"}}
	e.EncodeElement(_edded.MinorFont, _gdgd)
	if _edded.ExtLst != nil {
		_bega := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_edded.ExtLst, _bega)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PictureLocking and its children
func (_bgaee *CT_PictureLocking) Validate() error {
	return _bgaee.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004c\u006fc\u006b\u0069\u006e\u0067")
}

func (_fcadd ST_OnOffStyleType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fcadd.String(), start)
}

// ST_AnimationDgmBuildType is a union type
type ST_AnimationDgmBuildType struct {
	ST_AnimationBuildType        ST_AnimationBuildType
	ST_AnimationDgmOnlyBuildType ST_AnimationDgmOnlyBuildType
}

// ValidateWithPath validates the Tbl and its children, prefixing error messages with path
func (_gfaggf *Tbl) ValidateWithPath(path string) error {
	if _gfdae := _gfaggf.CT_Table.ValidateWithPath(path); _gfdae != nil {
		return _gfdae
	}
	return nil
}

func (_bcfaf ST_LightRigType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bcfade := _g.Attr{}
	_bcfade.Name = name
	switch _bcfaf {
	case ST_LightRigTypeUnset:
		_bcfade.Value = ""
	case ST_LightRigTypeLegacyFlat1:
		_bcfade.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031"
	case ST_LightRigTypeLegacyFlat2:
		_bcfade.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032"
	case ST_LightRigTypeLegacyFlat3:
		_bcfade.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033"
	case ST_LightRigTypeLegacyFlat4:
		_bcfade.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034"
	case ST_LightRigTypeLegacyNormal1:
		_bcfade.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031"
	case ST_LightRigTypeLegacyNormal2:
		_bcfade.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032"
	case ST_LightRigTypeLegacyNormal3:
		_bcfade.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033"
	case ST_LightRigTypeLegacyNormal4:
		_bcfade.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034"
	case ST_LightRigTypeLegacyHarsh1:
		_bcfade.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031"
	case ST_LightRigTypeLegacyHarsh2:
		_bcfade.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032"
	case ST_LightRigTypeLegacyHarsh3:
		_bcfade.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033"
	case ST_LightRigTypeLegacyHarsh4:
		_bcfade.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034"
	case ST_LightRigTypeThreePt:
		_bcfade.Value = "\u0074h\u0072\u0065\u0065\u0050\u0074"
	case ST_LightRigTypeBalanced:
		_bcfade.Value = "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064"
	case ST_LightRigTypeSoft:
		_bcfade.Value = "\u0073\u006f\u0066\u0074"
	case ST_LightRigTypeHarsh:
		_bcfade.Value = "\u0068\u0061\u0072s\u0068"
	case ST_LightRigTypeFlood:
		_bcfade.Value = "\u0066\u006c\u006fo\u0064"
	case ST_LightRigTypeContrasting:
		_bcfade.Value = "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067"
	case ST_LightRigTypeMorning:
		_bcfade.Value = "\u006do\u0072\u006e\u0069\u006e\u0067"
	case ST_LightRigTypeSunrise:
		_bcfade.Value = "\u0073u\u006e\u0072\u0069\u0073\u0065"
	case ST_LightRigTypeSunset:
		_bcfade.Value = "\u0073\u0075\u006e\u0073\u0065\u0074"
	case ST_LightRigTypeChilly:
		_bcfade.Value = "\u0063\u0068\u0069\u006c\u006c\u0079"
	case ST_LightRigTypeFreezing:
		_bcfade.Value = "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067"
	case ST_LightRigTypeFlat:
		_bcfade.Value = "\u0066\u006c\u0061\u0074"
	case ST_LightRigTypeTwoPt:
		_bcfade.Value = "\u0074\u0077\u006fP\u0074"
	case ST_LightRigTypeGlow:
		_bcfade.Value = "\u0067\u006c\u006f\u0077"
	case ST_LightRigTypeBrightRoom:
		_bcfade.Value = "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d"
	}
	return _bcfade, nil
}

// ValidateWithPath validates the CT_ShapeLocking and its children, prefixing error messages with path
func (_egcf *CT_ShapeLocking) ValidateWithPath(path string) error {
	if _egcf.ExtLst != nil {
		if _febg := _egcf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _febg != nil {
			return _febg
		}
	}
	return nil
}

type CT_EffectStyleItem struct {
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
	Scene3d   *CT_Scene3D
	Sp3d      *CT_Shape3D
}

func (_gbcce ST_TextSpacingPercentOrPercentString) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _gbcce.ST_TextSpacingPercent != nil {
		e.EncodeToken(_g.CharData(_gf.Sprintf("\u0025\u0064", *_gbcce.ST_TextSpacingPercent)))
	}
	if _gbcce.ST_Percentage != nil {
		e.EncodeToken(_g.CharData(*_gbcce.ST_Percentage))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

func (_aggc *CT_Shape3D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _aggc.ZAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u007a"}, Value: _gf.Sprintf("\u0025\u0076", *_aggc.ZAttr)})
	}
	if _aggc.ExtrusionHAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0065\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0048"}, Value: _gf.Sprintf("\u0025\u0076", *_aggc.ExtrusionHAttr)})
	}
	if _aggc.ContourWAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0057"}, Value: _gf.Sprintf("\u0025\u0076", *_aggc.ContourWAttr)})
	}
	if _aggc.PrstMaterialAttr != ST_PresetMaterialTypeUnset {
		_ebabf, _eege := _aggc.PrstMaterialAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c"})
		if _eege != nil {
			return _eege
		}
		start.Attr = append(start.Attr, _ebabf)
	}
	e.EncodeToken(start)
	if _aggc.BevelT != nil {
		_edaad := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0065\u0076\u0065\u006c\u0054"}}
		e.EncodeElement(_aggc.BevelT, _edaad)
	}
	if _aggc.BevelB != nil {
		_agefdd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0065\u0076\u0065\u006c\u0042"}}
		e.EncodeElement(_aggc.BevelB, _agefdd)
	}
	if _aggc.ExtrusionClr != nil {
		_bfgc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u0072\u0075\u0073\u0069o\u006e\u0043\u006c\u0072"}}
		e.EncodeElement(_aggc.ExtrusionClr, _bfgc)
	}
	if _aggc.ContourClr != nil {
		_fdccg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063o\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"}}
		e.EncodeElement(_aggc.ContourClr, _fdccg)
	}
	if _aggc.ExtLst != nil {
		_cbegb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aggc.ExtLst, _cbegb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ebaga ST_FontCollectionIndex) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cecca := _g.Attr{}
	_cecca.Name = name
	switch _ebaga {
	case ST_FontCollectionIndexUnset:
		_cecca.Value = ""
	case ST_FontCollectionIndexMajor:
		_cecca.Value = "\u006d\u0061\u006ao\u0072"
	case ST_FontCollectionIndexMinor:
		_cecca.Value = "\u006d\u0069\u006eo\u0072"
	case ST_FontCollectionIndexNone:
		_cecca.Value = "\u006e\u006f\u006e\u0065"
	}
	return _cecca, nil
}

func (_fcggb *EG_Media) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fcggb.AudioCd != nil {
		_beggcb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0075\u0064\u0069\u006f\u0043d"}}
		e.EncodeElement(_fcggb.AudioCd, _beggcb)
	}
	if _fcggb.WavAudioFile != nil {
		_fbefe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0077\u0061\u0076\u0041\u0075\u0064\u0069o\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_fcggb.WavAudioFile, _fbefe)
	}
	if _fcggb.AudioFile != nil {
		_fggee := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0061\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_fcggb.AudioFile, _fggee)
	}
	if _fcggb.VideoFile != nil {
		_edefb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0076\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_fcggb.VideoFile, _edefb)
	}
	if _fcggb.QuickTimeFile != nil {
		_bgdgge := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0071u\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_fcggb.QuickTimeFile, _bgdgge)
	}
	return nil
}

func NewEG_TextRun() *EG_TextRun { _agcdeb := &EG_TextRun{}; return _agcdeb }

func (_aeec *CT_EffectProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _aeec.EffectLst != nil {
		_cdbe := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aeec.EffectLst, _cdbe)
	}
	if _aeec.EffectDag != nil {
		_bcgb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_aeec.EffectDag, _bcgb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_defaa ST_PathFillMode) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_defaa.String(), start)
}

// ValidateWithPath validates the CT_Scene3D and its children, prefixing error messages with path
func (_fgceg *CT_Scene3D) ValidateWithPath(path string) error {
	if _gfaaf := _fgceg.Camera.ValidateWithPath(path + "\u002fC\u0061\u006d\u0065\u0072\u0061"); _gfaaf != nil {
		return _gfaaf
	}
	if _fgcdc := _fgceg.LightRig.ValidateWithPath(path + "\u002fL\u0069\u0067\u0068\u0074\u0052\u0069g"); _fgcdc != nil {
		return _fgcdc
	}
	if _fgceg.Backdrop != nil {
		if _ggaged := _fgceg.Backdrop.ValidateWithPath(path + "\u002fB\u0061\u0063\u006b\u0064\u0072\u006fp"); _ggaged != nil {
			return _ggaged
		}
	}
	if _fgceg.ExtLst != nil {
		if _ababd := _fgceg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ababd != nil {
			return _ababd
		}
	}
	return nil
}

func (_af *CT_AdjustHandleList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bdg:
	for {
		_cbc, _fe := d.Token()
		if _fe != nil {
			return _fe
		}
		switch _bdd := _cbc.(type) {
		case _g.StartElement:
			switch _bdd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u0058\u0059"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u0058\u0059"}:
				_agg := NewCT_XYAdjustHandle()
				if _add := d.DecodeElement(_agg, &_bdd); _add != nil {
					return _add
				}
				_af.AhXY = append(_af.AhXY, _agg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061h\u0050\u006f\u006c\u0061\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061h\u0050\u006f\u006c\u0061\u0072"}:
				_ea := NewCT_PolarAdjustHandle()
				if _aegc := d.DecodeElement(_ea, &_bdd); _aegc != nil {
					return _aegc
				}
				_af.AhPolar = append(_af.AhPolar, _ea)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0041\u0064\u006a\u0075\u0073\u0074\u0048an\u0064\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _bdd.Name)
				if _cad := d.Skip(); _cad != nil {
					return _cad
				}
			}
		case _g.EndElement:
			break _bdg
		case _g.CharData:
		}
	}
	return nil
}

type CT_LineEndProperties struct {
	TypeAttr ST_LineEndType
	WAttr    ST_LineEndWidth
	LenAttr  ST_LineEndLength
}

// ValidateWithPath validates the CT_NonVisualConnectorProperties and its children, prefixing error messages with path
func (_fdgeg *CT_NonVisualConnectorProperties) ValidateWithPath(path string) error {
	if _fdgeg.CxnSpLocks != nil {
		if _adgdd := _fdgeg.CxnSpLocks.ValidateWithPath(path + "/\u0043\u0078\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"); _adgdd != nil {
			return _adgdd
		}
	}
	if _fdgeg.StCxn != nil {
		if _fdde := _fdgeg.StCxn.ValidateWithPath(path + "\u002f\u0053\u0074\u0043\u0078\u006e"); _fdde != nil {
			return _fdde
		}
	}
	if _fdgeg.EndCxn != nil {
		if _efbb := _fdgeg.EndCxn.ValidateWithPath(path + "\u002fE\u006e\u0064\u0043\u0078\u006e"); _efbb != nil {
			return _efbb
		}
	}
	if _fdgeg.ExtLst != nil {
		if _defb := _fdgeg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _defb != nil {
			return _defb
		}
	}
	return nil
}

func (_addfc *CT_Path2D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _addfc.WAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0077"}, Value: _gf.Sprintf("\u0025\u0076", *_addfc.WAttr)})
	}
	if _addfc.HAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068"}, Value: _gf.Sprintf("\u0025\u0076", *_addfc.HAttr)})
	}
	if _addfc.FillAttr != ST_PathFillModeUnset {
		_eebdc, _agefdc := _addfc.FillAttr.MarshalXMLAttr(_g.Name{Local: "\u0066\u0069\u006c\u006c"})
		if _agefdc != nil {
			return _agefdc
		}
		start.Attr = append(start.Attr, _eebdc)
	}
	if _addfc.StrokeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0074\u0072\u006f\u006b\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_addfc.StrokeAttr))})
	}
	if _addfc.ExtrusionOkAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "e\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u004f\u006b"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_addfc.ExtrusionOkAttr))})
	}
	e.EncodeToken(start)
	if _addfc.Close != nil {
		_fbdfa := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u006c\u006f\u0073\u0065"}}
		for _, _fecda := range _addfc.Close {
			e.EncodeElement(_fecda, _fbdfa)
		}
	}
	if _addfc.MoveTo != nil {
		_facg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006d\u006f\u0076\u0065\u0054\u006f"}}
		for _, _bfceg := range _addfc.MoveTo {
			e.EncodeElement(_bfceg, _facg)
		}
	}
	if _addfc.LnTo != nil {
		_feabe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u006e\u0054\u006f"}}
		for _, _feegf := range _addfc.LnTo {
			e.EncodeElement(_feegf, _feabe)
		}
	}
	if _addfc.ArcTo != nil {
		_dgegf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0072\u0063\u0054\u006f"}}
		for _, _aabcb := range _addfc.ArcTo {
			e.EncodeElement(_aabcb, _dgegf)
		}
	}
	if _addfc.QuadBezTo != nil {
		_eafeb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0071\u0075\u0061\u0064\u0042\u0065\u007a\u0054\u006f"}}
		for _, _gdfcg := range _addfc.QuadBezTo {
			e.EncodeElement(_gdfcg, _eafeb)
		}
	}
	if _addfc.CubicBezTo != nil {
		_gcdef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063u\u0062\u0069\u0063\u0042\u0065\u007a\u0054\u006f"}}
		for _, _becaag := range _addfc.CubicBezTo {
			e.EncodeElement(_becaag, _gcdef)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_VideoFile struct {
	LinkAttr        string
	ContentTypeAttr *string
	ExtLst          *CT_OfficeArtExtensionList
}

func (_cbaad *TblStyleLst) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cbaad.CT_TableStyleList = *NewCT_TableStyleList()
	for _, _bbeba := range start.Attr {
		if _bbeba.Name.Local == "\u0064\u0065\u0066" {
			_fdafd, _ecdcd := _bbeba.Value, error(nil)
			if _ecdcd != nil {
				return _ecdcd
			}
			_cbaad.DefAttr = _fdafd
			continue
		}
	}
_bdfbe:
	for {
		_eadedd, _cagdd := d.Token()
		if _cagdd != nil {
			return _cagdd
		}
		switch _bbaac := _eadedd.(type) {
		case _g.StartElement:
			switch _bbaac.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}:
				_fgbbe := NewCT_TableStyle()
				if _fggba := d.DecodeElement(_fgbbe, &_bbaac); _fggba != nil {
					return _fggba
				}
				_cbaad.TblStyle = append(_cbaad.TblStyle, _fgbbe)
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0054\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074\u0020\u0025\u0076", _bbaac.Name)
				if _gbeeec := d.Skip(); _gbeeec != nil {
					return _gbeeec
				}
			}
		case _g.EndElement:
			break _bdfbe
		case _g.CharData:
		}
	}
	return nil
}

type CT_TextTabStopList struct{ Tab []*CT_TextTabStop }

// Validate validates the CT_PresetGeometry2D and its children
func (_efabd *CT_PresetGeometry2D) Validate() error {
	return _efabd.ValidateWithPath("\u0043\u0054\u005f\u0050re\u0073\u0065\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044")
}

func NewCT_PresetColor() *CT_PresetColor {
	_eeeab := &CT_PresetColor{}
	_eeeab.ValAttr = ST_PresetColorVal(1)
	return _eeeab
}

// ValidateWithPath validates the CT_ColorMappingOverride and its children, prefixing error messages with path
func (_fefc *CT_ColorMappingOverride) ValidateWithPath(path string) error {
	if _agae := _fefc.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _agae != nil {
		return _agae
	}
	return nil
}

func (_cdgebc *CT_LuminanceEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _feea := range start.Attr {
		if _feea.Name.Local == "\u0062\u0072\u0069\u0067\u0068\u0074" {
			_dedc, _ededg := ParseUnionST_FixedPercentage(_feea.Value)
			if _ededg != nil {
				return _ededg
			}
			_cdgebc.BrightAttr = &_dedc
			continue
		}
		if _feea.Name.Local == "\u0063\u006f\u006e\u0074\u0072\u0061\u0073\u0074" {
			_edecc, _dcfc := ParseUnionST_FixedPercentage(_feea.Value)
			if _dcfc != nil {
				return _dcfc
			}
			_cdgebc.ContrastAttr = &_edecc
			continue
		}
	}
	for {
		_dbedg, _bdfbc := d.Token()
		if _bdfbc != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u004c\u0075\u006d\u0069\u006e\u0061\u006ec\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _bdfbc)
		}
		if _fffe, _fcdfg := _dbedg.(_g.EndElement); _fcdfg && _fffe.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_PictureLocking() *CT_PictureLocking { _bffbe := &CT_PictureLocking{}; return _bffbe }

func NewCT_TableGrid() *CT_TableGrid { _gfgcee := &CT_TableGrid{}; return _gfgcee }

func (_abdae ST_TextStrikeType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_abdae.String(), start)
}

func NewCT_Vector3D() *CT_Vector3D { _fcaca := &CT_Vector3D{}; return _fcaca }

// ValidateWithPath validates the CT_GroupTransform2D and its children, prefixing error messages with path
func (_gcba *CT_GroupTransform2D) ValidateWithPath(path string) error {
	if _gcba.Off != nil {
		if _gdefb := _gcba.Off.ValidateWithPath(path + "\u002f\u004f\u0066\u0066"); _gdefb != nil {
			return _gdefb
		}
	}
	if _gcba.Ext != nil {
		if _gedgg := _gcba.Ext.ValidateWithPath(path + "\u002f\u0045\u0078\u0074"); _gedgg != nil {
			return _gedgg
		}
	}
	if _gcba.ChOff != nil {
		if _bgdf := _gcba.ChOff.ValidateWithPath(path + "\u002f\u0043\u0068\u004f\u0066\u0066"); _bgdf != nil {
			return _bgdf
		}
	}
	if _gcba.ChExt != nil {
		if _eeaf := _gcba.ChExt.ValidateWithPath(path + "\u002f\u0043\u0068\u0045\u0078\u0074"); _eeaf != nil {
			return _eeaf
		}
	}
	return nil
}

func (_cccce *EG_TextBulletSize) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cccce.BuSzTx != nil {
		_fadca := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0053\u007a\u0054\u0078"}}
		e.EncodeElement(_cccce.BuSzTx, _fadca)
	}
	if _cccce.BuSzPct != nil {
		_bbeed := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0063t"}}
		e.EncodeElement(_cccce.BuSzPct, _bbeed)
	}
	if _cccce.BuSzPts != nil {
		_agdgg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0074s"}}
		e.EncodeElement(_cccce.BuSzPts, _agdgg)
	}
	return nil
}

func NewCT_AlphaReplaceEffect() *CT_AlphaReplaceEffect {
	_ffbd := &CT_AlphaReplaceEffect{}
	return _ffbd
}

func (_fdeg *CT_DashStopList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _fdeg.Ds != nil {
		_eeebf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0064\u0073"}}
		for _, _bgfg := range _fdeg.Ds {
			e.EncodeElement(_bgfg, _eeebf)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_AnimationChartElement struct {
	SeriesIdxAttr   *int32
	CategoryIdxAttr *int32
	BldStepAttr     ST_ChartBuildStep
}

func NewCT_AnimationDgmElement() *CT_AnimationDgmElement {
	_ebag := &CT_AnimationDgmElement{}
	return _ebag
}

func (_cfcbc *EG_TextBulletTypeface) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bdcca:
	for {
		_egbge, _gdeed := d.Token()
		if _gdeed != nil {
			return _gdeed
		}
		switch _fcaeg := _egbge.(type) {
		case _g.StartElement:
			switch _fcaeg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}:
				_cfcbc.BuFontTx = NewCT_TextBulletTypefaceFollowText()
				if _afgga := d.DecodeElement(_cfcbc.BuFontTx, &_fcaeg); _afgga != nil {
					return _afgga
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}:
				_cfcbc.BuFont = NewCT_TextFont()
				if _debgd := d.DecodeElement(_cfcbc.BuFont, &_fcaeg); _debgd != nil {
					return _debgd
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0054\u0079\u0070\u0065\u0066\u0061\u0063\u0065\u0020\u0025\u0076", _fcaeg.Name)
				if _edcae := d.Skip(); _edcae != nil {
					return _edcae
				}
			}
		case _g.EndElement:
			break _bdcca
		case _g.CharData:
		}
	}
	return nil
}

type ST_AnimationBuildType byte

// ValidateWithPath validates the CT_BackgroundFormatting and its children, prefixing error messages with path
func (_egce *CT_BackgroundFormatting) ValidateWithPath(path string) error {
	if _egce.NoFill != nil {
		if _ccb := _egce.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _ccb != nil {
			return _ccb
		}
	}
	if _egce.SolidFill != nil {
		if _fcab := _egce.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _fcab != nil {
			return _fcab
		}
	}
	if _egce.GradFill != nil {
		if _dbc := _egce.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _dbc != nil {
			return _dbc
		}
	}
	if _egce.BlipFill != nil {
		if _cbad := _egce.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _cbad != nil {
			return _cbad
		}
	}
	if _egce.PattFill != nil {
		if _cdb := _egce.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _cdb != nil {
			return _cdb
		}
	}
	if _egce.GrpFill != nil {
		if _gcc := _egce.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _gcc != nil {
			return _gcc
		}
	}
	if _egce.EffectLst != nil {
		if _cfgc := _egce.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _cfgc != nil {
			return _cfgc
		}
	}
	if _egce.EffectDag != nil {
		if _gdeg := _egce.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _gdeg != nil {
			return _gdeg
		}
	}
	return nil
}

func (_fbdce ST_BlackWhiteMode) ValidateWithPath(path string) error {
	switch _fbdce {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fbdce))
	}
	return nil
}

func (_agegg *ST_PresetPatternVal) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bfddfg, _dcdda := d.Token()
	if _dcdda != nil {
		return _dcdda
	}
	if _fdaceg, _cbffa := _bfddfg.(_g.EndElement); _cbffa && _fdaceg.Name == start.Name {
		*_agegg = 1
		return nil
	}
	if _cbbce, _dgbaef := _bfddfg.(_g.CharData); !_dgbaef {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfddfg)
	} else {
		switch string(_cbbce) {
		case "":
			*_agegg = 0
		case "\u0070\u0063\u0074\u0035":
			*_agegg = 1
		case "\u0070\u0063\u00741\u0030":
			*_agegg = 2
		case "\u0070\u0063\u00742\u0030":
			*_agegg = 3
		case "\u0070\u0063\u00742\u0035":
			*_agegg = 4
		case "\u0070\u0063\u00743\u0030":
			*_agegg = 5
		case "\u0070\u0063\u00744\u0030":
			*_agegg = 6
		case "\u0070\u0063\u00745\u0030":
			*_agegg = 7
		case "\u0070\u0063\u00746\u0030":
			*_agegg = 8
		case "\u0070\u0063\u00747\u0030":
			*_agegg = 9
		case "\u0070\u0063\u00747\u0035":
			*_agegg = 10
		case "\u0070\u0063\u00748\u0030":
			*_agegg = 11
		case "\u0070\u0063\u00749\u0030":
			*_agegg = 12
		case "\u0068\u006f\u0072\u007a":
			*_agegg = 13
		case "\u0076\u0065\u0072\u0074":
			*_agegg = 14
		case "\u006c\u0074\u0048\u006f\u0072\u007a":
			*_agegg = 15
		case "\u006c\u0074\u0056\u0065\u0072\u0074":
			*_agegg = 16
		case "\u0064\u006b\u0048\u006f\u0072\u007a":
			*_agegg = 17
		case "\u0064\u006b\u0056\u0065\u0072\u0074":
			*_agegg = 18
		case "\u006ea\u0072\u0048\u006f\u0072\u007a":
			*_agegg = 19
		case "\u006ea\u0072\u0056\u0065\u0072\u0074":
			*_agegg = 20
		case "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a":
			*_agegg = 21
		case "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074":
			*_agegg = 22
		case "\u0063\u0072\u006fs\u0073":
			*_agegg = 23
		case "\u0064\u006e\u0044\u0069\u0061\u0067":
			*_agegg = 24
		case "\u0075\u0070\u0044\u0069\u0061\u0067":
			*_agegg = 25
		case "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067":
			*_agegg = 26
		case "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067":
			*_agegg = 27
		case "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067":
			*_agegg = 28
		case "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067":
			*_agegg = 29
		case "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067":
			*_agegg = 30
		case "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067":
			*_agegg = 31
		case "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067":
			*_agegg = 32
		case "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067":
			*_agegg = 33
		case "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s":
			*_agegg = 34
		case "\u0073m\u0043\u0068\u0065\u0063\u006b":
			*_agegg = 35
		case "\u006cg\u0043\u0068\u0065\u0063\u006b":
			*_agegg = 36
		case "\u0073\u006d\u0047\u0072\u0069\u0064":
			*_agegg = 37
		case "\u006c\u0067\u0047\u0072\u0069\u0064":
			*_agegg = 38
		case "\u0064o\u0074\u0047\u0072\u0069\u0064":
			*_agegg = 39
		case "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
			*_agegg = 40
		case "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
			*_agegg = 41
		case "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k":
			*_agegg = 42
		case "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k":
			*_agegg = 43
		case "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed":
			*_agegg = 44
		case "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064":
			*_agegg = 45
		case "\u0064o\u0074\u0044\u006d\u006e\u0064":
			*_agegg = 46
		case "\u0070\u006c\u0061i\u0064":
			*_agegg = 47
		case "\u0073\u0070\u0068\u0065\u0072\u0065":
			*_agegg = 48
		case "\u0077\u0065\u0061v\u0065":
			*_agegg = 49
		case "\u0064\u0069\u0076o\u0074":
			*_agegg = 50
		case "\u0073h\u0069\u006e\u0067\u006c\u0065":
			*_agegg = 51
		case "\u0077\u0061\u0076\u0065":
			*_agegg = 52
		case "\u0074r\u0065\u006c\u006c\u0069\u0073":
			*_agegg = 53
		case "\u007a\u0069\u0067\u005a\u0061\u0067":
			*_agegg = 54
		}
	}
	_bfddfg, _dcdda = d.Token()
	if _dcdda != nil {
		return _dcdda
	}
	if _efce, _ggddb := _bfddfg.(_g.EndElement); _ggddb && _efce.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfddfg)
}

func (_dabe *CT_GvmlPictureNonVisual) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_cgfda := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_dabe.CNvPr, _cgfda)
	_bfebc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_dabe.CNvPicPr, _bfebc)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ebggg *CT_GvmlGroupShapeChoice) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ebggg.TxSp != nil {
		_ebbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0078\u0053\u0070"}}
		for _, _dece := range _ebggg.TxSp {
			e.EncodeElement(_dece, _ebbe)
		}
	}
	if _ebggg.Sp != nil {
		_ffcba := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070"}}
		for _, _fbfca := range _ebggg.Sp {
			e.EncodeElement(_fbfca, _ffcba)
		}
	}
	if _ebggg.CxnSp != nil {
		_cdca := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u0078\u006e\u0053\u0070"}}
		for _, _bbaf := range _ebggg.CxnSp {
			e.EncodeElement(_bbaf, _cdca)
		}
	}
	if _ebggg.Pic != nil {
		_egeed := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070i\u0063"}}
		for _, _fbgab := range _ebggg.Pic {
			e.EncodeElement(_fbgab, _egeed)
		}
	}
	if _ebggg.GraphicFrame != nil {
		_gfecf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u0061\u006d\u0065"}}
		for _, _adfbf := range _ebggg.GraphicFrame {
			e.EncodeElement(_adfbf, _gfecf)
		}
	}
	if _ebggg.GrpSp != nil {
		_afdcg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0053\u0070"}}
		for _, _cccg := range _ebggg.GrpSp {
			e.EncodeElement(_cccg, _afdcg)
		}
	}
	return nil
}

// Validate validates the CT_EffectStyleList and its children
func (_cgdf *CT_EffectStyleList) Validate() error {
	return _cgdf.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_TextTabStop and its children, prefixing error messages with path
func (_bccad *CT_TextTabStop) ValidateWithPath(path string) error {
	if _bccad.PosAttr != nil {
		if _cbeac := _bccad.PosAttr.ValidateWithPath(path + "\u002f\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _cbeac != nil {
			return _cbeac
		}
	}
	if _gfebe := _bccad.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _gfebe != nil {
		return _gfebe
	}
	return nil
}

func (_ecbce ST_TextShapeType) Validate() error { return _ecbce.ValidateWithPath("") }

func (_ebec *CT_ConnectionSiteList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _ebec.Cxn != nil {
		_bdced := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063x\u006e"}}
		for _, _ccge := range _ebec.Cxn {
			e.EncodeElement(_ccge, _bdced)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_ConnectionSiteList() *CT_ConnectionSiteList {
	_eeac := &CT_ConnectionSiteList{}
	return _eeac
}

// ValidateWithPath validates the CT_ConnectionSite and its children, prefixing error messages with path
func (_abaf *CT_ConnectionSite) ValidateWithPath(path string) error {
	if _eddaa := _abaf.AngAttr.ValidateWithPath(path + "\u002f\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _eddaa != nil {
		return _eddaa
	}
	if _ecfdf := _abaf.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _ecfdf != nil {
		return _ecfdf
	}
	return nil
}

func (_cfggc ST_PresetPatternVal) Validate() error { return _cfggc.ValidateWithPath("") }

func NewCT_Boolean() *CT_Boolean { _cbea := &CT_Boolean{}; return _cbea }

type ST_TextShapeType byte

type CT_AnimationChartBuildProperties struct {
	BldAttr    *ST_AnimationChartBuildType
	AnimBgAttr *bool
}

func (_dccg *CT_ColorSchemeAndMapping) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dccg.ClrScheme = NewCT_ColorScheme()
_dgef:
	for {
		_edfd, _gcbf := d.Token()
		if _gcbf != nil {
			return _gcbf
		}
		switch _aafda := _edfd.(type) {
		case _g.StartElement:
			switch _aafda.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				if _dgefc := d.DecodeElement(_dccg.ClrScheme, &_aafda); _dgefc != nil {
					return _dgefc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				_dccg.ClrMap = NewCT_ColorMapping()
				if _fgcbg := d.DecodeElement(_dccg.ClrMap, &_aafda); _fgcbg != nil {
					return _fgcbg
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006d\u0065\u0041\u006e\u0064\u004d\u0061p\u0070\u0069\u006e\u0067\u0020%\u0076", _aafda.Name)
				if _dffc := d.Skip(); _dffc != nil {
					return _dffc
				}
			}
		case _g.EndElement:
			break _dgef
		case _g.CharData:
		}
	}
	return nil
}

func (_fcaab *CT_Path2DClose) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_EffectContainer and its children, prefixing error messages with path
func (_ecgcd *CT_EffectContainer) ValidateWithPath(path string) error {
	if _fagg := _ecgcd.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _fagg != nil {
		return _fagg
	}
	if _ecgcd.Cont != nil {
		if _bgffa := _ecgcd.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _bgffa != nil {
			return _bgffa
		}
	}
	if _ecgcd.Effect != nil {
		if _dcce := _ecgcd.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _dcce != nil {
			return _dcce
		}
	}
	if _ecgcd.AlphaBiLevel != nil {
		if _cabgg := _ecgcd.AlphaBiLevel.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _cabgg != nil {
			return _cabgg
		}
	}
	if _ecgcd.AlphaCeiling != nil {
		if _dgfee := _ecgcd.AlphaCeiling.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"); _dgfee != nil {
			return _dgfee
		}
	}
	if _ecgcd.AlphaFloor != nil {
		if _fgca := _ecgcd.AlphaFloor.ValidateWithPath(path + "/\u0041\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"); _fgca != nil {
			return _fgca
		}
	}
	if _ecgcd.AlphaInv != nil {
		if _fage := _ecgcd.AlphaInv.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u0049\u006ev"); _fage != nil {
			return _fage
		}
	}
	if _ecgcd.AlphaMod != nil {
		if _adag := _ecgcd.AlphaMod.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004d\u006fd"); _adag != nil {
			return _adag
		}
	}
	if _ecgcd.AlphaModFix != nil {
		if _deba := _ecgcd.AlphaModFix.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"); _deba != nil {
			return _deba
		}
	}
	if _ecgcd.AlphaOutset != nil {
		if _afbe := _ecgcd.AlphaOutset.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"); _afbe != nil {
			return _afbe
		}
	}
	if _ecgcd.AlphaRepl != nil {
		if _efbe := _ecgcd.AlphaRepl.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"); _efbe != nil {
			return _efbe
		}
	}
	if _ecgcd.BiLevel != nil {
		if _faca := _ecgcd.BiLevel.ValidateWithPath(path + "\u002f\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _faca != nil {
			return _faca
		}
	}
	if _ecgcd.Blend != nil {
		if _cfcb := _ecgcd.Blend.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064"); _cfcb != nil {
			return _cfcb
		}
	}
	if _ecgcd.Blur != nil {
		if _dfdg := _ecgcd.Blur.ValidateWithPath(path + "\u002f\u0042\u006cu\u0072"); _dfdg != nil {
			return _dfdg
		}
	}
	if _ecgcd.ClrChange != nil {
		if _bcbbd := _ecgcd.ClrChange.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"); _bcbbd != nil {
			return _bcbbd
		}
	}
	if _ecgcd.ClrRepl != nil {
		if _efea := _ecgcd.ClrRepl.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0052\u0065\u0070\u006c"); _efea != nil {
			return _efea
		}
	}
	if _ecgcd.Duotone != nil {
		if _eebae := _ecgcd.Duotone.ValidateWithPath(path + "\u002f\u0044\u0075\u006f\u0074\u006f\u006e\u0065"); _eebae != nil {
			return _eebae
		}
	}
	if _ecgcd.Fill != nil {
		if _ccggc := _ecgcd.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _ccggc != nil {
			return _ccggc
		}
	}
	if _ecgcd.FillOverlay != nil {
		if _agdgc := _ecgcd.FillOverlay.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"); _agdgc != nil {
			return _agdgc
		}
	}
	if _ecgcd.Glow != nil {
		if _agefd := _ecgcd.Glow.ValidateWithPath(path + "\u002f\u0047\u006co\u0077"); _agefd != nil {
			return _agefd
		}
	}
	if _ecgcd.Grayscl != nil {
		if _deda := _ecgcd.Grayscl.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0079\u0073\u0063\u006c"); _deda != nil {
			return _deda
		}
	}
	if _ecgcd.Hsl != nil {
		if _cgege := _ecgcd.Hsl.ValidateWithPath(path + "\u002f\u0048\u0073\u006c"); _cgege != nil {
			return _cgege
		}
	}
	if _ecgcd.InnerShdw != nil {
		if _gffbe := _ecgcd.InnerShdw.ValidateWithPath(path + "\u002f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"); _gffbe != nil {
			return _gffbe
		}
	}
	if _ecgcd.Lum != nil {
		if _gfdg := _ecgcd.Lum.ValidateWithPath(path + "\u002f\u004c\u0075\u006d"); _gfdg != nil {
			return _gfdg
		}
	}
	if _ecgcd.OuterShdw != nil {
		if _facd := _ecgcd.OuterShdw.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"); _facd != nil {
			return _facd
		}
	}
	if _ecgcd.PrstShdw != nil {
		if _egge := _ecgcd.PrstShdw.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0053\u0068\u0064w"); _egge != nil {
			return _egge
		}
	}
	if _ecgcd.Reflection != nil {
		if _acca := _ecgcd.Reflection.ValidateWithPath(path + "/\u0052\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _acca != nil {
			return _acca
		}
	}
	if _ecgcd.RelOff != nil {
		if _dccd := _ecgcd.RelOff.ValidateWithPath(path + "\u002fR\u0065\u006c\u004f\u0066\u0066"); _dccd != nil {
			return _dccd
		}
	}
	if _ecgcd.SoftEdge != nil {
		if _dcdb := _ecgcd.SoftEdge.ValidateWithPath(path + "\u002fS\u006f\u0066\u0074\u0045\u0064\u0067e"); _dcdb != nil {
			return _dcdb
		}
	}
	if _ecgcd.Tint != nil {
		if _aedgc := _ecgcd.Tint.ValidateWithPath(path + "\u002f\u0054\u0069n\u0074"); _aedgc != nil {
			return _aedgc
		}
	}
	if _ecgcd.Xfrm != nil {
		if _acdg := _ecgcd.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _acdg != nil {
			return _acdg
		}
	}
	return nil
}

func (_efgcc *CT_LightRig) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_cgcc, _cddd := _efgcc.RigAttr.MarshalXMLAttr(_g.Name{Local: "\u0072\u0069\u0067"})
	if _cddd != nil {
		return _cddd
	}
	start.Attr = append(start.Attr, _cgcc)
	_cgcc, _cddd = _efgcc.DirAttr.MarshalXMLAttr(_g.Name{Local: "\u0064\u0069\u0072"})
	if _cddd != nil {
		return _cddd
	}
	start.Attr = append(start.Attr, _cgcc)
	e.EncodeToken(start)
	if _efgcc.Rot != nil {
		_cebce := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072o\u0074"}}
		e.EncodeElement(_efgcc.Rot, _cebce)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_LineProperties and its children
func (_bcbcb *CT_LineProperties) Validate() error {
	return _bcbcb.ValidateWithPath("\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

func (_bdeaga *ST_TextFontScalePercentOrPercentString) Validate() error {
	return _bdeaga.ValidateWithPath("")
}

// Validate validates the CT_AlphaModulateEffect and its children
func (_fgee *CT_AlphaModulateEffect) Validate() error {
	return _fgee.ValidateWithPath("\u0043\u0054\u005f\u0041lp\u0068\u0061\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0045\u0066\u0066\u0065c\u0074")
}

type CT_Backdrop struct {
	Anchor *CT_Point3D
	Norm   *CT_Vector3D
	Up     *CT_Vector3D
	ExtLst *CT_OfficeArtExtensionList
}

func NewEG_TextBullet() *EG_TextBullet { _faff := &EG_TextBullet{}; return _faff }

type CT_GraphicalObjectData struct {
	UriAttr string
	Any     []_ga.Any
}

func (_daeag *CT_ShapeProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bdefg := range start.Attr {
		if _bdefg.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_daeag.BwModeAttr.UnmarshalXMLAttr(_bdefg)
			continue
		}
	}
_abefb:
	for {
		_aeffa, _deddd := d.Token()
		if _deddd != nil {
			return _deddd
		}
		switch _adcgb := _aeffa.(type) {
		case _g.StartElement:
			switch _adcgb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_daeag.Xfrm = NewCT_Transform2D()
				if _bfeed := d.DecodeElement(_daeag.Xfrm, &_adcgb); _bfeed != nil {
					return _bfeed
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_daeag.CustGeom = NewCT_CustomGeometry2D()
				if _edgbdg := d.DecodeElement(_daeag.CustGeom, &_adcgb); _edgbdg != nil {
					return _edgbdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_daeag.PrstGeom = NewCT_PresetGeometry2D()
				if _ccbe := d.DecodeElement(_daeag.PrstGeom, &_adcgb); _ccbe != nil {
					return _ccbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_daeag.NoFill = NewCT_NoFillProperties()
				if _cbace := d.DecodeElement(_daeag.NoFill, &_adcgb); _cbace != nil {
					return _cbace
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_daeag.SolidFill = NewCT_SolidColorFillProperties()
				if _beddc := d.DecodeElement(_daeag.SolidFill, &_adcgb); _beddc != nil {
					return _beddc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_daeag.GradFill = NewCT_GradientFillProperties()
				if _gfba := d.DecodeElement(_daeag.GradFill, &_adcgb); _gfba != nil {
					return _gfba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_daeag.BlipFill = NewCT_BlipFillProperties()
				if _gdac := d.DecodeElement(_daeag.BlipFill, &_adcgb); _gdac != nil {
					return _gdac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_daeag.PattFill = NewCT_PatternFillProperties()
				if _cbdg := d.DecodeElement(_daeag.PattFill, &_adcgb); _cbdg != nil {
					return _cbdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_daeag.GrpFill = NewCT_GroupFillProperties()
				if _faef := d.DecodeElement(_daeag.GrpFill, &_adcgb); _faef != nil {
					return _faef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_daeag.Ln = NewCT_LineProperties()
				if _dbbea := d.DecodeElement(_daeag.Ln, &_adcgb); _dbbea != nil {
					return _dbbea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_daeag.EffectLst = NewCT_EffectList()
				if _fecdd := d.DecodeElement(_daeag.EffectLst, &_adcgb); _fecdd != nil {
					return _fecdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_daeag.EffectDag = NewCT_EffectContainer()
				if _dagaa := d.DecodeElement(_daeag.EffectDag, &_adcgb); _dagaa != nil {
					return _dagaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_daeag.Scene3d = NewCT_Scene3D()
				if _accdb := d.DecodeElement(_daeag.Scene3d, &_adcgb); _accdb != nil {
					return _accdb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_daeag.Sp3d = NewCT_Shape3D()
				if _adebgd := d.DecodeElement(_daeag.Sp3d, &_adcgb); _adebgd != nil {
					return _adebgd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_daeag.ExtLst = NewCT_OfficeArtExtensionList()
				if _gebg := d.DecodeElement(_daeag.ExtLst, &_adcgb); _gebg != nil {
					return _gebg
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _adcgb.Name)
				if _deddda := d.Skip(); _deddda != nil {
					return _deddda
				}
			}
		case _g.EndElement:
			break _abefb
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_TextTabStop() *CT_TextTabStop { _ceggca := &CT_TextTabStop{}; return _ceggca }

func NewCT_TextShapeAutofit() *CT_TextShapeAutofit { _ffcbf := &CT_TextShapeAutofit{}; return _ffcbf }

func (_dcge *CT_PatternFillProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _adeaa := range start.Attr {
		if _adeaa.Name.Local == "\u0070\u0072\u0073\u0074" {
			_dcge.PrstAttr.UnmarshalXMLAttr(_adeaa)
			continue
		}
	}
_ccaf:
	for {
		_dggcdf, _abfgb := d.Token()
		if _abfgb != nil {
			return _abfgb
		}
		switch _fadgf := _dggcdf.(type) {
		case _g.StartElement:
			switch _fadgf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0067\u0043l\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0067\u0043l\u0072"}:
				_dcge.FgClr = NewCT_Color()
				if _bfcacf := d.DecodeElement(_dcge.FgClr, &_fadgf); _bfcacf != nil {
					return _bfcacf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0043l\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0043l\u0072"}:
				_dcge.BgClr = NewCT_Color()
				if _bgbgb := d.DecodeElement(_dcge.BgClr, &_fadgf); _bgbgb != nil {
					return _bgbgb
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _fadgf.Name)
				if _bfgad := d.Skip(); _bfgad != nil {
					return _bfgad
				}
			}
		case _g.EndElement:
			break _ccaf
		case _g.CharData:
		}
	}
	return nil
}

type CT_TextNoAutofit struct{}

func NewCT_StretchInfoProperties() *CT_StretchInfoProperties {
	_dfgdc := &CT_StretchInfoProperties{}
	return _dfgdc
}

func NewCT_GvmlConnectorNonVisual() *CT_GvmlConnectorNonVisual {
	_ecbd := &CT_GvmlConnectorNonVisual{}
	_ecbd.CNvPr = NewCT_NonVisualDrawingProps()
	_ecbd.CNvCxnSpPr = NewCT_NonVisualConnectorProperties()
	return _ecbd
}

// ValidateWithPath validates the CT_PathShadeProperties and its children, prefixing error messages with path
func (_bcggb *CT_PathShadeProperties) ValidateWithPath(path string) error {
	if _eebcc := _bcggb.PathAttr.ValidateWithPath(path + "\u002fP\u0061\u0074\u0068\u0041\u0074\u0074r"); _eebcc != nil {
		return _eebcc
	}
	if _bcggb.FillToRect != nil {
		if _ddffg := _bcggb.FillToRect.ValidateWithPath(path + "/\u0046\u0069\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"); _ddffg != nil {
			return _ddffg
		}
	}
	return nil
}

func NewCT_BiLevelEffect() *CT_BiLevelEffect { _edb := &CT_BiLevelEffect{}; return _edb }

func (_dcddf ST_PathFillMode) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_ecfgc := _g.Attr{}
	_ecfgc.Name = name
	switch _dcddf {
	case ST_PathFillModeUnset:
		_ecfgc.Value = ""
	case ST_PathFillModeNone:
		_ecfgc.Value = "\u006e\u006f\u006e\u0065"
	case ST_PathFillModeNorm:
		_ecfgc.Value = "\u006e\u006f\u0072\u006d"
	case ST_PathFillModeLighten:
		_ecfgc.Value = "\u006ci\u0067\u0068\u0074\u0065\u006e"
	case ST_PathFillModeLightenLess:
		_ecfgc.Value = "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073"
	case ST_PathFillModeDarken:
		_ecfgc.Value = "\u0064\u0061\u0072\u006b\u0065\u006e"
	case ST_PathFillModeDarkenLess:
		_ecfgc.Value = "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073"
	}
	return _ecfgc, nil
}

func (_gcecd ST_TextAlignType) String() string {
	switch _gcecd {
	case 0:
		return ""
	case 1:
		return "\u006c"
	case 2:
		return "\u0063\u0074\u0072"
	case 3:
		return "\u0072"
	case 4:
		return "\u006a\u0075\u0073\u0074"
	case 5:
		return "\u006au\u0073\u0074\u004c\u006f\u0077"
	case 6:
		return "\u0064\u0069\u0073\u0074"
	case 7:
		return "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074"
	}
	return ""
}

// ValidateWithPath validates the CT_Camera and its children, prefixing error messages with path
func (_gbdd *CT_Camera) ValidateWithPath(path string) error {
	if _gbdd.PrstAttr == ST_PresetCameraTypeUnset {
		return _gf.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _dbda := _gbdd.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _dbda != nil {
		return _dbda
	}
	if _gbdd.FovAttr != nil {
		if *_gbdd.FovAttr < 0 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0046\u006fv\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_gbdd.FovAttr)
		}
		if *_gbdd.FovAttr > 10800000 {
			return _gf.Errorf("\u0025\u0073\u002fm\u002e\u0046\u006f\u0076\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0031\u0030\u0038\u0030\u0030\u0030\u0030\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_gbdd.FovAttr)
		}
	}
	if _gbdd.ZoomAttr != nil {
		if _cdea := _gbdd.ZoomAttr.ValidateWithPath(path + "\u002fZ\u006f\u006f\u006d\u0041\u0074\u0074r"); _cdea != nil {
			return _cdea
		}
	}
	if _gbdd.Rot != nil {
		if _cfbf := _gbdd.Rot.ValidateWithPath(path + "\u002f\u0052\u006f\u0074"); _cfbf != nil {
			return _cfbf
		}
	}
	return nil
}

type CT_AlphaBiLevelEffect struct{ ThreshAttr ST_PositiveFixedPercentage }

type ST_LineEndType byte

type CT_AnimationGraphicalObjectBuildProperties struct {
	BldDgm   *CT_AnimationDgmBuildProperties
	BldChart *CT_AnimationChartBuildProperties
}

func (_bdcc *CT_AudioCDTime) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0072\u0061c\u006b"}, Value: _gf.Sprintf("\u0025\u0076", _bdcc.TrackAttr)})
	if _bdcc.TimeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0069\u006d\u0065"}, Value: _gf.Sprintf("\u0025\u0076", *_bdcc.TimeAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_InnerShadowEffect struct {
	BlurRadAttr *int64
	DistAttr    *int64
	DirAttr     *int32
	ScrgbClr    *CT_ScRgbColor
	SrgbClr     *CT_SRgbColor
	HslClr      *CT_HslColor
	SysClr      *CT_SystemColor
	SchemeClr   *CT_SchemeColor
	PrstClr     *CT_PresetColor
}

func (_babda ST_TextWrappingType) String() string {
	switch _babda {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u0071\u0075\u0061\u0072\u0065"
	}
	return ""
}

func (_dcabd *ST_PositiveFixedPercentage) Validate() error { return _dcabd.ValidateWithPath("") }

type CT_DashStopList struct{ Ds []*CT_DashStop }

func (_bcba *CT_DashStop) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ecccd := range start.Attr {
		if _ecccd.Name.Local == "\u0064" {
			_ebfbc, _fbbcc := ParseUnionST_PositivePercentage(_ecccd.Value)
			if _fbbcc != nil {
				return _fbbcc
			}
			_bcba.DAttr = _ebfbc
			continue
		}
		if _ecccd.Name.Local == "\u0073\u0070" {
			_fcbef, _dgcc := ParseUnionST_PositivePercentage(_ecccd.Value)
			if _dgcc != nil {
				return _dgcc
			}
			_bcba.SpAttr = _fcbef
			continue
		}
	}
	for {
		_ecgbb, _dacce := d.Token()
		if _dacce != nil {
			return _gf.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0061\u0073\u0068\u0053\u0074\u006f\u0070\u003a\u0020\u0025\u0073", _dacce)
		}
		if _abbe, _dace := _ecgbb.(_g.EndElement); _dace && _abbe.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fcfab *CT_GvmlGroupShapeChoice) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fbdd:
	for {
		_bbee, _edced := d.Token()
		if _edced != nil {
			return _edced
		}
		switch _ccage := _bbee.(type) {
		case _g.StartElement:
			switch _ccage.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}:
				_fdegd := NewCT_GvmlTextShape()
				if _aadgb := d.DecodeElement(_fdegd, &_ccage); _aadgb != nil {
					return _aadgb
				}
				_fcfab.TxSp = append(_fcfab.TxSp, _fdegd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_ebcff := NewCT_GvmlShape()
				if _fadee := d.DecodeElement(_ebcff, &_ccage); _fadee != nil {
					return _fadee
				}
				_fcfab.Sp = append(_fcfab.Sp, _ebcff)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_cgagd := NewCT_GvmlConnector()
				if _aefde := d.DecodeElement(_cgagd, &_ccage); _aefde != nil {
					return _aefde
				}
				_fcfab.CxnSp = append(_fcfab.CxnSp, _cgagd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_debaf := NewCT_GvmlPicture()
				if _dgdd := d.DecodeElement(_debaf, &_ccage); _dgdd != nil {
					return _dgdd
				}
				_fcfab.Pic = append(_fcfab.Pic, _debaf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_egbab := NewCT_GvmlGraphicalObjectFrame()
				if _accbf := d.DecodeElement(_egbab, &_ccage); _accbf != nil {
					return _accbf
				}
				_fcfab.GraphicFrame = append(_fcfab.GraphicFrame, _egbab)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_bdeac := NewCT_GvmlGroupShape()
				if _daceg := d.DecodeElement(_bdeac, &_ccage); _daceg != nil {
					return _daceg
				}
				_fcfab.GrpSp = append(_fcfab.GrpSp, _bdeac)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070S\u0068\u0061\u0070\u0065\u0043\u0068o\u0069\u0063\u0065 \u0025\u0076", _ccage.Name)
				if _fgdd := d.Skip(); _fgdd != nil {
					return _fgdd
				}
			}
		case _g.EndElement:
			break _fbdd
		case _g.CharData:
		}
	}
	return nil
}

const (
	ST_TextAnchoringTypeUnset ST_TextAnchoringType = 0
	ST_TextAnchoringTypeT     ST_TextAnchoringType = 1
	ST_TextAnchoringTypeCtr   ST_TextAnchoringType = 2
	ST_TextAnchoringTypeB     ST_TextAnchoringType = 3
	ST_TextAnchoringTypeJust  ST_TextAnchoringType = 4
	ST_TextAnchoringTypeDist  ST_TextAnchoringType = 5
)

func (_eabg *ST_PositivePercentage) ValidateWithPath(path string) error {
	_cgade := []string{}
	if _eabg.ST_PositivePercentageDecimal != nil {
		_cgade = append(_cgade, "\u0053\u0054\u005f\u0050o\u0073\u0069\u0074\u0069\u0076\u0065\u0050\u0065\u0072\u0063e\u006et\u0061\u0067\u0065\u0044\u0065\u0063\u0069m\u0061\u006c")
	}
	if _eabg.ST_PositivePercentage != nil {
		if _abbbb := _eabg.ST_PositivePercentage.ValidateWithPath(path + "\u002f\u0053\u0054\u005fPo\u0073\u0069\u0074\u0069\u0076\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061g\u0065"); _abbbb != nil {
			return _abbbb
		}
		_cgade = append(_cgade, "S\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0050\u0065\u0072c\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_cgade) > 1 {
		return _gf.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _cgade)
	}
	return nil
}

type CT_FillProperties struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

func (_afgdf *CT_TextLineBreak) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bagd:
	for {
		_cfdfg, _gfeb := d.Token()
		if _gfeb != nil {
			return _gfeb
		}
		switch _eeede := _cfdfg.(type) {
		case _g.StartElement:
			switch _eeede.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_afgdf.RPr = NewCT_TextCharacterProperties()
				if _ggefe := d.DecodeElement(_afgdf.RPr, &_eeede); _ggefe != nil {
					return _ggefe
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u004c\u0069\u006e\u0065\u0042\u0072\u0065\u0061\u006b\u0020\u0025v", _eeede.Name)
				if _adee := d.Skip(); _adee != nil {
					return _adee
				}
			}
		case _g.EndElement:
			break _bagd
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlTextShape and its children, prefixing error messages with path
func (_bece *CT_GvmlTextShape) ValidateWithPath(path string) error {
	if _fbbe := _bece.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _fbbe != nil {
		return _fbbe
	}
	if _bece.Choice != nil {
		if _bcag := _bece.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _bcag != nil {
			return _bcag
		}
	}
	if _bece.ExtLst != nil {
		if _ddad := _bece.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ddad != nil {
			return _ddad
		}
	}
	return nil
}

func (_ggdbd *ST_PitchFamily) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_ggdbd = 0
	case "\u0030\u0030":
		*_ggdbd = 1
	case "\u0030\u0031":
		*_ggdbd = 2
	case "\u0030\u0032":
		*_ggdbd = 3
	case "\u0031\u0036":
		*_ggdbd = 4
	case "\u0031\u0037":
		*_ggdbd = 5
	case "\u0031\u0038":
		*_ggdbd = 6
	case "\u0033\u0032":
		*_ggdbd = 7
	case "\u0033\u0033":
		*_ggdbd = 8
	case "\u0033\u0034":
		*_ggdbd = 9
	case "\u0034\u0038":
		*_ggdbd = 10
	case "\u0034\u0039":
		*_ggdbd = 11
	case "\u0035\u0030":
		*_ggdbd = 12
	case "\u0036\u0034":
		*_ggdbd = 13
	case "\u0036\u0035":
		*_ggdbd = 14
	case "\u0036\u0036":
		*_ggdbd = 15
	case "\u0038\u0030":
		*_ggdbd = 16
	case "\u0038\u0031":
		*_ggdbd = 17
	case "\u0038\u0032":
		*_ggdbd = 18
	}
	return nil
}

func (_cgaeca ST_TextWrappingType) Validate() error { return _cgaeca.ValidateWithPath("") }

func NewCT_TextBody() *CT_TextBody {
	_cafca := &CT_TextBody{}
	_cafca.BodyPr = NewCT_TextBodyProperties()
	return _cafca
}

func (_bbadd ST_TileFlipMode) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_bbadd.String(), start)
}

// ValidateWithPath validates the CT_GvmlConnectorNonVisual and its children, prefixing error messages with path
func (_dadd *CT_GvmlConnectorNonVisual) ValidateWithPath(path string) error {
	if _dceba := _dadd.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _dceba != nil {
		return _dceba
	}
	if _feba := _dadd.CNvCxnSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _feba != nil {
		return _feba
	}
	return nil
}

func (_bdbfb ST_AnimationDgmOnlyBuildType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_bdbfb.String(), start)
}

func (_cgdgd *CT_ColorReplaceEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _cgdgd.ScrgbClr != nil {
		_ccgb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_cgdgd.ScrgbClr, _ccgb)
	}
	if _cgdgd.SrgbClr != nil {
		_faab := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_cgdgd.SrgbClr, _faab)
	}
	if _cgdgd.HslClr != nil {
		_dbce := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_cgdgd.HslClr, _dbce)
	}
	if _cgdgd.SysClr != nil {
		_ddged := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_cgdgd.SysClr, _ddged)
	}
	if _cgdgd.SchemeClr != nil {
		_cedb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_cgdgd.SchemeClr, _cedb)
	}
	if _cgdgd.PrstClr != nil {
		_edda := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_cgdgd.PrstClr, _edda)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_eddddc ST_SchemeColorVal) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_afabdb := _g.Attr{}
	_afabdb.Name = name
	switch _eddddc {
	case ST_SchemeColorValUnset:
		_afabdb.Value = ""
	case ST_SchemeColorValBg1:
		_afabdb.Value = "\u0062\u0067\u0031"
	case ST_SchemeColorValTx1:
		_afabdb.Value = "\u0074\u0078\u0031"
	case ST_SchemeColorValBg2:
		_afabdb.Value = "\u0062\u0067\u0032"
	case ST_SchemeColorValTx2:
		_afabdb.Value = "\u0074\u0078\u0032"
	case ST_SchemeColorValAccent1:
		_afabdb.Value = "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case ST_SchemeColorValAccent2:
		_afabdb.Value = "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case ST_SchemeColorValAccent3:
		_afabdb.Value = "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case ST_SchemeColorValAccent4:
		_afabdb.Value = "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case ST_SchemeColorValAccent5:
		_afabdb.Value = "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case ST_SchemeColorValAccent6:
		_afabdb.Value = "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case ST_SchemeColorValHlink:
		_afabdb.Value = "\u0068\u006c\u0069n\u006b"
	case ST_SchemeColorValFolHlink:
		_afabdb.Value = "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	case ST_SchemeColorValPhClr:
		_afabdb.Value = "\u0070\u0068\u0043l\u0072"
	case ST_SchemeColorValDk1:
		_afabdb.Value = "\u0064\u006b\u0031"
	case ST_SchemeColorValLt1:
		_afabdb.Value = "\u006c\u0074\u0031"
	case ST_SchemeColorValDk2:
		_afabdb.Value = "\u0064\u006b\u0032"
	case ST_SchemeColorValLt2:
		_afabdb.Value = "\u006c\u0074\u0032"
	}
	return _afabdb, nil
}

type CT_TextBulletSizeFollowText struct{}

// Validate validates the CT_EmbeddedWAVAudioFile and its children
func (_bgdg *CT_EmbeddedWAVAudioFile) Validate() error {
	return _bgdg.ValidateWithPath("\u0043\u0054\u005fEm\u0062\u0065\u0064\u0064\u0065\u0064\u0057\u0041\u0056\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065")
}

func (_agdag *CT_TablePartStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ccbbe:
	for {
		_caced, _ddab := d.Token()
		if _ddab != nil {
			return _ddab
		}
		switch _fcaaf := _caced.(type) {
		case _g.StartElement:
			switch _fcaaf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0054\u0078\u0053\u0074\u0079\u006ce"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0054\u0078\u0053\u0074\u0079\u006ce"}:
				_agdag.TcTxStyle = NewCT_TableStyleTextStyle()
				if _gacga := d.DecodeElement(_agdag.TcTxStyle, &_fcaaf); _gacga != nil {
					return _gacga
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0053\u0074\u0079\u006c\u0065"}:
				_agdag.TcStyle = NewCT_TableStyleCellStyle()
				if _ecbac := d.DecodeElement(_agdag.TcStyle, &_fcaaf); _ecbac != nil {
					return _ecbac
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _fcaaf.Name)
				if _fdbbd := d.Skip(); _fdbbd != nil {
					return _fdbbd
				}
			}
		case _g.EndElement:
			break _ccbbe
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Path2DCubicBezierTo and its children, prefixing error messages with path
func (_caegg *CT_Path2DCubicBezierTo) ValidateWithPath(path string) error {
	for _gbdde, _cecbca := range _caegg.Pt {
		if _caabd := _cecbca.ValidateWithPath(_gf.Sprintf("\u0025s\u002f\u0050\u0074\u005b\u0025\u0064]", path, _gbdde)); _caabd != nil {
			return _caabd
		}
	}
	return nil
}

type Tbl struct{ CT_Table }

type ST_LightRigType byte

func (_gddbb ST_AdjAngle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _gddbb.ST_Angle != nil {
		e.EncodeToken(_g.CharData(_gf.Sprintf("\u0025\u0064", *_gddbb.ST_Angle)))
	}
	if _gddbb.ST_GeomGuideName != nil {
		e.EncodeToken(_g.CharData(*_gddbb.ST_GeomGuideName))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

// Validate validates the CT_NoFillProperties and its children
func (_ecgga *CT_NoFillProperties) Validate() error {
	return _ecgga.ValidateWithPath("\u0043\u0054\u005f\u004eoF\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_facde *CT_GvmlPictureNonVisual) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_facde.CNvPr = NewCT_NonVisualDrawingProps()
	_facde.CNvPicPr = NewCT_NonVisualPictureProperties()
_facdf:
	for {
		_fbdfe, _fceebf := d.Token()
		if _fceebf != nil {
			return _fceebf
		}
		switch _acee := _fbdfe.(type) {
		case _g.StartElement:
			switch _acee.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _ffag := d.DecodeElement(_facde.CNvPr, &_acee); _ffag != nil {
					return _ffag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}:
				if _acabd := d.DecodeElement(_facde.CNvPicPr, &_acee); _acabd != nil {
					return _acabd
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069\u0063\u0074\u0075r\u0065\u004e\u006f\u006e\u0056\u0069s\u0075\u0061\u006c \u0025\u0076", _acee.Name)
				if _bbacb := d.Skip(); _bbacb != nil {
					return _bbacb
				}
			}
		case _g.EndElement:
			break _facdf
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ColorScheme and its children
func (_faae *CT_ColorScheme) Validate() error {
	return _faae.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065")
}

func NewCT_NonVisualContentPartProperties() *CT_NonVisualContentPartProperties {
	_ecac := &CT_NonVisualContentPartProperties{}
	return _ecac
}

func NewCT_TextBodyProperties() *CT_TextBodyProperties {
	_adefc := &CT_TextBodyProperties{}
	return _adefc
}

// ValidateWithPath validates the EG_EffectProperties and its children, prefixing error messages with path
func (_ebgagg *EG_EffectProperties) ValidateWithPath(path string) error {
	if _ebgagg.EffectLst != nil {
		if _aeggdc := _ebgagg.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _aeggdc != nil {
			return _aeggdc
		}
	}
	if _ebgagg.EffectDag != nil {
		if _ecgbfe := _ebgagg.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _ecgbfe != nil {
			return _ecgbfe
		}
	}
	return nil
}

func (_degg *CT_DashStop) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064"}, Value: _gf.Sprintf("\u0025\u0076", _degg.DAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070"}, Value: _gf.Sprintf("\u0025\u0076", _degg.SpAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TextShapeAutofit and its children
func (_dfacc *CT_TextShapeAutofit) Validate() error {
	return _dfacc.ValidateWithPath("\u0043\u0054\u005f\u0054ex\u0074\u0053\u0068\u0061\u0070\u0065\u0041\u0075\u0074\u006f\u0066\u0069\u0074")
}

func NewCT_TextNormalAutofit() *CT_TextNormalAutofit {
	_cbgcf := &CT_TextNormalAutofit{}
	return _cbgcf
}

// ValidateWithPath validates the CT_TileInfoProperties and its children, prefixing error messages with path
func (_dfdfg *CT_TileInfoProperties) ValidateWithPath(path string) error {
	if _dfdfg.TxAttr != nil {
		if _gbgda := _dfdfg.TxAttr.ValidateWithPath(path + "\u002fT\u0078\u0041\u0074\u0074\u0072"); _gbgda != nil {
			return _gbgda
		}
	}
	if _dfdfg.TyAttr != nil {
		if _dfbab := _dfdfg.TyAttr.ValidateWithPath(path + "\u002fT\u0079\u0041\u0074\u0074\u0072"); _dfbab != nil {
			return _dfbab
		}
	}
	if _dfdfg.SxAttr != nil {
		if _cbfecb := _dfdfg.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _cbfecb != nil {
			return _cbfecb
		}
	}
	if _dfdfg.SyAttr != nil {
		if _abagd := _dfdfg.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _abagd != nil {
			return _abagd
		}
	}
	if _aefeb := _dfdfg.FlipAttr.ValidateWithPath(path + "\u002fF\u006c\u0069\u0070\u0041\u0074\u0074r"); _aefeb != nil {
		return _aefeb
	}
	if _dceff := _dfdfg.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _dceff != nil {
		return _dceff
	}
	return nil
}

func (_fcafe *ST_LineEndType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ccefc, _bdccd := d.Token()
	if _bdccd != nil {
		return _bdccd
	}
	if _dacbd, _ddgbf := _ccefc.(_g.EndElement); _ddgbf && _dacbd.Name == start.Name {
		*_fcafe = 1
		return nil
	}
	if _dfcae, _eaaca := _ccefc.(_g.CharData); !_eaaca {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccefc)
	} else {
		switch string(_dfcae) {
		case "":
			*_fcafe = 0
		case "\u006e\u006f\u006e\u0065":
			*_fcafe = 1
		case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_fcafe = 2
		case "\u0073t\u0065\u0061\u006c\u0074\u0068":
			*_fcafe = 3
		case "\u0064i\u0061\u006d\u006f\u006e\u0064":
			*_fcafe = 4
		case "\u006f\u0076\u0061\u006c":
			*_fcafe = 5
		case "\u0061\u0072\u0072o\u0077":
			*_fcafe = 6
		}
	}
	_ccefc, _bdccd = d.Token()
	if _bdccd != nil {
		return _bdccd
	}
	if _afffc, _bfdfa := _ccefc.(_g.EndElement); _bfdfa && _afffc.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccefc)
}

func (_gcbacc *ST_RectAlignment) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fffab, _dgdddg := d.Token()
	if _dgdddg != nil {
		return _dgdddg
	}
	if _cdcdf, _gefae := _fffab.(_g.EndElement); _gefae && _cdcdf.Name == start.Name {
		*_gcbacc = 1
		return nil
	}
	if _gfgcf, _cggefc := _fffab.(_g.CharData); !_cggefc {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fffab)
	} else {
		switch string(_gfgcf) {
		case "":
			*_gcbacc = 0
		case "\u0074\u006c":
			*_gcbacc = 1
		case "\u0074":
			*_gcbacc = 2
		case "\u0074\u0072":
			*_gcbacc = 3
		case "\u006c":
			*_gcbacc = 4
		case "\u0063\u0074\u0072":
			*_gcbacc = 5
		case "\u0072":
			*_gcbacc = 6
		case "\u0062\u006c":
			*_gcbacc = 7
		case "\u0062":
			*_gcbacc = 8
		case "\u0062\u0072":
			*_gcbacc = 9
		}
	}
	_fffab, _dgdddg = d.Token()
	if _dgdddg != nil {
		return _dgdddg
	}
	if _acage, _fecad := _fffab.(_g.EndElement); _fecad && _acage.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fffab)
}

func NewCT_TableCell() *CT_TableCell { _fbbge := &CT_TableCell{}; return _fbbge }

func (_dccccf *ST_PresetLineDashVal) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_dccccf = 0
	case "\u0073\u006f\u006ci\u0064":
		*_dccccf = 1
	case "\u0064\u006f\u0074":
		*_dccccf = 2
	case "\u0064\u0061\u0073\u0068":
		*_dccccf = 3
	case "\u006c\u0067\u0044\u0061\u0073\u0068":
		*_dccccf = 4
	case "\u0064a\u0073\u0068\u0044\u006f\u0074":
		*_dccccf = 5
	case "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft":
		*_dccccf = 6
	case "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_dccccf = 7
	case "\u0073y\u0073\u0044\u0061\u0073\u0068":
		*_dccccf = 8
	case "\u0073\u0079\u0073\u0044\u006f\u0074":
		*_dccccf = 9
	case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
		*_dccccf = 10
	case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_dccccf = 11
	}
	return nil
}

func (_efbca *ST_Coordinate32) Validate() error { return _efbca.ValidateWithPath("") }

// ValidateWithPath validates the CT_CustomColorList and its children, prefixing error messages with path
func (_dgdeg *CT_CustomColorList) ValidateWithPath(path string) error {
	for _bcab, _fbfba := range _dgdeg.CustClr {
		if _ddba := _fbfba.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0043\u0075\u0073\u0074\u0043\u006cr\u005b\u0025\u0064\u005d", path, _bcab)); _ddba != nil {
			return _ddba
		}
	}
	return nil
}

func (_aeaf *CT_GradientStop) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bdbd := range start.Attr {
		if _bdbd.Name.Local == "\u0070\u006f\u0073" {
			_gbaaa, _fgagf := ParseUnionST_PositiveFixedPercentage(_bdbd.Value)
			if _fgagf != nil {
				return _fgagf
			}
			_aeaf.PosAttr = _gbaaa
			continue
		}
	}
_bcabb:
	for {
		_ceged, _dged := d.Token()
		if _dged != nil {
			return _dged
		}
		switch _gfbf := _ceged.(type) {
		case _g.StartElement:
			switch _gfbf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_aeaf.ScrgbClr = NewCT_ScRgbColor()
				if _agcd := d.DecodeElement(_aeaf.ScrgbClr, &_gfbf); _agcd != nil {
					return _agcd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_aeaf.SrgbClr = NewCT_SRgbColor()
				if _cfaag := d.DecodeElement(_aeaf.SrgbClr, &_gfbf); _cfaag != nil {
					return _cfaag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_aeaf.HslClr = NewCT_HslColor()
				if _fdbg := d.DecodeElement(_aeaf.HslClr, &_gfbf); _fdbg != nil {
					return _fdbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_aeaf.SysClr = NewCT_SystemColor()
				if _abaaa := d.DecodeElement(_aeaf.SysClr, &_gfbf); _abaaa != nil {
					return _abaaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_aeaf.SchemeClr = NewCT_SchemeColor()
				if _bcdc := d.DecodeElement(_aeaf.SchemeClr, &_gfbf); _bcdc != nil {
					return _bcdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_aeaf.PrstClr = NewCT_PresetColor()
				if _fdac := d.DecodeElement(_aeaf.PrstClr, &_gfbf); _fdac != nil {
					return _fdac
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u0020\u0025\u0076", _gfbf.Name)
				if _ffce := d.Skip(); _ffce != nil {
					return _ffce
				}
			}
		case _g.EndElement:
			break _bcabb
		case _g.CharData:
		}
	}
	return nil
}

func (_acccbf *ST_PenAlignment) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_acccbf = 0
	case "\u0063\u0074\u0072":
		*_acccbf = 1
	case "\u0069\u006e":
		*_acccbf = 2
	}
	return nil
}

func (_dedba *CT_TextParagraphProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dedba.MarLAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0072\u004c"}, Value: _gf.Sprintf("\u0025\u0076", *_dedba.MarLAttr)})
	}
	if _dedba.MarRAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0072\u0052"}, Value: _gf.Sprintf("\u0025\u0076", *_dedba.MarRAttr)})
	}
	if _dedba.LvlAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0076\u006c"}, Value: _gf.Sprintf("\u0025\u0076", *_dedba.LvlAttr)})
	}
	if _dedba.IndentAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u006e\u0064\u0065\u006e\u0074"}, Value: _gf.Sprintf("\u0025\u0076", *_dedba.IndentAttr)})
	}
	if _dedba.AlgnAttr != ST_TextAlignTypeUnset {
		_dgbag, _ebgedb := _dedba.AlgnAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _ebgedb != nil {
			return _ebgedb
		}
		start.Attr = append(start.Attr, _dgbag)
	}
	if _dedba.DefTabSzAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0065\u0066\u0054\u0061\u0062\u0053\u007a"}, Value: _gf.Sprintf("\u0025\u0076", *_dedba.DefTabSzAttr)})
	}
	if _dedba.RtlAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0074\u006c"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dedba.RtlAttr))})
	}
	if _dedba.EaLnBrkAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0065a\u004c\u006e\u0042\u0072\u006b"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dedba.EaLnBrkAttr))})
	}
	if _dedba.FontAlgnAttr != ST_TextFontAlignTypeUnset {
		_gabbb, _bbbea := _dedba.FontAlgnAttr.MarshalXMLAttr(_g.Name{Local: "\u0066\u006f\u006e\u0074\u0041\u006c\u0067\u006e"})
		if _bbbea != nil {
			return _bbbea
		}
		start.Attr = append(start.Attr, _gabbb)
	}
	if _dedba.LatinLnBrkAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0061\u0074\u0069\u006e\u004c\u006e\u0042\u0072\u006b"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dedba.LatinLnBrkAttr))})
	}
	if _dedba.HangingPunctAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u0061\u006eg\u0069\u006e\u0067\u0050\u0075\u006e\u0063\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_dedba.HangingPunctAttr))})
	}
	e.EncodeToken(start)
	if _dedba.LnSpc != nil {
		_cfdg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u006e\u0053\u0070\u0063"}}
		e.EncodeElement(_dedba.LnSpc, _cfdg)
	}
	if _dedba.SpcBef != nil {
		_eddf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0042\u0065\u0066"}}
		e.EncodeElement(_dedba.SpcBef, _eddf)
	}
	if _dedba.SpcAft != nil {
		_cacbd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0041\u0066\u0074"}}
		e.EncodeElement(_dedba.SpcAft, _cacbd)
	}
	if _dedba.BuClrTx != nil {
		_gfffec := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072\u0054x"}}
		e.EncodeElement(_dedba.BuClrTx, _gfffec)
	}
	if _dedba.BuClr != nil {
		_egdec := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072"}}
		e.EncodeElement(_dedba.BuClr, _egdec)
	}
	if _dedba.BuSzTx != nil {
		_fbad := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0053\u007a\u0054\u0078"}}
		e.EncodeElement(_dedba.BuSzTx, _fbad)
	}
	if _dedba.BuSzPct != nil {
		_bgccf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0063t"}}
		e.EncodeElement(_dedba.BuSzPct, _bgccf)
	}
	if _dedba.BuSzPts != nil {
		_bbfgga := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0074s"}}
		e.EncodeElement(_dedba.BuSzPts, _bbfgga)
	}
	if _dedba.BuFontTx != nil {
		_cfagg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}}
		e.EncodeElement(_dedba.BuFontTx, _cfagg)
	}
	if _dedba.BuFont != nil {
		_aecfg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074"}}
		e.EncodeElement(_dedba.BuFont, _aecfg)
	}
	if _dedba.BuNone != nil {
		_bbbfe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u004e\u006f\u006e\u0065"}}
		e.EncodeElement(_dedba.BuNone, _bbbfe)
	}
	if _dedba.BuAutoNum != nil {
		_fgcaf := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0062\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"}}
		e.EncodeElement(_dedba.BuAutoNum, _fgcaf)
	}
	if _dedba.BuChar != nil {
		_adggb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0043\u0068\u0061\u0072"}}
		e.EncodeElement(_dedba.BuChar, _adggb)
	}
	if _dedba.BuBlip != nil {
		_gccef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0075\u0042\u006c\u0069\u0070"}}
		e.EncodeElement(_dedba.BuBlip, _gccef)
	}
	if _dedba.TabLst != nil {
		_aegagd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0061\u0062\u004c\u0073\u0074"}}
		e.EncodeElement(_dedba.TabLst, _aegagd)
	}
	if _dedba.DefRPr != nil {
		_fgcbc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0064\u0065\u0066\u0052\u0050\u0072"}}
		e.EncodeElement(_dedba.DefRPr, _fgcbc)
	}
	if _dedba.ExtLst != nil {
		_fedff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dedba.ExtLst, _fedff)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fbe *CT_AlphaInverseEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _fbe.ScrgbClr != nil {
		_bgb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_fbe.ScrgbClr, _bgb)
	}
	if _fbe.SrgbClr != nil {
		_dbb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_fbe.SrgbClr, _dbb)
	}
	if _fbe.HslClr != nil {
		_ffcf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_fbe.HslClr, _ffcf)
	}
	if _fbe.SysClr != nil {
		_ebb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_fbe.SysClr, _ebb)
	}
	if _fbe.SchemeClr != nil {
		_bff := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_fbe.SchemeClr, _bff)
	}
	if _fbe.PrstClr != nil {
		_bfg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_fbe.PrstClr, _bfg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_agafd *CT_TextSpacingPoint) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_agafd.ValAttr = 0
	for _, _daegg := range start.Attr {
		if _daegg.Name.Local == "\u0076\u0061\u006c" {
			_gagd, _gdfadb := _c.ParseInt(_daegg.Value, 10, 32)
			if _gdfadb != nil {
				return _gdfadb
			}
			_agafd.ValAttr = int32(_gagd)
			continue
		}
	}
	for {
		_eage, _gceff := d.Token()
		if _gceff != nil {
			return _gf.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0054\u0065\u0078\u0074\u0053p\u0061\u0063\u0069\u006e\u0067\u0050\u006f\u0069\u006e\u0074\u003a\u0020\u0025\u0073", _gceff)
		}
		if _abagb, _eggdb := _eage.(_g.EndElement); _eggdb && _abagb.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_StyleMatrixReference() *CT_StyleMatrixReference {
	_cbgad := &CT_StyleMatrixReference{}
	return _cbgad
}

func (_bdcaf *EG_FillModeProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_gagbd:
	for {
		_fbgcd, _egdac := d.Token()
		if _egdac != nil {
			return _egdac
		}
		switch _cdcgdc := _fbgcd.(type) {
		case _g.StartElement:
			switch _cdcgdc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}:
				_bdcaf.Tile = NewCT_TileInfoProperties()
				if _bdcdg := d.DecodeElement(_bdcaf.Tile, &_cdcgdc); _bdcdg != nil {
					return _bdcdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}:
				_bdcaf.Stretch = NewCT_StretchInfoProperties()
				if _bbaaf := d.DecodeElement(_bdcaf.Stretch, &_cdcgdc); _bbaaf != nil {
					return _bbaaf
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u0046\u0069\u006c\u006c\u004d\u006f\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _cdcgdc.Name)
				if _egeafb := d.Skip(); _egeafb != nil {
					return _egeafb
				}
			}
		case _g.EndElement:
			break _gagbd
		case _g.CharData:
		}
	}
	return nil
}

type ST_LineCap byte

func (_ccgag *CT_TextBody) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ccgag.BodyPr = NewCT_TextBodyProperties()
_faaed:
	for {
		_dcfee, _gfabg := d.Token()
		if _gfabg != nil {
			return _gfabg
		}
		switch _fdcd := _dcfee.(type) {
		case _g.StartElement:
			switch _fdcd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}:
				if _dbfdc := d.DecodeElement(_ccgag.BodyPr, &_fdcd); _dbfdc != nil {
					return _dbfdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_ccgag.LstStyle = NewCT_TextListStyle()
				if _gbgce := d.DecodeElement(_ccgag.LstStyle, &_fdcd); _gbgce != nil {
					return _gbgce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}:
				_bbdee := NewCT_TextParagraph()
				if _dbgeg := d.DecodeElement(_bbdee, &_fdcd); _dbgeg != nil {
					return _dbgeg
				}
				_ccgag.P = append(_ccgag.P, _bbdee)
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079\u0020\u0025\u0076", _fdcd.Name)
				if _aebfca := d.Skip(); _aebfca != nil {
					return _aebfca
				}
			}
		case _g.EndElement:
			break _faaed
		case _g.CharData:
		}
	}
	return nil
}

// ST_TextPoint is a union type
type ST_TextPoint struct {
	ST_TextPointUnqualified *int32
	ST_UniversalMeasure     *string
}

// ST_PositivePercentage is a union type
type ST_PositivePercentage struct {
	ST_PositivePercentageDecimal *int32
	ST_PositivePercentage        *ST_Percentage
}

// Validate validates the CT_AudioFile and its children
func (_afd *CT_AudioFile) Validate() error {
	return _afd.ValidateWithPath("\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065")
}

func (_egg *CT_Angle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _gf.Sprintf("\u0025\u0076", _egg.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_AnimationDgmBuildProperties() *CT_AnimationDgmBuildProperties {
	_ffab := &CT_AnimationDgmBuildProperties{}
	return _ffab
}

// ValidateWithPath validates the CT_Boolean and its children, prefixing error messages with path
func (_fagf *CT_Boolean) ValidateWithPath(path string) error {
	if _fagf.ValAttr != nil {
		if _dgfg := _fagf.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _dgfg != nil {
			return _dgfg
		}
	}
	return nil
}

type CT_TextTabStop struct {
	PosAttr  *ST_Coordinate32
	AlgnAttr ST_TextTabAlignType
}

// Validate validates the CT_BlipFillProperties and its children
func (_cbb *CT_BlipFillProperties) Validate() error {
	return _cbb.ValidateWithPath("C\u0054\u005f\u0042\u006cip\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

func NewCT_GvmlGraphicFrameNonVisual() *CT_GvmlGraphicFrameNonVisual {
	_ggcd := &CT_GvmlGraphicFrameNonVisual{}
	_ggcd.CNvPr = NewCT_NonVisualDrawingProps()
	_ggcd.CNvGraphicFramePr = NewCT_NonVisualGraphicFrameProperties()
	return _ggcd
}

func (_fegca *EG_TextRun) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fegca.R != nil {
		_dgaag := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072"}}
		e.EncodeElement(_fegca.R, _dgaag)
	}
	if _fegca.Br != nil {
		_gbfc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u0072"}}
		e.EncodeElement(_fegca.Br, _gbfc)
	}
	if _fegca.Fld != nil {
		_ddbdc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066l\u0064"}}
		e.EncodeElement(_fegca.Fld, _ddbdc)
	}
	return nil
}

// Validate validates the CT_TintEffect and its children
func (_eedc *CT_TintEffect) Validate() error {
	return _eedc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0069\u006e\u0074\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_bcbbe *CT_AnimationDgmElement) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ecgc := range start.Attr {
		if _ecgc.Name.Local == "\u0069\u0064" {
			_gedee, _fgc := _ecgc.Value, error(nil)
			if _fgc != nil {
				return _fgc
			}
			_bcbbe.IdAttr = &_gedee
			continue
		}
		if _ecgc.Name.Local == "\u0062l\u0064\u0053\u0074\u0065\u0070" {
			_bcbbe.BldStepAttr.UnmarshalXMLAttr(_ecgc)
			continue
		}
	}
	for {
		_bcd, _afbd := d.Token()
		if _afbd != nil {
			return _gf.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006e\u0069m\u0061t\u0069o\u006eD\u0067\u006d\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073", _afbd)
		}
		if _feab, _bgfd := _bcd.(_g.EndElement); _bgfd && _feab.Name == start.Name {
			break
		}
	}
	return nil
}

func (_debefe ST_PresetColorVal) Validate() error { return _debefe.ValidateWithPath("") }

// Validate validates the CT_DashStop and its children
func (_gddba *CT_DashStop) Validate() error {
	return _gddba.ValidateWithPath("C\u0054\u005f\u0044\u0061\u0073\u0068\u0053\u0074\u006f\u0070")
}

func (_ebdgc *ThemeManager) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0074\u0068\u0065\u006d\u0065\u004d\u0061n\u0061\u0067\u0065\u0072"
	return _ebdgc.CT_EmptyElement.MarshalXML(e, start)
}

const (
	ST_BlackWhiteModeUnset      ST_BlackWhiteMode = 0
	ST_BlackWhiteModeClr        ST_BlackWhiteMode = 1
	ST_BlackWhiteModeAuto       ST_BlackWhiteMode = 2
	ST_BlackWhiteModeGray       ST_BlackWhiteMode = 3
	ST_BlackWhiteModeLtGray     ST_BlackWhiteMode = 4
	ST_BlackWhiteModeInvGray    ST_BlackWhiteMode = 5
	ST_BlackWhiteModeGrayWhite  ST_BlackWhiteMode = 6
	ST_BlackWhiteModeBlackGray  ST_BlackWhiteMode = 7
	ST_BlackWhiteModeBlackWhite ST_BlackWhiteMode = 8
	ST_BlackWhiteModeBlack      ST_BlackWhiteMode = 9
	ST_BlackWhiteModeWhite      ST_BlackWhiteMode = 10
	ST_BlackWhiteModeHidden     ST_BlackWhiteMode = 11
)

func NewCT_AlphaModulateFixedEffect() *CT_AlphaModulateFixedEffect {
	_bgf := &CT_AlphaModulateFixedEffect{}
	return _bgf
}

func (_egadf *ST_PathFillMode) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gegead, _gbgcf := d.Token()
	if _gbgcf != nil {
		return _gbgcf
	}
	if _gabce, _fcgff := _gegead.(_g.EndElement); _fcgff && _gabce.Name == start.Name {
		*_egadf = 1
		return nil
	}
	if _gcbecg, _ggbdg := _gegead.(_g.CharData); !_ggbdg {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gegead)
	} else {
		switch string(_gcbecg) {
		case "":
			*_egadf = 0
		case "\u006e\u006f\u006e\u0065":
			*_egadf = 1
		case "\u006e\u006f\u0072\u006d":
			*_egadf = 2
		case "\u006ci\u0067\u0068\u0074\u0065\u006e":
			*_egadf = 3
		case "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073":
			*_egadf = 4
		case "\u0064\u0061\u0072\u006b\u0065\u006e":
			*_egadf = 5
		case "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073":
			*_egadf = 6
		}
	}
	_gegead, _gbgcf = d.Token()
	if _gbgcf != nil {
		return _gbgcf
	}
	if _fbgcda, _dfaga := _gegead.(_g.EndElement); _dfaga && _fbgcda.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gegead)
}

// Validate validates the EG_TextGeometry and its children
func (_bdadb *EG_TextGeometry) Validate() error {
	return _bdadb.ValidateWithPath("\u0045G\u005fT\u0065\u0078\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079")
}

func NewCT_NonVisualPictureProperties() *CT_NonVisualPictureProperties {
	_deee := &CT_NonVisualPictureProperties{}
	return _deee
}

func (_cbadg *ST_BlackWhiteMode) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cbadg = 0
	case "\u0063\u006c\u0072":
		*_cbadg = 1
	case "\u0061\u0075\u0074\u006f":
		*_cbadg = 2
	case "\u0067\u0072\u0061\u0079":
		*_cbadg = 3
	case "\u006c\u0074\u0047\u0072\u0061\u0079":
		*_cbadg = 4
	case "\u0069n\u0076\u0047\u0072\u0061\u0079":
		*_cbadg = 5
	case "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e":
		*_cbadg = 6
	case "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y":
		*_cbadg = 7
	case "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065":
		*_cbadg = 8
	case "\u0062\u006c\u0061c\u006b":
		*_cbadg = 9
	case "\u0077\u0068\u0069t\u0065":
		*_cbadg = 10
	case "\u0068\u0069\u0064\u0064\u0065\u006e":
		*_cbadg = 11
	}
	return nil
}

func (_cdcccg *ST_AnimationDgmBuildType) Validate() error { return _cdcccg.ValidateWithPath("") }

func NewEG_ThemeableFillStyle() *EG_ThemeableFillStyle {
	_ddfeg := &EG_ThemeableFillStyle{}
	return _ddfeg
}

const (
	ST_LineEndLengthUnset ST_LineEndLength = 0
	ST_LineEndLengthSm    ST_LineEndLength = 1
	ST_LineEndLengthMed   ST_LineEndLength = 2
	ST_LineEndLengthLg    ST_LineEndLength = 3
)

func (_gdaea *ST_AnimationChartOnlyBuildType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_gdaea = 0
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_gdaea = 1
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_gdaea = 2
	case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
		*_gdaea = 3
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
		*_gdaea = 4
	}
	return nil
}

// Validate validates the CT_AlphaCeilingEffect and its children
func (_fge *CT_AlphaCeilingEffect) Validate() error {
	return _fge.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061C\u0065\u0069\u006c\u0069\u006eg\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_dafcd *ST_ChartBuildStep) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_aaafe, _dcdge := d.Token()
	if _dcdge != nil {
		return _dcdge
	}
	if _gfaef, _gfeeef := _aaafe.(_g.EndElement); _gfeeef && _gfaef.Name == start.Name {
		*_dafcd = 1
		return nil
	}
	if _cbdcc, _eebge := _aaafe.(_g.CharData); !_eebge {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aaafe)
	} else {
		switch string(_cbdcc) {
		case "":
			*_dafcd = 0
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_dafcd = 1
		case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_dafcd = 2
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_dafcd = 3
		case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
			*_dafcd = 4
		case "\u0061\u006c\u006c\u0050\u0074\u0073":
			*_dafcd = 5
		case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
			*_dafcd = 6
		}
	}
	_aaafe, _dcdge = d.Token()
	if _dcdge != nil {
		return _dcdge
	}
	if _egedbc, _cfdec := _aaafe.(_g.EndElement); _cfdec && _egedbc.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aaafe)
}

func _befce(_dfaebc bool) uint8 {
	if _dfaebc {
		return 1
	}
	return 0
}

func ParseUnionST_AdjAngle(s string) (ST_AdjAngle, error) {
	_fdba := ST_AdjAngle{}
	_bfced, _fadeg := _c.ParseInt(s, 10, 64)
	if _fadeg != nil {
		_fdba.ST_GeomGuideName = &s
	} else {
		_cbbfed := int32(_bfced)
		_fdba.ST_Angle = &_cbbfed
	}
	return _fdba, nil
}

func (_ecfba ST_TextFontScalePercentOrPercentString) String() string {
	if _ecfba.ST_TextFontScalePercent != nil {
		return _gf.Sprintf("\u0025\u0076", *_ecfba.ST_TextFontScalePercent)
	}
	if _ecfba.ST_Percentage != nil {
		return _gf.Sprintf("\u0025\u0076", *_ecfba.ST_Percentage)
	}
	return ""
}

func (_dacg *CT_AudioCDTime) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gaeb := range start.Attr {
		if _gaeb.Name.Local == "\u0074\u0072\u0061c\u006b" {
			_feabb, _gdg := _c.ParseUint(_gaeb.Value, 10, 8)
			if _gdg != nil {
				return _gdg
			}
			_dacg.TrackAttr = uint8(_feabb)
			continue
		}
		if _gaeb.Name.Local == "\u0074\u0069\u006d\u0065" {
			_dbab, _bfga := _c.ParseUint(_gaeb.Value, 10, 32)
			if _bfga != nil {
				return _bfga
			}
			_dgbg := uint32(_dbab)
			_dacg.TimeAttr = &_dgbg
			continue
		}
	}
	for {
		_decc, _gfa := d.Token()
		if _gfa != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0043\u0044\u0054\u0069\u006d\u0065:\u0020\u0025\u0073", _gfa)
		}
		if _abfe, _ceca := _decc.(_g.EndElement); _ceca && _abfe.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_GrayscaleEffect() *CT_GrayscaleEffect { _bbdfc := &CT_GrayscaleEffect{}; return _bbdfc }

func (_cbfff *ST_TileFlipMode) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fbccf, _bfccd := d.Token()
	if _bfccd != nil {
		return _bfccd
	}
	if _acgbc, _cffdcc := _fbccf.(_g.EndElement); _cffdcc && _acgbc.Name == start.Name {
		*_cbfff = 1
		return nil
	}
	if _gcdde, _cegfe := _fbccf.(_g.CharData); !_cegfe {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbccf)
	} else {
		switch string(_gcdde) {
		case "":
			*_cbfff = 0
		case "\u006e\u006f\u006e\u0065":
			*_cbfff = 1
		case "\u0078":
			*_cbfff = 2
		case "\u0079":
			*_cbfff = 3
		case "\u0078\u0079":
			*_cbfff = 4
		}
	}
	_fbccf, _bfccd = d.Token()
	if _bfccd != nil {
		return _bfccd
	}
	if _aaeccg, _cdcfe := _fbccf.(_g.EndElement); _cdcfe && _aaeccg.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbccf)
}

// Validate validates the AG_Locking and its children
func (_dag *AG_Locking) Validate() error {
	return _dag.ValidateWithPath("\u0041\u0047\u005f\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}

func (_fccacg ST_BlackWhiteMode) Validate() error { return _fccacg.ValidateWithPath("") }

// Validate validates the CT_GroupFillProperties and its children
func (_aabfc *CT_GroupFillProperties) Validate() error {
	return _aabfc.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

func (_gffce *CT_LineStyleList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_caedf:
	for {
		_dcabc, _dedb := d.Token()
		if _dedb != nil {
			return _dedb
		}
		switch _dfagd := _dcabc.(type) {
		case _g.StartElement:
			switch _dfagd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_effaa := NewCT_LineProperties()
				if _ffad := d.DecodeElement(_effaa, &_dfagd); _ffad != nil {
					return _ffad
				}
				_gffce.Ln = append(_gffce.Ln, _effaa)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025v", _dfagd.Name)
				if _ffcg := d.Skip(); _ffcg != nil {
					return _ffcg
				}
			}
		case _g.EndElement:
			break _caedf
		case _g.CharData:
		}
	}
	return nil
}

type ST_PathFillMode byte

func (_eaff *EG_TextBulletSize) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cbfcc:
	for {
		_efbgae, _agbae := d.Token()
		if _agbae != nil {
			return _agbae
		}
		switch _dfagf := _efbgae.(type) {
		case _g.StartElement:
			switch _dfagf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}:
				_eaff.BuSzTx = NewCT_TextBulletSizeFollowText()
				if _gafaf := d.DecodeElement(_eaff.BuSzTx, &_dfagf); _gafaf != nil {
					return _gafaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}:
				_eaff.BuSzPct = NewCT_TextBulletSizePercent()
				if _aecd := d.DecodeElement(_eaff.BuSzPct, &_dfagf); _aecd != nil {
					return _aecd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}:
				_eaff.BuSzPts = NewCT_TextBulletSizePoint()
				if _ggeae := d.DecodeElement(_eaff.BuSzPts, &_dfagf); _ggeae != nil {
					return _ggeae
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065\u0020\u0025\u0076", _dfagf.Name)
				if _gefg := d.Skip(); _gefg != nil {
					return _gefg
				}
			}
		case _g.EndElement:
			break _cbfcc
		case _g.CharData:
		}
	}
	return nil
}

type CT_ColorMappingOverrideChoice struct {
	MasterClrMapping   *CT_EmptyElement
	OverrideClrMapping *CT_ColorMapping
}

// Validate validates the CT_GradientStop and its children
func (_cdcb *CT_GradientStop) Validate() error {
	return _cdcb.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070")
}

// ValidateWithPath validates the EG_ThemeableFillStyle and its children, prefixing error messages with path
func (_gbbaa *EG_ThemeableFillStyle) ValidateWithPath(path string) error {
	if _gbbaa.Fill != nil {
		if _ecab := _gbbaa.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _ecab != nil {
			return _ecab
		}
	}
	if _gbbaa.FillRef != nil {
		if _bdacb := _gbbaa.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _bdacb != nil {
			return _bdacb
		}
	}
	return nil
}

func (_gabg *CT_NonVisualGroupDrawingShapeProps) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _gabg.GrpSpLocks != nil {
		_bdae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067r\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_gabg.GrpSpLocks, _bdae)
	}
	if _gabg.ExtLst != nil {
		_gdbcee := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gabg.ExtLst, _gdbcee)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_baecbg *EG_ColorChoice) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _baecbg.ScrgbClr != nil {
		_eaeec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_baecbg.ScrgbClr, _eaeec)
	}
	if _baecbg.SrgbClr != nil {
		_egdgc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_baecbg.SrgbClr, _egdgc)
	}
	if _baecbg.HslClr != nil {
		_bebggb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_baecbg.HslClr, _bebggb)
	}
	if _baecbg.SysClr != nil {
		_aggbb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_baecbg.SysClr, _aggbb)
	}
	if _baecbg.SchemeClr != nil {
		_ddgbde := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_baecbg.SchemeClr, _ddgbde)
	}
	if _baecbg.PrstClr != nil {
		_cfeb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_baecbg.PrstClr, _cfeb)
	}
	return nil
}

func (_bgbce ST_BlendMode) Validate() error { return _bgbce.ValidateWithPath("") }

const (
	ST_PenAlignmentUnset ST_PenAlignment = 0
	ST_PenAlignmentCtr   ST_PenAlignment = 1
	ST_PenAlignmentIn    ST_PenAlignment = 2
)

func NewCT_Path2DMoveTo() *CT_Path2DMoveTo {
	_gddfc := &CT_Path2DMoveTo{}
	_gddfc.Pt = NewCT_AdjPoint2D()
	return _gddfc
}

func (_ceda *CT_BackgroundFormatting) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _ceda.NoFill != nil {
		_ebaa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ceda.NoFill, _ebaa)
	}
	if _ceda.SolidFill != nil {
		_dbg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ceda.SolidFill, _dbg)
	}
	if _ceda.GradFill != nil {
		_gfgd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ceda.GradFill, _gfgd)
	}
	if _ceda.BlipFill != nil {
		_ded := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ceda.BlipFill, _ded)
	}
	if _ceda.PattFill != nil {
		_ggb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ceda.PattFill, _ggb)
	}
	if _ceda.GrpFill != nil {
		_bfb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_ceda.GrpFill, _bfb)
	}
	if _ceda.EffectLst != nil {
		_bgdd := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ceda.EffectLst, _bgdd)
	}
	if _ceda.EffectDag != nil {
		_cefa := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_ceda.EffectDag, _cefa)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fcgb *CT_Headers) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_ddcgb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0065\u0061\u0064\u0065\u0072"}}
	for _, _aeab := range _fcgb.Header {
		e.EncodeElement(_aeab, _ddcgb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cdgaf *CT_TextCharBullet) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u0068\u0061\u0072"}, Value: _gf.Sprintf("\u0025\u0076", _cdgaf.CharAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fbcab ST_TextVerticalType) ValidateWithPath(path string) error {
	switch _fbcab {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fbcab))
	}
	return nil
}

func (_cecgg ST_TextUnderlineType) ValidateWithPath(path string) error {
	switch _cecgg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cecgg))
	}
	return nil
}

type ST_PathShadeType byte

type ST_BlackWhiteMode byte

func NewCT_TableCol() *CT_TableCol { _fafa := &CT_TableCol{}; return _fafa }

// ValidateWithPath validates the CT_TableBackgroundStyle and its children, prefixing error messages with path
func (_bcgce *CT_TableBackgroundStyle) ValidateWithPath(path string) error {
	if _bcgce.Fill != nil {
		if _gggaa := _bcgce.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _gggaa != nil {
			return _gggaa
		}
	}
	if _bcgce.FillRef != nil {
		if _fefdb := _bcgce.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _fefdb != nil {
			return _fefdb
		}
	}
	if _bcgce.Effect != nil {
		if _cegeb := _bcgce.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _cegeb != nil {
			return _cegeb
		}
	}
	if _bcgce.EffectRef != nil {
		if _begee := _bcgce.EffectRef.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"); _begee != nil {
			return _begee
		}
	}
	return nil
}

func NewCT_FixedPercentage() *CT_FixedPercentage { _caag := &CT_FixedPercentage{}; return _caag }

func (_babf *CT_QuickTimeFile) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fbdgc := range start.Attr {
		if _fbdgc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fbdgc.Name.Local == "\u006c\u0069\u006e\u006b" || _fbdgc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fbdgc.Name.Local == "\u006c\u0069\u006e\u006b" {
			_ddgege, _deggc := _fbdgc.Value, error(nil)
			if _deggc != nil {
				return _deggc
			}
			_babf.LinkAttr = _ddgege
			continue
		}
	}
_gfbge:
	for {
		_dgaeg, _edae := d.Token()
		if _edae != nil {
			return _edae
		}
		switch _gfece := _dgaeg.(type) {
		case _g.StartElement:
			switch _gfece.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_babf.ExtLst = NewCT_OfficeArtExtensionList()
				if _fabdc := d.DecodeElement(_babf.ExtLst, &_gfece); _fabdc != nil {
					return _fabdc
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065\u0020\u0025v", _gfece.Name)
				if _adgab := d.Skip(); _adgab != nil {
					return _adgab
				}
			}
		case _g.EndElement:
			break _gfbge
		case _g.CharData:
		}
	}
	return nil
}

const (
	ST_CompoundLineUnset     ST_CompoundLine = 0
	ST_CompoundLineSng       ST_CompoundLine = 1
	ST_CompoundLineDbl       ST_CompoundLine = 2
	ST_CompoundLineThickThin ST_CompoundLine = 3
	ST_CompoundLineThinThick ST_CompoundLine = 4
	ST_CompoundLineTri       ST_CompoundLine = 5
)

type CT_NonVisualPictureProperties struct {
	PreferRelativeResizeAttr *bool
	PicLocks                 *CT_PictureLocking
	ExtLst                   *CT_OfficeArtExtensionList
}

func (_gfcgg *CT_TableCellProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _edag := range start.Attr {
		if _edag.Name.Local == "\u006d\u0061\u0072\u0052" {
			_ecedc, _fbged := ParseUnionST_Coordinate32(_edag.Value)
			if _fbged != nil {
				return _fbged
			}
			_gfcgg.MarRAttr = &_ecedc
			continue
		}
		if _edag.Name.Local == "\u006d\u0061\u0072\u0042" {
			_debdd, _agdgf := ParseUnionST_Coordinate32(_edag.Value)
			if _agdgf != nil {
				return _agdgf
			}
			_gfcgg.MarBAttr = &_debdd
			continue
		}
		if _edag.Name.Local == "\u0061\u006e\u0063\u0068\u006f\u0072" {
			_gfcgg.AnchorAttr.UnmarshalXMLAttr(_edag)
			continue
		}
		if _edag.Name.Local == "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077" {
			_gfcgg.HorzOverflowAttr.UnmarshalXMLAttr(_edag)
			continue
		}
		if _edag.Name.Local == "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r" {
			_eaaa, _ceaea := _c.ParseBool(_edag.Value)
			if _ceaea != nil {
				return _ceaea
			}
			_gfcgg.AnchorCtrAttr = &_eaaa
			continue
		}
		if _edag.Name.Local == "\u0076\u0065\u0072\u0074" {
			_gfcgg.VertAttr.UnmarshalXMLAttr(_edag)
			continue
		}
		if _edag.Name.Local == "\u006d\u0061\u0072\u004c" {
			_gbeae, _fbccb := ParseUnionST_Coordinate32(_edag.Value)
			if _fbccb != nil {
				return _fbccb
			}
			_gfcgg.MarLAttr = &_gbeae
			continue
		}
		if _edag.Name.Local == "\u006d\u0061\u0072\u0054" {
			_fadgff, _dagba := ParseUnionST_Coordinate32(_edag.Value)
			if _dagba != nil {
				return _dagba
			}
			_gfcgg.MarTAttr = &_fadgff
			continue
		}
	}
_begce:
	for {
		_bcecf, _adac := d.Token()
		if _adac != nil {
			return _adac
		}
		switch _edcdec := _bcecf.(type) {
		case _g.StartElement:
			switch _edcdec.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u004c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u004c"}:
				_gfcgg.LnL = NewCT_LineProperties()
				if _bdfdc := d.DecodeElement(_gfcgg.LnL, &_edcdec); _bdfdc != nil {
					return _bdfdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052"}:
				_gfcgg.LnR = NewCT_LineProperties()
				if _gdcfa := d.DecodeElement(_gfcgg.LnR, &_edcdec); _gdcfa != nil {
					return _gdcfa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054"}:
				_gfcgg.LnT = NewCT_LineProperties()
				if _aefcc := d.DecodeElement(_gfcgg.LnT, &_edcdec); _aefcc != nil {
					return _aefcc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042"}:
				_gfcgg.LnB = NewCT_LineProperties()
				if _bfdgf := d.DecodeElement(_gfcgg.LnB, &_edcdec); _bfdgf != nil {
					return _bfdgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006c\u0054\u006f\u0042\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006c\u0054\u006f\u0042\u0072"}:
				_gfcgg.LnTlToBr = NewCT_LineProperties()
				if _geda := d.DecodeElement(_gfcgg.LnTlToBr, &_edcdec); _geda != nil {
					return _geda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042\u006c\u0054\u006f\u0054\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042\u006c\u0054\u006f\u0054\u0072"}:
				_gfcgg.LnBlToTr = NewCT_LineProperties()
				if _gfafb := d.DecodeElement(_gfcgg.LnBlToTr, &_edcdec); _gfafb != nil {
					return _gfafb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}:
				_gfcgg.Cell3D = NewCT_Cell3D()
				if _dcddc := d.DecodeElement(_gfcgg.Cell3D, &_edcdec); _dcddc != nil {
					return _dcddc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_gfcgg.NoFill = NewCT_NoFillProperties()
				if _egbfa := d.DecodeElement(_gfcgg.NoFill, &_edcdec); _egbfa != nil {
					return _egbfa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_gfcgg.SolidFill = NewCT_SolidColorFillProperties()
				if _bgcgg := d.DecodeElement(_gfcgg.SolidFill, &_edcdec); _bgcgg != nil {
					return _bgcgg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_gfcgg.GradFill = NewCT_GradientFillProperties()
				if _cegcb := d.DecodeElement(_gfcgg.GradFill, &_edcdec); _cegcb != nil {
					return _cegcb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_gfcgg.BlipFill = NewCT_BlipFillProperties()
				if _fgbcc := d.DecodeElement(_gfcgg.BlipFill, &_edcdec); _fgbcc != nil {
					return _fgbcc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_gfcgg.PattFill = NewCT_PatternFillProperties()
				if _afbcf := d.DecodeElement(_gfcgg.PattFill, &_edcdec); _afbcf != nil {
					return _afbcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_gfcgg.GrpFill = NewCT_GroupFillProperties()
				if _fffcc := d.DecodeElement(_gfcgg.GrpFill, &_edcdec); _fffcc != nil {
					return _fffcc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0065\u0072\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0065\u0072\u0073"}:
				_gfcgg.Headers = NewCT_Headers()
				if _ffdff := d.DecodeElement(_gfcgg.Headers, &_edcdec); _ffdff != nil {
					return _ffdff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfcgg.ExtLst = NewCT_OfficeArtExtensionList()
				if _dgdca := d.DecodeElement(_gfcgg.ExtLst, &_edcdec); _dgdca != nil {
					return _dgdca
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u0061\u0062\u006ce\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _edcdec.Name)
				if _dceae := d.Skip(); _dceae != nil {
					return _dceae
				}
			}
		case _g.EndElement:
			break _begce
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PathShadeProperties and its children
func (_abgec *CT_PathShadeProperties) Validate() error {
	return _abgec.ValidateWithPath("\u0043\u0054\u005f\u0050at\u0068\u0053\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

func (_ggg *CT_AudioCD) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_fgg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0074"}}
	e.EncodeElement(_ggg.St, _fgg)
	_cfd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065n\u0064"}}
	e.EncodeElement(_ggg.End, _cfd)
	if _ggg.ExtLst != nil {
		_caa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ggg.ExtLst, _caa)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_SRgbColor struct {
	ValAttr           string
	EG_ColorTransform []*EG_ColorTransform
}

// ValidateWithPath validates the CT_Angle and its children, prefixing error messages with path
func (_fgd *CT_Angle) ValidateWithPath(path string) error { return nil }

type CT_GroupFillProperties struct{}

// ValidateWithPath validates the CT_PictureLocking and its children, prefixing error messages with path
func (_fgbac *CT_PictureLocking) ValidateWithPath(path string) error {
	if _fgbac.ExtLst != nil {
		if _adec := _fgbac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _adec != nil {
			return _adec
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GradientFillProperties and its children, prefixing error messages with path
func (_dbddc *CT_GradientFillProperties) ValidateWithPath(path string) error {
	if _cbcdc := _dbddc.FlipAttr.ValidateWithPath(path + "\u002fF\u006c\u0069\u0070\u0041\u0074\u0074r"); _cbcdc != nil {
		return _cbcdc
	}
	if _dbddc.GsLst != nil {
		if _agcaf := _dbddc.GsLst.ValidateWithPath(path + "\u002f\u0047\u0073\u004c\u0073\u0074"); _agcaf != nil {
			return _agcaf
		}
	}
	if _dbddc.Lin != nil {
		if _dgae := _dbddc.Lin.ValidateWithPath(path + "\u002f\u004c\u0069\u006e"); _dgae != nil {
			return _dgae
		}
	}
	if _dbddc.Path != nil {
		if _ccfaf := _dbddc.Path.ValidateWithPath(path + "\u002f\u0050\u0061t\u0068"); _ccfaf != nil {
			return _ccfaf
		}
	}
	if _dbddc.TileRect != nil {
		if _cbdd := _dbddc.TileRect.ValidateWithPath(path + "\u002fT\u0069\u006c\u0065\u0052\u0065\u0063t"); _cbdd != nil {
			return _cbdd
		}
	}
	return nil
}

func (_ebbc ST_ChartBuildStep) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_abgfg := _g.Attr{}
	_abgfg.Name = name
	switch _ebbc {
	case ST_ChartBuildStepUnset:
		_abgfg.Value = ""
	case ST_ChartBuildStepCategory:
		_abgfg.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_ChartBuildStepPtInCategory:
		_abgfg.Value = "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_ChartBuildStepSeries:
		_abgfg.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_ChartBuildStepPtInSeries:
		_abgfg.Value = "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case ST_ChartBuildStepAllPts:
		_abgfg.Value = "\u0061\u006c\u006c\u0050\u0074\u0073"
	case ST_ChartBuildStepGridLegend:
		_abgfg.Value = "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	}
	return _abgfg, nil
}

type ST_BlipCompression byte

// Validate validates the CT_TableGrid and its children
func (_eegac *CT_TableGrid) Validate() error {
	return _eegac.ValidateWithPath("\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0047\u0072\u0069\u0064")
}

func NewCT_TextBlipBullet() *CT_TextBlipBullet {
	_dedddaf := &CT_TextBlipBullet{}
	_dedddaf.Blip = NewCT_Blip()
	return _dedddaf
}

type CT_TableRow struct {
	HAttr  ST_Coordinate
	Tc     []*CT_TableCell
	ExtLst *CT_OfficeArtExtensionList
}

func (_afede *CT_TextSpacingPoint) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _gf.Sprintf("\u0025\u0076", _afede.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gbcdb *CT_NonVisualGroupDrawingShapeProps) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fdaef:
	for {
		_ccdb, _ggagb := d.Token()
		if _ggagb != nil {
			return _ggagb
		}
		switch _gedbd := _ccdb.(type) {
		case _g.StartElement:
			switch _gedbd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}:
				_gbcdb.GrpSpLocks = NewCT_GroupLocking()
				if _acddg := d.DecodeElement(_gbcdb.GrpSpLocks, &_gedbd); _acddg != nil {
					return _acddg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbcdb.ExtLst = NewCT_OfficeArtExtensionList()
				if _ddde := d.DecodeElement(_gbcdb.ExtLst, &_gedbd); _ddde != nil {
					return _ddde
				}
			default:
				_b.Log.Debug("s\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c\u0047\u0072\u006f\u0075\u0070\u0044\u0072\u0061\u0077\u0069\u006eg\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0073\u0020%\u0076", _gedbd.Name)
				if _edcde := d.Skip(); _edcde != nil {
					return _edcde
				}
			}
		case _g.EndElement:
			break _fdaef
		case _g.CharData:
		}
	}
	return nil
}

func (_fafcb *ST_TextFontScalePercentOrPercentString) ValidateWithPath(path string) error {
	_edgcg := []string{}
	if _fafcb.ST_TextFontScalePercent != nil {
		_edgcg = append(_edgcg, "\u0053\u0054\u005fTe\u0078\u0074\u0046\u006f\u006e\u0074\u0053\u0063\u0061\u006c\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074")
	}
	if _fafcb.ST_Percentage != nil {
		_edgcg = append(_edgcg, "\u0053\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_edgcg) > 1 {
		return _gf.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _edgcg)
	}
	return nil
}

const (
	ST_TextTabAlignTypeUnset ST_TextTabAlignType = 0
	ST_TextTabAlignTypeL     ST_TextTabAlignType = 1
	ST_TextTabAlignTypeCtr   ST_TextTabAlignType = 2
	ST_TextTabAlignTypeR     ST_TextTabAlignType = 3
	ST_TextTabAlignTypeDec   ST_TextTabAlignType = 4
)

func (_fgbde *CT_PositiveFixedPercentage) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ggeca := range start.Attr {
		if _ggeca.Name.Local == "\u0076\u0061\u006c" {
			_ffff, _eeef := ParseUnionST_PositiveFixedPercentage(_ggeca.Value)
			if _eeef != nil {
				return _eeef
			}
			_fgbde.ValAttr = _ffff
			continue
		}
	}
	for {
		_agcge, _bfbef := d.Token()
		if _bfbef != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064P\u0065\u0072\u0063\u0065\u006et\u0061\u0067e\u003a\u0020\u0025\u0073", _bfbef)
		}
		if _eebacf, _dceac := _agcge.(_g.EndElement); _dceac && _eebacf.Name == start.Name {
			break
		}
	}
	return nil
}

func (_egdge *EG_TextUnderlineLine) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _egdge.ULnTx != nil {
		_abccd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0075\u004c\u006e\u0054\u0078"}}
		e.EncodeElement(_egdge.ULnTx, _abccd)
	}
	if _egdge.ULn != nil {
		_ecbdb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0075L\u006e"}}
		e.EncodeElement(_egdge.ULn, _ecbdb)
	}
	return nil
}

func NewCT_NonVisualGroupDrawingShapeProps() *CT_NonVisualGroupDrawingShapeProps {
	_fecgb := &CT_NonVisualGroupDrawingShapeProps{}
	return _fecgb
}

type CT_Path2DCubicBezierTo struct{ Pt []*CT_AdjPoint2D }

// Validate validates the CT_OfficeArtExtensionList and its children
func (_dcege *CT_OfficeArtExtensionList) Validate() error {
	return _dcege.ValidateWithPath("\u0043T\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t")
}

func NewCT_GvmlShape() *CT_GvmlShape {
	_dbcg := &CT_GvmlShape{}
	_dbcg.NvSpPr = NewCT_GvmlShapeNonVisual()
	_dbcg.SpPr = NewCT_ShapeProperties()
	return _dbcg
}

func (_fadeb ST_SchemeColorVal) String() string {
	switch _fadeb {
	case 0:
		return ""
	case 1:
		return "\u0062\u0067\u0031"
	case 2:
		return "\u0074\u0078\u0031"
	case 3:
		return "\u0062\u0067\u0032"
	case 4:
		return "\u0074\u0078\u0032"
	case 5:
		return "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case 6:
		return "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case 7:
		return "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case 8:
		return "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case 9:
		return "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case 10:
		return "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case 11:
		return "\u0068\u006c\u0069n\u006b"
	case 12:
		return "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	case 13:
		return "\u0070\u0068\u0043l\u0072"
	case 14:
		return "\u0064\u006b\u0031"
	case 15:
		return "\u006c\u0074\u0031"
	case 16:
		return "\u0064\u006b\u0032"
	case 17:
		return "\u006c\u0074\u0032"
	}
	return ""
}

func NewCT_TextParagraph() *CT_TextParagraph { _cdcgd := &CT_TextParagraph{}; return _cdcgd }

// Validate validates the EG_LineDashProperties and its children
func (_gbfff *EG_LineDashProperties) Validate() error {
	return _gbfff.ValidateWithPath("E\u0047\u005f\u004c\u0069ne\u0044a\u0073\u0068\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_TextField and its children, prefixing error messages with path
func (_addbe *CT_TextField) ValidateWithPath(path string) error {
	if !_ge.ST_GuidPatternRe.MatchString(_addbe.IdAttr) {
		return _gf.Errorf("\u0025\u0073/\u006d\u002e\u0049\u0064A\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061t\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ge.ST_GuidPatternRe, _addbe.IdAttr)
	}
	if _addbe.RPr != nil {
		if _bgfcg := _addbe.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _bgfcg != nil {
			return _bgfcg
		}
	}
	if _addbe.PPr != nil {
		if _dbgcd := _addbe.PPr.ValidateWithPath(path + "\u002f\u0050\u0050\u0072"); _dbgcd != nil {
			return _dbgcd
		}
	}
	return nil
}

// Validate validates the CT_LineJoinBevel and its children
func (_gbbgf *CT_LineJoinBevel) Validate() error {
	return _gbbgf.ValidateWithPath("\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0042\u0065\u0076\u0065\u006c")
}

func (_egbfd ST_TextVertOverflowType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_gafbc := _g.Attr{}
	_gafbc.Name = name
	switch _egbfd {
	case ST_TextVertOverflowTypeUnset:
		_gafbc.Value = ""
	case ST_TextVertOverflowTypeOverflow:
		_gafbc.Value = "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case ST_TextVertOverflowTypeEllipsis:
		_gafbc.Value = "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073"
	case ST_TextVertOverflowTypeClip:
		_gafbc.Value = "\u0063\u006c\u0069\u0070"
	}
	return _gafbc, nil
}

// Validate validates the Graphic and its children
func (_eggea *Graphic) Validate() error {
	return _eggea.ValidateWithPath("\u0047r\u0061\u0070\u0068\u0069\u0063")
}

// Validate validates the EG_TextUnderlineFill and its children
func (_fadfb *EG_TextUnderlineFill) Validate() error {
	return _fadfb.ValidateWithPath("E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Fi\u006c\u006c")
}

func (_cdfce ST_Percentage) String() string {
	if _cdfce.ST_PercentageDecimal != nil {
		return _gf.Sprintf("\u0025\u0076", *_cdfce.ST_PercentageDecimal)
	}
	if _cdfce.ST_Percentage != nil {
		return _gf.Sprintf("\u0025\u0076", *_cdfce.ST_Percentage)
	}
	return ""
}

// ValidateWithPath validates the EG_TextUnderlineLine and its children, prefixing error messages with path
func (_bbaga *EG_TextUnderlineLine) ValidateWithPath(path string) error {
	if _bbaga.ULnTx != nil {
		if _bbdadbd := _bbaga.ULnTx.ValidateWithPath(path + "\u002f\u0055\u004c\u006e\u0054\u0078"); _bbdadbd != nil {
			return _bbdadbd
		}
	}
	if _bbaga.ULn != nil {
		if _gfbdc := _bbaga.ULn.ValidateWithPath(path + "\u002f\u0055\u004c\u006e"); _gfbdc != nil {
			return _gfbdc
		}
	}
	return nil
}

func (_dgabd ST_LineEndType) Validate() error { return _dgabd.ValidateWithPath("") }

// ValidateWithPath validates the CT_SphereCoords and its children, prefixing error messages with path
func (_ebbed *CT_SphereCoords) ValidateWithPath(path string) error {
	if _ebbed.LatAttr < 0 {
		return _gf.Errorf("%\u0073\u002f\u006d\u002e\u004c\u0061t\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _ebbed.LatAttr)
	}
	if _ebbed.LatAttr >= 21600000 {
		return _gf.Errorf("\u0025\u0073\u002f\u006d\u002eL\u0061\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ebbed.LatAttr)
	}
	if _ebbed.LonAttr < 0 {
		return _gf.Errorf("%\u0073\u002f\u006d\u002e\u004c\u006fn\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _ebbed.LonAttr)
	}
	if _ebbed.LonAttr >= 21600000 {
		return _gf.Errorf("\u0025\u0073\u002f\u006d\u002eL\u006f\u006e\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ebbed.LonAttr)
	}
	if _ebbed.RevAttr < 0 {
		return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0065v\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _ebbed.RevAttr)
	}
	if _ebbed.RevAttr >= 21600000 {
		return _gf.Errorf("\u0025\u0073\u002f\u006d\u002eR\u0065\u0076\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ebbed.RevAttr)
	}
	return nil
}

func NewCT_ClipboardStyleSheet() *CT_ClipboardStyleSheet {
	_adea := &CT_ClipboardStyleSheet{}
	_adea.ThemeElements = NewCT_BaseStyles()
	_adea.ClrMap = NewCT_ColorMapping()
	return _adea
}

type CT_AnimationDgmBuildProperties struct {
	BldAttr *ST_AnimationDgmBuildType
	RevAttr *bool
}

func (_cggaf ST_ColorSchemeIndex) String() string {
	switch _cggaf {
	case 0:
		return ""
	case 1:
		return "\u0064\u006b\u0031"
	case 2:
		return "\u006c\u0074\u0031"
	case 3:
		return "\u0064\u006b\u0032"
	case 4:
		return "\u006c\u0074\u0032"
	case 5:
		return "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case 6:
		return "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case 7:
		return "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case 8:
		return "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case 9:
		return "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case 10:
		return "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case 11:
		return "\u0068\u006c\u0069n\u006b"
	case 12:
		return "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	}
	return ""
}

func NewEG_Effect() *EG_Effect { _fdagf := &EG_Effect{}; return _fdagf }

func (_dgfad ST_PenAlignment) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_aecadc := _g.Attr{}
	_aecadc.Name = name
	switch _dgfad {
	case ST_PenAlignmentUnset:
		_aecadc.Value = ""
	case ST_PenAlignmentCtr:
		_aecadc.Value = "\u0063\u0074\u0072"
	case ST_PenAlignmentIn:
		_aecadc.Value = "\u0069\u006e"
	}
	return _aecadc, nil
}

// Validate validates the EG_ColorChoice and its children
func (_eafag *EG_ColorChoice) Validate() error {
	return _eafag.ValidateWithPath("\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0043h\u006f\u0069\u0063\u0065")
}

// Validate validates the CT_CustomColor and its children
func (_dffg *CT_CustomColor) Validate() error {
	return _dffg.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dC\u006f\u006c\u006f\u0072")
}

func (_bddgb ST_PresetPatternVal) ValidateWithPath(path string) error {
	switch _bddgb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bddgb))
	}
	return nil
}

func (_ecffg *ST_LightRigType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_ecffg = 0
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031":
		*_ecffg = 1
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032":
		*_ecffg = 2
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033":
		*_ecffg = 3
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034":
		*_ecffg = 4
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031":
		*_ecffg = 5
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032":
		*_ecffg = 6
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033":
		*_ecffg = 7
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034":
		*_ecffg = 8
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031":
		*_ecffg = 9
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032":
		*_ecffg = 10
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033":
		*_ecffg = 11
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034":
		*_ecffg = 12
	case "\u0074h\u0072\u0065\u0065\u0050\u0074":
		*_ecffg = 13
	case "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064":
		*_ecffg = 14
	case "\u0073\u006f\u0066\u0074":
		*_ecffg = 15
	case "\u0068\u0061\u0072s\u0068":
		*_ecffg = 16
	case "\u0066\u006c\u006fo\u0064":
		*_ecffg = 17
	case "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067":
		*_ecffg = 18
	case "\u006do\u0072\u006e\u0069\u006e\u0067":
		*_ecffg = 19
	case "\u0073u\u006e\u0072\u0069\u0073\u0065":
		*_ecffg = 20
	case "\u0073\u0075\u006e\u0073\u0065\u0074":
		*_ecffg = 21
	case "\u0063\u0068\u0069\u006c\u006c\u0079":
		*_ecffg = 22
	case "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067":
		*_ecffg = 23
	case "\u0066\u006c\u0061\u0074":
		*_ecffg = 24
	case "\u0074\u0077\u006fP\u0074":
		*_ecffg = 25
	case "\u0067\u006c\u006f\u0077":
		*_ecffg = 26
	case "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d":
		*_ecffg = 27
	}
	return nil
}

func (_dcdfd *ST_BlendMode) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_dcdfd = 0
	case "\u006f\u0076\u0065\u0072":
		*_dcdfd = 1
	case "\u006d\u0075\u006c\u0074":
		*_dcdfd = 2
	case "\u0073\u0063\u0072\u0065\u0065\u006e":
		*_dcdfd = 3
	case "\u0064\u0061\u0072\u006b\u0065\u006e":
		*_dcdfd = 4
	case "\u006ci\u0067\u0068\u0074\u0065\u006e":
		*_dcdfd = 5
	}
	return nil
}

func NewCT_SolidColorFillProperties() *CT_SolidColorFillProperties {
	_ffgaa := &CT_SolidColorFillProperties{}
	return _ffgaa
}

func (_deec *CT_OuterShadowEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bfag := range start.Attr {
		if _bfag.Name.Local == "\u0061\u006c\u0067\u006e" {
			_deec.AlgnAttr.UnmarshalXMLAttr(_bfag)
			continue
		}
		if _bfag.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_fgada, _dadag := _c.ParseBool(_bfag.Value)
			if _dadag != nil {
				return _dadag
			}
			_deec.RotWithShapeAttr = &_fgada
			continue
		}
		if _bfag.Name.Local == "\u0064\u0069\u0073\u0074" {
			_agdea, _cbgg := _c.ParseInt(_bfag.Value, 10, 64)
			if _cbgg != nil {
				return _cbgg
			}
			_deec.DistAttr = &_agdea
			continue
		}
		if _bfag.Name.Local == "\u0073\u0078" {
			_edbc, _aaecaa := ParseUnionST_Percentage(_bfag.Value)
			if _aaecaa != nil {
				return _aaecaa
			}
			_deec.SxAttr = &_edbc
			continue
		}
		if _bfag.Name.Local == "\u0073\u0079" {
			_cgdbd, _faac := ParseUnionST_Percentage(_bfag.Value)
			if _faac != nil {
				return _faac
			}
			_deec.SyAttr = &_cgdbd
			continue
		}
		if _bfag.Name.Local == "\u006b\u0078" {
			_ccdfg, _feedd := _c.ParseInt(_bfag.Value, 10, 32)
			if _feedd != nil {
				return _feedd
			}
			_acbfc := int32(_ccdfg)
			_deec.KxAttr = &_acbfc
			continue
		}
		if _bfag.Name.Local == "\u006b\u0079" {
			_gbcba, _gdba := _c.ParseInt(_bfag.Value, 10, 32)
			if _gdba != nil {
				return _gdba
			}
			_fbcfc := int32(_gbcba)
			_deec.KyAttr = &_fbcfc
			continue
		}
		if _bfag.Name.Local == "\u0062l\u0075\u0072\u0052\u0061\u0064" {
			_bfbff, _ccgec := _c.ParseInt(_bfag.Value, 10, 64)
			if _ccgec != nil {
				return _ccgec
			}
			_deec.BlurRadAttr = &_bfbff
			continue
		}
		if _bfag.Name.Local == "\u0064\u0069\u0072" {
			_gaef, _gcfbc := _c.ParseInt(_bfag.Value, 10, 32)
			if _gcfbc != nil {
				return _gcfbc
			}
			_bdda := int32(_gaef)
			_deec.DirAttr = &_bdda
			continue
		}
	}
_dfgdd:
	for {
		_aebce, _adfdf := d.Token()
		if _adfdf != nil {
			return _adfdf
		}
		switch _dgbgg := _aebce.(type) {
		case _g.StartElement:
			switch _dgbgg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_deec.ScrgbClr = NewCT_ScRgbColor()
				if _fcbadf := d.DecodeElement(_deec.ScrgbClr, &_dgbgg); _fcbadf != nil {
					return _fcbadf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_deec.SrgbClr = NewCT_SRgbColor()
				if _becga := d.DecodeElement(_deec.SrgbClr, &_dgbgg); _becga != nil {
					return _becga
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_deec.HslClr = NewCT_HslColor()
				if _efbbg := d.DecodeElement(_deec.HslClr, &_dgbgg); _efbbg != nil {
					return _efbbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_deec.SysClr = NewCT_SystemColor()
				if _gbbgb := d.DecodeElement(_deec.SysClr, &_dgbgg); _gbbgb != nil {
					return _gbbgb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_deec.SchemeClr = NewCT_SchemeColor()
				if _fdbc := d.DecodeElement(_deec.SchemeClr, &_dgbgg); _fdbc != nil {
					return _fdbc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_deec.PrstClr = NewCT_PresetColor()
				if _gcca := d.DecodeElement(_deec.PrstClr, &_dgbgg); _gcca != nil {
					return _gcca
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0061\u0064\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _dgbgg.Name)
				if _eafgd := d.Skip(); _eafgd != nil {
					return _eafgd
				}
			}
		case _g.EndElement:
			break _dfgdd
		case _g.CharData:
		}
	}
	return nil
}

type CT_GvmlGroupShapeNonVisual struct {
	CNvPr      *CT_NonVisualDrawingProps
	CNvGrpSpPr *CT_NonVisualGroupDrawingShapeProps
}

// Validate validates the CT_ShapeLocking and its children
func (_ggfe *CT_ShapeLocking) Validate() error {
	return _ggfe.ValidateWithPath("\u0043T\u005fS\u0068\u0061\u0070\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}

func (_cbgdb ST_FontCollectionIndex) String() string {
	switch _cbgdb {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u006ao\u0072"
	case 2:
		return "\u006d\u0069\u006eo\u0072"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

type CT_GeomRect struct {
	LAttr ST_AdjCoordinate
	TAttr ST_AdjCoordinate
	RAttr ST_AdjCoordinate
	BAttr ST_AdjCoordinate
}

func NewCT_PresetGeometry2D() *CT_PresetGeometry2D {
	_gbbga := &CT_PresetGeometry2D{}
	_gbbga.PrstAttr = ST_ShapeType(1)
	return _gbbga
}

type ST_AnimationChartOnlyBuildType byte

type CT_NonVisualGroupDrawingShapeProps struct {
	GrpSpLocks *CT_GroupLocking
	ExtLst     *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_GrayscaleEffect and its children, prefixing error messages with path
func (_cdfdb *CT_GrayscaleEffect) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_ColorMappingOverride and its children
func (_gaga *CT_ColorMappingOverride) Validate() error {
	return _gaga.ValidateWithPath("\u0043\u0054\u005fCo\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065")
}

// ValidateWithPath validates the CT_GraphicalObjectFrameLocking and its children, prefixing error messages with path
func (_aacb *CT_GraphicalObjectFrameLocking) ValidateWithPath(path string) error {
	if _aacb.ExtLst != nil {
		if _cafa := _aacb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cafa != nil {
			return _cafa
		}
	}
	return nil
}

func NewCT_GvmlPicture() *CT_GvmlPicture {
	_eggb := &CT_GvmlPicture{}
	_eggb.NvPicPr = NewCT_GvmlPictureNonVisual()
	_eggb.BlipFill = NewCT_BlipFillProperties()
	_eggb.SpPr = NewCT_ShapeProperties()
	return _eggb
}

type CT_ScRgbColor struct {
	RAttr             ST_Percentage
	GAttr             ST_Percentage
	BAttr             ST_Percentage
	EG_ColorTransform []*EG_ColorTransform
}

func (_aabde *CT_TextLineBreak) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _aabde.RPr != nil {
		_fdaae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072P\u0072"}}
		e.EncodeElement(_aabde.RPr, _fdaae)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_SoftEdgesEffect struct{ RadAttr int64 }

// ValidateWithPath validates the CT_TableStyle and its children, prefixing error messages with path
func (_gaedg *CT_TableStyle) ValidateWithPath(path string) error {
	if !_ge.ST_GuidPatternRe.MatchString(_gaedg.StyleIdAttr) {
		return _gf.Errorf("\u0025\u0073\u002fm\u002e\u0053\u0074\u0079\u006c\u0065\u0049\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ge.ST_GuidPatternRe, _gaedg.StyleIdAttr)
	}
	if _gaedg.TblBg != nil {
		if _dbfdd := _gaedg.TblBg.ValidateWithPath(path + "\u002f\u0054\u0062\u006c\u0042\u0067"); _dbfdd != nil {
			return _dbfdd
		}
	}
	if _gaedg.WholeTbl != nil {
		if _bddec := _gaedg.WholeTbl.ValidateWithPath(path + "\u002fW\u0068\u006f\u006c\u0065\u0054\u0062l"); _bddec != nil {
			return _bddec
		}
	}
	if _gaedg.Band1H != nil {
		if _gdbgb := _gaedg.Band1H.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0031\u0048"); _gdbgb != nil {
			return _gdbgb
		}
	}
	if _gaedg.Band2H != nil {
		if _abddc := _gaedg.Band2H.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0032\u0048"); _abddc != nil {
			return _abddc
		}
	}
	if _gaedg.Band1V != nil {
		if _geccb := _gaedg.Band1V.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0031\u0056"); _geccb != nil {
			return _geccb
		}
	}
	if _gaedg.Band2V != nil {
		if _feeaf := _gaedg.Band2V.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0032\u0056"); _feeaf != nil {
			return _feeaf
		}
	}
	if _gaedg.LastCol != nil {
		if _dagdf := _gaedg.LastCol.ValidateWithPath(path + "\u002f\u004c\u0061\u0073\u0074\u0043\u006f\u006c"); _dagdf != nil {
			return _dagdf
		}
	}
	if _gaedg.FirstCol != nil {
		if _cfacc := _gaedg.FirstCol.ValidateWithPath(path + "\u002fF\u0069\u0072\u0073\u0074\u0043\u006fl"); _cfacc != nil {
			return _cfacc
		}
	}
	if _gaedg.LastRow != nil {
		if _ceggc := _gaedg.LastRow.ValidateWithPath(path + "\u002f\u004c\u0061\u0073\u0074\u0052\u006f\u0077"); _ceggc != nil {
			return _ceggc
		}
	}
	if _gaedg.SeCell != nil {
		if _agfce := _gaedg.SeCell.ValidateWithPath(path + "\u002fS\u0065\u0043\u0065\u006c\u006c"); _agfce != nil {
			return _agfce
		}
	}
	if _gaedg.SwCell != nil {
		if _fdace := _gaedg.SwCell.ValidateWithPath(path + "\u002fS\u0077\u0043\u0065\u006c\u006c"); _fdace != nil {
			return _fdace
		}
	}
	if _gaedg.FirstRow != nil {
		if _bbfgg := _gaedg.FirstRow.ValidateWithPath(path + "\u002fF\u0069\u0072\u0073\u0074\u0052\u006fw"); _bbfgg != nil {
			return _bbfgg
		}
	}
	if _gaedg.NeCell != nil {
		if _aeegg := _gaedg.NeCell.ValidateWithPath(path + "\u002fN\u0065\u0043\u0065\u006c\u006c"); _aeegg != nil {
			return _aeegg
		}
	}
	if _gaedg.NwCell != nil {
		if _afgcb := _gaedg.NwCell.ValidateWithPath(path + "\u002fN\u0077\u0043\u0065\u006c\u006c"); _afgcb != nil {
			return _afgcb
		}
	}
	if _gaedg.ExtLst != nil {
		if _bfaegc := _gaedg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfaegc != nil {
			return _bfaegc
		}
	}
	return nil
}

func NewCT_ObjectStyleDefaults() *CT_ObjectStyleDefaults {
	_ccce := &CT_ObjectStyleDefaults{}
	return _ccce
}

func (_deged ST_LightRigType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_deged.String(), start)
}

const (
	ST_TileFlipModeUnset ST_TileFlipMode = 0
	ST_TileFlipModeNone  ST_TileFlipMode = 1
	ST_TileFlipModeX     ST_TileFlipMode = 2
	ST_TileFlipModeY     ST_TileFlipMode = 3
	ST_TileFlipModeXy    ST_TileFlipMode = 4
)

func NewCT_HslColor() *CT_HslColor { _agbbg := &CT_HslColor{}; _agbbg.HueAttr = 0; return _agbbg }

func (_afbeb *CT_GvmlGroupShape) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_dbbad := _g.StartElement{Name: _g.Name{Local: "a\u003a\u006e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_afbeb.NvGrpSpPr, _dbbad)
	_gabeb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0053\u0070\u0050r"}}
	e.EncodeElement(_afbeb.GrpSpPr, _gabeb)
	if _afbeb.Choice != nil {
		for _, _aeebf := range _afbeb.Choice {
			_aeebf.MarshalXML(e, _g.StartElement{})
		}
	}
	if _afbeb.ExtLst != nil {
		_dcbd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_afbeb.ExtLst, _dcbd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fbaagb ST_TileFlipMode) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_dfcdb := _g.Attr{}
	_dfcdb.Name = name
	switch _fbaagb {
	case ST_TileFlipModeUnset:
		_dfcdb.Value = ""
	case ST_TileFlipModeNone:
		_dfcdb.Value = "\u006e\u006f\u006e\u0065"
	case ST_TileFlipModeX:
		_dfcdb.Value = "\u0078"
	case ST_TileFlipModeY:
		_dfcdb.Value = "\u0079"
	case ST_TileFlipModeXy:
		_dfcdb.Value = "\u0078\u0079"
	}
	return _dfcdb, nil
}

func (_fgfbf ST_LightRigType) String() string {
	switch _fgfbf {
	case 0:
		return ""
	case 1:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031"
	case 2:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032"
	case 3:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033"
	case 4:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034"
	case 5:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031"
	case 6:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032"
	case 7:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033"
	case 8:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034"
	case 9:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031"
	case 10:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032"
	case 11:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033"
	case 12:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034"
	case 13:
		return "\u0074h\u0072\u0065\u0065\u0050\u0074"
	case 14:
		return "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064"
	case 15:
		return "\u0073\u006f\u0066\u0074"
	case 16:
		return "\u0068\u0061\u0072s\u0068"
	case 17:
		return "\u0066\u006c\u006fo\u0064"
	case 18:
		return "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067"
	case 19:
		return "\u006do\u0072\u006e\u0069\u006e\u0067"
	case 20:
		return "\u0073u\u006e\u0072\u0069\u0073\u0065"
	case 21:
		return "\u0073\u0075\u006e\u0073\u0065\u0074"
	case 22:
		return "\u0063\u0068\u0069\u006c\u006c\u0079"
	case 23:
		return "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067"
	case 24:
		return "\u0066\u006c\u0061\u0074"
	case 25:
		return "\u0074\u0077\u006fP\u0074"
	case 26:
		return "\u0067\u006c\u006f\u0077"
	case 27:
		return "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d"
	}
	return ""
}

func NewEG_Media() *EG_Media { _bcaee := &EG_Media{}; return _bcaee }

func NewCT_Path2DArcTo() *CT_Path2DArcTo { _eafgdf := &CT_Path2DArcTo{}; return _eafgdf }

// ValidateWithPath validates the TblStyleLst and its children, prefixing error messages with path
func (_feaed *TblStyleLst) ValidateWithPath(path string) error {
	if _gbfffe := _feaed.CT_TableStyleList.ValidateWithPath(path); _gbfffe != nil {
		return _gbfffe
	}
	return nil
}

func (_cadadg *CT_DuotoneEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_gaebb:
	for {
		_dcdcg, _beda := d.Token()
		if _beda != nil {
			return _beda
		}
		switch _ffged := _dcdcg.(type) {
		case _g.StartElement:
			switch _ffged.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_eeee := NewEG_ColorChoice()
				_eeee.ScrgbClr = NewCT_ScRgbColor()
				if _cdgb := d.DecodeElement(_eeee.ScrgbClr, &_ffged); _cdgb != nil {
					return _cdgb
				}
				_cadadg.EG_ColorChoice = append(_cadadg.EG_ColorChoice, _eeee)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_dggf := NewEG_ColorChoice()
				_dggf.SrgbClr = NewCT_SRgbColor()
				if _bceg := d.DecodeElement(_dggf.SrgbClr, &_ffged); _bceg != nil {
					return _bceg
				}
				_cadadg.EG_ColorChoice = append(_cadadg.EG_ColorChoice, _dggf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_aadc := NewEG_ColorChoice()
				_aadc.HslClr = NewCT_HslColor()
				if _becb := d.DecodeElement(_aadc.HslClr, &_ffged); _becb != nil {
					return _becb
				}
				_cadadg.EG_ColorChoice = append(_cadadg.EG_ColorChoice, _aadc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_dbdd := NewEG_ColorChoice()
				_dbdd.SysClr = NewCT_SystemColor()
				if _cgfe := d.DecodeElement(_dbdd.SysClr, &_ffged); _cgfe != nil {
					return _cgfe
				}
				_cadadg.EG_ColorChoice = append(_cadadg.EG_ColorChoice, _dbdd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_deabf := NewEG_ColorChoice()
				_deabf.SchemeClr = NewCT_SchemeColor()
				if _bgbgc := d.DecodeElement(_deabf.SchemeClr, &_ffged); _bgbgc != nil {
					return _bgbgc
				}
				_cadadg.EG_ColorChoice = append(_cadadg.EG_ColorChoice, _deabf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_eeed := NewEG_ColorChoice()
				_eeed.PrstClr = NewCT_PresetColor()
				if _bdada := d.DecodeElement(_eeed.PrstClr, &_ffged); _bdada != nil {
					return _bdada
				}
				_cadadg.EG_ColorChoice = append(_cadadg.EG_ColorChoice, _eeed)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0075\u006f\u0074\u006f\u006e\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025v", _ffged.Name)
				if _eeag := d.Skip(); _eeag != nil {
					return _eeag
				}
			}
		case _g.EndElement:
			break _gaebb
		case _g.CharData:
		}
	}
	return nil
}

func (_ccdc ST_AdjCoordinate) String() string {
	if _ccdc.ST_Coordinate != nil {
		return _ccdc.ST_Coordinate.String()
	}
	if _ccdc.ST_GeomGuideName != nil {
		return _gf.Sprintf("\u0025\u0076", *_ccdc.ST_GeomGuideName)
	}
	return ""
}

func NewEG_OfficeArtExtensionList() *EG_OfficeArtExtensionList {
	_adffd := &EG_OfficeArtExtensionList{}
	return _adffd
}

// ValidateWithPath validates the CT_InnerShadowEffect and its children, prefixing error messages with path
func (_ebbbd *CT_InnerShadowEffect) ValidateWithPath(path string) error {
	if _ebbbd.BlurRadAttr != nil {
		if *_ebbbd.BlurRadAttr < 0 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006c\u0075\u0072\u0052\u0061\u0064\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_ebbbd.BlurRadAttr)
		}
		if *_ebbbd.BlurRadAttr > 27273042316900 {
			return _gf.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006c\u0075r\u0052\u0061\u0064\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_ebbbd.BlurRadAttr)
		}
	}
	if _ebbbd.DistAttr != nil {
		if *_ebbbd.DistAttr < 0 {
			return _gf.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_ebbbd.DistAttr)
		}
		if *_ebbbd.DistAttr > 27273042316900 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_ebbbd.DistAttr)
		}
	}
	if _ebbbd.DirAttr != nil {
		if *_ebbbd.DirAttr < 0 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_ebbbd.DirAttr)
		}
		if *_ebbbd.DirAttr >= 21600000 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_ebbbd.DirAttr)
		}
	}
	if _ebbbd.ScrgbClr != nil {
		if _cadc := _ebbbd.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _cadc != nil {
			return _cadc
		}
	}
	if _ebbbd.SrgbClr != nil {
		if _eggc := _ebbbd.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _eggc != nil {
			return _eggc
		}
	}
	if _ebbbd.HslClr != nil {
		if _dgceg := _ebbbd.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _dgceg != nil {
			return _dgceg
		}
	}
	if _ebbbd.SysClr != nil {
		if _bgdga := _ebbbd.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _bgdga != nil {
			return _bgdga
		}
	}
	if _ebbbd.SchemeClr != nil {
		if _ddbcf := _ebbbd.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _ddbcf != nil {
			return _ddbcf
		}
	}
	if _ebbbd.PrstClr != nil {
		if _egceb := _ebbbd.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _egceb != nil {
			return _egceb
		}
	}
	return nil
}

func (_acecc ST_RectAlignment) String() string {
	switch _acecc {
	case 0:
		return ""
	case 1:
		return "\u0074\u006c"
	case 2:
		return "\u0074"
	case 3:
		return "\u0074\u0072"
	case 4:
		return "\u006c"
	case 5:
		return "\u0063\u0074\u0072"
	case 6:
		return "\u0072"
	case 7:
		return "\u0062\u006c"
	case 8:
		return "\u0062"
	case 9:
		return "\u0062\u0072"
	}
	return ""
}

func (_abdgc *CT_GraphicalObjectFrameLocking) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _eccdb := range start.Attr {
		if _eccdb.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_eafg, _feecf := _c.ParseBool(_eccdb.Value)
			if _feecf != nil {
				return _feecf
			}
			_abdgc.NoGrpAttr = &_eafg
			continue
		}
		if _eccdb.Name.Local == "n\u006f\u0044\u0072\u0069\u006c\u006c\u0064\u006f\u0077\u006e" {
			_aabdb, _gbbdc := _c.ParseBool(_eccdb.Value)
			if _gbbdc != nil {
				return _gbbdc
			}
			_abdgc.NoDrilldownAttr = &_aabdb
			continue
		}
		if _eccdb.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_cgbfd, _bgbdb := _c.ParseBool(_eccdb.Value)
			if _bgbdb != nil {
				return _bgbdb
			}
			_abdgc.NoSelectAttr = &_cgbfd
			continue
		}
		if _eccdb.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_cdfbg, _aeeg := _c.ParseBool(_eccdb.Value)
			if _aeeg != nil {
				return _aeeg
			}
			_abdgc.NoChangeAspectAttr = &_cdfbg
			continue
		}
		if _eccdb.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_fcddg, _ceae := _c.ParseBool(_eccdb.Value)
			if _ceae != nil {
				return _ceae
			}
			_abdgc.NoMoveAttr = &_fcddg
			continue
		}
		if _eccdb.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_ddeb, _ccdf := _c.ParseBool(_eccdb.Value)
			if _ccdf != nil {
				return _ccdf
			}
			_abdgc.NoResizeAttr = &_ddeb
			continue
		}
	}
_bfdc:
	for {
		_ebed, _bcfda := d.Token()
		if _bcfda != nil {
			return _bcfda
		}
		switch _beef := _ebed.(type) {
		case _g.StartElement:
			switch _beef.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abdgc.ExtLst = NewCT_OfficeArtExtensionList()
				if _bcgg := d.DecodeElement(_abdgc.ExtLst, &_beef); _bcgg != nil {
					return _bcgg
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006es\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065\u004c\u006f\u0063k\u0069\u006e\u0067\u0020\u0025\u0076", _beef.Name)
				if _cbafga := d.Skip(); _cbafga != nil {
					return _cbafga
				}
			}
		case _g.EndElement:
			break _bfdc
		case _g.CharData:
		}
	}
	return nil
}

type EG_LineFillProperties struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	PattFill  *CT_PatternFillProperties
}

func (_effcc ST_LightRigType) ValidateWithPath(path string) error {
	switch _effcc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_effcc))
	}
	return nil
}

func (_dabee *EG_OfficeArtExtensionList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_aaebd:
	for {
		_daaeb, _bcegfe := d.Token()
		if _bcegfe != nil {
			return _bcegfe
		}
		switch _gfea := _daaeb.(type) {
		case _g.StartElement:
			switch _gfea.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_fbfabd := NewCT_OfficeArtExtension()
				if _ddgec := d.DecodeElement(_fbfabd, &_gfea); _ddgec != nil {
					return _ddgec
				}
				_dabee.Ext = append(_dabee.Ext, _fbfabd)
			default:
				_b.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u004f\u0066\u0066\u0069\u0063\u0065\u0041\u0072t\u0045x\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004ci\u0073t\u0020\u0025v", _gfea.Name)
				if _cccefc := d.Skip(); _cccefc != nil {
					return _cccefc
				}
			}
		case _g.EndElement:
			break _aaebd
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Blip and its children
func (_caaf *CT_Blip) Validate() error {
	return _caaf.ValidateWithPath("\u0043T\u005f\u0042\u006c\u0069\u0070")
}

func (_gbbgag ST_PresetLineDashVal) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_geacfb := _g.Attr{}
	_geacfb.Name = name
	switch _gbbgag {
	case ST_PresetLineDashValUnset:
		_geacfb.Value = ""
	case ST_PresetLineDashValSolid:
		_geacfb.Value = "\u0073\u006f\u006ci\u0064"
	case ST_PresetLineDashValDot:
		_geacfb.Value = "\u0064\u006f\u0074"
	case ST_PresetLineDashValDash:
		_geacfb.Value = "\u0064\u0061\u0073\u0068"
	case ST_PresetLineDashValLgDash:
		_geacfb.Value = "\u006c\u0067\u0044\u0061\u0073\u0068"
	case ST_PresetLineDashValDashDot:
		_geacfb.Value = "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case ST_PresetLineDashValLgDashDot:
		_geacfb.Value = "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft"
	case ST_PresetLineDashValLgDashDotDot:
		_geacfb.Value = "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case ST_PresetLineDashValSysDash:
		_geacfb.Value = "\u0073y\u0073\u0044\u0061\u0073\u0068"
	case ST_PresetLineDashValSysDot:
		_geacfb.Value = "\u0073\u0079\u0073\u0044\u006f\u0074"
	case ST_PresetLineDashValSysDashDot:
		_geacfb.Value = "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case ST_PresetLineDashValSysDashDotDot:
		_geacfb.Value = "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	}
	return _geacfb, nil
}

// Validate validates the CT_BackgroundFillStyleList and its children
func (_agd *CT_BackgroundFillStyleList) Validate() error {
	return _agd.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075n\u0064\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065L\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_NonVisualGraphicFrameProperties and its children, prefixing error messages with path
func (_affd *CT_NonVisualGraphicFrameProperties) ValidateWithPath(path string) error {
	if _affd.GraphicFrameLocks != nil {
		if _abee := _affd.GraphicFrameLocks.ValidateWithPath(path + "\u002fG\u0072a\u0070\u0068\u0069\u0063\u0046r\u0061\u006de\u004c\u006f\u0063\u006b\u0073"); _abee != nil {
			return _abee
		}
	}
	if _affd.ExtLst != nil {
		if _cefd := _affd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cefd != nil {
			return _cefd
		}
	}
	return nil
}

func (_geagb *ST_TextBulletSize) Validate() error { return _geagb.ValidateWithPath("") }

func NewCT_TableStyleCellStyle() *CT_TableStyleCellStyle {
	_afebd := &CT_TableStyleCellStyle{}
	return _afebd
}

type EG_TextBulletColor struct {
	BuClrTx *CT_TextBulletColorFollowText
	BuClr   *CT_Color
}

type EG_ShadeProperties struct {
	Lin  *CT_LinearShadeProperties
	Path *CT_PathShadeProperties
}

func (_gbcef *CT_ScRgbColor) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ebece := range start.Attr {
		if _ebece.Name.Local == "\u0072" {
			_bgaeeg, _cdgca := ParseUnionST_Percentage(_ebece.Value)
			if _cdgca != nil {
				return _cdgca
			}
			_gbcef.RAttr = _bgaeeg
			continue
		}
		if _ebece.Name.Local == "\u0067" {
			_cfgbag, _dgddd := ParseUnionST_Percentage(_ebece.Value)
			if _dgddd != nil {
				return _dgddd
			}
			_gbcef.GAttr = _cfgbag
			continue
		}
		if _ebece.Name.Local == "\u0062" {
			_bgfga, _ccbab := ParseUnionST_Percentage(_ebece.Value)
			if _ccbab != nil {
				return _ccbab
			}
			_gbcef.BAttr = _bgfga
			continue
		}
	}
_efcdc:
	for {
		_eebfe, _cfcgg := d.Token()
		if _cfcgg != nil {
			return _cfcgg
		}
		switch _edgb := _eebfe.(type) {
		case _g.StartElement:
			switch _edgb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_aaccd := NewEG_ColorTransform()
				_aaccd.Tint = NewCT_PositiveFixedPercentage()
				if _bbec := d.DecodeElement(_aaccd.Tint, &_edgb); _bbec != nil {
					return _bbec
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _aaccd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_cbga := NewEG_ColorTransform()
				_cbga.Shade = NewCT_PositiveFixedPercentage()
				if _bacg := d.DecodeElement(_cbga.Shade, &_edgb); _bacg != nil {
					return _bacg
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _cbga)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_bedd := NewEG_ColorTransform()
				_bedd.Comp = NewCT_ComplementTransform()
				if _ceffb := d.DecodeElement(_bedd.Comp, &_edgb); _ceffb != nil {
					return _ceffb
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _bedd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_eabacg := NewEG_ColorTransform()
				_eabacg.Inv = NewCT_InverseTransform()
				if _faabbf := d.DecodeElement(_eabacg.Inv, &_edgb); _faabbf != nil {
					return _faabbf
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _eabacg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_fgcdb := NewEG_ColorTransform()
				_fgcdb.Gray = NewCT_GrayscaleTransform()
				if _gada := d.DecodeElement(_fgcdb.Gray, &_edgb); _gada != nil {
					return _gada
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _fgcdb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_dfgffc := NewEG_ColorTransform()
				_dfgffc.Alpha = NewCT_PositiveFixedPercentage()
				if _fbgfe := d.DecodeElement(_dfgffc.Alpha, &_edgb); _fbgfe != nil {
					return _fbgfe
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _dfgffc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_dgfd := NewEG_ColorTransform()
				_dgfd.AlphaOff = NewCT_FixedPercentage()
				if _bfea := d.DecodeElement(_dgfd.AlphaOff, &_edgb); _bfea != nil {
					return _bfea
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _dgfd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_gbcdc := NewEG_ColorTransform()
				_gbcdc.AlphaMod = NewCT_PositivePercentage()
				if _fgcbe := d.DecodeElement(_gbcdc.AlphaMod, &_edgb); _fgcbe != nil {
					return _fgcbe
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _gbcdc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_cdbaa := NewEG_ColorTransform()
				_cdbaa.Hue = NewCT_PositiveFixedAngle()
				if _febee := d.DecodeElement(_cdbaa.Hue, &_edgb); _febee != nil {
					return _febee
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _cdbaa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_fegbc := NewEG_ColorTransform()
				_fegbc.HueOff = NewCT_Angle()
				if _fgcfc := d.DecodeElement(_fegbc.HueOff, &_edgb); _fgcfc != nil {
					return _fgcfc
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _fegbc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_fgeaae := NewEG_ColorTransform()
				_fgeaae.HueMod = NewCT_PositivePercentage()
				if _baafa := d.DecodeElement(_fgeaae.HueMod, &_edgb); _baafa != nil {
					return _baafa
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _fgeaae)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_gdfbd := NewEG_ColorTransform()
				_gdfbd.Sat = NewCT_Percentage()
				if _gaebbc := d.DecodeElement(_gdfbd.Sat, &_edgb); _gaebbc != nil {
					return _gaebbc
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _gdfbd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_bdcffb := NewEG_ColorTransform()
				_bdcffb.SatOff = NewCT_Percentage()
				if _cbcbd := d.DecodeElement(_bdcffb.SatOff, &_edgb); _cbcbd != nil {
					return _cbcbd
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _bdcffb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_acdac := NewEG_ColorTransform()
				_acdac.SatMod = NewCT_Percentage()
				if _cdedd := d.DecodeElement(_acdac.SatMod, &_edgb); _cdedd != nil {
					return _cdedd
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _acdac)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_bfaec := NewEG_ColorTransform()
				_bfaec.Lum = NewCT_Percentage()
				if _fdgce := d.DecodeElement(_bfaec.Lum, &_edgb); _fdgce != nil {
					return _fdgce
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _bfaec)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_fgfag := NewEG_ColorTransform()
				_fgfag.LumOff = NewCT_Percentage()
				if _becee := d.DecodeElement(_fgfag.LumOff, &_edgb); _becee != nil {
					return _becee
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _fgfag)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_ddgeaf := NewEG_ColorTransform()
				_ddgeaf.LumMod = NewCT_Percentage()
				if _befee := d.DecodeElement(_ddgeaf.LumMod, &_edgb); _befee != nil {
					return _befee
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _ddgeaf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_eadfd := NewEG_ColorTransform()
				_eadfd.Red = NewCT_Percentage()
				if _bgaa := d.DecodeElement(_eadfd.Red, &_edgb); _bgaa != nil {
					return _bgaa
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _eadfd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_ffedd := NewEG_ColorTransform()
				_ffedd.RedOff = NewCT_Percentage()
				if _daacc := d.DecodeElement(_ffedd.RedOff, &_edgb); _daacc != nil {
					return _daacc
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _ffedd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_fcdce := NewEG_ColorTransform()
				_fcdce.RedMod = NewCT_Percentage()
				if _dbaed := d.DecodeElement(_fcdce.RedMod, &_edgb); _dbaed != nil {
					return _dbaed
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _fcdce)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_bdbfa := NewEG_ColorTransform()
				_bdbfa.Green = NewCT_Percentage()
				if _gdgde := d.DecodeElement(_bdbfa.Green, &_edgb); _gdgde != nil {
					return _gdgde
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _bdbfa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_gaebfb := NewEG_ColorTransform()
				_gaebfb.GreenOff = NewCT_Percentage()
				if _cgged := d.DecodeElement(_gaebfb.GreenOff, &_edgb); _cgged != nil {
					return _cgged
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _gaebfb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_eafd := NewEG_ColorTransform()
				_eafd.GreenMod = NewCT_Percentage()
				if _aeeea := d.DecodeElement(_eafd.GreenMod, &_edgb); _aeeea != nil {
					return _aeeea
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _eafd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_eefa := NewEG_ColorTransform()
				_eefa.Blue = NewCT_Percentage()
				if _abcea := d.DecodeElement(_eefa.Blue, &_edgb); _abcea != nil {
					return _abcea
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _eefa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_cadaca := NewEG_ColorTransform()
				_cadaca.BlueOff = NewCT_Percentage()
				if _ggcfbf := d.DecodeElement(_cadaca.BlueOff, &_edgb); _ggcfbf != nil {
					return _ggcfbf
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _cadaca)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_aedc := NewEG_ColorTransform()
				_aedc.BlueMod = NewCT_Percentage()
				if _eacac := d.DecodeElement(_aedc.BlueMod, &_edgb); _eacac != nil {
					return _eacac
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _aedc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_ebbdbd := NewEG_ColorTransform()
				_ebbdbd.Gamma = NewCT_GammaTransform()
				if _ecafb := d.DecodeElement(_ebbdbd.Gamma, &_edgb); _ecafb != nil {
					return _ecafb
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _ebbdbd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_bcbgg := NewEG_ColorTransform()
				_bcbgg.InvGamma = NewCT_InverseGammaTransform()
				if _gaadb := d.DecodeElement(_bcbgg.InvGamma, &_edgb); _gaadb != nil {
					return _gaadb
				}
				_gbcef.EG_ColorTransform = append(_gbcef.EG_ColorTransform, _bcbgg)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053c\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072 \u0025\u0076", _edgb.Name)
				if _gafgd := d.Skip(); _gafgd != nil {
					return _gafgd
				}
			}
		case _g.EndElement:
			break _efcdc
		case _g.CharData:
		}
	}
	return nil
}

func (_gefcc ST_ShapeType) ValidateWithPath(path string) error {
	switch _gefcc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gefcc))
	}
	return nil
}

func (_geae *CT_Blip) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _eaa := range start.Attr {
		if _eaa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _eaa.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_aefga, _egae := _eaa.Value, error(nil)
			if _egae != nil {
				return _egae
			}
			_geae.EmbedAttr = &_aefga
			continue
		}
		if _eaa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _eaa.Name.Local == "\u006c\u0069\u006e\u006b" {
			_bfbc, _fged := _eaa.Value, error(nil)
			if _fged != nil {
				return _fged
			}
			_geae.LinkAttr = &_bfbc
			continue
		}
		if _eaa.Name.Local == "\u0063\u0073\u0074\u0061\u0074\u0065" {
			_geae.CstateAttr.UnmarshalXMLAttr(_eaa)
			continue
		}
	}
_fgf:
	for {
		_aeag, _gfce := d.Token()
		if _gfce != nil {
			return _gfce
		}
		switch _gca := _aeag.(type) {
		case _g.StartElement:
			switch _gca.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_cdbb := NewCT_BlipChoice()
				if _fcfb := d.DecodeElement(&_cdbb.AlphaBiLevel, &_gca); _fcfb != nil {
					return _fcfb
				}
				_geae.Choice = append(_geae.Choice, _cdbb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_ccbf := NewCT_BlipChoice()
				if _defe := d.DecodeElement(&_ccbf.AlphaCeiling, &_gca); _defe != nil {
					return _defe
				}
				_geae.Choice = append(_geae.Choice, _ccbf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_fbcee := NewCT_BlipChoice()
				if _baec := d.DecodeElement(&_fbcee.AlphaFloor, &_gca); _baec != nil {
					return _baec
				}
				_geae.Choice = append(_geae.Choice, _fbcee)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_dfgf := NewCT_BlipChoice()
				if _dafe := d.DecodeElement(&_dfgf.AlphaInv, &_gca); _dafe != nil {
					return _dafe
				}
				_geae.Choice = append(_geae.Choice, _dfgf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_ebagc := NewCT_BlipChoice()
				if _ecfcff := d.DecodeElement(&_ebagc.AlphaMod, &_gca); _ecfcff != nil {
					return _ecfcff
				}
				_geae.Choice = append(_geae.Choice, _ebagc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_bcca := NewCT_BlipChoice()
				if _fada := d.DecodeElement(&_bcca.AlphaModFix, &_gca); _fada != nil {
					return _fada
				}
				_geae.Choice = append(_geae.Choice, _bcca)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_aae := NewCT_BlipChoice()
				if _adfg := d.DecodeElement(&_aae.AlphaRepl, &_gca); _adfg != nil {
					return _adfg
				}
				_geae.Choice = append(_geae.Choice, _aae)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_gfbd := NewCT_BlipChoice()
				if _cage := d.DecodeElement(&_gfbd.BiLevel, &_gca); _cage != nil {
					return _cage
				}
				_geae.Choice = append(_geae.Choice, _gfbd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_adfgc := NewCT_BlipChoice()
				if _ecegd := d.DecodeElement(&_adfgc.Blur, &_gca); _ecegd != nil {
					return _ecegd
				}
				_geae.Choice = append(_geae.Choice, _adfgc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_gdgf := NewCT_BlipChoice()
				if _agcf := d.DecodeElement(&_gdgf.ClrChange, &_gca); _agcf != nil {
					return _agcf
				}
				_geae.Choice = append(_geae.Choice, _gdgf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_aff := NewCT_BlipChoice()
				if _fcdg := d.DecodeElement(&_aff.ClrRepl, &_gca); _fcdg != nil {
					return _fcdg
				}
				_geae.Choice = append(_geae.Choice, _aff)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_cgde := NewCT_BlipChoice()
				if _cedac := d.DecodeElement(&_cgde.Duotone, &_gca); _cedac != nil {
					return _cedac
				}
				_geae.Choice = append(_geae.Choice, _cgde)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_gced := NewCT_BlipChoice()
				if _gfee := d.DecodeElement(&_gced.FillOverlay, &_gca); _gfee != nil {
					return _gfee
				}
				_geae.Choice = append(_geae.Choice, _gced)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_ebce := NewCT_BlipChoice()
				if _fgeb := d.DecodeElement(&_ebce.Grayscl, &_gca); _fgeb != nil {
					return _fgeb
				}
				_geae.Choice = append(_geae.Choice, _ebce)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_gabf := NewCT_BlipChoice()
				if _ebagg := d.DecodeElement(&_gabf.Hsl, &_gca); _ebagg != nil {
					return _ebagg
				}
				_geae.Choice = append(_geae.Choice, _gabf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_egaf := NewCT_BlipChoice()
				if _gdbg := d.DecodeElement(&_egaf.Lum, &_gca); _gdbg != nil {
					return _gdbg
				}
				_geae.Choice = append(_geae.Choice, _egaf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_dcc := NewCT_BlipChoice()
				if _befe := d.DecodeElement(&_dcc.Tint, &_gca); _befe != nil {
					return _befe
				}
				_geae.Choice = append(_geae.Choice, _dcc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_geae.ExtLst = NewCT_OfficeArtExtensionList()
				if _fcg := d.DecodeElement(_geae.ExtLst, &_gca); _fcg != nil {
					return _fcg
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0042\u006c\u0069\u0070\u0020\u0025\u0076", _gca.Name)
				if _fbd := d.Skip(); _fbd != nil {
					return _fbd
				}
			}
		case _g.EndElement:
			break _fgf
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Path2DList and its children
func (_daba *CT_Path2DList) Validate() error {
	return _daba.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u0073\u0074")
}

func (_eebaf *CT_PositivePercentage) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dedg := range start.Attr {
		if _dedg.Name.Local == "\u0076\u0061\u006c" {
			_agdeb, _caeeb := ParseUnionST_PositivePercentage(_dedg.Value)
			if _caeeb != nil {
				return _caeeb
			}
			_eebaf.ValAttr = _agdeb
			continue
		}
	}
	for {
		_cgdcf, _cabf := d.Token()
		if _cabf != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0050e\u0072\u0063\u0065\u006e\u0074\u0061\u0067e\u003a\u0020\u0025\u0073", _cabf)
		}
		if _cfccg, _aacde := _cgdcf.(_g.EndElement); _aacde && _cfccg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_abdd *CT_EffectReference) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0065\u0066"}, Value: _gf.Sprintf("\u0025\u0076", _abdd.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Boolean and its children
func (_agef *CT_Boolean) Validate() error {
	return _agef.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e")
}

func NewCT_TextField() *CT_TextField {
	_bbacba := &CT_TextField{}
	_bbacba.IdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _bbacba
}

func (_bafaf *ST_TextWrappingType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ebebc, _bfeefc := d.Token()
	if _bfeefc != nil {
		return _bfeefc
	}
	if _fcfeaa, _aebbf := _ebebc.(_g.EndElement); _aebbf && _fcfeaa.Name == start.Name {
		*_bafaf = 1
		return nil
	}
	if _cfacce, _gcbbd := _ebebc.(_g.CharData); !_gcbbd {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebebc)
	} else {
		switch string(_cfacce) {
		case "":
			*_bafaf = 0
		case "\u006e\u006f\u006e\u0065":
			*_bafaf = 1
		case "\u0073\u0071\u0075\u0061\u0072\u0065":
			*_bafaf = 2
		}
	}
	_ebebc, _bfeefc = d.Token()
	if _bfeefc != nil {
		return _bfeefc
	}
	if _cagaba, _eabga := _ebebc.(_g.EndElement); _eabga && _cagaba.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebebc)
}

func (_bggede ST_DgmBuildStep) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_bggede.String(), start)
}

type ST_ColorSchemeIndex byte

func (_dgfb *CT_TextUnderlineFillGroupWrapper) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _dgfb.NoFill != nil {
		_fafab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dgfb.NoFill, _fafab)
	}
	if _dgfb.SolidFill != nil {
		_gcdab := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dgfb.SolidFill, _gcdab)
	}
	if _dgfb.GradFill != nil {
		_gaedc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dgfb.GradFill, _gaedc)
	}
	if _dgfb.BlipFill != nil {
		_dagbge := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dgfb.BlipFill, _dagbge)
	}
	if _dgfb.PattFill != nil {
		_geeae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dgfb.PattFill, _geeae)
	}
	if _dgfb.GrpFill != nil {
		_egdca := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_dgfb.GrpFill, _egdca)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dabaa *CT_TextTabStop) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dabaa.PosAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0070\u006f\u0073"}, Value: _gf.Sprintf("\u0025\u0076", *_dabaa.PosAttr)})
	}
	if _dabaa.AlgnAttr != ST_TextTabAlignTypeUnset {
		_ebdba, _cfgac := _dabaa.AlgnAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _cfgac != nil {
			return _cfgac
		}
		start.Attr = append(start.Attr, _ebdba)
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_caed *CT_CustomColorList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_gdfad:
	for {
		_bbed, _fdfc := d.Token()
		if _fdfc != nil {
			return _fdfc
		}
		switch _begga := _bbed.(type) {
		case _g.StartElement:
			switch _begga.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073\u0074\u0043\u006c\u0072"}:
				_afaff := NewCT_CustomColor()
				if _cecaeg := d.DecodeElement(_afaff, &_begga); _cecaeg != nil {
					return _cecaeg
				}
				_caed.CustClr = append(_caed.CustClr, _afaff)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dC\u006f\u006c\u006f\u0072\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _begga.Name)
				if _gacf := d.Skip(); _gacf != nil {
					return _gacf
				}
			}
		case _g.EndElement:
			break _gdfad
		case _g.CharData:
		}
	}
	return nil
}

func (_bdbfc ST_CompoundLine) Validate() error { return _bdbfc.ValidateWithPath("") }

func (_degca ST_TextAnchoringType) String() string {
	switch _degca {
	case 0:
		return ""
	case 1:
		return "\u0074"
	case 2:
		return "\u0063\u0074\u0072"
	case 3:
		return "\u0062"
	case 4:
		return "\u006a\u0075\u0073\u0074"
	case 5:
		return "\u0064\u0069\u0073\u0074"
	}
	return ""
}

const (
	ST_LightRigDirectionUnset ST_LightRigDirection = 0
	ST_LightRigDirectionTl    ST_LightRigDirection = 1
	ST_LightRigDirectionT     ST_LightRigDirection = 2
	ST_LightRigDirectionTr    ST_LightRigDirection = 3
	ST_LightRigDirectionL     ST_LightRigDirection = 4
	ST_LightRigDirectionR     ST_LightRigDirection = 5
	ST_LightRigDirectionBl    ST_LightRigDirection = 6
	ST_LightRigDirectionB     ST_LightRigDirection = 7
	ST_LightRigDirectionBr    ST_LightRigDirection = 8
)

type ST_PresetShadowVal byte

func (_cae *CT_BiLevelEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _afbf := range start.Attr {
		if _afbf.Name.Local == "\u0074\u0068\u0072\u0065\u0073\u0068" {
			_ebe, _dfbc := ParseUnionST_PositiveFixedPercentage(_afbf.Value)
			if _dfbc != nil {
				return _dfbc
			}
			_cae.ThreshAttr = _ebe
			continue
		}
	}
	for {
		_ffg, _agga := d.Token()
		if _agga != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0042\u0069\u004c\u0065v\u0065l\u0045\u0066\u0066\u0065\u0063\u0074\u003a \u0025\u0073", _agga)
		}
		if _cgge, _dee := _ffg.(_g.EndElement); _dee && _cgge.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextBulletSizePercent and its children, prefixing error messages with path
func (_cdfg *CT_TextBulletSizePercent) ValidateWithPath(path string) error {
	if !ST_TextBulletSizePercentPatternRe.MatchString(_cdfg.ValAttr) {
		return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0056\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020'\u0025\u0073\u0027\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, ST_TextBulletSizePercentPatternRe, _cdfg.ValAttr)
	}
	return nil
}

func (_dfbed *ST_PresetColorVal) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_dfbed = 0
	case "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e":
		*_dfbed = 1
	case "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065":
		*_dfbed = 2
	case "\u0061\u0071\u0075\u0061":
		*_dfbed = 3
	case "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
		*_dfbed = 4
	case "\u0061\u007a\u0075r\u0065":
		*_dfbed = 5
	case "\u0062\u0065\u0069g\u0065":
		*_dfbed = 6
	case "\u0062\u0069\u0073\u0071\u0075\u0065":
		*_dfbed = 7
	case "\u0062\u006c\u0061c\u006b":
		*_dfbed = 8
	case "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064":
		*_dfbed = 9
	case "\u0062\u006c\u0075\u0065":
		*_dfbed = 10
	case "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074":
		*_dfbed = 11
	case "\u0062\u0072\u006fw\u006e":
		*_dfbed = 12
	case "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd":
		*_dfbed = 13
	case "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e":
		*_dfbed = 14
	case "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065":
		*_dfbed = 15
	case "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e":
		*_dfbed = 16
	case "\u0063\u006f\u0072a\u006c":
		*_dfbed = 17
	case "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065":
		*_dfbed = 18
	case "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b":
		*_dfbed = 19
	case "\u0063r\u0069\u006d\u0073\u006f\u006e":
		*_dfbed = 20
	case "\u0063\u0079\u0061\u006e":
		*_dfbed = 21
	case "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065":
		*_dfbed = 22
	case "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e":
		*_dfbed = 23
	case "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
		*_dfbed = 24
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
		*_dfbed = 25
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079":
		*_dfbed = 26
	case "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n":
		*_dfbed = 27
	case "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi":
		*_dfbed = 28
	case "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061":
		*_dfbed = 29
	case "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e":
		*_dfbed = 30
	case "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
		*_dfbed = 31
	case "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
		*_dfbed = 32
	case "\u0064a\u0072\u006b\u0052\u0065\u0064":
		*_dfbed = 33
	case "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
		*_dfbed = 34
	case "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_dfbed = 35
	case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_dfbed = 36
	case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
		*_dfbed = 37
	case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
		*_dfbed = 38
	case "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_dfbed = 39
	case "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
		*_dfbed = 40
	case "\u0064\u006b\u0042\u006c\u0075\u0065":
		*_dfbed = 41
	case "\u0064\u006b\u0043\u0079\u0061\u006e":
		*_dfbed = 42
	case "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
		*_dfbed = 43
	case "\u0064\u006b\u0047\u0072\u0061\u0079":
		*_dfbed = 44
	case "\u0064\u006b\u0047\u0072\u0065\u0079":
		*_dfbed = 45
	case "\u0064k\u0047\u0072\u0065\u0065\u006e":
		*_dfbed = 46
	case "\u0064k\u004b\u0068\u0061\u006b\u0069":
		*_dfbed = 47
	case "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a":
		*_dfbed = 48
	case "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e":
		*_dfbed = 49
	case "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
		*_dfbed = 50
	case "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
		*_dfbed = 51
	case "\u0064\u006b\u0052e\u0064":
		*_dfbed = 52
	case "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
		*_dfbed = 53
	case "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_dfbed = 54
	case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_dfbed = 55
	case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
		*_dfbed = 56
	case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
		*_dfbed = 57
	case "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_dfbed = 58
	case "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
		*_dfbed = 59
	case "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b":
		*_dfbed = 60
	case "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
		*_dfbed = 61
	case "\u0064i\u006d\u0047\u0072\u0061\u0079":
		*_dfbed = 62
	case "\u0064i\u006d\u0047\u0072\u0065\u0079":
		*_dfbed = 63
	case "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065":
		*_dfbed = 64
	case "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k":
		*_dfbed = 65
	case "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065":
		*_dfbed = 66
	case "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e":
		*_dfbed = 67
	case "\u0066u\u0063\u0068\u0073\u0069\u0061":
		*_dfbed = 68
	case "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o":
		*_dfbed = 69
	case "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065":
		*_dfbed = 70
	case "\u0067\u006f\u006c\u0064":
		*_dfbed = 71
	case "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd":
		*_dfbed = 72
	case "\u0067\u0072\u0061\u0079":
		*_dfbed = 73
	case "\u0067\u0072\u0065\u0079":
		*_dfbed = 74
	case "\u0067\u0072\u0065e\u006e":
		*_dfbed = 75
	case "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077":
		*_dfbed = 76
	case "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077":
		*_dfbed = 77
	case "\u0068o\u0074\u0050\u0069\u006e\u006b":
		*_dfbed = 78
	case "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d":
		*_dfbed = 79
	case "\u0069\u006e\u0064\u0069\u0067\u006f":
		*_dfbed = 80
	case "\u0069\u0076\u006fr\u0079":
		*_dfbed = 81
	case "\u006b\u0068\u0061k\u0069":
		*_dfbed = 82
	case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072":
		*_dfbed = 83
	case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068":
		*_dfbed = 84
	case "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n":
		*_dfbed = 85
	case "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e":
		*_dfbed = 86
	case "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e":
		*_dfbed = 87
	case "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c":
		*_dfbed = 88
	case "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n":
		*_dfbed = 89
	case "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077":
		*_dfbed = 90
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
		*_dfbed = 91
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y":
		*_dfbed = 92
	case "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e":
		*_dfbed = 93
	case "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek":
		*_dfbed = 94
	case "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
		*_dfbed = 95
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_dfbed = 96
	case "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
		*_dfbed = 97
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079":
		*_dfbed = 98
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079":
		*_dfbed = 99
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065":
		*_dfbed = 100
	case "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
		*_dfbed = 101
	case "\u006c\u0074\u0042\u006c\u0075\u0065":
		*_dfbed = 102
	case "\u006ct\u0043\u006f\u0072\u0061\u006c":
		*_dfbed = 103
	case "\u006c\u0074\u0043\u0079\u0061\u006e":
		*_dfbed = 104
	case "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077":
		*_dfbed = 105
	case "\u006c\u0074\u0047\u0072\u0061\u0079":
		*_dfbed = 106
	case "\u006c\u0074\u0047\u0072\u0065\u0079":
		*_dfbed = 107
	case "\u006ct\u0047\u0072\u0065\u0065\u006e":
		*_dfbed = 108
	case "\u006c\u0074\u0050\u0069\u006e\u006b":
		*_dfbed = 109
	case "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
		*_dfbed = 110
	case "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_dfbed = 111
	case "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e":
		*_dfbed = 112
	case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
		*_dfbed = 113
	case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
		*_dfbed = 114
	case "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065":
		*_dfbed = 115
	case "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
		*_dfbed = 116
	case "\u006c\u0069\u006d\u0065":
		*_dfbed = 117
	case "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n":
		*_dfbed = 118
	case "\u006c\u0069\u006ee\u006e":
		*_dfbed = 119
	case "\u006da\u0067\u0065\u006e\u0074\u0061":
		*_dfbed = 120
	case "\u006d\u0061\u0072\u006f\u006f\u006e":
		*_dfbed = 121
	case "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
		*_dfbed = 122
	case "\u006de\u0064\u0042\u006c\u0075\u0065":
		*_dfbed = 123
	case "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d":
		*_dfbed = 124
	case "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce":
		*_dfbed = 125
	case "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_dfbed = 126
	case "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_dfbed = 127
	case "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
		*_dfbed = 128
	case "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_dfbed = 129
	case "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
		*_dfbed = 130
	case "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
		*_dfbed = 131
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065":
		*_dfbed = 132
	case "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064":
		*_dfbed = 133
	case "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065":
		*_dfbed = 134
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e":
		*_dfbed = 135
	case "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_dfbed = 136
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
		*_dfbed = 137
	case "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_dfbed = 138
	case "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
		*_dfbed = 139
	case "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065":
		*_dfbed = 140
	case "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m":
		*_dfbed = 141
	case "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e":
		*_dfbed = 142
	case "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e":
		*_dfbed = 143
	case "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065":
		*_dfbed = 144
	case "\u006e\u0061\u0076\u0079":
		*_dfbed = 145
	case "\u006fl\u0064\u004c\u0061\u0063\u0065":
		*_dfbed = 146
	case "\u006f\u006c\u0069v\u0065":
		*_dfbed = 147
	case "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b":
		*_dfbed = 148
	case "\u006f\u0072\u0061\u006e\u0067\u0065":
		*_dfbed = 149
	case "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d":
		*_dfbed = 150
	case "\u006f\u0072\u0063\u0068\u0069\u0064":
		*_dfbed = 151
	case "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
		*_dfbed = 152
	case "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n":
		*_dfbed = 153
	case "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_dfbed = 154
	case "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
		*_dfbed = 155
	case "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070":
		*_dfbed = 156
	case "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f":
		*_dfbed = 157
	case "\u0070\u0065\u0072\u0075":
		*_dfbed = 158
	case "\u0070\u0069\u006e\u006b":
		*_dfbed = 159
	case "\u0070\u006c\u0075\u006d":
		*_dfbed = 160
	case "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065":
		*_dfbed = 161
	case "\u0070\u0075\u0072\u0070\u006c\u0065":
		*_dfbed = 162
	case "\u0072\u0065\u0064":
		*_dfbed = 163
	case "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n":
		*_dfbed = 164
	case "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e":
		*_dfbed = 165
	case "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e":
		*_dfbed = 166
	case "\u0073\u0061\u006c\u006d\u006f\u006e":
		*_dfbed = 167
	case "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e":
		*_dfbed = 168
	case "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_dfbed = 169
	case "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c":
		*_dfbed = 170
	case "\u0073\u0069\u0065\u006e\u006e\u0061":
		*_dfbed = 171
	case "\u0073\u0069\u006c\u0076\u0065\u0072":
		*_dfbed = 172
	case "\u0073k\u0079\u0042\u006c\u0075\u0065":
		*_dfbed = 173
	case "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e":
		*_dfbed = 174
	case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y":
		*_dfbed = 175
	case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y":
		*_dfbed = 176
	case "\u0073\u006e\u006f\u0077":
		*_dfbed = 177
	case "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e":
		*_dfbed = 178
	case "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e":
		*_dfbed = 179
	case "\u0074\u0061\u006e":
		*_dfbed = 180
	case "\u0074\u0065\u0061\u006c":
		*_dfbed = 181
	case "\u0074h\u0069\u0073\u0074\u006c\u0065":
		*_dfbed = 182
	case "\u0074\u006f\u006d\u0061\u0074\u006f":
		*_dfbed = 183
	case "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e":
		*_dfbed = 184
	case "\u0076\u0069\u006f\u006c\u0065\u0074":
		*_dfbed = 185
	case "\u0077\u0068\u0065a\u0074":
		*_dfbed = 186
	case "\u0077\u0068\u0069t\u0065":
		*_dfbed = 187
	case "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065":
		*_dfbed = 188
	case "\u0079\u0065\u006c\u006c\u006f\u0077":
		*_dfbed = 189
	case "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e":
		*_dfbed = 190
	}
	return nil
}

// Validate validates the CT_AnimationChartElement and its children
func (_cfb *CT_AnimationChartElement) Validate() error {
	return _cfb.ValidateWithPath("\u0043T\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043h\u0061\u0072\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074")
}

// Validate validates the CT_AdjustHandleList and its children
func (_cada *CT_AdjustHandleList) Validate() error {
	return _cada.ValidateWithPath("\u0043\u0054\u005f\u0041dj\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u004c\u0069\u0073\u0074")
}

func (_cbggg *ST_ColorSchemeIndex) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cbggg = 0
	case "\u0064\u006b\u0031":
		*_cbggg = 1
	case "\u006c\u0074\u0031":
		*_cbggg = 2
	case "\u0064\u006b\u0032":
		*_cbggg = 3
	case "\u006c\u0074\u0032":
		*_cbggg = 4
	case "\u0061c\u0063\u0065\u006e\u0074\u0031":
		*_cbggg = 5
	case "\u0061c\u0063\u0065\u006e\u0074\u0032":
		*_cbggg = 6
	case "\u0061c\u0063\u0065\u006e\u0074\u0033":
		*_cbggg = 7
	case "\u0061c\u0063\u0065\u006e\u0074\u0034":
		*_cbggg = 8
	case "\u0061c\u0063\u0065\u006e\u0074\u0035":
		*_cbggg = 9
	case "\u0061c\u0063\u0065\u006e\u0074\u0036":
		*_cbggg = 10
	case "\u0068\u006c\u0069n\u006b":
		*_cbggg = 11
	case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
		*_cbggg = 12
	}
	return nil
}

// ValidateWithPath validates the CT_LineStyleList and its children, prefixing error messages with path
func (_afbb *CT_LineStyleList) ValidateWithPath(path string) error {
	for _beed, _cfacb := range _afbb.Ln {
		if _eedgf := _cfacb.ValidateWithPath(_gf.Sprintf("\u0025s\u002f\u004c\u006e\u005b\u0025\u0064]", path, _beed)); _eedgf != nil {
			return _eedgf
		}
	}
	return nil
}

type EG_ThemeableFillStyle struct {
	Fill    *CT_FillProperties
	FillRef *CT_StyleMatrixReference
}

func (_dbfeg ST_TextVertOverflowType) ValidateWithPath(path string) error {
	switch _dbfeg {
	case 0, 1, 2, 3:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbfeg))
	}
	return nil
}

// Validate validates the CT_Path2DLineTo and its children
func (_cdedc *CT_Path2DLineTo) Validate() error {
	return _cdedc.ValidateWithPath("\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u006e\u0065\u0054\u006f")
}

const (
	ST_LineCapUnset ST_LineCap = 0
	ST_LineCapRnd   ST_LineCap = 1
	ST_LineCapSq    ST_LineCap = 2
	ST_LineCapFlat  ST_LineCap = 3
)

func NewCT_SchemeColor() *CT_SchemeColor {
	_dffbb := &CT_SchemeColor{}
	_dffbb.ValAttr = ST_SchemeColorVal(1)
	return _dffbb
}

type CT_HslColor struct {
	HueAttr           int32
	SatAttr           ST_Percentage
	LumAttr           ST_Percentage
	EG_ColorTransform []*EG_ColorTransform
}

// ValidateWithPath validates the CT_TextShapeAutofit and its children, prefixing error messages with path
func (_gbged *CT_TextShapeAutofit) ValidateWithPath(path string) error { return nil }

func (_eedef ST_ShapeType) String() string {
	switch _eedef {
	case 0:
		return ""
	case 1:
		return "\u006c\u0069\u006e\u0065"
	case 2:
		return "\u006ci\u006e\u0065\u0049\u006e\u0076"
	case 3:
		return "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 4:
		return "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 5:
		return "\u0072\u0065\u0063\u0074"
	case 6:
		return "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case 7:
		return "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d"
	case 8:
		return "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d"
	case 9:
		return "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064"
	case 10:
		return "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e"
	case 11:
		return "\u0068e\u0078\u0061\u0067\u006f\u006e"
	case 12:
		return "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e"
	case 13:
		return "\u006fc\u0074\u0061\u0067\u006f\u006e"
	case 14:
		return "\u0064e\u0063\u0061\u0067\u006f\u006e"
	case 15:
		return "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn"
	case 16:
		return "\u0073\u0074\u0061r\u0034"
	case 17:
		return "\u0073\u0074\u0061r\u0035"
	case 18:
		return "\u0073\u0074\u0061r\u0036"
	case 19:
		return "\u0073\u0074\u0061r\u0037"
	case 20:
		return "\u0073\u0074\u0061r\u0038"
	case 21:
		return "\u0073\u0074\u0061\u0072\u0031\u0030"
	case 22:
		return "\u0073\u0074\u0061\u0072\u0031\u0032"
	case 23:
		return "\u0073\u0074\u0061\u0072\u0031\u0036"
	case 24:
		return "\u0073\u0074\u0061\u0072\u0032\u0034"
	case 25:
		return "\u0073\u0074\u0061\u0072\u0033\u0032"
	case 26:
		return "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t"
	case 27:
		return "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074"
	case 28:
		return "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074"
	case 29:
		return "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074"
	case 30:
		return "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074"
	case 31:
		return "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t"
	case 32:
		return "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074"
	case 33:
		return "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074"
	case 34:
		return "\u0070\u006c\u0061\u0071\u0075\u0065"
	case 35:
		return "\u0065l\u006c\u0069\u0070\u0073\u0065"
	case 36:
		return "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070"
	case 37:
		return "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e"
	case 38:
		return "\u0063h\u0065\u0076\u0072\u006f\u006e"
	case 39:
		return "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065"
	case 40:
		return "\u0070\u0069\u0065"
	case 41:
		return "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063"
	case 42:
		return "\u0064\u006f\u006eu\u0074"
	case 43:
		return "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg"
	case 44:
		return "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case 45:
		return "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw"
	case 46:
		return "\u0075p\u0041\u0072\u0072\u006f\u0077"
	case 47:
		return "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw"
	case 48:
		return "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case 49:
		return "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case 50:
		return "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 51:
		return "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case 52:
		return "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case 53:
		return "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 54:
		return "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 55:
		return "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw"
	case 56:
		return "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 57:
		return "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case 58:
		return "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case 59:
		return "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 60:
		return "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074"
	case 61:
		return "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074"
	case 62:
		return "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 63:
		return "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw"
	case 64:
		return "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077"
	case 65:
		return "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077"
	case 66:
		return "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077"
	case 67:
		return "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077"
	case 68:
		return "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case 69:
		return "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077"
	case 70:
		return "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 71:
		return "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case 72:
		return "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077"
	case 73:
		return "\u0063\u0075\u0062\u0065"
	case 74:
		return "\u0063\u0061\u006e"
	case 75:
		return "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074"
	case 76:
		return "\u0068\u0065\u0061r\u0074"
	case 77:
		return "\u0073\u0075\u006e"
	case 78:
		return "\u006d\u006f\u006f\u006e"
	case 79:
		return "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065"
	case 80:
		return "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031"
	case 81:
		return "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032"
	case 82:
		return "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072"
	case 83:
		return "\u0062\u0065\u0076e\u006c"
	case 84:
		return "\u0066\u0072\u0061m\u0065"
	case 85:
		return "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de"
	case 86:
		return "\u0063\u006f\u0072\u006e\u0065\u0072"
	case 87:
		return "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065"
	case 88:
		return "\u0063\u0068\u006fr\u0064"
	case 89:
		return "\u0061\u0072\u0063"
	case 90:
		return "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case 91:
		return "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case 92:
		return "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e"
	case 93:
		return "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065"
	case 94:
		return "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072"
	case 95:
		return "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r"
	case 96:
		return "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031"
	case 97:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032"
	case 98:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033"
	case 99:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034"
	case 100:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035"
	case 101:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032"
	case 102:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033"
	case 103:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034"
	case 104:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035"
	case 105:
		return "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031"
	case 106:
		return "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032"
	case 107:
		return "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033"
	case 108:
		return "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case 109:
		return "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case 110:
		return "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case 111:
		return "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case 112:
		return "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case 113:
		return "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case 114:
		return "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031"
	case 115:
		return "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032"
	case 116:
		return "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033"
	case 117:
		return "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 118:
		return "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074"
	case 119:
		return "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 120:
		return "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 121:
		return "\u0063\u006c\u006fu\u0064"
	case 122:
		return "\u0072\u0069\u0062\u0062\u006f\u006e"
	case 123:
		return "\u0072i\u0062\u0062\u006f\u006e\u0032"
	case 124:
		return "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e"
	case 125:
		return "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032"
	case 126:
		return "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e"
	case 127:
		return "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c"
	case 128:
		return "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c"
	case 129:
		return "\u0077\u0061\u0076\u0065"
	case 130:
		return "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065"
	case 131:
		return "\u0070\u006c\u0075\u0073"
	case 132:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073"
	case 133:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e"
	case 134:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074"
	case 135:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073"
	case 136:
		return "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case 137:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074"
	case 138:
		return "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074"
	case 139:
		return "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072"
	case 140:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e"
	case 141:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074"
	case 142:
		return "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e"
	case 143:
		return "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072"
	case 144:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064"
	case 145:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065"
	case 146:
		return "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e"
	case 147:
		return "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072"
	case 148:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065"
	case 149:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074"
	case 150:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074"
	case 151:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065"
	case 152:
		return "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case 153:
		return "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065"
	case 154:
		return "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065"
	case 155:
		return "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b"
	case 156:
		return "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d"
	case 157:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079"
	case 158:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079"
	case 159:
		return "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s"
	case 160:
		return "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr"
	case 161:
		return "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b"
	case 162:
		return "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065"
	case 163:
		return "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070"
	case 164:
		return "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	case 165:
		return "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074"
	case 166:
		return "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073"
	case 167:
		return "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064"
	case 168:
		return "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067"
	case 169:
		return "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e"
	case 170:
		return "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074"
	case 171:
		return "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064"
	case 172:
		return "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065"
	case 173:
		return "\u0067\u0065\u0061r\u0036"
	case 174:
		return "\u0067\u0065\u0061r\u0039"
	case 175:
		return "\u0066\u0075\u006e\u006e\u0065\u006c"
	case 176:
		return "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073"
	case 177:
		return "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s"
	case 178:
		return "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079"
	case 179:
		return "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065"
	case 180:
		return "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l"
	case 181:
		return "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 182:
		return "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073"
	case 183:
		return "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073"
	case 184:
		return "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073"
	case 185:
		return "\u0063\u0068\u0061\u0072\u0074\u0058"
	case 186:
		return "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r"
	case 187:
		return "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s"
	}
	return ""
}

func (_aeacf *ST_LineEndLength) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_befeeg, _cgdbc := d.Token()
	if _cgdbc != nil {
		return _cgdbc
	}
	if _eebda, _cceeg := _befeeg.(_g.EndElement); _cceeg && _eebda.Name == start.Name {
		*_aeacf = 1
		return nil
	}
	if _gfeeb, _cedced := _befeeg.(_g.CharData); !_cedced {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _befeeg)
	} else {
		switch string(_gfeeb) {
		case "":
			*_aeacf = 0
		case "\u0073\u006d":
			*_aeacf = 1
		case "\u006d\u0065\u0064":
			*_aeacf = 2
		case "\u006c\u0067":
			*_aeacf = 3
		}
	}
	_befeeg, _cgdbc = d.Token()
	if _cgdbc != nil {
		return _cgdbc
	}
	if _abefe, _cedfg := _befeeg.(_g.EndElement); _cedfg && _abefe.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _befeeg)
}

func (_cdbgf ST_TextAnchoringType) ValidateWithPath(path string) error {
	switch _cdbgf {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cdbgf))
	}
	return nil
}

func (_cafdc *ST_TextVerticalType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cead, _fggcd := d.Token()
	if _fggcd != nil {
		return _fggcd
	}
	if _fcdgd, _fecc := _cead.(_g.EndElement); _fecc && _fcdgd.Name == start.Name {
		*_cafdc = 1
		return nil
	}
	if _adgdg, _bdcef := _cead.(_g.CharData); !_bdcef {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cead)
	} else {
		switch string(_adgdg) {
		case "":
			*_cafdc = 0
		case "\u0068\u006f\u0072\u007a":
			*_cafdc = 1
		case "\u0076\u0065\u0072\u0074":
			*_cafdc = 2
		case "\u0076e\u0072\u0074\u0032\u0037\u0030":
			*_cafdc = 3
		case "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074":
			*_cafdc = 4
		case "\u0065\u0061\u0056\u0065\u0072\u0074":
			*_cafdc = 5
		case "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074":
			*_cafdc = 6
		case "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c":
			*_cafdc = 7
		}
	}
	_cead, _fggcd = d.Token()
	if _fggcd != nil {
		return _fggcd
	}
	if _bbfded, _adbae := _cead.(_g.EndElement); _adbae && _bbfded.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cead)
}

func (_ddge *CT_AlphaOutsetEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _acc := range start.Attr {
		if _acc.Name.Local == "\u0072\u0061\u0064" {
			_eff, _bacb := ParseUnionST_Coordinate(_acc.Value)
			if _bacb != nil {
				return _bacb
			}
			_ddge.RadAttr = &_eff
			continue
		}
	}
	for {
		_adf, _dfc := d.Token()
		if _dfc != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068a\u004fu\u0074\u0073\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _dfc)
		}
		if _edeb, _agaf := _adf.(_g.EndElement); _agaf && _edeb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_geed *CT_TablePropertiesChoice) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_gdbaf:
	for {
		_bgaaa, _dabac := d.Token()
		if _dabac != nil {
			return _dabac
		}
		switch _fffaa := _bgaaa.(type) {
		case _g.StartElement:
			switch _fffaa.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_geed.TableStyle = NewCT_TableStyle()
				if _gdfea := d.DecodeElement(_geed.TableStyle, &_fffaa); _gdfea != nil {
					return _gdfea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}:
				_geed.TableStyleId = new(string)
				if _gaecce := d.DecodeElement(_geed.TableStyleId, &_fffaa); _gaecce != nil {
					return _gaecce
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0043h\u006f\u0069\u0063\u0065\u0020%\u0076", _fffaa.Name)
				if _cdgfd := d.Skip(); _cdgfd != nil {
					return _cdgfd
				}
			}
		case _g.EndElement:
			break _gdbaf
		case _g.CharData:
		}
	}
	return nil
}

func (_aeegd *CT_TextField) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064"}, Value: _gf.Sprintf("\u0025\u0076", _aeegd.IdAttr)})
	if _aeegd.TypeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0079\u0070\u0065"}, Value: _gf.Sprintf("\u0025\u0076", *_aeegd.TypeAttr)})
	}
	e.EncodeToken(start)
	if _aeegd.RPr != nil {
		_cddfc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072P\u0072"}}
		e.EncodeElement(_aeegd.RPr, _cddfc)
	}
	if _aeegd.PPr != nil {
		_gdaf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070P\u0072"}}
		e.EncodeElement(_aeegd.PPr, _gdaf)
	}
	if _aeegd.T != nil {
		_abafe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074"}}
		_ga.AddPreserveSpaceAttr(&_abafe, *_aeegd.T)
		e.EncodeElement(_aeegd.T, _abafe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fdccd ST_PathShadeType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bedcg := _g.Attr{}
	_bedcg.Name = name
	switch _fdccd {
	case ST_PathShadeTypeUnset:
		_bedcg.Value = ""
	case ST_PathShadeTypeShape:
		_bedcg.Value = "\u0073\u0068\u0061p\u0065"
	case ST_PathShadeTypeCircle:
		_bedcg.Value = "\u0063\u0069\u0072\u0063\u006c\u0065"
	case ST_PathShadeTypeRect:
		_bedcg.Value = "\u0072\u0065\u0063\u0074"
	}
	return _bedcg, nil
}

func (_abcac *ST_PresetCameraType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_edfcg, _ebffb := d.Token()
	if _ebffb != nil {
		return _ebffb
	}
	if _fcgfb, _cecaf := _edfcg.(_g.EndElement); _cecaf && _fcgfb.Name == start.Name {
		*_abcac = 1
		return nil
	}
	if _abae, _ceeed := _edfcg.(_g.CharData); !_ceeed {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edfcg)
	} else {
		switch string(_abae) {
		case "":
			*_abcac = 0
		case "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074":
			*_abcac = 1
		case "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
			*_abcac = 2
		case "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074":
			*_abcac = 3
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074":
			*_abcac = 4
		case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074":
			*_abcac = 5
		case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074":
			*_abcac = 6
		case "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
			*_abcac = 7
		case "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
			*_abcac = 8
		case "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
			*_abcac = 9
		case "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074":
			*_abcac = 10
		case "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070":
			*_abcac = 11
		case "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t":
			*_abcac = 12
		case "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074":
			*_abcac = 13
		case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074":
			*_abcac = 14
		case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074":
			*_abcac = 15
		case "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074":
			*_abcac = 16
		case "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
			*_abcac = 17
		case "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074":
			*_abcac = 18
		case "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074":
			*_abcac = 19
		case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070":
			*_abcac = 20
		case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e":
			*_abcac = 21
		case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070":
			*_abcac = 22
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e":
			*_abcac = 23
		case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070":
			*_abcac = 24
		case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e":
			*_abcac = 25
		case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070":
			*_abcac = 26
		case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e":
			*_abcac = 27
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074":
			*_abcac = 28
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074":
			*_abcac = 29
		case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070":
			*_abcac = 30
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074":
			*_abcac = 31
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074":
			*_abcac = 32
		case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070":
			*_abcac = 33
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074":
			*_abcac = 34
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074":
			*_abcac = 35
		case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d":
			*_abcac = 36
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074":
			*_abcac = 37
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074":
			*_abcac = 38
		case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d":
			*_abcac = 39
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074":
			*_abcac = 40
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
			*_abcac = 41
		case "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
			*_abcac = 42
		case "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074":
			*_abcac = 43
		case "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074":
			*_abcac = 44
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074":
			*_abcac = 45
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
			*_abcac = 46
		case "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074":
			*_abcac = 47
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074":
			*_abcac = 48
		case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074":
			*_abcac = 49
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074":
			*_abcac = 50
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065":
			*_abcac = 51
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077":
			*_abcac = 52
		case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067":
			*_abcac = 53
		case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067":
			*_abcac = 54
		case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
			*_abcac = 55
		case "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067":
			*_abcac = 56
		case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067":
			*_abcac = 57
		case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067":
			*_abcac = 58
		case "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
			*_abcac = 59
		case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067":
			*_abcac = 60
		case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064":
			*_abcac = 61
		case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079":
			*_abcac = 62
		}
	}
	_edfcg, _ebffb = d.Token()
	if _ebffb != nil {
		return _ebffb
	}
	if _dgeea, _babeac := _edfcg.(_g.EndElement); _babeac && _dgeea.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edfcg)
}

func (_efeaba ST_ShapeType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_efeaba.String(), start)
}

// Validate validates the CT_ConnectorLocking and its children
func (_abgg *CT_ConnectorLocking) Validate() error {
	return _abgg.ValidateWithPath("\u0043\u0054\u005f\u0043on\u006e\u0065\u0063\u0074\u006f\u0072\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}

func (_fefbg ST_TextAutonumberScheme) Validate() error { return _fefbg.ValidateWithPath("") }

func (_debce *ST_Coordinate32) ValidateWithPath(path string) error {
	_bdaea := []string{}
	if _debce.ST_Coordinate32Unqualified != nil {
		_bdaea = append(_bdaea, "\u0053\u0054\u005f\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061t\u0065\u0033\u0032\u0055\u006e\u0071\u0075\u0061\u006c\u0069f\u0069\u0065\u0064")
	}
	if _debce.ST_UniversalMeasure != nil {
		_bdaea = append(_bdaea, "\u0053\u0054\u005f\u0055ni\u0076\u0065\u0072\u0073\u0061\u006c\u004d\u0065\u0061\u0073\u0075\u0072\u0065")
	}
	if len(_bdaea) > 1 {
		return _gf.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _bdaea)
	}
	return nil
}

func NewCT_BaseStyles() *CT_BaseStyles {
	_fcabe := &CT_BaseStyles{}
	_fcabe.ClrScheme = NewCT_ColorScheme()
	_fcabe.FontScheme = NewCT_FontScheme()
	_fcabe.FmtScheme = NewCT_StyleMatrix()
	return _fcabe
}

// Validate validates the CT_TextUnderlineLineFollowText and its children
func (_gfcce *CT_TextUnderlineLineFollowText) Validate() error {
	return _gfcce.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u004c\u0069n\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074")
}

func (_dddddg *EG_LineFillProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cffc:
	for {
		_bbgf, _ddecg := d.Token()
		if _ddecg != nil {
			return _ddecg
		}
		switch _bgcca := _bbgf.(type) {
		case _g.StartElement:
			switch _bgcca.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_dddddg.NoFill = NewCT_NoFillProperties()
				if _bdadac := d.DecodeElement(_dddddg.NoFill, &_bgcca); _bdadac != nil {
					return _bdadac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_dddddg.SolidFill = NewCT_SolidColorFillProperties()
				if _afgaf := d.DecodeElement(_dddddg.SolidFill, &_bgcca); _afgaf != nil {
					return _afgaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_dddddg.GradFill = NewCT_GradientFillProperties()
				if _geccbe := d.DecodeElement(_dddddg.GradFill, &_bgcca); _geccbe != nil {
					return _geccbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_dddddg.PattFill = NewCT_PatternFillProperties()
				if _bgce := d.DecodeElement(_dddddg.PattFill, &_bgcca); _bgce != nil {
					return _bgce
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u004c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bgcca.Name)
				if _degec := d.Skip(); _degec != nil {
					return _degec
				}
			}
		case _g.EndElement:
			break _cffc
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NonVisualGroupDrawingShapeProps and its children, prefixing error messages with path
func (_fffdc *CT_NonVisualGroupDrawingShapeProps) ValidateWithPath(path string) error {
	if _fffdc.GrpSpLocks != nil {
		if _acgba := _fffdc.GrpSpLocks.ValidateWithPath(path + "/\u0047\u0072\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"); _acgba != nil {
			return _acgba
		}
	}
	if _fffdc.ExtLst != nil {
		if _bbbac := _fffdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bbbac != nil {
			return _bbbac
		}
	}
	return nil
}

type CT_Path2DList struct{ Path []*CT_Path2D }

func (_fdb *CT_Backdrop) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fdb.Anchor = NewCT_Point3D()
	_fdb.Norm = NewCT_Vector3D()
	_fdb.Up = NewCT_Vector3D()
_gfbg:
	for {
		_cbg, _ebfg := d.Token()
		if _ebfg != nil {
			return _ebfg
		}
		switch _bgbg := _cbg.(type) {
		case _g.StartElement:
			switch _bgbg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _gbe := d.DecodeElement(_fdb.Anchor, &_bgbg); _gbe != nil {
					return _gbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072\u006d"}:
				if _bfgge := d.DecodeElement(_fdb.Norm, &_bgbg); _bfgge != nil {
					return _bfgge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0070"}:
				if _gcgc := d.DecodeElement(_fdb.Up, &_bgbg); _gcgc != nil {
					return _gcgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdb.ExtLst = NewCT_OfficeArtExtensionList()
				if _ebg := d.DecodeElement(_fdb.ExtLst, &_bgbg); _ebg != nil {
					return _ebg
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0064\u0072\u006f\u0070\u0020\u0025\u0076", _bgbg.Name)
				if _aeeb := d.Skip(); _aeeb != nil {
					return _aeeb
				}
			}
		case _g.EndElement:
			break _gfbg
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_PositiveSize2D() *CT_PositiveSize2D {
	_gccgd := &CT_PositiveSize2D{}
	_gccgd.CxAttr = 0
	_gccgd.CyAttr = 0
	return _gccgd
}

func (_bgfde *CT_SphereCoords) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bgfde.LatAttr = 0
	_bgfde.LonAttr = 0
	_bgfde.RevAttr = 0
	for _, _eedaaa := range start.Attr {
		if _eedaaa.Name.Local == "\u006c\u0061\u0074" {
			_dbbgg, _dffgg := _c.ParseInt(_eedaaa.Value, 10, 32)
			if _dffgg != nil {
				return _dffgg
			}
			_bgfde.LatAttr = int32(_dbbgg)
			continue
		}
		if _eedaaa.Name.Local == "\u006c\u006f\u006e" {
			_bcdac, _ffbde := _c.ParseInt(_eedaaa.Value, 10, 32)
			if _ffbde != nil {
				return _ffbde
			}
			_bgfde.LonAttr = int32(_bcdac)
			continue
		}
		if _eedaaa.Name.Local == "\u0072\u0065\u0076" {
			_eeebc, _bagce := _c.ParseInt(_eedaaa.Value, 10, 32)
			if _bagce != nil {
				return _bagce
			}
			_bgfde.RevAttr = int32(_eeebc)
			continue
		}
	}
	for {
		_fegg, _cdedcg := d.Token()
		if _cdedcg != nil {
			return _gf.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0053\u0070\u0068\u0065\u0072\u0065C\u006f\u006f\u0072d\u0073:\u0020\u0025\u0073", _cdedcg)
		}
		if _fdcff, _aaed := _fegg.(_g.EndElement); _aaed && _fdcff.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_BevelPresetTypeUnset        ST_BevelPresetType = 0
	ST_BevelPresetTypeRelaxedInset ST_BevelPresetType = 1
	ST_BevelPresetTypeCircle       ST_BevelPresetType = 2
	ST_BevelPresetTypeSlope        ST_BevelPresetType = 3
	ST_BevelPresetTypeCross        ST_BevelPresetType = 4
	ST_BevelPresetTypeAngle        ST_BevelPresetType = 5
	ST_BevelPresetTypeSoftRound    ST_BevelPresetType = 6
	ST_BevelPresetTypeConvex       ST_BevelPresetType = 7
	ST_BevelPresetTypeCoolSlant    ST_BevelPresetType = 8
	ST_BevelPresetTypeDivot        ST_BevelPresetType = 9
	ST_BevelPresetTypeRiblet       ST_BevelPresetType = 10
	ST_BevelPresetTypeHardEdge     ST_BevelPresetType = 11
	ST_BevelPresetTypeArtDeco      ST_BevelPresetType = 12
)

func (_aggfa ST_BlackWhiteMode) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_aggfa.String(), start)
}

// ValidateWithPath validates the CT_StretchInfoProperties and its children, prefixing error messages with path
func (_ccgga *CT_StretchInfoProperties) ValidateWithPath(path string) error {
	if _ccgga.FillRect != nil {
		if _fbfbb := _ccgga.FillRect.ValidateWithPath(path + "\u002fF\u0069\u006c\u006c\u0052\u0065\u0063t"); _fbfbb != nil {
			return _fbfbb
		}
	}
	return nil
}

type CT_TablePartStyle struct {
	TcTxStyle *CT_TableStyleTextStyle
	TcStyle   *CT_TableStyleCellStyle
}

func (_bedbb *EG_LineJoinProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_aabeff:
	for {
		_gacfg, _ebdda := d.Token()
		if _ebdda != nil {
			return _ebdda
		}
		switch _cedag := _gacfg.(type) {
		case _g.StartElement:
			switch _cedag.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}:
				_bedbb.Round = NewCT_LineJoinRound()
				if _aafbf := d.DecodeElement(_bedbb.Round, &_cedag); _aafbf != nil {
					return _aafbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}:
				_bedbb.Bevel = NewCT_LineJoinBevel()
				if _acffeb := d.DecodeElement(_bedbb.Bevel, &_cedag); _acffeb != nil {
					return _acffeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}:
				_bedbb.Miter = NewCT_LineJoinMiterProperties()
				if _eedggc := d.DecodeElement(_bedbb.Miter, &_cedag); _eedggc != nil {
					return _eedggc
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _cedag.Name)
				if _adgaaa := d.Skip(); _adgaaa != nil {
					return _adgaaa
				}
			}
		case _g.EndElement:
			break _aabeff
		case _g.CharData:
		}
	}
	return nil
}

func (_bagae *CT_SRgbColor) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _baca := range start.Attr {
		if _baca.Name.Local == "\u0076\u0061\u006c" {
			_accacd, _geef := _baca.Value, error(nil)
			if _geef != nil {
				return _geef
			}
			_bagae.ValAttr = _accacd
			continue
		}
	}
_gafa:
	for {
		_gdedc, _bgeed := d.Token()
		if _bgeed != nil {
			return _bgeed
		}
		switch _fbcfe := _gdedc.(type) {
		case _g.StartElement:
			switch _fbcfe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_fgeaa := NewEG_ColorTransform()
				_fgeaa.Tint = NewCT_PositiveFixedPercentage()
				if _ggab := d.DecodeElement(_fgeaa.Tint, &_fbcfe); _ggab != nil {
					return _ggab
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _fgeaa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_gcbec := NewEG_ColorTransform()
				_gcbec.Shade = NewCT_PositiveFixedPercentage()
				if _fege := d.DecodeElement(_gcbec.Shade, &_fbcfe); _fege != nil {
					return _fege
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _gcbec)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_gedbdf := NewEG_ColorTransform()
				_gedbdf.Comp = NewCT_ComplementTransform()
				if _gffa := d.DecodeElement(_gedbdf.Comp, &_fbcfe); _gffa != nil {
					return _gffa
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _gedbdf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_cecdb := NewEG_ColorTransform()
				_cecdb.Inv = NewCT_InverseTransform()
				if _ccgdg := d.DecodeElement(_cecdb.Inv, &_fbcfe); _ccgdg != nil {
					return _ccgdg
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _cecdb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_afaed := NewEG_ColorTransform()
				_afaed.Gray = NewCT_GrayscaleTransform()
				if _dggd := d.DecodeElement(_afaed.Gray, &_fbcfe); _dggd != nil {
					return _dggd
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _afaed)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_fgafb := NewEG_ColorTransform()
				_fgafb.Alpha = NewCT_PositiveFixedPercentage()
				if _fbfa := d.DecodeElement(_fgafb.Alpha, &_fbcfe); _fbfa != nil {
					return _fbfa
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _fgafb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_fegcf := NewEG_ColorTransform()
				_fegcf.AlphaOff = NewCT_FixedPercentage()
				if _eaded := d.DecodeElement(_fegcf.AlphaOff, &_fbcfe); _eaded != nil {
					return _eaded
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _fegcf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_efaac := NewEG_ColorTransform()
				_efaac.AlphaMod = NewCT_PositivePercentage()
				if _gafag := d.DecodeElement(_efaac.AlphaMod, &_fbcfe); _gafag != nil {
					return _gafag
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _efaac)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_egddb := NewEG_ColorTransform()
				_egddb.Hue = NewCT_PositiveFixedAngle()
				if _cbfe := d.DecodeElement(_egddb.Hue, &_fbcfe); _cbfe != nil {
					return _cbfe
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _egddb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_fbgdb := NewEG_ColorTransform()
				_fbgdb.HueOff = NewCT_Angle()
				if _fddabb := d.DecodeElement(_fbgdb.HueOff, &_fbcfe); _fddabb != nil {
					return _fddabb
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _fbgdb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_ggecc := NewEG_ColorTransform()
				_ggecc.HueMod = NewCT_PositivePercentage()
				if _efcbc := d.DecodeElement(_ggecc.HueMod, &_fbcfe); _efcbc != nil {
					return _efcbc
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _ggecc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_bcgae := NewEG_ColorTransform()
				_bcgae.Sat = NewCT_Percentage()
				if _dfeb := d.DecodeElement(_bcgae.Sat, &_fbcfe); _dfeb != nil {
					return _dfeb
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _bcgae)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_dccadb := NewEG_ColorTransform()
				_dccadb.SatOff = NewCT_Percentage()
				if _gcfgb := d.DecodeElement(_dccadb.SatOff, &_fbcfe); _gcfgb != nil {
					return _gcfgb
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _dccadb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_bfdba := NewEG_ColorTransform()
				_bfdba.SatMod = NewCT_Percentage()
				if _aaebg := d.DecodeElement(_bfdba.SatMod, &_fbcfe); _aaebg != nil {
					return _aaebg
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _bfdba)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_afga := NewEG_ColorTransform()
				_afga.Lum = NewCT_Percentage()
				if _baggd := d.DecodeElement(_afga.Lum, &_fbcfe); _baggd != nil {
					return _baggd
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _afga)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_acafg := NewEG_ColorTransform()
				_acafg.LumOff = NewCT_Percentage()
				if _gcbac := d.DecodeElement(_acafg.LumOff, &_fbcfe); _gcbac != nil {
					return _gcbac
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _acafg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_cfbff := NewEG_ColorTransform()
				_cfbff.LumMod = NewCT_Percentage()
				if _aefgc := d.DecodeElement(_cfbff.LumMod, &_fbcfe); _aefgc != nil {
					return _aefgc
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _cfbff)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_bfgag := NewEG_ColorTransform()
				_bfgag.Red = NewCT_Percentage()
				if _efeda := d.DecodeElement(_bfgag.Red, &_fbcfe); _efeda != nil {
					return _efeda
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _bfgag)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_cbcbf := NewEG_ColorTransform()
				_cbcbf.RedOff = NewCT_Percentage()
				if _gcacdf := d.DecodeElement(_cbcbf.RedOff, &_fbcfe); _gcacdf != nil {
					return _gcacdf
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _cbcbf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_eaadb := NewEG_ColorTransform()
				_eaadb.RedMod = NewCT_Percentage()
				if _cacd := d.DecodeElement(_eaadb.RedMod, &_fbcfe); _cacd != nil {
					return _cacd
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _eaadb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_dfcda := NewEG_ColorTransform()
				_dfcda.Green = NewCT_Percentage()
				if _adfge := d.DecodeElement(_dfcda.Green, &_fbcfe); _adfge != nil {
					return _adfge
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _dfcda)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_dade := NewEG_ColorTransform()
				_dade.GreenOff = NewCT_Percentage()
				if _aefcg := d.DecodeElement(_dade.GreenOff, &_fbcfe); _aefcg != nil {
					return _aefcg
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _dade)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_adaga := NewEG_ColorTransform()
				_adaga.GreenMod = NewCT_Percentage()
				if _ffddb := d.DecodeElement(_adaga.GreenMod, &_fbcfe); _ffddb != nil {
					return _ffddb
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _adaga)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_bgdgc := NewEG_ColorTransform()
				_bgdgc.Blue = NewCT_Percentage()
				if _ccaeg := d.DecodeElement(_bgdgc.Blue, &_fbcfe); _ccaeg != nil {
					return _ccaeg
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _bgdgc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_bcfdc := NewEG_ColorTransform()
				_bcfdc.BlueOff = NewCT_Percentage()
				if _fdaca := d.DecodeElement(_bcfdc.BlueOff, &_fbcfe); _fdaca != nil {
					return _fdaca
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _bcfdc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_dagbg := NewEG_ColorTransform()
				_dagbg.BlueMod = NewCT_Percentage()
				if _fecaa := d.DecodeElement(_dagbg.BlueMod, &_fbcfe); _fecaa != nil {
					return _fecaa
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _dagbg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_cebef := NewEG_ColorTransform()
				_cebef.Gamma = NewCT_GammaTransform()
				if _gbcda := d.DecodeElement(_cebef.Gamma, &_fbcfe); _gbcda != nil {
					return _gbcda
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _cebef)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_edga := NewEG_ColorTransform()
				_edga.InvGamma = NewCT_InverseGammaTransform()
				if _bbae := d.DecodeElement(_edga.InvGamma, &_fbcfe); _bbae != nil {
					return _bbae
				}
				_bagae.EG_ColorTransform = append(_bagae.EG_ColorTransform, _edga)
			default:
				_b.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0052\u0067b\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _fbcfe.Name)
				if _acgcg := d.Skip(); _acgcg != nil {
					return _acgcg
				}
			}
		case _g.EndElement:
			break _gafa
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_AnimationGraphicalObjectBuildProperties() *CT_AnimationGraphicalObjectBuildProperties {
	_gbc := &CT_AnimationGraphicalObjectBuildProperties{}
	return _gbc
}

func (_ffa *CT_AlphaBiLevelEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0068\u0072\u0065\u0073\u0068"}, Value: _gf.Sprintf("\u0025\u0076", _ffa.ThreshAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type ST_PresetColorVal byte

// ValidateWithPath validates the CT_Bevel and its children, prefixing error messages with path
func (_dbe *CT_Bevel) ValidateWithPath(path string) error {
	if _dbe.WAttr != nil {
		if *_dbe.WAttr < 0 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0057A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_dbe.WAttr)
		}
		if *_dbe.WAttr > 27273042316900 {
			return _gf.Errorf("\u0025\u0073/\u006d\u002e\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dbe.WAttr)
		}
	}
	if _dbe.HAttr != nil {
		if *_dbe.HAttr < 0 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0048A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_dbe.HAttr)
		}
		if *_dbe.HAttr > 27273042316900 {
			return _gf.Errorf("\u0025\u0073/\u006d\u002e\u0048\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dbe.HAttr)
		}
	}
	if _dfdc := _dbe.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _dfdc != nil {
		return _dfdc
	}
	return nil
}

func (_cdcbe *CT_ReflectionEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _deedf := range start.Attr {
		if _deedf.Name.Local == "\u0066a\u0064\u0065\u0044\u0069\u0072" {
			_bagcf, _fcde := _c.ParseInt(_deedf.Value, 10, 32)
			if _fcde != nil {
				return _fcde
			}
			_ccegd := int32(_bagcf)
			_cdcbe.FadeDirAttr = &_ccegd
			continue
		}
		if _deedf.Name.Local == "\u0062l\u0075\u0072\u0052\u0061\u0064" {
			_dfceb, _gdbeb := _c.ParseInt(_deedf.Value, 10, 64)
			if _gdbeb != nil {
				return _gdbeb
			}
			_cdcbe.BlurRadAttr = &_dfceb
			continue
		}
		if _deedf.Name.Local == "\u0073\u0074\u0050o\u0073" {
			_cdffb, _bfgbcg := ParseUnionST_PositiveFixedPercentage(_deedf.Value)
			if _bfgbcg != nil {
				return _bfgbcg
			}
			_cdcbe.StPosAttr = &_cdffb
			continue
		}
		if _deedf.Name.Local == "\u0065\u006e\u0064\u0041" {
			_cbgga, _deeaa := ParseUnionST_PositiveFixedPercentage(_deedf.Value)
			if _deeaa != nil {
				return _deeaa
			}
			_cdcbe.EndAAttr = &_cbgga
			continue
		}
		if _deedf.Name.Local == "\u0065\u006e\u0064\u0050\u006f\u0073" {
			_gddbae, _bdgc := ParseUnionST_PositiveFixedPercentage(_deedf.Value)
			if _bdgc != nil {
				return _bdgc
			}
			_cdcbe.EndPosAttr = &_gddbae
			continue
		}
		if _deedf.Name.Local == "\u0064\u0069\u0073\u0074" {
			_agccd, _caage := _c.ParseInt(_deedf.Value, 10, 64)
			if _caage != nil {
				return _caage
			}
			_cdcbe.DistAttr = &_agccd
			continue
		}
		if _deedf.Name.Local == "\u0064\u0069\u0072" {
			_fbcc, _fdfab := _c.ParseInt(_deedf.Value, 10, 32)
			if _fdfab != nil {
				return _fdfab
			}
			_cfcdf := int32(_fbcc)
			_cdcbe.DirAttr = &_cfcdf
			continue
		}
		if _deedf.Name.Local == "\u0073\u0074\u0041" {
			_afada, _bdfdd := ParseUnionST_PositiveFixedPercentage(_deedf.Value)
			if _bdfdd != nil {
				return _bdfdd
			}
			_cdcbe.StAAttr = &_afada
			continue
		}
		if _deedf.Name.Local == "\u0073\u0078" {
			_gcec, _febef := ParseUnionST_Percentage(_deedf.Value)
			if _febef != nil {
				return _febef
			}
			_cdcbe.SxAttr = &_gcec
			continue
		}
		if _deedf.Name.Local == "\u0073\u0079" {
			_fceba, _bddffg := ParseUnionST_Percentage(_deedf.Value)
			if _bddffg != nil {
				return _bddffg
			}
			_cdcbe.SyAttr = &_fceba
			continue
		}
		if _deedf.Name.Local == "\u006b\u0078" {
			_eeafe, _gdee := _c.ParseInt(_deedf.Value, 10, 32)
			if _gdee != nil {
				return _gdee
			}
			_cdgdd := int32(_eeafe)
			_cdcbe.KxAttr = &_cdgdd
			continue
		}
		if _deedf.Name.Local == "\u006b\u0079" {
			_aedgd, _eddeee := _c.ParseInt(_deedf.Value, 10, 32)
			if _eddeee != nil {
				return _eddeee
			}
			_gdbgf := int32(_aedgd)
			_cdcbe.KyAttr = &_gdbgf
			continue
		}
		if _deedf.Name.Local == "\u0061\u006c\u0067\u006e" {
			_cdcbe.AlgnAttr.UnmarshalXMLAttr(_deedf)
			continue
		}
		if _deedf.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_adgad, _fecbb := _c.ParseBool(_deedf.Value)
			if _fecbb != nil {
				return _fecbb
			}
			_cdcbe.RotWithShapeAttr = &_adgad
			continue
		}
	}
	for {
		_acgce, _gfcda := d.Token()
		if _gfcda != nil {
			return _gf.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0052\u0065\u0066\u006c\u0065c\u0074\u0069\u006f\u006e\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _gfcda)
		}
		if _bgegg, _bfbfb := _acgce.(_g.EndElement); _bfbfb && _bgegg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gcbgb *EG_ThemeableFontStyles) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gcbgb.Font != nil {
		_egfbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u006f\u006e\u0074"}}
		e.EncodeElement(_gcbgb.Font, _egfbe)
	}
	if _gcbgb.FontRef != nil {
		_dgefa := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0066\u006f\u006e\u0074\u0052\u0065f"}}
		e.EncodeElement(_gcbgb.FontRef, _dgefa)
	}
	return nil
}

func NewCT_TextSpacingPercent() *CT_TextSpacingPercent {
	_cgfcf := &CT_TextSpacingPercent{}
	return _cgfcf
}

func (_cedea *ST_TextTabAlignType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cedea = 0
	case "\u006c":
		*_cedea = 1
	case "\u0063\u0074\u0072":
		*_cedea = 2
	case "\u0072":
		*_cedea = 3
	case "\u0064\u0065\u0063":
		*_cedea = 4
	}
	return nil
}

// Validate validates the CT_QuickTimeFile and its children
func (_beccab *CT_QuickTimeFile) Validate() error {
	return _beccab.ValidateWithPath("\u0043\u0054_\u0051\u0075\u0069c\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065")
}

type ST_BlendMode byte

func (_eabaf ST_TextCapsType) ValidateWithPath(path string) error {
	switch _eabaf {
	case 0, 1, 2, 3:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eabaf))
	}
	return nil
}

// Validate validates the CT_Backdrop and its children
func (_cfbb *CT_Backdrop) Validate() error {
	return _cfbb.ValidateWithPath("C\u0054\u005f\u0042\u0061\u0063\u006b\u0064\u0072\u006f\u0070")
}

func (_eafb ST_PositivePercentage) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _eafb.ST_PositivePercentageDecimal != nil {
		e.EncodeToken(_g.CharData(_gf.Sprintf("\u0025\u0064", *_eafb.ST_PositivePercentageDecimal)))
	}
	if _eafb.ST_PositivePercentage != nil {
		e.Encode(_eafb.ST_PositivePercentage)
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

func (_gedf *CT_NonVisualContentPartProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gedf.IsCommentAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069s\u0043\u006f\u006d\u006d\u0065\u006et"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gedf.IsCommentAttr))})
	}
	e.EncodeToken(start)
	if _gedf.CpLocks != nil {
		_febc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u0070\u004c\u006f\u0063\u006bs"}}
		e.EncodeElement(_gedf.CpLocks, _febc)
	}
	if _gedf.ExtLst != nil {
		_gcfga := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gedf.ExtLst, _gcfga)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_BlipChoice and its children, prefixing error messages with path
func (_egbb *CT_BlipChoice) ValidateWithPath(path string) error {
	for _aed, _dcca := range _egbb.AlphaBiLevel {
		if _bdac := _dcca.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0041lp\u0068\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c\u005b\u0025\u0064\u005d", path, _aed)); _bdac != nil {
			return _bdac
		}
	}
	for _cdga, _baee := range _egbb.AlphaCeiling {
		if _cbafg := _baee.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0041lp\u0068\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067\u005b\u0025\u0064\u005d", path, _cdga)); _cbafg != nil {
			return _cbafg
		}
	}
	for _gcef, _bfcf := range _egbb.AlphaFloor {
		if _eadb := _bfcf.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0041\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006fr\u005b\u0025\u0064\u005d", path, _gcef)); _eadb != nil {
			return _eadb
		}
	}
	for _eebg, _bagg := range _egbb.AlphaInv {
		if _cbcd := _bagg.ValidateWithPath(_gf.Sprintf("\u0025s\u002fA\u006c\u0070\u0068\u0061\u0049\u006e\u0076\u005b\u0025\u0064\u005d", path, _eebg)); _cbcd != nil {
			return _cbcd
		}
	}
	for _edf, _ebgb := range _egbb.AlphaMod {
		if _aad := _ebgb.ValidateWithPath(_gf.Sprintf("\u0025s\u002fA\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u005b\u0025\u0064\u005d", path, _edf)); _aad != nil {
			return _aad
		}
	}
	for _gfdd, _ebab := range _egbb.AlphaModFix {
		if _bfba := _ebab.ValidateWithPath(_gf.Sprintf("\u0025s\u002fA\u006c\u0070\u0068\u0061\u004do\u0064\u0046i\u0078\u005b\u0025\u0064\u005d", path, _gfdd)); _bfba != nil {
			return _bfba
		}
	}
	for _abfa, _ebfge := range _egbb.AlphaRepl {
		if _fadab := _ebfge.ValidateWithPath(_gf.Sprintf("\u0025\u0073/\u0041\u006c\u0070h\u0061\u0052\u0065\u0070\u006c\u005b\u0025\u0064\u005d", path, _abfa)); _fadab != nil {
			return _fadab
		}
	}
	for _acea, _fabd := range _egbb.BiLevel {
		if _fdd := _fabd.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0042\u0069\u004c\u0065\u0076\u0065l\u005b\u0025\u0064\u005d", path, _acea)); _fdd != nil {
			return _fdd
		}
	}
	for _cgba, _bcgec := range _egbb.Blur {
		if _eecd := _bcgec.ValidateWithPath(_gf.Sprintf("%\u0073\u002f\u0042\u006c\u0075\u0072\u005b\u0025\u0064\u005d", path, _cgba)); _eecd != nil {
			return _eecd
		}
	}
	for _eccd, _ffgf := range _egbb.ClrChange {
		if _ageab := _ffgf.ValidateWithPath(_gf.Sprintf("\u0025\u0073/\u0043\u006c\u0072C\u0068\u0061\u006e\u0067\u0065\u005b\u0025\u0064\u005d", path, _eccd)); _ageab != nil {
			return _ageab
		}
	}
	for _bggca, _bca := range _egbb.ClrRepl {
		if _gag := _bca.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0043\u006c\u0072\u0052\u0065\u0070l\u005b\u0025\u0064\u005d", path, _bggca)); _gag != nil {
			return _gag
		}
	}
	for _fdef, _fdge := range _egbb.Duotone {
		if _bgfc := _fdge.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0044\u0075\u006f\u0074\u006f\u006ee\u005b\u0025\u0064\u005d", path, _fdef)); _bgfc != nil {
			return _bgfc
		}
	}
	for _caae, _fabac := range _egbb.FillOverlay {
		if _fgag := _fabac.ValidateWithPath(_gf.Sprintf("\u0025s\u002fF\u0069\u006c\u006c\u004f\u0076e\u0072\u006ca\u0079\u005b\u0025\u0064\u005d", path, _caae)); _fgag != nil {
			return _fgag
		}
	}
	for _ffdc, _gac := range _egbb.Grayscl {
		if _bfcb := _gac.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0047\u0072\u0061\u0079\u0073\u0063l\u005b\u0025\u0064\u005d", path, _ffdc)); _bfcb != nil {
			return _bfcb
		}
	}
	for _degd, _cfdc := range _egbb.Hsl {
		if _gged := _cfdc.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0048\u0073\u006c\u005b\u0025\u0064\u005d", path, _degd)); _gged != nil {
			return _gged
		}
	}
	for _gdga, _dbf := range _egbb.Lum {
		if _cebg := _dbf.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u004c\u0075\u006d\u005b\u0025\u0064\u005d", path, _gdga)); _cebg != nil {
			return _cebg
		}
	}
	for _aac, _bgfdc := range _egbb.Tint {
		if _dfge := _bgfdc.ValidateWithPath(_gf.Sprintf("%\u0073\u002f\u0054\u0069\u006e\u0074\u005b\u0025\u0064\u005d", path, _aac)); _dfge != nil {
			return _dfge
		}
	}
	return nil
}

func NewCT_OfficeArtExtension() *CT_OfficeArtExtension {
	_eddbg := &CT_OfficeArtExtension{}
	return _eddbg
}

// Validate validates the CT_TextUnderlineFillFollowText and its children
func (_eceea *CT_TextUnderlineFillFollowText) Validate() error {
	return _eceea.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u0046\u0069l\u006c\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074")
}

func (_dbeee ST_TextHorzOverflowType) ValidateWithPath(path string) error {
	switch _dbeee {
	case 0, 1, 2:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbeee))
	}
	return nil
}

func (_bbdad *CT_ObjectStyleDefaults) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _bbdad.SpDef != nil {
		_ebaag := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0070\u0044\u0065\u0066"}}
		e.EncodeElement(_bbdad.SpDef, _ebaag)
	}
	if _bbdad.LnDef != nil {
		_edeaf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u006e\u0044\u0065\u0066"}}
		e.EncodeElement(_bbdad.LnDef, _edeaf)
	}
	if _bbdad.TxDef != nil {
		_eecebc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074\u0078\u0044\u0065\u0066"}}
		e.EncodeElement(_bbdad.TxDef, _eecebc)
	}
	if _bbdad.ExtLst != nil {
		_abfab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bbdad.ExtLst, _abfab)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_TableCol struct {
	WAttr  ST_Coordinate
	ExtLst *CT_OfficeArtExtensionList
}

func NewCT_Backdrop() *CT_Backdrop {
	_dgf := &CT_Backdrop{}
	_dgf.Anchor = NewCT_Point3D()
	_dgf.Norm = NewCT_Vector3D()
	_dgf.Up = NewCT_Vector3D()
	return _dgf
}

func (_cgca ST_TextAnchoringType) Validate() error { return _cgca.ValidateWithPath("") }

// Validate validates the TblStyleLst and its children
func (_ceefed *TblStyleLst) Validate() error {
	return _ceefed.ValidateWithPath("T\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074")
}

type CT_BaseStylesOverride struct {
	ClrScheme  *CT_ColorScheme
	FontScheme *CT_FontScheme
	FmtScheme  *CT_StyleMatrix
}

func (_gfaggg ST_AnimationDgmOnlyBuildType) String() string {
	switch _gfaggg {
	case 0:
		return ""
	case 1:
		return "\u006f\u006e\u0065"
	case 2:
		return "\u006c\u0076\u006c\u004f\u006e\u0065"
	case 3:
		return "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return ""
}

const (
	ST_PresetMaterialTypeUnset             ST_PresetMaterialType = 0
	ST_PresetMaterialTypeLegacyMatte       ST_PresetMaterialType = 1
	ST_PresetMaterialTypeLegacyPlastic     ST_PresetMaterialType = 2
	ST_PresetMaterialTypeLegacyMetal       ST_PresetMaterialType = 3
	ST_PresetMaterialTypeLegacyWireframe   ST_PresetMaterialType = 4
	ST_PresetMaterialTypeMatte             ST_PresetMaterialType = 5
	ST_PresetMaterialTypePlastic           ST_PresetMaterialType = 6
	ST_PresetMaterialTypeMetal             ST_PresetMaterialType = 7
	ST_PresetMaterialTypeWarmMatte         ST_PresetMaterialType = 8
	ST_PresetMaterialTypeTranslucentPowder ST_PresetMaterialType = 9
	ST_PresetMaterialTypePowder            ST_PresetMaterialType = 10
	ST_PresetMaterialTypeDkEdge            ST_PresetMaterialType = 11
	ST_PresetMaterialTypeSoftEdge          ST_PresetMaterialType = 12
	ST_PresetMaterialTypeClear             ST_PresetMaterialType = 13
	ST_PresetMaterialTypeFlat              ST_PresetMaterialType = 14
	ST_PresetMaterialTypeSoftmetal         ST_PresetMaterialType = 15
)

// ValidateWithPath validates the CT_PatternFillProperties and its children, prefixing error messages with path
func (_gege *CT_PatternFillProperties) ValidateWithPath(path string) error {
	if _abadg := _gege.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _abadg != nil {
		return _abadg
	}
	if _gege.FgClr != nil {
		if _dggb := _gege.FgClr.ValidateWithPath(path + "\u002f\u0046\u0067\u0043\u006c\u0072"); _dggb != nil {
			return _dggb
		}
	}
	if _gege.BgClr != nil {
		if _dffbc := _gege.BgClr.ValidateWithPath(path + "\u002f\u0042\u0067\u0043\u006c\u0072"); _dffbc != nil {
			return _dffbc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextNoAutofit and its children, prefixing error messages with path
func (_gbdag *CT_TextNoAutofit) ValidateWithPath(path string) error { return nil }

func (_bdfg *CT_PresetLineDashProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bdfg.ValAttr != ST_PresetLineDashValUnset {
		_efead, _abcgb := _bdfg.ValAttr.MarshalXMLAttr(_g.Name{Local: "\u0076\u0061\u006c"})
		if _abcgb != nil {
			return _abcgb
		}
		start.Attr = append(start.Attr, _efead)
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_caeaa ST_AnimationBuildType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_ecdac := _g.Attr{}
	_ecdac.Name = name
	switch _caeaa {
	case ST_AnimationBuildTypeUnset:
		_ecdac.Value = ""
	case ST_AnimationBuildTypeAllAtOnce:
		_ecdac.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return _ecdac, nil
}

// ValidateWithPath validates the CT_GvmlShapeNonVisual and its children, prefixing error messages with path
func (_eaegec *CT_GvmlShapeNonVisual) ValidateWithPath(path string) error {
	if _bdbff := _eaegec.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _bdbff != nil {
		return _bdbff
	}
	if _agee := _eaegec.CNvSpPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0053\u0070\u0050\u0072"); _agee != nil {
		return _agee
	}
	return nil
}

// Validate validates the CT_BaseStyles and its children
func (_abbg *CT_BaseStyles) Validate() error {
	return _abbg.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073")
}

func (_adce *CT_GeomGuideList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _adce.Gd != nil {
		_bfgf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0064"}}
		for _, _bebd := range _adce.Gd {
			e.EncodeElement(_bebd, _bfgf)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gecda ST_TextSpacingPercentOrPercentString) String() string {
	if _gecda.ST_TextSpacingPercent != nil {
		return _gf.Sprintf("\u0025\u0076", *_gecda.ST_TextSpacingPercent)
	}
	if _gecda.ST_Percentage != nil {
		return _gf.Sprintf("\u0025\u0076", *_gecda.ST_Percentage)
	}
	return ""
}

func (_eaad *CT_EmbeddedWAVAudioFile) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _eada := range start.Attr {
		if _eada.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _eada.Name.Local == "\u0065\u006d\u0062e\u0064" || _eada.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _eada.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_bcaa, _egfe := _eada.Value, error(nil)
			if _egfe != nil {
				return _egfe
			}
			_eaad.EmbedAttr = _bcaa
			continue
		}
		if _eada.Name.Local == "\u006e\u0061\u006d\u0065" {
			_edfeeg, _aeede := _eada.Value, error(nil)
			if _aeede != nil {
				return _aeede
			}
			_eaad.NameAttr = &_edfeeg
			continue
		}
	}
	for {
		_aag, _ggcg := d.Token()
		if _ggcg != nil {
			return _gf.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0045\u006d\u0062e\u0064\u0064\u0065\u0064\u0057\u0041\u0056A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065\u003a\u0020%\u0073", _ggcg)
		}
		if _edea, _gfeef := _aag.(_g.EndElement); _gfeef && _edea.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_AlphaInverseEffect struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_efgb *CT_GvmlTextShape) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_efgb.TxBody = NewCT_TextBody()
_edbdf:
	for {
		_cdec, _gfad := d.Token()
		if _gfad != nil {
			return _gfad
		}
		switch _aeggd := _cdec.(type) {
		case _g.StartElement:
			switch _aeggd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				if _fadagd := d.DecodeElement(_efgb.TxBody, &_aeggd); _fadagd != nil {
					return _fadagd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}:
				_efgb.Choice = NewCT_GvmlTextShapeChoice()
				if _gcfaed := d.DecodeElement(&_efgb.Choice.UseSpRect, &_aeggd); _gcfaed != nil {
					return _gcfaed
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_efgb.Choice = NewCT_GvmlTextShapeChoice()
				if _cfae := d.DecodeElement(&_efgb.Choice.Xfrm, &_aeggd); _cfae != nil {
					return _cfae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efgb.ExtLst = NewCT_OfficeArtExtensionList()
				if _faaab := d.DecodeElement(_efgb.ExtLst, &_aeggd); _faaab != nil {
					return _faaab
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0020\u0025v", _aeggd.Name)
				if _fdfg := d.Skip(); _fdfg != nil {
					return _fdfg
				}
			}
		case _g.EndElement:
			break _edbdf
		case _g.CharData:
		}
	}
	return nil
}

func (_gfbgb *CT_PictureLocking) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gfbgb.NoCropAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0072\u006f\u0070"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gfbgb.NoCropAttr))})
	}
	if _gfbgb.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gfbgb.NoGrpAttr))})
	}
	if _gfbgb.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gfbgb.NoSelectAttr))})
	}
	if _gfbgb.NoRotAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gfbgb.NoRotAttr))})
	}
	if _gfbgb.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gfbgb.NoChangeAspectAttr))})
	}
	if _gfbgb.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gfbgb.NoMoveAttr))})
	}
	if _gfbgb.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gfbgb.NoResizeAttr))})
	}
	if _gfbgb.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gfbgb.NoEditPointsAttr))})
	}
	if _gfbgb.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gfbgb.NoAdjustHandlesAttr))})
	}
	if _gfbgb.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gfbgb.NoChangeArrowheadsAttr))})
	}
	if _gfbgb.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gfbgb.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _gfbgb.ExtLst != nil {
		_cgadg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gfbgb.ExtLst, _cgadg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bagge *CT_SupplementalFont) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0063\u0072\u0069\u0070\u0074"}, Value: _gf.Sprintf("\u0025\u0076", _bagge.ScriptAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065"}, Value: _gf.Sprintf("\u0025\u0076", _bagge.TypefaceAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dbdb *CT_PositiveFixedPercentage) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _gf.Sprintf("\u0025\u0076", _dbdb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type EG_Geometry struct {
	CustGeom *CT_CustomGeometry2D
	PrstGeom *CT_PresetGeometry2D
}

// ValidateWithPath validates the CT_BaseStylesOverride and its children, prefixing error messages with path
func (_cfe *CT_BaseStylesOverride) ValidateWithPath(path string) error {
	if _cfe.ClrScheme != nil {
		if _bfaf := _cfe.ClrScheme.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"); _bfaf != nil {
			return _bfaf
		}
	}
	if _cfe.FontScheme != nil {
		if _gea := _cfe.FontScheme.ValidateWithPath(path + "/\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _gea != nil {
			return _gea
		}
	}
	if _cfe.FmtScheme != nil {
		if _cgef := _cfe.FmtScheme.ValidateWithPath(path + "\u002f\u0046\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _cgef != nil {
			return _cgef
		}
	}
	return nil
}

func (_aefea *EG_Effect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dfbdb:
	for {
		_eedeb, _ddded := d.Token()
		if _ddded != nil {
			return _ddded
		}
		switch _gcebc := _eedeb.(type) {
		case _g.StartElement:
			switch _gcebc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				_aefea.Cont = NewCT_EffectContainer()
				if _bcbegb := d.DecodeElement(_aefea.Cont, &_gcebc); _bcbegb != nil {
					return _bcbegb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_aefea.Effect = NewCT_EffectReference()
				if _gagag := d.DecodeElement(_aefea.Effect, &_gcebc); _gagag != nil {
					return _gagag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_aefea.AlphaBiLevel = NewCT_AlphaBiLevelEffect()
				if _egdce := d.DecodeElement(_aefea.AlphaBiLevel, &_gcebc); _egdce != nil {
					return _egdce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_aefea.AlphaCeiling = NewCT_AlphaCeilingEffect()
				if _deabg := d.DecodeElement(_aefea.AlphaCeiling, &_gcebc); _deabg != nil {
					return _deabg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_aefea.AlphaFloor = NewCT_AlphaFloorEffect()
				if _efbbd := d.DecodeElement(_aefea.AlphaFloor, &_gcebc); _efbbd != nil {
					return _efbbd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_aefea.AlphaInv = NewCT_AlphaInverseEffect()
				if _gadc := d.DecodeElement(_aefea.AlphaInv, &_gcebc); _gadc != nil {
					return _gadc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_aefea.AlphaMod = NewCT_AlphaModulateEffect()
				if _gbcea := d.DecodeElement(_aefea.AlphaMod, &_gcebc); _gbcea != nil {
					return _gbcea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_aefea.AlphaModFix = NewCT_AlphaModulateFixedEffect()
				if _febab := d.DecodeElement(_aefea.AlphaModFix, &_gcebc); _febab != nil {
					return _febab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}:
				_aefea.AlphaOutset = NewCT_AlphaOutsetEffect()
				if _eaaeee := d.DecodeElement(_aefea.AlphaOutset, &_gcebc); _eaaeee != nil {
					return _eaaeee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_aefea.AlphaRepl = NewCT_AlphaReplaceEffect()
				if _eagbeb := d.DecodeElement(_aefea.AlphaRepl, &_gcebc); _eagbeb != nil {
					return _eagbeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_aefea.BiLevel = NewCT_BiLevelEffect()
				if _gbcfa := d.DecodeElement(_aefea.BiLevel, &_gcebc); _gbcfa != nil {
					return _gbcfa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}:
				_aefea.Blend = NewCT_BlendEffect()
				if _cdef := d.DecodeElement(_aefea.Blend, &_gcebc); _cdef != nil {
					return _cdef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_aefea.Blur = NewCT_BlurEffect()
				if _dbedd := d.DecodeElement(_aefea.Blur, &_gcebc); _dbedd != nil {
					return _dbedd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_aefea.ClrChange = NewCT_ColorChangeEffect()
				if _bbfacg := d.DecodeElement(_aefea.ClrChange, &_gcebc); _bbfacg != nil {
					return _bbfacg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_aefea.ClrRepl = NewCT_ColorReplaceEffect()
				if _eebfd := d.DecodeElement(_aefea.ClrRepl, &_gcebc); _eebfd != nil {
					return _eebfd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_aefea.Duotone = NewCT_DuotoneEffect()
				if _aggfc := d.DecodeElement(_aefea.Duotone, &_gcebc); _aggfc != nil {
					return _aggfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_aefea.Fill = NewCT_FillEffect()
				if _geefg := d.DecodeElement(_aefea.Fill, &_gcebc); _geefg != nil {
					return _geefg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_aefea.FillOverlay = NewCT_FillOverlayEffect()
				if _beeeb := d.DecodeElement(_aefea.FillOverlay, &_gcebc); _beeeb != nil {
					return _beeeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}:
				_aefea.Glow = NewCT_GlowEffect()
				if _fbacg := d.DecodeElement(_aefea.Glow, &_gcebc); _fbacg != nil {
					return _fbacg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_aefea.Grayscl = NewCT_GrayscaleEffect()
				if _ddga := d.DecodeElement(_aefea.Grayscl, &_gcebc); _ddga != nil {
					return _ddga
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_aefea.Hsl = NewCT_HSLEffect()
				if _cegdcf := d.DecodeElement(_aefea.Hsl, &_gcebc); _cegdcf != nil {
					return _cegdcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}:
				_aefea.InnerShdw = NewCT_InnerShadowEffect()
				if _ebabb := d.DecodeElement(_aefea.InnerShdw, &_gcebc); _ebabb != nil {
					return _ebabb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_aefea.Lum = NewCT_LuminanceEffect()
				if _deccd := d.DecodeElement(_aefea.Lum, &_gcebc); _deccd != nil {
					return _deccd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}:
				_aefea.OuterShdw = NewCT_OuterShadowEffect()
				if _ggffb := d.DecodeElement(_aefea.OuterShdw, &_gcebc); _ggffb != nil {
					return _ggffb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}:
				_aefea.PrstShdw = NewCT_PresetShadowEffect()
				if _baade := d.DecodeElement(_aefea.PrstShdw, &_gcebc); _baade != nil {
					return _baade
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_aefea.Reflection = NewCT_ReflectionEffect()
				if _bcgde := d.DecodeElement(_aefea.Reflection, &_gcebc); _bcgde != nil {
					return _bcgde
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}:
				_aefea.RelOff = NewCT_RelativeOffsetEffect()
				if _cdfbgc := d.DecodeElement(_aefea.RelOff, &_gcebc); _cdfbgc != nil {
					return _cdfbgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}:
				_aefea.SoftEdge = NewCT_SoftEdgesEffect()
				if _ecegb := d.DecodeElement(_aefea.SoftEdge, &_gcebc); _ecegb != nil {
					return _ecegb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_aefea.Tint = NewCT_TintEffect()
				if _ecgab := d.DecodeElement(_aefea.Tint, &_gcebc); _ecgab != nil {
					return _ecgab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_aefea.Xfrm = NewCT_TransformEffect()
				if _gcedd := d.DecodeElement(_aefea.Xfrm, &_gcebc); _gcedd != nil {
					return _gcedd
				}
			default:
				_b.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0045\u0047\u005f\u0045\u0066\u0066e\u0063\u0074 \u0025\u0076", _gcebc.Name)
				if _bbffd := d.Skip(); _bbffd != nil {
					return _bbffd
				}
			}
		case _g.EndElement:
			break _dfbdb
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_TablePropertiesChoice() *CT_TablePropertiesChoice {
	_gedbf := &CT_TablePropertiesChoice{}
	return _gedbf
}

func (_ecddgg *ST_BlackWhiteMode) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gcgfb, _ggdcf := d.Token()
	if _ggdcf != nil {
		return _ggdcf
	}
	if _cagcd, _ebeg := _gcgfb.(_g.EndElement); _ebeg && _cagcd.Name == start.Name {
		*_ecddgg = 1
		return nil
	}
	if _afgcc, _aedded := _gcgfb.(_g.CharData); !_aedded {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcgfb)
	} else {
		switch string(_afgcc) {
		case "":
			*_ecddgg = 0
		case "\u0063\u006c\u0072":
			*_ecddgg = 1
		case "\u0061\u0075\u0074\u006f":
			*_ecddgg = 2
		case "\u0067\u0072\u0061\u0079":
			*_ecddgg = 3
		case "\u006c\u0074\u0047\u0072\u0061\u0079":
			*_ecddgg = 4
		case "\u0069n\u0076\u0047\u0072\u0061\u0079":
			*_ecddgg = 5
		case "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e":
			*_ecddgg = 6
		case "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y":
			*_ecddgg = 7
		case "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065":
			*_ecddgg = 8
		case "\u0062\u006c\u0061c\u006b":
			*_ecddgg = 9
		case "\u0077\u0068\u0069t\u0065":
			*_ecddgg = 10
		case "\u0068\u0069\u0064\u0064\u0065\u006e":
			*_ecddgg = 11
		}
	}
	_gcgfb, _ggdcf = d.Token()
	if _ggdcf != nil {
		return _ggdcf
	}
	if _fedga, _edbgc := _gcgfb.(_g.EndElement); _edbgc && _fedga.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcgfb)
}

type ST_PenAlignment byte

func (_fafgc ST_PresetShadowVal) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fafgc.String(), start)
}

func (_fcgag *ST_LineEndType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_fcgag = 0
	case "\u006e\u006f\u006e\u0065":
		*_fcgag = 1
	case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_fcgag = 2
	case "\u0073t\u0065\u0061\u006c\u0074\u0068":
		*_fcgag = 3
	case "\u0064i\u0061\u006d\u006f\u006e\u0064":
		*_fcgag = 4
	case "\u006f\u0076\u0061\u006c":
		*_fcgag = 5
	case "\u0061\u0072\u0072o\u0077":
		*_fcgag = 6
	}
	return nil
}

func (_cgda *CT_AdjPoint2D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078"}, Value: _gf.Sprintf("\u0025\u0076", _cgda.XAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0079"}, Value: _gf.Sprintf("\u0025\u0076", _cgda.YAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextSpacingPercent and its children, prefixing error messages with path
func (_bdecd *CT_TextSpacingPercent) ValidateWithPath(path string) error {
	if _deceb := _bdecd.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _deceb != nil {
		return _deceb
	}
	return nil
}

// Validate validates the CT_PresetTextShape and its children
func (_dbfca *CT_PresetTextShape) Validate() error {
	return _dbfca.ValidateWithPath("\u0043T\u005fP\u0072\u0065\u0073\u0065\u0074T\u0065\u0078t\u0053\u0068\u0061\u0070\u0065")
}

func (_accf *CT_AnimationChartElement) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _accf.SeriesIdxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073e\u0072\u0069\u0065\u0073\u0049\u0064x"}, Value: _gf.Sprintf("\u0025\u0076", *_accf.SeriesIdxAttr)})
	}
	if _accf.CategoryIdxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "c\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0049\u0064\u0078"}, Value: _gf.Sprintf("\u0025\u0076", *_accf.CategoryIdxAttr)})
	}
	_eeb, _ddgd := _accf.BldStepAttr.MarshalXMLAttr(_g.Name{Local: "\u0062l\u0064\u0053\u0074\u0065\u0070"})
	if _ddgd != nil {
		return _ddgd
	}
	start.Attr = append(start.Attr, _eeb)
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GlowEffect and its children
func (_baeee *CT_GlowEffect) Validate() error {
	return _baeee.ValidateWithPath("\u0043\u0054\u005f\u0047\u006c\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_cgagdd *CT_StyleMatrix) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cgagdd.NameAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _gf.Sprintf("\u0025\u0076", *_cgagdd.NameAttr)})
	}
	e.EncodeToken(start)
	_aabfbf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_cgagdd.FillStyleLst, _aabfbf)
	_aeggg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006cn\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_cgagdd.LnStyleLst, _aeggg)
	_cdee := _g.StartElement{Name: _g.Name{Local: "\u0061\u003ae\u0066\u0066\u0065c\u0074\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_cgagdd.EffectStyleLst, _cdee)
	_bgca := _g.StartElement{Name: _g.Name{Local: "\u0061\u003ab\u0067\u0046\u0069l\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_cgagdd.BgFillStyleLst, _bgca)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bfabgg *EG_OfficeArtExtensionList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bfabgg.Ext != nil {
		_ggefef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		for _, _cfgdf := range _bfabgg.Ext {
			e.EncodeElement(_cfgdf, _ggefef)
		}
	}
	return nil
}

func (_cdcgee ST_PathFillMode) String() string {
	switch _cdcgee {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u006e\u006f\u0072\u006d"
	case 3:
		return "\u006ci\u0067\u0068\u0074\u0065\u006e"
	case 4:
		return "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073"
	case 5:
		return "\u0064\u0061\u0072\u006b\u0065\u006e"
	case 6:
		return "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073"
	}
	return ""
}

func (_gdfb *CT_EmbeddedWAVAudioFile) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072:\u0065\u006d\u0062\u0065\u0064"}, Value: _gf.Sprintf("\u0025\u0076", _gdfb.EmbedAttr)})
	if _gdfb.NameAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _gf.Sprintf("\u0025\u0076", *_gdfb.NameAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Point3D and its children, prefixing error messages with path
func (_fcccbb *CT_Point3D) ValidateWithPath(path string) error {
	if _dbdg := _fcccbb.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _dbdg != nil {
		return _dbdg
	}
	if _abgef := _fcccbb.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _abgef != nil {
		return _abgef
	}
	if _fead := _fcccbb.ZAttr.ValidateWithPath(path + "\u002f\u005a\u0041\u0074\u0074\u0072"); _fead != nil {
		return _fead
	}
	return nil
}

func NewCT_NonVisualDrawingProps() *CT_NonVisualDrawingProps {
	_fabbb := &CT_NonVisualDrawingProps{}
	return _fabbb
}

func (_fcfde ST_PitchFamily) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fcfde.String(), start)
}

// ValidateWithPath validates the CT_BlendEffect and its children, prefixing error messages with path
func (_fbee *CT_BlendEffect) ValidateWithPath(path string) error {
	if _fbee.BlendAttr == ST_BlendModeUnset {
		return _gf.Errorf("\u0025\u0073\u002f\u0042\u006c\u0065n\u0064\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _efgg := _fbee.BlendAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064\u0041\u0074\u0074\u0072"); _efgg != nil {
		return _efgg
	}
	if _ecgg := _fbee.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _ecgg != nil {
		return _ecgg
	}
	return nil
}

type CT_WholeE2oFormatting struct {
	Ln        *CT_LineProperties
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

func (_dgff *ST_TextPoint) ValidateWithPath(path string) error {
	_ccffd := []string{}
	if _dgff.ST_TextPointUnqualified != nil {
		_ccffd = append(_ccffd, "\u0053\u0054\u005fTe\u0078\u0074\u0050\u006f\u0069\u006e\u0074\u0055\u006e\u0071\u0075\u0061\u006c\u0069\u0066\u0069\u0065\u0064")
	}
	if _dgff.ST_UniversalMeasure != nil {
		_ccffd = append(_ccffd, "\u0053\u0054\u005f\u0055ni\u0076\u0065\u0072\u0073\u0061\u006c\u004d\u0065\u0061\u0073\u0075\u0072\u0065")
	}
	if len(_ccffd) > 1 {
		return _gf.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _ccffd)
	}
	return nil
}

// ValidateWithPath validates the CT_ColorScheme and its children, prefixing error messages with path
func (_dgd *CT_ColorScheme) ValidateWithPath(path string) error {
	if _aeefg := _dgd.Dk1.ValidateWithPath(path + "\u002f\u0044\u006b\u0031"); _aeefg != nil {
		return _aeefg
	}
	if _ddcg := _dgd.Lt1.ValidateWithPath(path + "\u002f\u004c\u0074\u0031"); _ddcg != nil {
		return _ddcg
	}
	if _babea := _dgd.Dk2.ValidateWithPath(path + "\u002f\u0044\u006b\u0032"); _babea != nil {
		return _babea
	}
	if _gfeec := _dgd.Lt2.ValidateWithPath(path + "\u002f\u004c\u0074\u0032"); _gfeec != nil {
		return _gfeec
	}
	if _gcbe := _dgd.Accent1.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0031"); _gcbe != nil {
		return _gcbe
	}
	if _gebdc := _dgd.Accent2.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0032"); _gebdc != nil {
		return _gebdc
	}
	if _bce := _dgd.Accent3.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0033"); _bce != nil {
		return _bce
	}
	if _cbbb := _dgd.Accent4.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0034"); _cbbb != nil {
		return _cbbb
	}
	if _eggf := _dgd.Accent5.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0035"); _eggf != nil {
		return _eggf
	}
	if _gdbc := _dgd.Accent6.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0036"); _gdbc != nil {
		return _gdbc
	}
	if _eccdf := _dgd.Hlink.ValidateWithPath(path + "\u002f\u0048\u006c\u0069\u006e\u006b"); _eccdf != nil {
		return _eccdf
	}
	if _gfdc := _dgd.FolHlink.ValidateWithPath(path + "\u002fF\u006f\u006c\u0048\u006c\u0069\u006ek"); _gfdc != nil {
		return _gfdc
	}
	if _dgd.ExtLst != nil {
		if _abff := _dgd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abff != nil {
			return _abff
		}
	}
	return nil
}

// Validate validates the CT_TextUnderlineFillGroupWrapper and its children
func (_cfdb *CT_TextUnderlineFillGroupWrapper) Validate() error {
	return _cfdb.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0046i\u006c\u006c\u0047\u0072\u006f\u0075\u0070\u0057\u0072\u0061\u0070\u0070\u0065\u0072")
}

type CT_ColorMappingOverride struct {
	Choice *CT_ColorMappingOverrideChoice
}

func (_fabdgc ST_Percentage) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _fabdgc.ST_PercentageDecimal != nil {
		e.EncodeToken(_g.CharData(_gf.Sprintf("\u0025\u0064", *_fabdgc.ST_PercentageDecimal)))
	}
	if _fabdgc.ST_Percentage != nil {
		e.EncodeToken(_g.CharData(*_fabdgc.ST_Percentage))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

func (_ffaaa *CT_GvmlShape) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_eedd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_ffaaa.NvSpPr, _eedd)
	_gdadc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_ffaaa.SpPr, _gdadc)
	if _ffaaa.TxSp != nil {
		_efaca := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0078\u0053\u0070"}}
		e.EncodeElement(_ffaaa.TxSp, _efaca)
	}
	if _ffaaa.Style != nil {
		_gbcfb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_ffaaa.Style, _gbcfb)
	}
	if _ffaaa.ExtLst != nil {
		_gffbc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ffaaa.ExtLst, _gffbc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bccaa *ST_AnimationChartBuildType) Validate() error { return _bccaa.ValidateWithPath("") }

type CT_LinearShadeProperties struct {
	AngAttr    *int32
	ScaledAttr *bool
}

func (_fcdff ST_LightRigType) Validate() error { return _fcdff.ValidateWithPath("") }

func (_fccge ST_TextAlignType) ValidateWithPath(path string) error {
	switch _fccge {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fccge))
	}
	return nil
}

func NewCT_EffectStyleItem() *CT_EffectStyleItem { _bbca := &CT_EffectStyleItem{}; return _bbca }

func ParseUnionST_TextPoint(s string) (ST_TextPoint, error) {
	_efgdc := ST_TextPoint{}
	if _ge.ST_UniversalMeasurePatternRe.MatchString(s) {
		_efgdc.ST_UniversalMeasure = &s
	} else {
		_cggfc, _dfafa := _c.ParseInt(s, 10, 32)
		if _dfafa != nil {
			return _efgdc, _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _dfafa)
		}
		_affddf := int32(_cggfc)
		_efgdc.ST_TextPointUnqualified = &_affddf
	}
	return _efgdc, nil
}

func NewCT_GvmlPictureNonVisual() *CT_GvmlPictureNonVisual {
	_ggagc := &CT_GvmlPictureNonVisual{}
	_ggagc.CNvPr = NewCT_NonVisualDrawingProps()
	_ggagc.CNvPicPr = NewCT_NonVisualPictureProperties()
	return _ggagc
}

type CT_Camera struct {
	PrstAttr ST_PresetCameraType
	FovAttr  *int32
	ZoomAttr *ST_PositivePercentage
	Rot      *CT_SphereCoords
}

func (_accdf *CT_TextUnderlineFillFollowText) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_FixedPercentage and its children, prefixing error messages with path
func (_bfddf *CT_FixedPercentage) ValidateWithPath(path string) error {
	if _egaeee := _bfddf.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _egaeee != nil {
		return _egaeee
	}
	return nil
}

// Validate validates the CT_EffectContainer and its children
func (_cgag *CT_EffectContainer) Validate() error {
	return _cgag.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074C\u006f\u006et\u0061\u0069\u006e\u0065\u0072")
}

func (_befcf *CT_StyleMatrixReference) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _afcd := range start.Attr {
		if _afcd.Name.Local == "\u0069\u0064\u0078" {
			_deaaa, _ffbcd := _c.ParseUint(_afcd.Value, 10, 32)
			if _ffbcd != nil {
				return _ffbcd
			}
			_befcf.IdxAttr = uint32(_deaaa)
			continue
		}
	}
_ddbd:
	for {
		_cagab, _bbcc := d.Token()
		if _bbcc != nil {
			return _bbcc
		}
		switch _bdaba := _cagab.(type) {
		case _g.StartElement:
			switch _bdaba.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_befcf.ScrgbClr = NewCT_ScRgbColor()
				if _ceeg := d.DecodeElement(_befcf.ScrgbClr, &_bdaba); _ceeg != nil {
					return _ceeg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_befcf.SrgbClr = NewCT_SRgbColor()
				if _beede := d.DecodeElement(_befcf.SrgbClr, &_bdaba); _beede != nil {
					return _beede
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_befcf.HslClr = NewCT_HslColor()
				if _deadd := d.DecodeElement(_befcf.HslClr, &_bdaba); _deadd != nil {
					return _deadd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_befcf.SysClr = NewCT_SystemColor()
				if _dadagg := d.DecodeElement(_befcf.SysClr, &_bdaba); _dadagg != nil {
					return _dadagg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_befcf.SchemeClr = NewCT_SchemeColor()
				if _aegda := d.DecodeElement(_befcf.SchemeClr, &_bdaba); _aegda != nil {
					return _aegda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_befcf.PrstClr = NewCT_PresetColor()
				if _abgaf := d.DecodeElement(_befcf.PrstClr, &_bdaba); _abgaf != nil {
					return _abgaf
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004d\u0061\u0074\u0072i\u0078\u0052\u0065\u0066\u0065\u0072e\u006e\u0063\u0065 \u0025\u0076", _bdaba.Name)
				if _eddgc := d.Skip(); _eddgc != nil {
					return _eddgc
				}
			}
		case _g.EndElement:
			break _ddbd
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PresetGeometry2D and its children, prefixing error messages with path
func (_facded *CT_PresetGeometry2D) ValidateWithPath(path string) error {
	if _facded.PrstAttr == ST_ShapeTypeUnset {
		return _gf.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _faacb := _facded.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _faacb != nil {
		return _faacb
	}
	if _facded.AvLst != nil {
		if _cece := _facded.AvLst.ValidateWithPath(path + "\u002f\u0041\u0076\u004c\u0073\u0074"); _cece != nil {
			return _cece
		}
	}
	return nil
}

const (
	ST_TextStrikeTypeUnset     ST_TextStrikeType = 0
	ST_TextStrikeTypeNoStrike  ST_TextStrikeType = 1
	ST_TextStrikeTypeSngStrike ST_TextStrikeType = 2
	ST_TextStrikeTypeDblStrike ST_TextStrikeType = 3
)

func (_fbafe ST_PenAlignment) String() string {
	switch _fbafe {
	case 0:
		return ""
	case 1:
		return "\u0063\u0074\u0072"
	case 2:
		return "\u0069\u006e"
	}
	return ""
}

func (_edabgd ST_RectAlignment) Validate() error { return _edabgd.ValidateWithPath("") }

func (_eadbda *CT_TableRow) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dbbdf := range start.Attr {
		if _dbbdf.Name.Local == "\u0068" {
			_agacb, _adaba := ParseUnionST_Coordinate(_dbbdf.Value)
			if _adaba != nil {
				return _adaba
			}
			_eadbda.HAttr = _agacb
			continue
		}
	}
_bgfbc:
	for {
		_dgaba, _dbbgc := d.Token()
		if _dbbgc != nil {
			return _dbbgc
		}
		switch _acge := _dgaba.(type) {
		case _g.StartElement:
			switch _acge.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063"}:
				_gbbag := NewCT_TableCell()
				if _efdfc := d.DecodeElement(_gbbag, &_acge); _efdfc != nil {
					return _efdfc
				}
				_eadbda.Tc = append(_eadbda.Tc, _gbbag)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eadbda.ExtLst = NewCT_OfficeArtExtensionList()
				if _gebfd := d.DecodeElement(_eadbda.ExtLst, &_acge); _gebfd != nil {
					return _gebfd
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0052\u006f\u0077\u0020\u0025\u0076", _acge.Name)
				if _cefdd := d.Skip(); _cefdd != nil {
					return _cefdd
				}
			}
		case _g.EndElement:
			break _bgfbc
		case _g.CharData:
		}
	}
	return nil
}

func (_abfec *ST_TextAlignType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_abfec = 0
	case "\u006c":
		*_abfec = 1
	case "\u0063\u0074\u0072":
		*_abfec = 2
	case "\u0072":
		*_abfec = 3
	case "\u006a\u0075\u0073\u0074":
		*_abfec = 4
	case "\u006au\u0073\u0074\u004c\u006f\u0077":
		*_abfec = 5
	case "\u0064\u0069\u0073\u0074":
		*_abfec = 6
	case "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074":
		*_abfec = 7
	}
	return nil
}

func NewCT_Path2DList() *CT_Path2DList { _gdgbe := &CT_Path2DList{}; return _gdgbe }

func NewCT_InverseTransform() *CT_InverseTransform { _bfcbg := &CT_InverseTransform{}; return _bfcbg }

// ValidateWithPath validates the CT_PresetShadowEffect and its children, prefixing error messages with path
func (_fdbe *CT_PresetShadowEffect) ValidateWithPath(path string) error {
	if _fdbe.PrstAttr == ST_PresetShadowValUnset {
		return _gf.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _bbbd := _fdbe.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _bbbd != nil {
		return _bbbd
	}
	if _fdbe.DistAttr != nil {
		if *_fdbe.DistAttr < 0 {
			return _gf.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fdbe.DistAttr)
		}
		if *_fdbe.DistAttr > 27273042316900 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_fdbe.DistAttr)
		}
	}
	if _fdbe.DirAttr != nil {
		if *_fdbe.DirAttr < 0 {
			return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fdbe.DirAttr)
		}
		if *_fdbe.DirAttr >= 21600000 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fdbe.DirAttr)
		}
	}
	if _fdbe.ScrgbClr != nil {
		if _gfeee := _fdbe.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _gfeee != nil {
			return _gfeee
		}
	}
	if _fdbe.SrgbClr != nil {
		if _gecfg := _fdbe.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _gecfg != nil {
			return _gecfg
		}
	}
	if _fdbe.HslClr != nil {
		if _dabag := _fdbe.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _dabag != nil {
			return _dabag
		}
	}
	if _fdbe.SysClr != nil {
		if _aaceb := _fdbe.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _aaceb != nil {
			return _aaceb
		}
	}
	if _fdbe.SchemeClr != nil {
		if _eagbe := _fdbe.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _eagbe != nil {
			return _eagbe
		}
	}
	if _fdbe.PrstClr != nil {
		if _edecf := _fdbe.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _edecf != nil {
			return _edecf
		}
	}
	return nil
}

func NewCT_AlphaBiLevelEffect() *CT_AlphaBiLevelEffect { _ead := &CT_AlphaBiLevelEffect{}; return _ead }

func NewCT_GvmlGroupShape() *CT_GvmlGroupShape {
	_eddee := &CT_GvmlGroupShape{}
	_eddee.NvGrpSpPr = NewCT_GvmlGroupShapeNonVisual()
	_eddee.GrpSpPr = NewCT_GroupShapeProperties()
	return _eddee
}

// Validate validates the CT_TextCharacterProperties and its children
func (_caeef *CT_TextCharacterProperties) Validate() error {
	return _caeef.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}

func (_febfd ST_TextTabAlignType) String() string {
	switch _febfd {
	case 0:
		return ""
	case 1:
		return "\u006c"
	case 2:
		return "\u0063\u0074\u0072"
	case 3:
		return "\u0072"
	case 4:
		return "\u0064\u0065\u0063"
	}
	return ""
}

func (_adfgd *CT_Hyperlink) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _adfgd.IdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _gf.Sprintf("\u0025\u0076", *_adfgd.IdAttr)})
	}
	if _adfgd.InvalidUrlAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0055\u0072\u006c"}, Value: _gf.Sprintf("\u0025\u0076", *_adfgd.InvalidUrlAttr)})
	}
	if _adfgd.ActionAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"}, Value: _gf.Sprintf("\u0025\u0076", *_adfgd.ActionAttr)})
	}
	if _adfgd.TgtFrameAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0067\u0074\u0046\u0072\u0061\u006d\u0065"}, Value: _gf.Sprintf("\u0025\u0076", *_adfgd.TgtFrameAttr)})
	}
	if _adfgd.TooltipAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074o\u006f\u006c\u0074\u0069\u0070"}, Value: _gf.Sprintf("\u0025\u0076", *_adfgd.TooltipAttr)})
	}
	if _adfgd.HistoryAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068i\u0073\u0074\u006f\u0072\u0079"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_adfgd.HistoryAttr))})
	}
	if _adfgd.HighlightClickAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074C\u006c\u0069\u0063\u006b"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_adfgd.HighlightClickAttr))})
	}
	if _adfgd.EndSndAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_adfgd.EndSndAttr))})
	}
	e.EncodeToken(start)
	if _adfgd.Snd != nil {
		_addgc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073n\u0064"}}
		e.EncodeElement(_adfgd.Snd, _addgc)
	}
	if _adfgd.ExtLst != nil {
		_daaec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_adfgd.ExtLst, _daaec)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_ColorMappingOverrideChoice() *CT_ColorMappingOverrideChoice {
	_baecb := &CT_ColorMappingOverrideChoice{}
	return _baecb
}

// ValidateWithPath validates the CT_EffectList and its children, prefixing error messages with path
func (_ceea *CT_EffectList) ValidateWithPath(path string) error {
	if _ceea.Blur != nil {
		if _gcbd := _ceea.Blur.ValidateWithPath(path + "\u002f\u0042\u006cu\u0072"); _gcbd != nil {
			return _gcbd
		}
	}
	if _ceea.FillOverlay != nil {
		if _adeb := _ceea.FillOverlay.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"); _adeb != nil {
			return _adeb
		}
	}
	if _ceea.Glow != nil {
		if _dgcga := _ceea.Glow.ValidateWithPath(path + "\u002f\u0047\u006co\u0077"); _dgcga != nil {
			return _dgcga
		}
	}
	if _ceea.InnerShdw != nil {
		if _ecde := _ceea.InnerShdw.ValidateWithPath(path + "\u002f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"); _ecde != nil {
			return _ecde
		}
	}
	if _ceea.OuterShdw != nil {
		if _efeabd := _ceea.OuterShdw.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"); _efeabd != nil {
			return _efeabd
		}
	}
	if _ceea.PrstShdw != nil {
		if _ddag := _ceea.PrstShdw.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0053\u0068\u0064w"); _ddag != nil {
			return _ddag
		}
	}
	if _ceea.Reflection != nil {
		if _bdbf := _ceea.Reflection.ValidateWithPath(path + "/\u0052\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _bdbf != nil {
			return _bdbf
		}
	}
	if _ceea.SoftEdge != nil {
		if _aadbf := _ceea.SoftEdge.ValidateWithPath(path + "\u002fS\u006f\u0066\u0074\u0045\u0064\u0067e"); _aadbf != nil {
			return _aadbf
		}
	}
	return nil
}

func (_ggbdad *CT_TextSpacing) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _ggbdad.SpcPct != nil {
		_dagbd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0050\u0063\u0074"}}
		e.EncodeElement(_ggbdad.SpcPct, _dagbd)
	}
	if _ggbdad.SpcPts != nil {
		_ebaggf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0050\u0074\u0073"}}
		e.EncodeElement(_ggbdad.SpcPts, _ebaggf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fdeag *CT_OfficeStyleSheet) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fdeag.NameAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _gf.Sprintf("\u0025\u0076", *_fdeag.NameAttr)})
	}
	e.EncodeToken(start)
	_ebcg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074h\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}}
	e.EncodeElement(_fdeag.ThemeElements, _ebcg)
	if _fdeag.ObjectDefaults != nil {
		_bfaeg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003ao\u0062\u006a\u0065c\u0074\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0073"}}
		e.EncodeElement(_fdeag.ObjectDefaults, _bfaeg)
	}
	if _fdeag.ExtraClrSchemeLst != nil {
		_ccgad := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078tr\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065\u004c\u0073\u0074"}}
		e.EncodeElement(_fdeag.ExtraClrSchemeLst, _ccgad)
	}
	if _fdeag.CustClrLst != nil {
		_daab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063u\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}}
		e.EncodeElement(_fdeag.CustClrLst, _daab)
	}
	if _fdeag.ExtLst != nil {
		_ffggd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fdeag.ExtLst, _ffggd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewEG_TextBulletSize() *EG_TextBulletSize { _dgadag := &EG_TextBulletSize{}; return _dgadag }

func NewCT_SoftEdgesEffect() *CT_SoftEdgesEffect {
	_bdcbe := &CT_SoftEdgesEffect{}
	_bdcbe.RadAttr = 0
	return _bdcbe
}

func (_deafa *CT_Shape3D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fbfab := range start.Attr {
		if _fbfab.Name.Local == "\u007a" {
			_efeg, _faecg := ParseUnionST_Coordinate(_fbfab.Value)
			if _faecg != nil {
				return _faecg
			}
			_deafa.ZAttr = &_efeg
			continue
		}
		if _fbfab.Name.Local == "\u0065\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0048" {
			_ggaga, _dacgf := _c.ParseInt(_fbfab.Value, 10, 64)
			if _dacgf != nil {
				return _dacgf
			}
			_deafa.ExtrusionHAttr = &_ggaga
			continue
		}
		if _fbfab.Name.Local == "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0057" {
			_cedda, _eafed := _c.ParseInt(_fbfab.Value, 10, 64)
			if _eafed != nil {
				return _eafed
			}
			_deafa.ContourWAttr = &_cedda
			continue
		}
		if _fbfab.Name.Local == "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c" {
			_deafa.PrstMaterialAttr.UnmarshalXMLAttr(_fbfab)
			continue
		}
	}
_bbgca:
	for {
		_bedb, _cgbcb := d.Token()
		if _cgbcb != nil {
			return _cgbcb
		}
		switch _defbf := _bedb.(type) {
		case _g.StartElement:
			switch _defbf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0054"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0054"}:
				_deafa.BevelT = NewCT_Bevel()
				if _ebeefg := d.DecodeElement(_deafa.BevelT, &_defbf); _ebeefg != nil {
					return _ebeefg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0042"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0042"}:
				_deafa.BevelB = NewCT_Bevel()
				if _deaeb := d.DecodeElement(_deafa.BevelB, &_defbf); _deaeb != nil {
					return _deaeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074r\u0075\u0073\u0069\u006f\u006e\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074r\u0075\u0073\u0069\u006f\u006e\u0043\u006c\u0072"}:
				_deafa.ExtrusionClr = NewCT_Color()
				if _dgea := d.DecodeElement(_deafa.ExtrusionClr, &_defbf); _dgea != nil {
					return _dgea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"}:
				_deafa.ContourClr = NewCT_Color()
				if _cadef := d.DecodeElement(_deafa.ContourClr, &_defbf); _cadef != nil {
					return _cadef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_deafa.ExtLst = NewCT_OfficeArtExtensionList()
				if _caaea := d.DecodeElement(_deafa.ExtLst, &_defbf); _caaea != nil {
					return _caaea
				}
			default:
				_b.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0068\u0061\u0070\u0065\u0033\u0044\u0020\u0025\u0076", _defbf.Name)
				if _dedaf := d.Skip(); _dedaf != nil {
					return _dedaf
				}
			}
		case _g.EndElement:
			break _bbgca
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Shape3D and its children
func (_bebgg *CT_Shape3D) Validate() error {
	return _bebgg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0033\u0044")
}

// ValidateWithPath validates the CT_Connection and its children, prefixing error messages with path
func (_accbc *CT_Connection) ValidateWithPath(path string) error { return nil }

func (_dafc *CT_GvmlConnectorNonVisual) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_ebdgf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_dafc.CNvPr, _ebdgf)
	_fcgd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063N\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_dafc.CNvCxnSpPr, _fcgd)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fggcab ST_PresetLineDashVal) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fggcab.String(), start)
}

const (
	ST_RectAlignmentUnset ST_RectAlignment = 0
	ST_RectAlignmentTl    ST_RectAlignment = 1
	ST_RectAlignmentT     ST_RectAlignment = 2
	ST_RectAlignmentTr    ST_RectAlignment = 3
	ST_RectAlignmentL     ST_RectAlignment = 4
	ST_RectAlignmentCtr   ST_RectAlignment = 5
	ST_RectAlignmentR     ST_RectAlignment = 6
	ST_RectAlignmentBl    ST_RectAlignment = 7
	ST_RectAlignmentB     ST_RectAlignment = 8
	ST_RectAlignmentBr    ST_RectAlignment = 9
)

func ParseUnionST_Coordinate32(s string) (ST_Coordinate32, error) {
	_feecff := ST_Coordinate32{}
	if _ge.ST_UniversalMeasurePatternRe.MatchString(s) {
		_feecff.ST_UniversalMeasure = &s
	} else {
		_caedfe, _cfgcbg := _c.ParseInt(s, 10, 32)
		if _cfgcbg != nil {
			return _feecff, _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _cfgcbg)
		}
		_gaagf := int32(_caedfe)
		_feecff.ST_Coordinate32Unqualified = &_gaagf
	}
	return _feecff, nil
}

type CT_PresetTextShape struct {
	PrstAttr ST_TextShapeType
	AvLst    *CT_GeomGuideList
}

func (_edabe *CT_LightRig) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_edabe.RigAttr = ST_LightRigType(1)
	_edabe.DirAttr = ST_LightRigDirection(1)
	for _, _feabbe := range start.Attr {
		if _feabbe.Name.Local == "\u0072\u0069\u0067" {
			_edabe.RigAttr.UnmarshalXMLAttr(_feabbe)
			continue
		}
		if _feabbe.Name.Local == "\u0064\u0069\u0072" {
			_edabe.DirAttr.UnmarshalXMLAttr(_feabbe)
			continue
		}
	}
_gdcfb:
	for {
		_aaacc, _efcbb := d.Token()
		if _efcbb != nil {
			return _efcbb
		}
		switch _deef := _aaacc.(type) {
		case _g.StartElement:
			switch _deef.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}:
				_edabe.Rot = NewCT_SphereCoords()
				if _cagg := d.DecodeElement(_edabe.Rot, &_deef); _cagg != nil {
					return _cagg
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u0067\u0068\u0074\u0052\u0069\u0067\u0020\u0025\u0076", _deef.Name)
				if _bggbe := d.Skip(); _bggbe != nil {
					return _bggbe
				}
			}
		case _g.EndElement:
			break _gdcfb
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_BlurEffect and its children
func (_gbdg *CT_BlurEffect) Validate() error {
	return _gbdg.ValidateWithPath("\u0043\u0054\u005f\u0042\u006c\u0075\u0072\u0045\u0066\u0066\u0065\u0063\u0074")
}

type EG_Effect struct {
	Cont         *CT_EffectContainer
	Effect       *CT_EffectReference
	AlphaBiLevel *CT_AlphaBiLevelEffect
	AlphaCeiling *CT_AlphaCeilingEffect
	AlphaFloor   *CT_AlphaFloorEffect
	AlphaInv     *CT_AlphaInverseEffect
	AlphaMod     *CT_AlphaModulateEffect
	AlphaModFix  *CT_AlphaModulateFixedEffect
	AlphaOutset  *CT_AlphaOutsetEffect
	AlphaRepl    *CT_AlphaReplaceEffect
	BiLevel      *CT_BiLevelEffect
	Blend        *CT_BlendEffect
	Blur         *CT_BlurEffect
	ClrChange    *CT_ColorChangeEffect
	ClrRepl      *CT_ColorReplaceEffect
	Duotone      *CT_DuotoneEffect
	Fill         *CT_FillEffect
	FillOverlay  *CT_FillOverlayEffect
	Glow         *CT_GlowEffect
	Grayscl      *CT_GrayscaleEffect
	Hsl          *CT_HSLEffect
	InnerShdw    *CT_InnerShadowEffect
	Lum          *CT_LuminanceEffect
	OuterShdw    *CT_OuterShadowEffect
	PrstShdw     *CT_PresetShadowEffect
	Reflection   *CT_ReflectionEffect
	RelOff       *CT_RelativeOffsetEffect
	SoftEdge     *CT_SoftEdgesEffect
	Tint         *CT_TintEffect
	Xfrm         *CT_TransformEffect
}

func (_fgagdg *CT_InnerShadowEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fgagdg.BlurRadAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062l\u0075\u0072\u0052\u0061\u0064"}, Value: _gf.Sprintf("\u0025\u0076", *_fgagdg.BlurRadAttr)})
	}
	if _fgagdg.DistAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _gf.Sprintf("\u0025\u0076", *_fgagdg.DistAttr)})
	}
	if _fgagdg.DirAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0072"}, Value: _gf.Sprintf("\u0025\u0076", *_fgagdg.DirAttr)})
	}
	e.EncodeToken(start)
	if _fgagdg.ScrgbClr != nil {
		_eccf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_fgagdg.ScrgbClr, _eccf)
	}
	if _fgagdg.SrgbClr != nil {
		_ebdf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_fgagdg.SrgbClr, _ebdf)
	}
	if _fgagdg.HslClr != nil {
		_bfgbc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_fgagdg.HslClr, _bfgbc)
	}
	if _fgagdg.SysClr != nil {
		_daccc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_fgagdg.SysClr, _daccc)
	}
	if _fgagdg.SchemeClr != nil {
		_aaac := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_fgagdg.SchemeClr, _aaac)
	}
	if _fgagdg.PrstClr != nil {
		_befef := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_fgagdg.PrstClr, _befef)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_PathFillModeUnset       ST_PathFillMode = 0
	ST_PathFillModeNone        ST_PathFillMode = 1
	ST_PathFillModeNorm        ST_PathFillMode = 2
	ST_PathFillModeLighten     ST_PathFillMode = 3
	ST_PathFillModeLightenLess ST_PathFillMode = 4
	ST_PathFillModeDarken      ST_PathFillMode = 5
	ST_PathFillModeDarkenLess  ST_PathFillMode = 6
)

func (_cdgcf *ThemeOverride) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061:\u0074h\u0065\u006d\u0065\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"
	return _cdgcf.CT_BaseStylesOverride.MarshalXML(e, start)
}

type CT_TableGrid struct{ GridCol []*CT_TableCol }

// ValidateWithPath validates the CT_ClipboardStyleSheet and its children, prefixing error messages with path
func (_ffaba *CT_ClipboardStyleSheet) ValidateWithPath(path string) error {
	if _aeedb := _ffaba.ThemeElements.ValidateWithPath(path + "\u002f\u0054\u0068\u0065\u006d\u0065\u0045\u006c\u0065m\u0065\u006e\u0074\u0073"); _aeedb != nil {
		return _aeedb
	}
	if _ddgea := _ffaba.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _ddgea != nil {
		return _ddgea
	}
	return nil
}

func (_bbace *CT_GvmlTextShape) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_aabdc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0078\u0042\u006f\u0064\u0079"}}
	e.EncodeElement(_bbace.TxBody, _aabdc)
	if _bbace.Choice != nil {
		_bbace.Choice.MarshalXML(e, _g.StartElement{})
	}
	if _bbace.ExtLst != nil {
		_eced := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bbace.ExtLst, _eced)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_TextUnderlineFillGroupWrapper struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

func (_aecebe ST_PathShadeType) Validate() error { return _aecebe.ValidateWithPath("") }

// ValidateWithPath validates the CT_TableStyleTextStyle and its children, prefixing error messages with path
func (_ggddgg *CT_TableStyleTextStyle) ValidateWithPath(path string) error {
	if _ccaed := _ggddgg.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _ccaed != nil {
		return _ccaed
	}
	if _bcfce := _ggddgg.IAttr.ValidateWithPath(path + "\u002f\u0049\u0041\u0074\u0074\u0072"); _bcfce != nil {
		return _bcfce
	}
	if _ggddgg.Font != nil {
		if _gcbcb := _ggddgg.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _gcbcb != nil {
			return _gcbcb
		}
	}
	if _ggddgg.FontRef != nil {
		if _gbcfff := _ggddgg.FontRef.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0052\u0065\u0066"); _gbcfff != nil {
			return _gbcfff
		}
	}
	if _ggddgg.ScrgbClr != nil {
		if _agcdc := _ggddgg.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _agcdc != nil {
			return _agcdc
		}
	}
	if _ggddgg.SrgbClr != nil {
		if _fdgee := _ggddgg.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _fdgee != nil {
			return _fdgee
		}
	}
	if _ggddgg.HslClr != nil {
		if _gecbe := _ggddgg.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _gecbe != nil {
			return _gecbe
		}
	}
	if _ggddgg.SysClr != nil {
		if _dabdb := _ggddgg.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _dabdb != nil {
			return _dabdb
		}
	}
	if _ggddgg.SchemeClr != nil {
		if _aggaab := _ggddgg.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _aggaab != nil {
			return _aggaab
		}
	}
	if _ggddgg.PrstClr != nil {
		if _fcaff := _ggddgg.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _fcaff != nil {
			return _fcaff
		}
	}
	if _ggddgg.ExtLst != nil {
		if _acdbg := _ggddgg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acdbg != nil {
			return _acdbg
		}
	}
	return nil
}

func (_fee *CT_Camera) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fee.PrstAttr = ST_PresetCameraType(1)
	for _, _fabc := range start.Attr {
		if _fabc.Name.Local == "\u0070\u0072\u0073\u0074" {
			_fee.PrstAttr.UnmarshalXMLAttr(_fabc)
			continue
		}
		if _fabc.Name.Local == "\u0066\u006f\u0076" {
			_eagd, _caaec := _c.ParseInt(_fabc.Value, 10, 32)
			if _caaec != nil {
				return _caaec
			}
			_cccf := int32(_eagd)
			_fee.FovAttr = &_cccf
			continue
		}
		if _fabc.Name.Local == "\u007a\u006f\u006f\u006d" {
			_ceed, _bdad := ParseUnionST_PositivePercentage(_fabc.Value)
			if _bdad != nil {
				return _bdad
			}
			_fee.ZoomAttr = &_ceed
			continue
		}
	}
_gace:
	for {
		_ecfd, _ebbd := d.Token()
		if _ebbd != nil {
			return _ebbd
		}
		switch _effa := _ecfd.(type) {
		case _g.StartElement:
			switch _effa.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}:
				_fee.Rot = NewCT_SphereCoords()
				if _acgdd := d.DecodeElement(_fee.Rot, &_effa); _acgdd != nil {
					return _acgdd
				}
			default:
				_b.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u0061\u006de\u0072\u0061 \u0025\u0076", _effa.Name)
				if _ebdc := d.Skip(); _ebdc != nil {
					return _ebdc
				}
			}
		case _g.EndElement:
			break _gace
		case _g.CharData:
		}
	}
	return nil
}

func (_efg *Blip) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_efg.CT_Blip = *NewCT_Blip()
	for _, _ecg := range start.Attr {
		if _ecg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ecg.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_ed, _ecea := _ecg.Value, error(nil)
			if _ecea != nil {
				return _ecea
			}
			_efg.EmbedAttr = &_ed
			continue
		}
		if _ecg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ecg.Name.Local == "\u006c\u0069\u006e\u006b" {
			_cc, _fda := _ecg.Value, error(nil)
			if _fda != nil {
				return _fda
			}
			_efg.LinkAttr = &_cc
			continue
		}
		if _ecg.Name.Local == "\u0063\u0073\u0074\u0061\u0074\u0065" {
			_efg.CstateAttr.UnmarshalXMLAttr(_ecg)
			continue
		}
	}
_daf:
	for {
		_dgcg, _cgd := d.Token()
		if _cgd != nil {
			return _cgd
		}
		switch _ce := _dgcg.(type) {
		case _g.StartElement:
			switch _ce.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_bb := NewCT_BlipChoice()
				if _gg := d.DecodeElement(&_bb.AlphaBiLevel, &_ce); _gg != nil {
					return _gg
				}
				_efg.Choice = append(_efg.Choice, _bb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_efb := NewCT_BlipChoice()
				if _gcb := d.DecodeElement(&_efb.AlphaCeiling, &_ce); _gcb != nil {
					return _gcb
				}
				_efg.Choice = append(_efg.Choice, _efb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_gec := NewCT_BlipChoice()
				if _dab := d.DecodeElement(&_gec.AlphaFloor, &_ce); _dab != nil {
					return _dab
				}
				_efg.Choice = append(_efg.Choice, _gec)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_bd := NewCT_BlipChoice()
				if _dafa := d.DecodeElement(&_bd.AlphaInv, &_ce); _dafa != nil {
					return _dafa
				}
				_efg.Choice = append(_efg.Choice, _bd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_aga := NewCT_BlipChoice()
				if _agc := d.DecodeElement(&_aga.AlphaMod, &_ce); _agc != nil {
					return _agc
				}
				_efg.Choice = append(_efg.Choice, _aga)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_ecb := NewCT_BlipChoice()
				if _acg := d.DecodeElement(&_ecb.AlphaModFix, &_ce); _acg != nil {
					return _acg
				}
				_efg.Choice = append(_efg.Choice, _ecb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_ab := NewCT_BlipChoice()
				if _ceb := d.DecodeElement(&_ab.AlphaRepl, &_ce); _ceb != nil {
					return _ceb
				}
				_efg.Choice = append(_efg.Choice, _ab)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_fg := NewCT_BlipChoice()
				if _adg := d.DecodeElement(&_fg.BiLevel, &_ce); _adg != nil {
					return _adg
				}
				_efg.Choice = append(_efg.Choice, _fg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_bdb := NewCT_BlipChoice()
				if _bg := d.DecodeElement(&_bdb.Blur, &_ce); _bg != nil {
					return _bg
				}
				_efg.Choice = append(_efg.Choice, _bdb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_ddg := NewCT_BlipChoice()
				if _ade := d.DecodeElement(&_ddg.ClrChange, &_ce); _ade != nil {
					return _ade
				}
				_efg.Choice = append(_efg.Choice, _ddg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_abd := NewCT_BlipChoice()
				if _acf := d.DecodeElement(&_abd.ClrRepl, &_ce); _acf != nil {
					return _acf
				}
				_efg.Choice = append(_efg.Choice, _abd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_fga := NewCT_BlipChoice()
				if _db := d.DecodeElement(&_fga.Duotone, &_ce); _db != nil {
					return _db
				}
				_efg.Choice = append(_efg.Choice, _fga)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_abc := NewCT_BlipChoice()
				if _bgg := d.DecodeElement(&_abc.FillOverlay, &_ce); _bgg != nil {
					return _bgg
				}
				_efg.Choice = append(_efg.Choice, _abc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_aegd := NewCT_BlipChoice()
				if _bfd := d.DecodeElement(&_aegd.Grayscl, &_ce); _bfd != nil {
					return _bfd
				}
				_efg.Choice = append(_efg.Choice, _aegd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_fdg := NewCT_BlipChoice()
				if _ffc := d.DecodeElement(&_fdg.Hsl, &_ce); _ffc != nil {
					return _ffc
				}
				_efg.Choice = append(_efg.Choice, _fdg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_cf := NewCT_BlipChoice()
				if _ffd := d.DecodeElement(&_cf.Lum, &_ce); _ffd != nil {
					return _ffd
				}
				_efg.Choice = append(_efg.Choice, _cf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_be := NewCT_BlipChoice()
				if _cce := d.DecodeElement(&_be.Tint, &_ce); _cce != nil {
					return _cce
				}
				_efg.Choice = append(_efg.Choice, _be)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efg.ExtLst = NewCT_OfficeArtExtensionList()
				if _agb := d.DecodeElement(_efg.ExtLst, &_ce); _agb != nil {
					return _agb
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0042\u006ci\u0070\u0020\u0025\u0076", _ce.Name)
				if _gaad := d.Skip(); _gaad != nil {
					return _gaad
				}
			}
		case _g.EndElement:
			break _daf
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_Angle() *CT_Angle { _adgg := &CT_Angle{}; return _adgg }

func (_effg *CT_EffectContainer) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fceeg := range start.Attr {
		if _fceeg.Name.Local == "\u0074\u0079\u0070\u0065" {
			_effg.TypeAttr.UnmarshalXMLAttr(_fceeg)
			continue
		}
		if _fceeg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gggc, _gbedf := _fceeg.Value, error(nil)
			if _gbedf != nil {
				return _gbedf
			}
			_effg.NameAttr = &_gggc
			continue
		}
	}
_ffdg:
	for {
		_edee, _abfbc := d.Token()
		if _abfbc != nil {
			return _abfbc
		}
		switch _abdgd := _edee.(type) {
		case _g.StartElement:
			switch _abdgd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				_effg.Cont = NewCT_EffectContainer()
				if _gbaa := d.DecodeElement(_effg.Cont, &_abdgd); _gbaa != nil {
					return _gbaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_effg.Effect = NewCT_EffectReference()
				if _cfea := d.DecodeElement(_effg.Effect, &_abdgd); _cfea != nil {
					return _cfea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_effg.AlphaBiLevel = NewCT_AlphaBiLevelEffect()
				if _fbfc := d.DecodeElement(_effg.AlphaBiLevel, &_abdgd); _fbfc != nil {
					return _fbfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_effg.AlphaCeiling = NewCT_AlphaCeilingEffect()
				if _ddbc := d.DecodeElement(_effg.AlphaCeiling, &_abdgd); _ddbc != nil {
					return _ddbc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_effg.AlphaFloor = NewCT_AlphaFloorEffect()
				if _adgdc := d.DecodeElement(_effg.AlphaFloor, &_abdgd); _adgdc != nil {
					return _adgdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_effg.AlphaInv = NewCT_AlphaInverseEffect()
				if _fgad := d.DecodeElement(_effg.AlphaInv, &_abdgd); _fgad != nil {
					return _fgad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_effg.AlphaMod = NewCT_AlphaModulateEffect()
				if _dagaf := d.DecodeElement(_effg.AlphaMod, &_abdgd); _dagaf != nil {
					return _dagaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_effg.AlphaModFix = NewCT_AlphaModulateFixedEffect()
				if _ddbba := d.DecodeElement(_effg.AlphaModFix, &_abdgd); _ddbba != nil {
					return _ddbba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}:
				_effg.AlphaOutset = NewCT_AlphaOutsetEffect()
				if _aadcg := d.DecodeElement(_effg.AlphaOutset, &_abdgd); _aadcg != nil {
					return _aadcg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_effg.AlphaRepl = NewCT_AlphaReplaceEffect()
				if _cegb := d.DecodeElement(_effg.AlphaRepl, &_abdgd); _cegb != nil {
					return _cegb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_effg.BiLevel = NewCT_BiLevelEffect()
				if _eedgg := d.DecodeElement(_effg.BiLevel, &_abdgd); _eedgg != nil {
					return _eedgg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}:
				_effg.Blend = NewCT_BlendEffect()
				if _gfff := d.DecodeElement(_effg.Blend, &_abdgd); _gfff != nil {
					return _gfff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_effg.Blur = NewCT_BlurEffect()
				if _gddf := d.DecodeElement(_effg.Blur, &_abdgd); _gddf != nil {
					return _gddf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_effg.ClrChange = NewCT_ColorChangeEffect()
				if _aaaa := d.DecodeElement(_effg.ClrChange, &_abdgd); _aaaa != nil {
					return _aaaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_effg.ClrRepl = NewCT_ColorReplaceEffect()
				if _bead := d.DecodeElement(_effg.ClrRepl, &_abdgd); _bead != nil {
					return _bead
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_effg.Duotone = NewCT_DuotoneEffect()
				if _bgffe := d.DecodeElement(_effg.Duotone, &_abdgd); _bgffe != nil {
					return _bgffe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_effg.Fill = NewCT_FillEffect()
				if _ebge := d.DecodeElement(_effg.Fill, &_abdgd); _ebge != nil {
					return _ebge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_effg.FillOverlay = NewCT_FillOverlayEffect()
				if _eeca := d.DecodeElement(_effg.FillOverlay, &_abdgd); _eeca != nil {
					return _eeca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}:
				_effg.Glow = NewCT_GlowEffect()
				if _adgc := d.DecodeElement(_effg.Glow, &_abdgd); _adgc != nil {
					return _adgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_effg.Grayscl = NewCT_GrayscaleEffect()
				if _agdc := d.DecodeElement(_effg.Grayscl, &_abdgd); _agdc != nil {
					return _agdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_effg.Hsl = NewCT_HSLEffect()
				if _egeg := d.DecodeElement(_effg.Hsl, &_abdgd); _egeg != nil {
					return _egeg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}:
				_effg.InnerShdw = NewCT_InnerShadowEffect()
				if _ebbdd := d.DecodeElement(_effg.InnerShdw, &_abdgd); _ebbdd != nil {
					return _ebbdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_effg.Lum = NewCT_LuminanceEffect()
				if _bfca := d.DecodeElement(_effg.Lum, &_abdgd); _bfca != nil {
					return _bfca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}:
				_effg.OuterShdw = NewCT_OuterShadowEffect()
				if _gdede := d.DecodeElement(_effg.OuterShdw, &_abdgd); _gdede != nil {
					return _gdede
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}:
				_effg.PrstShdw = NewCT_PresetShadowEffect()
				if _aadb := d.DecodeElement(_effg.PrstShdw, &_abdgd); _aadb != nil {
					return _aadb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_effg.Reflection = NewCT_ReflectionEffect()
				if _cfee := d.DecodeElement(_effg.Reflection, &_abdgd); _cfee != nil {
					return _cfee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}:
				_effg.RelOff = NewCT_RelativeOffsetEffect()
				if _abcf := d.DecodeElement(_effg.RelOff, &_abdgd); _abcf != nil {
					return _abcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}:
				_effg.SoftEdge = NewCT_SoftEdgesEffect()
				if _gade := d.DecodeElement(_effg.SoftEdge, &_abdgd); _gade != nil {
					return _gade
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_effg.Tint = NewCT_TintEffect()
				if _afcf := d.DecodeElement(_effg.Tint, &_abdgd); _afcf != nil {
					return _afcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_effg.Xfrm = NewCT_TransformEffect()
				if _cffb := d.DecodeElement(_effg.Xfrm, &_abdgd); _cffb != nil {
					return _cffb
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0025\u0076", _abdgd.Name)
				if _baaa := d.Skip(); _baaa != nil {
					return _baaa
				}
			}
		case _g.EndElement:
			break _ffdg
		case _g.CharData:
		}
	}
	return nil
}

type CT_GlowEffect struct {
	RadAttr   *int64
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_bdbebf *CT_Point3D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078"}, Value: _gf.Sprintf("\u0025\u0076", _bdbebf.XAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0079"}, Value: _gf.Sprintf("\u0025\u0076", _bdbebf.YAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u007a"}, Value: _gf.Sprintf("\u0025\u0076", _bdbebf.ZAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_PresetShadowValUnset  ST_PresetShadowVal = 0
	ST_PresetShadowValShdw1  ST_PresetShadowVal = 1
	ST_PresetShadowValShdw2  ST_PresetShadowVal = 2
	ST_PresetShadowValShdw3  ST_PresetShadowVal = 3
	ST_PresetShadowValShdw4  ST_PresetShadowVal = 4
	ST_PresetShadowValShdw5  ST_PresetShadowVal = 5
	ST_PresetShadowValShdw6  ST_PresetShadowVal = 6
	ST_PresetShadowValShdw7  ST_PresetShadowVal = 7
	ST_PresetShadowValShdw8  ST_PresetShadowVal = 8
	ST_PresetShadowValShdw9  ST_PresetShadowVal = 9
	ST_PresetShadowValShdw10 ST_PresetShadowVal = 10
	ST_PresetShadowValShdw11 ST_PresetShadowVal = 11
	ST_PresetShadowValShdw12 ST_PresetShadowVal = 12
	ST_PresetShadowValShdw13 ST_PresetShadowVal = 13
	ST_PresetShadowValShdw14 ST_PresetShadowVal = 14
	ST_PresetShadowValShdw15 ST_PresetShadowVal = 15
	ST_PresetShadowValShdw16 ST_PresetShadowVal = 16
	ST_PresetShadowValShdw17 ST_PresetShadowVal = 17
	ST_PresetShadowValShdw18 ST_PresetShadowVal = 18
	ST_PresetShadowValShdw19 ST_PresetShadowVal = 19
	ST_PresetShadowValShdw20 ST_PresetShadowVal = 20
)

type ST_TextVertOverflowType byte

type CT_ShapeProperties struct {
	BwModeAttr ST_BlackWhiteMode
	Xfrm       *CT_Transform2D
	CustGeom   *CT_CustomGeometry2D
	PrstGeom   *CT_PresetGeometry2D
	NoFill     *CT_NoFillProperties
	SolidFill  *CT_SolidColorFillProperties
	GradFill   *CT_GradientFillProperties
	BlipFill   *CT_BlipFillProperties
	PattFill   *CT_PatternFillProperties
	GrpFill    *CT_GroupFillProperties
	Ln         *CT_LineProperties
	EffectLst  *CT_EffectList
	EffectDag  *CT_EffectContainer
	Scene3d    *CT_Scene3D
	Sp3d       *CT_Shape3D
	ExtLst     *CT_OfficeArtExtensionList
}

func (_cadad *CT_BlipChoice) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fcfe:
	for {
		_bcbg, _bfbg := d.Token()
		if _bfbg != nil {
			return _bfbg
		}
		switch _cddf := _bcbg.(type) {
		case _g.StartElement:
			switch _cddf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_accg := NewCT_AlphaBiLevelEffect()
				if _cffg := d.DecodeElement(_accg, &_cddf); _cffg != nil {
					return _cffg
				}
				_cadad.AlphaBiLevel = append(_cadad.AlphaBiLevel, _accg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_cea := NewCT_AlphaCeilingEffect()
				if _gcfa := d.DecodeElement(_cea, &_cddf); _gcfa != nil {
					return _gcfa
				}
				_cadad.AlphaCeiling = append(_cadad.AlphaCeiling, _cea)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_dffb := NewCT_AlphaFloorEffect()
				if _fef := d.DecodeElement(_dffb, &_cddf); _fef != nil {
					return _fef
				}
				_cadad.AlphaFloor = append(_cadad.AlphaFloor, _dffb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_fgcb := NewCT_AlphaInverseEffect()
				if _feabc := d.DecodeElement(_fgcb, &_cddf); _feabc != nil {
					return _feabc
				}
				_cadad.AlphaInv = append(_cadad.AlphaInv, _fgcb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_ceff := NewCT_AlphaModulateEffect()
				if _bgbd := d.DecodeElement(_ceff, &_cddf); _bgbd != nil {
					return _bgbd
				}
				_cadad.AlphaMod = append(_cadad.AlphaMod, _ceff)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_eeda := NewCT_AlphaModulateFixedEffect()
				if _fgbb := d.DecodeElement(_eeda, &_cddf); _fgbb != nil {
					return _fgbb
				}
				_cadad.AlphaModFix = append(_cadad.AlphaModFix, _eeda)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_gbbc := NewCT_AlphaReplaceEffect()
				if _bbb := d.DecodeElement(_gbbc, &_cddf); _bbb != nil {
					return _bbb
				}
				_cadad.AlphaRepl = append(_cadad.AlphaRepl, _gbbc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_eecf := NewCT_BiLevelEffect()
				if _cbff := d.DecodeElement(_eecf, &_cddf); _cbff != nil {
					return _cbff
				}
				_cadad.BiLevel = append(_cadad.BiLevel, _eecf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_agfc := NewCT_BlurEffect()
				if _efec := d.DecodeElement(_agfc, &_cddf); _efec != nil {
					return _efec
				}
				_cadad.Blur = append(_cadad.Blur, _agfc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_ddcf := NewCT_ColorChangeEffect()
				if _cdba := d.DecodeElement(_ddcf, &_cddf); _cdba != nil {
					return _cdba
				}
				_cadad.ClrChange = append(_cadad.ClrChange, _ddcf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_aebg := NewCT_ColorReplaceEffect()
				if _dcgg := d.DecodeElement(_aebg, &_cddf); _dcgg != nil {
					return _dcgg
				}
				_cadad.ClrRepl = append(_cadad.ClrRepl, _aebg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_gfbeb := NewCT_DuotoneEffect()
				if _ddcc := d.DecodeElement(_gfbeb, &_cddf); _ddcc != nil {
					return _ddcc
				}
				_cadad.Duotone = append(_cadad.Duotone, _gfbeb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_bdab := NewCT_FillOverlayEffect()
				if _dcbfb := d.DecodeElement(_bdab, &_cddf); _dcbfb != nil {
					return _dcbfb
				}
				_cadad.FillOverlay = append(_cadad.FillOverlay, _bdab)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_cgbd := NewCT_GrayscaleEffect()
				if _acd := d.DecodeElement(_cgbd, &_cddf); _acd != nil {
					return _acd
				}
				_cadad.Grayscl = append(_cadad.Grayscl, _cgbd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_aaec := NewCT_HSLEffect()
				if _baaf := d.DecodeElement(_aaec, &_cddf); _baaf != nil {
					return _baaf
				}
				_cadad.Hsl = append(_cadad.Hsl, _aaec)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_gggga := NewCT_LuminanceEffect()
				if _efed := d.DecodeElement(_gggga, &_cddf); _efed != nil {
					return _efed
				}
				_cadad.Lum = append(_cadad.Lum, _gggga)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_dcfeb := NewCT_TintEffect()
				if _afa := d.DecodeElement(_dcfeb, &_cddf); _afa != nil {
					return _afa
				}
				_cadad.Tint = append(_cadad.Tint, _dcfeb)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042l\u0069\u0070\u0043\u0068\u006f\u0069\u0063\u0065 \u0025\u0076", _cddf.Name)
				if _eecfg := d.Skip(); _eecfg != nil {
					return _eecfg
				}
			}
		case _g.EndElement:
			break _fcfe
		case _g.CharData:
		}
	}
	return nil
}

func (_agfeg *CT_TableStyleTextStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cffega := range start.Attr {
		if _cffega.Name.Local == "\u0062" {
			_agfeg.BAttr.UnmarshalXMLAttr(_cffega)
			continue
		}
		if _cffega.Name.Local == "\u0069" {
			_agfeg.IAttr.UnmarshalXMLAttr(_cffega)
			continue
		}
	}
_agdee:
	for {
		_debcg, _fggdcb := d.Token()
		if _fggdcb != nil {
			return _fggdcb
		}
		switch _gfgfbf := _debcg.(type) {
		case _g.StartElement:
			switch _gfgfbf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_agfeg.Font = NewCT_FontCollection()
				if _gdecce := d.DecodeElement(_agfeg.Font, &_gfgfbf); _gdecce != nil {
					return _gdecce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}:
				_agfeg.FontRef = NewCT_FontReference()
				if _fbafc := d.DecodeElement(_agfeg.FontRef, &_gfgfbf); _fbafc != nil {
					return _fbafc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_agfeg.ScrgbClr = NewCT_ScRgbColor()
				if _ecfge := d.DecodeElement(_agfeg.ScrgbClr, &_gfgfbf); _ecfge != nil {
					return _ecfge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_agfeg.SrgbClr = NewCT_SRgbColor()
				if _gdebf := d.DecodeElement(_agfeg.SrgbClr, &_gfgfbf); _gdebf != nil {
					return _gdebf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_agfeg.HslClr = NewCT_HslColor()
				if _eggac := d.DecodeElement(_agfeg.HslClr, &_gfgfbf); _eggac != nil {
					return _eggac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_agfeg.SysClr = NewCT_SystemColor()
				if _aeedbf := d.DecodeElement(_agfeg.SysClr, &_gfgfbf); _aeedbf != nil {
					return _aeedbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_agfeg.SchemeClr = NewCT_SchemeColor()
				if _gadab := d.DecodeElement(_agfeg.SchemeClr, &_gfgfbf); _gadab != nil {
					return _gadab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_agfeg.PrstClr = NewCT_PresetColor()
				if _ffeeb := d.DecodeElement(_agfeg.PrstClr, &_gfgfbf); _ffeeb != nil {
					return _ffeeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agfeg.ExtLst = NewCT_OfficeArtExtensionList()
				if _eeaef := d.DecodeElement(_agfeg.ExtLst, &_gfgfbf); _eeaef != nil {
					return _eeaef
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u0061\u0062\u006ce\u0053\u0074\u0079\u006c\u0065\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _gfgfbf.Name)
				if _cfgdd := d.Skip(); _cfgdd != nil {
					return _cfgdd
				}
			}
		case _g.EndElement:
			break _agdee
		case _g.CharData:
		}
	}
	return nil
}

func (_ffbbbc ST_AnimationBuildType) Validate() error { return _ffbbbc.ValidateWithPath("") }

// ST_AdjAngle is a union type
type ST_AdjAngle struct {
	ST_Angle         *int32
	ST_GeomGuideName *string
}

func (_bcadd *CT_ShapeProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bcadd.BwModeAttr != ST_BlackWhiteModeUnset {
		_ffeab, _abdf := _bcadd.BwModeAttr.MarshalXMLAttr(_g.Name{Local: "\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _abdf != nil {
			return _abdf
		}
		start.Attr = append(start.Attr, _ffeab)
	}
	e.EncodeToken(start)
	if _bcadd.Xfrm != nil {
		_ecdcg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_bcadd.Xfrm, _ecdcg)
	}
	if _bcadd.CustGeom != nil {
		_dbebe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_bcadd.CustGeom, _dbebe)
	}
	if _bcadd.PrstGeom != nil {
		_gefaf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_bcadd.PrstGeom, _gefaf)
	}
	if _bcadd.NoFill != nil {
		_fdabg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bcadd.NoFill, _fdabg)
	}
	if _bcadd.SolidFill != nil {
		_fgecd := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bcadd.SolidFill, _fgecd)
	}
	if _bcadd.GradFill != nil {
		_befec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bcadd.GradFill, _befec)
	}
	if _bcadd.BlipFill != nil {
		_fbff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bcadd.BlipFill, _fbff)
	}
	if _bcadd.PattFill != nil {
		_bcegf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bcadd.PattFill, _bcegf)
	}
	if _bcadd.GrpFill != nil {
		_dcggae := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_bcadd.GrpFill, _dcggae)
	}
	if _bcadd.Ln != nil {
		_bege := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_bcadd.Ln, _bege)
	}
	if _bcadd.EffectLst != nil {
		_effbf := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bcadd.EffectLst, _effbf)
	}
	if _bcadd.EffectDag != nil {
		_baeb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_bcadd.EffectDag, _baeb)
	}
	if _bcadd.Scene3d != nil {
		_deadc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_bcadd.Scene3d, _deadc)
	}
	if _bcadd.Sp3d != nil {
		_eabab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_bcadd.Sp3d, _eabab)
	}
	if _bcadd.ExtLst != nil {
		_cdedg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bcadd.ExtLst, _cdedg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_abcg *CT_BlendEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_abcg.BlendAttr = ST_BlendMode(1)
	_abcg.Cont = NewCT_EffectContainer()
	for _, _efdd := range start.Attr {
		if _efdd.Name.Local == "\u0062\u006c\u0065n\u0064" {
			_abcg.BlendAttr.UnmarshalXMLAttr(_efdd)
			continue
		}
	}
_efbf:
	for {
		_gdbdg, _dcbb := d.Token()
		if _dcbb != nil {
			return _dcbb
		}
		switch _fdc := _gdbdg.(type) {
		case _g.StartElement:
			switch _fdc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				if _aefg := d.DecodeElement(_abcg.Cont, &_fdc); _aefg != nil {
					return _aefg
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006c\u0065\u006e\u0064\u0045\u0066f\u0065c\u0074\u0020\u0025\u0076", _fdc.Name)
				if _eedg := d.Skip(); _eedg != nil {
					return _eedg
				}
			}
		case _g.EndElement:
			break _efbf
		case _g.CharData:
		}
	}
	return nil
}

func (_baecg *CT_EffectStyleList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_aegea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065"}}
	for _, _ggcf := range _baecg.EffectStyle {
		e.EncodeElement(_ggcf, _aegea)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type ST_TextHorzOverflowType byte

type CT_TransformEffect struct {
	SxAttr *ST_Percentage
	SyAttr *ST_Percentage
	KxAttr *int32
	KyAttr *int32
	TxAttr *ST_Coordinate
	TyAttr *ST_Coordinate
}

func (_gdgadf *CT_TableCellBorderStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _gdgadf.Left != nil {
		_cfefd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u0065\u0066\u0074"}}
		e.EncodeElement(_gdgadf.Left, _cfefd)
	}
	if _gdgadf.Right != nil {
		_ceacg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0072\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_gdgadf.Right, _ceacg)
	}
	if _gdgadf.Top != nil {
		_bdcfeg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074o\u0070"}}
		e.EncodeElement(_gdgadf.Top, _bdcfeg)
	}
	if _gdgadf.Bottom != nil {
		_cafd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006f\u0074\u0074\u006f\u006d"}}
		e.EncodeElement(_gdgadf.Bottom, _cafd)
	}
	if _gdgadf.InsideH != nil {
		_fefgc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0069\u006e\u0073\u0069\u0064\u0065H"}}
		e.EncodeElement(_gdgadf.InsideH, _fefgc)
	}
	if _gdgadf.InsideV != nil {
		_gaged := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0069\u006e\u0073\u0069\u0064\u0065V"}}
		e.EncodeElement(_gdgadf.InsideV, _gaged)
	}
	if _gdgadf.Tl2br != nil {
		_dfced := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074\u006c\u0032\u0062\u0072"}}
		e.EncodeElement(_gdgadf.Tl2br, _dfced)
	}
	if _gdgadf.Tr2bl != nil {
		_dccbf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074\u0072\u0032\u0062\u006c"}}
		e.EncodeElement(_gdgadf.Tr2bl, _dccbf)
	}
	if _gdgadf.ExtLst != nil {
		_aagda := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gdgadf.ExtLst, _aagda)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_AnimationElementChoice and its children
func (_dbba *CT_AnimationElementChoice) Validate() error {
	return _dbba.ValidateWithPath("\u0043T\u005f\u0041\u006e\u0069m\u0061\u0074\u0069\u006f\u006eE\u006ce\u006de\u006e\u0074\u0043\u0068\u006f\u0069\u0063e")
}

func (_gfdge ST_PresetLineDashVal) String() string {
	switch _gfdge {
	case 0:
		return ""
	case 1:
		return "\u0073\u006f\u006ci\u0064"
	case 2:
		return "\u0064\u006f\u0074"
	case 3:
		return "\u0064\u0061\u0073\u0068"
	case 4:
		return "\u006c\u0067\u0044\u0061\u0073\u0068"
	case 5:
		return "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case 6:
		return "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft"
	case 7:
		return "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case 8:
		return "\u0073y\u0073\u0044\u0061\u0073\u0068"
	case 9:
		return "\u0073\u0079\u0073\u0044\u006f\u0074"
	case 10:
		return "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case 11:
		return "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	}
	return ""
}

func NewCT_GvmlGroupShapeNonVisual() *CT_GvmlGroupShapeNonVisual {
	_affgg := &CT_GvmlGroupShapeNonVisual{}
	_affgg.CNvPr = NewCT_NonVisualDrawingProps()
	_affgg.CNvGrpSpPr = NewCT_NonVisualGroupDrawingShapeProps()
	return _affgg
}

func (_dgecg ST_PenAlignment) ValidateWithPath(path string) error {
	switch _dgecg {
	case 0, 1, 2:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgecg))
	}
	return nil
}

const (
	ST_TextShapeTypeUnset                     ST_TextShapeType = 0
	ST_TextShapeTypeTextNoShape               ST_TextShapeType = 1
	ST_TextShapeTypeTextPlain                 ST_TextShapeType = 2
	ST_TextShapeTypeTextStop                  ST_TextShapeType = 3
	ST_TextShapeTypeTextTriangle              ST_TextShapeType = 4
	ST_TextShapeTypeTextTriangleInverted      ST_TextShapeType = 5
	ST_TextShapeTypeTextChevron               ST_TextShapeType = 6
	ST_TextShapeTypeTextChevronInverted       ST_TextShapeType = 7
	ST_TextShapeTypeTextRingInside            ST_TextShapeType = 8
	ST_TextShapeTypeTextRingOutside           ST_TextShapeType = 9
	ST_TextShapeTypeTextArchUp                ST_TextShapeType = 10
	ST_TextShapeTypeTextArchDown              ST_TextShapeType = 11
	ST_TextShapeTypeTextCircle                ST_TextShapeType = 12
	ST_TextShapeTypeTextButton                ST_TextShapeType = 13
	ST_TextShapeTypeTextArchUpPour            ST_TextShapeType = 14
	ST_TextShapeTypeTextArchDownPour          ST_TextShapeType = 15
	ST_TextShapeTypeTextCirclePour            ST_TextShapeType = 16
	ST_TextShapeTypeTextButtonPour            ST_TextShapeType = 17
	ST_TextShapeTypeTextCurveUp               ST_TextShapeType = 18
	ST_TextShapeTypeTextCurveDown             ST_TextShapeType = 19
	ST_TextShapeTypeTextCanUp                 ST_TextShapeType = 20
	ST_TextShapeTypeTextCanDown               ST_TextShapeType = 21
	ST_TextShapeTypeTextWave1                 ST_TextShapeType = 22
	ST_TextShapeTypeTextWave2                 ST_TextShapeType = 23
	ST_TextShapeTypeTextDoubleWave1           ST_TextShapeType = 24
	ST_TextShapeTypeTextWave4                 ST_TextShapeType = 25
	ST_TextShapeTypeTextInflate               ST_TextShapeType = 26
	ST_TextShapeTypeTextDeflate               ST_TextShapeType = 27
	ST_TextShapeTypeTextInflateBottom         ST_TextShapeType = 28
	ST_TextShapeTypeTextDeflateBottom         ST_TextShapeType = 29
	ST_TextShapeTypeTextInflateTop            ST_TextShapeType = 30
	ST_TextShapeTypeTextDeflateTop            ST_TextShapeType = 31
	ST_TextShapeTypeTextDeflateInflate        ST_TextShapeType = 32
	ST_TextShapeTypeTextDeflateInflateDeflate ST_TextShapeType = 33
	ST_TextShapeTypeTextFadeRight             ST_TextShapeType = 34
	ST_TextShapeTypeTextFadeLeft              ST_TextShapeType = 35
	ST_TextShapeTypeTextFadeUp                ST_TextShapeType = 36
	ST_TextShapeTypeTextFadeDown              ST_TextShapeType = 37
	ST_TextShapeTypeTextSlantUp               ST_TextShapeType = 38
	ST_TextShapeTypeTextSlantDown             ST_TextShapeType = 39
	ST_TextShapeTypeTextCascadeUp             ST_TextShapeType = 40
	ST_TextShapeTypeTextCascadeDown           ST_TextShapeType = 41
)

type CT_AudioFile struct {
	LinkAttr        string
	ContentTypeAttr *string
	ExtLst          *CT_OfficeArtExtensionList
}

func (_fgedg ST_TextCapsType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fgedg.String(), start)
}

type CT_TileInfoProperties struct {
	TxAttr   *ST_Coordinate
	TyAttr   *ST_Coordinate
	SxAttr   *ST_Percentage
	SyAttr   *ST_Percentage
	FlipAttr ST_TileFlipMode
	AlgnAttr ST_RectAlignment
}

// Validate validates the CT_Angle and its children
func (_baa *CT_Angle) Validate() error {
	return _baa.ValidateWithPath("\u0043\u0054\u005f\u0041\u006e\u0067\u006c\u0065")
}

// Validate validates the CT_Path2DMoveTo and its children
func (_febcf *CT_Path2DMoveTo) Validate() error {
	return _febcf.ValidateWithPath("\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004d\u006f\u0076\u0065\u0054\u006f")
}

func (_fgagb ST_PathFillMode) ValidateWithPath(path string) error {
	switch _fgagb {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgagb))
	}
	return nil
}

func (_agbbd *ST_PresetColorVal) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dfgfb, _fecbaa := d.Token()
	if _fecbaa != nil {
		return _fecbaa
	}
	if _cgbce, _bcgge := _dfgfb.(_g.EndElement); _bcgge && _cgbce.Name == start.Name {
		*_agbbd = 1
		return nil
	}
	if _ededgg, _egfaa := _dfgfb.(_g.CharData); !_egfaa {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfgfb)
	} else {
		switch string(_ededgg) {
		case "":
			*_agbbd = 0
		case "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e":
			*_agbbd = 1
		case "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065":
			*_agbbd = 2
		case "\u0061\u0071\u0075\u0061":
			*_agbbd = 3
		case "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
			*_agbbd = 4
		case "\u0061\u007a\u0075r\u0065":
			*_agbbd = 5
		case "\u0062\u0065\u0069g\u0065":
			*_agbbd = 6
		case "\u0062\u0069\u0073\u0071\u0075\u0065":
			*_agbbd = 7
		case "\u0062\u006c\u0061c\u006b":
			*_agbbd = 8
		case "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064":
			*_agbbd = 9
		case "\u0062\u006c\u0075\u0065":
			*_agbbd = 10
		case "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074":
			*_agbbd = 11
		case "\u0062\u0072\u006fw\u006e":
			*_agbbd = 12
		case "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd":
			*_agbbd = 13
		case "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e":
			*_agbbd = 14
		case "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065":
			*_agbbd = 15
		case "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e":
			*_agbbd = 16
		case "\u0063\u006f\u0072a\u006c":
			*_agbbd = 17
		case "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065":
			*_agbbd = 18
		case "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b":
			*_agbbd = 19
		case "\u0063r\u0069\u006d\u0073\u006f\u006e":
			*_agbbd = 20
		case "\u0063\u0079\u0061\u006e":
			*_agbbd = 21
		case "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065":
			*_agbbd = 22
		case "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e":
			*_agbbd = 23
		case "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
			*_agbbd = 24
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
			*_agbbd = 25
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079":
			*_agbbd = 26
		case "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n":
			*_agbbd = 27
		case "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi":
			*_agbbd = 28
		case "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061":
			*_agbbd = 29
		case "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e":
			*_agbbd = 30
		case "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
			*_agbbd = 31
		case "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
			*_agbbd = 32
		case "\u0064a\u0072\u006b\u0052\u0065\u0064":
			*_agbbd = 33
		case "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
			*_agbbd = 34
		case "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_agbbd = 35
		case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_agbbd = 36
		case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
			*_agbbd = 37
		case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
			*_agbbd = 38
		case "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_agbbd = 39
		case "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
			*_agbbd = 40
		case "\u0064\u006b\u0042\u006c\u0075\u0065":
			*_agbbd = 41
		case "\u0064\u006b\u0043\u0079\u0061\u006e":
			*_agbbd = 42
		case "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
			*_agbbd = 43
		case "\u0064\u006b\u0047\u0072\u0061\u0079":
			*_agbbd = 44
		case "\u0064\u006b\u0047\u0072\u0065\u0079":
			*_agbbd = 45
		case "\u0064k\u0047\u0072\u0065\u0065\u006e":
			*_agbbd = 46
		case "\u0064k\u004b\u0068\u0061\u006b\u0069":
			*_agbbd = 47
		case "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a":
			*_agbbd = 48
		case "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e":
			*_agbbd = 49
		case "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
			*_agbbd = 50
		case "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
			*_agbbd = 51
		case "\u0064\u006b\u0052e\u0064":
			*_agbbd = 52
		case "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
			*_agbbd = 53
		case "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_agbbd = 54
		case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_agbbd = 55
		case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
			*_agbbd = 56
		case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
			*_agbbd = 57
		case "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_agbbd = 58
		case "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
			*_agbbd = 59
		case "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b":
			*_agbbd = 60
		case "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
			*_agbbd = 61
		case "\u0064i\u006d\u0047\u0072\u0061\u0079":
			*_agbbd = 62
		case "\u0064i\u006d\u0047\u0072\u0065\u0079":
			*_agbbd = 63
		case "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065":
			*_agbbd = 64
		case "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k":
			*_agbbd = 65
		case "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065":
			*_agbbd = 66
		case "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e":
			*_agbbd = 67
		case "\u0066u\u0063\u0068\u0073\u0069\u0061":
			*_agbbd = 68
		case "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o":
			*_agbbd = 69
		case "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065":
			*_agbbd = 70
		case "\u0067\u006f\u006c\u0064":
			*_agbbd = 71
		case "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd":
			*_agbbd = 72
		case "\u0067\u0072\u0061\u0079":
			*_agbbd = 73
		case "\u0067\u0072\u0065\u0079":
			*_agbbd = 74
		case "\u0067\u0072\u0065e\u006e":
			*_agbbd = 75
		case "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077":
			*_agbbd = 76
		case "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077":
			*_agbbd = 77
		case "\u0068o\u0074\u0050\u0069\u006e\u006b":
			*_agbbd = 78
		case "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d":
			*_agbbd = 79
		case "\u0069\u006e\u0064\u0069\u0067\u006f":
			*_agbbd = 80
		case "\u0069\u0076\u006fr\u0079":
			*_agbbd = 81
		case "\u006b\u0068\u0061k\u0069":
			*_agbbd = 82
		case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072":
			*_agbbd = 83
		case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068":
			*_agbbd = 84
		case "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n":
			*_agbbd = 85
		case "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e":
			*_agbbd = 86
		case "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e":
			*_agbbd = 87
		case "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c":
			*_agbbd = 88
		case "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n":
			*_agbbd = 89
		case "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077":
			*_agbbd = 90
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
			*_agbbd = 91
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y":
			*_agbbd = 92
		case "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e":
			*_agbbd = 93
		case "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek":
			*_agbbd = 94
		case "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
			*_agbbd = 95
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_agbbd = 96
		case "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
			*_agbbd = 97
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079":
			*_agbbd = 98
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079":
			*_agbbd = 99
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065":
			*_agbbd = 100
		case "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
			*_agbbd = 101
		case "\u006c\u0074\u0042\u006c\u0075\u0065":
			*_agbbd = 102
		case "\u006ct\u0043\u006f\u0072\u0061\u006c":
			*_agbbd = 103
		case "\u006c\u0074\u0043\u0079\u0061\u006e":
			*_agbbd = 104
		case "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077":
			*_agbbd = 105
		case "\u006c\u0074\u0047\u0072\u0061\u0079":
			*_agbbd = 106
		case "\u006c\u0074\u0047\u0072\u0065\u0079":
			*_agbbd = 107
		case "\u006ct\u0047\u0072\u0065\u0065\u006e":
			*_agbbd = 108
		case "\u006c\u0074\u0050\u0069\u006e\u006b":
			*_agbbd = 109
		case "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
			*_agbbd = 110
		case "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_agbbd = 111
		case "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e":
			*_agbbd = 112
		case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
			*_agbbd = 113
		case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
			*_agbbd = 114
		case "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065":
			*_agbbd = 115
		case "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
			*_agbbd = 116
		case "\u006c\u0069\u006d\u0065":
			*_agbbd = 117
		case "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n":
			*_agbbd = 118
		case "\u006c\u0069\u006ee\u006e":
			*_agbbd = 119
		case "\u006da\u0067\u0065\u006e\u0074\u0061":
			*_agbbd = 120
		case "\u006d\u0061\u0072\u006f\u006f\u006e":
			*_agbbd = 121
		case "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
			*_agbbd = 122
		case "\u006de\u0064\u0042\u006c\u0075\u0065":
			*_agbbd = 123
		case "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d":
			*_agbbd = 124
		case "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce":
			*_agbbd = 125
		case "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_agbbd = 126
		case "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_agbbd = 127
		case "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
			*_agbbd = 128
		case "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_agbbd = 129
		case "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
			*_agbbd = 130
		case "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
			*_agbbd = 131
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065":
			*_agbbd = 132
		case "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064":
			*_agbbd = 133
		case "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065":
			*_agbbd = 134
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e":
			*_agbbd = 135
		case "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_agbbd = 136
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
			*_agbbd = 137
		case "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_agbbd = 138
		case "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
			*_agbbd = 139
		case "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065":
			*_agbbd = 140
		case "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m":
			*_agbbd = 141
		case "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e":
			*_agbbd = 142
		case "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e":
			*_agbbd = 143
		case "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065":
			*_agbbd = 144
		case "\u006e\u0061\u0076\u0079":
			*_agbbd = 145
		case "\u006fl\u0064\u004c\u0061\u0063\u0065":
			*_agbbd = 146
		case "\u006f\u006c\u0069v\u0065":
			*_agbbd = 147
		case "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b":
			*_agbbd = 148
		case "\u006f\u0072\u0061\u006e\u0067\u0065":
			*_agbbd = 149
		case "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d":
			*_agbbd = 150
		case "\u006f\u0072\u0063\u0068\u0069\u0064":
			*_agbbd = 151
		case "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
			*_agbbd = 152
		case "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n":
			*_agbbd = 153
		case "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_agbbd = 154
		case "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
			*_agbbd = 155
		case "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070":
			*_agbbd = 156
		case "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f":
			*_agbbd = 157
		case "\u0070\u0065\u0072\u0075":
			*_agbbd = 158
		case "\u0070\u0069\u006e\u006b":
			*_agbbd = 159
		case "\u0070\u006c\u0075\u006d":
			*_agbbd = 160
		case "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065":
			*_agbbd = 161
		case "\u0070\u0075\u0072\u0070\u006c\u0065":
			*_agbbd = 162
		case "\u0072\u0065\u0064":
			*_agbbd = 163
		case "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n":
			*_agbbd = 164
		case "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e":
			*_agbbd = 165
		case "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e":
			*_agbbd = 166
		case "\u0073\u0061\u006c\u006d\u006f\u006e":
			*_agbbd = 167
		case "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e":
			*_agbbd = 168
		case "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_agbbd = 169
		case "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c":
			*_agbbd = 170
		case "\u0073\u0069\u0065\u006e\u006e\u0061":
			*_agbbd = 171
		case "\u0073\u0069\u006c\u0076\u0065\u0072":
			*_agbbd = 172
		case "\u0073k\u0079\u0042\u006c\u0075\u0065":
			*_agbbd = 173
		case "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e":
			*_agbbd = 174
		case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y":
			*_agbbd = 175
		case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y":
			*_agbbd = 176
		case "\u0073\u006e\u006f\u0077":
			*_agbbd = 177
		case "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e":
			*_agbbd = 178
		case "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e":
			*_agbbd = 179
		case "\u0074\u0061\u006e":
			*_agbbd = 180
		case "\u0074\u0065\u0061\u006c":
			*_agbbd = 181
		case "\u0074h\u0069\u0073\u0074\u006c\u0065":
			*_agbbd = 182
		case "\u0074\u006f\u006d\u0061\u0074\u006f":
			*_agbbd = 183
		case "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e":
			*_agbbd = 184
		case "\u0076\u0069\u006f\u006c\u0065\u0074":
			*_agbbd = 185
		case "\u0077\u0068\u0065a\u0074":
			*_agbbd = 186
		case "\u0077\u0068\u0069t\u0065":
			*_agbbd = 187
		case "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065":
			*_agbbd = 188
		case "\u0079\u0065\u006c\u006c\u006f\u0077":
			*_agbbd = 189
		case "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e":
			*_agbbd = 190
		}
	}
	_dfgfb, _fecbaa = d.Token()
	if _fecbaa != nil {
		return _fecbaa
	}
	if _efafd, _ccaad := _dfgfb.(_g.EndElement); _ccaad && _efafd.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfgfb)
}

// Validate validates the EG_TextBullet and its children
func (_abdaf *EG_TextBullet) Validate() error {
	return _abdaf.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074")
}

type CT_Bevel struct {
	WAttr    *int64
	HAttr    *int64
	PrstAttr ST_BevelPresetType
}

func (_fffg ST_TextFontAlignType) Validate() error { return _fffg.ValidateWithPath("") }

// ValidateWithPath validates the CT_PresetColor and its children, prefixing error messages with path
func (_gabad *CT_PresetColor) ValidateWithPath(path string) error {
	if _gabad.ValAttr == ST_PresetColorValUnset {
		return _gf.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ddaac := _gabad.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ddaac != nil {
		return _ddaac
	}
	for _cgfdf, _cagb := range _gabad.EG_ColorTransform {
		if _fcfaf := _cagb.ValidateWithPath(_gf.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _cgfdf)); _fcfaf != nil {
			return _fcfaf
		}
	}
	return nil
}

func (_fdbge ST_TextTabAlignType) ValidateWithPath(path string) error {
	switch _fdbge {
	case 0, 1, 2, 3, 4:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fdbge))
	}
	return nil
}

// ValidateWithPath validates the CT_NonVisualDrawingShapeProps and its children, prefixing error messages with path
func (_ecdd *CT_NonVisualDrawingShapeProps) ValidateWithPath(path string) error {
	if _ecdd.SpLocks != nil {
		if _bagga := _ecdd.SpLocks.ValidateWithPath(path + "\u002f\u0053\u0070\u004c\u006f\u0063\u006b\u0073"); _bagga != nil {
			return _bagga
		}
	}
	if _ecdd.ExtLst != nil {
		if _gddd := _ecdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gddd != nil {
			return _gddd
		}
	}
	return nil
}

const (
	ST_AnimationChartOnlyBuildTypeUnset      ST_AnimationChartOnlyBuildType = 0
	ST_AnimationChartOnlyBuildTypeSeries     ST_AnimationChartOnlyBuildType = 1
	ST_AnimationChartOnlyBuildTypeCategory   ST_AnimationChartOnlyBuildType = 2
	ST_AnimationChartOnlyBuildTypeSeriesEl   ST_AnimationChartOnlyBuildType = 3
	ST_AnimationChartOnlyBuildTypeCategoryEl ST_AnimationChartOnlyBuildType = 4
)

func (_gegd *CT_ColorScheme) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _gf.Sprintf("\u0025\u0076", _gegd.NameAttr)})
	e.EncodeToken(start)
	_agdd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0064k\u0031"}}
	e.EncodeElement(_gegd.Dk1, _agdd)
	_dbfc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006ct\u0031"}}
	e.EncodeElement(_gegd.Lt1, _dbfc)
	_adad := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0064k\u0032"}}
	e.EncodeElement(_gegd.Dk2, _adad)
	_afff := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006ct\u0032"}}
	e.EncodeElement(_gegd.Lt2, _afff)
	_bbc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00741"}}
	e.EncodeElement(_gegd.Accent1, _bbc)
	_acgb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00742"}}
	e.EncodeElement(_gegd.Accent2, _acgb)
	_fegcd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00743"}}
	e.EncodeElement(_gegd.Accent3, _fegcd)
	_aaef := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00744"}}
	e.EncodeElement(_gegd.Accent4, _aaef)
	_gdae := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00745"}}
	e.EncodeElement(_gegd.Accent5, _gdae)
	_dccbb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00746"}}
	e.EncodeElement(_gegd.Accent6, _dccbb)
	_ececa := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0068\u006c\u0069\u006e\u006b"}}
	e.EncodeElement(_gegd.Hlink, _ececa)
	_deedd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"}}
	e.EncodeElement(_gegd.FolHlink, _deedd)
	if _gegd.ExtLst != nil {
		_bfbd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gegd.ExtLst, _bfbd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_PresetColorValUnset                ST_PresetColorVal = 0
	ST_PresetColorValAliceBlue            ST_PresetColorVal = 1
	ST_PresetColorValAntiqueWhite         ST_PresetColorVal = 2
	ST_PresetColorValAqua                 ST_PresetColorVal = 3
	ST_PresetColorValAquamarine           ST_PresetColorVal = 4
	ST_PresetColorValAzure                ST_PresetColorVal = 5
	ST_PresetColorValBeige                ST_PresetColorVal = 6
	ST_PresetColorValBisque               ST_PresetColorVal = 7
	ST_PresetColorValBlack                ST_PresetColorVal = 8
	ST_PresetColorValBlanchedAlmond       ST_PresetColorVal = 9
	ST_PresetColorValBlue                 ST_PresetColorVal = 10
	ST_PresetColorValBlueViolet           ST_PresetColorVal = 11
	ST_PresetColorValBrown                ST_PresetColorVal = 12
	ST_PresetColorValBurlyWood            ST_PresetColorVal = 13
	ST_PresetColorValCadetBlue            ST_PresetColorVal = 14
	ST_PresetColorValChartreuse           ST_PresetColorVal = 15
	ST_PresetColorValChocolate            ST_PresetColorVal = 16
	ST_PresetColorValCoral                ST_PresetColorVal = 17
	ST_PresetColorValCornflowerBlue       ST_PresetColorVal = 18
	ST_PresetColorValCornsilk             ST_PresetColorVal = 19
	ST_PresetColorValCrimson              ST_PresetColorVal = 20
	ST_PresetColorValCyan                 ST_PresetColorVal = 21
	ST_PresetColorValDarkBlue             ST_PresetColorVal = 22
	ST_PresetColorValDarkCyan             ST_PresetColorVal = 23
	ST_PresetColorValDarkGoldenrod        ST_PresetColorVal = 24
	ST_PresetColorValDarkGray             ST_PresetColorVal = 25
	ST_PresetColorValDarkGrey             ST_PresetColorVal = 26
	ST_PresetColorValDarkGreen            ST_PresetColorVal = 27
	ST_PresetColorValDarkKhaki            ST_PresetColorVal = 28
	ST_PresetColorValDarkMagenta          ST_PresetColorVal = 29
	ST_PresetColorValDarkOliveGreen       ST_PresetColorVal = 30
	ST_PresetColorValDarkOrange           ST_PresetColorVal = 31
	ST_PresetColorValDarkOrchid           ST_PresetColorVal = 32
	ST_PresetColorValDarkRed              ST_PresetColorVal = 33
	ST_PresetColorValDarkSalmon           ST_PresetColorVal = 34
	ST_PresetColorValDarkSeaGreen         ST_PresetColorVal = 35
	ST_PresetColorValDarkSlateBlue        ST_PresetColorVal = 36
	ST_PresetColorValDarkSlateGray        ST_PresetColorVal = 37
	ST_PresetColorValDarkSlateGrey        ST_PresetColorVal = 38
	ST_PresetColorValDarkTurquoise        ST_PresetColorVal = 39
	ST_PresetColorValDarkViolet           ST_PresetColorVal = 40
	ST_PresetColorValDkBlue               ST_PresetColorVal = 41
	ST_PresetColorValDkCyan               ST_PresetColorVal = 42
	ST_PresetColorValDkGoldenrod          ST_PresetColorVal = 43
	ST_PresetColorValDkGray               ST_PresetColorVal = 44
	ST_PresetColorValDkGrey               ST_PresetColorVal = 45
	ST_PresetColorValDkGreen              ST_PresetColorVal = 46
	ST_PresetColorValDkKhaki              ST_PresetColorVal = 47
	ST_PresetColorValDkMagenta            ST_PresetColorVal = 48
	ST_PresetColorValDkOliveGreen         ST_PresetColorVal = 49
	ST_PresetColorValDkOrange             ST_PresetColorVal = 50
	ST_PresetColorValDkOrchid             ST_PresetColorVal = 51
	ST_PresetColorValDkRed                ST_PresetColorVal = 52
	ST_PresetColorValDkSalmon             ST_PresetColorVal = 53
	ST_PresetColorValDkSeaGreen           ST_PresetColorVal = 54
	ST_PresetColorValDkSlateBlue          ST_PresetColorVal = 55
	ST_PresetColorValDkSlateGray          ST_PresetColorVal = 56
	ST_PresetColorValDkSlateGrey          ST_PresetColorVal = 57
	ST_PresetColorValDkTurquoise          ST_PresetColorVal = 58
	ST_PresetColorValDkViolet             ST_PresetColorVal = 59
	ST_PresetColorValDeepPink             ST_PresetColorVal = 60
	ST_PresetColorValDeepSkyBlue          ST_PresetColorVal = 61
	ST_PresetColorValDimGray              ST_PresetColorVal = 62
	ST_PresetColorValDimGrey              ST_PresetColorVal = 63
	ST_PresetColorValDodgerBlue           ST_PresetColorVal = 64
	ST_PresetColorValFirebrick            ST_PresetColorVal = 65
	ST_PresetColorValFloralWhite          ST_PresetColorVal = 66
	ST_PresetColorValForestGreen          ST_PresetColorVal = 67
	ST_PresetColorValFuchsia              ST_PresetColorVal = 68
	ST_PresetColorValGainsboro            ST_PresetColorVal = 69
	ST_PresetColorValGhostWhite           ST_PresetColorVal = 70
	ST_PresetColorValGold                 ST_PresetColorVal = 71
	ST_PresetColorValGoldenrod            ST_PresetColorVal = 72
	ST_PresetColorValGray                 ST_PresetColorVal = 73
	ST_PresetColorValGrey                 ST_PresetColorVal = 74
	ST_PresetColorValGreen                ST_PresetColorVal = 75
	ST_PresetColorValGreenYellow          ST_PresetColorVal = 76
	ST_PresetColorValHoneydew             ST_PresetColorVal = 77
	ST_PresetColorValHotPink              ST_PresetColorVal = 78
	ST_PresetColorValIndianRed            ST_PresetColorVal = 79
	ST_PresetColorValIndigo               ST_PresetColorVal = 80
	ST_PresetColorValIvory                ST_PresetColorVal = 81
	ST_PresetColorValKhaki                ST_PresetColorVal = 82
	ST_PresetColorValLavender             ST_PresetColorVal = 83
	ST_PresetColorValLavenderBlush        ST_PresetColorVal = 84
	ST_PresetColorValLawnGreen            ST_PresetColorVal = 85
	ST_PresetColorValLemonChiffon         ST_PresetColorVal = 86
	ST_PresetColorValLightBlue            ST_PresetColorVal = 87
	ST_PresetColorValLightCoral           ST_PresetColorVal = 88
	ST_PresetColorValLightCyan            ST_PresetColorVal = 89
	ST_PresetColorValLightGoldenrodYellow ST_PresetColorVal = 90
	ST_PresetColorValLightGray            ST_PresetColorVal = 91
	ST_PresetColorValLightGrey            ST_PresetColorVal = 92
	ST_PresetColorValLightGreen           ST_PresetColorVal = 93
	ST_PresetColorValLightPink            ST_PresetColorVal = 94
	ST_PresetColorValLightSalmon          ST_PresetColorVal = 95
	ST_PresetColorValLightSeaGreen        ST_PresetColorVal = 96
	ST_PresetColorValLightSkyBlue         ST_PresetColorVal = 97
	ST_PresetColorValLightSlateGray       ST_PresetColorVal = 98
	ST_PresetColorValLightSlateGrey       ST_PresetColorVal = 99
	ST_PresetColorValLightSteelBlue       ST_PresetColorVal = 100
	ST_PresetColorValLightYellow          ST_PresetColorVal = 101
	ST_PresetColorValLtBlue               ST_PresetColorVal = 102
	ST_PresetColorValLtCoral              ST_PresetColorVal = 103
	ST_PresetColorValLtCyan               ST_PresetColorVal = 104
	ST_PresetColorValLtGoldenrodYellow    ST_PresetColorVal = 105
	ST_PresetColorValLtGray               ST_PresetColorVal = 106
	ST_PresetColorValLtGrey               ST_PresetColorVal = 107
	ST_PresetColorValLtGreen              ST_PresetColorVal = 108
	ST_PresetColorValLtPink               ST_PresetColorVal = 109
	ST_PresetColorValLtSalmon             ST_PresetColorVal = 110
	ST_PresetColorValLtSeaGreen           ST_PresetColorVal = 111
	ST_PresetColorValLtSkyBlue            ST_PresetColorVal = 112
	ST_PresetColorValLtSlateGray          ST_PresetColorVal = 113
	ST_PresetColorValLtSlateGrey          ST_PresetColorVal = 114
	ST_PresetColorValLtSteelBlue          ST_PresetColorVal = 115
	ST_PresetColorValLtYellow             ST_PresetColorVal = 116
	ST_PresetColorValLime                 ST_PresetColorVal = 117
	ST_PresetColorValLimeGreen            ST_PresetColorVal = 118
	ST_PresetColorValLinen                ST_PresetColorVal = 119
	ST_PresetColorValMagenta              ST_PresetColorVal = 120
	ST_PresetColorValMaroon               ST_PresetColorVal = 121
	ST_PresetColorValMedAquamarine        ST_PresetColorVal = 122
	ST_PresetColorValMedBlue              ST_PresetColorVal = 123
	ST_PresetColorValMedOrchid            ST_PresetColorVal = 124
	ST_PresetColorValMedPurple            ST_PresetColorVal = 125
	ST_PresetColorValMedSeaGreen          ST_PresetColorVal = 126
	ST_PresetColorValMedSlateBlue         ST_PresetColorVal = 127
	ST_PresetColorValMedSpringGreen       ST_PresetColorVal = 128
	ST_PresetColorValMedTurquoise         ST_PresetColorVal = 129
	ST_PresetColorValMedVioletRed         ST_PresetColorVal = 130
	ST_PresetColorValMediumAquamarine     ST_PresetColorVal = 131
	ST_PresetColorValMediumBlue           ST_PresetColorVal = 132
	ST_PresetColorValMediumOrchid         ST_PresetColorVal = 133
	ST_PresetColorValMediumPurple         ST_PresetColorVal = 134
	ST_PresetColorValMediumSeaGreen       ST_PresetColorVal = 135
	ST_PresetColorValMediumSlateBlue      ST_PresetColorVal = 136
	ST_PresetColorValMediumSpringGreen    ST_PresetColorVal = 137
	ST_PresetColorValMediumTurquoise      ST_PresetColorVal = 138
	ST_PresetColorValMediumVioletRed      ST_PresetColorVal = 139
	ST_PresetColorValMidnightBlue         ST_PresetColorVal = 140
	ST_PresetColorValMintCream            ST_PresetColorVal = 141
	ST_PresetColorValMistyRose            ST_PresetColorVal = 142
	ST_PresetColorValMoccasin             ST_PresetColorVal = 143
	ST_PresetColorValNavajoWhite          ST_PresetColorVal = 144
	ST_PresetColorValNavy                 ST_PresetColorVal = 145
	ST_PresetColorValOldLace              ST_PresetColorVal = 146
	ST_PresetColorValOlive                ST_PresetColorVal = 147
	ST_PresetColorValOliveDrab            ST_PresetColorVal = 148
	ST_PresetColorValOrange               ST_PresetColorVal = 149
	ST_PresetColorValOrangeRed            ST_PresetColorVal = 150
	ST_PresetColorValOrchid               ST_PresetColorVal = 151
	ST_PresetColorValPaleGoldenrod        ST_PresetColorVal = 152
	ST_PresetColorValPaleGreen            ST_PresetColorVal = 153
	ST_PresetColorValPaleTurquoise        ST_PresetColorVal = 154
	ST_PresetColorValPaleVioletRed        ST_PresetColorVal = 155
	ST_PresetColorValPapayaWhip           ST_PresetColorVal = 156
	ST_PresetColorValPeachPuff            ST_PresetColorVal = 157
	ST_PresetColorValPeru                 ST_PresetColorVal = 158
	ST_PresetColorValPink                 ST_PresetColorVal = 159
	ST_PresetColorValPlum                 ST_PresetColorVal = 160
	ST_PresetColorValPowderBlue           ST_PresetColorVal = 161
	ST_PresetColorValPurple               ST_PresetColorVal = 162
	ST_PresetColorValRed                  ST_PresetColorVal = 163
	ST_PresetColorValRosyBrown            ST_PresetColorVal = 164
	ST_PresetColorValRoyalBlue            ST_PresetColorVal = 165
	ST_PresetColorValSaddleBrown          ST_PresetColorVal = 166
	ST_PresetColorValSalmon               ST_PresetColorVal = 167
	ST_PresetColorValSandyBrown           ST_PresetColorVal = 168
	ST_PresetColorValSeaGreen             ST_PresetColorVal = 169
	ST_PresetColorValSeaShell             ST_PresetColorVal = 170
	ST_PresetColorValSienna               ST_PresetColorVal = 171
	ST_PresetColorValSilver               ST_PresetColorVal = 172
	ST_PresetColorValSkyBlue              ST_PresetColorVal = 173
	ST_PresetColorValSlateBlue            ST_PresetColorVal = 174
	ST_PresetColorValSlateGray            ST_PresetColorVal = 175
	ST_PresetColorValSlateGrey            ST_PresetColorVal = 176
	ST_PresetColorValSnow                 ST_PresetColorVal = 177
	ST_PresetColorValSpringGreen          ST_PresetColorVal = 178
	ST_PresetColorValSteelBlue            ST_PresetColorVal = 179
	ST_PresetColorValTan                  ST_PresetColorVal = 180
	ST_PresetColorValTeal                 ST_PresetColorVal = 181
	ST_PresetColorValThistle              ST_PresetColorVal = 182
	ST_PresetColorValTomato               ST_PresetColorVal = 183
	ST_PresetColorValTurquoise            ST_PresetColorVal = 184
	ST_PresetColorValViolet               ST_PresetColorVal = 185
	ST_PresetColorValWheat                ST_PresetColorVal = 186
	ST_PresetColorValWhite                ST_PresetColorVal = 187
	ST_PresetColorValWhiteSmoke           ST_PresetColorVal = 188
	ST_PresetColorValYellow               ST_PresetColorVal = 189
	ST_PresetColorValYellowGreen          ST_PresetColorVal = 190
)

func NewCT_Table() *CT_Table {
	_acfffe := &CT_Table{}
	_acfffe.TblGrid = NewCT_TableGrid()
	return _acfffe
}

func NewCT_BlipFillProperties() *CT_BlipFillProperties {
	_eaecd := &CT_BlipFillProperties{}
	return _eaecd
}

type CT_GvmlGroupShape struct {
	NvGrpSpPr *CT_GvmlGroupShapeNonVisual
	GrpSpPr   *CT_GroupShapeProperties
	Choice    []*CT_GvmlGroupShapeChoice
	ExtLst    *CT_OfficeArtExtensionList
}

func NewCT_ColorSchemeAndMapping() *CT_ColorSchemeAndMapping {
	_gaba := &CT_ColorSchemeAndMapping{}
	_gaba.ClrScheme = NewCT_ColorScheme()
	return _gaba
}

type CT_Path2DArcTo struct {
	WRAttr    ST_AdjCoordinate
	HRAttr    ST_AdjCoordinate
	StAngAttr ST_AdjAngle
	SwAngAttr ST_AdjAngle
}

func (_dacgaf *CT_TransformEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dacgaf.SxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0078"}, Value: _gf.Sprintf("\u0025\u0076", *_dacgaf.SxAttr)})
	}
	if _dacgaf.SyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0079"}, Value: _gf.Sprintf("\u0025\u0076", *_dacgaf.SyAttr)})
	}
	if _dacgaf.KxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006b\u0078"}, Value: _gf.Sprintf("\u0025\u0076", *_dacgaf.KxAttr)})
	}
	if _dacgaf.KyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006b\u0079"}, Value: _gf.Sprintf("\u0025\u0076", *_dacgaf.KyAttr)})
	}
	if _dacgaf.TxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0078"}, Value: _gf.Sprintf("\u0025\u0076", *_dacgaf.TxAttr)})
	}
	if _dacgaf.TyAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0079"}, Value: _gf.Sprintf("\u0025\u0076", *_dacgaf.TyAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_daea *CT_EffectProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_eedad:
	for {
		_bgcd, _ccfe := d.Token()
		if _ccfe != nil {
			return _ccfe
		}
		switch _ddff := _bgcd.(type) {
		case _g.StartElement:
			switch _ddff.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_daea.EffectLst = NewCT_EffectList()
				if _cadace := d.DecodeElement(_daea.EffectLst, &_ddff); _cadace != nil {
					return _cadace
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_daea.EffectDag = NewCT_EffectContainer()
				if _fdea := d.DecodeElement(_daea.EffectDag, &_ddff); _fdea != nil {
					return _fdea
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ddff.Name)
				if _gfffe := d.Skip(); _gfffe != nil {
					return _gfffe
				}
			}
		case _g.EndElement:
			break _eedad
		case _g.CharData:
		}
	}
	return nil
}

type CT_PictureLocking struct {
	NoCropAttr             *bool
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

func (_ddfb *CT_Percentage) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gacgc := range start.Attr {
		if _gacgc.Name.Local == "\u0076\u0061\u006c" {
			_addcg, _dgafe := ParseUnionST_Percentage(_gacgc.Value)
			if _dgafe != nil {
				return _dgafe
			}
			_ddfb.ValAttr = _addcg
			continue
		}
	}
	for {
		_bcccg, _aaff := d.Token()
		if _aaff != nil {
			return _gf.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050e\u0072c\u0065n\u0074\u0061\u0067\u0065\u003a\u0020\u0025s", _aaff)
		}
		if _bddfb, _agacg := _bcccg.(_g.EndElement); _agacg && _bddfb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlPictureNonVisual and its children, prefixing error messages with path
func (_fecbe *CT_GvmlPictureNonVisual) ValidateWithPath(path string) error {
	if _gddce := _fecbe.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _gddce != nil {
		return _gddce
	}
	if _bdgba := _fecbe.CNvPicPr.ValidateWithPath(path + "\u002fC\u004e\u0076\u0050\u0069\u0063\u0050r"); _bdgba != nil {
		return _bdgba
	}
	return nil
}

func (_baefg *ST_TextVerticalType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_baefg = 0
	case "\u0068\u006f\u0072\u007a":
		*_baefg = 1
	case "\u0076\u0065\u0072\u0074":
		*_baefg = 2
	case "\u0076e\u0072\u0074\u0032\u0037\u0030":
		*_baefg = 3
	case "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074":
		*_baefg = 4
	case "\u0065\u0061\u0056\u0065\u0072\u0074":
		*_baefg = 5
	case "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074":
		*_baefg = 6
	case "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c":
		*_baefg = 7
	}
	return nil
}

func (_eebff *CT_PositivePercentage) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _gf.Sprintf("\u0025\u0076", _eebff.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_BlipChoice() *CT_BlipChoice { _adc := &CT_BlipChoice{}; return _adc }

// ValidateWithPath validates the CT_TableRow and its children, prefixing error messages with path
func (_bdgbf *CT_TableRow) ValidateWithPath(path string) error {
	if _ffbdea := _bdgbf.HAttr.ValidateWithPath(path + "\u002f\u0048\u0041\u0074\u0074\u0072"); _ffbdea != nil {
		return _ffbdea
	}
	for _efaggf, _cgfbd := range _bdgbf.Tc {
		if _fbaee := _cgfbd.ValidateWithPath(_gf.Sprintf("\u0025s\u002f\u0054\u0063\u005b\u0025\u0064]", path, _efaggf)); _fbaee != nil {
			return _fbaee
		}
	}
	if _bdgbf.ExtLst != nil {
		if _gdbb := _bdgbf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdbb != nil {
			return _gdbb
		}
	}
	return nil
}

func (_ffaf *CT_GvmlShape) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ffaf.NvSpPr = NewCT_GvmlShapeNonVisual()
	_ffaf.SpPr = NewCT_ShapeProperties()
_ccbcg:
	for {
		_cgbgc, _eeea := d.Token()
		if _eeea != nil {
			return _eeea
		}
		switch _cdff := _cgbgc.(type) {
		case _g.StartElement:
			switch _cdff.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}:
				if _edeee := d.DecodeElement(_ffaf.NvSpPr, &_cdff); _edeee != nil {
					return _edeee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _fagd := d.DecodeElement(_ffaf.SpPr, &_cdff); _fagd != nil {
					return _fagd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}:
				_ffaf.TxSp = NewCT_GvmlTextShape()
				if _baeec := d.DecodeElement(_ffaf.TxSp, &_cdff); _baeec != nil {
					return _baeec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_ffaf.Style = NewCT_ShapeStyle()
				if _beebg := d.DecodeElement(_ffaf.Style, &_cdff); _beebg != nil {
					return _beebg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ffaf.ExtLst = NewCT_OfficeArtExtensionList()
				if _bebad := d.DecodeElement(_ffaf.ExtLst, &_cdff); _bebad != nil {
					return _bebad
				}
			default:
				_b.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_G\u0076\u006dl\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _cdff.Name)
				if _afed := d.Skip(); _afed != nil {
					return _afed
				}
			}
		case _g.EndElement:
			break _ccbcg
		case _g.CharData:
		}
	}
	return nil
}

func (_bgbbg *CT_ConnectionSite) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u006e\u0067"}, Value: _gf.Sprintf("\u0025\u0076", _bgbbg.AngAttr)})
	e.EncodeToken(start)
	_cefbc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070o\u0073"}}
	e.EncodeElement(_bgbbg.Pos, _cefbc)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bebeea ST_TextUnderlineType) String() string {
	switch _bebeea {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0077\u006f\u0072d\u0073"
	case 3:
		return "\u0073\u006e\u0067"
	case 4:
		return "\u0064\u0062\u006c"
	case 5:
		return "\u0068\u0065\u0061v\u0079"
	case 6:
		return "\u0064\u006f\u0074\u0074\u0065\u0064"
	case 7:
		return "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079"
	case 8:
		return "\u0064\u0061\u0073\u0068"
	case 9:
		return "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y"
	case 10:
		return "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067"
	case 11:
		return "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079"
	case 12:
		return "\u0064o\u0074\u0044\u0061\u0073\u0068"
	case 13:
		return "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case 14:
		return "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068"
	case 15:
		return "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case 16:
		return "\u0077\u0061\u0076\u0079"
	case 17:
		return "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y"
	case 18:
		return "\u0077a\u0076\u0079\u0044\u0062\u006c"
	}
	return ""
}

const (
	ST_SchemeColorValUnset    ST_SchemeColorVal = 0
	ST_SchemeColorValBg1      ST_SchemeColorVal = 1
	ST_SchemeColorValTx1      ST_SchemeColorVal = 2
	ST_SchemeColorValBg2      ST_SchemeColorVal = 3
	ST_SchemeColorValTx2      ST_SchemeColorVal = 4
	ST_SchemeColorValAccent1  ST_SchemeColorVal = 5
	ST_SchemeColorValAccent2  ST_SchemeColorVal = 6
	ST_SchemeColorValAccent3  ST_SchemeColorVal = 7
	ST_SchemeColorValAccent4  ST_SchemeColorVal = 8
	ST_SchemeColorValAccent5  ST_SchemeColorVal = 9
	ST_SchemeColorValAccent6  ST_SchemeColorVal = 10
	ST_SchemeColorValHlink    ST_SchemeColorVal = 11
	ST_SchemeColorValFolHlink ST_SchemeColorVal = 12
	ST_SchemeColorValPhClr    ST_SchemeColorVal = 13
	ST_SchemeColorValDk1      ST_SchemeColorVal = 14
	ST_SchemeColorValLt1      ST_SchemeColorVal = 15
	ST_SchemeColorValDk2      ST_SchemeColorVal = 16
	ST_SchemeColorValLt2      ST_SchemeColorVal = 17
)

// Validate validates the CT_TextParagraphProperties and its children
func (_aeedc *CT_TextParagraphProperties) Validate() error {
	return _aeedc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0050\u0061\u0072\u0061g\u0072\u0061\u0070\u0068\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}

const (
	ST_FontCollectionIndexUnset ST_FontCollectionIndex = 0
	ST_FontCollectionIndexMajor ST_FontCollectionIndex = 1
	ST_FontCollectionIndexMinor ST_FontCollectionIndex = 2
	ST_FontCollectionIndexNone  ST_FontCollectionIndex = 3
)

type CT_TextSpacing struct {
	SpcPct *CT_TextSpacingPercent
	SpcPts *CT_TextSpacingPoint
}

func NewCT_EmptyElement() *CT_EmptyElement { _fecb := &CT_EmptyElement{}; return _fecb }

func (_ceeabg ST_RectAlignment) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_ceeabg.String(), start)
}

const (
	ST_EffectContainerTypeUnset ST_EffectContainerType = 0
	ST_EffectContainerTypeSib   ST_EffectContainerType = 1
	ST_EffectContainerTypeTree  ST_EffectContainerType = 2
)

type CT_EffectReference struct{ RefAttr string }

func (_feaeb ST_TextStrikeType) String() string {
	switch _feaeb {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065"
	case 2:
		return "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be"
	case 3:
		return "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be"
	}
	return ""
}

func NewEG_ColorTransform() *EG_ColorTransform { _ageabe := &EG_ColorTransform{}; return _ageabe }

func (_cfgcf ST_BlipCompression) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_cfgcf.String(), start)
}

// ValidateWithPath validates the CT_InverseTransform and its children, prefixing error messages with path
func (_geddg *CT_InverseTransform) ValidateWithPath(path string) error { return nil }

func (_cbbabe *ST_PathShadeType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cbbabe = 0
	case "\u0073\u0068\u0061p\u0065":
		*_cbbabe = 1
	case "\u0063\u0069\u0072\u0063\u006c\u0065":
		*_cbbabe = 2
	case "\u0072\u0065\u0063\u0074":
		*_cbbabe = 3
	}
	return nil
}

type AG_Locking struct {
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

// Validate validates the CT_LineStyleList and its children
func (_ggadg *CT_LineStyleList) Validate() error {
	return _ggadg.ValidateWithPath("\u0043\u0054_\u004c\u0069\u006ee\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074")
}

func NewCT_NonVisualGraphicFrameProperties() *CT_NonVisualGraphicFrameProperties {
	_caef := &CT_NonVisualGraphicFrameProperties{}
	return _caef
}

func (_dfdfa *CT_GvmlShapeNonVisual) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dfdfa.CNvPr = NewCT_NonVisualDrawingProps()
	_dfdfa.CNvSpPr = NewCT_NonVisualDrawingShapeProps()
_fccb:
	for {
		_cced, _badfd := d.Token()
		if _badfd != nil {
			return _badfd
		}
		switch _begc := _cced.(type) {
		case _g.StartElement:
			switch _begc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _ffgd := d.DecodeElement(_dfdfa.CNvPr, &_begc); _ffgd != nil {
					return _ffgd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}:
				if _geeb := d.DecodeElement(_dfdfa.CNvSpPr, &_begc); _geeb != nil {
					return _geeb
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0047\u0076\u006d\u006c\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _begc.Name)
				if _ccfac := d.Skip(); _ccfac != nil {
					return _ccfac
				}
			}
		case _g.EndElement:
			break _fccb
		case _g.CharData:
		}
	}
	return nil
}

func ParseUnionST_TextFontScalePercentOrPercentString(s string) (ST_TextFontScalePercentOrPercentString, error) {
	_bccge := ST_TextFontScalePercentOrPercentString{}
	if _ge.ST_PercentagePatternRe.MatchString(s) {
		_bccge.ST_Percentage = &s
	} else {
		_dgfgbe, _fggda := _c.ParseInt(s, 10, 64)
		if _fggda != nil {
			return _bccge, _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _fggda)
		}
		_afeea := int32(_dgfgbe)
		_bccge.ST_TextFontScalePercent = &_afeea
	}
	return _bccge, nil
}

func (_egdgbb *EG_TextGeometry) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_acbg:
	for {
		_aabfg, _ccfdf := d.Token()
		if _ccfdf != nil {
			return _ccfdf
		}
		switch _ebdgd := _aabfg.(type) {
		case _g.StartElement:
			switch _ebdgd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_egdgbb.CustGeom = NewCT_CustomGeometry2D()
				if _fbfge := d.DecodeElement(_egdgbb.CustGeom, &_ebdgd); _fbfge != nil {
					return _fbfge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}:
				_egdgbb.PrstTxWarp = NewCT_PresetTextShape()
				if _ceee := d.DecodeElement(_egdgbb.PrstTxWarp, &_ebdgd); _ceee != nil {
					return _ceee
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078t\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0020\u0025\u0076", _ebdgd.Name)
				if _bbbeb := d.Skip(); _bbbeb != nil {
					return _bbbeb
				}
			}
		case _g.EndElement:
			break _acbg
		case _g.CharData:
		}
	}
	return nil
}

func (_efdde ST_LineEndType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_efdde.String(), start)
}

func (_eeaac ST_TextVertOverflowType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_eeaac.String(), start)
}

func (_dcd *CT_AlphaBiLevelEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _abg := range start.Attr {
		if _abg.Name.Local == "\u0074\u0068\u0072\u0065\u0073\u0068" {
			_cfc, _cff := ParseUnionST_PositiveFixedPercentage(_abg.Value)
			if _cff != nil {
				return _cff
			}
			_dcd.ThreshAttr = _cfc
			continue
		}
	}
	for {
		_ddf, _abf := d.Token()
		if _abf != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0042\u0069\u004c\u0065v\u0065\u006c\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _abf)
		}
		if _edd, _fab := _ddf.(_g.EndElement); _fab && _edd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FontCollection and its children, prefixing error messages with path
func (_aegee *CT_FontCollection) ValidateWithPath(path string) error {
	if _gcfef := _aegee.Latin.ValidateWithPath(path + "\u002f\u004c\u0061\u0074\u0069\u006e"); _gcfef != nil {
		return _gcfef
	}
	if _fbeab := _aegee.Ea.ValidateWithPath(path + "\u002f\u0045\u0061"); _fbeab != nil {
		return _fbeab
	}
	if _dcggc := _aegee.Cs.ValidateWithPath(path + "\u002f\u0043\u0073"); _dcggc != nil {
		return _dcggc
	}
	for _eggff, _daebe := range _aegee.Font {
		if _fccc := _daebe.ValidateWithPath(_gf.Sprintf("%\u0073\u002f\u0046\u006f\u006e\u0074\u005b\u0025\u0064\u005d", path, _eggff)); _fccc != nil {
			return _fccc
		}
	}
	if _aegee.ExtLst != nil {
		if _cda := _aegee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cda != nil {
			return _cda
		}
	}
	return nil
}

func (_cfafa ST_DgmBuildStep) Validate() error { return _cfafa.ValidateWithPath("") }

func (_ddaeg ST_PresetShadowVal) String() string {
	switch _ddaeg {
	case 0:
		return ""
	case 1:
		return "\u0073\u0068\u0064w\u0031"
	case 2:
		return "\u0073\u0068\u0064w\u0032"
	case 3:
		return "\u0073\u0068\u0064w\u0033"
	case 4:
		return "\u0073\u0068\u0064w\u0034"
	case 5:
		return "\u0073\u0068\u0064w\u0035"
	case 6:
		return "\u0073\u0068\u0064w\u0036"
	case 7:
		return "\u0073\u0068\u0064w\u0037"
	case 8:
		return "\u0073\u0068\u0064w\u0038"
	case 9:
		return "\u0073\u0068\u0064w\u0039"
	case 10:
		return "\u0073\u0068\u0064\u0077\u0031\u0030"
	case 11:
		return "\u0073\u0068\u0064\u0077\u0031\u0031"
	case 12:
		return "\u0073\u0068\u0064\u0077\u0031\u0032"
	case 13:
		return "\u0073\u0068\u0064\u0077\u0031\u0033"
	case 14:
		return "\u0073\u0068\u0064\u0077\u0031\u0034"
	case 15:
		return "\u0073\u0068\u0064\u0077\u0031\u0035"
	case 16:
		return "\u0073\u0068\u0064\u0077\u0031\u0036"
	case 17:
		return "\u0073\u0068\u0064\u0077\u0031\u0037"
	case 18:
		return "\u0073\u0068\u0064\u0077\u0031\u0038"
	case 19:
		return "\u0073\u0068\u0064\u0077\u0031\u0039"
	case 20:
		return "\u0073\u0068\u0064\u0077\u0032\u0030"
	}
	return ""
}

// ValidateWithPath validates the CT_TextAutonumberBullet and its children, prefixing error messages with path
func (_fbbbe *CT_TextAutonumberBullet) ValidateWithPath(path string) error {
	if _fbbbe.TypeAttr == ST_TextAutonumberSchemeUnset {
		return _gf.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ffcbc := _fbbbe.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _ffcbc != nil {
		return _ffcbc
	}
	if _fbbbe.StartAtAttr != nil {
		if *_fbbbe.StartAtAttr < 1 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u0074\u0061\u0072\u0074\u0041\u0074\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0031\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_fbbbe.StartAtAttr)
		}
		if *_fbbbe.StartAtAttr > 32767 {
			return _gf.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u0074a\u0072\u0074\u0041t\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0033\u0032\u0037\u0036\u0037\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fbbbe.StartAtAttr)
		}
	}
	return nil
}

// Validate validates the CT_NonVisualGraphicFrameProperties and its children
func (_gdfbb *CT_NonVisualGraphicFrameProperties) Validate() error {
	return _gdfbb.ValidateWithPath("\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072a\u0070h\u0069c\u0046r\u0061\u006d\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_aabf *CT_EffectContainer) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _aabf.TypeAttr != ST_EffectContainerTypeUnset {
		_agffab, _ggdeb := _aabf.TypeAttr.MarshalXMLAttr(_g.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _ggdeb != nil {
			return _ggdeb
		}
		start.Attr = append(start.Attr, _agffab)
	}
	if _aabf.NameAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _gf.Sprintf("\u0025\u0076", *_aabf.NameAttr)})
	}
	e.EncodeToken(start)
	if _aabf.Cont != nil {
		_dfda := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
		e.EncodeElement(_aabf.Cont, _dfda)
	}
	if _aabf.Effect != nil {
		_fedf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_aabf.Effect, _fedf)
	}
	if _aabf.AlphaBiLevel != nil {
		_ccae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0042\u0069L\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_aabf.AlphaBiLevel, _ccae)
	}
	if _aabf.AlphaCeiling != nil {
		_bcde := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0043\u0065i\u006c\u0069\u006e\u0067"}}
		e.EncodeElement(_aabf.AlphaCeiling, _bcde)
	}
	if _aabf.AlphaFloor != nil {
		_ebda := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061l\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}}
		e.EncodeElement(_aabf.AlphaFloor, _ebda)
	}
	if _aabf.AlphaInv != nil {
		_badae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}}
		e.EncodeElement(_aabf.AlphaInv, _badae)
	}
	if _aabf.AlphaMod != nil {
		_feed := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		e.EncodeElement(_aabf.AlphaMod, _feed)
	}
	if _aabf.AlphaModFix != nil {
		_dfbg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}}
		e.EncodeElement(_aabf.AlphaModFix, _dfbg)
	}
	if _aabf.AlphaOutset != nil {
		_bdbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}}
		e.EncodeElement(_aabf.AlphaOutset, _bdbe)
	}
	if _aabf.AlphaRepl != nil {
		_bcbc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0061\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"}}
		e.EncodeElement(_aabf.AlphaRepl, _bcbc)
	}
	if _aabf.BiLevel != nil {
		_dcfea := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0069\u004c\u0065\u0076\u0065l"}}
		e.EncodeElement(_aabf.BiLevel, _dcfea)
	}
	if _aabf.Blend != nil {
		_cbfg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u006c\u0065\u006e\u0064"}}
		e.EncodeElement(_aabf.Blend, _cbfg)
	}
	if _aabf.Blur != nil {
		_fegf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		e.EncodeElement(_aabf.Blur, _fegf)
	}
	if _aabf.ClrChange != nil {
		_eeacg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0063\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"}}
		e.EncodeElement(_aabf.ClrChange, _eeacg)
	}
	if _aabf.ClrRepl != nil {
		_ddfd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u006c\u0072\u0052\u0065\u0070l"}}
		e.EncodeElement(_aabf.ClrRepl, _ddfd)
	}
	if _aabf.Duotone != nil {
		_afdbf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0064\u0075\u006f\u0074\u006f\u006ee"}}
		e.EncodeElement(_aabf.Duotone, _afdbf)
	}
	if _aabf.Fill != nil {
		_cgfd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_aabf.Fill, _cgfd)
	}
	if _aabf.FillOverlay != nil {
		_bbcd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		e.EncodeElement(_aabf.FillOverlay, _bbcd)
	}
	if _aabf.Glow != nil {
		_eaef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u006c\u006f\u0077"}}
		e.EncodeElement(_aabf.Glow, _eaef)
	}
	if _aabf.Grayscl != nil {
		_cegd := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0061\u0079\u0073\u0063l"}}
		e.EncodeElement(_aabf.Grayscl, _cegd)
	}
	if _aabf.Hsl != nil {
		_gfeg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068s\u006c"}}
		e.EncodeElement(_aabf.Hsl, _gfeg)
	}
	if _aabf.InnerShdw != nil {
		_ggea := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0069\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_aabf.InnerShdw, _ggea)
	}
	if _aabf.Lum != nil {
		_gdbcf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		e.EncodeElement(_aabf.Lum, _gdbcf)
	}
	if _aabf.OuterShdw != nil {
		_efcf := _g.StartElement{Name: _g.Name{Local: "a\u003a\u006f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_aabf.OuterShdw, _efcf)
	}
	if _aabf.PrstShdw != nil {
		_ecccc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_aabf.PrstShdw, _ecccc)
	}
	if _aabf.Reflection != nil {
		_cdfdg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072e\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_aabf.Reflection, _cdfdg)
	}
	if _aabf.RelOff != nil {
		_bffe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072\u0065\u006c\u004f\u0066\u0066"}}
		e.EncodeElement(_aabf.RelOff, _bffe)
	}
	if _aabf.SoftEdge != nil {
		_eceb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}}
		e.EncodeElement(_aabf.SoftEdge, _eceb)
	}
	if _aabf.Tint != nil {
		_dbgd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		e.EncodeElement(_aabf.Tint, _dbgd)
	}
	if _aabf.Xfrm != nil {
		_aegb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_aabf.Xfrm, _aegb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_aebebc ST_AnimationDgmOnlyBuildType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_gbdaa := _g.Attr{}
	_gbdaa.Name = name
	switch _aebebc {
	case ST_AnimationDgmOnlyBuildTypeUnset:
		_gbdaa.Value = ""
	case ST_AnimationDgmOnlyBuildTypeOne:
		_gbdaa.Value = "\u006f\u006e\u0065"
	case ST_AnimationDgmOnlyBuildTypeLvlOne:
		_gbdaa.Value = "\u006c\u0076\u006c\u004f\u006e\u0065"
	case ST_AnimationDgmOnlyBuildTypeLvlAtOnce:
		_gbdaa.Value = "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return _gbdaa, nil
}

func (_gadad *ST_PresetCameraType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_gadad = 0
	case "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074":
		*_gadad = 1
	case "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
		*_gadad = 2
	case "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074":
		*_gadad = 3
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074":
		*_gadad = 4
	case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074":
		*_gadad = 5
	case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074":
		*_gadad = 6
	case "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
		*_gadad = 7
	case "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
		*_gadad = 8
	case "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
		*_gadad = 9
	case "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074":
		*_gadad = 10
	case "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070":
		*_gadad = 11
	case "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t":
		*_gadad = 12
	case "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074":
		*_gadad = 13
	case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074":
		*_gadad = 14
	case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074":
		*_gadad = 15
	case "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074":
		*_gadad = 16
	case "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
		*_gadad = 17
	case "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074":
		*_gadad = 18
	case "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074":
		*_gadad = 19
	case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070":
		*_gadad = 20
	case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e":
		*_gadad = 21
	case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070":
		*_gadad = 22
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e":
		*_gadad = 23
	case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070":
		*_gadad = 24
	case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e":
		*_gadad = 25
	case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070":
		*_gadad = 26
	case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e":
		*_gadad = 27
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074":
		*_gadad = 28
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074":
		*_gadad = 29
	case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070":
		*_gadad = 30
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074":
		*_gadad = 31
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074":
		*_gadad = 32
	case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070":
		*_gadad = 33
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074":
		*_gadad = 34
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074":
		*_gadad = 35
	case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d":
		*_gadad = 36
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074":
		*_gadad = 37
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074":
		*_gadad = 38
	case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d":
		*_gadad = 39
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074":
		*_gadad = 40
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
		*_gadad = 41
	case "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
		*_gadad = 42
	case "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074":
		*_gadad = 43
	case "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074":
		*_gadad = 44
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074":
		*_gadad = 45
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
		*_gadad = 46
	case "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074":
		*_gadad = 47
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074":
		*_gadad = 48
	case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074":
		*_gadad = 49
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074":
		*_gadad = 50
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065":
		*_gadad = 51
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077":
		*_gadad = 52
	case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067":
		*_gadad = 53
	case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067":
		*_gadad = 54
	case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
		*_gadad = 55
	case "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067":
		*_gadad = 56
	case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067":
		*_gadad = 57
	case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067":
		*_gadad = 58
	case "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
		*_gadad = 59
	case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067":
		*_gadad = 60
	case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064":
		*_gadad = 61
	case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079":
		*_gadad = 62
	}
	return nil
}

func (_aaffced *ST_EffectContainerType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_aaffced = 0
	case "\u0073\u0069\u0062":
		*_aaffced = 1
	case "\u0074\u0072\u0065\u0065":
		*_aaffced = 2
	}
	return nil
}

func (_fedb ST_PresetMaterialType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_aebgfc := _g.Attr{}
	_aebgfc.Name = name
	switch _fedb {
	case ST_PresetMaterialTypeUnset:
		_aebgfc.Value = ""
	case ST_PresetMaterialTypeLegacyMatte:
		_aebgfc.Value = "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065"
	case ST_PresetMaterialTypeLegacyPlastic:
		_aebgfc.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063"
	case ST_PresetMaterialTypeLegacyMetal:
		_aebgfc.Value = "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c"
	case ST_PresetMaterialTypeLegacyWireframe:
		_aebgfc.Value = "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065"
	case ST_PresetMaterialTypeMatte:
		_aebgfc.Value = "\u006d\u0061\u0074t\u0065"
	case ST_PresetMaterialTypePlastic:
		_aebgfc.Value = "\u0070l\u0061\u0073\u0074\u0069\u0063"
	case ST_PresetMaterialTypeMetal:
		_aebgfc.Value = "\u006d\u0065\u0074a\u006c"
	case ST_PresetMaterialTypeWarmMatte:
		_aebgfc.Value = "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e"
	case ST_PresetMaterialTypeTranslucentPowder:
		_aebgfc.Value = "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072"
	case ST_PresetMaterialTypePowder:
		_aebgfc.Value = "\u0070\u006f\u0077\u0064\u0065\u0072"
	case ST_PresetMaterialTypeDkEdge:
		_aebgfc.Value = "\u0064\u006b\u0045\u0064\u0067\u0065"
	case ST_PresetMaterialTypeSoftEdge:
		_aebgfc.Value = "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"
	case ST_PresetMaterialTypeClear:
		_aebgfc.Value = "\u0063\u006c\u0065a\u0072"
	case ST_PresetMaterialTypeFlat:
		_aebgfc.Value = "\u0066\u006c\u0061\u0074"
	case ST_PresetMaterialTypeSoftmetal:
		_aebgfc.Value = "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l"
	}
	return _aebgfc, nil
}

func (_eegg *CT_GeomGuide) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cffdf := range start.Attr {
		if _cffdf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bebeg, _dbeed := _cffdf.Value, error(nil)
			if _dbeed != nil {
				return _dbeed
			}
			_eegg.NameAttr = _bebeg
			continue
		}
		if _cffdf.Name.Local == "\u0066\u006d\u006c\u0061" {
			_ecgbg, _bdfd := _cffdf.Value, error(nil)
			if _bdfd != nil {
				return _bdfd
			}
			_eegg.FmlaAttr = _ecgbg
			continue
		}
	}
	for {
		_cfgcb, _feabg := d.Token()
		if _feabg != nil {
			return _gf.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0065o\u006d\u0047\u0075\u0069\u0064\u0065\u003a\u0020\u0025\u0073", _feabg)
		}
		if _dgcd, _gaffg := _cfgcb.(_g.EndElement); _gaffg && _dgcd.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_EffectList() *CT_EffectList { _cdc := &CT_EffectList{}; return _cdc }

// ValidateWithPath validates the EG_TextBulletSize and its children, prefixing error messages with path
func (_eeedf *EG_TextBulletSize) ValidateWithPath(path string) error {
	if _eeedf.BuSzTx != nil {
		if _abfbd := _eeedf.BuSzTx.ValidateWithPath(path + "\u002fB\u0075\u0053\u007a\u0054\u0078"); _abfbd != nil {
			return _abfbd
		}
	}
	if _eeedf.BuSzPct != nil {
		if _ccbag := _eeedf.BuSzPct.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0063\u0074"); _ccbag != nil {
			return _ccbag
		}
	}
	if _eeedf.BuSzPts != nil {
		if _fgbccf := _eeedf.BuSzPts.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0074\u0073"); _fgbccf != nil {
			return _fgbccf
		}
	}
	return nil
}

// Validate validates the CT_GammaTransform and its children
func (_bced *CT_GammaTransform) Validate() error {
	return _bced.ValidateWithPath("\u0043\u0054\u005f\u0047\u0061\u006d\u006d\u0061\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d")
}

func (_agdg *CT_BlurEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _egbfg := range start.Attr {
		if _egbfg.Name.Local == "\u0072\u0061\u0064" {
			_dfgc, _fggg := _c.ParseInt(_egbfg.Value, 10, 64)
			if _fggg != nil {
				return _fggg
			}
			_agdg.RadAttr = &_dfgc
			continue
		}
		if _egbfg.Name.Local == "\u0067\u0072\u006f\u0077" {
			_edba, _gcgg := _c.ParseBool(_egbfg.Value)
			if _gcgg != nil {
				return _gcgg
			}
			_agdg.GrowAttr = &_edba
			continue
		}
	}
	for {
		_faaa, _dagdd := d.Token()
		if _dagdd != nil {
			return _gf.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0042l\u0075r\u0045f\u0066\u0065\u0063\u0074\u003a\u0020\u0025s", _dagdd)
		}
		if _ccca, _fade := _faaa.(_g.EndElement); _fade && _ccca.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_PositiveFixedPercentage struct{ ValAttr ST_PositiveFixedPercentage }

func (_fcdd *CT_DashStopList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fbge:
	for {
		_gcdc, _ebga := d.Token()
		if _ebga != nil {
			return _ebga
		}
		switch _edebg := _gcdc.(type) {
		case _g.StartElement:
			switch _edebg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0073"}:
				_dbeb := NewCT_DashStop()
				if _acdb := d.DecodeElement(_dbeb, &_edebg); _acdb != nil {
					return _acdb
				}
				_fcdd.Ds = append(_fcdd.Ds, _dbeb)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0073h\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _edebg.Name)
				if _gaaf := d.Skip(); _gaaf != nil {
					return _gaaf
				}
			}
		case _g.EndElement:
			break _fbge
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Percentage and its children
func (_gdggd *CT_Percentage) Validate() error {
	return _gdggd.ValidateWithPath("\u0043\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
}

// ValidateWithPath validates the CT_Path2DArcTo and its children, prefixing error messages with path
func (_eaga *CT_Path2DArcTo) ValidateWithPath(path string) error {
	if _eagac := _eaga.WRAttr.ValidateWithPath(path + "\u002fW\u0052\u0041\u0074\u0074\u0072"); _eagac != nil {
		return _eagac
	}
	if _gacdd := _eaga.HRAttr.ValidateWithPath(path + "\u002fH\u0052\u0041\u0074\u0074\u0072"); _gacdd != nil {
		return _gacdd
	}
	if _bfadb := _eaga.StAngAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _bfadb != nil {
		return _bfadb
	}
	if _aacbc := _eaga.SwAngAttr.ValidateWithPath(path + "\u002f\u0053\u0077\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _aacbc != nil {
		return _aacbc
	}
	return nil
}

func (_cafafc *ST_OnOffStyleType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cafafc = 0
	case "\u006f\u006e":
		*_cafafc = 1
	case "\u006f\u0066\u0066":
		*_cafafc = 2
	case "\u0064\u0065\u0066":
		*_cafafc = 3
	}
	return nil
}

func NewCT_AudioFile() *CT_AudioFile { _dae := &CT_AudioFile{}; return _dae }

func (_cbeege ST_TextWrappingType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_cbeege.String(), start)
}

// Validate validates the CT_ComplementTransform and its children
func (_ccgbf *CT_ComplementTransform) Validate() error {
	return _ccgbf.ValidateWithPath("\u0043\u0054\u005f\u0043om\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d")
}

func (_acaaa ST_ChartBuildStep) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_acaaa.String(), start)
}

func (_bgegc *CT_NonVisualDrawingShapeProps) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bgegc.TxBoxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0078\u0042o\u0078"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_bgegc.TxBoxAttr))})
	}
	e.EncodeToken(start)
	if _bgegc.SpLocks != nil {
		_becca := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0070\u004c\u006f\u0063\u006bs"}}
		e.EncodeElement(_bgegc.SpLocks, _becca)
	}
	if _bgegc.ExtLst != nil {
		_deada := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bgegc.ExtLst, _deada)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewEG_FillModeProperties() *EG_FillModeProperties {
	_ddfafb := &EG_FillModeProperties{}
	return _ddfafb
}

func (_ebcda *CT_GvmlUseShapeRectangle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GroupLocking and its children
func (_cadd *CT_GroupLocking) Validate() error {
	return _cadd.ValidateWithPath("\u0043T\u005fG\u0072\u006f\u0075\u0070\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}

func (_fde *CT_AdjPoint2D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _aec := range start.Attr {
		if _aec.Name.Local == "\u0078" {
			_gfg, _cgce := ParseUnionST_AdjCoordinate(_aec.Value)
			if _cgce != nil {
				return _cgce
			}
			_fde.XAttr = _gfg
			continue
		}
		if _aec.Name.Local == "\u0079" {
			_agbe, _bfa := ParseUnionST_AdjCoordinate(_aec.Value)
			if _bfa != nil {
				return _bfa
			}
			_fde.YAttr = _agbe
			continue
		}
	}
	for {
		_ccf, _dea := d.Token()
		if _dea != nil {
			return _gf.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041d\u006aP\u006fi\u006e\u0074\u0032\u0044\u003a\u0020\u0025s", _dea)
		}
		if _ccd, _abb := _ccf.(_g.EndElement); _abb && _ccd.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_EffectReference() *CT_EffectReference { _gcgef := &CT_EffectReference{}; return _gcgef }

// Validate validates the CT_TextBulletSizePercent and its children
func (_bgaag *CT_TextBulletSizePercent) Validate() error {
	return _bgaag.ValidateWithPath("\u0043T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074")
}

type CT_StyleMatrix struct {
	NameAttr       *string
	FillStyleLst   *CT_FillStyleList
	LnStyleLst     *CT_LineStyleList
	EffectStyleLst *CT_EffectStyleList
	BgFillStyleLst *CT_BackgroundFillStyleList
}

func (_dacad ST_TextAutonumberScheme) String() string {
	switch _dacad {
	case 0:
		return ""
	case 1:
		return "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 2:
		return "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 3:
		return "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 4:
		return "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 5:
		return "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 6:
		return "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 7:
		return "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 8:
		return "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 9:
		return "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 10:
		return "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e"
	case 11:
		return "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 12:
		return "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 13:
		return "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 14:
		return "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 15:
		return "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 16:
		return "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 17:
		return "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case 18:
		return "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e"
	case 19:
		return "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e"
	case 20:
		return "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case 21:
		return "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case 22:
		return "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064"
	case 23:
		return "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e"
	case 24:
		return "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064"
	case 25:
		return "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e"
	case 26:
		return "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case 27:
		return "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e"
	case 28:
		return "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064"
	case 29:
		return "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073"
	case 30:
		return "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073"
	case 31:
		return "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073"
	case 32:
		return "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case 33:
		return "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052"
	case 34:
		return "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068"
	case 35:
		return "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064"
	case 36:
		return "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052"
	case 37:
		return "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 38:
		return "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case 39:
		return "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064"
	case 40:
		return "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052"
	case 41:
		return "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064"
	}
	return ""
}

func (_acbb *CT_AnimationChartBuildProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _acbb.BldAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u006c\u0064"}, Value: _gf.Sprintf("\u0025\u0076", *_acbb.BldAttr)})
	}
	if _acbb.AnimBgAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u006e\u0069\u006d\u0042\u0067"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_acbb.AnimBgAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CustomGeometry2D and its children
func (_befae *CT_CustomGeometry2D) Validate() error {
	return _befae.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044")
}

func (_fbede ST_Coordinate32) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _fbede.ST_Coordinate32Unqualified != nil {
		e.EncodeToken(_g.CharData(_gf.Sprintf("\u0025\u0064", *_fbede.ST_Coordinate32Unqualified)))
	}
	if _fbede.ST_UniversalMeasure != nil {
		e.EncodeToken(_g.CharData(*_fbede.ST_UniversalMeasure))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

type CT_TextFont struct {
	TypefaceAttr    string
	PanoseAttr      *string
	PitchFamilyAttr ST_PitchFamily
	CharsetAttr     *int8
}

func NewCT_TextSpacingPoint() *CT_TextSpacingPoint {
	_bbafa := &CT_TextSpacingPoint{}
	_bbafa.ValAttr = 0
	return _bbafa
}

// ValidateWithPath validates the CT_GvmlPicture and its children, prefixing error messages with path
func (_gcdb *CT_GvmlPicture) ValidateWithPath(path string) error {
	if _becaa := _gcdb.NvPicPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0050\u0069\u0063\u0050\u0072"); _becaa != nil {
		return _becaa
	}
	if _dcfba := _gcdb.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _dcfba != nil {
		return _dcfba
	}
	if _faabd := _gcdb.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _faabd != nil {
		return _faabd
	}
	if _gcdb.Style != nil {
		if _begaa := _gcdb.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _begaa != nil {
			return _begaa
		}
	}
	if _gcdb.ExtLst != nil {
		if _ffeag := _gcdb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffeag != nil {
			return _ffeag
		}
	}
	return nil
}

func (_efeb *CT_GroupFillProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_BackgroundFillStyleList and its children, prefixing error messages with path
func (_edef *CT_BackgroundFillStyleList) ValidateWithPath(path string) error {
	for _baed, _gcea := range _edef.EG_FillProperties {
		if _fcbe := _gcea.ValidateWithPath(_gf.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073\u005b\u0025\u0064\u005d", path, _baed)); _fcbe != nil {
			return _fcbe
		}
	}
	return nil
}

type CT_BlendEffect struct {
	BlendAttr ST_BlendMode
	Cont      *CT_EffectContainer
}

func NewCT_QuickTimeFile() *CT_QuickTimeFile { _fffc := &CT_QuickTimeFile{}; return _fffc }

type CT_LineJoinMiterProperties struct{ LimAttr *ST_PositivePercentage }

type CT_Shape3D struct {
	ZAttr            *ST_Coordinate
	ExtrusionHAttr   *int64
	ContourWAttr     *int64
	PrstMaterialAttr ST_PresetMaterialType
	BevelT           *CT_Bevel
	BevelB           *CT_Bevel
	ExtrusionClr     *CT_Color
	ContourClr       *CT_Color
	ExtLst           *CT_OfficeArtExtensionList
}

func (_daeba *CT_GradientFillProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cedab := range start.Attr {
		if _cedab.Name.Local == "\u0066\u006c\u0069\u0070" {
			_daeba.FlipAttr.UnmarshalXMLAttr(_cedab)
			continue
		}
		if _cedab.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_abbbf, _fddcb := _c.ParseBool(_cedab.Value)
			if _fddcb != nil {
				return _fddcb
			}
			_daeba.RotWithShapeAttr = &_abbbf
			continue
		}
	}
_gdgad:
	for {
		_feae, _gfcg := d.Token()
		if _gfcg != nil {
			return _gfcg
		}
		switch _dedeb := _feae.(type) {
		case _g.StartElement:
			switch _dedeb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073\u004cs\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073\u004cs\u0074"}:
				_daeba.GsLst = NewCT_GradientStopList()
				if _abddf := d.DecodeElement(_daeba.GsLst, &_dedeb); _abddf != nil {
					return _abddf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}:
				_daeba.Lin = NewCT_LinearShadeProperties()
				if _efag := d.DecodeElement(_daeba.Lin, &_dedeb); _efag != nil {
					return _efag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}:
				_daeba.Path = NewCT_PathShadeProperties()
				if _dadaf := d.DecodeElement(_daeba.Path, &_dedeb); _dadaf != nil {
					return _dadaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065\u0052\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065\u0052\u0065\u0063\u0074"}:
				_daeba.TileRect = NewCT_RelativeRect()
				if _abce := d.DecodeElement(_daeba.TileRect, &_dedeb); _abce != nil {
					return _abce
				}
			default:
				_b.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0064\u0069\u0065\u006e\u0074F\u0069l\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065s\u0020\u0025v", _dedeb.Name)
				if _fdfdg := d.Skip(); _fdfdg != nil {
					return _fdfdg
				}
			}
		case _g.EndElement:
			break _gdgad
		case _g.CharData:
		}
	}
	return nil
}

func (_dedegb ST_PresetLineDashVal) ValidateWithPath(path string) error {
	switch _dedegb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dedegb))
	}
	return nil
}

// ValidateWithPath validates the CT_ConnectorLocking and its children, prefixing error messages with path
func (_fbea *CT_ConnectorLocking) ValidateWithPath(path string) error {
	if _fbea.ExtLst != nil {
		if _ffcfb := _fbea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffcfb != nil {
			return _ffcfb
		}
	}
	return nil
}

func (_effec ST_LineEndWidth) Validate() error { return _effec.ValidateWithPath("") }

// Validate validates the CT_TableCell and its children
func (_fdbbg *CT_TableCell) Validate() error {
	return _fdbbg.ValidateWithPath("\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0043\u0065\u006c\u006c")
}

// Validate validates the CT_TextSpacingPercent and its children
func (_gbebc *CT_TextSpacingPercent) Validate() error {
	return _gbebc.ValidateWithPath("C\u0054\u005f\u0054\u0065xt\u0053p\u0061\u0063\u0069\u006e\u0067P\u0065\u0072\u0063\u0065\u006e\u0074")
}

func (_aceb *ST_AdjAngle) ValidateWithPath(path string) error {
	_agdf := []string{}
	if _aceb.ST_Angle != nil {
		_agdf = append(_agdf, "\u0053\u0054\u005f\u0041\u006e\u0067\u006c\u0065")
	}
	if _aceb.ST_GeomGuideName != nil {
		_agdf = append(_agdf, "\u0053\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004e\u0061\u006d\u0065")
	}
	if len(_agdf) > 1 {
		return _gf.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _agdf)
	}
	return nil
}

type CT_NonVisualConnectorProperties struct {
	CxnSpLocks *CT_ConnectorLocking
	StCxn      *CT_Connection
	EndCxn     *CT_Connection
	ExtLst     *CT_OfficeArtExtensionList
}

func (_bgcaa ST_TextTabAlignType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_bgcaa.String(), start)
}

func (_dafffd *EG_Effect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dafffd.Cont != nil {
		_cfbbg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
		e.EncodeElement(_dafffd.Cont, _cfbbg)
	}
	if _dafffd.Effect != nil {
		_abdgcc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_dafffd.Effect, _abdgcc)
	}
	if _dafffd.AlphaBiLevel != nil {
		_dfeac := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0042\u0069L\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_dafffd.AlphaBiLevel, _dfeac)
	}
	if _dafffd.AlphaCeiling != nil {
		_acaaee := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0043\u0065i\u006c\u0069\u006e\u0067"}}
		e.EncodeElement(_dafffd.AlphaCeiling, _acaaee)
	}
	if _dafffd.AlphaFloor != nil {
		_dgge := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061l\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}}
		e.EncodeElement(_dafffd.AlphaFloor, _dgge)
	}
	if _dafffd.AlphaInv != nil {
		_gfgac := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}}
		e.EncodeElement(_dafffd.AlphaInv, _gfgac)
	}
	if _dafffd.AlphaMod != nil {
		_adfgba := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		e.EncodeElement(_dafffd.AlphaMod, _adfgba)
	}
	if _dafffd.AlphaModFix != nil {
		_gdedg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}}
		e.EncodeElement(_dafffd.AlphaModFix, _gdedg)
	}
	if _dafffd.AlphaOutset != nil {
		_acdbc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}}
		e.EncodeElement(_dafffd.AlphaOutset, _acdbc)
	}
	if _dafffd.AlphaRepl != nil {
		_eefda := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0061\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"}}
		e.EncodeElement(_dafffd.AlphaRepl, _eefda)
	}
	if _dafffd.BiLevel != nil {
		_bgfag := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0069\u004c\u0065\u0076\u0065l"}}
		e.EncodeElement(_dafffd.BiLevel, _bgfag)
	}
	if _dafffd.Blend != nil {
		_ebcae := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u006c\u0065\u006e\u0064"}}
		e.EncodeElement(_dafffd.Blend, _ebcae)
	}
	if _dafffd.Blur != nil {
		_gdbgd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		e.EncodeElement(_dafffd.Blur, _gdbgd)
	}
	if _dafffd.ClrChange != nil {
		_ebbfa := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0063\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"}}
		e.EncodeElement(_dafffd.ClrChange, _ebbfa)
	}
	if _dafffd.ClrRepl != nil {
		_ebcee := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u006c\u0072\u0052\u0065\u0070l"}}
		e.EncodeElement(_dafffd.ClrRepl, _ebcee)
	}
	if _dafffd.Duotone != nil {
		_bfaaca := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0064\u0075\u006f\u0074\u006f\u006ee"}}
		e.EncodeElement(_dafffd.Duotone, _bfaaca)
	}
	if _dafffd.Fill != nil {
		_debga := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_dafffd.Fill, _debga)
	}
	if _dafffd.FillOverlay != nil {
		_aedde := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		e.EncodeElement(_dafffd.FillOverlay, _aedde)
	}
	if _dafffd.Glow != nil {
		_fgfdg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u006c\u006f\u0077"}}
		e.EncodeElement(_dafffd.Glow, _fgfdg)
	}
	if _dafffd.Grayscl != nil {
		_gdfgcf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0061\u0079\u0073\u0063l"}}
		e.EncodeElement(_dafffd.Grayscl, _gdfgcf)
	}
	if _dafffd.Hsl != nil {
		_fgabab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068s\u006c"}}
		e.EncodeElement(_dafffd.Hsl, _fgabab)
	}
	if _dafffd.InnerShdw != nil {
		_fdebg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0069\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_dafffd.InnerShdw, _fdebg)
	}
	if _dafffd.Lum != nil {
		_dadbb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		e.EncodeElement(_dafffd.Lum, _dadbb)
	}
	if _dafffd.OuterShdw != nil {
		_dbdea := _g.StartElement{Name: _g.Name{Local: "a\u003a\u006f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_dafffd.OuterShdw, _dbdea)
	}
	if _dafffd.PrstShdw != nil {
		_agge := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_dafffd.PrstShdw, _agge)
	}
	if _dafffd.Reflection != nil {
		_afbfgd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072e\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_dafffd.Reflection, _afbfgd)
	}
	if _dafffd.RelOff != nil {
		_eagbb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072\u0065\u006c\u004f\u0066\u0066"}}
		e.EncodeElement(_dafffd.RelOff, _eagbb)
	}
	if _dafffd.SoftEdge != nil {
		_bbdac := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}}
		e.EncodeElement(_dafffd.SoftEdge, _bbdac)
	}
	if _dafffd.Tint != nil {
		_fbde := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		e.EncodeElement(_dafffd.Tint, _fbde)
	}
	if _dafffd.Xfrm != nil {
		_eebeg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_dafffd.Xfrm, _eebeg)
	}
	return nil
}

type CT_SphereCoords struct {
	LatAttr int32
	LonAttr int32
	RevAttr int32
}

func (_eccae ST_PenAlignment) Validate() error { return _eccae.ValidateWithPath("") }

// Validate validates the CT_AnimationDgmElement and its children
func (_dca *CT_AnimationDgmElement) Validate() error {
	return _dca.ValidateWithPath("\u0043\u0054\u005f\u0041ni\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006d\u0045\u006c\u0065\u006d\u0065n\u0074")
}

// Validate validates the CT_EffectList and its children
func (_efeab *CT_EffectList) Validate() error {
	return _efeab.ValidateWithPath("\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0069\u0073\u0074")
}

func (_bdade ST_TextPoint) String() string {
	if _bdade.ST_TextPointUnqualified != nil {
		return _gf.Sprintf("\u0025\u0076", *_bdade.ST_TextPointUnqualified)
	}
	if _bdade.ST_UniversalMeasure != nil {
		return _gf.Sprintf("\u0025\u0076", *_bdade.ST_UniversalMeasure)
	}
	return ""
}

type EG_LineJoinProperties struct {
	Round *CT_LineJoinRound
	Bevel *CT_LineJoinBevel
	Miter *CT_LineJoinMiterProperties
}

func (_efca *CT_TableCellBorderStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bafd:
	for {
		_bgfgg, _fdecb := d.Token()
		if _fdecb != nil {
			return _fdecb
		}
		switch _faedbb := _bgfgg.(type) {
		case _g.StartElement:
			switch _faedbb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}:
				_efca.Left = NewCT_ThemeableLineStyle()
				if _eabdf := d.DecodeElement(_efca.Left, &_faedbb); _eabdf != nil {
					return _eabdf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}:
				_efca.Right = NewCT_ThemeableLineStyle()
				if _cgfba := d.DecodeElement(_efca.Right, &_faedbb); _cgfba != nil {
					return _cgfba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}:
				_efca.Top = NewCT_ThemeableLineStyle()
				if _gggbb := d.DecodeElement(_efca.Top, &_faedbb); _gggbb != nil {
					return _gggbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}:
				_efca.Bottom = NewCT_ThemeableLineStyle()
				if _adeae := d.DecodeElement(_efca.Bottom, &_faedbb); _adeae != nil {
					return _adeae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0048"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0048"}:
				_efca.InsideH = NewCT_ThemeableLineStyle()
				if _ggdad := d.DecodeElement(_efca.InsideH, &_faedbb); _ggdad != nil {
					return _ggdad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0056"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0056"}:
				_efca.InsideV = NewCT_ThemeableLineStyle()
				if _aedbb := d.DecodeElement(_efca.InsideV, &_faedbb); _aedbb != nil {
					return _aedbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006c\u0032b\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006c\u0032b\u0072"}:
				_efca.Tl2br = NewCT_ThemeableLineStyle()
				if _cgdfd := d.DecodeElement(_efca.Tl2br, &_faedbb); _cgdfd != nil {
					return _cgdfd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0032b\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0032b\u006c"}:
				_efca.Tr2bl = NewCT_ThemeableLineStyle()
				if _babcaa := d.DecodeElement(_efca.Tr2bl, &_faedbb); _babcaa != nil {
					return _babcaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efca.ExtLst = NewCT_OfficeArtExtensionList()
				if _aefab := d.DecodeElement(_efca.ExtLst, &_faedbb); _aefab != nil {
					return _aefab
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u0065\u006c\u006cB\u006f\u0072\u0064\u0065\u0072\u0053t\u0079\u006c\u0065 \u0025\u0076", _faedbb.Name)
				if _ccagb := d.Skip(); _ccagb != nil {
					return _ccagb
				}
			}
		case _g.EndElement:
			break _bafd
		case _g.CharData:
		}
	}
	return nil
}

func (_feagb *ST_CompoundLine) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_feagb = 0
	case "\u0073\u006e\u0067":
		*_feagb = 1
	case "\u0064\u0062\u006c":
		*_feagb = 2
	case "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n":
		*_feagb = 3
	case "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k":
		*_feagb = 4
	case "\u0074\u0072\u0069":
		*_feagb = 5
	}
	return nil
}

type CT_CustomGeometry2D struct {
	AvLst   *CT_GeomGuideList
	GdLst   *CT_GeomGuideList
	AhLst   *CT_AdjustHandleList
	CxnLst  *CT_ConnectionSiteList
	Rect    *CT_GeomRect
	PathLst *CT_Path2DList
}

func (_cdadc ST_ChartBuildStep) String() string {
	switch _cdadc {
	case 0:
		return ""
	case 1:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 2:
		return "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 3:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 4:
		return "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case 5:
		return "\u0061\u006c\u006c\u0050\u0074\u0073"
	case 6:
		return "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	}
	return ""
}

func (_cddec *ST_TextCapsType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cddec = 0
	case "\u006e\u006f\u006e\u0065":
		*_cddec = 1
	case "\u0073\u006d\u0061l\u006c":
		*_cddec = 2
	case "\u0061\u006c\u006c":
		*_cddec = 3
	}
	return nil
}

type CT_LineProperties struct {
	WAttr     *int32
	CapAttr   ST_LineCap
	CmpdAttr  ST_CompoundLine
	AlgnAttr  ST_PenAlignment
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	PattFill  *CT_PatternFillProperties
	PrstDash  *CT_PresetLineDashProperties
	CustDash  *CT_DashStopList
	Round     *CT_LineJoinRound
	Bevel     *CT_LineJoinBevel
	Miter     *CT_LineJoinMiterProperties
	HeadEnd   *CT_LineEndProperties
	TailEnd   *CT_LineEndProperties
	ExtLst    *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_TextBulletSizePoint and its children, prefixing error messages with path
func (_aaad *CT_TextBulletSizePoint) ValidateWithPath(path string) error {
	if _aaad.ValAttr < 100 {
		return _gf.Errorf("\u0025\u0073/\u006d\u002e\u0056\u0061l\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003e\u003d\u0020\u0031\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _aaad.ValAttr)
	}
	if _aaad.ValAttr > 400000 {
		return _gf.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u003d\u0020\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, _aaad.ValAttr)
	}
	return nil
}

func (_bfgaf *CT_LineJoinMiterProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bfgaf.LimAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0069\u006d"}, Value: _gf.Sprintf("\u0025\u0076", *_bfgaf.LimAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Headers and its children, prefixing error messages with path
func (_gdccc *CT_Headers) ValidateWithPath(path string) error { return nil }

func (_debcb *ST_PresetMaterialType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bccd, _dggbg := d.Token()
	if _dggbg != nil {
		return _dggbg
	}
	if _ceace, _bgaef := _bccd.(_g.EndElement); _bgaef && _ceace.Name == start.Name {
		*_debcb = 1
		return nil
	}
	if _cddgd, _dcafg := _bccd.(_g.CharData); !_dcafg {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bccd)
	} else {
		switch string(_cddgd) {
		case "":
			*_debcb = 0
		case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065":
			*_debcb = 1
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063":
			*_debcb = 2
		case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c":
			*_debcb = 3
		case "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065":
			*_debcb = 4
		case "\u006d\u0061\u0074t\u0065":
			*_debcb = 5
		case "\u0070l\u0061\u0073\u0074\u0069\u0063":
			*_debcb = 6
		case "\u006d\u0065\u0074a\u006c":
			*_debcb = 7
		case "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e":
			*_debcb = 8
		case "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072":
			*_debcb = 9
		case "\u0070\u006f\u0077\u0064\u0065\u0072":
			*_debcb = 10
		case "\u0064\u006b\u0045\u0064\u0067\u0065":
			*_debcb = 11
		case "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065":
			*_debcb = 12
		case "\u0063\u006c\u0065a\u0072":
			*_debcb = 13
		case "\u0066\u006c\u0061\u0074":
			*_debcb = 14
		case "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l":
			*_debcb = 15
		}
	}
	_bccd, _dggbg = d.Token()
	if _dggbg != nil {
		return _dggbg
	}
	if _gccefd, _bcfde := _bccd.(_g.EndElement); _bcfde && _gccefd.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bccd)
}

type CT_LineStyleList struct{ Ln []*CT_LineProperties }

// ValidateWithPath validates the CT_LineEndProperties and its children, prefixing error messages with path
func (_aegec *CT_LineEndProperties) ValidateWithPath(path string) error {
	if _abfae := _aegec.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _abfae != nil {
		return _abfae
	}
	if _fgaa := _aegec.WAttr.ValidateWithPath(path + "\u002f\u0057\u0041\u0074\u0074\u0072"); _fgaa != nil {
		return _fgaa
	}
	if _bffb := _aegec.LenAttr.ValidateWithPath(path + "\u002f\u004c\u0065\u006e\u0041\u0074\u0074\u0072"); _bffb != nil {
		return _bffb
	}
	return nil
}

// Validate validates the CT_FlatText and its children
func (_ffgfe *CT_FlatText) Validate() error {
	return _ffgfe.ValidateWithPath("C\u0054\u005f\u0046\u006c\u0061\u0074\u0054\u0065\u0078\u0074")
}

func NewCT_Color() *CT_Color { _fbgd := &CT_Color{}; return _fbgd }

func (_gefdc ST_TextVertOverflowType) String() string {
	switch _gefdc {
	case 0:
		return ""
	case 1:
		return "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case 2:
		return "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073"
	case 3:
		return "\u0063\u006c\u0069\u0070"
	}
	return ""
}

func NewCT_BlurEffect() *CT_BlurEffect { _ccfcc := &CT_BlurEffect{}; return _ccfcc }

func (_eeaec ST_TextFontAlignType) ValidateWithPath(path string) error {
	switch _eeaec {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eeaec))
	}
	return nil
}

type CT_ConnectorLocking struct {
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

// ValidateWithPath validates the CT_QuickTimeFile and its children, prefixing error messages with path
func (_gcdbf *CT_QuickTimeFile) ValidateWithPath(path string) error {
	if _gcdbf.ExtLst != nil {
		if _egeb := _gcdbf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _egeb != nil {
			return _egeb
		}
	}
	return nil
}

func (_eaccg *Graphic) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_eaccg.CT_GraphicalObject = *NewCT_GraphicalObject()
_gcdd:
	for {
		_bbcgcb, _eaffc := d.Token()
		if _eaffc != nil {
			return _eaffc
		}
		switch _efbfc := _bbcgcb.(type) {
		case _g.StartElement:
			switch _efbfc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}:
				if _dgadd := d.DecodeElement(_eaccg.GraphicData, &_efbfc); _dgadd != nil {
					return _dgadd
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0047r\u0061\u0070\u0068\u0069\u0063\u0020\u0025\u0076", _efbfc.Name)
				if _fdaga := d.Skip(); _fdaga != nil {
					return _fdaga
				}
			}
		case _g.EndElement:
			break _gcdd
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextNoBullet and its children, prefixing error messages with path
func (_fcbgc *CT_TextNoBullet) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the EG_LineJoinProperties and its children, prefixing error messages with path
func (_abgegf *EG_LineJoinProperties) ValidateWithPath(path string) error {
	if _abgegf.Round != nil {
		if _ggaca := _abgegf.Round.ValidateWithPath(path + "\u002f\u0052\u006f\u0075\u006e\u0064"); _ggaca != nil {
			return _ggaca
		}
	}
	if _abgegf.Bevel != nil {
		if _gacfdb := _abgegf.Bevel.ValidateWithPath(path + "\u002f\u0042\u0065\u0076\u0065\u006c"); _gacfdb != nil {
			return _gacfdb
		}
	}
	if _abgegf.Miter != nil {
		if _becdc := _abgegf.Miter.ValidateWithPath(path + "\u002f\u004d\u0069\u0074\u0065\u0072"); _becdc != nil {
			return _becdc
		}
	}
	return nil
}

func (_bddfd ST_TextHorzOverflowType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_dfgdf := _g.Attr{}
	_dfgdf.Name = name
	switch _bddfd {
	case ST_TextHorzOverflowTypeUnset:
		_dfgdf.Value = ""
	case ST_TextHorzOverflowTypeOverflow:
		_dfgdf.Value = "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case ST_TextHorzOverflowTypeClip:
		_dfgdf.Value = "\u0063\u006c\u0069\u0070"
	}
	return _dfgdf, nil
}

func (_fggdf *CT_TableStyleCellStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bcded:
	for {
		_cgagc, _gebdbd := d.Token()
		if _gebdbd != nil {
			return _gebdbd
		}
		switch _cgbde := _cgagc.(type) {
		case _g.StartElement:
			switch _cgbde.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0042d\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0042d\u0072"}:
				_fggdf.TcBdr = NewCT_TableCellBorderStyle()
				if _gcbb := d.DecodeElement(_fggdf.TcBdr, &_cgbde); _gcbb != nil {
					return _gcbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_fggdf.Fill = NewCT_FillProperties()
				if _dcadc := d.DecodeElement(_fggdf.Fill, &_cgbde); _dcadc != nil {
					return _dcadc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				_fggdf.FillRef = NewCT_StyleMatrixReference()
				if _ccdab := d.DecodeElement(_fggdf.FillRef, &_cgbde); _ccdab != nil {
					return _ccdab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}:
				_fggdf.Cell3D = NewCT_Cell3D()
				if _gddg := d.DecodeElement(_fggdf.Cell3D, &_cgbde); _gddg != nil {
					return _gddg
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u0061\u0062\u006ce\u0053\u0074\u0079\u006c\u0065\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _cgbde.Name)
				if _fgeg := d.Skip(); _fgeg != nil {
					return _fgeg
				}
			}
		case _g.EndElement:
			break _bcded
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_GlowEffect() *CT_GlowEffect { _fabb := &CT_GlowEffect{}; return _fabb }

func NewCT_Ratio() *CT_Ratio { _ggagd := &CT_Ratio{}; return _ggagd }

func (_facba *CT_Connection) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _aded := range start.Attr {
		if _aded.Name.Local == "\u0069\u0064" {
			_acffe, _dgbb := _c.ParseUint(_aded.Value, 10, 32)
			if _dgbb != nil {
				return _dgbb
			}
			_facba.IdAttr = uint32(_acffe)
			continue
		}
		if _aded.Name.Local == "\u0069\u0064\u0078" {
			_ffge, _fagc := _c.ParseUint(_aded.Value, 10, 32)
			if _fagc != nil {
				return _fagc
			}
			_facba.IdxAttr = uint32(_ffge)
			continue
		}
	}
	for {
		_aaca, _cagef := d.Token()
		if _cagef != nil {
			return _gf.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0043o\u006en\u0065c\u0074\u0069\u006f\u006e\u003a\u0020\u0025s", _cagef)
		}
		if _becc, _fcea := _aaca.(_g.EndElement); _fcea && _becc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_GvmlGroupShapeChoice and its children
func (_aace *CT_GvmlGroupShapeChoice) Validate() error {
	return _aace.ValidateWithPath("\u0043\u0054\u005fGv\u006d\u006c\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065")
}

// Validate validates the CT_TextBulletTypefaceFollowText and its children
func (_adgf *CT_TextBulletTypefaceFollowText) Validate() error {
	return _adgf.ValidateWithPath("\u0043\u0054\u005fT\u0065\u0078\u0074\u0042u\u006c\u006c\u0065\u0074\u0054\u0079\u0070e\u0066\u0061\u0063\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074")
}

// ValidateWithPath validates the CT_FontScheme and its children, prefixing error messages with path
func (_bbacc *CT_FontScheme) ValidateWithPath(path string) error {
	if _cfffa := _bbacc.MajorFont.ValidateWithPath(path + "\u002f\u004d\u0061\u006a\u006f\u0072\u0046\u006f\u006e\u0074"); _cfffa != nil {
		return _cfffa
	}
	if _dddd := _bbacc.MinorFont.ValidateWithPath(path + "\u002f\u004d\u0069\u006e\u006f\u0072\u0046\u006f\u006e\u0074"); _dddd != nil {
		return _dddd
	}
	if _bbacc.ExtLst != nil {
		if _ceddc := _bbacc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ceddc != nil {
			return _ceddc
		}
	}
	return nil
}

func (_geece *CT_WholeE2oFormatting) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _geece.Ln != nil {
		_ffeaa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_geece.Ln, _ffeaa)
	}
	if _geece.EffectLst != nil {
		_cfab := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_geece.EffectLst, _cfab)
	}
	if _geece.EffectDag != nil {
		_bbaa := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_geece.EffectDag, _bbaa)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_befb *CT_BaseStyles) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_befb.ClrScheme = NewCT_ColorScheme()
	_befb.FontScheme = NewCT_FontScheme()
	_befb.FmtScheme = NewCT_StyleMatrix()
_fcf:
	for {
		_ccc, _bbd := d.Token()
		if _bbd != nil {
			return _bbd
		}
		switch _cbfd := _ccc.(type) {
		case _g.StartElement:
			switch _cbfd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				if _daeb := d.DecodeElement(_befb.ClrScheme, &_cbfd); _daeb != nil {
					return _daeb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}:
				if _eegb := d.DecodeElement(_befb.FontScheme, &_cbfd); _eegb != nil {
					return _eegb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}:
				if _dadcf := d.DecodeElement(_befb.FmtScheme, &_cbfd); _dadcf != nil {
					return _dadcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_befb.ExtLst = NewCT_OfficeArtExtensionList()
				if _cfff := d.DecodeElement(_befb.ExtLst, &_cbfd); _cfff != nil {
					return _cfff
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042a\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073 \u0025\u0076", _cbfd.Name)
				if _ggeb := d.Skip(); _ggeb != nil {
					return _ggeb
				}
			}
		case _g.EndElement:
			break _fcf
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_PresetLineDashProperties() *CT_PresetLineDashProperties {
	_gecc := &CT_PresetLineDashProperties{}
	return _gecc
}

func NewCT_EmbeddedWAVAudioFile() *CT_EmbeddedWAVAudioFile {
	_cfecd := &CT_EmbeddedWAVAudioFile{}
	return _cfecd
}

func (_beccb ST_PathShadeType) ValidateWithPath(path string) error {
	switch _beccb {
	case 0, 1, 2, 3:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_beccb))
	}
	return nil
}

// Validate validates the Tbl and its children
func (_bfggeb *Tbl) Validate() error { return _bfggeb.ValidateWithPath("\u0054\u0062\u006c") }

type CT_TextAutonumberBullet struct {
	TypeAttr    ST_TextAutonumberScheme
	StartAtAttr *int32
}

// ValidateWithPath validates the CT_GrayscaleTransform and its children, prefixing error messages with path
func (_bede *CT_GrayscaleTransform) ValidateWithPath(path string) error { return nil }

type CT_Angle struct{ ValAttr int32 }

func (_aebe *CT_Backdrop) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_bgee := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006e\u0063\u0068\u006f\u0072"}}
	e.EncodeElement(_aebe.Anchor, _bgee)
	_eae := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0072\u006d"}}
	e.EncodeElement(_aebe.Norm, _eae)
	_cdge := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0075\u0070"}}
	e.EncodeElement(_aebe.Up, _cdge)
	if _aebe.ExtLst != nil {
		_cag := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aebe.ExtLst, _cag)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewEG_LineFillProperties() *EG_LineFillProperties {
	_fagecg := &EG_LineFillProperties{}
	return _fagecg
}

type CT_GammaTransform struct{}

func (_addcgc *ST_Coordinate) Validate() error { return _addcgc.ValidateWithPath("") }

// Validate validates the CT_EffectStyleItem and its children
func (_caeb *CT_EffectStyleItem) Validate() error {
	return _caeb.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u0049\u0074\u0065\u006d")
}

type CT_AlphaOutsetEffect struct{ RadAttr *ST_Coordinate }

// Validate validates the CT_Path2DCubicBezierTo and its children
func (_cbfc *CT_Path2DCubicBezierTo) Validate() error {
	return _cbfc.ValidateWithPath("\u0043\u0054\u005f\u0050at\u0068\u0032\u0044\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0069\u0065\u0072T\u006f")
}

func (_gfffee ST_TextWrappingType) ValidateWithPath(path string) error {
	switch _gfffee {
	case 0, 1, 2:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gfffee))
	}
	return nil
}

func (_gdgg *CT_BaseStylesOverride) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _gdgg.ClrScheme != nil {
		_ebfb := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0063\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
		e.EncodeElement(_gdgg.ClrScheme, _ebfb)
	}
	if _gdgg.FontScheme != nil {
		_fcd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066o\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
		e.EncodeElement(_gdgg.FontScheme, _fcd)
	}
	if _gdgg.FmtScheme != nil {
		_bddg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0066\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
		e.EncodeElement(_gdgg.FmtScheme, _bddg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dfaaf ST_AnimationChartOnlyBuildType) ValidateWithPath(path string) error {
	switch _dfaaf {
	case 0, 1, 2, 3, 4:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dfaaf))
	}
	return nil
}

// ValidateWithPath validates the CT_TextCharBullet and its children, prefixing error messages with path
func (_dccdg *CT_TextCharBullet) ValidateWithPath(path string) error { return nil }

func (_adadg ST_PresetColorVal) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cgbdb := _g.Attr{}
	_cgbdb.Name = name
	switch _adadg {
	case ST_PresetColorValUnset:
		_cgbdb.Value = ""
	case ST_PresetColorValAliceBlue:
		_cgbdb.Value = "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e"
	case ST_PresetColorValAntiqueWhite:
		_cgbdb.Value = "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValAqua:
		_cgbdb.Value = "\u0061\u0071\u0075\u0061"
	case ST_PresetColorValAquamarine:
		_cgbdb.Value = "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case ST_PresetColorValAzure:
		_cgbdb.Value = "\u0061\u007a\u0075r\u0065"
	case ST_PresetColorValBeige:
		_cgbdb.Value = "\u0062\u0065\u0069g\u0065"
	case ST_PresetColorValBisque:
		_cgbdb.Value = "\u0062\u0069\u0073\u0071\u0075\u0065"
	case ST_PresetColorValBlack:
		_cgbdb.Value = "\u0062\u006c\u0061c\u006b"
	case ST_PresetColorValBlanchedAlmond:
		_cgbdb.Value = "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064"
	case ST_PresetColorValBlue:
		_cgbdb.Value = "\u0062\u006c\u0075\u0065"
	case ST_PresetColorValBlueViolet:
		_cgbdb.Value = "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValBrown:
		_cgbdb.Value = "\u0062\u0072\u006fw\u006e"
	case ST_PresetColorValBurlyWood:
		_cgbdb.Value = "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd"
	case ST_PresetColorValCadetBlue:
		_cgbdb.Value = "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e"
	case ST_PresetColorValChartreuse:
		_cgbdb.Value = "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065"
	case ST_PresetColorValChocolate:
		_cgbdb.Value = "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e"
	case ST_PresetColorValCoral:
		_cgbdb.Value = "\u0063\u006f\u0072a\u006c"
	case ST_PresetColorValCornflowerBlue:
		_cgbdb.Value = "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065"
	case ST_PresetColorValCornsilk:
		_cgbdb.Value = "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b"
	case ST_PresetColorValCrimson:
		_cgbdb.Value = "\u0063r\u0069\u006d\u0073\u006f\u006e"
	case ST_PresetColorValCyan:
		_cgbdb.Value = "\u0063\u0079\u0061\u006e"
	case ST_PresetColorValDarkBlue:
		_cgbdb.Value = "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDarkCyan:
		_cgbdb.Value = "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e"
	case ST_PresetColorValDarkGoldenrod:
		_cgbdb.Value = "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case ST_PresetColorValDarkGray:
		_cgbdb.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDarkGrey:
		_cgbdb.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDarkGreen:
		_cgbdb.Value = "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValDarkKhaki:
		_cgbdb.Value = "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi"
	case ST_PresetColorValDarkMagenta:
		_cgbdb.Value = "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061"
	case ST_PresetColorValDarkOliveGreen:
		_cgbdb.Value = "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDarkOrange:
		_cgbdb.Value = "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case ST_PresetColorValDarkOrchid:
		_cgbdb.Value = "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValDarkRed:
		_cgbdb.Value = "\u0064a\u0072\u006b\u0052\u0065\u0064"
	case ST_PresetColorValDarkSalmon:
		_cgbdb.Value = "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValDarkSeaGreen:
		_cgbdb.Value = "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDarkSlateBlue:
		_cgbdb.Value = "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDarkSlateGray:
		_cgbdb.Value = "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDarkSlateGrey:
		_cgbdb.Value = "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDarkTurquoise:
		_cgbdb.Value = "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValDarkViolet:
		_cgbdb.Value = "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValDkBlue:
		_cgbdb.Value = "\u0064\u006b\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDkCyan:
		_cgbdb.Value = "\u0064\u006b\u0043\u0079\u0061\u006e"
	case ST_PresetColorValDkGoldenrod:
		_cgbdb.Value = "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case ST_PresetColorValDkGray:
		_cgbdb.Value = "\u0064\u006b\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDkGrey:
		_cgbdb.Value = "\u0064\u006b\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDkGreen:
		_cgbdb.Value = "\u0064k\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDkKhaki:
		_cgbdb.Value = "\u0064k\u004b\u0068\u0061\u006b\u0069"
	case ST_PresetColorValDkMagenta:
		_cgbdb.Value = "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a"
	case ST_PresetColorValDkOliveGreen:
		_cgbdb.Value = "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDkOrange:
		_cgbdb.Value = "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case ST_PresetColorValDkOrchid:
		_cgbdb.Value = "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValDkRed:
		_cgbdb.Value = "\u0064\u006b\u0052e\u0064"
	case ST_PresetColorValDkSalmon:
		_cgbdb.Value = "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValDkSeaGreen:
		_cgbdb.Value = "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDkSlateBlue:
		_cgbdb.Value = "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDkSlateGray:
		_cgbdb.Value = "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDkSlateGrey:
		_cgbdb.Value = "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDkTurquoise:
		_cgbdb.Value = "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValDkViolet:
		_cgbdb.Value = "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValDeepPink:
		_cgbdb.Value = "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b"
	case ST_PresetColorValDeepSkyBlue:
		_cgbdb.Value = "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDimGray:
		_cgbdb.Value = "\u0064i\u006d\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDimGrey:
		_cgbdb.Value = "\u0064i\u006d\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDodgerBlue:
		_cgbdb.Value = "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065"
	case ST_PresetColorValFirebrick:
		_cgbdb.Value = "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k"
	case ST_PresetColorValFloralWhite:
		_cgbdb.Value = "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValForestGreen:
		_cgbdb.Value = "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValFuchsia:
		_cgbdb.Value = "\u0066u\u0063\u0068\u0073\u0069\u0061"
	case ST_PresetColorValGainsboro:
		_cgbdb.Value = "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o"
	case ST_PresetColorValGhostWhite:
		_cgbdb.Value = "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValGold:
		_cgbdb.Value = "\u0067\u006f\u006c\u0064"
	case ST_PresetColorValGoldenrod:
		_cgbdb.Value = "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd"
	case ST_PresetColorValGray:
		_cgbdb.Value = "\u0067\u0072\u0061\u0079"
	case ST_PresetColorValGrey:
		_cgbdb.Value = "\u0067\u0072\u0065\u0079"
	case ST_PresetColorValGreen:
		_cgbdb.Value = "\u0067\u0072\u0065e\u006e"
	case ST_PresetColorValGreenYellow:
		_cgbdb.Value = "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValHoneydew:
		_cgbdb.Value = "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077"
	case ST_PresetColorValHotPink:
		_cgbdb.Value = "\u0068o\u0074\u0050\u0069\u006e\u006b"
	case ST_PresetColorValIndianRed:
		_cgbdb.Value = "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d"
	case ST_PresetColorValIndigo:
		_cgbdb.Value = "\u0069\u006e\u0064\u0069\u0067\u006f"
	case ST_PresetColorValIvory:
		_cgbdb.Value = "\u0069\u0076\u006fr\u0079"
	case ST_PresetColorValKhaki:
		_cgbdb.Value = "\u006b\u0068\u0061k\u0069"
	case ST_PresetColorValLavender:
		_cgbdb.Value = "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072"
	case ST_PresetColorValLavenderBlush:
		_cgbdb.Value = "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068"
	case ST_PresetColorValLawnGreen:
		_cgbdb.Value = "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValLemonChiffon:
		_cgbdb.Value = "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e"
	case ST_PresetColorValLightBlue:
		_cgbdb.Value = "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e"
	case ST_PresetColorValLightCoral:
		_cgbdb.Value = "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c"
	case ST_PresetColorValLightCyan:
		_cgbdb.Value = "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n"
	case ST_PresetColorValLightGoldenrodYellow:
		_cgbdb.Value = "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077"
	case ST_PresetColorValLightGray:
		_cgbdb.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case ST_PresetColorValLightGrey:
		_cgbdb.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y"
	case ST_PresetColorValLightGreen:
		_cgbdb.Value = "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLightPink:
		_cgbdb.Value = "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek"
	case ST_PresetColorValLightSalmon:
		_cgbdb.Value = "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValLightSeaGreen:
		_cgbdb.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLightSkyBlue:
		_cgbdb.Value = "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLightSlateGray:
		_cgbdb.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079"
	case ST_PresetColorValLightSlateGrey:
		_cgbdb.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079"
	case ST_PresetColorValLightSteelBlue:
		_cgbdb.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLightYellow:
		_cgbdb.Value = "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValLtBlue:
		_cgbdb.Value = "\u006c\u0074\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLtCoral:
		_cgbdb.Value = "\u006ct\u0043\u006f\u0072\u0061\u006c"
	case ST_PresetColorValLtCyan:
		_cgbdb.Value = "\u006c\u0074\u0043\u0079\u0061\u006e"
	case ST_PresetColorValLtGoldenrodYellow:
		_cgbdb.Value = "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077"
	case ST_PresetColorValLtGray:
		_cgbdb.Value = "\u006c\u0074\u0047\u0072\u0061\u0079"
	case ST_PresetColorValLtGrey:
		_cgbdb.Value = "\u006c\u0074\u0047\u0072\u0065\u0079"
	case ST_PresetColorValLtGreen:
		_cgbdb.Value = "\u006ct\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLtPink:
		_cgbdb.Value = "\u006c\u0074\u0050\u0069\u006e\u006b"
	case ST_PresetColorValLtSalmon:
		_cgbdb.Value = "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValLtSeaGreen:
		_cgbdb.Value = "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLtSkyBlue:
		_cgbdb.Value = "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e"
	case ST_PresetColorValLtSlateGray:
		_cgbdb.Value = "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case ST_PresetColorValLtSlateGrey:
		_cgbdb.Value = "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case ST_PresetColorValLtSteelBlue:
		_cgbdb.Value = "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLtYellow:
		_cgbdb.Value = "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValLime:
		_cgbdb.Value = "\u006c\u0069\u006d\u0065"
	case ST_PresetColorValLimeGreen:
		_cgbdb.Value = "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValLinen:
		_cgbdb.Value = "\u006c\u0069\u006ee\u006e"
	case ST_PresetColorValMagenta:
		_cgbdb.Value = "\u006da\u0067\u0065\u006e\u0074\u0061"
	case ST_PresetColorValMaroon:
		_cgbdb.Value = "\u006d\u0061\u0072\u006f\u006f\u006e"
	case ST_PresetColorValMedAquamarine:
		_cgbdb.Value = "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case ST_PresetColorValMedBlue:
		_cgbdb.Value = "\u006de\u0064\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMedOrchid:
		_cgbdb.Value = "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d"
	case ST_PresetColorValMedPurple:
		_cgbdb.Value = "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce"
	case ST_PresetColorValMedSeaGreen:
		_cgbdb.Value = "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMedSlateBlue:
		_cgbdb.Value = "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMedSpringGreen:
		_cgbdb.Value = "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMedTurquoise:
		_cgbdb.Value = "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValMedVioletRed:
		_cgbdb.Value = "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case ST_PresetColorValMediumAquamarine:
		_cgbdb.Value = "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case ST_PresetColorValMediumBlue:
		_cgbdb.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMediumOrchid:
		_cgbdb.Value = "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValMediumPurple:
		_cgbdb.Value = "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065"
	case ST_PresetColorValMediumSeaGreen:
		_cgbdb.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMediumSlateBlue:
		_cgbdb.Value = "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMediumSpringGreen:
		_cgbdb.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMediumTurquoise:
		_cgbdb.Value = "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValMediumVioletRed:
		_cgbdb.Value = "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case ST_PresetColorValMidnightBlue:
		_cgbdb.Value = "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMintCream:
		_cgbdb.Value = "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m"
	case ST_PresetColorValMistyRose:
		_cgbdb.Value = "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e"
	case ST_PresetColorValMoccasin:
		_cgbdb.Value = "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e"
	case ST_PresetColorValNavajoWhite:
		_cgbdb.Value = "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValNavy:
		_cgbdb.Value = "\u006e\u0061\u0076\u0079"
	case ST_PresetColorValOldLace:
		_cgbdb.Value = "\u006fl\u0064\u004c\u0061\u0063\u0065"
	case ST_PresetColorValOlive:
		_cgbdb.Value = "\u006f\u006c\u0069v\u0065"
	case ST_PresetColorValOliveDrab:
		_cgbdb.Value = "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b"
	case ST_PresetColorValOrange:
		_cgbdb.Value = "\u006f\u0072\u0061\u006e\u0067\u0065"
	case ST_PresetColorValOrangeRed:
		_cgbdb.Value = "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d"
	case ST_PresetColorValOrchid:
		_cgbdb.Value = "\u006f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValPaleGoldenrod:
		_cgbdb.Value = "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case ST_PresetColorValPaleGreen:
		_cgbdb.Value = "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValPaleTurquoise:
		_cgbdb.Value = "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValPaleVioletRed:
		_cgbdb.Value = "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case ST_PresetColorValPapayaWhip:
		_cgbdb.Value = "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070"
	case ST_PresetColorValPeachPuff:
		_cgbdb.Value = "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f"
	case ST_PresetColorValPeru:
		_cgbdb.Value = "\u0070\u0065\u0072\u0075"
	case ST_PresetColorValPink:
		_cgbdb.Value = "\u0070\u0069\u006e\u006b"
	case ST_PresetColorValPlum:
		_cgbdb.Value = "\u0070\u006c\u0075\u006d"
	case ST_PresetColorValPowderBlue:
		_cgbdb.Value = "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065"
	case ST_PresetColorValPurple:
		_cgbdb.Value = "\u0070\u0075\u0072\u0070\u006c\u0065"
	case ST_PresetColorValRed:
		_cgbdb.Value = "\u0072\u0065\u0064"
	case ST_PresetColorValRosyBrown:
		_cgbdb.Value = "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n"
	case ST_PresetColorValRoyalBlue:
		_cgbdb.Value = "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e"
	case ST_PresetColorValSaddleBrown:
		_cgbdb.Value = "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e"
	case ST_PresetColorValSalmon:
		_cgbdb.Value = "\u0073\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValSandyBrown:
		_cgbdb.Value = "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e"
	case ST_PresetColorValSeaGreen:
		_cgbdb.Value = "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValSeaShell:
		_cgbdb.Value = "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c"
	case ST_PresetColorValSienna:
		_cgbdb.Value = "\u0073\u0069\u0065\u006e\u006e\u0061"
	case ST_PresetColorValSilver:
		_cgbdb.Value = "\u0073\u0069\u006c\u0076\u0065\u0072"
	case ST_PresetColorValSkyBlue:
		_cgbdb.Value = "\u0073k\u0079\u0042\u006c\u0075\u0065"
	case ST_PresetColorValSlateBlue:
		_cgbdb.Value = "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e"
	case ST_PresetColorValSlateGray:
		_cgbdb.Value = "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y"
	case ST_PresetColorValSlateGrey:
		_cgbdb.Value = "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y"
	case ST_PresetColorValSnow:
		_cgbdb.Value = "\u0073\u006e\u006f\u0077"
	case ST_PresetColorValSpringGreen:
		_cgbdb.Value = "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValSteelBlue:
		_cgbdb.Value = "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e"
	case ST_PresetColorValTan:
		_cgbdb.Value = "\u0074\u0061\u006e"
	case ST_PresetColorValTeal:
		_cgbdb.Value = "\u0074\u0065\u0061\u006c"
	case ST_PresetColorValThistle:
		_cgbdb.Value = "\u0074h\u0069\u0073\u0074\u006c\u0065"
	case ST_PresetColorValTomato:
		_cgbdb.Value = "\u0074\u006f\u006d\u0061\u0074\u006f"
	case ST_PresetColorValTurquoise:
		_cgbdb.Value = "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e"
	case ST_PresetColorValViolet:
		_cgbdb.Value = "\u0076\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValWheat:
		_cgbdb.Value = "\u0077\u0068\u0065a\u0074"
	case ST_PresetColorValWhite:
		_cgbdb.Value = "\u0077\u0068\u0069t\u0065"
	case ST_PresetColorValWhiteSmoke:
		_cgbdb.Value = "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065"
	case ST_PresetColorValYellow:
		_cgbdb.Value = "\u0079\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValYellowGreen:
		_cgbdb.Value = "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e"
	}
	return _cgbdb, nil
}

func (_cgage *ST_TextSpacingPercentOrPercentString) Validate() error {
	return _cgage.ValidateWithPath("")
}

func (_gcff ST_LightRigDirection) ValidateWithPath(path string) error {
	switch _gcff {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcff))
	}
	return nil
}

const (
	ST_ChartBuildStepUnset        ST_ChartBuildStep = 0
	ST_ChartBuildStepCategory     ST_ChartBuildStep = 1
	ST_ChartBuildStepPtInCategory ST_ChartBuildStep = 2
	ST_ChartBuildStepSeries       ST_ChartBuildStep = 3
	ST_ChartBuildStepPtInSeries   ST_ChartBuildStep = 4
	ST_ChartBuildStepAllPts       ST_ChartBuildStep = 5
	ST_ChartBuildStepGridLegend   ST_ChartBuildStep = 6
)

// ValidateWithPath validates the CT_EmptyElement and its children, prefixing error messages with path
func (_cgac *CT_EmptyElement) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_GvmlGraphicalObjectFrame and its children, prefixing error messages with path
func (_ebgad *CT_GvmlGraphicalObjectFrame) ValidateWithPath(path string) error {
	if _eefcb := _ebgad.NvGraphicFramePr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"); _eefcb != nil {
		return _eefcb
	}
	if _acfff := _ebgad.Graphic.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063"); _acfff != nil {
		return _acfff
	}
	if _dggfe := _ebgad.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _dggfe != nil {
		return _dggfe
	}
	if _ebgad.ExtLst != nil {
		if _dacd := _ebgad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dacd != nil {
			return _dacd
		}
	}
	return nil
}

type Graphic struct{ CT_GraphicalObject }

func (_cgcgc *CT_NonVisualGraphicFrameProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _cgcgc.GraphicFrameLocks != nil {
		_cdbac := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072ap\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_cgcgc.GraphicFrameLocks, _cdbac)
	}
	if _cgcgc.ExtLst != nil {
		_bdfaf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cgcgc.ExtLst, _bdfaf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_GradientStop() *CT_GradientStop { _aaccf := &CT_GradientStop{}; return _aaccf }

func NewBlip() *Blip { _ged := &Blip{}; _ged.CT_Blip = *NewCT_Blip(); return _ged }

func NewCT_Path2DClose() *CT_Path2DClose { _ecdc := &CT_Path2DClose{}; return _ecdc }

func (_feffbd *ST_BlipCompression) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fdgcc, _ffcec := d.Token()
	if _ffcec != nil {
		return _ffcec
	}
	if _ecgfg, _ebbag := _fdgcc.(_g.EndElement); _ebbag && _ecgfg.Name == start.Name {
		*_feffbd = 1
		return nil
	}
	if _dcfebf, _bdfdbb := _fdgcc.(_g.CharData); !_bdfdbb {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fdgcc)
	} else {
		switch string(_dcfebf) {
		case "":
			*_feffbd = 0
		case "\u0065\u006d\u0061i\u006c":
			*_feffbd = 1
		case "\u0073\u0063\u0072\u0065\u0065\u006e":
			*_feffbd = 2
		case "\u0070\u0072\u0069n\u0074":
			*_feffbd = 3
		case "\u0068q\u0070\u0072\u0069\u006e\u0074":
			*_feffbd = 4
		case "\u006e\u006f\u006e\u0065":
			*_feffbd = 5
		}
	}
	_fdgcc, _ffcec = d.Token()
	if _ffcec != nil {
		return _ffcec
	}
	if _ffefb, _bdfff := _fdgcc.(_g.EndElement); _bdfff && _ffefb.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fdgcc)
}

func NewCT_InnerShadowEffect() *CT_InnerShadowEffect {
	_dbged := &CT_InnerShadowEffect{}
	return _dbged
}

func (_bgbb *CT_Angle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ace := range start.Attr {
		if _ace.Name.Local == "\u0076\u0061\u006c" {
			_gdf, _gfb := _c.ParseInt(_ace.Value, 10, 32)
			if _gfb != nil {
				return _gfb
			}
			_bgbb.ValAttr = int32(_gdf)
			continue
		}
	}
	for {
		_eab, _gba := d.Token()
		if _gba != nil {
			return _gf.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fA\u006e\u0067\u006c\u0065: \u0025\u0073", _gba)
		}
		if _egea, _bag := _eab.(_g.EndElement); _bag && _egea.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_AudioCD struct {
	St     *CT_AudioCDTime
	End    *CT_AudioCDTime
	ExtLst *CT_OfficeArtExtensionList
}

func (_edgda *CT_TableCol) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bbeae := range start.Attr {
		if _bbeae.Name.Local == "\u0077" {
			_afafb, _fcdef := ParseUnionST_Coordinate(_bbeae.Value)
			if _fcdef != nil {
				return _fcdef
			}
			_edgda.WAttr = _afafb
			continue
		}
	}
_caeec:
	for {
		_ccfgc, _geddb := d.Token()
		if _geddb != nil {
			return _geddb
		}
		switch _cbfb := _ccfgc.(type) {
		case _g.StartElement:
			switch _cbfb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edgda.ExtLst = NewCT_OfficeArtExtensionList()
				if _bgedd := d.DecodeElement(_edgda.ExtLst, &_cbfb); _bgedd != nil {
					return _bgedd
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0020\u0025\u0076", _cbfb.Name)
				if _feece := d.Skip(); _feece != nil {
					return _feece
				}
			}
		case _g.EndElement:
			break _caeec
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the EG_LineDashProperties and its children, prefixing error messages with path
func (_dcdfg *EG_LineDashProperties) ValidateWithPath(path string) error {
	if _dcdfg.PrstDash != nil {
		if _gdeef := _dcdfg.PrstDash.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0044\u0061\u0073h"); _gdeef != nil {
			return _gdeef
		}
	}
	if _dcdfg.CustDash != nil {
		if _bbcfa := _dcdfg.CustDash.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0044\u0061\u0073h"); _bbcfa != nil {
			return _bbcfa
		}
	}
	return nil
}

// Validate validates the CT_GvmlConnector and its children
func (_eaca *CT_GvmlConnector) Validate() error {
	return _eaca.ValidateWithPath("\u0043\u0054_\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072")
}

type VideoFile struct{ CT_VideoFile }

func ParseUnionST_Percentage(s string) (ST_Percentage, error) {
	_cddfce := ST_Percentage{}
	if _ge.ST_PercentagePatternRe.MatchString(s) {
		_cddfce.ST_Percentage = &s
	} else {
		_cafegf, _adafae := _c.ParseInt(s, 10, 64)
		if _adafae != nil {
			return _cddfce, _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _adafae)
		}
		_gfgea := int32(_cafegf)
		_cddfce.ST_PercentageDecimal = &_gfgea
	}
	return _cddfce, nil
}

type CT_GvmlPicture struct {
	NvPicPr  *CT_GvmlPictureNonVisual
	BlipFill *CT_BlipFillProperties
	SpPr     *CT_ShapeProperties
	Style    *CT_ShapeStyle
	ExtLst   *CT_OfficeArtExtensionList
}

func (_gfbcf *EG_Geometry) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gfbcf.CustGeom != nil {
		_egfec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_gfbcf.CustGeom, _egfec)
	}
	if _gfbcf.PrstGeom != nil {
		_egfef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_gfbcf.PrstGeom, _egfef)
	}
	return nil
}

func (_cfg *CT_AlphaReplaceEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gbb := range start.Attr {
		if _gbb.Name.Local == "\u0061" {
			_gaadg, _edg := ParseUnionST_PositiveFixedPercentage(_gbb.Value)
			if _edg != nil {
				return _edg
			}
			_cfg.AAttr = _gaadg
			continue
		}
	}
	for {
		_bcce, _fae := d.Token()
		if _fae != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006ca\u0063\u0065\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _fae)
		}
		if _fbgb, _adgd := _bcce.(_g.EndElement); _adgd && _fbgb.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_SystemColorVal byte

type CT_BiLevelEffect struct{ ThreshAttr ST_PositiveFixedPercentage }

// Validate validates the AG_Blob and its children
func (_ac *AG_Blob) Validate() error {
	return _ac.ValidateWithPath("\u0041G\u005f\u0042\u006c\u006f\u0062")
}

func NewCT_PresetShadowEffect() *CT_PresetShadowEffect {
	_cacb := &CT_PresetShadowEffect{}
	_cacb.PrstAttr = ST_PresetShadowVal(1)
	return _cacb
}

func (_gacb *CT_FlatText) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gacb.ZAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u007a"}, Value: _gf.Sprintf("\u0025\u0076", *_gacb.ZAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ffdaf ST_LineEndWidth) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_ffdaf.String(), start)
}

// ValidateWithPath validates the CT_Point2D and its children, prefixing error messages with path
func (_degab *CT_Point2D) ValidateWithPath(path string) error {
	if _daffb := _degab.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _daffb != nil {
		return _daffb
	}
	if _gfadf := _degab.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _gfadf != nil {
		return _gfadf
	}
	return nil
}

type CT_SupplementalFont struct {
	ScriptAttr   string
	TypefaceAttr string
}

func NewCT_GraphicalObjectData() *CT_GraphicalObjectData {
	_eadec := &CT_GraphicalObjectData{}
	return _eadec
}

type ST_TextAlignType byte

func (_gcag ST_BevelPresetType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_fcdfgb := _g.Attr{}
	_fcdfgb.Name = name
	switch _gcag {
	case ST_BevelPresetTypeUnset:
		_fcdfgb.Value = ""
	case ST_BevelPresetTypeRelaxedInset:
		_fcdfgb.Value = "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074"
	case ST_BevelPresetTypeCircle:
		_fcdfgb.Value = "\u0063\u0069\u0072\u0063\u006c\u0065"
	case ST_BevelPresetTypeSlope:
		_fcdfgb.Value = "\u0073\u006c\u006fp\u0065"
	case ST_BevelPresetTypeCross:
		_fcdfgb.Value = "\u0063\u0072\u006fs\u0073"
	case ST_BevelPresetTypeAngle:
		_fcdfgb.Value = "\u0061\u006e\u0067l\u0065"
	case ST_BevelPresetTypeSoftRound:
		_fcdfgb.Value = "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed"
	case ST_BevelPresetTypeConvex:
		_fcdfgb.Value = "\u0063\u006f\u006e\u0076\u0065\u0078"
	case ST_BevelPresetTypeCoolSlant:
		_fcdfgb.Value = "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et"
	case ST_BevelPresetTypeDivot:
		_fcdfgb.Value = "\u0064\u0069\u0076o\u0074"
	case ST_BevelPresetTypeRiblet:
		_fcdfgb.Value = "\u0072\u0069\u0062\u006c\u0065\u0074"
	case ST_BevelPresetTypeHardEdge:
		_fcdfgb.Value = "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065"
	case ST_BevelPresetTypeArtDeco:
		_fcdfgb.Value = "\u0061r\u0074\u0044\u0065\u0063\u006f"
	}
	return _fcdfgb, nil
}

// Validate validates the CT_TextNoBullet and its children
func (_afcad *CT_TextNoBullet) Validate() error {
	return _afcad.ValidateWithPath("\u0043T\u005fT\u0065\u0078\u0074\u004e\u006f\u0042\u0075\u006c\u006c\u0065\u0074")
}

func (_ebc *CT_AlphaModulateFixedEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gce := range start.Attr {
		if _gce.Name.Local == "\u0061\u006d\u0074" {
			_eba, _bde := ParseUnionST_PositivePercentage(_gce.Value)
			if _bde != nil {
				return _bde
			}
			_ebc.AmtAttr = &_eba
			continue
		}
	}
	for {
		_ede, _cec := d.Token()
		if _cec != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006cp\u0068\u0061\u004d\u006f\u0064\u0075l\u0061\u0074\u0065\u0046\u0069\u0078\u0065\u0064\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _cec)
		}
		if _bfdd, _fbce := _ede.(_g.EndElement); _fbce && _bfdd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_EffectProperties struct {
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

type CT_AnimationDgmElement struct {
	IdAttr      *string
	BldStepAttr ST_DgmBuildStep
}

func (_abadc *CT_TextBulletSizePoint) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_abadc.ValAttr = 100
	for _, _gfgfeb := range start.Attr {
		if _gfgfeb.Name.Local == "\u0076\u0061\u006c" {
			_gabdc, _bebdb := _c.ParseInt(_gfgfeb.Value, 10, 32)
			if _bebdb != nil {
				return _bebdb
			}
			_abadc.ValAttr = int32(_gabdc)
			continue
		}
	}
	for {
		_gedcc, _effeg := d.Token()
		if _effeg != nil {
			return _gf.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078t\u0042u\u006cl\u0065t\u0053\u0069\u007a\u0065\u0050\u006f\u0069\u006e\u0074\u003a\u0020\u0025\u0073", _effeg)
		}
		if _bbdgb, _acedg := _gedcc.(_g.EndElement); _acedg && _bbdgb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_acebf ST_TextFontAlignType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_acebf.String(), start)
}

func (_beged ST_PresetMaterialType) Validate() error { return _beged.ValidateWithPath("") }

func (_addfd ST_BlipCompression) ValidateWithPath(path string) error {
	switch _addfd {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_addfd))
	}
	return nil
}

// Validate validates the CT_Vector3D and its children
func (_cdcebg *CT_Vector3D) Validate() error {
	return _cdcebg.ValidateWithPath("C\u0054\u005f\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0044")
}

func (_fdab *CT_GvmlShapeNonVisual) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_aedfe := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_fdab.CNvPr, _aedfe)
	_aefec := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u004e\u0076\u0053\u0070\u0050r"}}
	e.EncodeElement(_fdab.CNvSpPr, _aefec)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cegcd *CT_PresetTextShape) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_adbcc, _fccac := _cegcd.PrstAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _fccac != nil {
		return _fccac
	}
	start.Attr = append(start.Attr, _adbcc)
	e.EncodeToken(start)
	if _cegcd.AvLst != nil {
		_abef := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_cegcd.AvLst, _abef)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ColorMRU and its children
func (_dcgga *CT_ColorMRU) Validate() error {
	return _dcgga.ValidateWithPath("C\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0052\u0055")
}

func NewCT_EffectContainer() *CT_EffectContainer { _gcde := &CT_EffectContainer{}; return _gcde }

// Validate validates the CT_GroupShapeProperties and its children
func (_bbdfb *CT_GroupShapeProperties) Validate() error {
	return _bbdfb.ValidateWithPath("\u0043\u0054\u005fGr\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_TextBlipBullet struct{ Blip *CT_Blip }

// Validate validates the CT_GrayscaleTransform and its children
func (_dbeeg *CT_GrayscaleTransform) Validate() error {
	return _dbeeg.ValidateWithPath("C\u0054\u005f\u0047\u0072ay\u0073c\u0061\u006c\u0065\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d")
}

// ValidateWithPath validates the EG_TextBulletColor and its children, prefixing error messages with path
func (_aaage *EG_TextBulletColor) ValidateWithPath(path string) error {
	if _aaage.BuClrTx != nil {
		if _fecdac := _aaage.BuClrTx.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072\u0054\u0078"); _fecdac != nil {
			return _fecdac
		}
	}
	if _aaage.BuClr != nil {
		if _eafee := _aaage.BuClr.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072"); _eafee != nil {
			return _eafee
		}
	}
	return nil
}

func (_fgaed *CT_LineJoinRound) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_ggaaf, _ccgac := d.Token()
		if _ccgac != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065J\u006fi\u006e\u0052\u006f\u0075\u006e\u0064\u003a \u0025\u0073", _ccgac)
		}
		if _eaebg, _eefe := _ggaaf.(_g.EndElement); _eefe && _eaebg.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_TableStyleTextStyle() *CT_TableStyleTextStyle {
	_gfgab := &CT_TableStyleTextStyle{}
	return _gfgab
}

func (_dbbb ST_TextShapeType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_adbfe := _g.Attr{}
	_adbfe.Name = name
	switch _dbbb {
	case ST_TextShapeTypeUnset:
		_adbfe.Value = ""
	case ST_TextShapeTypeTextNoShape:
		_adbfe.Value = "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065"
	case ST_TextShapeTypeTextPlain:
		_adbfe.Value = "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n"
	case ST_TextShapeTypeTextStop:
		_adbfe.Value = "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070"
	case ST_TextShapeTypeTextTriangle:
		_adbfe.Value = "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_TextShapeTypeTextTriangleInverted:
		_adbfe.Value = "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064"
	case ST_TextShapeTypeTextChevron:
		_adbfe.Value = "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e"
	case ST_TextShapeTypeTextChevronInverted:
		_adbfe.Value = "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064"
	case ST_TextShapeTypeTextRingInside:
		_adbfe.Value = "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065"
	case ST_TextShapeTypeTextRingOutside:
		_adbfe.Value = "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065"
	case ST_TextShapeTypeTextArchUp:
		_adbfe.Value = "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070"
	case ST_TextShapeTypeTextArchDown:
		_adbfe.Value = "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextCircle:
		_adbfe.Value = "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065"
	case ST_TextShapeTypeTextButton:
		_adbfe.Value = "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e"
	case ST_TextShapeTypeTextArchUpPour:
		_adbfe.Value = "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextArchDownPour:
		_adbfe.Value = "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextCirclePour:
		_adbfe.Value = "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextButtonPour:
		_adbfe.Value = "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextCurveUp:
		_adbfe.Value = "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070"
	case ST_TextShapeTypeTextCurveDown:
		_adbfe.Value = "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextCanUp:
		_adbfe.Value = "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p"
	case ST_TextShapeTypeTextCanDown:
		_adbfe.Value = "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextWave1:
		_adbfe.Value = "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651"
	case ST_TextShapeTypeTextWave2:
		_adbfe.Value = "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652"
	case ST_TextShapeTypeTextDoubleWave1:
		_adbfe.Value = "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031"
	case ST_TextShapeTypeTextWave4:
		_adbfe.Value = "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654"
	case ST_TextShapeTypeTextInflate:
		_adbfe.Value = "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065"
	case ST_TextShapeTypeTextDeflate:
		_adbfe.Value = "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065"
	case ST_TextShapeTypeTextInflateBottom:
		_adbfe.Value = "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case ST_TextShapeTypeTextDeflateBottom:
		_adbfe.Value = "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case ST_TextShapeTypeTextInflateTop:
		_adbfe.Value = "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case ST_TextShapeTypeTextDeflateTop:
		_adbfe.Value = "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case ST_TextShapeTypeTextDeflateInflate:
		_adbfe.Value = "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065"
	case ST_TextShapeTypeTextDeflateInflateDeflate:
		_adbfe.Value = "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e"
	case ST_TextShapeTypeTextFadeRight:
		_adbfe.Value = "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074"
	case ST_TextShapeTypeTextFadeLeft:
		_adbfe.Value = "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074"
	case ST_TextShapeTypeTextFadeUp:
		_adbfe.Value = "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070"
	case ST_TextShapeTypeTextFadeDown:
		_adbfe.Value = "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextSlantUp:
		_adbfe.Value = "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070"
	case ST_TextShapeTypeTextSlantDown:
		_adbfe.Value = "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextCascadeUp:
		_adbfe.Value = "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070"
	case ST_TextShapeTypeTextCascadeDown:
		_adbfe.Value = "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	}
	return _adbfe, nil
}

func (_degc *CT_FontReference) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_degc.IdxAttr = ST_FontCollectionIndex(1)
	for _, _acffb := range start.Attr {
		if _acffb.Name.Local == "\u0069\u0064\u0078" {
			_degc.IdxAttr.UnmarshalXMLAttr(_acffb)
			continue
		}
	}
_becba:
	for {
		_fcff, _cbbfe := d.Token()
		if _cbbfe != nil {
			return _cbbfe
		}
		switch _agdba := _fcff.(type) {
		case _g.StartElement:
			switch _agdba.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_degc.ScrgbClr = NewCT_ScRgbColor()
				if _ffde := d.DecodeElement(_degc.ScrgbClr, &_agdba); _ffde != nil {
					return _ffde
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_degc.SrgbClr = NewCT_SRgbColor()
				if _gfeca := d.DecodeElement(_degc.SrgbClr, &_agdba); _gfeca != nil {
					return _gfeca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_degc.HslClr = NewCT_HslColor()
				if _aacg := d.DecodeElement(_degc.HslClr, &_agdba); _aacg != nil {
					return _aacg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_degc.SysClr = NewCT_SystemColor()
				if _gbgb := d.DecodeElement(_degc.SysClr, &_agdba); _gbgb != nil {
					return _gbgb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_degc.SchemeClr = NewCT_SchemeColor()
				if _bfebba := d.DecodeElement(_degc.SchemeClr, &_agdba); _bfebba != nil {
					return _bfebba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_degc.PrstClr = NewCT_PresetColor()
				if _fcfaa := d.DecodeElement(_degc.PrstClr, &_agdba); _fcfaa != nil {
					return _fcfaa
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0025v", _agdba.Name)
				if _ebfgea := d.Skip(); _ebfgea != nil {
					return _ebfgea
				}
			}
		case _g.EndElement:
			break _becba
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SolidColorFillProperties and its children
func (_bdecf *CT_SolidColorFillProperties) Validate() error {
	return _bdecf.ValidateWithPath("C\u0054\u005f\u0053\u006f\u006c\u0069d\u0043\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u006cP\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073")
}

func (_agefa *ST_TextStrikeType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_agefa = 0
	case "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065":
		*_agefa = 1
	case "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be":
		*_agefa = 2
	case "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be":
		*_agefa = 3
	}
	return nil
}

func (_bbagc *CT_TextSpacingPercent) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dbgfa := range start.Attr {
		if _dbgfa.Name.Local == "\u0076\u0061\u006c" {
			_bcegg, _bffec := ParseUnionST_TextSpacingPercentOrPercentString(_dbgfa.Value)
			if _bffec != nil {
				return _bffec
			}
			_bbagc.ValAttr = _bcegg
			continue
		}
	}
	for {
		_dcgdg, _accab := d.Token()
		if _accab != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070\u0061\u0063\u0069n\u0067\u0050\u0065\u0072\u0063\u0065\u006et\u003a\u0020\u0025\u0073", _accab)
		}
		if _eadde, _gcaa := _dcgdg.(_g.EndElement); _gcaa && _eadde.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_SphereCoords and its children
func (_cgcbb *CT_SphereCoords) Validate() error {
	return _cgcbb.ValidateWithPath("\u0043T\u005fS\u0070\u0068\u0065\u0072\u0065\u0043\u006f\u006f\u0072\u0064\u0073")
}

// Validate validates the CT_TextBulletSizePoint and its children
func (_ccaa *CT_TextBulletSizePoint) Validate() error {
	return _ccaa.ValidateWithPath("\u0043\u0054\u005f\u0054ex\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065\u0050\u006f\u0069n\u0074")
}

func (_bfeg *CT_Connection) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064"}, Value: _gf.Sprintf("\u0025\u0076", _bfeg.IdAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064\u0078"}, Value: _gf.Sprintf("\u0025\u0076", _bfeg.IdxAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_GvmlTextShapeChoice struct {
	UseSpRect *CT_GvmlUseShapeRectangle
	Xfrm      *CT_Transform2D
}

func (_bbadc *CT_TableGrid) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_adcdf:
	for {
		_becec, _befgd := d.Token()
		if _befgd != nil {
			return _befgd
		}
		switch _dfggf := _becec.(type) {
		case _g.StartElement:
			switch _dfggf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0069\u0064\u0043\u006f\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0069\u0064\u0043\u006f\u006c"}:
				_fgeea := NewCT_TableCol()
				if _gfega := d.DecodeElement(_fgeea, &_dfggf); _gfega != nil {
					return _gfega
				}
				_bbadc.GridCol = append(_bbadc.GridCol, _fgeea)
			default:
				_b.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_T\u0061\u0062l\u0065\u0047\u0072\u0069\u0064\u0020\u0025\u0076", _dfggf.Name)
				if _eabag := d.Skip(); _eabag != nil {
					return _eabag
				}
			}
		case _g.EndElement:
			break _adcdf
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextField and its children
func (_aefcb *CT_TextField) Validate() error {
	return _aefcb.ValidateWithPath("\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064")
}

type ST_AnimationDgmOnlyBuildType byte

type CT_TableCellProperties struct {
	MarLAttr         *ST_Coordinate32
	MarRAttr         *ST_Coordinate32
	MarTAttr         *ST_Coordinate32
	MarBAttr         *ST_Coordinate32
	VertAttr         ST_TextVerticalType
	AnchorAttr       ST_TextAnchoringType
	AnchorCtrAttr    *bool
	HorzOverflowAttr ST_TextHorzOverflowType
	LnL              *CT_LineProperties
	LnR              *CT_LineProperties
	LnT              *CT_LineProperties
	LnB              *CT_LineProperties
	LnTlToBr         *CT_LineProperties
	LnBlToTr         *CT_LineProperties
	Cell3D           *CT_Cell3D
	NoFill           *CT_NoFillProperties
	SolidFill        *CT_SolidColorFillProperties
	GradFill         *CT_GradientFillProperties
	BlipFill         *CT_BlipFillProperties
	PattFill         *CT_PatternFillProperties
	GrpFill          *CT_GroupFillProperties
	Headers          *CT_Headers
	ExtLst           *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_EffectStyleItem and its children, prefixing error messages with path
func (_ebfe *CT_EffectStyleItem) ValidateWithPath(path string) error {
	if _ebfe.EffectLst != nil {
		if _gfagg := _ebfe.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _gfagg != nil {
			return _gfagg
		}
	}
	if _ebfe.EffectDag != nil {
		if _bded := _ebfe.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _bded != nil {
			return _bded
		}
	}
	if _ebfe.Scene3d != nil {
		if _beeb := _ebfe.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _beeb != nil {
			return _beeb
		}
	}
	if _ebfe.Sp3d != nil {
		if _dage := _ebfe.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _dage != nil {
			return _dage
		}
	}
	return nil
}

func (_adcca *CT_Path2DArcTo) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0077\u0052"}, Value: _gf.Sprintf("\u0025\u0076", _adcca.WRAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u0052"}, Value: _gf.Sprintf("\u0025\u0076", _adcca.HRAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0074\u0041n\u0067"}, Value: _gf.Sprintf("\u0025\u0076", _adcca.StAngAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0077\u0041n\u0067"}, Value: _gf.Sprintf("\u0025\u0076", _adcca.SwAngAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fadacc *CT_LineJoinRound) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dafbc *CT_TextNoBullet) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_eecgd, _decgf := d.Token()
		if _decgf != nil {
			return _gf.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0065\u0078\u0074\u004e\u006fB\u0075\u006c\u006ce\u0074:\u0020\u0025\u0073", _decgf)
		}
		if _dfdea, _bfeef := _eecgd.(_g.EndElement); _bfeef && _dfdea.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fdafg *ST_TextUnderlineType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_fdafg = 0
	case "\u006e\u006f\u006e\u0065":
		*_fdafg = 1
	case "\u0077\u006f\u0072d\u0073":
		*_fdafg = 2
	case "\u0073\u006e\u0067":
		*_fdafg = 3
	case "\u0064\u0062\u006c":
		*_fdafg = 4
	case "\u0068\u0065\u0061v\u0079":
		*_fdafg = 5
	case "\u0064\u006f\u0074\u0074\u0065\u0064":
		*_fdafg = 6
	case "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079":
		*_fdafg = 7
	case "\u0064\u0061\u0073\u0068":
		*_fdafg = 8
	case "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y":
		*_fdafg = 9
	case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067":
		*_fdafg = 10
	case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079":
		*_fdafg = 11
	case "\u0064o\u0074\u0044\u0061\u0073\u0068":
		*_fdafg = 12
	case "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
		*_fdafg = 13
	case "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068":
		*_fdafg = 14
	case "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
		*_fdafg = 15
	case "\u0077\u0061\u0076\u0079":
		*_fdafg = 16
	case "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y":
		*_fdafg = 17
	case "\u0077a\u0076\u0079\u0044\u0062\u006c":
		*_fdafg = 18
	}
	return nil
}

// Validate validates the CT_NonVisualPictureProperties and its children
func (_agdgb *CT_NonVisualPictureProperties) Validate() error {
	return _agdgb.ValidateWithPath("\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u0050\u0072\u006f\u0070\u0065\u0072ti\u0065\u0073")
}

func (_ffebd *CT_TextBodyProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ffebd.RotAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u006f\u0074"}, Value: _gf.Sprintf("\u0025\u0076", *_ffebd.RotAttr)})
	}
	if _ffebd.SpcFirstLastParaAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070c\u0046\u0069\u0072s\u0074\u004c\u0061\u0073\u0074\u0050\u0061\u0072\u0061"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_ffebd.SpcFirstLastParaAttr))})
	}
	if _ffebd.VertOverflowAttr != ST_TextVertOverflowTypeUnset {
		_eabbc, _afffdd := _ffebd.VertOverflowAttr.MarshalXMLAttr(_g.Name{Local: "\u0076\u0065\u0072t\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"})
		if _afffdd != nil {
			return _afffdd
		}
		start.Attr = append(start.Attr, _eabbc)
	}
	if _ffebd.HorzOverflowAttr != ST_TextHorzOverflowTypeUnset {
		_adfcg, _ecfe := _ffebd.HorzOverflowAttr.MarshalXMLAttr(_g.Name{Local: "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"})
		if _ecfe != nil {
			return _ecfe
		}
		start.Attr = append(start.Attr, _adfcg)
	}
	if _ffebd.VertAttr != ST_TextVerticalTypeUnset {
		_cgcecf, _ccagcd := _ffebd.VertAttr.MarshalXMLAttr(_g.Name{Local: "\u0076\u0065\u0072\u0074"})
		if _ccagcd != nil {
			return _ccagcd
		}
		start.Attr = append(start.Attr, _cgcecf)
	}
	if _ffebd.WrapAttr != ST_TextWrappingTypeUnset {
		_cbfdb, _dbfaa := _ffebd.WrapAttr.MarshalXMLAttr(_g.Name{Local: "\u0077\u0072\u0061\u0070"})
		if _dbfaa != nil {
			return _dbfaa
		}
		start.Attr = append(start.Attr, _cbfdb)
	}
	if _ffebd.LInsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0049\u006e\u0073"}, Value: _gf.Sprintf("\u0025\u0076", *_ffebd.LInsAttr)})
	}
	if _ffebd.TInsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0049\u006e\u0073"}, Value: _gf.Sprintf("\u0025\u0076", *_ffebd.TInsAttr)})
	}
	if _ffebd.RInsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0049\u006e\u0073"}, Value: _gf.Sprintf("\u0025\u0076", *_ffebd.RInsAttr)})
	}
	if _ffebd.BInsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u0049\u006e\u0073"}, Value: _gf.Sprintf("\u0025\u0076", *_ffebd.BInsAttr)})
	}
	if _ffebd.NumColAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0075\u006d\u0043\u006f\u006c"}, Value: _gf.Sprintf("\u0025\u0076", *_ffebd.NumColAttr)})
	}
	if _ffebd.SpcColAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070\u0063\u0043\u006f\u006c"}, Value: _gf.Sprintf("\u0025\u0076", *_ffebd.SpcColAttr)})
	}
	if _ffebd.RtlColAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0074\u006c\u0043\u006f\u006c"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_ffebd.RtlColAttr))})
	}
	if _ffebd.FromWordArtAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "f\u0072\u006f\u006d\u0057\u006f\u0072\u0064\u0041\u0072\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_ffebd.FromWordArtAttr))})
	}
	if _ffebd.AnchorAttr != ST_TextAnchoringTypeUnset {
		_dfccc, _daeac := _ffebd.AnchorAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u006e\u0063\u0068\u006f\u0072"})
		if _daeac != nil {
			return _daeac
		}
		start.Attr = append(start.Attr, _dfccc)
	}
	if _ffebd.AnchorCtrAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_ffebd.AnchorCtrAttr))})
	}
	if _ffebd.ForceAAAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066o\u0072\u0063\u0065\u0041\u0041"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_ffebd.ForceAAAttr))})
	}
	if _ffebd.UprightAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075p\u0072\u0069\u0067\u0068\u0074"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_ffebd.UprightAttr))})
	}
	if _ffebd.CompatLnSpcAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "c\u006f\u006d\u0070\u0061\u0074\u004c\u006e\u0053\u0070\u0063"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_ffebd.CompatLnSpcAttr))})
	}
	e.EncodeToken(start)
	if _ffebd.PrstTxWarp != nil {
		_fadga := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070r\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}}
		e.EncodeElement(_ffebd.PrstTxWarp, _fadga)
	}
	if _ffebd.NoAutofit != nil {
		_acgfc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u006e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_ffebd.NoAutofit, _acgfc)
	}
	if _ffebd.NormAutofit != nil {
		_adbbe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_ffebd.NormAutofit, _adbbe)
	}
	if _ffebd.SpAutoFit != nil {
		_edffc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"}}
		e.EncodeElement(_ffebd.SpAutoFit, _edffc)
	}
	if _ffebd.Scene3d != nil {
		_dcfdc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_ffebd.Scene3d, _dcfdc)
	}
	if _ffebd.Sp3d != nil {
		_dfbbab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_ffebd.Sp3d, _dfbbab)
	}
	if _ffebd.FlatTx != nil {
		_accag := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u006c\u0061\u0074\u0054\u0078"}}
		e.EncodeElement(_ffebd.FlatTx, _accag)
	}
	if _ffebd.ExtLst != nil {
		_bcebe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ffebd.ExtLst, _bcebe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_LuminanceEffect() *CT_LuminanceEffect { _bgad := &CT_LuminanceEffect{}; return _bgad }

func (_abbae *EG_TextBulletColor) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ggefg:
	for {
		_gdbdcb, _ebdee := d.Token()
		if _ebdee != nil {
			return _ebdee
		}
		switch _aabff := _gdbdcb.(type) {
		case _g.StartElement:
			switch _aabff.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}:
				_abbae.BuClrTx = NewCT_TextBulletColorFollowText()
				if _dfdgg := d.DecodeElement(_abbae.BuClrTx, &_aabff); _dfdgg != nil {
					return _dfdgg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}:
				_abbae.BuClr = NewCT_Color()
				if _bgggb := d.DecodeElement(_abbae.BuClr, &_aabff); _bgggb != nil {
					return _bgggb
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075l\u006c\u0065\u0074\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _aabff.Name)
				if _gegbcc := d.Skip(); _gegbcc != nil {
					return _gegbcc
				}
			}
		case _g.EndElement:
			break _ggefg
		case _g.CharData:
		}
	}
	return nil
}

func (_gffdf ST_TextAutonumberScheme) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_gffdf.String(), start)
}

type EG_TextGeometry struct {
	CustGeom   *CT_CustomGeometry2D
	PrstTxWarp *CT_PresetTextShape
}

// ValidateWithPath validates the CT_AlphaOutsetEffect and its children, prefixing error messages with path
func (_acb *CT_AlphaOutsetEffect) ValidateWithPath(path string) error {
	if _acb.RadAttr != nil {
		if _beb := _acb.RadAttr.ValidateWithPath(path + "\u002f\u0052\u0061\u0064\u0041\u0074\u0074\u0072"); _beb != nil {
			return _beb
		}
	}
	return nil
}

// Validate validates the CT_BlipChoice and its children
func (_gbcc *CT_BlipChoice) Validate() error {
	return _gbcc.ValidateWithPath("\u0043\u0054\u005f\u0042\u006c\u0069\u0070\u0043\u0068\u006f\u0069\u0063\u0065")
}

func (_defd *CT_ShapeStyle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_defd.LnRef = NewCT_StyleMatrixReference()
	_defd.FillRef = NewCT_StyleMatrixReference()
	_defd.EffectRef = NewCT_StyleMatrixReference()
	_defd.FontRef = NewCT_FontReference()
_cecbf:
	for {
		_abgbc, _cebgc := d.Token()
		if _cebgc != nil {
			return _cebgc
		}
		switch _badd := _abgbc.(type) {
		case _g.StartElement:
			switch _badd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}:
				if _bcdbf := d.DecodeElement(_defd.LnRef, &_badd); _bcdbf != nil {
					return _bcdbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				if _gfdfc := d.DecodeElement(_defd.FillRef, &_badd); _gfdfc != nil {
					return _gfdfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}:
				if _defab := d.DecodeElement(_defd.EffectRef, &_badd); _defab != nil {
					return _defab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}:
				if _dffbe := d.DecodeElement(_defd.FontRef, &_badd); _dffbe != nil {
					return _dffbe
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0061\u0070\u0065\u0053\u0074\u0079\u006c\u0065 \u0025\u0076", _badd.Name)
				if _cbedb := d.Skip(); _cbedb != nil {
					return _cbedb
				}
			}
		case _g.EndElement:
			break _cecbf
		case _g.CharData:
		}
	}
	return nil
}

func (_bafcg ST_TextCapsType) Validate() error { return _bafcg.ValidateWithPath("") }

type CT_PresetLineDashProperties struct{ ValAttr ST_PresetLineDashVal }

// Validate validates the EG_FillProperties and its children
func (_bbbga *EG_FillProperties) Validate() error {
	return _bbbga.ValidateWithPath("\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

func NewCT_GradientFillProperties() *CT_GradientFillProperties {
	_gdfg := &CT_GradientFillProperties{}
	return _gdfg
}

func (_ddea *CT_Bevel) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ddea.WAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0077"}, Value: _gf.Sprintf("\u0025\u0076", *_ddea.WAttr)})
	}
	if _ddea.HAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068"}, Value: _gf.Sprintf("\u0025\u0076", *_ddea.HAttr)})
	}
	if _ddea.PrstAttr != ST_BevelPresetTypeUnset {
		_fbcg, _ffee := _ddea.PrstAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0072\u0073\u0074"})
		if _ffee != nil {
			return _ffee
		}
		start.Attr = append(start.Attr, _fbcg)
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ScRgbColor and its children
func (_defg *CT_ScRgbColor) Validate() error {
	return _defg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072")
}

// Validate validates the CT_PresetColor and its children
func (_eaefc *CT_PresetColor) Validate() error {
	return _eaefc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074C\u006f\u006c\u006f\u0072")
}

type CT_GvmlTextShape struct {
	TxBody *CT_TextBody
	Choice *CT_GvmlTextShapeChoice
	ExtLst *CT_OfficeArtExtensionList
}

func (_abdda *EG_LineDashProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dgcgf:
	for {
		_fabdb, _geefc := d.Token()
		if _geefc != nil {
			return _geefc
		}
		switch _geceg := _fabdb.(type) {
		case _g.StartElement:
			switch _geceg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_abdda.PrstDash = NewCT_PresetLineDashProperties()
				if _aada := d.DecodeElement(_abdda.PrstDash, &_geceg); _aada != nil {
					return _aada
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_abdda.CustDash = NewCT_DashStopList()
				if _facff := d.DecodeElement(_abdda.CustDash, &_geceg); _facff != nil {
					return _facff
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u004c\u0069\u006e\u0065\u0044\u0061\u0073\u0068\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _geceg.Name)
				if _degbf := d.Skip(); _degbf != nil {
					return _degbf
				}
			}
		case _g.EndElement:
			break _dgcgf
		case _g.CharData:
		}
	}
	return nil
}

func (_bfgdc ST_CompoundLine) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_faade := _g.Attr{}
	_faade.Name = name
	switch _bfgdc {
	case ST_CompoundLineUnset:
		_faade.Value = ""
	case ST_CompoundLineSng:
		_faade.Value = "\u0073\u006e\u0067"
	case ST_CompoundLineDbl:
		_faade.Value = "\u0064\u0062\u006c"
	case ST_CompoundLineThickThin:
		_faade.Value = "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n"
	case ST_CompoundLineThinThick:
		_faade.Value = "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k"
	case ST_CompoundLineTri:
		_faade.Value = "\u0074\u0072\u0069"
	}
	return _faade, nil
}

// ValidateWithPath validates the CT_SRgbColor and its children, prefixing error messages with path
func (_feeb *CT_SRgbColor) ValidateWithPath(path string) error {
	for _feeddg, _ffaef := range _feeb.EG_ColorTransform {
		if _fbdfcc := _ffaef.ValidateWithPath(_gf.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _feeddg)); _fbdfcc != nil {
			return _fbdfcc
		}
	}
	return nil
}

func (_cgebd ST_TextStrikeType) Validate() error { return _cgebd.ValidateWithPath("") }

// ValidateWithPath validates the CT_Blip and its children, prefixing error messages with path
func (_cgad *CT_Blip) ValidateWithPath(path string) error {
	if _ffba := _cgad.CstateAttr.ValidateWithPath(path + "/\u0043\u0073\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _ffba != nil {
		return _ffba
	}
	for _gafc, _eefd := range _cgad.Choice {
		if _cdfe := _eefd.ValidateWithPath(_gf.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _gafc)); _cdfe != nil {
			return _cdfe
		}
	}
	if _cgad.ExtLst != nil {
		if _cgbe := _cgad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cgbe != nil {
			return _cgbe
		}
	}
	return nil
}

func NewCT_TextNoBullet() *CT_TextNoBullet { _acba := &CT_TextNoBullet{}; return _acba }

func (_gdcbg *CT_TableProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gdcbg.RtlAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0074\u006c"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gdcbg.RtlAttr))})
	}
	if _gdcbg.FirstRowAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gdcbg.FirstRowAttr))})
	}
	if _gdcbg.FirstColAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gdcbg.FirstColAttr))})
	}
	if _gdcbg.LastRowAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006ca\u0073\u0074\u0052\u006f\u0077"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gdcbg.LastRowAttr))})
	}
	if _gdcbg.LastColAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006ca\u0073\u0074\u0043\u006f\u006c"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gdcbg.LastColAttr))})
	}
	if _gdcbg.BandRowAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062a\u006e\u0064\u0052\u006f\u0077"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gdcbg.BandRowAttr))})
	}
	if _gdcbg.BandColAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062a\u006e\u0064\u0043\u006f\u006c"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gdcbg.BandColAttr))})
	}
	e.EncodeToken(start)
	if _gdcbg.NoFill != nil {
		_gfaee := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gdcbg.NoFill, _gfaee)
	}
	if _gdcbg.SolidFill != nil {
		_gffbce := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gdcbg.SolidFill, _gffbce)
	}
	if _gdcbg.GradFill != nil {
		_ebdgfa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gdcbg.GradFill, _ebdgfa)
	}
	if _gdcbg.BlipFill != nil {
		_gebdb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gdcbg.BlipFill, _gebdb)
	}
	if _gdcbg.PattFill != nil {
		_eefbc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gdcbg.PattFill, _eefbc)
	}
	if _gdcbg.GrpFill != nil {
		_bcgbe := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_gdcbg.GrpFill, _bcgbe)
	}
	if _gdcbg.EffectLst != nil {
		_ggdfc := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gdcbg.EffectLst, _ggdfc)
	}
	if _gdcbg.EffectDag != nil {
		_ffgaf := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_gdcbg.EffectDag, _ffgaf)
	}
	if _gdcbg.Choice != nil {
		_gdcbg.Choice.MarshalXML(e, _g.StartElement{})
	}
	if _gdcbg.ExtLst != nil {
		_dcba := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gdcbg.ExtLst, _dcba)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_FillModeProperties and its children
func (_agebg *EG_FillModeProperties) Validate() error {
	return _agebg.ValidateWithPath("E\u0047\u005f\u0046\u0069ll\u004do\u0064\u0065\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_dbgaf *EG_LineJoinProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dbgaf.Round != nil {
		_cgadc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0072\u006f\u0075\u006e\u0064"}}
		e.EncodeElement(_dbgaf.Round, _cgadc)
	}
	if _dbgaf.Bevel != nil {
		_dcccc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_dbgaf.Bevel, _dcccc)
	}
	if _dbgaf.Miter != nil {
		_fbeed := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006d\u0069\u0074\u0065\u0072"}}
		e.EncodeElement(_dbgaf.Miter, _fbeed)
	}
	return nil
}

func (_gfbec *CT_TextParagraph) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dfaeb:
	for {
		_gfffc, _feaeg := d.Token()
		if _feaeg != nil {
			return _feaeg
		}
		switch _aafb := _gfffc.(type) {
		case _g.StartElement:
			switch _aafb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}:
				_gfbec.PPr = NewCT_TextParagraphProperties()
				if _baeg := d.DecodeElement(_gfbec.PPr, &_aafb); _baeg != nil {
					return _baeg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_cacdb := NewEG_TextRun()
				_cacdb.R = NewCT_RegularTextRun()
				if _eaede := d.DecodeElement(_cacdb.R, &_aafb); _eaede != nil {
					return _eaede
				}
				_gfbec.EG_TextRun = append(_gfbec.EG_TextRun, _cacdb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}:
				_gbbeb := NewEG_TextRun()
				_gbbeb.Br = NewCT_TextLineBreak()
				if _fadgb := d.DecodeElement(_gbbeb.Br, &_aafb); _fadgb != nil {
					return _fadgb
				}
				_gfbec.EG_TextRun = append(_gfbec.EG_TextRun, _gbbeb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}:
				_acef := NewEG_TextRun()
				_acef.Fld = NewCT_TextField()
				if _aggaf := d.DecodeElement(_acef.Fld, &_aafb); _aggaf != nil {
					return _aggaf
				}
				_gfbec.EG_TextRun = append(_gfbec.EG_TextRun, _acef)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"}:
				_gfbec.EndParaRPr = NewCT_TextCharacterProperties()
				if _efeabdb := d.DecodeElement(_gfbec.EndParaRPr, &_aafb); _efeabdb != nil {
					return _efeabdb
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0020\u0025v", _aafb.Name)
				if _bggaa := d.Skip(); _bggaa != nil {
					return _bggaa
				}
			}
		case _g.EndElement:
			break _dfaeb
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_RelativeOffsetEffect() *CT_RelativeOffsetEffect {
	_afcgb := &CT_RelativeOffsetEffect{}
	return _afcgb
}

// Validate validates the ThemeOverride and its children
func (_gcfbe *ThemeOverride) Validate() error {
	return _gcfbe.ValidateWithPath("\u0054\u0068\u0065\u006d\u0065\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065")
}

func (_cfdda ST_BlackWhiteMode) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_edbae := _g.Attr{}
	_edbae.Name = name
	switch _cfdda {
	case ST_BlackWhiteModeUnset:
		_edbae.Value = ""
	case ST_BlackWhiteModeClr:
		_edbae.Value = "\u0063\u006c\u0072"
	case ST_BlackWhiteModeAuto:
		_edbae.Value = "\u0061\u0075\u0074\u006f"
	case ST_BlackWhiteModeGray:
		_edbae.Value = "\u0067\u0072\u0061\u0079"
	case ST_BlackWhiteModeLtGray:
		_edbae.Value = "\u006c\u0074\u0047\u0072\u0061\u0079"
	case ST_BlackWhiteModeInvGray:
		_edbae.Value = "\u0069n\u0076\u0047\u0072\u0061\u0079"
	case ST_BlackWhiteModeGrayWhite:
		_edbae.Value = "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e"
	case ST_BlackWhiteModeBlackGray:
		_edbae.Value = "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y"
	case ST_BlackWhiteModeBlackWhite:
		_edbae.Value = "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065"
	case ST_BlackWhiteModeBlack:
		_edbae.Value = "\u0062\u006c\u0061c\u006b"
	case ST_BlackWhiteModeWhite:
		_edbae.Value = "\u0077\u0068\u0069t\u0065"
	case ST_BlackWhiteModeHidden:
		_edbae.Value = "\u0068\u0069\u0064\u0064\u0065\u006e"
	}
	return _edbae, nil
}

func (_ggbca *CT_GradientStopList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_egegd:
	for {
		_cdeaf, _aacge := d.Token()
		if _aacge != nil {
			return _aacge
		}
		switch _fgfb := _cdeaf.(type) {
		case _g.StartElement:
			switch _fgfb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073"}:
				_bcaf := NewCT_GradientStop()
				if _fgggd := d.DecodeElement(_bcaf, &_fgfb); _fgggd != nil {
					return _fgggd
				}
				_ggbca.Gs = append(_ggbca.Gs, _bcaf)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0064\u0069\u0065\u006etS\u0074\u006f\u0070\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _fgfb.Name)
				if _gfef := d.Skip(); _gfef != nil {
					return _gfef
				}
			}
		case _g.EndElement:
			break _egegd
		case _g.CharData:
		}
	}
	return nil
}

func (_badcd *CT_DefaultShapeDefinition) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_badcd.SpPr = NewCT_ShapeProperties()
	_badcd.BodyPr = NewCT_TextBodyProperties()
	_badcd.LstStyle = NewCT_TextListStyle()
_fadaa:
	for {
		_cgf, _febe := d.Token()
		if _febe != nil {
			return _febe
		}
		switch _cecb := _cgf.(type) {
		case _g.StartElement:
			switch _cecb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _bade := d.DecodeElement(_badcd.SpPr, &_cecb); _bade != nil {
					return _bade
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}:
				if _dfbee := d.DecodeElement(_badcd.BodyPr, &_cecb); _dfbee != nil {
					return _dfbee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}:
				if _fcgf := d.DecodeElement(_badcd.LstStyle, &_cecb); _fcgf != nil {
					return _fcgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_badcd.Style = NewCT_ShapeStyle()
				if _gbed := d.DecodeElement(_badcd.Style, &_cecb); _gbed != nil {
					return _gbed
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_badcd.ExtLst = NewCT_OfficeArtExtensionList()
				if _gcaee := d.DecodeElement(_badcd.ExtLst, &_cecb); _gcaee != nil {
					return _gcaee
				}
			default:
				_b.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0053h\u0061p\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074i\u006fn\u0020\u0025v", _cecb.Name)
				if _dfec := d.Skip(); _dfec != nil {
					return _dfec
				}
			}
		case _g.EndElement:
			break _fadaa
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_TextUnderlineFillGroupWrapper() *CT_TextUnderlineFillGroupWrapper {
	_bbeac := &CT_TextUnderlineFillGroupWrapper{}
	return _bbeac
}

func (_edca *CT_ConnectorLocking) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bcga := range start.Attr {
		if _bcga.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_gebdcg, _cebc := _c.ParseBool(_bcga.Value)
			if _cebc != nil {
				return _cebc
			}
			_edca.NoGrpAttr = &_gebdcg
			continue
		}
		if _bcga.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_gegf, _daebgf := _c.ParseBool(_bcga.Value)
			if _daebgf != nil {
				return _daebgf
			}
			_edca.NoSelectAttr = &_gegf
			continue
		}
		if _bcga.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_fcec, _geab := _c.ParseBool(_bcga.Value)
			if _geab != nil {
				return _geab
			}
			_edca.NoRotAttr = &_fcec
			continue
		}
		if _bcga.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_gfae, _facc := _c.ParseBool(_bcga.Value)
			if _facc != nil {
				return _facc
			}
			_edca.NoChangeAspectAttr = &_gfae
			continue
		}
		if _bcga.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_cgdcb, _gfgc := _c.ParseBool(_bcga.Value)
			if _gfgc != nil {
				return _gfgc
			}
			_edca.NoMoveAttr = &_cgdcb
			continue
		}
		if _bcga.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_agbed, _faf := _c.ParseBool(_bcga.Value)
			if _faf != nil {
				return _faf
			}
			_edca.NoResizeAttr = &_agbed
			continue
		}
		if _bcga.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_aaaf, _cca := _c.ParseBool(_bcga.Value)
			if _cca != nil {
				return _cca
			}
			_edca.NoEditPointsAttr = &_aaaf
			continue
		}
		if _bcga.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_bfcg, _fdeca := _c.ParseBool(_bcga.Value)
			if _fdeca != nil {
				return _fdeca
			}
			_edca.NoAdjustHandlesAttr = &_bfcg
			continue
		}
		if _bcga.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_ecba, _cfbe := _c.ParseBool(_bcga.Value)
			if _cfbe != nil {
				return _cfbe
			}
			_edca.NoChangeArrowheadsAttr = &_ecba
			continue
		}
		if _bcga.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_dcac, _gcbeg := _c.ParseBool(_bcga.Value)
			if _gcbeg != nil {
				return _gcbeg
			}
			_edca.NoChangeShapeTypeAttr = &_dcac
			continue
		}
	}
_cgaa:
	for {
		_edcc, _gabd := d.Token()
		if _gabd != nil {
			return _gabd
		}
		switch _fgebc := _edcc.(type) {
		case _g.StartElement:
			switch _fgebc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edca.ExtLst = NewCT_OfficeArtExtensionList()
				if _feca := d.DecodeElement(_edca.ExtLst, &_fgebc); _feca != nil {
					return _feca
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074or\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _fgebc.Name)
				if _afce := d.Skip(); _afce != nil {
					return _afce
				}
			}
		case _g.EndElement:
			break _cgaa
		case _g.CharData:
		}
	}
	return nil
}

type CT_AlphaModulateEffect struct{ Cont *CT_EffectContainer }

// Validate validates the CT_GrayscaleEffect and its children
func (_gedgd *CT_GrayscaleEffect) Validate() error {
	return _gedgd.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0079\u0073\u0063a\u006c\u0065E\u0066\u0066\u0065\u0063\u0074")
}

func (_fce *CT_AnimationElementChoice) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fad:
	for {
		_ffeg, _eec := d.Token()
		if _eec != nil {
			return _eec
		}
		switch _aca := _ffeg.(type) {
		case _g.StartElement:
			switch _aca.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0067\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0067\u006d"}:
				_fce.Dgm = NewCT_AnimationDgmElement()
				if _gad := d.DecodeElement(_fce.Dgm, &_aca); _gad != nil {
					return _gad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074"}:
				_fce.Chart = NewCT_AnimationChartElement()
				if _dcdc := d.DecodeElement(_fce.Chart, &_aca); _dcdc != nil {
					return _dcdc
				}
			default:
				_b.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006fn\u0045l\u0065\u006d\u0065\u006e\u0074\u0043\u0068\u006fi\u0063e\u0020\u0025v", _aca.Name)
				if _cfcd := d.Skip(); _cfcd != nil {
					return _cfcd
				}
			}
		case _g.EndElement:
			break _fad
		case _g.CharData:
		}
	}
	return nil
}

type ThemeOverride struct{ CT_BaseStylesOverride }

func (_cfgcg *EG_ThemeableFontStyles) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ebcfc:
	for {
		_bfdce, _adaace := d.Token()
		if _adaace != nil {
			return _adaace
		}
		switch _dggce := _bfdce.(type) {
		case _g.StartElement:
			switch _dggce.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_cfgcg.Font = NewCT_FontCollection()
				if _dafaa := d.DecodeElement(_cfgcg.Font, &_dggce); _dafaa != nil {
					return _dafaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}:
				_cfgcg.FontRef = NewCT_FontReference()
				if _bdbc := d.DecodeElement(_cfgcg.FontRef, &_dggce); _bdbc != nil {
					return _bdbc
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045G\u005f\u0054\u0068\u0065\u006de\u0061\u0062\u006c\u0065\u0046\u006f\u006e\u0074\u0053\u0074\u0079\u006c\u0065\u0073\u0020\u0025\u0076", _dggce.Name)
				if _bbge := d.Skip(); _bbge != nil {
					return _bbge
				}
			}
		case _g.EndElement:
			break _ebcfc
		case _g.CharData:
		}
	}
	return nil
}

// ST_Percentage is a union type
type ST_Percentage struct {
	ST_PercentageDecimal *int32
	ST_Percentage        *string
}

func NewCT_TextTabStopList() *CT_TextTabStopList { _fbbgg := &CT_TextTabStopList{}; return _fbbgg }

func NewCT_TextCharacterProperties() *CT_TextCharacterProperties {
	_aabbe := &CT_TextCharacterProperties{}
	return _aabbe
}

type CT_ConnectionSite struct {
	AngAttr ST_AdjAngle
	Pos     *CT_AdjPoint2D
}

func (_gdab *ST_LineCap) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_gdab = 0
	case "\u0072\u006e\u0064":
		*_gdab = 1
	case "\u0073\u0071":
		*_gdab = 2
	case "\u0066\u006c\u0061\u0074":
		*_gdab = 3
	}
	return nil
}

func (_gbcfcd ST_AnimationBuildType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_gbcfcd.String(), start)
}

func (_abeg *ST_FontCollectionIndex) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_abeg = 0
	case "\u006d\u0061\u006ao\u0072":
		*_abeg = 1
	case "\u006d\u0069\u006eo\u0072":
		*_abeg = 2
	case "\u006e\u006f\u006e\u0065":
		*_abeg = 3
	}
	return nil
}

func (_gfaab *ST_TextUnderlineType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_eddfc, _bgcfc := d.Token()
	if _bgcfc != nil {
		return _bgcfc
	}
	if _begdd, _bafdad := _eddfc.(_g.EndElement); _bafdad && _begdd.Name == start.Name {
		*_gfaab = 1
		return nil
	}
	if _dggff, _cfbaaf := _eddfc.(_g.CharData); !_cfbaaf {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eddfc)
	} else {
		switch string(_dggff) {
		case "":
			*_gfaab = 0
		case "\u006e\u006f\u006e\u0065":
			*_gfaab = 1
		case "\u0077\u006f\u0072d\u0073":
			*_gfaab = 2
		case "\u0073\u006e\u0067":
			*_gfaab = 3
		case "\u0064\u0062\u006c":
			*_gfaab = 4
		case "\u0068\u0065\u0061v\u0079":
			*_gfaab = 5
		case "\u0064\u006f\u0074\u0074\u0065\u0064":
			*_gfaab = 6
		case "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079":
			*_gfaab = 7
		case "\u0064\u0061\u0073\u0068":
			*_gfaab = 8
		case "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y":
			*_gfaab = 9
		case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067":
			*_gfaab = 10
		case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079":
			*_gfaab = 11
		case "\u0064o\u0074\u0044\u0061\u0073\u0068":
			*_gfaab = 12
		case "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
			*_gfaab = 13
		case "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068":
			*_gfaab = 14
		case "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
			*_gfaab = 15
		case "\u0077\u0061\u0076\u0079":
			*_gfaab = 16
		case "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y":
			*_gfaab = 17
		case "\u0077a\u0076\u0079\u0044\u0062\u006c":
			*_gfaab = 18
		}
	}
	_eddfc, _bgcfc = d.Token()
	if _bgcfc != nil {
		return _bgcfc
	}
	if _egdcf, _ffcaf := _eddfc.(_g.EndElement); _ffcaf && _egdcf.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eddfc)
}

func (_adbaee ST_PitchFamily) ValidateWithPath(path string) error {
	switch _adbaee {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_adbaee))
	}
	return nil
}

type CT_TableCellBorderStyle struct {
	Left    *CT_ThemeableLineStyle
	Right   *CT_ThemeableLineStyle
	Top     *CT_ThemeableLineStyle
	Bottom  *CT_ThemeableLineStyle
	InsideH *CT_ThemeableLineStyle
	InsideV *CT_ThemeableLineStyle
	Tl2br   *CT_ThemeableLineStyle
	Tr2bl   *CT_ThemeableLineStyle
	ExtLst  *CT_OfficeArtExtensionList
}

func (_ggcbc ST_AnimationBuildType) ValidateWithPath(path string) error {
	switch _ggcbc {
	case 0, 1:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ggcbc))
	}
	return nil
}

type CT_CustomColor struct {
	NameAttr  *string
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

type CT_BaseStyles struct {
	ClrScheme  *CT_ColorScheme
	FontScheme *CT_FontScheme
	FmtScheme  *CT_StyleMatrix
	ExtLst     *CT_OfficeArtExtensionList
}

func NewCT_GradientStopList() *CT_GradientStopList { _ecge := &CT_GradientStopList{}; return _ecge }

type CT_TableStyleCellStyle struct {
	TcBdr   *CT_TableCellBorderStyle
	Fill    *CT_FillProperties
	FillRef *CT_StyleMatrixReference
	Cell3D  *CT_Cell3D
}

func (_bbfgb *ST_TextAutonumberScheme) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_bbfgb = 0
	case "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_bbfgb = 1
	case "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_bbfgb = 2
	case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_bbfgb = 3
	case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_bbfgb = 4
	case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_bbfgb = 5
	case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_bbfgb = 6
	case "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_bbfgb = 7
	case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_bbfgb = 8
	case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_bbfgb = 9
	case "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e":
		*_bbfgb = 10
	case "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_bbfgb = 11
	case "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_bbfgb = 12
	case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_bbfgb = 13
	case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_bbfgb = 14
	case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_bbfgb = 15
	case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_bbfgb = 16
	case "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
		*_bbfgb = 17
	case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e":
		*_bbfgb = 18
	case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e":
		*_bbfgb = 19
	case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
		*_bbfgb = 20
	case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
		*_bbfgb = 21
	case "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064":
		*_bbfgb = 22
	case "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e":
		*_bbfgb = 23
	case "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064":
		*_bbfgb = 24
	case "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e":
		*_bbfgb = 25
	case "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
		*_bbfgb = 26
	case "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e":
		*_bbfgb = 27
	case "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064":
		*_bbfgb = 28
	case "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073":
		*_bbfgb = 29
	case "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073":
		*_bbfgb = 30
	case "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073":
		*_bbfgb = 31
	case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
		*_bbfgb = 32
	case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052":
		*_bbfgb = 33
	case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068":
		*_bbfgb = 34
	case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064":
		*_bbfgb = 35
	case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052":
		*_bbfgb = 36
	case "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_bbfgb = 37
	case "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
		*_bbfgb = 38
	case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064":
		*_bbfgb = 39
	case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052":
		*_bbfgb = 40
	case "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064":
		*_bbfgb = 41
	}
	return nil
}

func (_fafg *CT_Scene3D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fafg.Camera = NewCT_Camera()
	_fafg.LightRig = NewCT_LightRig()
_cggedg:
	for {
		_fdcbb, _acfcg := d.Token()
		if _acfcg != nil {
			return _acfcg
		}
		switch _ggda := _fdcbb.(type) {
		case _g.StartElement:
			switch _ggda.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006d\u0065\u0072\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006d\u0065\u0072\u0061"}:
				if _fcbdf := d.DecodeElement(_fafg.Camera, &_ggda); _fcbdf != nil {
					return _fcbdf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}:
				if _acdff := d.DecodeElement(_fafg.LightRig, &_ggda); _acdff != nil {
					return _acdff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u0063\u006b\u0064\u0072\u006f\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u0063\u006b\u0064\u0072\u006f\u0070"}:
				_fafg.Backdrop = NewCT_Backdrop()
				if _debe := d.DecodeElement(_fafg.Backdrop, &_ggda); _debe != nil {
					return _debe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fafg.ExtLst = NewCT_OfficeArtExtensionList()
				if _cacg := d.DecodeElement(_fafg.ExtLst, &_ggda); _cacg != nil {
					return _cacg
				}
			default:
				_b.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0063\u0065\u006e\u0065\u0033\u0044\u0020\u0025\u0076", _ggda.Name)
				if _cbeeb := d.Skip(); _cbeeb != nil {
					return _cbeeb
				}
			}
		case _g.EndElement:
			break _cggedg
		case _g.CharData:
		}
	}
	return nil
}

func (_ggdgf ST_FontCollectionIndex) Validate() error { return _ggdgf.ValidateWithPath("") }

func (_bgeggb *CT_RelativeRect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bgeggb.LAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c"}, Value: _gf.Sprintf("\u0025\u0076", *_bgeggb.LAttr)})
	}
	if _bgeggb.TAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074"}, Value: _gf.Sprintf("\u0025\u0076", *_bgeggb.TAttr)})
	}
	if _bgeggb.RAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072"}, Value: _gf.Sprintf("\u0025\u0076", *_bgeggb.RAttr)})
	}
	if _bgeggb.BAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062"}, Value: _gf.Sprintf("\u0025\u0076", *_bgeggb.BAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fced *CT_GraphicalObject) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fced.GraphicData = NewCT_GraphicalObjectData()
_egee:
	for {
		_fdga, _abfge := d.Token()
		if _abfge != nil {
			return _abfge
		}
		switch _acfc := _fdga.(type) {
		case _g.StartElement:
			switch _acfc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}:
				if _ffgc := d.DecodeElement(_fced.GraphicData, &_acfc); _ffgc != nil {
					return _ffgc
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069c\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076", _acfc.Name)
				if _caea := d.Skip(); _caea != nil {
					return _caea
				}
			}
		case _g.EndElement:
			break _egee
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextFont and its children, prefixing error messages with path
func (_aedgb *CT_TextFont) ValidateWithPath(path string) error {
	if _gbcgb := _aedgb.PitchFamilyAttr.ValidateWithPath(path + "\u002f\u0050i\u0074\u0063\u0068F\u0061\u006d\u0069\u006c\u0079\u0041\u0074\u0074\u0072"); _gbcgb != nil {
		return _gbcgb
	}
	return nil
}

const (
	ST_DgmBuildStepUnset ST_DgmBuildStep = 0
	ST_DgmBuildStepSp    ST_DgmBuildStep = 1
	ST_DgmBuildStepBg    ST_DgmBuildStep = 2
)

// ValidateWithPath validates the CT_AnimationChartElement and its children, prefixing error messages with path
func (_dfcf *CT_AnimationChartElement) ValidateWithPath(path string) error {
	if _dfcf.BldStepAttr == ST_ChartBuildStepUnset {
		return _gf.Errorf("%\u0073\u002f\u0042\u006c\u0064\u0053t\u0065\u0070\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _ggfb := _dfcf.BldStepAttr.ValidateWithPath(path + "\u002f\u0042\u006cd\u0053\u0074\u0065\u0070\u0041\u0074\u0074\u0072"); _ggfb != nil {
		return _ggfb
	}
	return nil
}

type CT_TextNoBullet struct{}

func (_gbeab *ST_Percentage) ValidateWithPath(path string) error {
	_bdccc := []string{}
	if _gbeab.ST_PercentageDecimal != nil {
		_bdccc = append(_bdccc, "S\u0054_\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061g\u0065\u0044\u0065\u0063im\u0061\u006c")
	}
	if _gbeab.ST_Percentage != nil {
		_bdccc = append(_bdccc, "\u0053\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_bdccc) > 1 {
		return _gf.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _bdccc)
	}
	return nil
}

func (_agde *CT_FillOverlayEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_fggc, _bcbbf := _agde.BlendAttr.MarshalXMLAttr(_g.Name{Local: "\u0062\u006c\u0065n\u0064"})
	if _bcbbf != nil {
		return _bcbbf
	}
	start.Attr = append(start.Attr, _fggc)
	e.EncodeToken(start)
	if _agde.NoFill != nil {
		_cceg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_agde.NoFill, _cceg)
	}
	if _agde.SolidFill != nil {
		_edce := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_agde.SolidFill, _edce)
	}
	if _agde.GradFill != nil {
		_fdbd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_agde.GradFill, _fdbd)
	}
	if _agde.BlipFill != nil {
		_gdbce := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_agde.BlipFill, _gdbce)
	}
	if _agde.PattFill != nil {
		_gaed := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_agde.PattFill, _gaed)
	}
	if _agde.GrpFill != nil {
		_fede := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_agde.GrpFill, _fede)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gbaee *CT_Transform2D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gbaee.RotAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u006f\u0074"}, Value: _gf.Sprintf("\u0025\u0076", *_gbaee.RotAttr)})
	}
	if _gbaee.FlipHAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u006c\u0069p\u0048"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gbaee.FlipHAttr))})
	}
	if _gbaee.FlipVAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u006c\u0069p\u0056"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_gbaee.FlipVAttr))})
	}
	e.EncodeToken(start)
	if _gbaee.Off != nil {
		_gagdd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006ff\u0066"}}
		e.EncodeElement(_gbaee.Off, _gagdd)
	}
	if _gbaee.Ext != nil {
		_dcbdc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		e.EncodeElement(_gbaee.Ext, _dcbdc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bgcaf *ST_LineCap) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_geaee, _fgbca := d.Token()
	if _fgbca != nil {
		return _fgbca
	}
	if _ccfff, _ggbge := _geaee.(_g.EndElement); _ggbge && _ccfff.Name == start.Name {
		*_bgcaf = 1
		return nil
	}
	if _dgbfa, _dfedf := _geaee.(_g.CharData); !_dfedf {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _geaee)
	} else {
		switch string(_dgbfa) {
		case "":
			*_bgcaf = 0
		case "\u0072\u006e\u0064":
			*_bgcaf = 1
		case "\u0073\u0071":
			*_bgcaf = 2
		case "\u0066\u006c\u0061\u0074":
			*_bgcaf = 3
		}
	}
	_geaee, _fgbca = d.Token()
	if _fgbca != nil {
		return _fgbca
	}
	if _accddc, _gbeeg := _geaee.(_g.EndElement); _gbeeg && _accddc.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _geaee)
}

func (_faeda ST_PresetMaterialType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_faeda.String(), start)
}

// Validate validates the CT_NonVisualConnectorProperties and its children
func (_cggeg *CT_NonVisualConnectorProperties) Validate() error {
	return _cggeg.ValidateWithPath("\u0043\u0054\u005fN\u006f\u006e\u0056\u0069s\u0075\u0061\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u006f\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_dceeb ST_PositiveFixedPercentage) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _dceeb.ST_PositiveFixedPercentageDecimal != nil {
		e.EncodeToken(_g.CharData(_gf.Sprintf("\u0025\u0064", *_dceeb.ST_PositiveFixedPercentageDecimal)))
	}
	if _dceeb.ST_PositiveFixedPercentage != nil {
		e.Encode(_dceeb.ST_PositiveFixedPercentage)
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

func NewCT_TextBulletSizeFollowText() *CT_TextBulletSizeFollowText {
	_cgffd := &CT_TextBulletSizeFollowText{}
	return _cgffd
}

const (
	ST_PresetPatternValUnset      ST_PresetPatternVal = 0
	ST_PresetPatternValPct5       ST_PresetPatternVal = 1
	ST_PresetPatternValPct10      ST_PresetPatternVal = 2
	ST_PresetPatternValPct20      ST_PresetPatternVal = 3
	ST_PresetPatternValPct25      ST_PresetPatternVal = 4
	ST_PresetPatternValPct30      ST_PresetPatternVal = 5
	ST_PresetPatternValPct40      ST_PresetPatternVal = 6
	ST_PresetPatternValPct50      ST_PresetPatternVal = 7
	ST_PresetPatternValPct60      ST_PresetPatternVal = 8
	ST_PresetPatternValPct70      ST_PresetPatternVal = 9
	ST_PresetPatternValPct75      ST_PresetPatternVal = 10
	ST_PresetPatternValPct80      ST_PresetPatternVal = 11
	ST_PresetPatternValPct90      ST_PresetPatternVal = 12
	ST_PresetPatternValHorz       ST_PresetPatternVal = 13
	ST_PresetPatternValVert       ST_PresetPatternVal = 14
	ST_PresetPatternValLtHorz     ST_PresetPatternVal = 15
	ST_PresetPatternValLtVert     ST_PresetPatternVal = 16
	ST_PresetPatternValDkHorz     ST_PresetPatternVal = 17
	ST_PresetPatternValDkVert     ST_PresetPatternVal = 18
	ST_PresetPatternValNarHorz    ST_PresetPatternVal = 19
	ST_PresetPatternValNarVert    ST_PresetPatternVal = 20
	ST_PresetPatternValDashHorz   ST_PresetPatternVal = 21
	ST_PresetPatternValDashVert   ST_PresetPatternVal = 22
	ST_PresetPatternValCross      ST_PresetPatternVal = 23
	ST_PresetPatternValDnDiag     ST_PresetPatternVal = 24
	ST_PresetPatternValUpDiag     ST_PresetPatternVal = 25
	ST_PresetPatternValLtDnDiag   ST_PresetPatternVal = 26
	ST_PresetPatternValLtUpDiag   ST_PresetPatternVal = 27
	ST_PresetPatternValDkDnDiag   ST_PresetPatternVal = 28
	ST_PresetPatternValDkUpDiag   ST_PresetPatternVal = 29
	ST_PresetPatternValWdDnDiag   ST_PresetPatternVal = 30
	ST_PresetPatternValWdUpDiag   ST_PresetPatternVal = 31
	ST_PresetPatternValDashDnDiag ST_PresetPatternVal = 32
	ST_PresetPatternValDashUpDiag ST_PresetPatternVal = 33
	ST_PresetPatternValDiagCross  ST_PresetPatternVal = 34
	ST_PresetPatternValSmCheck    ST_PresetPatternVal = 35
	ST_PresetPatternValLgCheck    ST_PresetPatternVal = 36
	ST_PresetPatternValSmGrid     ST_PresetPatternVal = 37
	ST_PresetPatternValLgGrid     ST_PresetPatternVal = 38
	ST_PresetPatternValDotGrid    ST_PresetPatternVal = 39
	ST_PresetPatternValSmConfetti ST_PresetPatternVal = 40
	ST_PresetPatternValLgConfetti ST_PresetPatternVal = 41
	ST_PresetPatternValHorzBrick  ST_PresetPatternVal = 42
	ST_PresetPatternValDiagBrick  ST_PresetPatternVal = 43
	ST_PresetPatternValSolidDmnd  ST_PresetPatternVal = 44
	ST_PresetPatternValOpenDmnd   ST_PresetPatternVal = 45
	ST_PresetPatternValDotDmnd    ST_PresetPatternVal = 46
	ST_PresetPatternValPlaid      ST_PresetPatternVal = 47
	ST_PresetPatternValSphere     ST_PresetPatternVal = 48
	ST_PresetPatternValWeave      ST_PresetPatternVal = 49
	ST_PresetPatternValDivot      ST_PresetPatternVal = 50
	ST_PresetPatternValShingle    ST_PresetPatternVal = 51
	ST_PresetPatternValWave       ST_PresetPatternVal = 52
	ST_PresetPatternValTrellis    ST_PresetPatternVal = 53
	ST_PresetPatternValZigZag     ST_PresetPatternVal = 54
)

func (_faaaf *CT_XYAdjustHandle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _faaaf.GdRefXAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0058"}, Value: _gf.Sprintf("\u0025\u0076", *_faaaf.GdRefXAttr)})
	}
	if _faaaf.MinXAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0069\u006e\u0058"}, Value: _gf.Sprintf("\u0025\u0076", *_faaaf.MinXAttr)})
	}
	if _faaaf.MaxXAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0078\u0058"}, Value: _gf.Sprintf("\u0025\u0076", *_faaaf.MaxXAttr)})
	}
	if _faaaf.GdRefYAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0059"}, Value: _gf.Sprintf("\u0025\u0076", *_faaaf.GdRefYAttr)})
	}
	if _faaaf.MinYAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0069\u006e\u0059"}, Value: _gf.Sprintf("\u0025\u0076", *_faaaf.MinYAttr)})
	}
	if _faaaf.MaxYAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0078\u0059"}, Value: _gf.Sprintf("\u0025\u0076", *_faaaf.MaxYAttr)})
	}
	e.EncodeToken(start)
	_dcabf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070o\u0073"}}
	e.EncodeElement(_faaaf.Pos, _dcabf)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GradientFillProperties and its children
func (_gece *CT_GradientFillProperties) Validate() error {
	return _gece.ValidateWithPath("\u0043T\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0046i\u006cl\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s")
}

// ValidateWithPath validates the CT_NonVisualPictureProperties and its children, prefixing error messages with path
func (_agag *CT_NonVisualPictureProperties) ValidateWithPath(path string) error {
	if _agag.PicLocks != nil {
		if _egdab := _agag.PicLocks.ValidateWithPath(path + "\u002fP\u0069\u0063\u004c\u006f\u0063\u006bs"); _egdab != nil {
			return _egdab
		}
	}
	if _agag.ExtLst != nil {
		if _cgaag := _agag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cgaag != nil {
			return _cgaag
		}
	}
	return nil
}

func (_afggc ST_TextCapsType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_agdbac := _g.Attr{}
	_agdbac.Name = name
	switch _afggc {
	case ST_TextCapsTypeUnset:
		_agdbac.Value = ""
	case ST_TextCapsTypeNone:
		_agdbac.Value = "\u006e\u006f\u006e\u0065"
	case ST_TextCapsTypeSmall:
		_agdbac.Value = "\u0073\u006d\u0061l\u006c"
	case ST_TextCapsTypeAll:
		_agdbac.Value = "\u0061\u006c\u006c"
	}
	return _agdbac, nil
}

func NewCT_PatternFillProperties() *CT_PatternFillProperties {
	_cdggg := &CT_PatternFillProperties{}
	return _cdggg
}

func (_ddffc ST_TextUnderlineType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_ddffc.String(), start)
}

// Validate validates the CT_AlphaFloorEffect and its children
func (_cba *CT_AlphaFloorEffect) Validate() error {
	return _cba.ValidateWithPath("\u0043\u0054\u005f\u0041lp\u0068\u0061\u0046\u006c\u006f\u006f\u0072\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_bfggac *EG_FillProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bdggc:
	for {
		_gfcef, _gecdf := d.Token()
		if _gecdf != nil {
			return _gecdf
		}
		switch _gabbd := _gfcef.(type) {
		case _g.StartElement:
			switch _gabbd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_bfggac.NoFill = NewCT_NoFillProperties()
				if _deabe := d.DecodeElement(_bfggac.NoFill, &_gabbd); _deabe != nil {
					return _deabe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_bfggac.SolidFill = NewCT_SolidColorFillProperties()
				if _faegb := d.DecodeElement(_bfggac.SolidFill, &_gabbd); _faegb != nil {
					return _faegb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_bfggac.GradFill = NewCT_GradientFillProperties()
				if _dabacc := d.DecodeElement(_bfggac.GradFill, &_gabbd); _dabacc != nil {
					return _dabacc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_bfggac.BlipFill = NewCT_BlipFillProperties()
				if _facaaf := d.DecodeElement(_bfggac.BlipFill, &_gabbd); _facaaf != nil {
					return _facaaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_bfggac.PattFill = NewCT_PatternFillProperties()
				if _fdefbe := d.DecodeElement(_bfggac.PattFill, &_gabbd); _fdefbe != nil {
					return _fdefbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_bfggac.GrpFill = NewCT_GroupFillProperties()
				if _cacdd := d.DecodeElement(_bfggac.GrpFill, &_gabbd); _cacdd != nil {
					return _cacdd
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gabbd.Name)
				if _acbcf := d.Skip(); _acbcf != nil {
					return _acbcf
				}
			}
		case _g.EndElement:
			break _bdggc
		case _g.CharData:
		}
	}
	return nil
}

func (_ggffba ST_LineEndLength) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_ggffba.String(), start)
}

const (
	ST_AnimationDgmOnlyBuildTypeUnset     ST_AnimationDgmOnlyBuildType = 0
	ST_AnimationDgmOnlyBuildTypeOne       ST_AnimationDgmOnlyBuildType = 1
	ST_AnimationDgmOnlyBuildTypeLvlOne    ST_AnimationDgmOnlyBuildType = 2
	ST_AnimationDgmOnlyBuildTypeLvlAtOnce ST_AnimationDgmOnlyBuildType = 3
)

func (_dddfe *CT_Vector3D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _geac := range start.Attr {
		if _geac.Name.Local == "\u0064\u0078" {
			_aabba, _gbeee := ParseUnionST_Coordinate(_geac.Value)
			if _gbeee != nil {
				return _gbeee
			}
			_dddfe.DxAttr = _aabba
			continue
		}
		if _geac.Name.Local == "\u0064\u0079" {
			_ggced, _adaag := ParseUnionST_Coordinate(_geac.Value)
			if _adaag != nil {
				return _adaag
			}
			_dddfe.DyAttr = _ggced
			continue
		}
		if _geac.Name.Local == "\u0064\u007a" {
			_gdbad, _cbacb := ParseUnionST_Coordinate(_geac.Value)
			if _cbacb != nil {
				return _cbacb
			}
			_dddfe.DzAttr = _gdbad
			continue
		}
	}
	for {
		_gccffe, _ababg := d.Token()
		if _ababg != nil {
			return _gf.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0044\u003a\u0020\u0025\u0073", _ababg)
		}
		if _befebg, _dccbfa := _gccffe.(_g.EndElement); _dccbfa && _befebg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ggdcb ST_AdjAngle) String() string {
	if _ggdcb.ST_Angle != nil {
		return _gf.Sprintf("\u0025\u0076", *_ggdcb.ST_Angle)
	}
	if _ggdcb.ST_GeomGuideName != nil {
		return _gf.Sprintf("\u0025\u0076", *_ggdcb.ST_GeomGuideName)
	}
	return ""
}

func (_aaccg ST_PathShadeType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_aaccg.String(), start)
}

func (_fdbedc ST_Coordinate) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _fdbedc.ST_CoordinateUnqualified != nil {
		e.EncodeToken(_g.CharData(_gf.Sprintf("\u0025\u0064", *_fdbedc.ST_CoordinateUnqualified)))
	}
	if _fdbedc.ST_UniversalMeasure != nil {
		e.EncodeToken(_g.CharData(*_fdbedc.ST_UniversalMeasure))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

func (_aagbd ST_DgmBuildStep) String() string {
	switch _aagbd {
	case 0:
		return ""
	case 1:
		return "\u0073\u0070"
	case 2:
		return "\u0062\u0067"
	}
	return ""
}

// ValidateWithPath validates the EG_TextAutofit and its children, prefixing error messages with path
func (_cbabb *EG_TextAutofit) ValidateWithPath(path string) error {
	if _cbabb.NoAutofit != nil {
		if _agadg := _cbabb.NoAutofit.ValidateWithPath(path + "\u002f\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _agadg != nil {
			return _agadg
		}
	}
	if _cbabb.NormAutofit != nil {
		if _gdcdb := _cbabb.NormAutofit.ValidateWithPath(path + "\u002f\u004e\u006fr\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _gdcdb != nil {
			return _gdcdb
		}
	}
	if _cbabb.SpAutoFit != nil {
		if _cbgfd := _cbabb.SpAutoFit.ValidateWithPath(path + "\u002f\u0053\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"); _cbgfd != nil {
			return _cbgfd
		}
	}
	return nil
}

func (_eca *CT_AlphaFloorEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_aege, _ced := d.Token()
		if _ced != nil {
			return _gf.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0041\u006c\u0070\u0068\u0061F\u006c\u006f\u006f\u0072\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _ced)
		}
		if _dcee, _bggc := _aege.(_g.EndElement); _bggc && _dcee.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ggcac *EG_Text3D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cgaagb:
	for {
		_deceg, _fbgfb := d.Token()
		if _fbgfb != nil {
			return _fbgfb
		}
		switch _abda := _deceg.(type) {
		case _g.StartElement:
			switch _abda.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_ggcac.Sp3d = NewCT_Shape3D()
				if _aeebdea := d.DecodeElement(_ggcac.Sp3d, &_abda); _aeebdea != nil {
					return _aeebdea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}:
				_ggcac.FlatTx = NewCT_FlatText()
				if _gcfed := d.DecodeElement(_ggcac.FlatTx, &_abda); _gcfed != nil {
					return _gcfed
				}
			default:
				_b.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0045\u0047\u005f\u0054\u0065\u0078t\u0033\u0044 \u0025\u0076", _abda.Name)
				if _bdgggg := d.Skip(); _bdgggg != nil {
					return _bdgggg
				}
			}
		case _g.EndElement:
			break _cgaagb
		case _g.CharData:
		}
	}
	return nil
}

type CT_EffectContainer struct {
	TypeAttr     ST_EffectContainerType
	NameAttr     *string
	Cont         *CT_EffectContainer
	Effect       *CT_EffectReference
	AlphaBiLevel *CT_AlphaBiLevelEffect
	AlphaCeiling *CT_AlphaCeilingEffect
	AlphaFloor   *CT_AlphaFloorEffect
	AlphaInv     *CT_AlphaInverseEffect
	AlphaMod     *CT_AlphaModulateEffect
	AlphaModFix  *CT_AlphaModulateFixedEffect
	AlphaOutset  *CT_AlphaOutsetEffect
	AlphaRepl    *CT_AlphaReplaceEffect
	BiLevel      *CT_BiLevelEffect
	Blend        *CT_BlendEffect
	Blur         *CT_BlurEffect
	ClrChange    *CT_ColorChangeEffect
	ClrRepl      *CT_ColorReplaceEffect
	Duotone      *CT_DuotoneEffect
	Fill         *CT_FillEffect
	FillOverlay  *CT_FillOverlayEffect
	Glow         *CT_GlowEffect
	Grayscl      *CT_GrayscaleEffect
	Hsl          *CT_HSLEffect
	InnerShdw    *CT_InnerShadowEffect
	Lum          *CT_LuminanceEffect
	OuterShdw    *CT_OuterShadowEffect
	PrstShdw     *CT_PresetShadowEffect
	Reflection   *CT_ReflectionEffect
	RelOff       *CT_RelativeOffsetEffect
	SoftEdge     *CT_SoftEdgesEffect
	Tint         *CT_TintEffect
	Xfrm         *CT_TransformEffect
}

func (_dggfc *ST_TextBulletSize) ValidateWithPath(path string) error {
	_cdadg := []string{}
	if _dggfc.ST_TextBulletSizePercent != nil {
		_cdadg = append(_cdadg, "\u0053T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074")
	}
	if _dggfc.ST_TextBulletSizeDecimal != nil {
		_cdadg = append(_cdadg, "\u0053T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0044\u0065\u0063\u0069\u006d\u0061\u006c")
	}
	if len(_cdadg) > 1 {
		return _gf.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _cdadg)
	}
	return nil
}

func (_gacfgd *ST_ShapeType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bgdb, _eabgf := d.Token()
	if _eabgf != nil {
		return _eabgf
	}
	if _gacae, _efebge := _bgdb.(_g.EndElement); _efebge && _gacae.Name == start.Name {
		*_gacfgd = 1
		return nil
	}
	if _dedbc, _aeeab := _bgdb.(_g.CharData); !_aeeab {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgdb)
	} else {
		switch string(_dedbc) {
		case "":
			*_gacfgd = 0
		case "\u006c\u0069\u006e\u0065":
			*_gacfgd = 1
		case "\u006ci\u006e\u0065\u0049\u006e\u0076":
			*_gacfgd = 2
		case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_gacfgd = 3
		case "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_gacfgd = 4
		case "\u0072\u0065\u0063\u0074":
			*_gacfgd = 5
		case "\u0064i\u0061\u006d\u006f\u006e\u0064":
			*_gacfgd = 6
		case "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d":
			*_gacfgd = 7
		case "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d":
			*_gacfgd = 8
		case "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064":
			*_gacfgd = 9
		case "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e":
			*_gacfgd = 10
		case "\u0068e\u0078\u0061\u0067\u006f\u006e":
			*_gacfgd = 11
		case "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e":
			*_gacfgd = 12
		case "\u006fc\u0074\u0061\u0067\u006f\u006e":
			*_gacfgd = 13
		case "\u0064e\u0063\u0061\u0067\u006f\u006e":
			*_gacfgd = 14
		case "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn":
			*_gacfgd = 15
		case "\u0073\u0074\u0061r\u0034":
			*_gacfgd = 16
		case "\u0073\u0074\u0061r\u0035":
			*_gacfgd = 17
		case "\u0073\u0074\u0061r\u0036":
			*_gacfgd = 18
		case "\u0073\u0074\u0061r\u0037":
			*_gacfgd = 19
		case "\u0073\u0074\u0061r\u0038":
			*_gacfgd = 20
		case "\u0073\u0074\u0061\u0072\u0031\u0030":
			*_gacfgd = 21
		case "\u0073\u0074\u0061\u0072\u0031\u0032":
			*_gacfgd = 22
		case "\u0073\u0074\u0061\u0072\u0031\u0036":
			*_gacfgd = 23
		case "\u0073\u0074\u0061\u0072\u0032\u0034":
			*_gacfgd = 24
		case "\u0073\u0074\u0061\u0072\u0033\u0032":
			*_gacfgd = 25
		case "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t":
			*_gacfgd = 26
		case "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074":
			*_gacfgd = 27
		case "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074":
			*_gacfgd = 28
		case "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074":
			*_gacfgd = 29
		case "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074":
			*_gacfgd = 30
		case "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t":
			*_gacfgd = 31
		case "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074":
			*_gacfgd = 32
		case "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074":
			*_gacfgd = 33
		case "\u0070\u006c\u0061\u0071\u0075\u0065":
			*_gacfgd = 34
		case "\u0065l\u006c\u0069\u0070\u0073\u0065":
			*_gacfgd = 35
		case "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070":
			*_gacfgd = 36
		case "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e":
			*_gacfgd = 37
		case "\u0063h\u0065\u0076\u0072\u006f\u006e":
			*_gacfgd = 38
		case "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065":
			*_gacfgd = 39
		case "\u0070\u0069\u0065":
			*_gacfgd = 40
		case "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063":
			*_gacfgd = 41
		case "\u0064\u006f\u006eu\u0074":
			*_gacfgd = 42
		case "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg":
			*_gacfgd = 43
		case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
			*_gacfgd = 44
		case "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw":
			*_gacfgd = 45
		case "\u0075p\u0041\u0072\u0072\u006f\u0077":
			*_gacfgd = 46
		case "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw":
			*_gacfgd = 47
		case "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
			*_gacfgd = 48
		case "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
			*_gacfgd = 49
		case "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_gacfgd = 50
		case "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
			*_gacfgd = 51
		case "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
			*_gacfgd = 52
		case "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_gacfgd = 53
		case "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_gacfgd = 54
		case "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw":
			*_gacfgd = 55
		case "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_gacfgd = 56
		case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
			*_gacfgd = 57
		case "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
			*_gacfgd = 58
		case "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_gacfgd = 59
		case "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074":
			*_gacfgd = 60
		case "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074":
			*_gacfgd = 61
		case "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_gacfgd = 62
		case "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw":
			*_gacfgd = 63
		case "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077":
			*_gacfgd = 64
		case "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077":
			*_gacfgd = 65
		case "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077":
			*_gacfgd = 66
		case "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077":
			*_gacfgd = 67
		case "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
			*_gacfgd = 68
		case "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077":
			*_gacfgd = 69
		case "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_gacfgd = 70
		case "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
			*_gacfgd = 71
		case "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077":
			*_gacfgd = 72
		case "\u0063\u0075\u0062\u0065":
			*_gacfgd = 73
		case "\u0063\u0061\u006e":
			*_gacfgd = 74
		case "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074":
			*_gacfgd = 75
		case "\u0068\u0065\u0061r\u0074":
			*_gacfgd = 76
		case "\u0073\u0075\u006e":
			*_gacfgd = 77
		case "\u006d\u006f\u006f\u006e":
			*_gacfgd = 78
		case "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065":
			*_gacfgd = 79
		case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031":
			*_gacfgd = 80
		case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032":
			*_gacfgd = 81
		case "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072":
			*_gacfgd = 82
		case "\u0062\u0065\u0076e\u006c":
			*_gacfgd = 83
		case "\u0066\u0072\u0061m\u0065":
			*_gacfgd = 84
		case "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de":
			*_gacfgd = 85
		case "\u0063\u006f\u0072\u006e\u0065\u0072":
			*_gacfgd = 86
		case "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065":
			*_gacfgd = 87
		case "\u0063\u0068\u006fr\u0064":
			*_gacfgd = 88
		case "\u0061\u0072\u0063":
			*_gacfgd = 89
		case "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
			*_gacfgd = 90
		case "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
			*_gacfgd = 91
		case "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e":
			*_gacfgd = 92
		case "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065":
			*_gacfgd = 93
		case "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072":
			*_gacfgd = 94
		case "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r":
			*_gacfgd = 95
		case "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031":
			*_gacfgd = 96
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032":
			*_gacfgd = 97
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033":
			*_gacfgd = 98
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034":
			*_gacfgd = 99
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035":
			*_gacfgd = 100
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032":
			*_gacfgd = 101
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033":
			*_gacfgd = 102
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034":
			*_gacfgd = 103
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035":
			*_gacfgd = 104
		case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031":
			*_gacfgd = 105
		case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032":
			*_gacfgd = 106
		case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033":
			*_gacfgd = 107
		case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
			*_gacfgd = 108
		case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
			*_gacfgd = 109
		case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
			*_gacfgd = 110
		case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
			*_gacfgd = 111
		case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
			*_gacfgd = 112
		case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
			*_gacfgd = 113
		case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031":
			*_gacfgd = 114
		case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032":
			*_gacfgd = 115
		case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033":
			*_gacfgd = 116
		case "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_gacfgd = 117
		case "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074":
			*_gacfgd = 118
		case "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_gacfgd = 119
		case "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_gacfgd = 120
		case "\u0063\u006c\u006fu\u0064":
			*_gacfgd = 121
		case "\u0072\u0069\u0062\u0062\u006f\u006e":
			*_gacfgd = 122
		case "\u0072i\u0062\u0062\u006f\u006e\u0032":
			*_gacfgd = 123
		case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e":
			*_gacfgd = 124
		case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032":
			*_gacfgd = 125
		case "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e":
			*_gacfgd = 126
		case "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c":
			*_gacfgd = 127
		case "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c":
			*_gacfgd = 128
		case "\u0077\u0061\u0076\u0065":
			*_gacfgd = 129
		case "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065":
			*_gacfgd = 130
		case "\u0070\u006c\u0075\u0073":
			*_gacfgd = 131
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073":
			*_gacfgd = 132
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e":
			*_gacfgd = 133
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074":
			*_gacfgd = 134
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073":
			*_gacfgd = 135
		case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
			*_gacfgd = 136
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074":
			*_gacfgd = 137
		case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074":
			*_gacfgd = 138
		case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072":
			*_gacfgd = 139
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e":
			*_gacfgd = 140
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074":
			*_gacfgd = 141
		case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e":
			*_gacfgd = 142
		case "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072":
			*_gacfgd = 143
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064":
			*_gacfgd = 144
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065":
			*_gacfgd = 145
		case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e":
			*_gacfgd = 146
		case "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072":
			*_gacfgd = 147
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065":
			*_gacfgd = 148
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074":
			*_gacfgd = 149
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074":
			*_gacfgd = 150
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065":
			*_gacfgd = 151
		case "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
			*_gacfgd = 152
		case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065":
			*_gacfgd = 153
		case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065":
			*_gacfgd = 154
		case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b":
			*_gacfgd = 155
		case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d":
			*_gacfgd = 156
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079":
			*_gacfgd = 157
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079":
			*_gacfgd = 158
		case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s":
			*_gacfgd = 159
		case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr":
			*_gacfgd = 160
		case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b":
			*_gacfgd = 161
		case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065":
			*_gacfgd = 162
		case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070":
			*_gacfgd = 163
		case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
			*_gacfgd = 164
		case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074":
			*_gacfgd = 165
		case "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073":
			*_gacfgd = 166
		case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064":
			*_gacfgd = 167
		case "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067":
			*_gacfgd = 168
		case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e":
			*_gacfgd = 169
		case "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074":
			*_gacfgd = 170
		case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064":
			*_gacfgd = 171
		case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065":
			*_gacfgd = 172
		case "\u0067\u0065\u0061r\u0036":
			*_gacfgd = 173
		case "\u0067\u0065\u0061r\u0039":
			*_gacfgd = 174
		case "\u0066\u0075\u006e\u006e\u0065\u006c":
			*_gacfgd = 175
		case "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073":
			*_gacfgd = 176
		case "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s":
			*_gacfgd = 177
		case "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079":
			*_gacfgd = 178
		case "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065":
			*_gacfgd = 179
		case "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l":
			*_gacfgd = 180
		case "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_gacfgd = 181
		case "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073":
			*_gacfgd = 182
		case "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073":
			*_gacfgd = 183
		case "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073":
			*_gacfgd = 184
		case "\u0063\u0068\u0061\u0072\u0074\u0058":
			*_gacfgd = 185
		case "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r":
			*_gacfgd = 186
		case "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s":
			*_gacfgd = 187
		}
	}
	_bgdb, _eabgf = d.Token()
	if _eabgf != nil {
		return _eabgf
	}
	if _eddbb, _fccg := _bgdb.(_g.EndElement); _fccg && _eddbb.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgdb)
}

func NewCT_GrayscaleTransform() *CT_GrayscaleTransform {
	_acggd := &CT_GrayscaleTransform{}
	return _acggd
}

func (_eddeb *CT_GvmlConnector) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_eddeb.NvCxnSpPr = NewCT_GvmlConnectorNonVisual()
	_eddeb.SpPr = NewCT_ShapeProperties()
_gdfe:
	for {
		_ceddd, _feagd := d.Token()
		if _feagd != nil {
			return _feagd
		}
		switch _dcaf := _ceddd.(type) {
		case _g.StartElement:
			switch _dcaf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}:
				if _ffbdg := d.DecodeElement(_eddeb.NvCxnSpPr, &_dcaf); _ffbdg != nil {
					return _ffbdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _effd := d.DecodeElement(_eddeb.SpPr, &_dcaf); _effd != nil {
					return _effd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_eddeb.Style = NewCT_ShapeStyle()
				if _adbdg := d.DecodeElement(_eddeb.Style, &_dcaf); _adbdg != nil {
					return _adbdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eddeb.ExtLst = NewCT_OfficeArtExtensionList()
				if _eeadd := d.DecodeElement(_eddeb.ExtLst, &_dcaf); _eeadd != nil {
					return _eeadd
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0020\u0025v", _dcaf.Name)
				if _acfbb := d.Skip(); _acfbb != nil {
					return _acfbb
				}
			}
		case _g.EndElement:
			break _gdfe
		case _g.CharData:
		}
	}
	return nil
}

// ST_PositiveFixedPercentage is a union type
type ST_PositiveFixedPercentage struct {
	ST_PositiveFixedPercentageDecimal *int32
	ST_PositiveFixedPercentage        *ST_Percentage
}

func (_deegg *CT_Point2D) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dabfa := range start.Attr {
		if _dabfa.Name.Local == "\u0078" {
			_eggab, _abcb := ParseUnionST_Coordinate(_dabfa.Value)
			if _abcb != nil {
				return _abcb
			}
			_deegg.XAttr = _eggab
			continue
		}
		if _dabfa.Name.Local == "\u0079" {
			_afda, _ggaac := ParseUnionST_Coordinate(_dabfa.Value)
			if _ggaac != nil {
				return _ggaac
			}
			_deegg.YAttr = _afda
			continue
		}
	}
	for {
		_bdcda, _afegf := d.Token()
		if _afegf != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0032\u0044\u003a\u0020%\u0073", _afegf)
		}
		if _fggbd, _fffac := _bdcda.(_g.EndElement); _fffac && _fggbd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cega *CT_Path2DQuadBezierTo) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cbggc:
	for {
		_ddfgc, _faaaa := d.Token()
		if _faaaa != nil {
			return _faaaa
		}
		switch _cgccf := _ddfgc.(type) {
		case _g.StartElement:
			switch _cgccf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				_abdbab := NewCT_AdjPoint2D()
				if _gaccf := d.DecodeElement(_abdbab, &_cgccf); _gaccf != nil {
					return _gaccf
				}
				_cega.Pt = append(_cega.Pt, _abdbab)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044\u0051\u0075\u0061\u0064\u0042\u0065\u007a\u0069\u0065\u0072\u0054\u006f\u0020\u0025\u0076", _cgccf.Name)
				if _eaead := d.Skip(); _eaead != nil {
					return _eaead
				}
			}
		case _g.EndElement:
			break _cbggc
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_ThemeableLineStyle() *CT_ThemeableLineStyle {
	_cgbab := &CT_ThemeableLineStyle{}
	return _cgbab
}

func NewCT_Path2D() *CT_Path2D { _bbdga := &CT_Path2D{}; return _bbdga }

func (_fbegg *CT_TextNoAutofit) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_dfbeb, _ecafbd := d.Token()
		if _ecafbd != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074N\u006fA\u0075\u0074\u006f\u0066\u0069\u0074\u003a \u0025\u0073", _ecafbd)
		}
		if _afbfg, _abeba := _dfbeb.(_g.EndElement); _abeba && _afbfg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fccaf *EG_TextBulletColor) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fccaf.BuClrTx != nil {
		_fgffdc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072\u0054x"}}
		e.EncodeElement(_fccaf.BuClrTx, _fgffdc)
	}
	if _fccaf.BuClr != nil {
		_fbca := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072"}}
		e.EncodeElement(_fccaf.BuClr, _fbca)
	}
	return nil
}

// ValidateWithPath validates the VideoFile and its children, prefixing error messages with path
func (_bgbfc *VideoFile) ValidateWithPath(path string) error {
	if _gcfefg := _bgbfc.CT_VideoFile.ValidateWithPath(path); _gcfefg != nil {
		return _gcfefg
	}
	return nil
}

type ST_LightRigDirection byte

func NewEG_TextGeometry() *EG_TextGeometry { _fgde := &EG_TextGeometry{}; return _fgde }

func (_addba *CT_TextParagraphProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cdddf := range start.Attr {
		if _cdddf.Name.Local == "\u006d\u0061\u0072\u004c" {
			_aedad, _cbdfa := _c.ParseInt(_cdddf.Value, 10, 32)
			if _cbdfa != nil {
				return _cbdfa
			}
			_befgbe := int32(_aedad)
			_addba.MarLAttr = &_befgbe
			continue
		}
		if _cdddf.Name.Local == "\u006c\u0076\u006c" {
			_ffeda, _eabbd := _c.ParseInt(_cdddf.Value, 10, 32)
			if _eabbd != nil {
				return _eabbd
			}
			_bbdcb := int32(_ffeda)
			_addba.LvlAttr = &_bbdcb
			continue
		}
		if _cdddf.Name.Local == "\u0061\u006c\u0067\u006e" {
			_addba.AlgnAttr.UnmarshalXMLAttr(_cdddf)
			continue
		}
		if _cdddf.Name.Local == "\u0072\u0074\u006c" {
			_ceggd, _facdg := _c.ParseBool(_cdddf.Value)
			if _facdg != nil {
				return _facdg
			}
			_addba.RtlAttr = &_ceggd
			continue
		}
		if _cdddf.Name.Local == "\u0066\u006f\u006e\u0074\u0041\u006c\u0067\u006e" {
			_addba.FontAlgnAttr.UnmarshalXMLAttr(_cdddf)
			continue
		}
		if _cdddf.Name.Local == "\u006d\u0061\u0072\u0052" {
			_adeea, _cfcdb := _c.ParseInt(_cdddf.Value, 10, 32)
			if _cfcdb != nil {
				return _cfcdb
			}
			_eababc := int32(_adeea)
			_addba.MarRAttr = &_eababc
			continue
		}
		if _cdddf.Name.Local == "\u006c\u0061\u0074\u0069\u006e\u004c\u006e\u0042\u0072\u006b" {
			_cdgfdb, _bdcbef := _c.ParseBool(_cdddf.Value)
			if _bdcbef != nil {
				return _bdcbef
			}
			_addba.LatinLnBrkAttr = &_cdgfdb
			continue
		}
		if _cdddf.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_bedbg, _ggbeaa := _c.ParseInt(_cdddf.Value, 10, 32)
			if _ggbeaa != nil {
				return _ggbeaa
			}
			_acgdg := int32(_bedbg)
			_addba.IndentAttr = &_acgdg
			continue
		}
		if _cdddf.Name.Local == "\u0065a\u004c\u006e\u0042\u0072\u006b" {
			_dcagf, _aeadd := _c.ParseBool(_cdddf.Value)
			if _aeadd != nil {
				return _aeadd
			}
			_addba.EaLnBrkAttr = &_dcagf
			continue
		}
		if _cdddf.Name.Local == "\u0068\u0061\u006eg\u0069\u006e\u0067\u0050\u0075\u006e\u0063\u0074" {
			_bggfb, _gebfg := _c.ParseBool(_cdddf.Value)
			if _gebfg != nil {
				return _gebfg
			}
			_addba.HangingPunctAttr = &_bggfb
			continue
		}
		if _cdddf.Name.Local == "\u0064\u0065\u0066\u0054\u0061\u0062\u0053\u007a" {
			_gaeafd, _fcedc := ParseUnionST_Coordinate32(_cdddf.Value)
			if _fcedc != nil {
				return _fcedc
			}
			_addba.DefTabSzAttr = &_gaeafd
			continue
		}
	}
_gfcfd:
	for {
		_cdaed, _fdefe := d.Token()
		if _fdefe != nil {
			return _fdefe
		}
		switch _dgdfg := _cdaed.(type) {
		case _g.StartElement:
			switch _dgdfg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053p\u0063"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053p\u0063"}:
				_addba.LnSpc = NewCT_TextSpacing()
				if _dbag := d.DecodeElement(_addba.LnSpc, &_dgdfg); _dbag != nil {
					return _dbag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0042\u0065\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0042\u0065\u0066"}:
				_addba.SpcBef = NewCT_TextSpacing()
				if _fbabb := d.DecodeElement(_addba.SpcBef, &_dgdfg); _fbabb != nil {
					return _fbabb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0041\u0066\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0041\u0066\u0074"}:
				_addba.SpcAft = NewCT_TextSpacing()
				if _egegbg := d.DecodeElement(_addba.SpcAft, &_dgdfg); _egegbg != nil {
					return _egegbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}:
				_addba.BuClrTx = NewCT_TextBulletColorFollowText()
				if _eacf := d.DecodeElement(_addba.BuClrTx, &_dgdfg); _eacf != nil {
					return _eacf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}:
				_addba.BuClr = NewCT_Color()
				if _bdge := d.DecodeElement(_addba.BuClr, &_dgdfg); _bdge != nil {
					return _bdge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}:
				_addba.BuSzTx = NewCT_TextBulletSizeFollowText()
				if _defgf := d.DecodeElement(_addba.BuSzTx, &_dgdfg); _defgf != nil {
					return _defgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}:
				_addba.BuSzPct = NewCT_TextBulletSizePercent()
				if _bacbd := d.DecodeElement(_addba.BuSzPct, &_dgdfg); _bacbd != nil {
					return _bacbd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}:
				_addba.BuSzPts = NewCT_TextBulletSizePoint()
				if _dgbc := d.DecodeElement(_addba.BuSzPts, &_dgdfg); _dgbc != nil {
					return _dgbc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}:
				_addba.BuFontTx = NewCT_TextBulletTypefaceFollowText()
				if _cgggg := d.DecodeElement(_addba.BuFontTx, &_dgdfg); _cgggg != nil {
					return _cgggg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}:
				_addba.BuFont = NewCT_TextFont()
				if _cbbba := d.DecodeElement(_addba.BuFont, &_dgdfg); _cbbba != nil {
					return _cbbba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}:
				_addba.BuNone = NewCT_TextNoBullet()
				if _edgagd := d.DecodeElement(_addba.BuNone, &_dgdfg); _edgagd != nil {
					return _edgagd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}:
				_addba.BuAutoNum = NewCT_TextAutonumberBullet()
				if _agad := d.DecodeElement(_addba.BuAutoNum, &_dgdfg); _agad != nil {
					return _agad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}:
				_addba.BuChar = NewCT_TextCharBullet()
				if _bgecg := d.DecodeElement(_addba.BuChar, &_dgdfg); _bgecg != nil {
					return _bgecg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}:
				_addba.BuBlip = NewCT_TextBlipBullet()
				if _gacda := d.DecodeElement(_addba.BuBlip, &_dgdfg); _gacda != nil {
					return _gacda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u004c\u0073\u0074"}:
				_addba.TabLst = NewCT_TextTabStopList()
				if _bcdef := d.DecodeElement(_addba.TabLst, &_dgdfg); _bcdef != nil {
					return _bcdef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0052\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0052\u0050\u0072"}:
				_addba.DefRPr = NewCT_TextCharacterProperties()
				if _fdagcb := d.DecodeElement(_addba.DefRPr, &_dgdfg); _fdagcb != nil {
					return _fdagcb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_addba.ExtLst = NewCT_OfficeArtExtensionList()
				if _cgebf := d.DecodeElement(_addba.ExtLst, &_dgdfg); _cgebf != nil {
					return _cgebf
				}
			default:
				_b.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u0065x\u0074\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _dgdfg.Name)
				if _aebfb := d.Skip(); _aebfb != nil {
					return _aebfb
				}
			}
		case _g.EndElement:
			break _gfcfd
		case _g.CharData:
		}
	}
	return nil
}

func (_dfggb *CT_TextBlipBullet) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_fddd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070"}}
	e.EncodeElement(_dfggb.Blip, _fddd)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_TableStyleTextStyle struct {
	BAttr     ST_OnOffStyleType
	IAttr     ST_OnOffStyleType
	Font      *CT_FontCollection
	FontRef   *CT_FontReference
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
	ExtLst    *CT_OfficeArtExtensionList
}

func (_gfccd ST_FixedPercentage) String() string {
	if _gfccd.ST_FixedPercentageDecimal != nil {
		return _gf.Sprintf("\u0025\u0076", *_gfccd.ST_FixedPercentageDecimal)
	}
	if _gfccd.ST_FixedPercentage != nil {
		return _gfccd.ST_FixedPercentage.String()
	}
	return ""
}

func (_aeabb ST_PresetCameraType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_dcgfbe := _g.Attr{}
	_dcgfbe.Name = name
	switch _aeabb {
	case ST_PresetCameraTypeUnset:
		_dcgfbe.Value = ""
	case ST_PresetCameraTypeLegacyObliqueTopLeft:
		_dcgfbe.Value = "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074"
	case ST_PresetCameraTypeLegacyObliqueTop:
		_dcgfbe.Value = "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case ST_PresetCameraTypeLegacyObliqueTopRight:
		_dcgfbe.Value = "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeLegacyObliqueLeft:
		_dcgfbe.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyObliqueFront:
		_dcgfbe.Value = "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074"
	case ST_PresetCameraTypeLegacyObliqueRight:
		_dcgfbe.Value = "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeLegacyObliqueBottomLeft:
		_dcgfbe.Value = "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyObliqueBottom:
		_dcgfbe.Value = "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeLegacyObliqueBottomRight:
		_dcgfbe.Value = "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveTopLeft:
		_dcgfbe.Value = "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveTop:
		_dcgfbe.Value = "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070"
	case ST_PresetCameraTypeLegacyPerspectiveTopRight:
		_dcgfbe.Value = "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t"
	case ST_PresetCameraTypeLegacyPerspectiveLeft:
		_dcgfbe.Value = "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveFront:
		_dcgfbe.Value = "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveRight:
		_dcgfbe.Value = "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveBottomLeft:
		_dcgfbe.Value = "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveBottom:
		_dcgfbe.Value = "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeLegacyPerspectiveBottomRight:
		_dcgfbe.Value = "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074"
	case ST_PresetCameraTypeOrthographicFront:
		_dcgfbe.Value = "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074"
	case ST_PresetCameraTypeIsometricTopUp:
		_dcgfbe.Value = "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070"
	case ST_PresetCameraTypeIsometricTopDown:
		_dcgfbe.Value = "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricBottomUp:
		_dcgfbe.Value = "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070"
	case ST_PresetCameraTypeIsometricBottomDown:
		_dcgfbe.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricLeftUp:
		_dcgfbe.Value = "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070"
	case ST_PresetCameraTypeIsometricLeftDown:
		_dcgfbe.Value = "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricRightUp:
		_dcgfbe.Value = "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070"
	case ST_PresetCameraTypeIsometricRightDown:
		_dcgfbe.Value = "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricOffAxis1Left:
		_dcgfbe.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis1Right:
		_dcgfbe.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis1Top:
		_dcgfbe.Value = "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070"
	case ST_PresetCameraTypeIsometricOffAxis2Left:
		_dcgfbe.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis2Right:
		_dcgfbe.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis2Top:
		_dcgfbe.Value = "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070"
	case ST_PresetCameraTypeIsometricOffAxis3Left:
		_dcgfbe.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis3Right:
		_dcgfbe.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis3Bottom:
		_dcgfbe.Value = "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeIsometricOffAxis4Left:
		_dcgfbe.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis4Right:
		_dcgfbe.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis4Bottom:
		_dcgfbe.Value = "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeObliqueTopLeft:
		_dcgfbe.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeObliqueTop:
		_dcgfbe.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case ST_PresetCameraTypeObliqueTopRight:
		_dcgfbe.Value = "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeObliqueLeft:
		_dcgfbe.Value = "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeObliqueRight:
		_dcgfbe.Value = "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeObliqueBottomLeft:
		_dcgfbe.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeObliqueBottom:
		_dcgfbe.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeObliqueBottomRight:
		_dcgfbe.Value = "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypePerspectiveFront:
		_dcgfbe.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074"
	case ST_PresetCameraTypePerspectiveLeft:
		_dcgfbe.Value = "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypePerspectiveRight:
		_dcgfbe.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypePerspectiveAbove:
		_dcgfbe.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065"
	case ST_PresetCameraTypePerspectiveBelow:
		_dcgfbe.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077"
	case ST_PresetCameraTypePerspectiveAboveLeftFacing:
		_dcgfbe.Value = "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveAboveRightFacing:
		_dcgfbe.Value = "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveContrastingLeftFacing:
		_dcgfbe.Value = "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveContrastingRightFacing:
		_dcgfbe.Value = "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicLeftFacing:
		_dcgfbe.Value = "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicRightFacing:
		_dcgfbe.Value = "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicExtremeLeftFacing:
		_dcgfbe.Value = "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicExtremeRightFacing:
		_dcgfbe.Value = "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067"
	case ST_PresetCameraTypePerspectiveRelaxed:
		_dcgfbe.Value = "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064"
	case ST_PresetCameraTypePerspectiveRelaxedModerately:
		_dcgfbe.Value = "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079"
	}
	return _dcgfbe, nil
}

// Validate validates the CT_GvmlGroupShapeNonVisual and its children
func (_eadf *CT_GvmlGroupShapeNonVisual) Validate() error {
	return _eadf.ValidateWithPath("\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069s\u0075\u0061\u006c")
}

func (_aabga *CT_StretchInfoProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _aabga.FillRect != nil {
		_ddcfe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_aabga.FillRect, _ddcfe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cee *CT_AlphaModulateEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cee.Cont = NewCT_EffectContainer()
_ege:
	for {
		_gfd, _gcf := d.Token()
		if _gcf != nil {
			return _gcf
		}
		switch _bfae := _gfd.(type) {
		case _g.StartElement:
			switch _bfae.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				if _fbb := d.DecodeElement(_cee.Cont, &_bfae); _fbb != nil {
					return _fbb
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0041\u006c\u0070\u0068a\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _bfae.Name)
				if _bba := d.Skip(); _bba != nil {
					return _bba
				}
			}
		case _g.EndElement:
			break _ege
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_OuterShadowEffect and its children
func (_bgbbd *CT_OuterShadowEffect) Validate() error {
	return _bgbbd.ValidateWithPath("C\u0054_\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074")
}

// Validate validates the CT_TablePartStyle and its children
func (_fbffe *CT_TablePartStyle) Validate() error {
	return _fbffe.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074S\u0074\u0079\u006c\u0065")
}

func (_cgbbgb ST_SystemColorVal) ValidateWithPath(path string) error {
	switch _cgbbgb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cgbbgb))
	}
	return nil
}

func (_egebd *CT_TableGrid) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _egebd.GridCol != nil {
		_ebbfg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0069\u0064\u0043\u006fl"}}
		for _, _dedcf := range _egebd.GridCol {
			e.EncodeElement(_dedcf, _ebbfg)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gggg *CT_BackgroundFillStyleList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_acgc:
	for {
		_bfc, _afdc := d.Token()
		if _afdc != nil {
			return _afdc
		}
		switch _ffcb := _bfc.(type) {
		case _g.StartElement:
			switch _ffcb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_ggec := NewEG_FillProperties()
				_ggec.NoFill = NewCT_NoFillProperties()
				if _aegf := d.DecodeElement(_ggec.NoFill, &_ffcb); _aegf != nil {
					return _aegf
				}
				_gggg.EG_FillProperties = append(_gggg.EG_FillProperties, _ggec)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_aeee := NewEG_FillProperties()
				_aeee.SolidFill = NewCT_SolidColorFillProperties()
				if _fecg := d.DecodeElement(_aeee.SolidFill, &_ffcb); _fecg != nil {
					return _fecg
				}
				_gggg.EG_FillProperties = append(_gggg.EG_FillProperties, _aeee)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_eaee := NewEG_FillProperties()
				_eaee.GradFill = NewCT_GradientFillProperties()
				if _dddg := d.DecodeElement(_eaee.GradFill, &_ffcb); _dddg != nil {
					return _dddg
				}
				_gggg.EG_FillProperties = append(_gggg.EG_FillProperties, _eaee)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_gfgb := NewEG_FillProperties()
				_gfgb.BlipFill = NewCT_BlipFillProperties()
				if _eaeg := d.DecodeElement(_gfgb.BlipFill, &_ffcb); _eaeg != nil {
					return _eaeg
				}
				_gggg.EG_FillProperties = append(_gggg.EG_FillProperties, _gfgb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_ceg := NewEG_FillProperties()
				_ceg.PattFill = NewCT_PatternFillProperties()
				if _bddd := d.DecodeElement(_ceg.PattFill, &_ffcb); _bddd != nil {
					return _bddd
				}
				_gggg.EG_FillProperties = append(_gggg.EG_FillProperties, _ceg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_gded := NewEG_FillProperties()
				_gded.GrpFill = NewCT_GroupFillProperties()
				if _dde := d.DecodeElement(_gded.GrpFill, &_ffcb); _dde != nil {
					return _dde
				}
				_gggg.EG_FillProperties = append(_gggg.EG_FillProperties, _gded)
			default:
				_b.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0042\u0061c\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ffcb.Name)
				if _gfbe := d.Skip(); _gfbe != nil {
					return _gfbe
				}
			}
		case _g.EndElement:
			break _acgc
		case _g.CharData:
		}
	}
	return nil
}

type EG_TextAutofit struct {
	NoAutofit   *CT_TextNoAutofit
	NormAutofit *CT_TextNormalAutofit
	SpAutoFit   *CT_TextShapeAutofit
}

// ValidateWithPath validates the CT_Scale2D and its children, prefixing error messages with path
func (_bgdfba *CT_Scale2D) ValidateWithPath(path string) error {
	if _egfb := _bgdfba.Sx.ValidateWithPath(path + "\u002f\u0053\u0078"); _egfb != nil {
		return _egfb
	}
	if _gdbed := _bgdfba.Sy.ValidateWithPath(path + "\u002f\u0053\u0079"); _gdbed != nil {
		return _gdbed
	}
	return nil
}

func (_afced *CT_FillEffect) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_agba:
	for {
		_gacfd, _dfafb := d.Token()
		if _dfafb != nil {
			return _dfafb
		}
		switch _fdfd := _gacfd.(type) {
		case _g.StartElement:
			switch _fdfd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_afced.NoFill = NewCT_NoFillProperties()
				if _eadab := d.DecodeElement(_afced.NoFill, &_fdfd); _eadab != nil {
					return _eadab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_afced.SolidFill = NewCT_SolidColorFillProperties()
				if _bbag := d.DecodeElement(_afced.SolidFill, &_fdfd); _bbag != nil {
					return _bbag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_afced.GradFill = NewCT_GradientFillProperties()
				if _abcgc := d.DecodeElement(_afced.GradFill, &_fdfd); _abcgc != nil {
					return _abcgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_afced.BlipFill = NewCT_BlipFillProperties()
				if _gddea := d.DecodeElement(_afced.BlipFill, &_fdfd); _gddea != nil {
					return _gddea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_afced.PattFill = NewCT_PatternFillProperties()
				if _ageg := d.DecodeElement(_afced.PattFill, &_fdfd); _ageg != nil {
					return _ageg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_afced.GrpFill = NewCT_GroupFillProperties()
				if _egcge := d.DecodeElement(_afced.GrpFill, &_fdfd); _egcge != nil {
					return _egcge
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046i\u006c\u006c\u0045\u0066\u0066\u0065\u0063\u0074 \u0025\u0076", _fdfd.Name)
				if _adga := d.Skip(); _adga != nil {
					return _adga
				}
			}
		case _g.EndElement:
			break _agba
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Path2DQuadBezierTo and its children
func (_ffbg *CT_Path2DQuadBezierTo) Validate() error {
	return _ffbg.ValidateWithPath("C\u0054\u005f\u0050\u0061th\u0032D\u0051\u0075\u0061\u0064\u0042e\u007a\u0069\u0065\u0072\u0054\u006f")
}

func (_aafff ST_TextStrikeType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_ccfga := _g.Attr{}
	_ccfga.Name = name
	switch _aafff {
	case ST_TextStrikeTypeUnset:
		_ccfga.Value = ""
	case ST_TextStrikeTypeNoStrike:
		_ccfga.Value = "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065"
	case ST_TextStrikeTypeSngStrike:
		_ccfga.Value = "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be"
	case ST_TextStrikeTypeDblStrike:
		_ccfga.Value = "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be"
	}
	return _ccfga, nil
}

const (
	ST_PathShadeTypeUnset  ST_PathShadeType = 0
	ST_PathShadeTypeShape  ST_PathShadeType = 1
	ST_PathShadeTypeCircle ST_PathShadeType = 2
	ST_PathShadeTypeRect   ST_PathShadeType = 3
)

// ST_Coordinate32 is a union type
type ST_Coordinate32 struct {
	ST_Coordinate32Unqualified *int32
	ST_UniversalMeasure        *string
}

func (_eedea *CT_PresetColor) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_fgafa, _bcbae := _eedea.ValAttr.MarshalXMLAttr(_g.Name{Local: "\u0076\u0061\u006c"})
	if _bcbae != nil {
		return _bcbae
	}
	start.Attr = append(start.Attr, _fgafa)
	e.EncodeToken(start)
	if _eedea.EG_ColorTransform != nil {
		for _, _deddbf := range _eedea.EG_ColorTransform {
			_deddbf.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_Scene3D struct {
	Camera   *CT_Camera
	LightRig *CT_LightRig
	Backdrop *CT_Backdrop
	ExtLst   *CT_OfficeArtExtensionList
}

func (_bfbdb *EG_LineFillProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bfbdb.NoFill != nil {
		_fefbd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bfbdb.NoFill, _fefbd)
	}
	if _bfbdb.SolidFill != nil {
		_ecgfe := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bfbdb.SolidFill, _ecgfe)
	}
	if _bfbdb.GradFill != nil {
		_gabfg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bfbdb.GradFill, _gabfg)
	}
	if _bfbdb.PattFill != nil {
		_aaffce := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bfbdb.PattFill, _aaffce)
	}
	return nil
}

func NewAG_Locking() *AG_Locking { _fa := &AG_Locking{}; return _fa }

// Validate validates the CT_TextTabStopList and its children
func (_eeddc *CT_TextTabStopList) Validate() error {
	return _eeddc.ValidateWithPath("\u0043T\u005fT\u0065\u0078\u0074\u0054\u0061b\u0053\u0074o\u0070\u004c\u0069\u0073\u0074")
}

func (_abge *CT_EffectStyleList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_faggd:
	for {
		_ecag, _baba := d.Token()
		if _baba != nil {
			return _baba
		}
		switch _daec := _ecag.(type) {
		case _g.StartElement:
			switch _daec.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "e\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "e\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_ebecc := NewCT_EffectStyleItem()
				if _abgae := d.DecodeElement(_ebecc, &_daec); _abgae != nil {
					return _abgae
				}
				_abge.EffectStyle = append(_abge.EffectStyle, _ebecc)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074S\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _daec.Name)
				if _gaegc := d.Skip(); _gaegc != nil {
					return _gaegc
				}
			}
		case _g.EndElement:
			break _faggd
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Scene3D and its children
func (_gdgfdc *CT_Scene3D) Validate() error {
	return _gdgfdc.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0065\u006e\u0065\u0033\u0044")
}

// ST_TextBulletSize is a union type
type ST_TextBulletSize struct {
	ST_TextBulletSizePercent *string
	ST_TextBulletSizeDecimal *int32
}

// ValidateWithPath validates the EG_TextGeometry and its children, prefixing error messages with path
func (_egcfe *EG_TextGeometry) ValidateWithPath(path string) error {
	if _egcfe.CustGeom != nil {
		if _efdda := _egcfe.CustGeom.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0047\u0065\u006fm"); _efdda != nil {
			return _efdda
		}
	}
	if _egcfe.PrstTxWarp != nil {
		if _bfbb := _egcfe.PrstTxWarp.ValidateWithPath(path + "/\u0050\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"); _bfbb != nil {
			return _bfbb
		}
	}
	return nil
}

const (
	ST_TextAutonumberSchemeUnset                 ST_TextAutonumberScheme = 0
	ST_TextAutonumberSchemeAlphaLcParenBoth      ST_TextAutonumberScheme = 1
	ST_TextAutonumberSchemeAlphaUcParenBoth      ST_TextAutonumberScheme = 2
	ST_TextAutonumberSchemeAlphaLcParenR         ST_TextAutonumberScheme = 3
	ST_TextAutonumberSchemeAlphaUcParenR         ST_TextAutonumberScheme = 4
	ST_TextAutonumberSchemeAlphaLcPeriod         ST_TextAutonumberScheme = 5
	ST_TextAutonumberSchemeAlphaUcPeriod         ST_TextAutonumberScheme = 6
	ST_TextAutonumberSchemeArabicParenBoth       ST_TextAutonumberScheme = 7
	ST_TextAutonumberSchemeArabicParenR          ST_TextAutonumberScheme = 8
	ST_TextAutonumberSchemeArabicPeriod          ST_TextAutonumberScheme = 9
	ST_TextAutonumberSchemeArabicPlain           ST_TextAutonumberScheme = 10
	ST_TextAutonumberSchemeRomanLcParenBoth      ST_TextAutonumberScheme = 11
	ST_TextAutonumberSchemeRomanUcParenBoth      ST_TextAutonumberScheme = 12
	ST_TextAutonumberSchemeRomanLcParenR         ST_TextAutonumberScheme = 13
	ST_TextAutonumberSchemeRomanUcParenR         ST_TextAutonumberScheme = 14
	ST_TextAutonumberSchemeRomanLcPeriod         ST_TextAutonumberScheme = 15
	ST_TextAutonumberSchemeRomanUcPeriod         ST_TextAutonumberScheme = 16
	ST_TextAutonumberSchemeCircleNumDbPlain      ST_TextAutonumberScheme = 17
	ST_TextAutonumberSchemeCircleNumWdBlackPlain ST_TextAutonumberScheme = 18
	ST_TextAutonumberSchemeCircleNumWdWhitePlain ST_TextAutonumberScheme = 19
	ST_TextAutonumberSchemeArabicDbPeriod        ST_TextAutonumberScheme = 20
	ST_TextAutonumberSchemeArabicDbPlain         ST_TextAutonumberScheme = 21
	ST_TextAutonumberSchemeEa1ChsPeriod          ST_TextAutonumberScheme = 22
	ST_TextAutonumberSchemeEa1ChsPlain           ST_TextAutonumberScheme = 23
	ST_TextAutonumberSchemeEa1ChtPeriod          ST_TextAutonumberScheme = 24
	ST_TextAutonumberSchemeEa1ChtPlain           ST_TextAutonumberScheme = 25
	ST_TextAutonumberSchemeEa1JpnChsDbPeriod     ST_TextAutonumberScheme = 26
	ST_TextAutonumberSchemeEa1JpnKorPlain        ST_TextAutonumberScheme = 27
	ST_TextAutonumberSchemeEa1JpnKorPeriod       ST_TextAutonumberScheme = 28
	ST_TextAutonumberSchemeArabic1Minus          ST_TextAutonumberScheme = 29
	ST_TextAutonumberSchemeArabic2Minus          ST_TextAutonumberScheme = 30
	ST_TextAutonumberSchemeHebrew2Minus          ST_TextAutonumberScheme = 31
	ST_TextAutonumberSchemeThaiAlphaPeriod       ST_TextAutonumberScheme = 32
	ST_TextAutonumberSchemeThaiAlphaParenR       ST_TextAutonumberScheme = 33
	ST_TextAutonumberSchemeThaiAlphaParenBoth    ST_TextAutonumberScheme = 34
	ST_TextAutonumberSchemeThaiNumPeriod         ST_TextAutonumberScheme = 35
	ST_TextAutonumberSchemeThaiNumParenR         ST_TextAutonumberScheme = 36
	ST_TextAutonumberSchemeThaiNumParenBoth      ST_TextAutonumberScheme = 37
	ST_TextAutonumberSchemeHindiAlphaPeriod      ST_TextAutonumberScheme = 38
	ST_TextAutonumberSchemeHindiNumPeriod        ST_TextAutonumberScheme = 39
	ST_TextAutonumberSchemeHindiNumParenR        ST_TextAutonumberScheme = 40
	ST_TextAutonumberSchemeHindiAlpha1Period     ST_TextAutonumberScheme = 41
)

func (_gcagf *ST_PathFillMode) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_gcagf = 0
	case "\u006e\u006f\u006e\u0065":
		*_gcagf = 1
	case "\u006e\u006f\u0072\u006d":
		*_gcagf = 2
	case "\u006ci\u0067\u0068\u0074\u0065\u006e":
		*_gcagf = 3
	case "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073":
		*_gcagf = 4
	case "\u0064\u0061\u0072\u006b\u0065\u006e":
		*_gcagf = 5
	case "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073":
		*_gcagf = 6
	}
	return nil
}

func (_cffbb *ST_PenAlignment) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bcfdec, _ggcgd := d.Token()
	if _ggcgd != nil {
		return _ggcgd
	}
	if _cbebd, _bdgbgf := _bcfdec.(_g.EndElement); _bdgbgf && _cbebd.Name == start.Name {
		*_cffbb = 1
		return nil
	}
	if _gabdg, _cbggad := _bcfdec.(_g.CharData); !_cbggad {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bcfdec)
	} else {
		switch string(_gabdg) {
		case "":
			*_cffbb = 0
		case "\u0063\u0074\u0072":
			*_cffbb = 1
		case "\u0069\u006e":
			*_cffbb = 2
		}
	}
	_bcfdec, _ggcgd = d.Token()
	if _ggcgd != nil {
		return _ggcgd
	}
	if _facbc, _eefdc := _bcfdec.(_g.EndElement); _eefdc && _facbc.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bcfdec)
}

// ValidateWithPath validates the CT_FontReference and its children, prefixing error messages with path
func (_gbf *CT_FontReference) ValidateWithPath(path string) error {
	if _gbf.IdxAttr == ST_FontCollectionIndexUnset {
		return _gf.Errorf("\u0025\u0073\u002fI\u0064\u0078\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _affa := _gbf.IdxAttr.ValidateWithPath(path + "\u002f\u0049\u0064\u0078\u0041\u0074\u0074\u0072"); _affa != nil {
		return _affa
	}
	if _gbf.ScrgbClr != nil {
		if _bbcg := _gbf.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _bbcg != nil {
			return _bbcg
		}
	}
	if _gbf.SrgbClr != nil {
		if _eegbbc := _gbf.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _eegbbc != nil {
			return _eegbbc
		}
	}
	if _gbf.HslClr != nil {
		if _gcaef := _gbf.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _gcaef != nil {
			return _gcaef
		}
	}
	if _gbf.SysClr != nil {
		if _gcaeeg := _gbf.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _gcaeeg != nil {
			return _gcaeeg
		}
	}
	if _gbf.SchemeClr != nil {
		if _bbdf := _gbf.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _bbdf != nil {
			return _bbdf
		}
	}
	if _gbf.PrstClr != nil {
		if _dbac := _gbf.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _dbac != nil {
			return _dbac
		}
	}
	return nil
}

// Validate validates the CT_GroupTransform2D and its children
func (_beab *CT_GroupTransform2D) Validate() error {
	return _beab.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0032\u0044")
}

// ValidateWithPath validates the EG_TextUnderlineFill and its children, prefixing error messages with path
func (_fgecg *EG_TextUnderlineFill) ValidateWithPath(path string) error {
	if _fgecg.UFillTx != nil {
		if _gcaecf := _fgecg.UFillTx.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c\u0054\u0078"); _gcaecf != nil {
			return _gcaecf
		}
	}
	if _fgecg.UFill != nil {
		if _cgdbf := _fgecg.UFill.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c"); _cgdbf != nil {
			return _cgdbf
		}
	}
	return nil
}

type EG_ColorTransform struct {
	Tint     *CT_PositiveFixedPercentage
	Shade    *CT_PositiveFixedPercentage
	Comp     *CT_ComplementTransform
	Inv      *CT_InverseTransform
	Gray     *CT_GrayscaleTransform
	Alpha    *CT_PositiveFixedPercentage
	AlphaOff *CT_FixedPercentage
	AlphaMod *CT_PositivePercentage
	Hue      *CT_PositiveFixedAngle
	HueOff   *CT_Angle
	HueMod   *CT_PositivePercentage
	Sat      *CT_Percentage
	SatOff   *CT_Percentage
	SatMod   *CT_Percentage
	Lum      *CT_Percentage
	LumOff   *CT_Percentage
	LumMod   *CT_Percentage
	Red      *CT_Percentage
	RedOff   *CT_Percentage
	RedMod   *CT_Percentage
	Green    *CT_Percentage
	GreenOff *CT_Percentage
	GreenMod *CT_Percentage
	Blue     *CT_Percentage
	BlueOff  *CT_Percentage
	BlueMod  *CT_Percentage
	Gamma    *CT_GammaTransform
	InvGamma *CT_InverseGammaTransform
}

// ValidateWithPath validates the CT_GroupFillProperties and its children, prefixing error messages with path
func (_ffga *CT_GroupFillProperties) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_NonVisualContentPartProperties and its children, prefixing error messages with path
func (_gcgge *CT_NonVisualContentPartProperties) ValidateWithPath(path string) error {
	if _gcgge.CpLocks != nil {
		if _fbfgc := _gcgge.CpLocks.ValidateWithPath(path + "\u002f\u0043\u0070\u004c\u006f\u0063\u006b\u0073"); _fbfgc != nil {
			return _fbfgc
		}
	}
	if _gcgge.ExtLst != nil {
		if _efcd := _gcgge.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _efcd != nil {
			return _efcd
		}
	}
	return nil
}

func (_eefddg *ST_OnOffStyleType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cffce, _ebfda := d.Token()
	if _ebfda != nil {
		return _ebfda
	}
	if _ffccc, _adabff := _cffce.(_g.EndElement); _adabff && _ffccc.Name == start.Name {
		*_eefddg = 1
		return nil
	}
	if _gaeed, _abcfb := _cffce.(_g.CharData); !_abcfb {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cffce)
	} else {
		switch string(_gaeed) {
		case "":
			*_eefddg = 0
		case "\u006f\u006e":
			*_eefddg = 1
		case "\u006f\u0066\u0066":
			*_eefddg = 2
		case "\u0064\u0065\u0066":
			*_eefddg = 3
		}
	}
	_cffce, _ebfda = d.Token()
	if _ebfda != nil {
		return _ebfda
	}
	if _ccgagb, _fadfgc := _cffce.(_g.EndElement); _fadfgc && _ccgagb.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cffce)
}

func (_ffda *CT_BackgroundFillStyleList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	for _, _dcbf := range _ffda.EG_FillProperties {
		_dcbf.MarshalXML(e, _g.StartElement{})
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type EG_TextBulletTypeface struct {
	BuFontTx *CT_TextBulletTypefaceFollowText
	BuFont   *CT_TextFont
}

func (_bcfg *CT_FillProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_decbe:
	for {
		_dcde, _bdcff := d.Token()
		if _bdcff != nil {
			return _bdcff
		}
		switch _gdea := _dcde.(type) {
		case _g.StartElement:
			switch _gdea.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_bcfg.NoFill = NewCT_NoFillProperties()
				if _agdcf := d.DecodeElement(_bcfg.NoFill, &_gdea); _agdcf != nil {
					return _agdcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_bcfg.SolidFill = NewCT_SolidColorFillProperties()
				if _bcaab := d.DecodeElement(_bcfg.SolidFill, &_gdea); _bcaab != nil {
					return _bcaab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_bcfg.GradFill = NewCT_GradientFillProperties()
				if _efedb := d.DecodeElement(_bcfg.GradFill, &_gdea); _efedb != nil {
					return _efedb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_bcfg.BlipFill = NewCT_BlipFillProperties()
				if _efef := d.DecodeElement(_bcfg.BlipFill, &_gdea); _efef != nil {
					return _efef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_bcfg.PattFill = NewCT_PatternFillProperties()
				if _cddc := d.DecodeElement(_bcfg.PattFill, &_gdea); _cddc != nil {
					return _cddc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_bcfg.GrpFill = NewCT_GroupFillProperties()
				if _aeagga := d.DecodeElement(_bcfg.GrpFill, &_gdea); _aeagga != nil {
					return _aeagga
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gdea.Name)
				if _ebgd := d.Skip(); _ebgd != nil {
					return _ebgd
				}
			}
		case _g.EndElement:
			break _decbe
		case _g.CharData:
		}
	}
	return nil
}

func (_debg *CT_TableCellProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _debg.MarLAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0072\u004c"}, Value: _gf.Sprintf("\u0025\u0076", *_debg.MarLAttr)})
	}
	if _debg.MarRAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0072\u0052"}, Value: _gf.Sprintf("\u0025\u0076", *_debg.MarRAttr)})
	}
	if _debg.MarTAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0072\u0054"}, Value: _gf.Sprintf("\u0025\u0076", *_debg.MarTAttr)})
	}
	if _debg.MarBAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0072\u0042"}, Value: _gf.Sprintf("\u0025\u0076", *_debg.MarBAttr)})
	}
	if _debg.VertAttr != ST_TextVerticalTypeUnset {
		_egaa, _fadcc := _debg.VertAttr.MarshalXMLAttr(_g.Name{Local: "\u0076\u0065\u0072\u0074"})
		if _fadcc != nil {
			return _fadcc
		}
		start.Attr = append(start.Attr, _egaa)
	}
	if _debg.AnchorAttr != ST_TextAnchoringTypeUnset {
		_ggeba, _fegfa := _debg.AnchorAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u006e\u0063\u0068\u006f\u0072"})
		if _fegfa != nil {
			return _fegfa
		}
		start.Attr = append(start.Attr, _ggeba)
	}
	if _debg.AnchorCtrAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_debg.AnchorCtrAttr))})
	}
	if _debg.HorzOverflowAttr != ST_TextHorzOverflowTypeUnset {
		_afcdf, _aecce := _debg.HorzOverflowAttr.MarshalXMLAttr(_g.Name{Local: "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"})
		if _aecce != nil {
			return _aecce
		}
		start.Attr = append(start.Attr, _afcdf)
	}
	e.EncodeToken(start)
	if _debg.LnL != nil {
		_fgbgb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006cn\u004c"}}
		e.EncodeElement(_debg.LnL, _fgbgb)
	}
	if _debg.LnR != nil {
		_abbbfe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006cn\u0052"}}
		e.EncodeElement(_debg.LnR, _abbbfe)
	}
	if _debg.LnT != nil {
		_fabba := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006cn\u0054"}}
		e.EncodeElement(_debg.LnT, _fabba)
	}
	if _debg.LnB != nil {
		_aabef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006cn\u0042"}}
		e.EncodeElement(_debg.LnB, _aabef)
	}
	if _debg.LnTlToBr != nil {
		_fdegf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u006e\u0054\u006c\u0054\u006f\u0042\u0072"}}
		e.EncodeElement(_debg.LnTlToBr, _fdegf)
	}
	if _debg.LnBlToTr != nil {
		_gagbg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u006e\u0042\u006c\u0054\u006f\u0054\u0072"}}
		e.EncodeElement(_debg.LnBlToTr, _gagbg)
	}
	if _debg.Cell3D != nil {
		_fbdgf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0065\u006c\u006c\u0033\u0044"}}
		e.EncodeElement(_debg.Cell3D, _fbdgf)
	}
	if _debg.NoFill != nil {
		_eccba := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_debg.NoFill, _eccba)
	}
	if _debg.SolidFill != nil {
		_dafg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_debg.SolidFill, _dafg)
	}
	if _debg.GradFill != nil {
		_ggecgc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_debg.GradFill, _ggecgc)
	}
	if _debg.BlipFill != nil {
		_deagd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_debg.BlipFill, _deagd)
	}
	if _debg.PattFill != nil {
		_fdacab := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_debg.PattFill, _fdacab)
	}
	if _debg.GrpFill != nil {
		_cdbf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_debg.GrpFill, _cdbf)
	}
	if _debg.Headers != nil {
		_ecced := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0068\u0065\u0061\u0064\u0065\u0072s"}}
		e.EncodeElement(_debg.Headers, _ecced)
	}
	if _debg.ExtLst != nil {
		_gddeb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_debg.ExtLst, _gddeb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_eeaaa *CT_TablePartStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _eeaaa.TcTxStyle != nil {
		_cbfec := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0074\u0063\u0054\u0078\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_eeaaa.TcTxStyle, _cbfec)
	}
	if _eeaaa.TcStyle != nil {
		_dfdfc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0074\u0063\u0053\u0074\u0079\u006ce"}}
		e.EncodeElement(_eeaaa.TcStyle, _dfdfc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the ThemeManager and its children, prefixing error messages with path
func (_dcfdcb *ThemeManager) ValidateWithPath(path string) error {
	if _bggfe := _dcfdcb.CT_EmptyElement.ValidateWithPath(path); _bggfe != nil {
		return _bggfe
	}
	return nil
}

// ValidateWithPath validates the CT_GeomRect and its children, prefixing error messages with path
func (_ffed *CT_GeomRect) ValidateWithPath(path string) error {
	if _gbagcf := _ffed.LAttr.ValidateWithPath(path + "\u002f\u004c\u0041\u0074\u0074\u0072"); _gbagcf != nil {
		return _gbagcf
	}
	if _geee := _ffed.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _geee != nil {
		return _geee
	}
	if _bedgc := _ffed.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _bedgc != nil {
		return _bedgc
	}
	if _efefa := _ffed.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _efefa != nil {
		return _efefa
	}
	return nil
}

// ValidateWithPath validates the CT_Path2DLineTo and its children, prefixing error messages with path
func (_dffdb *CT_Path2DLineTo) ValidateWithPath(path string) error {
	if _abgba := _dffdb.Pt.ValidateWithPath(path + "\u002f\u0050\u0074"); _abgba != nil {
		return _abgba
	}
	return nil
}

// ValidateWithPath validates the CT_TextLineBreak and its children, prefixing error messages with path
func (_eaeag *CT_TextLineBreak) ValidateWithPath(path string) error {
	if _eaeag.RPr != nil {
		if _bfedg := _eaeag.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _bfedg != nil {
			return _bfedg
		}
	}
	return nil
}

// Validate validates the CT_Cell3D and its children
func (_gcfg *CT_Cell3D) Validate() error {
	return _gcfg.ValidateWithPath("\u0043T\u005f\u0043\u0065\u006c\u006c\u0033D")
}

func (_fddfd *ST_TextAnchoringType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cdebf, _beagg := d.Token()
	if _beagg != nil {
		return _beagg
	}
	if _eeebg, _cbeebf := _cdebf.(_g.EndElement); _cbeebf && _eeebg.Name == start.Name {
		*_fddfd = 1
		return nil
	}
	if _fafaf, _fgfffa := _cdebf.(_g.CharData); !_fgfffa {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdebf)
	} else {
		switch string(_fafaf) {
		case "":
			*_fddfd = 0
		case "\u0074":
			*_fddfd = 1
		case "\u0063\u0074\u0072":
			*_fddfd = 2
		case "\u0062":
			*_fddfd = 3
		case "\u006a\u0075\u0073\u0074":
			*_fddfd = 4
		case "\u0064\u0069\u0073\u0074":
			*_fddfd = 5
		}
	}
	_cdebf, _beagg = d.Token()
	if _beagg != nil {
		return _beagg
	}
	if _aceff, _bdgfda := _cdebf.(_g.EndElement); _bdgfda && _aceff.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdebf)
}

func (_beffb *CT_TextCharacterProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _feabgd := range start.Attr {
		if _feabgd.Name.Local == "\u006c\u0061\u006e\u0067" {
			_dgada, _bcaac := _feabgd.Value, error(nil)
			if _bcaac != nil {
				return _bcaac
			}
			_beffb.LangAttr = &_dgada
			continue
		}
		if _feabgd.Name.Local == "\u0073\u007a" {
			_baaca, _gdda := _c.ParseInt(_feabgd.Value, 10, 32)
			if _gdda != nil {
				return _gdda
			}
			_bceff := int32(_baaca)
			_beffb.SzAttr = &_bceff
			continue
		}
		if _feabgd.Name.Local == "\u006b\u0075\u006d\u0069\u006d\u006f\u006a\u0069" {
			_dedae, _dbeeab := _c.ParseBool(_feabgd.Value)
			if _dbeeab != nil {
				return _dbeeab
			}
			_beffb.KumimojiAttr = &_dedae
			continue
		}
		if _feabgd.Name.Local == "\u0073\u0074\u0072\u0069\u006b\u0065" {
			_beffb.StrikeAttr.UnmarshalXMLAttr(_feabgd)
			continue
		}
		if _feabgd.Name.Local == "\u0063\u0061\u0070" {
			_beffb.CapAttr.UnmarshalXMLAttr(_feabgd)
			continue
		}
		if _feabgd.Name.Local == "\u0062" {
			_eeaae, _ebfffe := _c.ParseBool(_feabgd.Value)
			if _ebfffe != nil {
				return _ebfffe
			}
			_beffb.BAttr = &_eeaae
			continue
		}
		if _feabgd.Name.Local == "\u0069" {
			_fgfg, _gfafe := _c.ParseBool(_feabgd.Value)
			if _gfafe != nil {
				return _gfafe
			}
			_beffb.IAttr = &_fgfg
			continue
		}
		if _feabgd.Name.Local == "\u0073\u006d\u0074\u0043\u006c\u0065\u0061\u006e" {
			_ffgga, _aaeeb := _c.ParseBool(_feabgd.Value)
			if _aaeeb != nil {
				return _aaeeb
			}
			_beffb.SmtCleanAttr = &_ffgga
			continue
		}
		if _feabgd.Name.Local == "\u006b\u0065\u0072\u006e" {
			_dadbd, _ccgcd := _c.ParseInt(_feabgd.Value, 10, 32)
			if _ccgcd != nil {
				return _ccgcd
			}
			_bddfa := int32(_dadbd)
			_beffb.KernAttr = &_bddfa
			continue
		}
		if _feabgd.Name.Local == "\u0065\u0072\u0072" {
			_eccdc, _aeafe := _c.ParseBool(_feabgd.Value)
			if _aeafe != nil {
				return _aeafe
			}
			_beffb.ErrAttr = &_eccdc
			continue
		}
		if _feabgd.Name.Local == "\u0061l\u0074\u004c\u0061\u006e\u0067" {
			_ggaba, _bdfcg := _feabgd.Value, error(nil)
			if _bdfcg != nil {
				return _bdfcg
			}
			_beffb.AltLangAttr = &_ggaba
			continue
		}
		if _feabgd.Name.Local == "\u006eo\u0050\u0072\u006f\u006f\u0066" {
			_gbcae, _ffaae := _c.ParseBool(_feabgd.Value)
			if _ffaae != nil {
				return _ffaae
			}
			_beffb.NoProofAttr = &_gbcae
			continue
		}
		if _feabgd.Name.Local == "\u0075" {
			_beffb.UAttr.UnmarshalXMLAttr(_feabgd)
			continue
		}
		if _feabgd.Name.Local == "\u0073\u006d\u0074I\u0064" {
			_bgfcf, _fbdab := _c.ParseUint(_feabgd.Value, 10, 32)
			if _fbdab != nil {
				return _fbdab
			}
			_cgdcc := uint32(_bgfcf)
			_beffb.SmtIdAttr = &_cgdcc
			continue
		}
		if _feabgd.Name.Local == "\u0073\u0070\u0063" {
			_fegbgg, _egbdb := ParseUnionST_TextPoint(_feabgd.Value)
			if _egbdb != nil {
				return _egbdb
			}
			_beffb.SpcAttr = &_fegbgg
			continue
		}
		if _feabgd.Name.Local == "\u0062\u0061\u0073\u0065\u006c\u0069\u006e\u0065" {
			_cdgefe, _adccf := ParseUnionST_Percentage(_feabgd.Value)
			if _adccf != nil {
				return _adccf
			}
			_beffb.BaselineAttr = &_cdgefe
			continue
		}
		if _feabgd.Name.Local == "\u0064\u0069\u0072t\u0079" {
			_affdd, _gfggd := _c.ParseBool(_feabgd.Value)
			if _gfggd != nil {
				return _gfggd
			}
			_beffb.DirtyAttr = &_affdd
			continue
		}
		if _feabgd.Name.Local == "\u0062\u006d\u006b" {
			_dfcee, _bfgbb := _feabgd.Value, error(nil)
			if _bfgbb != nil {
				return _bfgbb
			}
			_beffb.BmkAttr = &_dfcee
			continue
		}
		if _feabgd.Name.Local == "\u006e\u006f\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0048" {
			_ebagf, _cfbgg := _c.ParseBool(_feabgd.Value)
			if _cfbgg != nil {
				return _cfbgg
			}
			_beffb.NormalizeHAttr = &_ebagf
			continue
		}
	}
_gfafa:
	for {
		_bedba, _aaeg := d.Token()
		if _aaeg != nil {
			return _aaeg
		}
		switch _cdacf := _bedba.(type) {
		case _g.StartElement:
			switch _cdacf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_beffb.Ln = NewCT_LineProperties()
				if _gafge := d.DecodeElement(_beffb.Ln, &_cdacf); _gafge != nil {
					return _gafge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_beffb.NoFill = NewCT_NoFillProperties()
				if _cdegd := d.DecodeElement(_beffb.NoFill, &_cdacf); _cdegd != nil {
					return _cdegd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_beffb.SolidFill = NewCT_SolidColorFillProperties()
				if _addbg := d.DecodeElement(_beffb.SolidFill, &_cdacf); _addbg != nil {
					return _addbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_beffb.GradFill = NewCT_GradientFillProperties()
				if _ecbab := d.DecodeElement(_beffb.GradFill, &_cdacf); _ecbab != nil {
					return _ecbab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_beffb.BlipFill = NewCT_BlipFillProperties()
				if _ebbec := d.DecodeElement(_beffb.BlipFill, &_cdacf); _ebbec != nil {
					return _ebbec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_beffb.PattFill = NewCT_PatternFillProperties()
				if _fbgda := d.DecodeElement(_beffb.PattFill, &_cdacf); _fbgda != nil {
					return _fbgda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_beffb.GrpFill = NewCT_GroupFillProperties()
				if _bcgca := d.DecodeElement(_beffb.GrpFill, &_cdacf); _bcgca != nil {
					return _bcgca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_beffb.EffectLst = NewCT_EffectList()
				if _fcfaaa := d.DecodeElement(_beffb.EffectLst, &_cdacf); _fcfaaa != nil {
					return _fcfaaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_beffb.EffectDag = NewCT_EffectContainer()
				if _acfbf := d.DecodeElement(_beffb.EffectDag, &_cdacf); _acfbf != nil {
					return _acfbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"}:
				_beffb.Highlight = NewCT_Color()
				if _fbagg := d.DecodeElement(_beffb.Highlight, &_cdacf); _fbagg != nil {
					return _fbagg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}:
				_beffb.ULnTx = NewCT_TextUnderlineLineFollowText()
				if _cfbde := d.DecodeElement(_beffb.ULnTx, &_cdacf); _cfbde != nil {
					return _cfbde
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}:
				_beffb.ULn = NewCT_LineProperties()
				if _babgc := d.DecodeElement(_beffb.ULn, &_cdacf); _babgc != nil {
					return _babgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}:
				_beffb.UFillTx = NewCT_TextUnderlineFillFollowText()
				if _gffda := d.DecodeElement(_beffb.UFillTx, &_cdacf); _gffda != nil {
					return _gffda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}:
				_beffb.UFill = NewCT_TextUnderlineFillGroupWrapper()
				if _edeea := d.DecodeElement(_beffb.UFill, &_cdacf); _edeea != nil {
					return _edeea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}:
				_beffb.Latin = NewCT_TextFont()
				if _gaeea := d.DecodeElement(_beffb.Latin, &_cdacf); _gaeea != nil {
					return _gaeea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}:
				_beffb.Ea = NewCT_TextFont()
				if _ggbbb := d.DecodeElement(_beffb.Ea, &_cdacf); _ggbbb != nil {
					return _ggbbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}:
				_beffb.Cs = NewCT_TextFont()
				if _fbbdd := d.DecodeElement(_beffb.Cs, &_cdacf); _fbbdd != nil {
					return _fbbdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u006d"}:
				_beffb.Sym = NewCT_TextFont()
				if _gccfc := d.DecodeElement(_beffb.Sym, &_cdacf); _gccfc != nil {
					return _gccfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}:
				_beffb.HlinkClick = NewCT_Hyperlink()
				if _fcabd := d.DecodeElement(_beffb.HlinkClick, &_cdacf); _fcabd != nil {
					return _fcabd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u004d\u006f\u0075\u0073e\u004f\u0076\u0065\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u004d\u006f\u0075\u0073e\u004f\u0076\u0065\u0072"}:
				_beffb.HlinkMouseOver = NewCT_Hyperlink()
				if _caeag := d.DecodeElement(_beffb.HlinkMouseOver, &_cdacf); _caeag != nil {
					return _caeag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0074\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0074\u006c"}:
				_beffb.Rtl = NewCT_Boolean()
				if _febaae := d.DecodeElement(_beffb.Rtl, &_cdacf); _febaae != nil {
					return _febaae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_beffb.ExtLst = NewCT_OfficeArtExtensionList()
				if _ggfbd := d.DecodeElement(_beffb.ExtLst, &_cdacf); _ggfbd != nil {
					return _ggfbd
				}
			default:
				_b.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u0065x\u0074\u0043\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _cdacf.Name)
				if _gdgedf := d.Skip(); _gdgedf != nil {
					return _gdgedf
				}
			}
		case _g.EndElement:
			break _gfafa
		case _g.CharData:
		}
	}
	return nil
}

func (_dcggd *ST_TextPoint) Validate() error { return _dcggd.ValidateWithPath("") }

type Theme struct{ CT_OfficeStyleSheet }

func (_egbba *CT_TableBackgroundStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _egbba.Fill != nil {
		_fdfac := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_egbba.Fill, _fdfac)
	}
	if _egbba.FillRef != nil {
		_dabfc := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
		e.EncodeElement(_egbba.FillRef, _dabfc)
	}
	if _egbba.Effect != nil {
		_deeec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_egbba.Effect, _deeec)
	}
	if _egbba.EffectRef != nil {
		_ddagd := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"}}
		e.EncodeElement(_egbba.EffectRef, _ddagd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Scale2D and its children
func (_cbcfb *CT_Scale2D) Validate() error {
	return _cbcfb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0061\u006c\u0065\u0032\u0044")
}

func (_cgcbeff ST_AdjCoordinate) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _cgcbeff.ST_Coordinate != nil {
		e.Encode(_cgcbeff.ST_Coordinate)
	}
	if _cgcbeff.ST_GeomGuideName != nil {
		e.EncodeToken(_g.CharData(*_cgcbeff.ST_GeomGuideName))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

// ValidateWithPath validates the CT_NonVisualDrawingProps and its children, prefixing error messages with path
func (_ccba *CT_NonVisualDrawingProps) ValidateWithPath(path string) error {
	if _ccba.HlinkClick != nil {
		if _cafad := _ccba.HlinkClick.ValidateWithPath(path + "/\u0048\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"); _cafad != nil {
			return _cafad
		}
	}
	if _ccba.HlinkHover != nil {
		if _afabd := _ccba.HlinkHover.ValidateWithPath(path + "/\u0048\u006c\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"); _afabd != nil {
			return _afabd
		}
	}
	if _ccba.ExtLst != nil {
		if _bcbe := _ccba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bcbe != nil {
			return _bcbe
		}
	}
	return nil
}

func (_gaeg *CT_AnimationDgmElement) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gaeg.IdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064"}, Value: _gf.Sprintf("\u0025\u0076", *_gaeg.IdAttr)})
	}
	if _gaeg.BldStepAttr != ST_DgmBuildStepUnset {
		_ecce, _bed := _gaeg.BldStepAttr.MarshalXMLAttr(_g.Name{Local: "\u0062l\u0064\u0053\u0074\u0065\u0070"})
		if _bed != nil {
			return _bed
		}
		start.Attr = append(start.Attr, _ecce)
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_TransformEffect() *CT_TransformEffect { _eafdf := &CT_TransformEffect{}; return _eafdf }

func (_ecgbf *CT_GvmlPicture) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_efaa := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006e\u0076\u0050\u0069\u0063\u0050r"}}
	e.EncodeElement(_ecgbf.NvPicPr, _efaa)
	_fcdda := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
	e.EncodeElement(_ecgbf.BlipFill, _fcdda)
	_acecg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_ecgbf.SpPr, _acecg)
	if _ecgbf.Style != nil {
		_dabg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_ecgbf.Style, _dabg)
	}
	if _ecgbf.ExtLst != nil {
		_agce := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ecgbf.ExtLst, _agce)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_AnimationBuildTypeUnset     ST_AnimationBuildType = 0
	ST_AnimationBuildTypeAllAtOnce ST_AnimationBuildType = 1
)

func (_fgfc *EG_ColorTransform) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dfbbf:
	for {
		_fabcc, _afdg := d.Token()
		if _afdg != nil {
			return _afdg
		}
		switch _cfafc := _fabcc.(type) {
		case _g.StartElement:
			switch _cfafc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_fgfc.Tint = NewCT_PositiveFixedPercentage()
				if _cbagce := d.DecodeElement(_fgfc.Tint, &_cfafc); _cbagce != nil {
					return _cbagce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_fgfc.Shade = NewCT_PositiveFixedPercentage()
				if _ggfdf := d.DecodeElement(_fgfc.Shade, &_cfafc); _ggfdf != nil {
					return _ggfdf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_fgfc.Comp = NewCT_ComplementTransform()
				if _deffa := d.DecodeElement(_fgfc.Comp, &_cfafc); _deffa != nil {
					return _deffa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_fgfc.Inv = NewCT_InverseTransform()
				if _aceaa := d.DecodeElement(_fgfc.Inv, &_cfafc); _aceaa != nil {
					return _aceaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_fgfc.Gray = NewCT_GrayscaleTransform()
				if _cbbbe := d.DecodeElement(_fgfc.Gray, &_cfafc); _cbbbe != nil {
					return _cbbbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_fgfc.Alpha = NewCT_PositiveFixedPercentage()
				if _fgfbec := d.DecodeElement(_fgfc.Alpha, &_cfafc); _fgfbec != nil {
					return _fgfbec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_fgfc.AlphaOff = NewCT_FixedPercentage()
				if _debbg := d.DecodeElement(_fgfc.AlphaOff, &_cfafc); _debbg != nil {
					return _debbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_fgfc.AlphaMod = NewCT_PositivePercentage()
				if _abaab := d.DecodeElement(_fgfc.AlphaMod, &_cfafc); _abaab != nil {
					return _abaab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_fgfc.Hue = NewCT_PositiveFixedAngle()
				if _cbcea := d.DecodeElement(_fgfc.Hue, &_cfafc); _cbcea != nil {
					return _cbcea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_fgfc.HueOff = NewCT_Angle()
				if _dbcde := d.DecodeElement(_fgfc.HueOff, &_cfafc); _dbcde != nil {
					return _dbcde
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_fgfc.HueMod = NewCT_PositivePercentage()
				if _gbebe := d.DecodeElement(_fgfc.HueMod, &_cfafc); _gbebe != nil {
					return _gbebe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_fgfc.Sat = NewCT_Percentage()
				if _dcafd := d.DecodeElement(_fgfc.Sat, &_cfafc); _dcafd != nil {
					return _dcafd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_fgfc.SatOff = NewCT_Percentage()
				if _eaegb := d.DecodeElement(_fgfc.SatOff, &_cfafc); _eaegb != nil {
					return _eaegb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_fgfc.SatMod = NewCT_Percentage()
				if _agbbf := d.DecodeElement(_fgfc.SatMod, &_cfafc); _agbbf != nil {
					return _agbbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_fgfc.Lum = NewCT_Percentage()
				if _eeafb := d.DecodeElement(_fgfc.Lum, &_cfafc); _eeafb != nil {
					return _eeafb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_fgfc.LumOff = NewCT_Percentage()
				if _dabcc := d.DecodeElement(_fgfc.LumOff, &_cfafc); _dabcc != nil {
					return _dabcc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_fgfc.LumMod = NewCT_Percentage()
				if _geede := d.DecodeElement(_fgfc.LumMod, &_cfafc); _geede != nil {
					return _geede
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_fgfc.Red = NewCT_Percentage()
				if _ccebe := d.DecodeElement(_fgfc.Red, &_cfafc); _ccebe != nil {
					return _ccebe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_fgfc.RedOff = NewCT_Percentage()
				if _bgbcb := d.DecodeElement(_fgfc.RedOff, &_cfafc); _bgbcb != nil {
					return _bgbcb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_fgfc.RedMod = NewCT_Percentage()
				if _eedee := d.DecodeElement(_fgfc.RedMod, &_cfafc); _eedee != nil {
					return _eedee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_fgfc.Green = NewCT_Percentage()
				if _cdgggd := d.DecodeElement(_fgfc.Green, &_cfafc); _cdgggd != nil {
					return _cdgggd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_fgfc.GreenOff = NewCT_Percentage()
				if _ccgff := d.DecodeElement(_fgfc.GreenOff, &_cfafc); _ccgff != nil {
					return _ccgff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_fgfc.GreenMod = NewCT_Percentage()
				if _fbgfef := d.DecodeElement(_fgfc.GreenMod, &_cfafc); _fbgfef != nil {
					return _fbgfef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_fgfc.Blue = NewCT_Percentage()
				if _gcafd := d.DecodeElement(_fgfc.Blue, &_cfafc); _gcafd != nil {
					return _gcafd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_fgfc.BlueOff = NewCT_Percentage()
				if _ddgbb := d.DecodeElement(_fgfc.BlueOff, &_cfafc); _ddgbb != nil {
					return _ddgbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_fgfc.BlueMod = NewCT_Percentage()
				if _ggca := d.DecodeElement(_fgfc.BlueMod, &_cfafc); _ggca != nil {
					return _ggca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_fgfc.Gamma = NewCT_GammaTransform()
				if _gegg := d.DecodeElement(_fgfc.Gamma, &_cfafc); _gegg != nil {
					return _gegg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_fgfc.InvGamma = NewCT_InverseGammaTransform()
				if _dbgdc := d.DecodeElement(_fgfc.InvGamma, &_cfafc); _dbgdc != nil {
					return _dbgdc
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0020\u0025\u0076", _cfafc.Name)
				if _dabgf := d.Skip(); _dabgf != nil {
					return _dabgf
				}
			}
		case _g.EndElement:
			break _dfbbf
		case _g.CharData:
		}
	}
	return nil
}

func (_baecc *Tbl) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0074b\u006c"
	return _baecc.CT_Table.MarshalXML(e, start)
}

func (_acabb *CT_StyleMatrix) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_acabb.FillStyleLst = NewCT_FillStyleList()
	_acabb.LnStyleLst = NewCT_LineStyleList()
	_acabb.EffectStyleLst = NewCT_EffectStyleList()
	_acabb.BgFillStyleLst = NewCT_BackgroundFillStyleList()
	for _, _fgceb := range start.Attr {
		if _fgceb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_afdde, _ddaf := _fgceb.Value, error(nil)
			if _ddaf != nil {
				return _ddaf
			}
			_acabb.NameAttr = &_afdde
			continue
		}
	}
_faeg:
	for {
		_adagc, _efdg := d.Token()
		if _efdg != nil {
			return _efdg
		}
		switch _ecbc := _adagc.(type) {
		case _g.StartElement:
			switch _ecbc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}:
				if _gcede := d.DecodeElement(_acabb.FillStyleLst, &_ecbc); _gcede != nil {
					return _gcede
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}:
				if _ggaaa := d.DecodeElement(_acabb.LnStyleLst, &_ecbc); _ggaaa != nil {
					return _ggaaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}:
				if _baaagf := d.DecodeElement(_acabb.EffectStyleLst, &_ecbc); _baaagf != nil {
					return _baaagf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0046\u0069\u006c\u006c\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0046\u0069\u006c\u006c\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}:
				if _gfcc := d.DecodeElement(_acabb.BgFillStyleLst, &_ecbc); _gfcc != nil {
					return _gfcc
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004d\u0061t\u0072i\u0078\u0020\u0025\u0076", _ecbc.Name)
				if _gdecc := d.Skip(); _gdecc != nil {
					return _gdecc
				}
			}
		case _g.EndElement:
			break _faeg
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextBulletColorFollowText and its children
func (_bedae *CT_TextBulletColorFollowText) Validate() error {
	return _bedae.ValidateWithPath("\u0043\u0054\u005f\u0054e\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0043\u006fl\u006fr\u0046\u006f\u006c\u006c\u006f\u0077\u0054e\u0078\u0074")
}

func (_dcff *CT_PresetTextShape) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dcff.PrstAttr = ST_TextShapeType(1)
	for _, _gbbdf := range start.Attr {
		if _gbbdf.Name.Local == "\u0070\u0072\u0073\u0074" {
			_dcff.PrstAttr.UnmarshalXMLAttr(_gbbdf)
			continue
		}
	}
_dccf:
	for {
		_afee, _ebfeg := d.Token()
		if _ebfeg != nil {
			return _ebfeg
		}
		switch _dbfe := _afee.(type) {
		case _g.StartElement:
			switch _dbfe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}:
				_dcff.AvLst = NewCT_GeomGuideList()
				if _daffbg := d.DecodeElement(_dcff.AvLst, &_dbfe); _daffbg != nil {
					return _daffbg
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074T\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _dbfe.Name)
				if _fbafd := d.Skip(); _fbafd != nil {
					return _fbafd
				}
			}
		case _g.EndElement:
			break _dccf
		case _g.CharData:
		}
	}
	return nil
}

func (_ggdff *CT_NonVisualConnectorProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _ggdff.CxnSpLocks != nil {
		_gdbgc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063x\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_ggdff.CxnSpLocks, _gdbgc)
	}
	if _ggdff.StCxn != nil {
		_gfade := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0074\u0043\u0078\u006e"}}
		e.EncodeElement(_ggdff.StCxn, _gfade)
	}
	if _ggdff.EndCxn != nil {
		_afeg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u006e\u0064\u0043\u0078\u006e"}}
		e.EncodeElement(_ggdff.EndCxn, _afeg)
	}
	if _ggdff.ExtLst != nil {
		_becg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ggdff.ExtLst, _becg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CustomColorList and its children
func (_aedg *CT_CustomColorList) Validate() error {
	return _aedg.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dC\u006f\u006co\u0072\u004c\u0069\u0073\u0074")
}

func NewEG_TextBulletTypeface() *EG_TextBulletTypeface {
	_gdfbag := &EG_TextBulletTypeface{}
	return _gdfbag
}

// ValidateWithPath validates the CT_ColorMRU and its children, prefixing error messages with path
func (_cbaa *CT_ColorMRU) ValidateWithPath(path string) error {
	for _ffbf, _bgag := range _cbaa.EG_ColorChoice {
		if _bbab := _bgag.ValidateWithPath(_gf.Sprintf("%\u0073\u002f\u0045\u0047_C\u006fl\u006f\u0072\u0043\u0068\u006fi\u0063\u0065\u005b\u0025\u0064\u005d", path, _ffbf)); _bbab != nil {
			return _bbab
		}
	}
	return nil
}

func (_efdfgb ST_LineEndLength) ValidateWithPath(path string) error {
	switch _efdfgb {
	case 0, 1, 2, 3:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efdfgb))
	}
	return nil
}

func (_bffeeg ST_PresetShadowVal) ValidateWithPath(path string) error {
	switch _bffeeg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bffeeg))
	}
	return nil
}

func (_aeegc *CT_PositiveFixedAngle) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_aeegc.ValAttr = 0
	for _, _cgae := range start.Attr {
		if _cgae.Name.Local == "\u0076\u0061\u006c" {
			_baeea, _fbdag := _c.ParseInt(_cgae.Value, 10, 32)
			if _fbdag != nil {
				return _fbdag
			}
			_aeegc.ValAttr = int32(_baeea)
			continue
		}
	}
	for {
		_cfeef, _fbagd := d.Token()
		if _fbagd != nil {
			return _gf.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0046i\u0078\u0065\u0064\u0041\u006e\u0067\u006ce\u003a\u0020\u0025\u0073", _fbagd)
		}
		if _bgge, _beaag := _cfeef.(_g.EndElement); _beaag && _bgge.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_EffectStyleList and its children, prefixing error messages with path
func (_fggb *CT_EffectStyleList) ValidateWithPath(path string) error {
	for _gddc, _ddfgf := range _fggb.EffectStyle {
		if _dcfg := _ddfgf.ValidateWithPath(_gf.Sprintf("\u0025s\u002fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u005b\u0025\u0064\u005d", path, _gddc)); _dcfg != nil {
			return _dcfg
		}
	}
	return nil
}

// Validate validates the CT_GeomGuide and its children
func (_fcead *CT_GeomGuide) Validate() error {
	return _fcead.ValidateWithPath("\u0043\u0054\u005fG\u0065\u006f\u006d\u0047\u0075\u0069\u0064\u0065")
}

func (_cdgc *CT_GvmlPicture) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cdgc.NvPicPr = NewCT_GvmlPictureNonVisual()
	_cdgc.BlipFill = NewCT_BlipFillProperties()
	_cdgc.SpPr = NewCT_ShapeProperties()
_fabg:
	for {
		_beca, _dagcb := d.Token()
		if _dagcb != nil {
			return _dagcb
		}
		switch _gfbb := _beca.(type) {
		case _g.StartElement:
			switch _gfbb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _fadfg := d.DecodeElement(_cdgc.NvPicPr, &_gfbb); _fadfg != nil {
					return _fadfg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _gdeac := d.DecodeElement(_cdgc.BlipFill, &_gfbb); _gdeac != nil {
					return _gdeac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _cfce := d.DecodeElement(_cdgc.SpPr, &_gfbb); _cfce != nil {
					return _cfce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_cdgc.Style = NewCT_ShapeStyle()
				if _fbcb := d.DecodeElement(_cdgc.Style, &_gfbb); _fbcb != nil {
					return _fbcb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdgc.ExtLst = NewCT_OfficeArtExtensionList()
				if _fgbg := d.DecodeElement(_cdgc.ExtLst, &_gfbb); _fgbg != nil {
					return _fgbg
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069\u0063t\u0075r\u0065\u0020\u0025\u0076", _gfbb.Name)
				if _deaef := d.Skip(); _deaef != nil {
					return _deaef
				}
			}
		case _g.EndElement:
			break _fabg
		case _g.CharData:
		}
	}
	return nil
}

func (_cbddb *CT_Path2DCubicBezierTo) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_gabb:
	for {
		_bdfce, _beabe := d.Token()
		if _beabe != nil {
			return _beabe
		}
		switch _gdfcgg := _bdfce.(type) {
		case _g.StartElement:
			switch _gdfcgg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				_cbgffc := NewCT_AdjPoint2D()
				if _dfgbc := d.DecodeElement(_cbgffc, &_gdfcgg); _dfgbc != nil {
					return _dfgbc
				}
				_cbddb.Pt = append(_cbddb.Pt, _cbgffc)
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0050\u0061\u0074\u00682\u0044\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0069\u0065\u0072\u0054\u006f\u0020\u0025\u0076", _gdfcgg.Name)
				if _cbbga := d.Skip(); _cbbga != nil {
					return _cbbga
				}
			}
		case _g.EndElement:
			break _gabb
		case _g.CharData:
		}
	}
	return nil
}

func (_ccea *CT_GammaTransform) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GvmlGraphicFrameNonVisual and its children, prefixing error messages with path
func (_edff *CT_GvmlGraphicFrameNonVisual) ValidateWithPath(path string) error {
	if _feage := _edff.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _feage != nil {
		return _feage
	}
	if _begge := _edff.CNvGraphicFramePr.ValidateWithPath(path + "\u002fC\u004ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"); _begge != nil {
		return _begge
	}
	return nil
}

type CT_Blip struct {
	CstateAttr ST_BlipCompression
	Choice     []*CT_BlipChoice
	ExtLst     *CT_OfficeArtExtensionList
	EmbedAttr  *string
	LinkAttr   *string
}

// ValidateWithPath validates the CT_DashStopList and its children, prefixing error messages with path
func (_egfa *CT_DashStopList) ValidateWithPath(path string) error {
	for _bbg, _gfddf := range _egfa.Ds {
		if _aebb := _gfddf.ValidateWithPath(_gf.Sprintf("\u0025s\u002f\u0044\u0073\u005b\u0025\u0064]", path, _bbg)); _aebb != nil {
			return _aebb
		}
	}
	return nil
}

func (_gdada ST_AnimationDgmOnlyBuildType) Validate() error { return _gdada.ValidateWithPath("") }

func NewCT_TextBulletTypefaceFollowText() *CT_TextBulletTypefaceFollowText {
	_dbgdg := &CT_TextBulletTypefaceFollowText{}
	return _dbgdg
}

// ValidateWithPath validates the CT_Backdrop and its children, prefixing error messages with path
func (_cdfd *CT_Backdrop) ValidateWithPath(path string) error {
	if _fcae := _cdfd.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _fcae != nil {
		return _fcae
	}
	if _ggfd := _cdfd.Norm.ValidateWithPath(path + "\u002f\u004e\u006fr\u006d"); _ggfd != nil {
		return _ggfd
	}
	if _eeeb := _cdfd.Up.ValidateWithPath(path + "\u002f\u0055\u0070"); _eeeb != nil {
		return _eeeb
	}
	if _cdfd.ExtLst != nil {
		if _deca := _cdfd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _deca != nil {
			return _deca
		}
	}
	return nil
}

func (_gafab ST_BevelPresetType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_gafab.String(), start)
}

func (_cdcba *CT_HslColor) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cdcba.HueAttr = 0
	for _, _beee := range start.Attr {
		if _beee.Name.Local == "\u0068\u0075\u0065" {
			_caagd, _edaa := _c.ParseInt(_beee.Value, 10, 32)
			if _edaa != nil {
				return _edaa
			}
			_cdcba.HueAttr = int32(_caagd)
			continue
		}
		if _beee.Name.Local == "\u0073\u0061\u0074" {
			_ceef, _ebea := ParseUnionST_Percentage(_beee.Value)
			if _ebea != nil {
				return _ebea
			}
			_cdcba.SatAttr = _ceef
			continue
		}
		if _beee.Name.Local == "\u006c\u0075\u006d" {
			_dacgg, _cgaff := ParseUnionST_Percentage(_beee.Value)
			if _cgaff != nil {
				return _cgaff
			}
			_cdcba.LumAttr = _dacgg
			continue
		}
	}
_caafg:
	for {
		_dafde, _cfag := d.Token()
		if _cfag != nil {
			return _cfag
		}
		switch _ggbdf := _dafde.(type) {
		case _g.StartElement:
			switch _ggbdf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_cbcda := NewEG_ColorTransform()
				_cbcda.Tint = NewCT_PositiveFixedPercentage()
				if _adaed := d.DecodeElement(_cbcda.Tint, &_ggbdf); _adaed != nil {
					return _adaed
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _cbcda)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_ccdd := NewEG_ColorTransform()
				_ccdd.Shade = NewCT_PositiveFixedPercentage()
				if _begdc := d.DecodeElement(_ccdd.Shade, &_ggbdf); _begdc != nil {
					return _begdc
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _ccdd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_febfb := NewEG_ColorTransform()
				_febfb.Comp = NewCT_ComplementTransform()
				if _fbec := d.DecodeElement(_febfb.Comp, &_ggbdf); _fbec != nil {
					return _fbec
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _febfb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_gadef := NewEG_ColorTransform()
				_gadef.Inv = NewCT_InverseTransform()
				if _faafa := d.DecodeElement(_gadef.Inv, &_ggbdf); _faafa != nil {
					return _faafa
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _gadef)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_aaeff := NewEG_ColorTransform()
				_aaeff.Gray = NewCT_GrayscaleTransform()
				if _ffgb := d.DecodeElement(_aaeff.Gray, &_ggbdf); _ffgb != nil {
					return _ffgb
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _aaeff)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_eefdf := NewEG_ColorTransform()
				_eefdf.Alpha = NewCT_PositiveFixedPercentage()
				if _babccf := d.DecodeElement(_eefdf.Alpha, &_ggbdf); _babccf != nil {
					return _babccf
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _eefdf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_bbfd := NewEG_ColorTransform()
				_bbfd.AlphaOff = NewCT_FixedPercentage()
				if _fgfa := d.DecodeElement(_bbfd.AlphaOff, &_ggbdf); _fgfa != nil {
					return _fgfa
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _bbfd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_fcbf := NewEG_ColorTransform()
				_fcbf.AlphaMod = NewCT_PositivePercentage()
				if _fgfd := d.DecodeElement(_fcbf.AlphaMod, &_ggbdf); _fgfd != nil {
					return _fgfd
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _fcbf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_dgbd := NewEG_ColorTransform()
				_dgbd.Hue = NewCT_PositiveFixedAngle()
				if _cgbgf := d.DecodeElement(_dgbd.Hue, &_ggbdf); _cgbgf != nil {
					return _cgbgf
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _dgbd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_cdccb := NewEG_ColorTransform()
				_cdccb.HueOff = NewCT_Angle()
				if _fdag := d.DecodeElement(_cdccb.HueOff, &_ggbdf); _fdag != nil {
					return _fdag
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _cdccb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_gcbg := NewEG_ColorTransform()
				_gcbg.HueMod = NewCT_PositivePercentage()
				if _dbgg := d.DecodeElement(_gcbg.HueMod, &_ggbdf); _dbgg != nil {
					return _dbgg
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _gcbg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_fcef := NewEG_ColorTransform()
				_fcef.Sat = NewCT_Percentage()
				if _bcbce := d.DecodeElement(_fcef.Sat, &_ggbdf); _bcbce != nil {
					return _bcbce
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _fcef)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_cccgd := NewEG_ColorTransform()
				_cccgd.SatOff = NewCT_Percentage()
				if _ebffff := d.DecodeElement(_cccgd.SatOff, &_ggbdf); _ebffff != nil {
					return _ebffff
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _cccgd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_baga := NewEG_ColorTransform()
				_baga.SatMod = NewCT_Percentage()
				if _fbef := d.DecodeElement(_baga.SatMod, &_ggbdf); _fbef != nil {
					return _fbef
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _baga)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_aggbe := NewEG_ColorTransform()
				_aggbe.Lum = NewCT_Percentage()
				if _cgbffg := d.DecodeElement(_aggbe.Lum, &_ggbdf); _cgbffg != nil {
					return _cgbffg
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _aggbe)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_gbgc := NewEG_ColorTransform()
				_gbgc.LumOff = NewCT_Percentage()
				if _dfcc := d.DecodeElement(_gbgc.LumOff, &_ggbdf); _dfcc != nil {
					return _dfcc
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _gbgc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_faad := NewEG_ColorTransform()
				_faad.LumMod = NewCT_Percentage()
				if _acda := d.DecodeElement(_faad.LumMod, &_ggbdf); _acda != nil {
					return _acda
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _faad)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_gfbgf := NewEG_ColorTransform()
				_gfbgf.Red = NewCT_Percentage()
				if _begde := d.DecodeElement(_gfbgf.Red, &_ggbdf); _begde != nil {
					return _begde
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _gfbgf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_fcad := NewEG_ColorTransform()
				_fcad.RedOff = NewCT_Percentage()
				if _cgcgd := d.DecodeElement(_fcad.RedOff, &_ggbdf); _cgcgd != nil {
					return _cgcgd
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _fcad)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_aadba := NewEG_ColorTransform()
				_aadba.RedMod = NewCT_Percentage()
				if _egcad := d.DecodeElement(_aadba.RedMod, &_ggbdf); _egcad != nil {
					return _egcad
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _aadba)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_gbfb := NewEG_ColorTransform()
				_gbfb.Green = NewCT_Percentage()
				if _cccb := d.DecodeElement(_gbfb.Green, &_ggbdf); _cccb != nil {
					return _cccb
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _gbfb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_aedeg := NewEG_ColorTransform()
				_aedeg.GreenOff = NewCT_Percentage()
				if _cefbf := d.DecodeElement(_aedeg.GreenOff, &_ggbdf); _cefbf != nil {
					return _cefbf
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _aedeg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_babca := NewEG_ColorTransform()
				_babca.GreenMod = NewCT_Percentage()
				if _effe := d.DecodeElement(_babca.GreenMod, &_ggbdf); _effe != nil {
					return _effe
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _babca)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_eadbf := NewEG_ColorTransform()
				_eadbf.Blue = NewCT_Percentage()
				if _gbgcc := d.DecodeElement(_eadbf.Blue, &_ggbdf); _gbgcc != nil {
					return _gbgcc
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _eadbf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_ceefa := NewEG_ColorTransform()
				_ceefa.BlueOff = NewCT_Percentage()
				if _cabaa := d.DecodeElement(_ceefa.BlueOff, &_ggbdf); _cabaa != nil {
					return _cabaa
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _ceefa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_cgafa := NewEG_ColorTransform()
				_cgafa.BlueMod = NewCT_Percentage()
				if _cfcbf := d.DecodeElement(_cgafa.BlueMod, &_ggbdf); _cfcbf != nil {
					return _cfcbf
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _cgafa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_eefca := NewEG_ColorTransform()
				_eefca.Gamma = NewCT_GammaTransform()
				if _ccfcg := d.DecodeElement(_eefca.Gamma, &_ggbdf); _ccfcg != nil {
					return _ccfcg
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _eefca)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_eacd := NewEG_ColorTransform()
				_eacd.InvGamma = NewCT_InverseGammaTransform()
				if _eafca := d.DecodeElement(_eacd.InvGamma, &_ggbdf); _eafca != nil {
					return _eafca
				}
				_cdcba.EG_ColorTransform = append(_cdcba.EG_ColorTransform, _eacd)
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0073\u006c\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _ggbdf.Name)
				if _cagf := d.Skip(); _cagf != nil {
					return _cagf
				}
			}
		case _g.EndElement:
			break _caafg
		case _g.CharData:
		}
	}
	return nil
}

func (_abgff *ST_TextHorzOverflowType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_abgff = 0
	case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
		*_abgff = 1
	case "\u0063\u006c\u0069\u0070":
		*_abgff = 2
	}
	return nil
}

type CT_ColorMapping struct {
	Bg1Attr      ST_ColorSchemeIndex
	Tx1Attr      ST_ColorSchemeIndex
	Bg2Attr      ST_ColorSchemeIndex
	Tx2Attr      ST_ColorSchemeIndex
	Accent1Attr  ST_ColorSchemeIndex
	Accent2Attr  ST_ColorSchemeIndex
	Accent3Attr  ST_ColorSchemeIndex
	Accent4Attr  ST_ColorSchemeIndex
	Accent5Attr  ST_ColorSchemeIndex
	Accent6Attr  ST_ColorSchemeIndex
	HlinkAttr    ST_ColorSchemeIndex
	FolHlinkAttr ST_ColorSchemeIndex
	ExtLst       *CT_OfficeArtExtensionList
}

type ST_LineEndLength byte

type CT_ColorReplaceEffect struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_gfadb *ST_TextVertOverflowType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_acgbef, _bbfag := d.Token()
	if _bbfag != nil {
		return _bbfag
	}
	if _efgaf, _dgbeeb := _acgbef.(_g.EndElement); _dgbeeb && _efgaf.Name == start.Name {
		*_gfadb = 1
		return nil
	}
	if _dfcb, _aabfe := _acgbef.(_g.CharData); !_aabfe {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _acgbef)
	} else {
		switch string(_dfcb) {
		case "":
			*_gfadb = 0
		case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
			*_gfadb = 1
		case "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073":
			*_gfadb = 2
		case "\u0063\u006c\u0069\u0070":
			*_gfadb = 3
		}
	}
	_acgbef, _bbfag = d.Token()
	if _bbfag != nil {
		return _bbfag
	}
	if _aeccee, _ccceg := _acgbef.(_g.EndElement); _ccceg && _aeccee.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _acgbef)
}

func (_begac *CT_LuminanceEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _begac.BrightAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u0072\u0069\u0067\u0068\u0074"}, Value: _gf.Sprintf("\u0025\u0076", *_begac.BrightAttr)})
	}
	if _begac.ContrastAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u006f\u006e\u0074\u0072\u0061\u0073\u0074"}, Value: _gf.Sprintf("\u0025\u0076", *_begac.ContrastAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TextFontAlignTypeUnset ST_TextFontAlignType = 0
	ST_TextFontAlignTypeAuto  ST_TextFontAlignType = 1
	ST_TextFontAlignTypeT     ST_TextFontAlignType = 2
	ST_TextFontAlignTypeCtr   ST_TextFontAlignType = 3
	ST_TextFontAlignTypeBase  ST_TextFontAlignType = 4
	ST_TextFontAlignTypeB     ST_TextFontAlignType = 5
)

// ValidateWithPath validates the CT_PresetTextShape and its children, prefixing error messages with path
func (_begdcc *CT_PresetTextShape) ValidateWithPath(path string) error {
	if _begdcc.PrstAttr == ST_TextShapeTypeUnset {
		return _gf.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _dagcbf := _begdcc.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _dagcbf != nil {
		return _dagcbf
	}
	if _begdcc.AvLst != nil {
		if _cbbbf := _begdcc.AvLst.ValidateWithPath(path + "\u002f\u0041\u0076\u004c\u0073\u0074"); _cbbbf != nil {
			return _cbbbf
		}
	}
	return nil
}

func (_ggba ST_SystemColorVal) String() string {
	switch _ggba {
	case 0:
		return ""
	case 1:
		return "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r"
	case 2:
		return "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064"
	case 3:
		return "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case 4:
		return "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case 5:
		return "\u006d\u0065\u006e\u0075"
	case 6:
		return "\u0077\u0069\u006e\u0064\u006f\u0077"
	case 7:
		return "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065"
	case 8:
		return "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074"
	case 9:
		return "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074"
	case 10:
		return "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case 11:
		return "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072"
	case 12:
		return "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072"
	case 13:
		return "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065"
	case 14:
		return "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"
	case 15:
		return "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074"
	case 16:
		return "\u0062t\u006e\u0046\u0061\u0063\u0065"
	case 17:
		return "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw"
	case 18:
		return "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074"
	case 19:
		return "\u0062t\u006e\u0054\u0065\u0078\u0074"
	case 20:
		return "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case 21:
		return "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case 22:
		return "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077"
	case 23:
		return "\u0033d\u004c\u0069\u0067\u0068\u0074"
	case 24:
		return "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074"
	case 25:
		return "\u0069\u006e\u0066\u006f\u0042\u006b"
	case 26:
		return "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074"
	case 27:
		return "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e"
	case 28:
		return "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case 29:
		return "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case 30:
		return "\u006de\u006e\u0075\u0042\u0061\u0072"
	}
	return ""
}

// Validate validates the CT_PolarAdjustHandle and its children
func (_cafaa *CT_PolarAdjustHandle) Validate() error {
	return _cafaa.ValidateWithPath("C\u0054_\u0050\u006f\u006c\u0061\u0072\u0041\u0064\u006au\u0073\u0074\u0048\u0061nd\u006c\u0065")
}

// ValidateWithPath validates the CT_StyleMatrix and its children, prefixing error messages with path
func (_begaae *CT_StyleMatrix) ValidateWithPath(path string) error {
	if _gdebed := _begaae.FillStyleLst.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _gdebed != nil {
		return _gdebed
	}
	if _agaca := _begaae.LnStyleLst.ValidateWithPath(path + "/\u004c\u006e\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _agaca != nil {
		return _agaca
	}
	if _aecb := _begaae.EffectStyleLst.ValidateWithPath(path + "\u002fE\u0066f\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _aecb != nil {
		return _aecb
	}
	if _ebeaf := _begaae.BgFillStyleLst.ValidateWithPath(path + "\u002fB\u0067F\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _ebeaf != nil {
		return _ebeaf
	}
	return nil
}

type ST_RectAlignment byte

func (_dcced ST_TextTabAlignType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_ffgeea := _g.Attr{}
	_ffgeea.Name = name
	switch _dcced {
	case ST_TextTabAlignTypeUnset:
		_ffgeea.Value = ""
	case ST_TextTabAlignTypeL:
		_ffgeea.Value = "\u006c"
	case ST_TextTabAlignTypeCtr:
		_ffgeea.Value = "\u0063\u0074\u0072"
	case ST_TextTabAlignTypeR:
		_ffgeea.Value = "\u0072"
	case ST_TextTabAlignTypeDec:
		_ffgeea.Value = "\u0064\u0065\u0063"
	}
	return _ffgeea, nil
}

func (_eegbb *CT_ConnectionSite) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_eegbb.Pos = NewCT_AdjPoint2D()
	for _, _efga := range start.Attr {
		if _efga.Name.Local == "\u0061\u006e\u0067" {
			_dfgfc, _cbcf := ParseUnionST_AdjAngle(_efga.Value)
			if _cbcf != nil {
				return _cbcf
			}
			_eegbb.AngAttr = _dfgfc
			continue
		}
	}
_ccbg:
	for {
		_fdaee, _cfbab := d.Token()
		if _cfbab != nil {
			return _cfbab
		}
		switch _eddd := _fdaee.(type) {
		case _g.StartElement:
			switch _eddd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _fbae := d.DecodeElement(_eegbb.Pos, &_eddd); _fbae != nil {
					return _fbae
				}
			default:
				_b.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0053\u0069\u0074\u0065\u0020\u0025\u0076", _eddd.Name)
				if _dggcc := d.Skip(); _dggcc != nil {
					return _dggcc
				}
			}
		case _g.EndElement:
			break _ccbg
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ConnectionSite and its children
func (_ebdec *CT_ConnectionSite) Validate() error {
	return _ebdec.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006fn\u0053\u0069\u0074\u0065")
}

func (_fgfbe *CT_TintEffect) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fgfbe.HueAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u0075\u0065"}, Value: _gf.Sprintf("\u0025\u0076", *_fgfbe.HueAttr)})
	}
	if _fgfbe.AmtAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u006d\u0074"}, Value: _gf.Sprintf("\u0025\u0076", *_fgfbe.AmtAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TextNormalAutofit and its children
func (_dacac *CT_TextNormalAutofit) Validate() error {
	return _dacac.ValidateWithPath("C\u0054_\u0054\u0065\u0078\u0074\u004e\u006f\u0072\u006da\u006c\u0041\u0075\u0074of\u0069\u0074")
}

type CT_GvmlGraphicFrameNonVisual struct {
	CNvPr             *CT_NonVisualDrawingProps
	CNvGraphicFramePr *CT_NonVisualGraphicFrameProperties
}

func NewCT_GeomGuide() *CT_GeomGuide { _cgbf := &CT_GeomGuide{}; return _cgbf }

func (_feafc *CT_GroupTransform2D) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _feafc.RotAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u006f\u0074"}, Value: _gf.Sprintf("\u0025\u0076", *_feafc.RotAttr)})
	}
	if _feafc.FlipHAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u006c\u0069p\u0048"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_feafc.FlipHAttr))})
	}
	if _feafc.FlipVAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u006c\u0069p\u0056"}, Value: _gf.Sprintf("\u0025\u0064", _befce(*_feafc.FlipVAttr))})
	}
	e.EncodeToken(start)
	if _feafc.Off != nil {
		_cddb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006ff\u0066"}}
		e.EncodeElement(_feafc.Off, _cddb)
	}
	if _feafc.Ext != nil {
		_edbg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		e.EncodeElement(_feafc.Ext, _edbg)
	}
	if _feafc.ChOff != nil {
		_cgdb := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u0068\u004f\u0066\u0066"}}
		e.EncodeElement(_feafc.ChOff, _cgdb)
	}
	if _feafc.ChExt != nil {
		_ababf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0063\u0068\u0045\u0078\u0074"}}
		e.EncodeElement(_feafc.ChExt, _ababf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_ColorMRU() *CT_ColorMRU { _fcba := &CT_ColorMRU{}; return _fcba }

func (_cabad ST_AnimationBuildType) String() string {
	switch _cabad {
	case 0:
		return ""
	case 1:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return ""
}

type CT_QuickTimeFile struct {
	LinkAttr string
	ExtLst   *CT_OfficeArtExtensionList
}

func (_abfea *EG_ShadeProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _abfea.Lin != nil {
		_abded := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006ci\u006e"}}
		e.EncodeElement(_abfea.Lin, _abded)
	}
	if _abfea.Path != nil {
		_cadea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0068"}}
		e.EncodeElement(_abfea.Path, _cadea)
	}
	return nil
}

type CT_Scale2D struct {
	Sx *CT_Ratio
	Sy *CT_Ratio
}

func (_fcebe *ST_TextAlignType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_aggcc, _efecf := d.Token()
	if _efecf != nil {
		return _efecf
	}
	if _fgaeeb, _fedad := _aggcc.(_g.EndElement); _fedad && _fgaeeb.Name == start.Name {
		*_fcebe = 1
		return nil
	}
	if _dcabe, _adgae := _aggcc.(_g.CharData); !_adgae {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aggcc)
	} else {
		switch string(_dcabe) {
		case "":
			*_fcebe = 0
		case "\u006c":
			*_fcebe = 1
		case "\u0063\u0074\u0072":
			*_fcebe = 2
		case "\u0072":
			*_fcebe = 3
		case "\u006a\u0075\u0073\u0074":
			*_fcebe = 4
		case "\u006au\u0073\u0074\u004c\u006f\u0077":
			*_fcebe = 5
		case "\u0064\u0069\u0073\u0074":
			*_fcebe = 6
		case "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074":
			*_fcebe = 7
		}
	}
	_aggcc, _efecf = d.Token()
	if _efecf != nil {
		return _efecf
	}
	if _afbbd, _egdb := _aggcc.(_g.EndElement); _egdb && _afbbd.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aggcc)
}

type EG_TextUnderlineFill struct {
	UFillTx *CT_TextUnderlineFillFollowText
	UFill   *CT_TextUnderlineFillGroupWrapper
}

func (_cgacb *EG_ThemeableEffectStyle) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cgacb.Effect != nil {
		_abbdd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_cgacb.Effect, _abbdd)
	}
	if _cgacb.EffectRef != nil {
		_bedbgg := _g.StartElement{Name: _g.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"}}
		e.EncodeElement(_cgacb.EffectRef, _bedbgg)
	}
	return nil
}

func (_ffbdgc ST_TextVerticalType) String() string {
	switch _ffbdgc {
	case 0:
		return ""
	case 1:
		return "\u0068\u006f\u0072\u007a"
	case 2:
		return "\u0076\u0065\u0072\u0074"
	case 3:
		return "\u0076e\u0072\u0074\u0032\u0037\u0030"
	case 4:
		return "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074"
	case 5:
		return "\u0065\u0061\u0056\u0065\u0072\u0074"
	case 6:
		return "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074"
	case 7:
		return "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c"
	}
	return ""
}

func NewCT_LightRig() *CT_LightRig {
	_fceea := &CT_LightRig{}
	_fceea.RigAttr = ST_LightRigType(1)
	_fceea.DirAttr = ST_LightRigDirection(1)
	return _fceea
}

// Validate validates the CT_HSLEffect and its children
func (_fddcd *CT_HSLEffect) Validate() error {
	return _fddcd.ValidateWithPath("\u0043\u0054\u005fH\u0053\u004c\u0045\u0066\u0066\u0065\u0063\u0074")
}

func (_fadd *CT_NoFillProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_dafefb, _gbcgf := d.Token()
		if _gbcgf != nil {
			return _gf.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u004e\u006f\u0046\u0069\u006cl\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _gbcgf)
		}
		if _bebcb, _dbbe := _dafefb.(_g.EndElement); _dbbe && _bebcb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_NonVisualDrawingShapeProps struct {
	TxBoxAttr *bool
	SpLocks   *CT_ShapeLocking
	ExtLst    *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_AlphaFloorEffect and its children, prefixing error messages with path
func (_adb *CT_AlphaFloorEffect) ValidateWithPath(path string) error { return nil }

func (_afbdbg *ST_PositivePercentage) Validate() error { return _afbdbg.ValidateWithPath("") }

func (_geacdd *ST_FontCollectionIndex) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cfadb, _ddgad := d.Token()
	if _ddgad != nil {
		return _ddgad
	}
	if _ddfbf, _gfbfg := _cfadb.(_g.EndElement); _gfbfg && _ddfbf.Name == start.Name {
		*_geacdd = 1
		return nil
	}
	if _ggfeb, _fcefg := _cfadb.(_g.CharData); !_fcefg {
		return _gf.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cfadb)
	} else {
		switch string(_ggfeb) {
		case "":
			*_geacdd = 0
		case "\u006d\u0061\u006ao\u0072":
			*_geacdd = 1
		case "\u006d\u0069\u006eo\u0072":
			*_geacdd = 2
		case "\u006e\u006f\u006e\u0065":
			*_geacdd = 3
		}
	}
	_cfadb, _ddgad = d.Token()
	if _ddgad != nil {
		return _ddgad
	}
	if _dgaee, _abfdde := _cfadb.(_g.EndElement); _abfdde && _dgaee.Name == start.Name {
		return nil
	}
	return _gf.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cfadb)
}

type CT_ComplementTransform struct{}

func (_ecfeg ST_ColorSchemeIndex) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_ecfeg.String(), start)
}

// Validate validates the CT_NonVisualContentPartProperties and its children
func (_acbc *CT_NonVisualContentPartProperties) Validate() error {
	return _acbc.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u006eV\u0069\u0073\u0075\u0061\u006c\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050a\u0072\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_AnimationElementChoice and its children, prefixing error messages with path
func (_abe *CT_AnimationElementChoice) ValidateWithPath(path string) error {
	if _abe.Dgm != nil {
		if _efe := _abe.Dgm.ValidateWithPath(path + "\u002f\u0044\u0067\u006d"); _efe != nil {
			return _efe
		}
	}
	if _abe.Chart != nil {
		if _fgb := _abe.Chart.ValidateWithPath(path + "\u002f\u0043\u0068\u0061\u0072\u0074"); _fgb != nil {
			return _fgb
		}
	}
	return nil
}

type CT_DuotoneEffect struct{ EG_ColorChoice []*EG_ColorChoice }

func NewCT_GvmlTextShape() *CT_GvmlTextShape {
	_bddff := &CT_GvmlTextShape{}
	_bddff.TxBody = NewCT_TextBody()
	return _bddff
}

func (_bfcaff *CT_GvmlTextShapeChoice) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fccca:
	for {
		_cedaba, _acfa := d.Token()
		if _acfa != nil {
			return _acfa
		}
		switch _bfffb := _cedaba.(type) {
		case _g.StartElement:
			switch _bfffb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}:
				_bfcaff.UseSpRect = NewCT_GvmlUseShapeRectangle()
				if _cdcg := d.DecodeElement(_bfcaff.UseSpRect, &_bfffb); _cdcg != nil {
					return _cdcg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_bfcaff.Xfrm = NewCT_Transform2D()
				if _ccga := d.DecodeElement(_bfcaff.Xfrm, &_bfffb); _ccga != nil {
					return _ccga
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0076\u006d\u006cT\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _bfffb.Name)
				if _eeab := d.Skip(); _eeab != nil {
					return _eeab
				}
			}
		case _g.EndElement:
			break _fccca
		case _g.CharData:
		}
	}
	return nil
}

func (_dgeaf ST_SystemColorVal) Validate() error { return _dgeaf.ValidateWithPath("") }

type CT_RegularTextRun struct {
	RPr *CT_TextCharacterProperties
	T   string
}

func (_efdfb ST_PitchFamily) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_fdgcf := _g.Attr{}
	_fdgcf.Name = name
	switch _efdfb {
	case ST_PitchFamilyUnset:
		_fdgcf.Value = ""
	case ST_PitchFamily00:
		_fdgcf.Value = "\u0030\u0030"
	case ST_PitchFamily01:
		_fdgcf.Value = "\u0030\u0031"
	case ST_PitchFamily02:
		_fdgcf.Value = "\u0030\u0032"
	case ST_PitchFamily16:
		_fdgcf.Value = "\u0031\u0036"
	case ST_PitchFamily17:
		_fdgcf.Value = "\u0031\u0037"
	case ST_PitchFamily18:
		_fdgcf.Value = "\u0031\u0038"
	case ST_PitchFamily32:
		_fdgcf.Value = "\u0033\u0032"
	case ST_PitchFamily33:
		_fdgcf.Value = "\u0033\u0033"
	case ST_PitchFamily34:
		_fdgcf.Value = "\u0033\u0034"
	case ST_PitchFamily48:
		_fdgcf.Value = "\u0034\u0038"
	case ST_PitchFamily49:
		_fdgcf.Value = "\u0034\u0039"
	case ST_PitchFamily50:
		_fdgcf.Value = "\u0035\u0030"
	case ST_PitchFamily64:
		_fdgcf.Value = "\u0036\u0034"
	case ST_PitchFamily65:
		_fdgcf.Value = "\u0036\u0035"
	case ST_PitchFamily66:
		_fdgcf.Value = "\u0036\u0036"
	case ST_PitchFamily80:
		_fdgcf.Value = "\u0038\u0030"
	case ST_PitchFamily81:
		_fdgcf.Value = "\u0038\u0031"
	case ST_PitchFamily82:
		_fdgcf.Value = "\u0038\u0032"
	}
	return _fdgcf, nil
}

func (_daedf ST_LineCap) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_aaeag := _g.Attr{}
	_aaeag.Name = name
	switch _daedf {
	case ST_LineCapUnset:
		_aaeag.Value = ""
	case ST_LineCapRnd:
		_aaeag.Value = "\u0072\u006e\u0064"
	case ST_LineCapSq:
		_aaeag.Value = "\u0073\u0071"
	case ST_LineCapFlat:
		_aaeag.Value = "\u0066\u006c\u0061\u0074"
	}
	return _aaeag, nil
}

type CT_SystemColor struct {
	ValAttr           ST_SystemColorVal
	LastClrAttr       *string
	EG_ColorTransform []*EG_ColorTransform
}

func (_ggeda ST_DgmBuildStep) ValidateWithPath(path string) error {
	switch _ggeda {
	case 0, 1, 2:
	default:
		return _gf.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ggeda))
	}
	return nil
}

// ValidateWithPath validates the CT_InverseGammaTransform and its children, prefixing error messages with path
func (_bbfaf *CT_InverseGammaTransform) ValidateWithPath(path string) error { return nil }

func (_fdadf *CT_TablePropertiesChoice) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fdadf.TableStyle != nil {
		_aaeef := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074a\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_fdadf.TableStyle, _aaeef)
	}
	if _fdadf.TableStyleId != nil {
		_egcfb := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053\u0074y\u006c\u0065\u0049\u0064"}}
		_ga.AddPreserveSpaceAttr(&_egcfb, *_fdadf.TableStyleId)
		e.EncodeElement(_fdadf.TableStyleId, _egcfb)
	}
	return nil
}

// Validate validates the EG_OfficeArtExtensionList and its children
func (_gabec *EG_OfficeArtExtensionList) Validate() error {
	return _gabec.ValidateWithPath("\u0045G\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t")
}

// ValidateWithPath validates the CT_BaseStyles and its children, prefixing error messages with path
func (_faaf *CT_BaseStyles) ValidateWithPath(path string) error {
	if _agea := _faaf.ClrScheme.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"); _agea != nil {
		return _agea
	}
	if _acaa := _faaf.FontScheme.ValidateWithPath(path + "/\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _acaa != nil {
		return _acaa
	}
	if _gecf := _faaf.FmtScheme.ValidateWithPath(path + "\u002f\u0046\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _gecf != nil {
		return _gecf
	}
	if _faaf.ExtLst != nil {
		if _efdb := _faaf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _efdb != nil {
			return _efdb
		}
	}
	return nil
}

func (_feeeb *ST_SystemColorVal) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_feeeb = 0
	case "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r":
		*_feeeb = 1
	case "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064":
		*_feeeb = 2
	case "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
		*_feeeb = 3
	case "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
		*_feeeb = 4
	case "\u006d\u0065\u006e\u0075":
		*_feeeb = 5
	case "\u0077\u0069\u006e\u0064\u006f\u0077":
		*_feeeb = 6
	case "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065":
		*_feeeb = 7
	case "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074":
		*_feeeb = 8
	case "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074":
		*_feeeb = 9
	case "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
		*_feeeb = 10
	case "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072":
		*_feeeb = 11
	case "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072":
		*_feeeb = 12
	case "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065":
		*_feeeb = 13
	case "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t":
		*_feeeb = 14
	case "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074":
		*_feeeb = 15
	case "\u0062t\u006e\u0046\u0061\u0063\u0065":
		*_feeeb = 16
	case "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw":
		*_feeeb = 17
	case "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074":
		*_feeeb = 18
	case "\u0062t\u006e\u0054\u0065\u0078\u0074":
		*_feeeb = 19
	case "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
		*_feeeb = 20
	case "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
		*_feeeb = 21
	case "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077":
		*_feeeb = 22
	case "\u0033d\u004c\u0069\u0067\u0068\u0074":
		*_feeeb = 23
	case "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074":
		*_feeeb = 24
	case "\u0069\u006e\u0066\u006f\u0042\u006b":
		*_feeeb = 25
	case "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074":
		*_feeeb = 26
	case "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e":
		*_feeeb = 27
	case "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
		*_feeeb = 28
	case "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
		*_feeeb = 29
	case "\u006de\u006e\u0075\u0042\u0061\u0072":
		*_feeeb = 30
	}
	return nil
}

func (_ggdc *CT_FontCollection) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_dgbf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u006c\u0061\u0074\u0069\u006e"}}
	e.EncodeElement(_ggdc.Latin, _dgbf)
	_ccfdc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0061"}}
	e.EncodeElement(_ggdc.Ea, _ccfdc)
	_dcgc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u0073"}}
	e.EncodeElement(_ggdc.Cs, _dcgc)
	if _ggdc.Font != nil {
		_feec := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0066\u006f\u006e\u0074"}}
		for _, _fbcf := range _ggdc.Font {
			e.EncodeElement(_fbcf, _feec)
		}
	}
	if _ggdc.ExtLst != nil {
		_cgace := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ggdc.ExtLst, _cgace)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gacge *EG_ColorTransform) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gacge.Tint != nil {
		_babdd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		e.EncodeElement(_gacge.Tint, _babdd)
	}
	if _gacge.Shade != nil {
		_ebgfg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0073\u0068\u0061\u0064\u0065"}}
		e.EncodeElement(_gacge.Shade, _ebgfg)
	}
	if _gacge.Comp != nil {
		_bdbbdc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0063\u006f\u006d\u0070"}}
		e.EncodeElement(_gacge.Comp, _bdbbdc)
	}
	if _gacge.Inv != nil {
		_aaeebe := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0069n\u0076"}}
		e.EncodeElement(_gacge.Inv, _aaeebe)
	}
	if _gacge.Gray != nil {
		_gfgga := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0079"}}
		e.EncodeElement(_gacge.Gray, _gfgga)
	}
	if _gacge.Alpha != nil {
		_bfdge := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0061\u006c\u0070\u0068\u0061"}}
		e.EncodeElement(_gacge.Alpha, _bfdge)
	}
	if _gacge.AlphaOff != nil {
		_gacgaf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}}
		e.EncodeElement(_gacge.AlphaOff, _gacgaf)
	}
	if _gacge.AlphaMod != nil {
		_cadfa := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		e.EncodeElement(_gacge.AlphaMod, _cadfa)
	}
	if _gacge.Hue != nil {
		_aegeg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068u\u0065"}}
		e.EncodeElement(_gacge.Hue, _aegeg)
	}
	if _gacge.HueOff != nil {
		_bcgd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0075\u0065\u004f\u0066\u0066"}}
		e.EncodeElement(_gacge.HueOff, _bcgd)
	}
	if _gacge.HueMod != nil {
		_cabbd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0068\u0075\u0065\u004d\u006f\u0064"}}
		e.EncodeElement(_gacge.HueMod, _cabbd)
	}
	if _gacge.Sat != nil {
		_gagf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073a\u0074"}}
		e.EncodeElement(_gacge.Sat, _gagf)
	}
	if _gacge.SatOff != nil {
		_fbdaf := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0061\u0074\u004f\u0066\u0066"}}
		e.EncodeElement(_gacge.SatOff, _fbdaf)
	}
	if _gacge.SatMod != nil {
		_ffcd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0073\u0061\u0074\u004d\u006f\u0064"}}
		e.EncodeElement(_gacge.SatMod, _ffcd)
	}
	if _gacge.Lum != nil {
		_bbdcc := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		e.EncodeElement(_gacge.Lum, _bbdcc)
	}
	if _gacge.LumOff != nil {
		_gdcccd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u0075\u006d\u004f\u0066\u0066"}}
		e.EncodeElement(_gacge.LumOff, _gdcccd)
	}
	if _gacge.LumMod != nil {
		_acabbd := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u006c\u0075\u006d\u004d\u006f\u0064"}}
		e.EncodeElement(_gacge.LumMod, _acabbd)
	}
	if _gacge.Red != nil {
		_acdeg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072e\u0064"}}
		e.EncodeElement(_gacge.Red, _acdeg)
	}
	if _gacge.RedOff != nil {
		_dfegdg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072\u0065\u0064\u004f\u0066\u0066"}}
		e.EncodeElement(_gacge.RedOff, _dfegdg)
	}
	if _gacge.RedMod != nil {
		_eefag := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0072\u0065\u0064\u004d\u006f\u0064"}}
		e.EncodeElement(_gacge.RedMod, _eefag)
	}
	if _gacge.Green != nil {
		_fcbcg := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0065\u0065\u006e"}}
		e.EncodeElement(_gacge.Green, _fcbcg)
	}
	if _gacge.GreenOff != nil {
		_aage := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}}
		e.EncodeElement(_gacge.GreenOff, _aage)
	}
	if _gacge.GreenMod != nil {
		_bgbbbg := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}}
		e.EncodeElement(_gacge.GreenMod, _bgbbbg)
	}
	if _gacge.Blue != nil {
		_bcea := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0065"}}
		e.EncodeElement(_gacge.Blue, _bcea)
	}
	if _gacge.BlueOff != nil {
		_daeea := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u006c\u0075\u0065\u004f\u0066f"}}
		e.EncodeElement(_gacge.BlueOff, _daeea)
	}
	if _gacge.BlueMod != nil {
		_afaa := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0062\u006c\u0075\u0065\u004d\u006fd"}}
		e.EncodeElement(_gacge.BlueMod, _afaa)
	}
	if _gacge.Gamma != nil {
		_cfcf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0061\u006d\u006d\u0061"}}
		e.EncodeElement(_gacge.Gamma, _cfcf)
	}
	if _gacge.InvGamma != nil {
		_cdfdge := _g.StartElement{Name: _g.Name{Local: "\u0061\u003a\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}}
		e.EncodeElement(_gacge.InvGamma, _cdfdge)
	}
	return nil
}

func init() {
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065", NewCT_AudioFile)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fV\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065", NewCT_VideoFile)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0051\u0075\u0069c\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065", NewCT_QuickTimeFile)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043D\u0054\u0069\u006d\u0065", NewCT_AudioCDTime)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043\u0044", NewCT_AudioCD)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065", NewCT_ColorScheme)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dC\u006f\u006c\u006f\u0072", NewCT_CustomColor)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053up\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0061\u006c\u0046\u006f\u006e\u0074", NewCT_SupplementalFont)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dC\u006f\u006co\u0072\u004c\u0069\u0073\u0074", NewCT_CustomColorList)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006c\u0065c\u0074\u0069\u006f\u006e", NewCT_FontCollection)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u0049\u0074\u0065\u006d", NewCT_EffectStyleItem)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065", NewCT_FontScheme)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0046\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074", NewCT_FillStyleList)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0069\u006ee\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074", NewCT_LineStyleList)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u004c\u0069\u0073\u0074", NewCT_EffectStyleList)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075n\u0064\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065L\u0069\u0073\u0074", NewCT_BackgroundFillStyleList)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004da\u0074\u0072\u0069\u0078", NewCT_StyleMatrix)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0061\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073", NewCT_BaseStyles)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004f\u0066fi\u0063e\u0041\u0072\u0074\u0045\u0078t\u0065\u006e\u0073\u0069\u006f\u006e", NewCT_OfficeArtExtension)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u006e\u0067\u006c\u0065", NewCT_Angle)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0046\u0069\u0078e\u0064\u0041\u006e\u0067\u006c\u0065", NewCT_PositiveFixedAngle)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065", NewCT_Percentage)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0050\u0065\u0072c\u0065\u006e\u0074\u0061\u0067\u0065", NewCT_PositivePercentage)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fF\u0069\u0078\u0065\u0064\u0050e\u0072\u0063e\u006e\u0074\u0061\u0067\u0065", NewCT_FixedPercentage)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065", NewCT_PositiveFixedPercentage)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0061\u0074\u0069\u006f", NewCT_Ratio)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0032\u0044", NewCT_Point2D)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0053i\u007a\u0065\u0032\u0044", NewCT_PositiveSize2D)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043om\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d", NewCT_ComplementTransform)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049nv\u0065\u0072\u0073\u0065\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_InverseTransform)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0072ay\u0073c\u0061\u006c\u0065\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_GrayscaleTransform)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0061\u006d\u006d\u0061\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d", NewCT_GammaTransform)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0049\u006e\u0076\u0065\u0072\u0073\u0065\u0047\u0061\u006dm\u0061\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_InverseGammaTransform)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072", NewCT_ScRgbColor)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072", NewCT_SRgbColor)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0048\u0073\u006c\u0043\u006f\u006c\u006f\u0072", NewCT_HslColor)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0079\u0073\u0074\u0065\u006dC\u006f\u006c\u006f\u0072", NewCT_SystemColor)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0065C\u006f\u006c\u006f\u0072", NewCT_SchemeColor)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074C\u006f\u006c\u006f\u0072", NewCT_PresetColor)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t", NewCT_OfficeArtExtensionList)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0061\u006c\u0065\u0032\u0044", NewCT_Scale2D)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d\u0032\u0044", NewCT_Transform2D)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0032\u0044", NewCT_GroupTransform2D)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0033\u0044", NewCT_Point3D)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0044", NewCT_Vector3D)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0070\u0068\u0065\u0072\u0065\u0043\u006f\u006f\u0072\u0064\u0073", NewCT_SphereCoords)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0052\u0065\u0063\u0074", NewCT_RelativeRect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072", NewCT_Color)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0052\u0055", NewCT_ColorMRU)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fEm\u0062\u0065\u0064\u0064\u0065\u0064\u0057\u0041\u0056\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065", NewCT_EmbeddedWAVAudioFile)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b", NewCT_Hyperlink)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043on\u006e\u0065\u0063\u0074\u006f\u0072\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_ConnectorLocking)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0068\u0061\u0070\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_ShapeLocking)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004c\u006fc\u006b\u0069\u006e\u0067", NewCT_PictureLocking)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u006f\u0075\u0070\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_GroupLocking)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063a\u006c\u004f\u0062\u006a\u0065\u0063\u0074F\u0072\u0061\u006d\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_GraphicalObjectFrameLocking)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006fnt\u0065n\u0074\u0050\u0061\u0072\u0074L\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_ContentPartLocking)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044r\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006f\u0070\u0073", NewCT_NonVisualDrawingProps)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050ro\u0070\u0073", NewCT_NonVisualDrawingShapeProps)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fN\u006f\u006e\u0056\u0069s\u0075\u0061\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u006f\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NonVisualConnectorProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u0050\u0072\u006f\u0070\u0065\u0072ti\u0065\u0073", NewCT_NonVisualPictureProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072o\u0075p\u0044r\u0061w\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0073", NewCT_NonVisualGroupDrawingShapeProps)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072a\u0070h\u0069c\u0046r\u0061\u006d\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NonVisualGraphicFrameProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u006eV\u0069\u0073\u0075\u0061\u006c\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050a\u0072\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_NonVisualContentPartProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ra\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0061t\u0061", NewCT_GraphicalObjectData)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0070\u0068\u0069c\u0061\u006cO\u0062\u006a\u0065\u0063\u0074", NewCT_GraphicalObject)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041ni\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006d\u0045\u006c\u0065\u006d\u0065n\u0074", NewCT_AnimationDgmElement)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043h\u0061\u0072\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074", NewCT_AnimationChartElement)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0041\u006e\u0069m\u0061\u0074\u0069\u006f\u006eE\u006ce\u006de\u006e\u0074\u0043\u0068\u006f\u0069\u0063e", NewCT_AnimationElementChoice)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069o\u006e\u0044\u0067\u006d\u0042\u0075\u0069l\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_AnimationDgmBuildProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043\u0068\u0061r\u0074B\u0075\u0069\u006c\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_AnimationChartBuildProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fA\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0042\u0075\u0069\u006c\u0064\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_AnimationGraphicalObjectBuildProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_BackgroundFormatting)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0057\u0068ol\u0065E\u0032\u006f\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_WholeE2oFormatting)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0076\u006d\u006c\u0055\u0073\u0065\u0053\u0068\u0061p\u0065\u0052\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065", NewCT_GvmlUseShapeRectangle)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0047\u0076\u006dl\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065", NewCT_GvmlTextShape)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0076ml\u0053h\u0061\u0070\u0065\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GvmlShapeNonVisual)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fG\u0076\u006d\u006c\u0053\u0068\u0061\u0070\u0065", NewCT_GvmlShape)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065c\u0074o\u0072N\u006f\u006e\u0056\u0069\u0073\u0075\u0061l", NewCT_GvmlConnectorNonVisual)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072", NewCT_GvmlConnector)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fGv\u006d\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GvmlPictureNonVisual)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069c\u0074\u0075\u0072\u0065", NewCT_GvmlPicture)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047v\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046r\u0061m\u0065\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c", NewCT_GvmlGraphicFrameNonVisual)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0076\u006d\u006cG\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004fb\u006a\u0065\u0063t\u0046r\u0061\u006d\u0065", NewCT_GvmlGraphicalObjectFrame)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069s\u0075\u0061\u006c", NewCT_GvmlGroupShapeNonVisual)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070S\u0068\u0061\u0070\u0065", NewCT_GvmlGroupShape)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0061\u006d\u0065\u0072a", NewCT_Camera)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004c\u0069\u0067\u0068\u0074\u0052\u0069\u0067", NewCT_LightRig)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0065\u006e\u0065\u0033\u0044", NewCT_Scene3D)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u0061\u0063\u006b\u0064\u0072\u006f\u0070", NewCT_Backdrop)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0065\u0076\u0065\u006c", NewCT_Bevel)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0033\u0044", NewCT_Shape3D)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0046\u006c\u0061\u0074\u0054\u0065\u0078\u0074", NewCT_FlatText)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061B\u0069\u004c\u0065\u0076\u0065l\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaBiLevelEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061C\u0065\u0069\u006c\u0069\u006eg\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaCeilingEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041lp\u0068\u0061\u0046\u006c\u006f\u006f\u0072\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaFloorEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061I\u006e\u0076\u0065\u0072\u0073e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaInverseEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006c\u0070\u0068a\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0046i\u0078\u0065\u0064E\u0066f\u0065\u0063\u0074", NewCT_AlphaModulateFixedEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0041\u006c\u0070\u0068\u0061\u004f\u0075\u0074s\u0065\u0074\u0045\u0066fe\u0063\u0074", NewCT_AlphaOutsetEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaReplaceEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0042\u0069\u004ce\u0076\u0065\u006c\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_BiLevelEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006c\u0075\u0072\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_BlurEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0043\u006f\u006c\u006f\u0072\u0043\u0068\u0061n\u0067\u0065\u0045\u0066fe\u0063\u0074", NewCT_ColorChangeEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006flo\u0072R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_ColorReplaceEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0044\u0075\u006ft\u006f\u006e\u0065\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_DuotoneEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u006c\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_GlowEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0079\u0073\u0063a\u006c\u0065E\u0066\u0066\u0065\u0063\u0074", NewCT_GrayscaleEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fH\u0053\u004c\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_HSLEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074", NewCT_InnerShadowEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fL\u0075\u006d\u0069\u006e\u0061n\u0063\u0065E\u0066\u0066\u0065\u0063\u0074", NewCT_LuminanceEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074", NewCT_OuterShadowEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0072es\u0065t\u0053\u0068\u0061\u0064\u006fw\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_PresetShadowEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ef\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_ReflectionEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fRe\u006c\u0061\u0074\u0069\u0076\u0065\u004f\u0066\u0066\u0073\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_RelativeOffsetEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u006f\u0066\u0074\u0045\u0064g\u0065\u0073E\u0066\u0066\u0065\u0063\u0074", NewCT_SoftEdgesEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0069\u006e\u0074\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_TintEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0072\u0061\u006e\u0073\u0066o\u0072\u006dE\u0066\u0066\u0065\u0063\u0074", NewCT_TransformEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004eoF\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NoFillProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0053\u006f\u006c\u0069d\u0043\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u006cP\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073", NewCT_SolidColorFillProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004c\u0069\u006e\u0065\u0061\u0072\u0053\u0068\u0061\u0064e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_LinearShadeProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050at\u0068\u0053\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_PathShadeProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070", NewCT_GradientStop)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ra\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074", NewCT_GradientStopList)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0046i\u006cl\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s", NewCT_GradientFillProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0069le\u0049n\u0066\u006f\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_TileInfoProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0074\u0072\u0065\u0074\u0063\u0068\u0049\u006e\u0066o\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_StretchInfoProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0042\u006c\u0069\u0070", NewCT_Blip)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u006cip\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_BlipFillProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006cl\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_PatternFillProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_GroupFillProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_FillProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_FillEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0046\u0069\u006c\u006c\u004f\u0076\u0065\u0072l\u0061\u0079\u0045\u0066fe\u0063\u0074", NewCT_FillOverlayEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065", NewCT_EffectReference)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074C\u006f\u006et\u0061\u0069\u006e\u0065\u0072", NewCT_EffectContainer)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041lp\u0068\u0061\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0045\u0066\u0066\u0065c\u0074", NewCT_AlphaModulateEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006c\u0065\u006e\u0064\u0045f\u0066\u0065\u0063\u0074", NewCT_BlendEffect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0069\u0073\u0074", NewCT_EffectList)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_EffectProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fG\u0065\u006f\u006d\u0047\u0075\u0069\u0064\u0065", NewCT_GeomGuide)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_GeomGuideList)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0064\u006a\u0050\u006f\u0069\u006e\u0074\u0032\u0044", NewCT_AdjPoint2D)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0065\u006f\u006d\u0052\u0065\u0063\u0074", NewCT_GeomRect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u0059\u0041\u0064\u006a\u0075\u0073\u0074\u0048a\u006e\u0064\u006c\u0065", NewCT_XYAdjustHandle)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0050\u006f\u006c\u0061\u0072\u0041\u0064\u006au\u0073\u0074\u0048\u0061nd\u006c\u0065", NewCT_PolarAdjustHandle)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006fn\u0053\u0069\u0074\u0065", NewCT_ConnectionSite)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041dj\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u004c\u0069\u0073\u0074", NewCT_AdjustHandleList)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u0069\u006f\u006e\u0053i\u0074\u0065\u004c\u0069\u0073\u0074", NewCT_ConnectionSiteList)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_Connection)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004d\u006f\u0076\u0065\u0054\u006f", NewCT_Path2DMoveTo)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u006e\u0065\u0054\u006f", NewCT_Path2DLineTo)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044A\u0072\u0063\u0054\u006f", NewCT_Path2DArcTo)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0061th\u0032D\u0051\u0075\u0061\u0064\u0042e\u007a\u0069\u0065\u0072\u0054\u006f", NewCT_Path2DQuadBezierTo)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050at\u0068\u0032\u0044\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0069\u0065\u0072T\u006f", NewCT_Path2DCubicBezierTo)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044C\u006c\u006f\u0073\u0065", NewCT_Path2DClose)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0061\u0074\u0068\u0032D", NewCT_Path2D)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u0073\u0074", NewCT_Path2DList)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050re\u0073\u0065\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044", NewCT_PresetGeometry2D)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0072\u0065\u0073\u0065\u0074T\u0065\u0078t\u0053\u0068\u0061\u0070\u0065", NewCT_PresetTextShape)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044", NewCT_CustomGeometry2D)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u004c\u0069\u006e\u0065\u0045\u006e\u0064\u0050r\u006f\u0070\u0065\u0072ti\u0065\u0073", NewCT_LineEndProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0042\u0065\u0076\u0065\u006c", NewCT_LineJoinBevel)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0052\u006f\u0075\u006e\u0064", NewCT_LineJoinRound)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006eM\u0069\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_LineJoinMiterProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0072\u0065\u0073e\u0074\u004c\u0069\u006e\u0065\u0044\u0061\u0073\u0068P\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073", NewCT_PresetLineDashProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0061\u0073\u0068\u0053\u0074\u006f\u0070", NewCT_DashStop)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0061\u0073\u0068\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074", NewCT_DashStopList)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_LineProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0068\u0061\u0070\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewCT_ShapeProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fGr\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_GroupShapeProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fSt\u0079\u006c\u0065\u004d\u0061\u0074\u0072\u0069\u0078\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065", NewCT_StyleMatrixReference)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0046\u006f\u006et\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065", NewCT_FontReference)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_ShapeStyle)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0044\u0065\u0066a\u0075\u006c\u0074\u0053\u0068a\u0070e\u0044e\u0066\u0069\u006e\u0069\u0074\u0069\u006fn", NewCT_DefaultShapeDefinition)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004fbj\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065\u0044\u0065\u0066\u0061\u0075\u006ct\u0073", NewCT_ObjectStyleDefaults)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u006d\u0070\u0074\u0079\u0045\u006c\u0065\u006d\u0065\u006e\u0074", NewCT_EmptyElement)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067", NewCT_ColorMapping)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fCo\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065", NewCT_ColorMappingOverride)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006de\u0041\u006e\u0064\u004d\u0061\u0070\u0070\u0069\u006e\u0067", NewCT_ColorSchemeAndMapping)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u006f\u006c\u006f\u0072\u0053c\u0068\u0065m\u0065\u004c\u0069\u0073\u0074", NewCT_ColorSchemeList)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004fff\u0069\u0063\u0065\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074", NewCT_OfficeStyleSheet)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u0061se\u0053t\u0079\u006c\u0065\u0073\u004fv\u0065\u0072\u0072\u0069\u0064\u0065", NewCT_BaseStylesOverride)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043li\u0070\u0062\u006f\u0061\u0072\u0064\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065e\u0074", NewCT_ClipboardStyleSheet)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ab\u006c\u0065\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_TableCellProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0048\u0065\u0061\u0064\u0065\u0072\u0073", NewCT_Headers)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c", NewCT_TableCol)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0047\u0072\u0069\u0064", NewCT_TableGrid)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0043\u0065\u006c\u006c", NewCT_TableCell)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0052\u006f\u0077", NewCT_TableRow)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewCT_TableProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065", NewCT_Table)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0065\u006c\u006c\u0033D", NewCT_Cell3D)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u004c\u0069n\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_ThemeableLineStyle)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0054\u0065\u0078\u0074\u0053\u0074\u0079l\u0065", NewCT_TableStyleTextStyle)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fTa\u0062\u006c\u0065\u0043\u0065\u006c\u006c\u0042\u006f\u0072\u0064\u0065\u0072\u0053\u0074\u0079\u006c\u0065", NewCT_TableCellBorderStyle)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fTa\u0062\u006c\u0065\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0053\u0074\u0079\u006c\u0065", NewCT_TableBackgroundStyle)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0043\u0065\u006c\u006c\u0053\u0074\u0079l\u0065", NewCT_TableStyleCellStyle)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074S\u0074\u0079\u006c\u0065", NewCT_TablePartStyle)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_TableStyle)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u004c\u0069\u0073\u0074", NewCT_TableStyleList)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068", NewCT_TextParagraph)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u0073\u0074\u0053\u0074\u0079\u006c\u0065", NewCT_TextListStyle)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0054\u0065\u0078\u0074\u004e\u006f\u0072\u006da\u006c\u0041\u0075\u0074of\u0069\u0074", NewCT_TextNormalAutofit)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ex\u0074\u0053\u0068\u0061\u0070\u0065\u0041\u0075\u0074\u006f\u0066\u0069\u0074", NewCT_TextShapeAutofit)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074", NewCT_TextNoAutofit)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065xt\u0042o\u0064\u0079\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_TextBodyProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079", NewCT_TextBody)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054e\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0043\u006fl\u006fr\u0046\u006f\u006c\u006c\u006f\u0077\u0054e\u0078\u0074", NewCT_TextBulletColorFollowText)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065\u0078\u0074B\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065F\u006f\u006c\u006co\u0077T\u0065\u0078\u0074", NewCT_TextBulletSizeFollowText)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074", NewCT_TextBulletSizePercent)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ex\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065\u0050\u006f\u0069n\u0074", NewCT_TextBulletSizePoint)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0065\u0078\u0074\u0042u\u006c\u006c\u0065\u0074\u0054\u0079\u0070e\u0066\u0061\u0063\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074", NewCT_TextBulletTypefaceFollowText)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fTe\u0078\u0074\u0041\u0075\u0074\u006f\u006e\u0075\u006d\u0062\u0065\u0072\u0042\u0075\u006c\u006c\u0065\u0074", NewCT_TextAutonumberBullet)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072\u0042u\u006c\u006c\u0065\u0074", NewCT_TextCharBullet)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006c\u0069\u0070\u0042u\u006c\u006c\u0065\u0074", NewCT_TextBlipBullet)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0065\u0078\u0074\u004e\u006f\u0042\u0075\u006c\u006c\u0065\u0074", NewCT_TextNoBullet)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u006f\u006e\u0074", NewCT_TextFont)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u004c\u0069n\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074", NewCT_TextUnderlineLineFollowText)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u0046\u0069l\u006c\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074", NewCT_TextUnderlineFillFollowText)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0046i\u006c\u006c\u0047\u0072\u006f\u0075\u0070\u0057\u0072\u0061\u0070\u0070\u0065\u0072", NewCT_TextUnderlineFillGroupWrapper)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_TextCharacterProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e", NewCT_Boolean)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065xt\u0053p\u0061\u0063\u0069\u006e\u0067P\u0065\u0072\u0063\u0065\u006e\u0074", NewCT_TextSpacingPercent)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ex\u0074\u0053\u0070\u0061\u0063\u0069\u006e\u0067\u0050\u006f\u0069\u006e\u0074", NewCT_TextSpacingPoint)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0054\u0061b\u0053\u0074\u006f\u0070", NewCT_TextTabStop)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0065\u0078\u0074\u0054\u0061b\u0053\u0074o\u0070\u004c\u0069\u0073\u0074", NewCT_TextTabStopList)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u006e\u0065\u0042\u0072\u0065\u0061\u006b", NewCT_TextLineBreak)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070a\u0063\u0069\u006e\u0067", NewCT_TextSpacing)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0050\u0061\u0072\u0061g\u0072\u0061\u0070\u0068\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_TextParagraphProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064", NewCT_TextField)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u0067\u0075\u006c\u0061\u0072\u0054\u0065x\u0074\u0052\u0075\u006e", NewCT_RegularTextRun)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce", NewVideoFile)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0067r\u0061\u0070\u0068\u0069\u0063", NewGraphic)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0062\u006c\u0069\u0070", NewBlip)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0068\u0065m\u0065", NewTheme)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0068\u0065\u006d\u0065\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065", NewThemeOverride)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0068\u0065m\u0065\u004d\u0061\u006e\u0061\u0067\u0065\u0072", NewThemeManager)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0062\u006c", NewTbl)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "t\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074", NewTblStyleLst)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u004d\u0065\u0064\u0069\u0061", NewEG_Media)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d", NewEG_ColorTransform)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t", NewEG_OfficeArtExtensionList)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0043h\u006f\u0069\u0063\u0065", NewEG_ColorChoice)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005f\u0054\u0065\u0078\u0074\u0033D", NewEG_Text3D)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005fS\u0068\u0061\u0064\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewEG_ShadeProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0046\u0069ll\u004do\u0064\u0065\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_FillModeProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewEG_FillProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005f\u0045\u0066\u0066\u0065\u0063t", NewEG_Effect)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_EffectProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079", NewEG_Geometry)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005fT\u0065\u0078\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079", NewEG_TextGeometry)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u004c\u0069ne\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_LineFillProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u004c\u0069ne\u004ao\u0069\u006e\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_LineJoinProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u004c\u0069ne\u0044a\u0073\u0068\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_LineDashProperties)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u0046\u0069l\u006c\u0053\u0074\u0079\u006c\u0065", NewEG_ThemeableFillStyle)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005fTh\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065", NewEG_ThemeableEffectStyle)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054he\u006d\u0065\u0061\u0062\u006c\u0065\u0046\u006f\u006e\u0074\u0053\u0074\u0079\u006ce\u0073", NewEG_ThemeableFontStyles)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0041\u0075t\u006f\u0066\u0069\u0074", NewEG_TextAutofit)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005fT\u0065\u0078\u0074\u0042\u0075l\u006c\u0065t\u0043\u006f\u006c\u006f\u0072", NewEG_TextBulletColor)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065t\u0053\u0069\u007a\u0065", NewEG_TextBulletSize)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0054\u0065xt\u0042u\u006c\u006c\u0065\u0074\u0054y\u0070\u0065\u0066\u0061\u0063\u0065", NewEG_TextBulletTypeface)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074", NewEG_TextBullet)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Li\u006e\u0065", NewEG_TextUnderlineLine)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Fi\u006c\u006c", NewEG_TextUnderlineFill)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0052\u0075\u006e", NewEG_TextRun)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041G\u005f\u0042\u006c\u006f\u0062", NewAG_Blob)
	_ga.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041\u0047\u005f\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewAG_Locking)
}
