package sml

import (
	_b "encoding/xml"
	_ec "fmt"
	_f "github.com/arcpd/msword"
	_ed "github.com/arcpd/msword/common/logger"
	_c "github.com/arcpd/msword/schema/soo/dml/spreadsheetDrawing"
	_bb "github.com/arcpd/msword/schema/soo/ofc/sharedTypes"
	_eb "strconv"
	_ea "strings"
	_g "time"
)

func NewCT_Sheets() *CT_Sheets { _fgfcca := &CT_Sheets{}; return _fgfcca }

func NewCT_TableMissing() *CT_TableMissing { _dbabf := &CT_TableMissing{}; return _dbabf }

func (_egcbe *CT_LevelGroup) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _egcbe.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _egcbe.UniqueNameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", _egcbe.CaptionAttr)})
	if _egcbe.UniqueParentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069q\u0075\u0065\u0050\u0061\u0072\u0065\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_egcbe.UniqueParentAttr)})
	}
	if _egcbe.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_egcbe.IdAttr)})
	}
	e.EncodeToken(start)
	_bafg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ag\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"}}
	e.EncodeElement(_egcbe.GroupMembers, _bafg)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Sets struct {

	// Tuple Set Count
	CountAttr *uint32

	// OLAP Set
	Set []*CT_Set
}

func (_aecae *CT_pivotTableDefinition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _aecae.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0063\u0068\u0065\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _aecae.CacheIdAttr)})
	if _aecae.DataOnRowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061\u004f\u006e\u0052\u006f\u0077\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.DataOnRowsAttr))})
	}
	if _aecae.DataPositionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074a\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_aecae.DataPositionAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0061\u0074\u0061\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", _aecae.DataCaptionAttr)})
	if _aecae.GrandTotalCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0061\u006e\u0064\u0054\u006f\u0074\u0061\u006c\u0043\u0061p\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_aecae.GrandTotalCaptionAttr)})
	}
	if _aecae.ErrorCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0072\u0072o\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_aecae.ErrorCaptionAttr)})
	}
	if _aecae.ShowErrorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0045\u0072\u0072\u006fr"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ShowErrorAttr))})
	}
	if _aecae.MissingCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0043\u0061p\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_aecae.MissingCaptionAttr)})
	}
	if _aecae.ShowMissingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068\u006f\u0077\u004d\u0069\u0073\u0073\u0069\u006e\u0067"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ShowMissingAttr))})
	}
	if _aecae.PageStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070a\u0067\u0065\u0053\u0074\u0079\u006ce"}, Value: _ec.Sprintf("\u0025\u0076", *_aecae.PageStyleAttr)})
	}
	if _aecae.PivotTableStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070i\u0076o\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_aecae.PivotTableStyleAttr)})
	}
	if _aecae.VacatedStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u0063a\u0074\u0065\u0064\u0053\u0074\u0079\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_aecae.VacatedStyleAttr)})
	}
	if _aecae.TagAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0067"}, Value: _ec.Sprintf("\u0025\u0076", *_aecae.TagAttr)})
	}
	if _aecae.UpdatedVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0070\u0064\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_aecae.UpdatedVersionAttr)})
	}
	if _aecae.MinRefreshableVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_aecae.MinRefreshableVersionAttr)})
	}
	if _aecae.AsteriskTotalsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b\u0054o\u0074\u0061\u006c\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.AsteriskTotalsAttr))})
	}
	if _aecae.ShowItemsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0049\u0074\u0065\u006ds"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ShowItemsAttr))})
	}
	if _aecae.EditDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0064\u0069\u0074\u0044\u0061\u0074\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.EditDataAttr))})
	}
	if _aecae.DisableFieldListAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069s\u0061\u0062\u006ce\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.DisableFieldListAttr))})
	}
	if _aecae.ShowCalcMbrsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0043\u0061\u006c\u0063\u004d\u0062\u0072\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ShowCalcMbrsAttr))})
	}
	if _aecae.VisualTotalsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0069\u0073u\u0061\u006c\u0054\u006f\u0074\u0061\u006c\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.VisualTotalsAttr))})
	}
	if _aecae.ShowMultipleLabelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0065L\u0061\u0062\u0065\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ShowMultipleLabelAttr))})
	}
	if _aecae.ShowDataDropDownAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u0044\u0061t\u0061\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ShowDataDropDownAttr))})
	}
	if _aecae.ShowDrillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0044\u0072\u0069\u006cl"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ShowDrillAttr))})
	}
	if _aecae.PrintDrillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0069\u006e\u0074\u0044\u0072\u0069\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.PrintDrillAttr))})
	}
	if _aecae.ShowMemberPropertyTipsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077Me\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0054\u0069p\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ShowMemberPropertyTipsAttr))})
	}
	if _aecae.ShowDataTipsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0044\u0061\u0074\u0061\u0054\u0069\u0070\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ShowDataTipsAttr))})
	}
	if _aecae.EnableWizardAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0061b\u006c\u0065\u0057\u0069\u007a\u0061\u0072\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.EnableWizardAttr))})
	}
	if _aecae.EnableDrillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "e\u006e\u0061\u0062\u006c\u0065\u0044\u0072\u0069\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.EnableDrillAttr))})
	}
	if _aecae.EnableFieldPropertiesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "e\u006e\u0061\u0062\u006ceF\u0069e\u006c\u0064\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.EnableFieldPropertiesAttr))})
	}
	if _aecae.PreserveFormattingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.PreserveFormattingAttr))})
	}
	if _aecae.UseAutoFormattingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073\u0065\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.UseAutoFormattingAttr))})
	}
	if _aecae.PageWrapAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0067\u0065\u0057\u0072\u0061\u0070"}, Value: _ec.Sprintf("\u0025\u0076", *_aecae.PageWrapAttr)})
	}
	if _aecae.PageOverThenDownAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061g\u0065\u004f\u0076e\u0072\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.PageOverThenDownAttr))})
	}
	if _aecae.SubtotalHiddenItemsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0075\u0062\u0074ot\u0061\u006c\u0048\u0069\u0064\u0064\u0065\u006e\u0049\u0074\u0065\u006d\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.SubtotalHiddenItemsAttr))})
	}
	if _aecae.RowGrandTotalsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0077\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.RowGrandTotalsAttr))})
	}
	if _aecae.ColGrandTotalsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006c\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ColGrandTotalsAttr))})
	}
	if _aecae.FieldPrintTitlesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069e\u006c\u0064\u0050r\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.FieldPrintTitlesAttr))})
	}
	if _aecae.ItemPrintTitlesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069t\u0065m\u0050\u0072\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ItemPrintTitlesAttr))})
	}
	if _aecae.MergeItemAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006de\u0072\u0067\u0065\u0049\u0074\u0065m"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.MergeItemAttr))})
	}
	if _aecae.ShowDropZonesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ShowDropZonesAttr))})
	}
	if _aecae.CreatedVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_aecae.CreatedVersionAttr)})
	}
	if _aecae.IndentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0064\u0065\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_aecae.IndentAttr)})
	}
	if _aecae.ShowEmptyRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0052\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ShowEmptyRowAttr))})
	}
	if _aecae.ShowEmptyColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0043\u006f\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ShowEmptyColAttr))})
	}
	if _aecae.ShowHeadersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ShowHeadersAttr))})
	}
	if _aecae.CompactAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u0070\u0061\u0063\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.CompactAttr))})
	}
	if _aecae.OutlineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.OutlineAttr))})
	}
	if _aecae.OutlineDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "o\u0075\u0074\u006c\u0069\u006e\u0065\u0044\u0061\u0074\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.OutlineDataAttr))})
	}
	if _aecae.CompactDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006d\u0070\u0061\u0063\u0074\u0044\u0061\u0074\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.CompactDataAttr))})
	}
	if _aecae.PublishedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.PublishedAttr))})
	}
	if _aecae.GridDropZonesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0069\u0064\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.GridDropZonesAttr))})
	}
	if _aecae.ImmersiveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069m\u006d\u0065\u0072\u0073\u0069\u0076e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ImmersiveAttr))})
	}
	if _aecae.MultipleFieldFiltersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0075l\u0074\u0069\u0070\u006c\u0065\u0046\u0069\u0065l\u0064\u0046\u0069\u006cte\u0072\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.MultipleFieldFiltersAttr))})
	}
	if _aecae.ChartFormatAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_aecae.ChartFormatAttr)})
	}
	if _aecae.RowHeaderCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006fw\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_aecae.RowHeaderCaptionAttr)})
	}
	if _aecae.ColHeaderCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006fl\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_aecae.ColHeaderCaptionAttr)})
	}
	if _aecae.FieldListSortAscendingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065\u006cdL\u0069\u0073\u0074\u0053\u006f\u0072\u0074\u0041\u0073\u0063\u0065\u006e\u0064\u0069n\u0067"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.FieldListSortAscendingAttr))})
	}
	if _aecae.MdxSubqueriesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0064\u0078\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0069\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.MdxSubqueriesAttr))})
	}
	if _aecae.CustomListSortAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073t\u0053\u006f\u0072\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.CustomListSortAttr))})
	}
	if _aecae.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_aecae.AutoFormatIdAttr)})
	}
	if _aecae.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ApplyNumberFormatsAttr))})
	}
	if _aecae.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ApplyBorderFormatsAttr))})
	}
	if _aecae.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ApplyFontFormatsAttr))})
	}
	if _aecae.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ApplyPatternFormatsAttr))})
	}
	if _aecae.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ApplyAlignmentFormatsAttr))})
	}
	if _aecae.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aecae.ApplyWidthHeightFormatsAttr))})
	}
	e.EncodeToken(start)
	_cfgac := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}}
	e.EncodeElement(_aecae.Location, _cfgac)
	if _aecae.PivotFields != nil {
		_acdefee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0046i\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_aecae.PivotFields, _acdefee)
	}
	if _aecae.RowFields != nil {
		_ebfaed := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_aecae.RowFields, _ebfaed)
	}
	if _aecae.RowItems != nil {
		_aabgb := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_aecae.RowItems, _aabgb)
	}
	if _aecae.ColFields != nil {
		_aedec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_aecae.ColFields, _aedec)
	}
	if _aecae.ColItems != nil {
		_cacffb := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_aecae.ColItems, _cacffb)
	}
	if _aecae.PageFields != nil {
		_egdegd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_aecae.PageFields, _egdegd)
	}
	if _aecae.DataFields != nil {
		_dbcbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_aecae.DataFields, _dbcbe)
	}
	if _aecae.Formats != nil {
		_cffga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_aecae.Formats, _cffga)
	}
	if _aecae.ConditionalFormats != nil {
		_ggfbba := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u006fnd\u0069t\u0069\u006f\u006e\u0061\u006cF\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_aecae.ConditionalFormats, _ggfbba)
	}
	if _aecae.ChartFormats != nil {
		_cefaca := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_aecae.ChartFormats, _cefaca)
	}
	if _aecae.PivotHierarchies != nil {
		_ddfdd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070iv\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}}
		e.EncodeElement(_aecae.PivotHierarchies, _ddfdd)
	}
	if _aecae.PivotTableStyleInfo != nil {
		_adabf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070iv\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006ef\u006f"}}
		e.EncodeElement(_aecae.PivotTableStyleInfo, _adabf)
	}
	if _aecae.Filters != nil {
		_ecafa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_aecae.Filters, _ecafa)
	}
	if _aecae.RowHierarchiesUsage != nil {
		_fbbcf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072ow\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065"}}
		e.EncodeElement(_aecae.RowHierarchiesUsage, _fbbcf)
	}
	if _aecae.ColHierarchiesUsage != nil {
		_fdbfb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063ol\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065"}}
		e.EncodeElement(_aecae.ColHierarchiesUsage, _fdbfb)
	}
	if _aecae.ExtLst != nil {
		_fadgff := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_aecae.ExtLst, _fadgff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_dacc *CT_CellProtection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cdbc := range start.Attr {
		if _cdbc.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_bfce, _fabe := _eb.ParseBool(_cdbc.Value)
			if _fabe != nil {
				return _fabe
			}
			_dacc.LockedAttr = &_bfce
			continue
		}
		if _cdbc.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_ebcfd, _gbee := _eb.ParseBool(_cdbc.Value)
			if _gbee != nil {
				return _gbee
			}
			_dacc.HiddenAttr = &_ebcfd
			continue
		}
	}
	for {
		_gcf, _fbdc := d.Token()
		if _fbdc != nil {
			return _ec.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e: \u0025\u0073", _fbdc)
		}
		if _afdc, _ffbg := _gcf.(_b.EndElement); _ffbg && _afdc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_edegd *CT_Missing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egbec := range start.Attr {
		if _egbec.Name.Local == "\u0066\u0063" {
			_eded, _dfaaf := _egbec.Value, error(nil)
			if _dfaaf != nil {
				return _dfaaf
			}
			_edegd.FcAttr = &_eded
			continue
		}
		if _egbec.Name.Local == "\u0066" {
			_fefbe, _bdgge := _eb.ParseBool(_egbec.Value)
			if _bdgge != nil {
				return _bdgge
			}
			_edegd.FAttr = &_fefbe
			continue
		}
		if _egbec.Name.Local == "\u0063" {
			_bacfe, _bcbaae := _egbec.Value, error(nil)
			if _bcbaae != nil {
				return _bcbaae
			}
			_edegd.CAttr = &_bacfe
			continue
		}
		if _egbec.Name.Local == "\u0063\u0070" {
			_ggcbc, _fafdd := _eb.ParseUint(_egbec.Value, 10, 32)
			if _fafdd != nil {
				return _fafdd
			}
			_fegbc := uint32(_ggcbc)
			_edegd.CpAttr = &_fegbc
			continue
		}
		if _egbec.Name.Local == "\u0069\u006e" {
			_baegfe, _affaf := _eb.ParseUint(_egbec.Value, 10, 32)
			if _affaf != nil {
				return _affaf
			}
			_cddgbb := uint32(_baegfe)
			_edegd.InAttr = &_cddgbb
			continue
		}
		if _egbec.Name.Local == "\u0062\u0063" {
			_cdaef, _adfgg := _egbec.Value, error(nil)
			if _adfgg != nil {
				return _adfgg
			}
			_edegd.BcAttr = &_cdaef
			continue
		}
		if _egbec.Name.Local == "\u0075" {
			_fgcae, _bdfcbg := _eb.ParseBool(_egbec.Value)
			if _bdfcbg != nil {
				return _bdfcbg
			}
			_edegd.UAttr = &_fgcae
			continue
		}
		if _egbec.Name.Local == "\u0069" {
			_ecefc, _gbgae := _eb.ParseBool(_egbec.Value)
			if _gbgae != nil {
				return _gbgae
			}
			_edegd.IAttr = &_ecefc
			continue
		}
		if _egbec.Name.Local == "\u0075\u006e" {
			_ecgce, _gcbcfb := _eb.ParseBool(_egbec.Value)
			if _gcbcfb != nil {
				return _gcbcfb
			}
			_edegd.UnAttr = &_ecgce
			continue
		}
		if _egbec.Name.Local == "\u0073\u0074" {
			_dbafa, _cagcb := _eb.ParseBool(_egbec.Value)
			if _cagcb != nil {
				return _cagcb
			}
			_edegd.StAttr = &_dbafa
			continue
		}
		if _egbec.Name.Local == "\u0062" {
			_gagae, _badfd := _eb.ParseBool(_egbec.Value)
			if _badfd != nil {
				return _badfd
			}
			_edegd.BAttr = &_gagae
			continue
		}
	}
_ceabc:
	for {
		_ebgff, _dceec := d.Token()
		if _dceec != nil {
			return _dceec
		}
		switch _aecdb := _ebgff.(type) {
		case _b.StartElement:
			switch _aecdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_fggea := NewCT_Tuples()
				if _aabgf := d.DecodeElement(_fggea, &_aecdb); _aabgf != nil {
					return _aabgf
				}
				_edegd.Tpls = append(_edegd.Tpls, _fggea)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_bffeeb := NewCT_X()
				if _efcef := d.DecodeElement(_bffeeb, &_aecdb); _efcef != nil {
					return _efcef
				}
				_edegd.X = append(_edegd.X, _bffeeb)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fM\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0025\u0076", _aecdb.Name)
				if _agcee := d.Skip(); _agcee != nil {
					return _agcee
				}
			}
		case _b.EndElement:
			break _ceabc
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_CustomChartsheetView() *CT_CustomChartsheetView {
	_cfccf := &CT_CustomChartsheetView{}
	_cfccf.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _cfccf
}

// ValidateWithPath validates the CT_SmartTagType and its children, prefixing error messages with path
func (_gabbe *CT_SmartTagType) ValidateWithPath(path string) error { return nil }

type CT_FunctionGroup struct {

	// Name
	NameAttr *string
}

// ValidateWithPath validates the CT_ExternalReferences and its children, prefixing error messages with path
func (_bfcgb *CT_ExternalReferences) ValidateWithPath(path string) error {
	for _bbcef, _bbcb := range _bfcgb.ExternalReference {
		if _fbefg := _bbcb.ValidateWithPath(_ec.Sprintf("\u0025s\u002f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u005b\u0025\u0064\u005d", path, _bbcef)); _fbefg != nil {
			return _fbefg
		}
	}
	return nil
}

func NewCT_Top10() *CT_Top10 { _fcccc := &CT_Top10{}; return _fcccc }

func (_gcadf *ST_SortMethod) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gcadf = 0
	case "\u0073\u0074\u0072\u006f\u006b\u0065":
		*_gcadf = 1
	case "\u0070\u0069\u006e\u0059\u0069\u006e":
		*_gcadf = 2
	case "\u006e\u006f\u006e\u0065":
		*_gcadf = 3
	}
	return nil
}

const (
	ST_UnderlineValuesUnset            ST_UnderlineValues = 0
	ST_UnderlineValuesSingle           ST_UnderlineValues = 1
	ST_UnderlineValuesDouble           ST_UnderlineValues = 2
	ST_UnderlineValuesSingleAccounting ST_UnderlineValues = 3
	ST_UnderlineValuesDoubleAccounting ST_UnderlineValues = 4
	ST_UnderlineValuesNone             ST_UnderlineValues = 5
)

func (_fbecbd *ST_GroupBy) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gcbgb, _dceaf := d.Token()
	if _dceaf != nil {
		return _dceaf
	}
	if _ccgddb, _gfccc := _gcbgb.(_b.EndElement); _gfccc && _ccgddb.Name == start.Name {
		*_fbecbd = 1
		return nil
	}
	if _agbeg, _ecbdd := _gcbgb.(_b.CharData); !_ecbdd {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcbgb)
	} else {
		switch string(_agbeg) {
		case "":
			*_fbecbd = 0
		case "\u0072\u0061\u006eg\u0065":
			*_fbecbd = 1
		case "\u0073e\u0063\u006f\u006e\u0064\u0073":
			*_fbecbd = 2
		case "\u006di\u006e\u0075\u0074\u0065\u0073":
			*_fbecbd = 3
		case "\u0068\u006f\u0075r\u0073":
			*_fbecbd = 4
		case "\u0064\u0061\u0079\u0073":
			*_fbecbd = 5
		case "\u006d\u006f\u006e\u0074\u0068\u0073":
			*_fbecbd = 6
		case "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073":
			*_fbecbd = 7
		case "\u0079\u0065\u0061r\u0073":
			*_fbecbd = 8
		}
	}
	_gcbgb, _dceaf = d.Token()
	if _dceaf != nil {
		return _dceaf
	}
	if _cbada, _dgbfb := _gcbgb.(_b.EndElement); _dgbfb && _cbada.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcbgb)
}

func (_agage *Dialogsheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0064\u0069\u0061\u006c\u006f\u0067s\u0068\u0065\u0065\u0074"
	return _agage.CT_Dialogsheet.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_SharedItems and its children, prefixing error messages with path
func (_beace *CT_SharedItems) ValidateWithPath(path string) error {
	for _bfgfaf, _bcdge := range _beace.M {
		if _gafgg := _bcdge.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _bfgfaf)); _gafgg != nil {
			return _gafgg
		}
	}
	for _fbfee, _aefbg := range _beace.N {
		if _adbba := _aefbg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _fbfee)); _adbba != nil {
			return _adbba
		}
	}
	for _dcdagd, _gfabg := range _beace.B {
		if _gbfgfg := _gfabg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _dcdagd)); _gbfgfg != nil {
			return _gbfgfg
		}
	}
	for _eebcb, _gabbd := range _beace.E {
		if _edbec := _gabbd.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _eebcb)); _edbec != nil {
			return _edbec
		}
	}
	for _decabe, _ddfea := range _beace.S {
		if _gbacd := _ddfea.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _decabe)); _gbacd != nil {
			return _gbacd
		}
	}
	for _daccgd, _edbag := range _beace.D {
		if _gcdacf := _edbag.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0044\u005b\u0025\u0064\u005d", path, _daccgd)); _gcdacf != nil {
			return _gcdacf
		}
	}
	return nil
}

// Validate validates the CT_Parameters and its children
func (_badag *CT_Parameters) Validate() error {
	return _badag.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073")
}

func (_bffgd *CT_rowItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bffgd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_bffgd.CountAttr)})
	}
	e.EncodeToken(start)
	_bfeag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069"}}
	for _, _gccga := range _bffgd.I {
		e.EncodeElement(_gccga, _bfeag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_caffg *CT_VolTopic) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edggfg := range start.Attr {
		if _edggfg.Name.Local == "\u0074" {
			_caffg.TAttr.UnmarshalXMLAttr(_edggfg)
			continue
		}
	}
_cagda:
	for {
		_dfcbde, _ceecgb := d.Token()
		if _ceecgb != nil {
			return _ceecgb
		}
		switch _efgbfb := _dfcbde.(type) {
		case _b.StartElement:
			switch _efgbfb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}:
				if _egagb := d.DecodeElement(&_caffg.V, &_efgbfb); _egagb != nil {
					return _egagb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0070"}:
				var _ebeac string
				if _egfgf := d.DecodeElement(&_ebeac, &_efgbfb); _egfgf != nil {
					return _egfgf
				}
				_caffg.Stp = append(_caffg.Stp, _ebeac)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}:
				_daceba := NewCT_VolTopicRef()
				if _efceb := d.DecodeElement(_daceba, &_efgbfb); _efceb != nil {
					return _efceb
				}
				_caffg.Tr = append(_caffg.Tr, _daceba)
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070\u0069\u0063\u0020\u0025\u0076", _efgbfb.Name)
				if _aafda := d.Skip(); _aafda != nil {
					return _aafda
				}
			}
		case _b.EndElement:
			break _cagda
		case _b.CharData:
		}
	}
	return nil
}

func (_dcbfb *CT_Workbook) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dcbfb.ConformanceAttr != _bb.ST_ConformanceClassUnset {
		_gddbb, _fgbdba := _dcbfb.ConformanceAttr.MarshalXMLAttr(_b.Name{Local: "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065"})
		if _fgbdba != nil {
			return _fgbdba
		}
		start.Attr = append(start.Attr, _gddbb)
	}
	e.EncodeToken(start)
	if _dcbfb.FileVersion != nil {
		_dcfbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0065\u0056\u0065r\u0073\u0069\u006f\u006e"}}
		e.EncodeElement(_dcbfb.FileVersion, _dcfbe)
	}
	if _dcbfb.FileSharing != nil {
		_acadb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0065\u0053\u0068a\u0072\u0069\u006e\u0067"}}
		e.EncodeElement(_dcbfb.FileSharing, _acadb)
	}
	if _dcbfb.WorkbookPr != nil {
		_dcdfe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}}
		e.EncodeElement(_dcbfb.WorkbookPr, _dcdfe)
	}
	if _dcbfb.WorkbookProtection != nil {
		_gfacca := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0077\u006frk\u0062o\u006f\u006b\u0050\u0072\u006ft\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_dcbfb.WorkbookProtection, _gfacca)
	}
	if _dcbfb.BookViews != nil {
		_cfcbgb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ab\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_dcbfb.BookViews, _cfcbgb)
	}
	_gdcffg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0068\u0065\u0065\u0074s"}}
	e.EncodeElement(_dcbfb.Sheets, _gdcffg)
	if _dcbfb.FunctionGroups != nil {
		_eeccf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}}
		e.EncodeElement(_dcbfb.FunctionGroups, _eeccf)
	}
	if _dcbfb.ExternalReferences != nil {
		_affdb := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0065\u0078te\u0072n\u0061\u006c\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0073"}}
		e.EncodeElement(_dcbfb.ExternalReferences, _affdb)
	}
	if _dcbfb.DefinedNames != nil {
		_cedcff := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ad\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}}
		e.EncodeElement(_dcbfb.DefinedNames, _cedcff)
	}
	if _dcbfb.CalcPr != nil {
		_ffgcf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u0061\u006c\u0063\u0050r"}}
		e.EncodeElement(_dcbfb.CalcPr, _ffgcf)
	}
	if _dcbfb.OleSize != nil {
		_cdacc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u0053\u0069\u007a\u0065"}}
		e.EncodeElement(_dcbfb.OleSize, _cdacc)
	}
	if _dcbfb.CustomWorkbookViews != nil {
		_acabd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065w\u0073"}}
		e.EncodeElement(_dcbfb.CustomWorkbookViews, _acabd)
	}
	if _dcbfb.PivotCaches != nil {
		_gabedc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0043a\u0063\u0068\u0065\u0073"}}
		e.EncodeElement(_dcbfb.PivotCaches, _gabedc)
	}
	if _dcbfb.SmartTagPr != nil {
		_fcfaee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}}
		e.EncodeElement(_dcbfb.SmartTagPr, _fcfaee)
	}
	if _dcbfb.SmartTagTypes != nil {
		_dgddc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}}
		e.EncodeElement(_dcbfb.SmartTagTypes, _dgddc)
	}
	if _dcbfb.WebPublishing != nil {
		_ddgfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0077\u0065\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}}
		e.EncodeElement(_dcbfb.WebPublishing, _ddgfa)
	}
	if _dcbfb.FileRecoveryPr != nil {
		_befge := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}}
		for _, _efefg := range _dcbfb.FileRecoveryPr {
			e.EncodeElement(_efefg, _befge)
		}
	}
	if _dcbfb.WebPublishObjects != nil {
		_cacbc := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u004f\u0062\u006aec\u0074\u0073"}}
		e.EncodeElement(_dcbfb.WebPublishObjects, _cacbc)
	}
	if _dcbfb.ExtLst != nil {
		_gbdee := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dcbfb.ExtLst, _gbdee)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ProtectedRanges struct {

	// Protected Range
	ProtectedRange []*CT_ProtectedRange
}

func (_gbfba ST_PivotFilterType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gbfba.String(), start)
}

// Validate validates the CT_OleItem and its children
func (_agaee *CT_OleItem) Validate() error {
	return _agaee.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d")
}

func (_cgecd *CT_MeasureGroup) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _cgecd.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", _cgecd.CaptionAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_PivotTableStyle() *CT_PivotTableStyle { _eebfg := &CT_PivotTableStyle{}; return _eebfg }

func (_ffebb *CT_MetadataBlock) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fdfbg:
	for {
		_cgaag, _dccgb := d.Token()
		if _dccgb != nil {
			return _dccgb
		}
		switch _bafgb := _cgaag.(type) {
		case _b.StartElement:
			switch _bafgb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063"}:
				_gfdbg := NewCT_MetadataRecord()
				if _edgbad := d.DecodeElement(_gfdbg, &_bafgb); _edgbad != nil {
					return _edgbad
				}
				_ffebb.Rc = append(_ffebb.Rc, _gfdbg)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b\u0020\u0025v", _bafgb.Name)
				if _bccga := d.Skip(); _bccga != nil {
					return _bccga
				}
			}
		case _b.EndElement:
			break _fdfbg
		case _b.CharData:
		}
	}
	return nil
}

func (_acegfg ST_rwColActionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_begbcc := _b.Attr{}
	_begbcc.Name = name
	switch _acegfg {
	case ST_rwColActionTypeUnset:
		_begbcc.Value = ""
	case ST_rwColActionTypeInsertRow:
		_begbcc.Value = "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw"
	case ST_rwColActionTypeDeleteRow:
		_begbcc.Value = "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw"
	case ST_rwColActionTypeInsertCol:
		_begbcc.Value = "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl"
	case ST_rwColActionTypeDeleteCol:
		_begbcc.Value = "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl"
	}
	return _begbcc, nil
}

func (_fecg *CT_FutureMetadata) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _fecg.NameAttr)})
	if _fecg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_fecg.CountAttr)})
	}
	e.EncodeToken(start)
	if _fecg.Bk != nil {
		_eaggfc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ab\u006b"}}
		for _, _gdaec := range _fecg.Bk {
			e.EncodeElement(_gdaec, _eaggfc)
		}
	}
	if _fecg.ExtLst != nil {
		_fgfcc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fecg.ExtLst, _fgfcc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_LegacyDrawing and its children, prefixing error messages with path
func (_gged *CT_LegacyDrawing) ValidateWithPath(path string) error { return nil }

func (_cgdec *CT_Top10) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _affee := range start.Attr {
		if _affee.Name.Local == "\u0074\u006f\u0070" {
			_eeggf, _gcgcea := _eb.ParseBool(_affee.Value)
			if _gcgcea != nil {
				return _gcgcea
			}
			_cgdec.TopAttr = &_eeggf
			continue
		}
		if _affee.Name.Local == "\u0070e\u0072\u0063\u0065\u006e\u0074" {
			_dbagb, _fgda := _eb.ParseBool(_affee.Value)
			if _fgda != nil {
				return _fgda
			}
			_cgdec.PercentAttr = &_dbagb
			continue
		}
		if _affee.Name.Local == "\u0076\u0061\u006c" {
			_gbccd, _cagbf := _eb.ParseFloat(_affee.Value, 64)
			if _cagbf != nil {
				return _cagbf
			}
			_cgdec.ValAttr = _gbccd
			continue
		}
		if _affee.Name.Local == "\u0066i\u006c\u0074\u0065\u0072\u0056\u0061l" {
			_dfece, _abgfd := _eb.ParseFloat(_affee.Value, 64)
			if _abgfd != nil {
				return _abgfd
			}
			_cgdec.FilterValAttr = &_dfece
			continue
		}
	}
	for {
		_gcgda, _gceeb := d.Token()
		if _gceeb != nil {
			return _ec.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fT\u006f\u0070\u0031\u0030: \u0025\u0073", _gceeb)
		}
		if _bfagg, _eeafd := _gcgda.(_b.EndElement); _eeafd && _bfagg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Drawing and its children, prefixing error messages with path
func (_gbcec *CT_Drawing) ValidateWithPath(path string) error { return nil }

func (_agaaa *CT_TableStyleElement) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_agaaa.TypeAttr = ST_TableStyleType(1)
	for _, _cgcbef := range start.Attr {
		if _cgcbef.Name.Local == "\u0074\u0079\u0070\u0065" {
			_agaaa.TypeAttr.UnmarshalXMLAttr(_cgcbef)
			continue
		}
		if _cgcbef.Name.Local == "\u0073\u0069\u007a\u0065" {
			_bgggfd, _fggbc := _eb.ParseUint(_cgcbef.Value, 10, 32)
			if _fggbc != nil {
				return _fggbc
			}
			_gbebd := uint32(_bgggfd)
			_agaaa.SizeAttr = &_gbebd
			continue
		}
		if _cgcbef.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_aeacgb, _dfegdc := _eb.ParseUint(_cgcbef.Value, 10, 32)
			if _dfegdc != nil {
				return _dfegdc
			}
			_bgbec := uint32(_aeacgb)
			_agaaa.DxfIdAttr = &_bgbec
			continue
		}
	}
	for {
		_afbagd, _ecbbff := d.Token()
		if _ecbbff != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006ce\u0053t\u0079\u006c\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073", _ecbbff)
		}
		if _facbaf, _gdceaf := _afbagd.(_b.EndElement); _gdceaf && _facbaf.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gebecg ST_DdeValueType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dgeeba := _b.Attr{}
	_dgeeba.Name = name
	switch _gebecg {
	case ST_DdeValueTypeUnset:
		_dgeeba.Value = ""
	case ST_DdeValueTypeNil:
		_dgeeba.Value = "\u006e\u0069\u006c"
	case ST_DdeValueTypeB:
		_dgeeba.Value = "\u0062"
	case ST_DdeValueTypeN:
		_dgeeba.Value = "\u006e"
	case ST_DdeValueTypeE:
		_dgeeba.Value = "\u0065"
	case ST_DdeValueTypeStr:
		_dgeeba.Value = "\u0073\u0074\u0072"
	}
	return _dgeeba, nil
}

func NewCT_SheetIdMap() *CT_SheetIdMap { _ddebf := &CT_SheetIdMap{}; return _ddebf }

// ValidateWithPath validates the CT_FieldGroup and its children, prefixing error messages with path
func (_aceee *CT_FieldGroup) ValidateWithPath(path string) error {
	if _aceee.RangePr != nil {
		if _cgacg := _aceee.RangePr.ValidateWithPath(path + "\u002f\u0052\u0061\u006e\u0067\u0065\u0050\u0072"); _cgacg != nil {
			return _cgacg
		}
	}
	if _aceee.DiscretePr != nil {
		if _fcgcd := _aceee.DiscretePr.ValidateWithPath(path + "/\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"); _fcgcd != nil {
			return _fcgcd
		}
	}
	if _aceee.GroupItems != nil {
		if _efadg := _aceee.GroupItems.ValidateWithPath(path + "/\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"); _efadg != nil {
			return _efadg
		}
	}
	return nil
}

func (_eeged *CT_Filters) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eeged.BlankAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006c\u0061n\u006b"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_eeged.BlankAttr))})
	}
	if _eeged.CalendarTypeAttr != _bb.ST_CalendarTypeUnset {
		_gfcfe, _aeadc := _eeged.CalendarTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u0061\u006ce\u006e\u0064\u0061\u0072\u0054\u0079\u0070\u0065"})
		if _aeadc != nil {
			return _aeadc
		}
		start.Attr = append(start.Attr, _gfcfe)
	}
	e.EncodeToken(start)
	if _eeged.Filter != nil {
		_bacdc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u0074\u0065r"}}
		for _, _eacfbf := range _eeged.Filter {
			e.EncodeElement(_eacfbf, _bacdc)
		}
	}
	if _eeged.DateGroupItem != nil {
		_aacbcc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0064\u0061\u0074e\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d"}}
		for _, _efdde := range _eeged.DateGroupItem {
			e.EncodeElement(_efdde, _aacbcc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_MdxTuple struct {

	// Member Index Count
	CAttr *uint32

	// Server Formatting Culture Currency
	CtAttr *string

	// Server Formatting String Index
	SiAttr *uint32

	// Server Formatting Built-In Number Format Index
	FiAttr *uint32

	// Server Formatting Background Color
	BcAttr *string

	// Server Formatting Foreground Color
	FcAttr *string

	// Server Formatting Italic Font
	IAttr *bool

	// Server Formatting Underline Font
	UAttr *bool

	// Server Formatting Strikethrough Font
	StAttr *bool

	// Server Formatting Bold Font
	BAttr *bool

	// Member Unique Name Index
	N []*CT_MetadataStringIndex
}

func (_affacc *ST_DataConsolidateFunction) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_affacc = 0
	case "\u0061v\u0065\u0072\u0061\u0067\u0065":
		*_affacc = 1
	case "\u0063\u006f\u0075n\u0074":
		*_affacc = 2
	case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
		*_affacc = 3
	case "\u006d\u0061\u0078":
		*_affacc = 4
	case "\u006d\u0069\u006e":
		*_affacc = 5
	case "\u0070r\u006f\u0064\u0075\u0063\u0074":
		*_affacc = 6
	case "\u0073\u0074\u0064\u0044\u0065\u0076":
		*_affacc = 7
	case "\u0073t\u0064\u0044\u0065\u0076\u0070":
		*_affacc = 8
	case "\u0073\u0075\u006d":
		*_affacc = 9
	case "\u0076\u0061\u0072":
		*_affacc = 10
	case "\u0076\u0061\u0072\u0070":
		*_affacc = 11
	}
	return nil
}

type CT_ExternalCell struct {

	// Reference
	RAttr *string

	// Type
	TAttr ST_CellType

	// Value Metadata
	VmAttr *uint32

	// Value
	V *string
}

type ST_DateTimeGrouping byte

func (_caba ST_SourceType) Validate() error { return _caba.ValidateWithPath("") }

func (_afff *CT_BooleanProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fcg := range start.Attr {
		if _fcg.Name.Local == "\u0076\u0061\u006c" {
			_gfgd, _gbd := _eb.ParseBool(_fcg.Value)
			if _gbd != nil {
				return _gbd
			}
			_afff.ValAttr = &_gfgd
			continue
		}
	}
	for {
		_ddf, _eeaf := d.Token()
		if _eeaf != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0042\u006f\u006f\u006c\u0065\u0061\u006eP\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u003a\u0020\u0025\u0073", _eeaf)
		}
		if _cfc, _gcc := _ddf.(_b.EndElement); _gcc && _cfc.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Color and its children, prefixing error messages with path
func (_ffbe *CT_Color) ValidateWithPath(path string) error { return nil }

func (_cbaee *CT_OleObject) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbaee.ProgIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u0067\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_cbaee.ProgIdAttr)})
	}
	if _cbaee.DvAspectAttr != ST_DvAspectUnset {
		_gfdgb, _bbdagd := _cbaee.DvAspectAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0076\u0041\u0073\u0070\u0065\u0063\u0074"})
		if _bbdagd != nil {
			return _bbdagd
		}
		start.Attr = append(start.Attr, _gfdgb)
	}
	if _cbaee.LinkAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0069\u006e\u006b"}, Value: _ec.Sprintf("\u0025\u0076", *_cbaee.LinkAttr)})
	}
	if _cbaee.OleUpdateAttr != ST_OleUpdateUnset {
		_baddf, _beaga := _cbaee.OleUpdateAttr.MarshalXMLAttr(_b.Name{Local: "\u006fl\u0065\u0055\u0070\u0064\u0061\u0074e"})
		if _beaga != nil {
			return _beaga
		}
		start.Attr = append(start.Attr, _baddf)
	}
	if _cbaee.AutoLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u006f\u0061\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cbaee.AutoLoadAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0061\u0070\u0065\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _cbaee.ShapeIdAttr)})
	if _cbaee.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_cbaee.IdAttr)})
	}
	e.EncodeToken(start)
	if _cbaee.ObjectPr != nil {
		_cdcee := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u006f\u0062\u006a\u0065\u0063\u0074\u0050\u0072"}}
		e.EncodeElement(_cbaee.ObjectPr, _cdcee)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_XStringElement() *CT_XStringElement { _gdbfga := &CT_XStringElement{}; return _gdbfga }

// ValidateWithPath validates the CT_FontSize and its children, prefixing error messages with path
func (_fbadb *CT_FontSize) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_DdeValues and its children, prefixing error messages with path
func (_egcbb *CT_DdeValues) ValidateWithPath(path string) error {
	for _fbdec, _fdda := range _egcbb.Value {
		if _aadc := _fdda.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002fV\u0061\u006c\u0075\u0065\u005b\u0025\u0064\u005d", path, _fbdec)); _aadc != nil {
			return _aadc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SheetBackgroundPicture and its children, prefixing error messages with path
func (_dafag *CT_SheetBackgroundPicture) ValidateWithPath(path string) error { return nil }

func NewCT_CalcPr() *CT_CalcPr { _eab := &CT_CalcPr{}; return _eab }

func (_cafacg *CT_SmartTagTypes) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cafacg.SmartTagType != nil {
		_ccacf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065"}}
		for _, _bfeafc := range _cafacg.SmartTagType {
			e.EncodeElement(_bfeafc, _ccacf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CalcPr and its children, prefixing error messages with path
func (_dabef *CT_CalcPr) ValidateWithPath(path string) error {
	if _aedg := _dabef.CalcModeAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u006c\u0063\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _aedg != nil {
		return _aedg
	}
	if _eddb := _dabef.RefModeAttr.ValidateWithPath(path + "\u002f\u0052\u0065f\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _eddb != nil {
		return _eddb
	}
	return nil
}

func (_afgbd *CT_ChartsheetViews) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_geae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}}
	for _, _gafccd := range _afgbd.SheetView {
		e.EncodeElement(_gafccd, _geae)
	}
	if _afgbd.ExtLst != nil {
		_fgdd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_afgbd.ExtLst, _fgdd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Tables and its children
func (_fbcfa *CT_Tables) Validate() error {
	return _fbcfa.ValidateWithPath("\u0043T\u005f\u0054\u0061\u0062\u006c\u0065s")
}

// ValidateWithPath validates the CT_IgnoredError and its children, prefixing error messages with path
func (_gdcg *CT_IgnoredError) ValidateWithPath(path string) error { return nil }

func (_faga *CT_Connections) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gbgc:
	for {
		_dffb, _baec := d.Token()
		if _baec != nil {
			return _baec
		}
		switch _fagga := _dffb.(type) {
		case _b.StartElement:
			switch _fagga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_dccde := NewCT_Connection()
				if _ccdg := d.DecodeElement(_dccde, &_fagga); _ccdg != nil {
					return _ccdg
				}
				_faga.Connection = append(_faga.Connection, _dccde)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074i\u006fn\u0073\u0020\u0025\u0076", _fagga.Name)
				if _bagd := d.Skip(); _bagd != nil {
					return _bagd
				}
			}
		case _b.EndElement:
			break _gbgc
		case _b.CharData:
		}
	}
	return nil
}

type CT_Boolean struct {

	// Value
	VAttr bool

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Member Property Indexes
	X []*CT_X
}

const (
	ST_SmartTagShowUnset       ST_SmartTagShow = 0
	ST_SmartTagShowAll         ST_SmartTagShow = 1
	ST_SmartTagShowNone        ST_SmartTagShow = 2
	ST_SmartTagShowNoIndicator ST_SmartTagShow = 3
)

func (_ccdaga *ST_CellType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gadbe, _gbbdb := d.Token()
	if _gbbdb != nil {
		return _gbbdb
	}
	if _acccdg, _cdagg := _gadbe.(_b.EndElement); _cdagg && _acccdg.Name == start.Name {
		*_ccdaga = 1
		return nil
	}
	if _fadee, _afadfd := _gadbe.(_b.CharData); !_afadfd {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gadbe)
	} else {
		switch string(_fadee) {
		case "":
			*_ccdaga = 0
		case "\u0062":
			*_ccdaga = 1
		case "\u006e":
			*_ccdaga = 2
		case "\u0065":
			*_ccdaga = 3
		case "\u0073":
			*_ccdaga = 4
		case "\u0073\u0074\u0072":
			*_ccdaga = 5
		case "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r":
			*_ccdaga = 6
		}
	}
	_gadbe, _gbbdb = d.Token()
	if _gbbdb != nil {
		return _gbbdb
	}
	if _fbdea, _dddadd := _gadbe.(_b.EndElement); _dddadd && _fbdea.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gadbe)
}

func NewCT_CfRule() *CT_CfRule { _abge := &CT_CfRule{}; return _abge }

// ValidateWithPath validates the CT_DataValidation and its children, prefixing error messages with path
func (_babc *CT_DataValidation) ValidateWithPath(path string) error {
	if _dcebb := _babc.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _dcebb != nil {
		return _dcebb
	}
	if _bcbege := _babc.ErrorStyleAttr.ValidateWithPath(path + "\u002fE\u0072r\u006f\u0072\u0053\u0074\u0079\u006c\u0065\u0041\u0074\u0074\u0072"); _bcbege != nil {
		return _bcbege
	}
	if _efega := _babc.ImeModeAttr.ValidateWithPath(path + "\u002f\u0049\u006de\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _efega != nil {
		return _efega
	}
	if _baeg := _babc.OperatorAttr.ValidateWithPath(path + "\u002f\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072\u0041\u0074\u0074\u0072"); _baeg != nil {
		return _baeg
	}
	return nil
}

func (_ggffbg *VolTypes) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ggffbg.CT_VolTypes = *NewCT_VolTypes()
_cccgge:
	for {
		_eeeedb, _fcaec := d.Token()
		if _fcaec != nil {
			return _fcaec
		}
		switch _eeggb := _eeeedb.(type) {
		case _b.StartElement:
			switch _eeggb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}:
				_gcggc := NewCT_VolType()
				if _abebg := d.DecodeElement(_gcggc, &_eeggb); _abebg != nil {
					return _abebg
				}
				_ggffbg.VolType = append(_ggffbg.VolType, _gcggc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggffbg.ExtLst = NewCT_ExtensionList()
				if _eefgf := d.DecodeElement(_ggffbg.ExtLst, &_eeggb); _eefgf != nil {
					return _eefgf
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076", _eeggb.Name)
				if _fgcbd := d.Skip(); _fgcbd != nil {
					return _fgcbd
				}
			}
		case _b.EndElement:
			break _cccgge
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Connections and its children
func (_bceff *CT_Connections) Validate() error {
	return _bceff.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063t\u0069\u006f\u006e\u0073")
}

func NewCT_Scenario() *CT_Scenario { _dcfbd := &CT_Scenario{}; return _dcfbd }

const (
	ST_FileTypeUnset ST_FileType = 0
	ST_FileTypeMac   ST_FileType = 1
	ST_FileTypeWin   ST_FileType = 2
	ST_FileTypeDos   ST_FileType = 3
	ST_FileTypeLin   ST_FileType = 4
	ST_FileTypeOther ST_FileType = 5
)

func (_dccgd *CT_Scenario) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _dccgd.NameAttr)})
	if _dccgd.LockedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dccgd.LockedAttr))})
	}
	if _dccgd.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dccgd.HiddenAttr))})
	}
	if _dccgd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_dccgd.CountAttr)})
	}
	if _dccgd.UserAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_dccgd.UserAttr)})
	}
	if _dccgd.CommentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_dccgd.CommentAttr)})
	}
	e.EncodeToken(start)
	_dffaeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073"}}
	for _, _dfbca := range _dccgd.InputCells {
		e.EncodeElement(_dfbca, _dffaeb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_QueryTableDeletedFields and its children
func (_cdgddc *CT_QueryTableDeletedFields) Validate() error {
	return _cdgddc.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069e\u006c\u0064\u0073")
}

// Validate validates the CT_IndexedColors and its children
func (_cfcdc *CT_IndexedColors) Validate() error {
	return _cfcdc.ValidateWithPath("\u0043\u0054_\u0049\u006e\u0064e\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073")
}

// ValidateWithPath validates the CT_VolMain and its children, prefixing error messages with path
func (_cdbbc *CT_VolMain) ValidateWithPath(path string) error {
	for _acgdd, _eccce := range _cdbbc.Tp {
		if _cfcgd := _eccce.ValidateWithPath(_ec.Sprintf("\u0025s\u002f\u0054\u0070\u005b\u0025\u0064]", path, _acgdd)); _cfcgd != nil {
			return _cfcgd
		}
	}
	return nil
}

func (_cabga *CT_DataField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cabga.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_cabga.NameAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006c\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _cabga.FldAttr)})
	if _cabga.SubtotalAttr != ST_DataConsolidateFunctionUnset {
		_dcdba, _ebgd := _cabga.SubtotalAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0075\u0062\u0074\u006f\u0074\u0061\u006c"})
		if _ebgd != nil {
			return _ebgd
		}
		start.Attr = append(start.Attr, _dcdba)
	}
	if _cabga.ShowDataAsAttr != ST_ShowDataAsUnset {
		_acac, _dfdg := _cabga.ShowDataAsAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0068\u006f\u0077\u0044\u0061\u0074\u0061\u0041\u0073"})
		if _dfdg != nil {
			return _dfdg
		}
		start.Attr = append(start.Attr, _acac)
	}
	if _cabga.BaseFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062a\u0073\u0065\u0046\u0069\u0065\u006cd"}, Value: _ec.Sprintf("\u0025\u0076", *_cabga.BaseFieldAttr)})
	}
	if _cabga.BaseItemAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0073\u0065\u0049\u0074\u0065\u006d"}, Value: _ec.Sprintf("\u0025\u0076", *_cabga.BaseItemAttr)})
	}
	if _cabga.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_cabga.NumFmtIdAttr)})
	}
	e.EncodeToken(start)
	if _cabga.ExtLst != nil {
		_edeac := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cabga.ExtLst, _edeac)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type QueryTable struct{ CT_QueryTable }

func (_dgfdfa *ST_ItemType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dgfdfa = 0
	case "\u0064\u0061\u0074\u0061":
		*_dgfdfa = 1
	case "\u0064e\u0066\u0061\u0075\u006c\u0074":
		*_dgfdfa = 2
	case "\u0073\u0075\u006d":
		*_dgfdfa = 3
	case "\u0063\u006f\u0075\u006e\u0074\u0041":
		*_dgfdfa = 4
	case "\u0061\u0076\u0067":
		*_dgfdfa = 5
	case "\u006d\u0061\u0078":
		*_dgfdfa = 6
	case "\u006d\u0069\u006e":
		*_dgfdfa = 7
	case "\u0070r\u006f\u0064\u0075\u0063\u0074":
		*_dgfdfa = 8
	case "\u0063\u006f\u0075n\u0074":
		*_dgfdfa = 9
	case "\u0073\u0074\u0064\u0044\u0065\u0076":
		*_dgfdfa = 10
	case "\u0073t\u0064\u0044\u0065\u0076\u0050":
		*_dgfdfa = 11
	case "\u0076\u0061\u0072":
		*_dgfdfa = 12
	case "\u0076\u0061\u0072\u0050":
		*_dgfdfa = 13
	case "\u0067\u0072\u0061n\u0064":
		*_dgfdfa = 14
	case "\u0062\u006c\u0061n\u006b":
		*_dgfdfa = 15
	}
	return nil
}

func NewCT_OleItems() *CT_OleItems { _bdeege := &CT_OleItems{}; return _bdeege }

type CT_Tables struct {

	// Count of Tables
	CountAttr *uint32

	// No Value
	M []*CT_TableMissing

	// Character Value
	S []*CT_XStringElement

	// Index
	X []*CT_Index
}

func (_edaaa *CT_RowFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _edaaa.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_edaaa.CountAttr)})
	}
	e.EncodeToken(start)
	_deccc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064"}}
	for _, _fbbabe := range _edaaa.Field {
		e.EncodeElement(_fbbabe, _deccc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DynamicFilter and its children
func (_geffa *CT_DynamicFilter) Validate() error {
	return _geffa.ValidateWithPath("\u0043\u0054_\u0044\u0079\u006ea\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072")
}

func (_fbced *CT_QueryTable) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aagfd := range start.Attr {
		if _aagfd.Name.Local == "\u0061\u0064\u006a\u0075\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006eW\u0069\u0064\u0074\u0068" {
			_ccbdfd, _cdaaef := _eb.ParseBool(_aagfd.Value)
			if _cdaaef != nil {
				return _cdaaef
			}
			_fbced.AdjustColumnWidthAttr = &_ccbdfd
			continue
		}
		if _aagfd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cdege, _afdca := _aagfd.Value, error(nil)
			if _afdca != nil {
				return _afdca
			}
			_fbced.NameAttr = _cdege
			continue
		}
		if _aagfd.Name.Local == "\u0069\u006e\u0074e\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065" {
			_ccdad, _dbafb := _eb.ParseBool(_aagfd.Value)
			if _dbafb != nil {
				return _dbafb
			}
			_fbced.IntermediateAttr = &_ccdad
			continue
		}
		if _aagfd.Name.Local == "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073" {
			_cccba, _ggbdc := _eb.ParseBool(_aagfd.Value)
			if _ggbdc != nil {
				return _ggbdc
			}
			_fbced.RowNumbersAttr = &_cccba
			continue
		}
		if _aagfd.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_afbfdf, _aabcc := _eb.ParseUint(_aagfd.Value, 10, 32)
			if _aabcc != nil {
				return _aabcc
			}
			_fbced.ConnectionIdAttr = uint32(_afbfdf)
			continue
		}
		if _aagfd.Name.Local == "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_bbfgf, _gdabe := _eb.ParseBool(_aagfd.Value)
			if _gdabe != nil {
				return _gdabe
			}
			_fbced.BackgroundRefreshAttr = &_bbfgf
			continue
		}
		if _aagfd.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_edegf, _ebceg := _eb.ParseBool(_aagfd.Value)
			if _ebceg != nil {
				return _ebceg
			}
			_fbced.RefreshOnLoadAttr = &_edegf
			continue
		}
		if _aagfd.Name.Local == "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_eageb, _edfcab := _eb.ParseBool(_aagfd.Value)
			if _edfcab != nil {
				return _edfcab
			}
			_fbced.FillFormulasAttr = &_eageb
			continue
		}
		if _aagfd.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_gggaa, _ccccf := _eb.ParseBool(_aagfd.Value)
			if _ccccf != nil {
				return _ccccf
			}
			_fbced.ApplyNumberFormatsAttr = &_gggaa
			continue
		}
		if _aagfd.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ggfdg, _gadde := _eb.ParseBool(_aagfd.Value)
			if _gadde != nil {
				return _gadde
			}
			_fbced.ApplyFontFormatsAttr = &_ggfdg
			continue
		}
		if _aagfd.Name.Local == "\u0066\u0069\u0072\u0073tB\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065\u0066\u0072\u0065s\u0068" {
			_eafff, _gbbe := _eb.ParseBool(_aagfd.Value)
			if _gbbe != nil {
				return _gbbe
			}
			_fbced.FirstBackgroundRefreshAttr = &_eafff
			continue
		}
		if _aagfd.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_dcacg, _cdedd := _eb.ParseUint(_aagfd.Value, 10, 32)
			if _cdedd != nil {
				return _cdedd
			}
			_baffa := uint32(_dcacg)
			_fbced.AutoFormatIdAttr = &_baffa
			continue
		}
		if _aagfd.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_fgdgb, _badg := _eb.ParseBool(_aagfd.Value)
			if _badg != nil {
				return _badg
			}
			_fbced.ApplyAlignmentFormatsAttr = &_fgdgb
			continue
		}
		if _aagfd.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_ggabf, _cfgfe := _eb.ParseBool(_aagfd.Value)
			if _cfgfe != nil {
				return _cfgfe
			}
			_fbced.DisableRefreshAttr = &_ggabf
			continue
		}
		if _aagfd.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_ceafa, _bgaf := _eb.ParseBool(_aagfd.Value)
			if _bgaf != nil {
				return _bgaf
			}
			_fbced.ApplyBorderFormatsAttr = &_ceafa
			continue
		}
		if _aagfd.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_cgcbe, _afddcc := _eb.ParseBool(_aagfd.Value)
			if _afddcc != nil {
				return _afddcc
			}
			_fbced.PreserveFormattingAttr = &_cgcbe
			continue
		}
		if _aagfd.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_abgc, _ebdea := _eb.ParseBool(_aagfd.Value)
			if _ebdea != nil {
				return _ebdea
			}
			_fbced.ApplyPatternFormatsAttr = &_abgc
			continue
		}
		if _aagfd.Name.Local == "\u0067\u0072\u006f\u0077\u0053\u0068\u0072\u0069\u006ek\u0054\u0079\u0070\u0065" {
			_fbced.GrowShrinkTypeAttr.UnmarshalXMLAttr(_aagfd)
			continue
		}
		if _aagfd.Name.Local == "d\u0069\u0073\u0061\u0062\u006c\u0065\u0045\u0064\u0069\u0074" {
			_bbfde, _bgdad := _eb.ParseBool(_aagfd.Value)
			if _bgdad != nil {
				return _bgdad
			}
			_fbced.DisableEditAttr = &_bbfde
			continue
		}
		if _aagfd.Name.Local == "\u0068e\u0061\u0064\u0065\u0072\u0073" {
			_gebcg, _bgcfg := _eb.ParseBool(_aagfd.Value)
			if _bgcfg != nil {
				return _bgcfg
			}
			_fbced.HeadersAttr = &_gebcg
			continue
		}
		if _aagfd.Name.Local == "\u0072\u0065m\u006f\u0076\u0065D\u0061\u0074\u0061\u004f\u006e\u0053\u0061\u0076\u0065" {
			_ccgag, _gfdbgg := _eb.ParseBool(_aagfd.Value)
			if _gfdbgg != nil {
				return _gfdbgg
			}
			_fbced.RemoveDataOnSaveAttr = &_ccgag
			continue
		}
		if _aagfd.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gaddf, _eddea := _eb.ParseBool(_aagfd.Value)
			if _eddea != nil {
				return _eddea
			}
			_fbced.ApplyWidthHeightFormatsAttr = &_gaddf
			continue
		}
	}
_ggdcg:
	for {
		_eabda, _eadga := d.Token()
		if _eadga != nil {
			return _eadga
		}
		switch _fcfea := _eabda.(type) {
		case _b.StartElement:
			switch _fcfea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}:
				_fbced.QueryTableRefresh = NewCT_QueryTableRefresh()
				if _gdbdg := d.DecodeElement(_fbced.QueryTableRefresh, &_fcfea); _gdbdg != nil {
					return _gdbdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbced.ExtLst = NewCT_ExtensionList()
				if _ccdba := d.DecodeElement(_fbced.ExtLst, &_fcfea); _ccdba != nil {
					return _ccdba
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051u\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065 \u0025\u0076", _fcfea.Name)
				if _baadg := d.Skip(); _baadg != nil {
					return _baadg
				}
			}
		case _b.EndElement:
			break _ggdcg
		case _b.CharData:
		}
	}
	return nil
}

func (_bccd *CT_DataFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bccd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_bccd.CountAttr)})
	}
	e.EncodeToken(start)
	_fbcb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064"}}
	for _, _dgbacb := range _bccd.DataField {
		e.EncodeElement(_dgbacb, _fbcb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_deabf *CT_MergeCell) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", _deabf.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_eddec *CT_NumFmt) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgeba := range start.Attr {
		if _dgeba.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_fdabc, _accb := _eb.ParseUint(_dgeba.Value, 10, 32)
			if _accb != nil {
				return _accb
			}
			_eddec.NumFmtIdAttr = uint32(_fdabc)
			continue
		}
		if _dgeba.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u0064\u0065" {
			_gfccb, _aacgg := _dgeba.Value, error(nil)
			if _aacgg != nil {
				return _aacgg
			}
			_eddec.FormatCodeAttr = _gfccb
			continue
		}
	}
	for {
		_gbgccg, _eecbd := d.Token()
		if _eecbd != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004e\u0075\u006dF\u006d\u0074\u003a\u0020\u0025\u0073", _eecbd)
		}
		if _fcdcg, _caegb := _gbgccg.(_b.EndElement); _caegb && _fcdcg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dfbga *CT_PageSetup) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bccgd := range start.Attr {
		if _bccgd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bccgd.Name.Local == "\u0069\u0064" || _bccgd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bccgd.Name.Local == "\u0069\u0064" {
			_fgaeag, _adfdf := _bccgd.Value, error(nil)
			if _adfdf != nil {
				return _adfdf
			}
			_dfbga.IdAttr = &_fgaeag
			continue
		}
		if _bccgd.Name.Local == "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae" {
			_bdcae, _accff := _eb.ParseUint(_bccgd.Value, 10, 32)
			if _accff != nil {
				return _accff
			}
			_dgbab := uint32(_bdcae)
			_dfbga.PaperSizeAttr = &_dgbab
			continue
		}
		if _bccgd.Name.Local == "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065" {
			_bdgcf, _ebeb := _eb.ParseBool(_bccgd.Value)
			if _ebeb != nil {
				return _ebeb
			}
			_dfbga.BlackAndWhiteAttr = &_bdgcf
			continue
		}
		if _bccgd.Name.Local == "\u0064\u0072\u0061f\u0074" {
			_egbab, _efbgg := _eb.ParseBool(_bccgd.Value)
			if _efbgg != nil {
				return _efbgg
			}
			_dfbga.DraftAttr = &_egbab
			continue
		}
		if _bccgd.Name.Local == "\u0073\u0063\u0061l\u0065" {
			_fbfeg, _abdcb := _eb.ParseUint(_bccgd.Value, 10, 32)
			if _abdcb != nil {
				return _abdcb
			}
			_aafa := uint32(_fbfeg)
			_dfbga.ScaleAttr = &_aafa
			continue
		}
		if _bccgd.Name.Local == "\u0063\u0065\u006cl\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_dfbga.CellCommentsAttr.UnmarshalXMLAttr(_bccgd)
			continue
		}
		if _bccgd.Name.Local == "\u0066\u0069\u0074\u0054\u006f\u0057\u0069\u0064\u0074\u0068" {
			_bfefb, _cggbcg := _eb.ParseUint(_bccgd.Value, 10, 32)
			if _cggbcg != nil {
				return _cggbcg
			}
			_eagbf := uint32(_bfefb)
			_dfbga.FitToWidthAttr = &_eagbf
			continue
		}
		if _bccgd.Name.Local == "\u0070a\u0067\u0065\u004f\u0072\u0064\u0065r" {
			_dfbga.PageOrderAttr.UnmarshalXMLAttr(_bccgd)
			continue
		}
		if _bccgd.Name.Local == "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e" {
			_dfbga.OrientationAttr.UnmarshalXMLAttr(_bccgd)
			continue
		}
		if _bccgd.Name.Local == "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074" {
			_gcegg, _bage := _bccgd.Value, error(nil)
			if _bage != nil {
				return _bage
			}
			_dfbga.PaperHeightAttr = &_gcegg
			continue
		}
		if _bccgd.Name.Local == "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068" {
			_bbeagb, _bfdfb := _bccgd.Value, error(nil)
			if _bfdfb != nil {
				return _bfdfb
			}
			_dfbga.PaperWidthAttr = &_bbeagb
			continue
		}
		if _bccgd.Name.Local == "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072" {
			_bfebg, _cdbfe := _eb.ParseUint(_bccgd.Value, 10, 32)
			if _cdbfe != nil {
				return _cdbfe
			}
			_gbcdff := uint32(_bfebg)
			_dfbga.FirstPageNumberAttr = &_gbcdff
			continue
		}
		if _bccgd.Name.Local == "f\u0069\u0074\u0054\u006f\u0048\u0065\u0069\u0067\u0068\u0074" {
			_gbec, _fdcdf := _eb.ParseUint(_bccgd.Value, 10, 32)
			if _fdcdf != nil {
				return _fdcdf
			}
			_dgagdb := uint32(_gbec)
			_dfbga.FitToHeightAttr = &_dgagdb
			continue
		}
		if _bccgd.Name.Local == "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072" {
			_fefbd, _cffcf := _eb.ParseBool(_bccgd.Value)
			if _cffcf != nil {
				return _cffcf
			}
			_dfbga.UseFirstPageNumberAttr = &_fefbd
			continue
		}
		if _bccgd.Name.Local == "\u0065\u0072\u0072\u006f\u0072\u0073" {
			_dfbga.ErrorsAttr.UnmarshalXMLAttr(_bccgd)
			continue
		}
		if _bccgd.Name.Local == "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069" {
			_acbc, _fdfbef := _eb.ParseUint(_bccgd.Value, 10, 32)
			if _fdfbef != nil {
				return _fdfbef
			}
			_badegd := uint32(_acbc)
			_dfbga.HorizontalDpiAttr = &_badegd
			continue
		}
		if _bccgd.Name.Local == "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069" {
			_cfbc, _ecbfba := _eb.ParseUint(_bccgd.Value, 10, 32)
			if _ecbfba != nil {
				return _ecbfba
			}
			_dadae := uint32(_cfbc)
			_dfbga.VerticalDpiAttr = &_dadae
			continue
		}
		if _bccgd.Name.Local == "\u0063\u006f\u0070\u0069\u0065\u0073" {
			_cagcd, _ddgbf := _eb.ParseUint(_bccgd.Value, 10, 32)
			if _ddgbf != nil {
				return _ddgbf
			}
			_aeada := uint32(_cagcd)
			_dfbga.CopiesAttr = &_aeada
			continue
		}
		if _bccgd.Name.Local == "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073" {
			_fcaee, _efddc := _eb.ParseBool(_bccgd.Value)
			if _efddc != nil {
				return _efddc
			}
			_dfbga.UsePrinterDefaultsAttr = &_fcaee
			continue
		}
	}
	for {
		_begceb, _daegf := d.Token()
		if _daegf != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0061g\u0065\u0053\u0065\u0074\u0075\u0070\u003a\u0020\u0025\u0073", _daegf)
		}
		if _gfgfb, _bfggg := _begceb.(_b.EndElement); _bfggg && _gfgfb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ccde *CT_PivotAreaReferences) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ccde.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ccde.CountAttr)})
	}
	e.EncodeToken(start)
	_cedfb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065"}}
	for _, _bbbg := range _ccde.Reference {
		e.EncodeElement(_bbbg, _cedfb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the StyleSheet and its children
func (_edfgeb *StyleSheet) Validate() error {
	return _edfgeb.ValidateWithPath("\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074")
}

// ValidateWithPath validates the CT_CellProtection and its children, prefixing error messages with path
func (_begb *CT_CellProtection) ValidateWithPath(path string) error { return nil }

func (_eecge *CT_Parameters) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dfedf := range start.Attr {
		if _dfedf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fdeeg, _aedbf := _eb.ParseUint(_dfedf.Value, 10, 32)
			if _aedbf != nil {
				return _aedbf
			}
			_bgccf := uint32(_fdeeg)
			_eecge.CountAttr = &_bgccf
			continue
		}
	}
_ggead:
	for {
		_cgdd, _cddab := d.Token()
		if _cddab != nil {
			return _cddab
		}
		switch _abcbd := _cgdd.(type) {
		case _b.StartElement:
			switch _abcbd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0072\u0061\u006d\u0065\u0074\u0065r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0072\u0061\u006d\u0065\u0074\u0065r"}:
				_gfedf := NewCT_Parameter()
				if _eaabb := d.DecodeElement(_gfedf, &_abcbd); _eaabb != nil {
					return _eaabb
				}
				_eecge.Parameter = append(_eecge.Parameter, _gfedf)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050a\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 \u0025\u0076", _abcbd.Name)
				if _bfefda := d.Skip(); _bfefda != nil {
					return _bfefda
				}
			}
		case _b.EndElement:
			break _ggead
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Controls and its children
func (_fbba *CT_Controls) Validate() error {
	return _fbba.ValidateWithPath("C\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0073")
}

func (_bbafe ST_UnderlineValues) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bbafe.String(), start)
}

func (_bdgbe *CT_FontFamily) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdgbe.ValAttr = 0
	for _, _bdafbe := range start.Attr {
		if _bdafbe.Name.Local == "\u0076\u0061\u006c" {
			_fbce, _fcece := _eb.ParseInt(_bdafbe.Value, 10, 64)
			if _fcece != nil {
				return _fcece
			}
			_bdgbe.ValAttr = _fbce
			continue
		}
	}
	for {
		_eceb, _bece := d.Token()
		if _bece != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0046o\u006et\u0046a\u006d\u0069\u006c\u0079\u003a\u0020\u0025s", _bece)
		}
		if _ebaf, _abdga := _eceb.(_b.EndElement); _abdga && _ebaf.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Stylesheet struct {

	// Number Formats
	NumFmts *CT_NumFmts

	// Fonts
	Fonts *CT_Fonts

	// Fills
	Fills *CT_Fills

	// Borders
	Borders *CT_Borders

	// Formatting Records
	CellStyleXfs *CT_CellStyleXfs

	// Cell Formats
	CellXfs *CT_CellXfs

	// Cell Styles
	CellStyles *CT_CellStyles

	// Formats
	Dxfs *CT_Dxfs

	// Table Styles
	TableStyles *CT_TableStyles

	// Colors
	Colors *CT_Colors

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_DrawingHF and its children, prefixing error messages with path
func (_gbabg *CT_DrawingHF) ValidateWithPath(path string) error { return nil }

func (_fged *CT_Connection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _faabc := range start.Attr {
		if _faabc.Name.Local == "\u0064e\u006c\u0065\u0074\u0065\u0064" {
			_bbacf, _dbabb := _eb.ParseBool(_faabc.Value)
			if _dbabb != nil {
				return _dbabb
			}
			_fged.DeletedAttr = &_bbacf
			continue
		}
		if _faabc.Name.Local == "\u0069\u0064" {
			_eaece, _affeb := _eb.ParseUint(_faabc.Value, 10, 32)
			if _affeb != nil {
				return _affeb
			}
			_fged.IdAttr = uint32(_eaece)
			continue
		}
		if _faabc.Name.Local == "o\u006e\u006c\u0079\u0055se\u0043o\u006e\u006e\u0065\u0063\u0074i\u006f\u006e\u0046\u0069\u006c\u0065" {
			_abccf, _acca := _eb.ParseBool(_faabc.Value)
			if _acca != nil {
				return _acca
			}
			_fged.OnlyUseConnectionFileAttr = &_abccf
			continue
		}
		if _faabc.Name.Local == "\u006fd\u0063\u0046\u0069\u006c\u0065" {
			_dcaea, _cfdf := _faabc.Value, error(nil)
			if _cfdf != nil {
				return _cfdf
			}
			_fged.OdcFileAttr = &_dcaea
			continue
		}
		if _faabc.Name.Local == "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064" {
			_egecd, _beff := _eb.ParseBool(_faabc.Value)
			if _beff != nil {
				return _beff
			}
			_fged.BackgroundAttr = &_egecd
			continue
		}
		if _faabc.Name.Local == "\u0069\u006e\u0074\u0065\u0072\u0076\u0061\u006c" {
			_ecgdb, _cdbe := _eb.ParseUint(_faabc.Value, 10, 32)
			if _cdbe != nil {
				return _cdbe
			}
			_fdaa := uint32(_ecgdb)
			_fged.IntervalAttr = &_fdaa
			continue
		}
		if _faabc.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_fagdg, _acdad := _eb.ParseBool(_faabc.Value)
			if _acdad != nil {
				return _acdad
			}
			_fged.RefreshOnLoadAttr = &_fagdg
			continue
		}
		if _faabc.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_efbag, _ecgcb := _faabc.Value, error(nil)
			if _ecgcb != nil {
				return _ecgcb
			}
			_fged.DescriptionAttr = &_efbag
			continue
		}
		if _faabc.Name.Local == "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061" {
			_dabcg, _ecfbb := _eb.ParseBool(_faabc.Value)
			if _ecfbb != nil {
				return _ecfbb
			}
			_fged.SaveDataAttr = &_dabcg
			continue
		}
		if _faabc.Name.Local == "\u0072e\u0063o\u006e\u006e\u0065\u0063\u0074i\u006f\u006eM\u0065\u0074\u0068\u006f\u0064" {
			_fded, _dgbace := _eb.ParseUint(_faabc.Value, 10, 32)
			if _dgbace != nil {
				return _dgbace
			}
			_acfgb := uint32(_fded)
			_fged.ReconnectionMethodAttr = &_acfgb
			continue
		}
		if _faabc.Name.Local == "c\u0072\u0065\u0064\u0065\u006e\u0074\u0069\u0061\u006c\u0073" {
			_fged.CredentialsAttr.UnmarshalXMLAttr(_faabc)
			continue
		}
		if _faabc.Name.Local == "\u006be\u0065\u0070\u0041\u006c\u0069\u0076e" {
			_gdaa, _geca := _eb.ParseBool(_faabc.Value)
			if _geca != nil {
				return _geca
			}
			_fged.KeepAliveAttr = &_gdaa
			continue
		}
		if _faabc.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065" {
			_ccae, _gbdda := _faabc.Value, error(nil)
			if _gbdda != nil {
				return _gbdda
			}
			_fged.SourceFileAttr = &_ccae
			continue
		}
		if _faabc.Name.Local == "\u0073\u0069\u006e\u0067\u006c\u0065\u0053\u0069\u0067n\u004f\u006e\u0049\u0064" {
			_defg, _gfbff := _faabc.Value, error(nil)
			if _gfbff != nil {
				return _gfbff
			}
			_fged.SingleSignOnIdAttr = &_defg
			continue
		}
		if _faabc.Name.Local == "\u0073\u0061\u0076e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_cabd, _fagda := _eb.ParseBool(_faabc.Value)
			if _fagda != nil {
				return _fagda
			}
			_fged.SavePasswordAttr = &_cabd
			continue
		}
		if _faabc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cede, _gcaf := _faabc.Value, error(nil)
			if _gcaf != nil {
				return _gcaf
			}
			_fged.NameAttr = &_cede
			continue
		}
		if _faabc.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_deccb, _ebdd := _eb.ParseUint(_faabc.Value, 10, 8)
			if _ebdd != nil {
				return _ebdd
			}
			_fged.RefreshedVersionAttr = uint8(_deccb)
			continue
		}
		if _faabc.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_bdffa, _adcg := _eb.ParseUint(_faabc.Value, 10, 8)
			if _adcg != nil {
				return _adcg
			}
			_eddf := uint8(_bdffa)
			_fged.MinRefreshableVersionAttr = &_eddf
			continue
		}
		if _faabc.Name.Local == "\u006e\u0065\u0077" {
			_fagc, _bcfa := _eb.ParseBool(_faabc.Value)
			if _bcfa != nil {
				return _bcfa
			}
			_fged.NewAttr = &_fagc
			continue
		}
		if _faabc.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ddbe, _egbc := _eb.ParseUint(_faabc.Value, 10, 32)
			if _egbc != nil {
				return _egbc
			}
			_dfdf := uint32(_ddbe)
			_fged.TypeAttr = &_dfdf
			continue
		}
	}
_ebcff:
	for {
		_abec, _gadb := d.Token()
		if _gadb != nil {
			return _gadb
		}
		switch _fdea := _abec.(type) {
		case _b.StartElement:
			switch _fdea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0062\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0062\u0050\u0072"}:
				_fged.DbPr = NewCT_DbPr()
				if _ddeb := d.DecodeElement(_fged.DbPr, &_fdea); _ddeb != nil {
					return _ddeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0061\u0070\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0061\u0070\u0050\u0072"}:
				_fged.OlapPr = NewCT_OlapPr()
				if _dbac := d.DecodeElement(_fged.OlapPr, &_fdea); _dbac != nil {
					return _dbac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}:
				_fged.WebPr = NewCT_WebPr()
				if _fcdfc := d.DecodeElement(_fged.WebPr, &_fdea); _fcdfc != nil {
					return _fcdfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0050\u0072"}:
				_fged.TextPr = NewCT_TextPr()
				if _agcg := d.DecodeElement(_fged.TextPr, &_fdea); _agcg != nil {
					return _agcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"}:
				_fged.Parameters = NewCT_Parameters()
				if _dgdf := d.DecodeElement(_fged.Parameters, &_fdea); _dgdf != nil {
					return _dgdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fged.ExtLst = NewCT_ExtensionList()
				if _abff := d.DecodeElement(_fged.ExtLst, &_fdea); _abff != nil {
					return _abff
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043o\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e \u0025\u0076", _fdea.Name)
				if _ceda := d.Skip(); _ceda != nil {
					return _ceda
				}
			}
		case _b.EndElement:
			break _ebcff
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionAutoFormatting and its children, prefixing error messages with path
func (_fbcc *CT_RevisionAutoFormatting) ValidateWithPath(path string) error { return nil }

func NewCT_TableColumn() *CT_TableColumn { _aadbba := &CT_TableColumn{}; return _aadbba }

func (_gebaf *CT_MergeCells) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eaecbb := range start.Attr {
		if _eaecbb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_edge, _faabe := _eb.ParseUint(_eaecbb.Value, 10, 32)
			if _faabe != nil {
				return _faabe
			}
			_gffef := uint32(_edge)
			_gebaf.CountAttr = &_gffef
			continue
		}
	}
_fecgg:
	for {
		_fbac, _gddgab := d.Token()
		if _gddgab != nil {
			return _gddgab
		}
		switch _feaef := _fbac.(type) {
		case _b.StartElement:
			switch _feaef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0072\u0067\u0065\u0043\u0065\u006cl"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0072\u0067\u0065\u0043\u0065\u006cl"}:
				_cfddb := NewCT_MergeCell()
				if _fbdee := d.DecodeElement(_cfddb, &_feaef); _fbdee != nil {
					return _fbdee
				}
				_gebaf.MergeCell = append(_gebaf.MergeCell, _cfddb)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004de\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073 \u0025\u0076", _feaef.Name)
				if _dgdfb := d.Skip(); _dgdfb != nil {
					return _dgdfb
				}
			}
		case _b.EndElement:
			break _fecgg
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ServerFormats and its children, prefixing error messages with path
func (_ebagg *CT_ServerFormats) ValidateWithPath(path string) error {
	for _gegff, _beagd := range _ebagg.ServerFormat {
		if _bdggf := _beagd.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0053er\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u005b\u0025\u0064\u005d", path, _gegff)); _bdggf != nil {
			return _bdggf
		}
	}
	return nil
}

// Validate validates the CT_Pages and its children
func (_eafcc *CT_Pages) Validate() error {
	return _eafcc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0073")
}

const (
	ST_TableTypeUnset      ST_TableType = 0
	ST_TableTypeWorksheet  ST_TableType = 1
	ST_TableTypeXml        ST_TableType = 2
	ST_TableTypeQueryTable ST_TableType = 3
)

// Validate validates the CT_PivotHierarchies and its children
func (_cffbc *CT_PivotHierarchies) Validate() error {
	return _cffbc.ValidateWithPath("\u0043\u0054\u005f\u0050iv\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073")
}

// Validate validates the CT_TableColumns and its children
func (_cgffc *CT_TableColumns) Validate() error {
	return _cgffc.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073")
}

// ValidateWithPath validates the CT_FileSharing and its children, prefixing error messages with path
func (_bfae *CT_FileSharing) ValidateWithPath(path string) error { return nil }

func (_fgfgf ST_FormulaExpression) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dgdab := _b.Attr{}
	_dgdab.Name = name
	switch _fgfgf {
	case ST_FormulaExpressionUnset:
		_dgdab.Value = ""
	case ST_FormulaExpressionRef:
		_dgdab.Value = "\u0072\u0065\u0066"
	case ST_FormulaExpressionRefError:
		_dgdab.Value = "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072"
	case ST_FormulaExpressionArea:
		_dgdab.Value = "\u0061\u0072\u0065\u0061"
	case ST_FormulaExpressionAreaError:
		_dgdab.Value = "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr"
	case ST_FormulaExpressionComputedArea:
		_dgdab.Value = "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061"
	}
	return _dgdab, nil
}

// ValidateWithPath validates the CT_CellStyle and its children, prefixing error messages with path
func (_bbbf *CT_CellStyle) ValidateWithPath(path string) error {
	if _bbbf.ExtLst != nil {
		if _fegc := _bbbf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fegc != nil {
			return _fegc
		}
	}
	return nil
}

func (_eba *CT_Border) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _geg := range start.Attr {
		if _geg.Name.Local == "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c\u0055\u0070" {
			_cff, _bcg := _eb.ParseBool(_geg.Value)
			if _bcg != nil {
				return _bcg
			}
			_eba.DiagonalUpAttr = &_cff
			continue
		}
		if _geg.Name.Local == "\u0064\u0069\u0061g\u006f\u006e\u0061\u006c\u0044\u006f\u0077\u006e" {
			_afdg, _ggb := _eb.ParseBool(_geg.Value)
			if _ggb != nil {
				return _ggb
			}
			_eba.DiagonalDownAttr = &_afdg
			continue
		}
		if _geg.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_cde, _fbca := _eb.ParseBool(_geg.Value)
			if _fbca != nil {
				return _fbca
			}
			_eba.OutlineAttr = &_cde
			continue
		}
	}
_deff:
	for {
		_gfe, _agb := d.Token()
		if _agb != nil {
			return _agb
		}
		switch _cad := _gfe.(type) {
		case _b.StartElement:
			switch _cad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0061r\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0061r\u0074"}:
				_eba.Start = NewCT_BorderPr()
				if _edcfa := d.DecodeElement(_eba.Start, &_cad); _edcfa != nil {
					return _edcfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}:
				_eba.End = NewCT_BorderPr()
				if _baa := d.DecodeElement(_eba.End, &_cad); _baa != nil {
					return _baa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}:
				_eba.Left = NewCT_BorderPr()
				if _gea := d.DecodeElement(_eba.Left, &_cad); _gea != nil {
					return _gea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}:
				_eba.Right = NewCT_BorderPr()
				if _ffd := d.DecodeElement(_eba.Right, &_cad); _ffd != nil {
					return _ffd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}:
				_eba.Top = NewCT_BorderPr()
				if _fcgc := d.DecodeElement(_eba.Top, &_cad); _fcgc != nil {
					return _fcgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}:
				_eba.Bottom = NewCT_BorderPr()
				if _cbff := d.DecodeElement(_eba.Bottom, &_cad); _cbff != nil {
					return _cbff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c"}:
				_eba.Diagonal = NewCT_BorderPr()
				if _bbd := d.DecodeElement(_eba.Diagonal, &_cad); _bbd != nil {
					return _bbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}:
				_eba.Vertical = NewCT_BorderPr()
				if _dbea := d.DecodeElement(_eba.Vertical, &_cad); _dbea != nil {
					return _dbea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"}:
				_eba.Horizontal = NewCT_BorderPr()
				if _afc := d.DecodeElement(_eba.Horizontal, &_cad); _afc != nil {
					return _afc
				}
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0042\u006f\u0072d\u0065\u0072 \u0025\u0076", _cad.Name)
				if _ccd := d.Skip(); _ccd != nil {
					return _ccd
				}
			}
		case _b.EndElement:
			break _deff
		case _b.CharData:
		}
	}
	return nil
}

func (_efeec ST_CellType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fadeca := _b.Attr{}
	_fadeca.Name = name
	switch _efeec {
	case ST_CellTypeUnset:
		_fadeca.Value = ""
	case ST_CellTypeB:
		_fadeca.Value = "\u0062"
	case ST_CellTypeN:
		_fadeca.Value = "\u006e"
	case ST_CellTypeE:
		_fadeca.Value = "\u0065"
	case ST_CellTypeS:
		_fadeca.Value = "\u0073"
	case ST_CellTypeStr:
		_fadeca.Value = "\u0073\u0074\u0072"
	case ST_CellTypeInlineStr:
		_fadeca.Value = "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r"
	}
	return _fadeca, nil
}

type CT_DynamicFilter struct {

	// Dynamic filter type
	TypeAttr ST_DynamicFilterType

	// Value
	ValAttr *float64

	// ISO Value
	ValIsoAttr *_g.Time

	// Max Value
	MaxValAttr *float64

	// Max ISO Value
	MaxValIsoAttr *_g.Time
}

// ValidateWithPath validates the CT_PivotArea and its children, prefixing error messages with path
func (_affaa *CT_PivotArea) ValidateWithPath(path string) error {
	if _abfeb := _affaa.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _abfeb != nil {
		return _abfeb
	}
	if _aagee := _affaa.AxisAttr.ValidateWithPath(path + "\u002fA\u0078\u0069\u0073\u0041\u0074\u0074r"); _aagee != nil {
		return _aagee
	}
	if _affaa.References != nil {
		if _ffced := _affaa.References.ValidateWithPath(path + "/\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"); _ffced != nil {
			return _ffced
		}
	}
	if _affaa.ExtLst != nil {
		if _geggd := _affaa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _geggd != nil {
			return _geggd
		}
	}
	return nil
}

// Validate validates the CT_Dxfs and its children
func (_fgec *CT_Dxfs) Validate() error {
	return _fgec.ValidateWithPath("\u0043T\u005f\u0044\u0078\u0066\u0073")
}

func (_afafb ST_CredMethod) Validate() error { return _afafb.ValidateWithPath("") }

type CT_PivotSelection struct {

	// Pane
	PaneAttr ST_Pane

	// Show Header
	ShowHeaderAttr *bool

	// Label
	LabelAttr *bool

	// Data Selection
	DataAttr *bool

	// Extendable
	ExtendableAttr *bool

	// Selection Count
	CountAttr *uint32

	// Axis
	AxisAttr ST_Axis

	// Dimension
	DimensionAttr *uint32

	// Start
	StartAttr *uint32

	// Minimum
	MinAttr *uint32

	// Maximum
	MaxAttr *uint32

	// Active Row
	ActiveRowAttr *uint32

	// Active Column
	ActiveColAttr *uint32

	// Previous Row
	PreviousRowAttr *uint32

	// Previous Column Selection
	PreviousColAttr *uint32

	// Click Count
	ClickAttr *uint32
	IdAttr    *string

	// Pivot Area
	PivotArea *CT_PivotArea
}

type CT_DataFields struct {

	// Data Items Count
	CountAttr *uint32

	// Data Field Item
	DataField []*CT_DataField
}

// ValidateWithPath validates the CT_Query and its children, prefixing error messages with path
func (_dgdegf *CT_Query) ValidateWithPath(path string) error {
	if _dgdegf.Tpls != nil {
		if _gcca := _dgdegf.Tpls.ValidateWithPath(path + "\u002f\u0054\u0070l\u0073"); _gcca != nil {
			return _gcca
		}
	}
	return nil
}

func (_cfadb *CT_ExternalReferences) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dafea:
	for {
		_gegcf, _abcea := d.Token()
		if _abcea != nil {
			return _abcea
		}
		switch _ggff := _gegcf.(type) {
		case _b.StartElement:
			switch _ggff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065r\u0065\u006e\u0063\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065r\u0065\u006e\u0063\u0065"}:
				_eaaf := NewCT_ExternalReference()
				if _afdb := d.DecodeElement(_eaaf, &_ggff); _afdb != nil {
					return _afdb
				}
				_cfadb.ExternalReference = append(_cfadb.ExternalReference, _eaaf)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073\u0020\u0025\u0076", _ggff.Name)
				if _abaad := d.Skip(); _abaad != nil {
					return _abaad
				}
			}
		case _b.EndElement:
			break _dafea
		case _b.CharData:
		}
	}
	return nil
}

func (_gffbd ST_HtmlFmt) ValidateWithPath(path string) error {
	switch _gffbd {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gffbd))
	}
	return nil
}

func (_abdae ST_CfvoType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bacbcd := _b.Attr{}
	_bacbcd.Name = name
	switch _abdae {
	case ST_CfvoTypeUnset:
		_bacbcd.Value = ""
	case ST_CfvoTypeNum:
		_bacbcd.Value = "\u006e\u0075\u006d"
	case ST_CfvoTypePercent:
		_bacbcd.Value = "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case ST_CfvoTypeMax:
		_bacbcd.Value = "\u006d\u0061\u0078"
	case ST_CfvoTypeMin:
		_bacbcd.Value = "\u006d\u0069\u006e"
	case ST_CfvoTypeFormula:
		_bacbcd.Value = "\u0066o\u0072\u006d\u0075\u006c\u0061"
	case ST_CfvoTypePercentile:
		_bacbcd.Value = "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065"
	}
	return _bacbcd, nil
}

// Validate validates the CT_Sheets and its children
func (_efbcag *CT_Sheets) Validate() error {
	return _efbcag.ValidateWithPath("\u0043T\u005f\u0053\u0068\u0065\u0065\u0074s")
}

func (_ggda *CT_CellProtection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggda.LockedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ggda.LockedAttr))})
	}
	if _ggda.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ggda.HiddenAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fbfdg *CT_MeasureGroup) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fcagc := range start.Attr {
		if _fcagc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dbbb, _ccfgb := _fcagc.Value, error(nil)
			if _ccfgb != nil {
				return _ccfgb
			}
			_fbfdg.NameAttr = _dbbb
			continue
		}
		if _fcagc.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_dagfge, _bcefa := _fcagc.Value, error(nil)
			if _bcefa != nil {
				return _bcefa
			}
			_fbfdg.CaptionAttr = _dagfge
			continue
		}
	}
	for {
		_ggefe, _debce := d.Token()
		if _debce != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u004d\u0065\u0061\u0073\u0075\u0072e\u0047\u0072\u006fu\u0070:\u0020\u0025\u0073", _debce)
		}
		if _bdbff, _ccebg := _ggefe.(_b.EndElement); _ccebg && _bdbff.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_FontScheme byte

func (_geege *CT_PivotFilters) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _geege.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_geege.CountAttr)})
	}
	e.EncodeToken(start)
	if _geege.Filter != nil {
		_dgcfe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u0074\u0065r"}}
		for _, _gaeea := range _geege.Filter {
			e.EncodeElement(_gaeea, _dgcfe)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Formats and its children
func (_bfdf *CT_Formats) Validate() error {
	return _bfdf.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u0072\u006d\u0061\u0074\u0073")
}

type CT_ChartsheetView struct {

	// Sheet Tab Selected
	TabSelectedAttr *bool

	// Window Zoom Scale
	ZoomScaleAttr *uint32

	// Workbook View Id
	WorkbookViewIdAttr uint32

	// Zoom To Fit
	ZoomToFitAttr *bool
	ExtLst        *CT_ExtensionList
}

func (_ggbda *CT_RevisionHeaders) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ggbda.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _fbbbba := range start.Attr {
		if _fbbbba.Name.Local == "\u0065x\u0063\u006c\u0075\u0073\u0069\u0076e" {
			_eabdb, _edceb := _eb.ParseBool(_fbbbba.Value)
			if _edceb != nil {
				return _edceb
			}
			_ggbda.ExclusiveAttr = &_eabdb
			continue
		}
		if _fbbbba.Name.Local == "\u006c\u0061\u0073\u0074\u0047\u0075\u0069\u0064" {
			_bfdfe, _eebada := _fbbbba.Value, error(nil)
			if _eebada != nil {
				return _eebada
			}
			_ggbda.LastGuidAttr = &_bfdfe
			continue
		}
		if _fbbbba.Name.Local == "\u0073\u0068\u0061\u0072\u0065\u0064" {
			_dbbgcb, _ecbee := _eb.ParseBool(_fbbbba.Value)
			if _ecbee != nil {
				return _ecbee
			}
			_ggbda.SharedAttr = &_dbbgcb
			continue
		}
		if _fbbbba.Name.Local == "\u0064\u0069\u0073\u006b\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073" {
			_feeea, _cegefe := _eb.ParseBool(_fbbbba.Value)
			if _cegefe != nil {
				return _cegefe
			}
			_ggbda.DiskRevisionsAttr = &_feeea
			continue
		}
		if _fbbbba.Name.Local == "\u0068i\u0073\u0074\u006f\u0072\u0079" {
			_bafga, _bdbeg := _eb.ParseBool(_fbbbba.Value)
			if _bdbeg != nil {
				return _bdbeg
			}
			_ggbda.HistoryAttr = &_bafga
			continue
		}
		if _fbbbba.Name.Local == "\u0074\u0072\u0061\u0063\u006b\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0073" {
			_dfdcd, _fccdaa := _eb.ParseBool(_fbbbba.Value)
			if _fccdaa != nil {
				return _fccdaa
			}
			_ggbda.TrackRevisionsAttr = &_dfdcd
			continue
		}
		if _fbbbba.Name.Local == "\u0067\u0075\u0069\u0064" {
			_dccaf, _gbcff := _fbbbba.Value, error(nil)
			if _gbcff != nil {
				return _gbcff
			}
			_ggbda.GuidAttr = _dccaf
			continue
		}
		if _fbbbba.Name.Local == "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0049\u0064" {
			_cccaf, _cedecg := _eb.ParseUint(_fbbbba.Value, 10, 32)
			if _cedecg != nil {
				return _cedecg
			}
			_fgceg := uint32(_cccaf)
			_ggbda.RevisionIdAttr = &_fgceg
			continue
		}
		if _fbbbba.Name.Local == "\u0076e\u0072\u0073\u0069\u006f\u006e" {
			_cecefg, _faeee := _eb.ParseInt(_fbbbba.Value, 10, 32)
			if _faeee != nil {
				return _faeee
			}
			_edaecad := int32(_cecefg)
			_ggbda.VersionAttr = &_edaecad
			continue
		}
		if _fbbbba.Name.Local == "\u006b\u0065\u0065\u0070\u0043\u0068\u0061\u006e\u0067\u0065\u0048\u0069s\u0074\u006f\u0072\u0079" {
			_cfeag, _egedee := _eb.ParseBool(_fbbbba.Value)
			if _egedee != nil {
				return _egedee
			}
			_ggbda.KeepChangeHistoryAttr = &_cfeag
			continue
		}
		if _fbbbba.Name.Local == "\u0070r\u006f\u0074\u0065\u0063\u0074\u0065d" {
			_fbcgg, _babagc := _eb.ParseBool(_fbbbba.Value)
			if _babagc != nil {
				return _babagc
			}
			_ggbda.ProtectedAttr = &_fbcgg
			continue
		}
		if _fbbbba.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0048\u0069\u0073\u0074\u006f\u0072\u0079" {
			_cedba, _adeff := _eb.ParseUint(_fbbbba.Value, 10, 32)
			if _adeff != nil {
				return _adeff
			}
			_dggefc := uint32(_cedba)
			_ggbda.PreserveHistoryAttr = &_dggefc
			continue
		}
	}
_gfgce:
	for {
		_aeaeg, _effbca := d.Token()
		if _effbca != nil {
			return _effbca
		}
		switch _ageebf := _aeaeg.(type) {
		case _b.StartElement:
			switch _ageebf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}:
				_cbgdde := NewCT_RevisionHeader()
				if _eabgd := d.DecodeElement(_cbgdde, &_ageebf); _eabgd != nil {
					return _eabgd
				}
				_ggbda.Header = append(_ggbda.Header, _cbgdde)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069o\u006e\u0048\u0065\u0061\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _ageebf.Name)
				if _dbbaa := d.Skip(); _dbbaa != nil {
					return _dbbaa
				}
			}
		case _b.EndElement:
			break _gfgce
		case _b.CharData:
		}
	}
	return nil
}

func (_gadfg *CT_WebPublishItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gadfg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_gadfg.CountAttr)})
	}
	e.EncodeToken(start)
	_cccbeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d"}}
	for _, _ddacbe := range _gadfg.WebPublishItem {
		e.EncodeElement(_ddacbe, _cccbeb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_badef *CT_Dimensions) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _badef.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_badef.CountAttr)})
	}
	e.EncodeToken(start)
	if _badef.Dimension != nil {
		_affae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"}}
		for _, _cbfgc := range _badef.Dimension {
			e.EncodeElement(_cbfgc, _affae)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_SortMethodUnset  ST_SortMethod = 0
	ST_SortMethodStroke ST_SortMethod = 1
	ST_SortMethodPinYin ST_SortMethod = 2
	ST_SortMethodNone   ST_SortMethod = 3
)

func NewCT_CustomFilter() *CT_CustomFilter { _gfeae := &CT_CustomFilter{}; return _gfeae }

// ValidateWithPath validates the CT_Error and its children, prefixing error messages with path
func (_bggc *CT_Error) ValidateWithPath(path string) error {
	if _bggc.Tpls != nil {
		if _gaaf := _bggc.Tpls.ValidateWithPath(path + "\u002f\u0054\u0070l\u0073"); _gaaf != nil {
			return _gaaf
		}
	}
	for _gdef, _gfefa := range _bggc.X {
		if _cfagg := _gfefa.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _gdef)); _cfagg != nil {
			return _cfagg
		}
	}
	return nil
}

func (_daecf *ST_DdeValueType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dfbed, _acggf := d.Token()
	if _acggf != nil {
		return _acggf
	}
	if _agcbe, _dbdac := _dfbed.(_b.EndElement); _dbdac && _agcbe.Name == start.Name {
		*_daecf = 1
		return nil
	}
	if _eeeff, _fcbag := _dfbed.(_b.CharData); !_fcbag {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfbed)
	} else {
		switch string(_eeeff) {
		case "":
			*_daecf = 0
		case "\u006e\u0069\u006c":
			*_daecf = 1
		case "\u0062":
			*_daecf = 2
		case "\u006e":
			*_daecf = 3
		case "\u0065":
			*_daecf = 4
		case "\u0073\u0074\u0072":
			*_daecf = 5
		}
	}
	_dfbed, _acggf = d.Token()
	if _acggf != nil {
		return _acggf
	}
	if _cacfgf, _aaagba := _dfbed.(_b.EndElement); _aaagba && _cacfgf.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfbed)
}

func (_ceaga *ST_HorizontalAlignment) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ceaga = 0
	case "\u0067e\u006e\u0065\u0072\u0061\u006c":
		*_ceaga = 1
	case "\u006c\u0065\u0066\u0074":
		*_ceaga = 2
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_ceaga = 3
	case "\u0072\u0069\u0067h\u0074":
		*_ceaga = 4
	case "\u0066\u0069\u006c\u006c":
		*_ceaga = 5
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_ceaga = 6
	case "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073":
		*_ceaga = 7
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_ceaga = 8
	}
	return nil
}

func (_dedggf ST_SortBy) Validate() error { return _dedggf.ValidateWithPath("") }

// ValidateWithPath validates the CT_MemberProperties and its children, prefixing error messages with path
func (_cecgg *CT_MemberProperties) ValidateWithPath(path string) error {
	for _decgd, _gaeec := range _cecgg.Mp {
		if _ececf := _gaeec.ValidateWithPath(_ec.Sprintf("\u0025s\u002f\u004d\u0070\u005b\u0025\u0064]", path, _decgd)); _ececf != nil {
			return _ececf
		}
	}
	return nil
}

func (_gfedg *CT_SheetDimension) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fcgbeg := range start.Attr {
		if _fcgbeg.Name.Local == "\u0072\u0065\u0066" {
			_gcgcee, _dccdg := _fcgbeg.Value, error(nil)
			if _dccdg != nil {
				return _dccdg
			}
			_gfedg.RefAttr = _gcgcee
			continue
		}
	}
	for {
		_edefeg, _aabbe := d.Token()
		if _aabbe != nil {
			return _ec.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e: \u0025\u0073", _aabbe)
		}
		if _gadfc, _baeae := _edefeg.(_b.EndElement); _baeae && _gadfc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_adegbe ST_SheetViewType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ddabff := _b.Attr{}
	_ddabff.Name = name
	switch _adegbe {
	case ST_SheetViewTypeUnset:
		_ddabff.Value = ""
	case ST_SheetViewTypeNormal:
		_ddabff.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_SheetViewTypePageBreakPreview:
		_ddabff.Value = "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077"
	case ST_SheetViewTypePageLayout:
		_ddabff.Value = "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074"
	}
	return _ddabff, nil
}

func (_bceef *CT_TextField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bceef.TypeAttr != ST_ExternalConnectionTypeUnset {
		_faddd, _cfdef := _bceef.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _cfdef != nil {
			return _cfdef
		}
		start.Attr = append(start.Attr, _faddd)
	}
	if _bceef.PositionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_bceef.PositionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gecdaf *ST_DataValidationOperator) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ddaage, _aabcbb := d.Token()
	if _aabcbb != nil {
		return _aabcbb
	}
	if _eecfcb, _egefbf := _ddaage.(_b.EndElement); _egefbf && _eecfcb.Name == start.Name {
		*_gecdaf = 1
		return nil
	}
	if _efged, _eegdc := _ddaage.(_b.CharData); !_eegdc {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ddaage)
	} else {
		switch string(_efged) {
		case "":
			*_gecdaf = 0
		case "\u0062e\u0074\u0077\u0065\u0065\u006e":
			*_gecdaf = 1
		case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_gecdaf = 2
		case "\u0065\u0071\u0075a\u006c":
			*_gecdaf = 3
		case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_gecdaf = 4
		case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_gecdaf = 5
		case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_gecdaf = 6
		case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_gecdaf = 7
		case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
			*_gecdaf = 8
		}
	}
	_ddaage, _aabcbb = d.Token()
	if _aabcbb != nil {
		return _aabcbb
	}
	if _cdceg, _ggfgc := _ddaage.(_b.EndElement); _ggfgc && _cdceg.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ddaage)
}

func NewCT_DataBar() *CT_DataBar { _fggd := &CT_DataBar{}; _fggd.Color = NewCT_Color(); return _fggd }

func (_fcgcc *CT_CsPageSetup) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fcgcc.PaperSizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae"}, Value: _ec.Sprintf("\u0025\u0076", *_fcgcc.PaperSizeAttr)})
	}
	if _fcgcc.PaperHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_fcgcc.PaperHeightAttr)})
	}
	if _fcgcc.PaperWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068"}, Value: _ec.Sprintf("\u0025\u0076", *_fcgcc.PaperWidthAttr)})
	}
	if _fcgcc.FirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_fcgcc.FirstPageNumberAttr)})
	}
	if _fcgcc.OrientationAttr != ST_OrientationUnset {
		_bedbd, _fgbde := _fcgcc.OrientationAttr.MarshalXMLAttr(_b.Name{Local: "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e"})
		if _fgbde != nil {
			return _fgbde
		}
		start.Attr = append(start.Attr, _bedbd)
	}
	if _fcgcc.UsePrinterDefaultsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fcgcc.UsePrinterDefaultsAttr))})
	}
	if _fcgcc.BlackAndWhiteAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fcgcc.BlackAndWhiteAttr))})
	}
	if _fcgcc.DraftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072\u0061f\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fcgcc.DraftAttr))})
	}
	if _fcgcc.UseFirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fcgcc.UseFirstPageNumberAttr))})
	}
	if _fcgcc.HorizontalDpiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069"}, Value: _ec.Sprintf("\u0025\u0076", *_fcgcc.HorizontalDpiAttr)})
	}
	if _fcgcc.VerticalDpiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069"}, Value: _ec.Sprintf("\u0025\u0076", *_fcgcc.VerticalDpiAttr)})
	}
	if _fcgcc.CopiesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0070\u0069\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0076", *_fcgcc.CopiesAttr)})
	}
	if _fcgcc.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_fcgcc.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_CellSmartTags() *CT_CellSmartTags { _baef := &CT_CellSmartTags{}; return _baef }

func NewCT_Member() *CT_Member { _aaagd := &CT_Member{}; return _aaagd }

// Validate validates the CT_Filter and its children
func (_abgff *CT_Filter) Validate() error {
	return _abgff.ValidateWithPath("\u0043T\u005f\u0046\u0069\u006c\u0074\u0065r")
}

func NewCT_CellFormula() *CT_CellFormula { _egcf := &CT_CellFormula{}; return _egcf }

func NewCT_CustomSheetViews() *CT_CustomSheetViews { _cgga := &CT_CustomSheetViews{}; return _cgga }

// ValidateWithPath validates the CT_DataField and its children, prefixing error messages with path
func (_afaf *CT_DataField) ValidateWithPath(path string) error {
	if _bggaf := _afaf.SubtotalAttr.ValidateWithPath(path + "\u002f\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0041\u0074\u0074\u0072"); _bggaf != nil {
		return _bggaf
	}
	if _fgdee := _afaf.ShowDataAsAttr.ValidateWithPath(path + "\u002fS\u0068o\u0077\u0044\u0061\u0074\u0061\u0041\u0073\u0041\u0074\u0074\u0072"); _fgdee != nil {
		return _fgdee
	}
	if _afaf.ExtLst != nil {
		if _afffc := _afaf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _afffc != nil {
			return _afffc
		}
	}
	return nil
}

type CT_FutureMetadataBlock struct {

	// Future Feature Storage Area
	ExtLst *CT_ExtensionList
}

const (
	ST_TableStyleTypeUnset                  ST_TableStyleType = 0
	ST_TableStyleTypeWholeTable             ST_TableStyleType = 1
	ST_TableStyleTypeHeaderRow              ST_TableStyleType = 2
	ST_TableStyleTypeTotalRow               ST_TableStyleType = 3
	ST_TableStyleTypeFirstColumn            ST_TableStyleType = 4
	ST_TableStyleTypeLastColumn             ST_TableStyleType = 5
	ST_TableStyleTypeFirstRowStripe         ST_TableStyleType = 6
	ST_TableStyleTypeSecondRowStripe        ST_TableStyleType = 7
	ST_TableStyleTypeFirstColumnStripe      ST_TableStyleType = 8
	ST_TableStyleTypeSecondColumnStripe     ST_TableStyleType = 9
	ST_TableStyleTypeFirstHeaderCell        ST_TableStyleType = 10
	ST_TableStyleTypeLastHeaderCell         ST_TableStyleType = 11
	ST_TableStyleTypeFirstTotalCell         ST_TableStyleType = 12
	ST_TableStyleTypeLastTotalCell          ST_TableStyleType = 13
	ST_TableStyleTypeFirstSubtotalColumn    ST_TableStyleType = 14
	ST_TableStyleTypeSecondSubtotalColumn   ST_TableStyleType = 15
	ST_TableStyleTypeThirdSubtotalColumn    ST_TableStyleType = 16
	ST_TableStyleTypeFirstSubtotalRow       ST_TableStyleType = 17
	ST_TableStyleTypeSecondSubtotalRow      ST_TableStyleType = 18
	ST_TableStyleTypeThirdSubtotalRow       ST_TableStyleType = 19
	ST_TableStyleTypeBlankRow               ST_TableStyleType = 20
	ST_TableStyleTypeFirstColumnSubheading  ST_TableStyleType = 21
	ST_TableStyleTypeSecondColumnSubheading ST_TableStyleType = 22
	ST_TableStyleTypeThirdColumnSubheading  ST_TableStyleType = 23
	ST_TableStyleTypeFirstRowSubheading     ST_TableStyleType = 24
	ST_TableStyleTypeSecondRowSubheading    ST_TableStyleType = 25
	ST_TableStyleTypeThirdRowSubheading     ST_TableStyleType = 26
	ST_TableStyleTypePageFieldLabels        ST_TableStyleType = 27
	ST_TableStyleTypePageFieldValues        ST_TableStyleType = 28
)

func (_gcdd *CT_Drawing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ggaeg := range start.Attr {
		if _ggaeg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ggaeg.Name.Local == "\u0069\u0064" || _ggaeg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ggaeg.Name.Local == "\u0069\u0064" {
			_bbdd, _fbgbe := _ggaeg.Value, error(nil)
			if _fbgbe != nil {
				return _fbgbe
			}
			_gcdd.IdAttr = _bbdd
			continue
		}
	}
	for {
		_ebdde, _debd := d.Token()
		if _debd != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u003a\u0020%\u0073", _debd)
		}
		if _dbcbbg, _aegcd := _ebdde.(_b.EndElement); _aegcd && _dbcbbg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SortCondition and its children, prefixing error messages with path
func (_dfbef *CT_SortCondition) ValidateWithPath(path string) error {
	if _dbfffd := _dfbef.SortByAttr.ValidateWithPath(path + "/\u0053\u006f\u0072\u0074\u0042\u0079\u0041\u0074\u0074\u0072"); _dbfffd != nil {
		return _dbfffd
	}
	if _gafdg := _dfbef.IconSetAttr.ValidateWithPath(path + "\u002f\u0049\u0063o\u006e\u0053\u0065\u0074\u0041\u0074\u0074\u0072"); _gafdg != nil {
		return _gafdg
	}
	return nil
}

// Validate validates the CT_rowItems and its children
func (_cegge *CT_rowItems) Validate() error {
	return _cegge.ValidateWithPath("C\u0054\u005f\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073")
}

const (
	ST_DataValidationImeModeUnset        ST_DataValidationImeMode = 0
	ST_DataValidationImeModeNoControl    ST_DataValidationImeMode = 1
	ST_DataValidationImeModeOff          ST_DataValidationImeMode = 2
	ST_DataValidationImeModeOn           ST_DataValidationImeMode = 3
	ST_DataValidationImeModeDisabled     ST_DataValidationImeMode = 4
	ST_DataValidationImeModeHiragana     ST_DataValidationImeMode = 5
	ST_DataValidationImeModeFullKatakana ST_DataValidationImeMode = 6
	ST_DataValidationImeModeHalfKatakana ST_DataValidationImeMode = 7
	ST_DataValidationImeModeFullAlpha    ST_DataValidationImeMode = 8
	ST_DataValidationImeModeHalfAlpha    ST_DataValidationImeMode = 9
	ST_DataValidationImeModeFullHangul   ST_DataValidationImeMode = 10
	ST_DataValidationImeModeHalfHangul   ST_DataValidationImeMode = 11
)

type VolTypes struct{ CT_VolTypes }

type CT_Location struct {

	// Reference
	RefAttr string

	// First Header Row
	FirstHeaderRowAttr uint32

	// PivotTable Data First Row
	FirstDataRowAttr uint32

	// First Data Column
	FirstDataColAttr uint32

	// Rows Per Page Count
	RowPageCountAttr *uint32

	// Columns Per Page
	ColPageCountAttr *uint32
}

func (_ecec *CT_Filter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ecec.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_ecec.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Row and its children
func (_bgebff *CT_Row) Validate() error {
	return _bgebff.ValidateWithPath("\u0043\u0054\u005f\u0052\u006f\u0077")
}

func (_bbfbd ST_PaneState) ValidateWithPath(path string) error {
	switch _bbfbd {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbfbd))
	}
	return nil
}

// ValidateWithPath validates the CT_CacheField and its children, prefixing error messages with path
func (_efg *CT_CacheField) ValidateWithPath(path string) error {
	if _efg.SharedItems != nil {
		if _fgd := _efg.SharedItems.ValidateWithPath(path + "\u002f\u0053\u0068a\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"); _fgd != nil {
			return _fgd
		}
	}
	if _efg.FieldGroup != nil {
		if _daae := _efg.FieldGroup.ValidateWithPath(path + "/\u0046\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"); _daae != nil {
			return _daae
		}
	}
	for _bfc, _fac := range _efg.MpMap {
		if _fgg := _fac.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002fM\u0070\u004d\u0061\u0070\u005b\u0025\u0064\u005d", path, _bfc)); _fgg != nil {
			return _fgg
		}
	}
	if _efg.ExtLst != nil {
		if _fda := _efg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fda != nil {
			return _fda
		}
	}
	return nil
}

// Validate validates the CT_RevisionCustomView and its children
func (_gbgce *CT_RevisionCustomView) Validate() error {
	return _gbgce.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0075\u0073t\u006f\u006d\u0056\u0069\u0065\u0077")
}

// ValidateWithPath validates the CT_GroupMembers and its children, prefixing error messages with path
func (_afaff *CT_GroupMembers) ValidateWithPath(path string) error {
	for _bbbff, _cgbgcg := range _afaff.GroupMember {
		if _ecgcd := _cgbgcg.ValidateWithPath(_ec.Sprintf("\u0025s\u002fG\u0072\u006f\u0075\u0070\u004de\u006d\u0062e\u0072\u005b\u0025\u0064\u005d", path, _bbbff)); _ecgcd != nil {
			return _ecgcd
		}
	}
	return nil
}

// Validate validates the CT_PCDKPIs and its children
func (_eeefa *CT_PCDKPIs) Validate() error {
	return _eeefa.ValidateWithPath("\u0043\u0054\u005f\u0050\u0043\u0044\u004b\u0050\u0049\u0073")
}

// ValidateWithPath validates the CT_Macrosheet and its children, prefixing error messages with path
func (_cfff *CT_Macrosheet) ValidateWithPath(path string) error {
	if _cfff.SheetPr != nil {
		if _fdcgeg := _cfff.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _fdcgeg != nil {
			return _fdcgeg
		}
	}
	if _cfff.Dimension != nil {
		if _ddbdd := _cfff.Dimension.ValidateWithPath(path + "\u002f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"); _ddbdd != nil {
			return _ddbdd
		}
	}
	if _cfff.SheetViews != nil {
		if _aaec := _cfff.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _aaec != nil {
			return _aaec
		}
	}
	if _cfff.SheetFormatPr != nil {
		if _dfcg := _cfff.SheetFormatPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"); _dfcg != nil {
			return _dfcg
		}
	}
	for _deaac, _dbaga := range _cfff.Cols {
		if _bbedb := _dbaga.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0043\u006f\u006c\u0073\u005b\u0025\u0064\u005d", path, _deaac)); _bbedb != nil {
			return _bbedb
		}
	}
	if _ddbfb := _cfff.SheetData.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"); _ddbfb != nil {
		return _ddbfb
	}
	if _cfff.SheetProtection != nil {
		if _aedd := _cfff.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _aedd != nil {
			return _aedd
		}
	}
	if _cfff.AutoFilter != nil {
		if _gcffe := _cfff.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _gcffe != nil {
			return _gcffe
		}
	}
	if _cfff.SortState != nil {
		if _eeac := _cfff.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _eeac != nil {
			return _eeac
		}
	}
	if _cfff.DataConsolidate != nil {
		if _faaa := _cfff.DataConsolidate.ValidateWithPath(path + "\u002f\u0044a\u0074\u0061\u0043o\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"); _faaa != nil {
			return _faaa
		}
	}
	if _cfff.CustomSheetViews != nil {
		if _gaebg := _cfff.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _gaebg != nil {
			return _gaebg
		}
	}
	if _cfff.PhoneticPr != nil {
		if _deade := _cfff.PhoneticPr.ValidateWithPath(path + "/\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"); _deade != nil {
			return _deade
		}
	}
	for _gfecg, _dfdgg := range _cfff.ConditionalFormatting {
		if _dgadb := _dfdgg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0043o\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072m\u0061\u0074\u0074\u0069\u006e\u0067\u005b%\u0064\u005d", path, _gfecg)); _dgadb != nil {
			return _dgadb
		}
	}
	if _cfff.PrintOptions != nil {
		if _ecefg := _cfff.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _ecefg != nil {
			return _ecefg
		}
	}
	if _cfff.PageMargins != nil {
		if _deaded := _cfff.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _deaded != nil {
			return _deaded
		}
	}
	if _cfff.PageSetup != nil {
		if _ggffb := _cfff.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _ggffb != nil {
			return _ggffb
		}
	}
	if _cfff.HeaderFooter != nil {
		if _cbgdd := _cfff.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _cbgdd != nil {
			return _cbgdd
		}
	}
	if _cfff.RowBreaks != nil {
		if _gdgc := _cfff.RowBreaks.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"); _gdgc != nil {
			return _gdgc
		}
	}
	if _cfff.ColBreaks != nil {
		if _eacffe := _cfff.ColBreaks.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"); _eacffe != nil {
			return _eacffe
		}
	}
	if _cfff.CustomProperties != nil {
		if _dbdea := _cfff.CustomProperties.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073"); _dbdea != nil {
			return _dbdea
		}
	}
	if _cfff.Drawing != nil {
		if _abbe := _cfff.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _abbe != nil {
			return _abbe
		}
	}
	if _cfff.LegacyDrawing != nil {
		if _cbdda := _cfff.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _cbdda != nil {
			return _cbdda
		}
	}
	if _cfff.LegacyDrawingHF != nil {
		if _caaea := _cfff.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _caaea != nil {
			return _caaea
		}
	}
	if _cfff.DrawingHF != nil {
		if _ceadb := _cfff.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _ceadb != nil {
			return _ceadb
		}
	}
	if _cfff.Picture != nil {
		if _bgfdag := _cfff.Picture.ValidateWithPath(path + "\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065"); _bgfdag != nil {
			return _bgfdag
		}
	}
	if _cfff.OleObjects != nil {
		if _bbfd := _cfff.OleObjects.ValidateWithPath(path + "/\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"); _bbfd != nil {
			return _bbfd
		}
	}
	if _cfff.ExtLst != nil {
		if _eecc := _cfff.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eecc != nil {
			return _eecc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BookView and its children, prefixing error messages with path
func (_dbcb *CT_BookView) ValidateWithPath(path string) error {
	if _cf := _dbcb.VisibilityAttr.ValidateWithPath(path + "\u002fV\u0069s\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0041\u0074\u0074\u0072"); _cf != nil {
		return _cf
	}
	if _dbcb.ExtLst != nil {
		if _bec := _dbcb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bec != nil {
			return _bec
		}
	}
	return nil
}

// Validate validates the CT_MetadataBlocks and its children
func (_ebdg *CT_MetadataBlocks) Validate() error {
	return _ebdg.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042l\u006f\u0063\u006b\u0073")
}

func (_ccbcdf *CT_OleItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ccbcdf.OleItem != nil {
		_bdbcag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u0049\u0074\u0065\u006d"}}
		for _, _aafec := range _ccbcdf.OleItem {
			e.EncodeElement(_aafec, _bdbcag)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_DateTime() *CT_DateTime { _fcaf := &CT_DateTime{}; return _fcaf }

// Validate validates the CT_MetadataType and its children
func (_bgea *CT_MetadataType) Validate() error {
	return _bgea.ValidateWithPath("\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065")
}

const (
	ST_DataValidationOperatorUnset              ST_DataValidationOperator = 0
	ST_DataValidationOperatorBetween            ST_DataValidationOperator = 1
	ST_DataValidationOperatorNotBetween         ST_DataValidationOperator = 2
	ST_DataValidationOperatorEqual              ST_DataValidationOperator = 3
	ST_DataValidationOperatorNotEqual           ST_DataValidationOperator = 4
	ST_DataValidationOperatorLessThan           ST_DataValidationOperator = 5
	ST_DataValidationOperatorLessThanOrEqual    ST_DataValidationOperator = 6
	ST_DataValidationOperatorGreaterThan        ST_DataValidationOperator = 7
	ST_DataValidationOperatorGreaterThanOrEqual ST_DataValidationOperator = 8
)

func (_gccc *SingleXmlCells) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gccc.CT_SingleXmlCells = *NewCT_SingleXmlCells()
_abfefg:
	for {
		_dgafdbg, _aaaeb := d.Token()
		if _aaaeb != nil {
			return _aaaeb
		}
		switch _ccbff := _dgafdbg.(type) {
		case _b.StartElement:
			switch _ccbff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}:
				_beccg := NewCT_SingleXmlCell()
				if _geffaa := d.DecodeElement(_beccg, &_ccbff); _geffaa != nil {
					return _geffaa
				}
				_gccc.SingleXmlCell = append(_gccc.SingleXmlCell, _beccg)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043e\u006cl\u0073\u0020\u0025\u0076", _ccbff.Name)
				if _cdgba := d.Skip(); _cdgba != nil {
					return _cdgba
				}
			}
		case _b.EndElement:
			break _abfefg
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_BorderPr and its children
func (_fbb *CT_BorderPr) Validate() error {
	return _fbb.ValidateWithPath("C\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0050\u0072")
}

// ValidateWithPath validates the CT_DateGroupItem and its children, prefixing error messages with path
func (_fcac *CT_DateGroupItem) ValidateWithPath(path string) error {
	if _fcac.DateTimeGroupingAttr == ST_DateTimeGroupingUnset {
		return _ec.Errorf("\u0025s\u002f\u0044a\u0074\u0065\u0054\u0069m\u0065\u0047\u0072o\u0075\u0070\u0069\u006e\u0067\u0041\u0074\u0074\u0072 i\u0073\u0020\u0061 \u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079 \u0066\u0069e\u006c\u0064", path)
	}
	if _geaef := _fcac.DateTimeGroupingAttr.ValidateWithPath(path + "/\u0044\u0061\u0074\u0065Ti\u006de\u0047\u0072\u006f\u0075\u0070i\u006e\u0067\u0041\u0074\u0074\u0072"); _geaef != nil {
		return _geaef
	}
	return nil
}

// Validate validates the CT_CfRule and its children
func (_aabag *CT_CfRule) Validate() error {
	return _aabag.ValidateWithPath("\u0043T\u005f\u0043\u0066\u0052\u0075\u006ce")
}

func NewCT_CellXfs() *CT_CellXfs { _baeea := &CT_CellXfs{}; return _baeea }

// ValidateWithPath validates the CT_ChartsheetProtection and its children, prefixing error messages with path
func (_eggb *CT_ChartsheetProtection) ValidateWithPath(path string) error { return nil }

type CT_SmartTagTypes struct {

	// Smart Tag Type
	SmartTagType []*CT_SmartTagType
}

func NewCT_ChartFormat() *CT_ChartFormat {
	_ageg := &CT_ChartFormat{}
	_ageg.PivotArea = NewCT_PivotArea()
	return _ageg
}

type CT_Selection struct {

	// Pane
	PaneAttr ST_Pane

	// Active Cell Location
	ActiveCellAttr *string

	// Active Cell Index
	ActiveCellIdAttr *uint32

	// Sequence of References
	SqrefAttr *ST_Sqref
}

func (_bbcdga ST_DataValidationOperator) String() string {
	switch _bbcdga {
	case 0:
		return ""
	case 1:
		return "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case 2:
		return "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 3:
		return "\u0065\u0071\u0075a\u006c"
	case 4:
		return "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 5:
		return "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 6:
		return "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 7:
		return "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case 8:
		return "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	}
	return ""
}

func NewCT_SortCondition() *CT_SortCondition { _gegba := &CT_SortCondition{}; return _gegba }

func (_gcbbge *PivotCacheRecords) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061:\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063h\u0065\u0052\u0065\u0063or\u0064\u0073"
	return _gcbbge.CT_PivotCacheRecords.MarshalXML(e, start)
}

func (_cafaa *ST_FieldSortType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cafaa = 0
	case "\u006d\u0061\u006e\u0075\u0061\u006c":
		*_cafaa = 1
	case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
		*_cafaa = 2
	case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
		*_cafaa = 3
	}
	return nil
}

func (_degae *CT_ExtensionList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _degae.Ext != nil {
		_begcea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065\u0078\u0074"}}
		for _, _daeee := range _degae.Ext {
			e.EncodeElement(_daeee, _begcea)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ColorScale and its children, prefixing error messages with path
func (_gagd *CT_ColorScale) ValidateWithPath(path string) error {
	for _bdebb, _fdaf := range _gagd.Cfvo {
		if _egced := _fdaf.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0043\u0066\u0076\u006f\u005b\u0025\u0064\u005d", path, _bdebb)); _egced != nil {
			return _egced
		}
	}
	for _eaec, _aefbd := range _gagd.Color {
		if _dcdb := _aefbd.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002fC\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _eaec)); _dcdb != nil {
			return _dcdb
		}
	}
	return nil
}

type ST_OleUpdate byte

func (_acbeag ST_ItemType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gfcaca := _b.Attr{}
	_gfcaca.Name = name
	switch _acbeag {
	case ST_ItemTypeUnset:
		_gfcaca.Value = ""
	case ST_ItemTypeData:
		_gfcaca.Value = "\u0064\u0061\u0074\u0061"
	case ST_ItemTypeDefault:
		_gfcaca.Value = "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case ST_ItemTypeSum:
		_gfcaca.Value = "\u0073\u0075\u006d"
	case ST_ItemTypeCountA:
		_gfcaca.Value = "\u0063\u006f\u0075\u006e\u0074\u0041"
	case ST_ItemTypeAvg:
		_gfcaca.Value = "\u0061\u0076\u0067"
	case ST_ItemTypeMax:
		_gfcaca.Value = "\u006d\u0061\u0078"
	case ST_ItemTypeMin:
		_gfcaca.Value = "\u006d\u0069\u006e"
	case ST_ItemTypeProduct:
		_gfcaca.Value = "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case ST_ItemTypeCount:
		_gfcaca.Value = "\u0063\u006f\u0075n\u0074"
	case ST_ItemTypeStdDev:
		_gfcaca.Value = "\u0073\u0074\u0064\u0044\u0065\u0076"
	case ST_ItemTypeStdDevP:
		_gfcaca.Value = "\u0073t\u0064\u0044\u0065\u0076\u0050"
	case ST_ItemTypeVar:
		_gfcaca.Value = "\u0076\u0061\u0072"
	case ST_ItemTypeVarP:
		_gfcaca.Value = "\u0076\u0061\u0072\u0050"
	case ST_ItemTypeGrand:
		_gfcaca.Value = "\u0067\u0072\u0061n\u0064"
	case ST_ItemTypeBlank:
		_gfcaca.Value = "\u0062\u006c\u0061n\u006b"
	}
	return _gfcaca, nil
}

func (_ecebf ST_MdxKPIProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ecebf.String(), start)
}

const (
	ST_CommentsUnset             ST_Comments = 0
	ST_CommentsCommNone          ST_Comments = 1
	ST_CommentsCommIndicator     ST_Comments = 2
	ST_CommentsCommIndAndComment ST_Comments = 3
)

func NewCT_Scenarios() *CT_Scenarios { _gdcaa := &CT_Scenarios{}; return _gdcaa }

type CT_Fills struct {

	// Fill Count
	CountAttr *uint32

	// Fill
	Fill []*CT_Fill
}

func NewCT_Connections() *CT_Connections { _gdce := &CT_Connections{}; return _gdce }

// ValidateWithPath validates the CT_PivotSelection and its children, prefixing error messages with path
func (_decce *CT_PivotSelection) ValidateWithPath(path string) error {
	if _eadae := _decce.PaneAttr.ValidateWithPath(path + "\u002fP\u0061\u006e\u0065\u0041\u0074\u0074r"); _eadae != nil {
		return _eadae
	}
	if _gebag := _decce.AxisAttr.ValidateWithPath(path + "\u002fA\u0078\u0069\u0073\u0041\u0074\u0074r"); _gebag != nil {
		return _gebag
	}
	if _bgcdb := _decce.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _bgcdb != nil {
		return _bgcdb
	}
	return nil
}

func (_cbegf *CT_PivotFilters) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cafbd := range start.Attr {
		if _cafbd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bdgfgb, _facaae := _eb.ParseUint(_cafbd.Value, 10, 32)
			if _facaae != nil {
				return _facaae
			}
			_dgdc := uint32(_bdgfgb)
			_cbegf.CountAttr = &_dgdc
			continue
		}
	}
_bbdde:
	for {
		_efbb, _fcgbaf := d.Token()
		if _fcgbaf != nil {
			return _fcgbaf
		}
		switch _ggaab := _efbb.(type) {
		case _b.StartElement:
			switch _ggaab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}:
				_bcbgb := NewCT_PivotFilter()
				if _bfcgegg := d.DecodeElement(_bcbgb, &_ggaab); _bfcgegg != nil {
					return _bfcgegg
				}
				_cbegf.Filter = append(_cbegf.Filter, _bcbgb)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076o\u0074\u0046\u0069\u006c\u0074\u0065\u0072\u0073\u0020\u0025\u0076", _ggaab.Name)
				if _ebefa := d.Skip(); _ebefa != nil {
					return _ebefa
				}
			}
		case _b.EndElement:
			break _bbdde
		case _b.CharData:
		}
	}
	return nil
}

func (_feaf *CT_ExternalBook) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ccfdb := range start.Attr {
		if _ccfdb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ccfdb.Name.Local == "\u0069\u0064" || _ccfdb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ccfdb.Name.Local == "\u0069\u0064" {
			_fbfaf, _agada := _ccfdb.Value, error(nil)
			if _agada != nil {
				return _agada
			}
			_feaf.IdAttr = _fbfaf
			continue
		}
	}
_fagdf:
	for {
		_cbad, _cfcb := d.Token()
		if _cfcb != nil {
			return _cfcb
		}
		switch _gdgbb := _cbad.(type) {
		case _b.StartElement:
			switch _gdgbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"}:
				_feaf.SheetNames = NewCT_ExternalSheetNames()
				if _gecf := d.DecodeElement(_feaf.SheetNames, &_gdgbb); _gecf != nil {
					return _gecf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}:
				_feaf.DefinedNames = NewCT_ExternalDefinedNames()
				if _aagcd := d.DecodeElement(_feaf.DefinedNames, &_gdgbb); _aagcd != nil {
					return _aagcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"}:
				_feaf.SheetDataSet = NewCT_ExternalSheetDataSet()
				if _egbg := d.DecodeElement(_feaf.SheetDataSet, &_gdgbb); _egbg != nil {
					return _egbg
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b\u0020\u0025\u0076", _gdgbb.Name)
				if _bfeggb := d.Skip(); _bfeggb != nil {
					return _bfeggb
				}
			}
		case _b.EndElement:
			break _fagdf
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CellWatch and its children, prefixing error messages with path
func (_dbdg *CT_CellWatch) ValidateWithPath(path string) error { return nil }

type ST_Scope byte

func (_eeggbb *ST_VolValueType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eeggbb = 0
	case "\u0062":
		*_eeggbb = 1
	case "\u006e":
		*_eeggbb = 2
	case "\u0065":
		*_eeggbb = 3
	case "\u0073":
		*_eeggbb = 4
	}
	return nil
}

func (_dcbdff *CT_ServerFormat) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfdgb := range start.Attr {
		if _cfdgb.Name.Local == "\u0063u\u006c\u0074\u0075\u0072\u0065" {
			_eefg, _ecfgb := _cfdgb.Value, error(nil)
			if _ecfgb != nil {
				return _ecfgb
			}
			_dcbdff.CultureAttr = &_eefg
			continue
		}
		if _cfdgb.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074" {
			_addac, _ebgdc := _cfdgb.Value, error(nil)
			if _ebgdc != nil {
				return _ebgdc
			}
			_dcbdff.FormatAttr = &_addac
			continue
		}
	}
	for {
		_bedaa, _bfcfg := d.Token()
		if _bfcfg != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0053\u0065\u0072\u0076\u0065\u0072F\u006f\u0072\u006da\u0074:\u0020\u0025\u0073", _bfcfg)
		}
		if _gaeed, _bcdaf := _bedaa.(_b.EndElement); _bcdaf && _gaeed.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gaaaf *CT_FieldGroup) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _afacb := range start.Attr {
		if _afacb.Name.Local == "\u0070\u0061\u0072" {
			_bfbc, _dbaee := _eb.ParseUint(_afacb.Value, 10, 32)
			if _dbaee != nil {
				return _dbaee
			}
			_bgde := uint32(_bfbc)
			_gaaaf.ParAttr = &_bgde
			continue
		}
		if _afacb.Name.Local == "\u0062\u0061\u0073\u0065" {
			_babaa, _aeccb := _eb.ParseUint(_afacb.Value, 10, 32)
			if _aeccb != nil {
				return _aeccb
			}
			_bdeec := uint32(_babaa)
			_gaaaf.BaseAttr = &_bdeec
			continue
		}
	}
_cdfcfg:
	for {
		_edggf, _afcef := d.Token()
		if _afcef != nil {
			return _afcef
		}
		switch _cfdac := _edggf.(type) {
		case _b.StartElement:
			switch _cfdac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0050\u0072"}:
				_gaaaf.RangePr = NewCT_RangePr()
				if _gagagb := d.DecodeElement(_gaaaf.RangePr, &_cfdac); _gagagb != nil {
					return _gagagb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"}:
				_gaaaf.DiscretePr = NewCT_DiscretePr()
				if _cdbg := d.DecodeElement(_gaaaf.DiscretePr, &_cfdac); _cdbg != nil {
					return _cdbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"}:
				_gaaaf.GroupItems = NewCT_GroupItems()
				if _edcbf := d.DecodeElement(_gaaaf.GroupItems, &_cfdac); _edcbf != nil {
					return _edcbf
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046i\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070 \u0025\u0076", _cfdac.Name)
				if _dacbb := d.Skip(); _dacbb != nil {
					return _dacbb
				}
			}
		case _b.EndElement:
			break _cdfcfg
		case _b.CharData:
		}
	}
	return nil
}

type CT_Col struct {

	// Minimum Column
	MinAttr uint32

	// Maximum Column
	MaxAttr uint32

	// Column Width
	WidthAttr *float64

	// Style
	StyleAttr *uint32

	// Hidden Columns
	HiddenAttr *bool

	// Best Fit Column Width
	BestFitAttr *bool

	// Custom Width
	CustomWidthAttr *bool

	// Show Phonetic Information
	PhoneticAttr *bool

	// Outline Level
	OutlineLevelAttr *uint8

	// Collapsed
	CollapsedAttr *bool
}

func (_badcc *CT_Control) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfeg := range start.Attr {
		if _cfeg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cfeg.Name.Local == "\u0069\u0064" || _cfeg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cfeg.Name.Local == "\u0069\u0064" {
			_bdcag, _ggfa := _cfeg.Value, error(nil)
			if _ggfa != nil {
				return _ggfa
			}
			_badcc.IdAttr = _bdcag
			continue
		}
		if _cfeg.Name.Local == "\u0073h\u0061\u0070\u0065\u0049\u0064" {
			_egbe, _cgfgg := _eb.ParseUint(_cfeg.Value, 10, 32)
			if _cgfgg != nil {
				return _cgfgg
			}
			_badcc.ShapeIdAttr = uint32(_egbe)
			continue
		}
		if _cfeg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bdaaff, _ecea := _cfeg.Value, error(nil)
			if _ecea != nil {
				return _ecea
			}
			_badcc.NameAttr = &_bdaaff
			continue
		}
	}
_afca:
	for {
		_gege, _eecf := d.Token()
		if _eecf != nil {
			return _eecf
		}
		switch _fecbf := _gege.(type) {
		case _b.StartElement:
			switch _fecbf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c\u0050r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c\u0050r"}:
				_badcc.ControlPr = NewCT_ControlPr()
				if _eadf := d.DecodeElement(_badcc.ControlPr, &_fecbf); _eadf != nil {
					return _eadf
				}
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0020\u0025\u0076", _fecbf.Name)
				if _dggb := d.Skip(); _dggb != nil {
					return _dggb
				}
			}
		case _b.EndElement:
			break _afca
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColorFilter and its children, prefixing error messages with path
func (_bbbc *CT_ColorFilter) ValidateWithPath(path string) error { return nil }

func NewCT_CustomSheetView() *CT_CustomSheetView {
	_febfc := &CT_CustomSheetView{}
	_febfc.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _febfc
}

// Validate validates the CT_RevisionMove and its children
func (_dcagd *CT_RevisionMove) Validate() error {
	return _dcagd.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065")
}

func NewCT_AutoSortScope() *CT_AutoSortScope {
	_aee := &CT_AutoSortScope{}
	_aee.PivotArea = NewCT_PivotArea()
	return _aee
}

// Validate validates the CT_Borders and its children
func (_gdc *CT_Borders) Validate() error {
	return _gdc.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0073")
}

// Validate validates the CT_ExtensionList and its children
func (_faggf *CT_ExtensionList) Validate() error {
	return _faggf.ValidateWithPath("\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_RevisionComment and its children, prefixing error messages with path
func (_bfbeg *CT_RevisionComment) ValidateWithPath(path string) error {
	if !_bb.ST_GuidPatternRe.MatchString(_bfbeg.GuidAttr) {
		return _ec.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _bb.ST_GuidPatternRe, _bfbeg.GuidAttr)
	}
	if _cgdf := _bfbeg.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _cgdf != nil {
		return _cgdf
	}
	return nil
}

func NewCT_WebPublishObjects() *CT_WebPublishObjects {
	_ecaece := &CT_WebPublishObjects{}
	return _ecaece
}

func (_gaeeb *CT_Dimensions) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fcca := range start.Attr {
		if _fcca.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fadbg, _cdec := _eb.ParseUint(_fcca.Value, 10, 32)
			if _cdec != nil {
				return _cdec
			}
			_gbeff := uint32(_fadbg)
			_gaeeb.CountAttr = &_gbeff
			continue
		}
	}
_baacc:
	for {
		_cegg, _dccdf := d.Token()
		if _dccdf != nil {
			return _dccdf
		}
		switch _agbfa := _cegg.(type) {
		case _b.StartElement:
			switch _agbfa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_agfbc := NewCT_PivotDimension()
				if _dbged := d.DecodeElement(_agfbc, &_agbfa); _dbged != nil {
					return _dbged
				}
				_gaeeb.Dimension = append(_gaeeb.Dimension, _agfbc)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044i\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073 \u0025\u0076", _agbfa.Name)
				if _adcb := d.Skip(); _adcb != nil {
					return _adcb
				}
			}
		case _b.EndElement:
			break _baacc
		case _b.CharData:
		}
	}
	return nil
}

func (_aeef *CT_Dxf) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dbbdb:
	for {
		_gaed, _dfgac := d.Token()
		if _dfgac != nil {
			return _dfgac
		}
		switch _fcef := _gaed.(type) {
		case _b.StartElement:
			switch _fcef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_aeef.Font = NewCT_Font()
				if _bdeeb := d.DecodeElement(_aeef.Font, &_fcef); _bdeeb != nil {
					return _bdeeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}:
				_aeef.NumFmt = NewCT_NumFmt()
				if _badeg := d.DecodeElement(_aeef.NumFmt, &_fcef); _badeg != nil {
					return _badeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_aeef.Fill = NewCT_Fill()
				if _caace := d.DecodeElement(_aeef.Fill, &_fcef); _caace != nil {
					return _caace
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}:
				_aeef.Alignment = NewCT_CellAlignment()
				if _edgfa := d.DecodeElement(_aeef.Alignment, &_fcef); _edgfa != nil {
					return _edgfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}:
				_aeef.Border = NewCT_Border()
				if _ceefe := d.DecodeElement(_aeef.Border, &_fcef); _ceefe != nil {
					return _ceefe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_aeef.Protection = NewCT_CellProtection()
				if _aaee := d.DecodeElement(_aeef.Protection, &_fcef); _aaee != nil {
					return _aaee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aeef.ExtLst = NewCT_ExtensionList()
				if _bcbbc := d.DecodeElement(_aeef.ExtLst, &_fcef); _bcbbc != nil {
					return _bcbbc
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0078\u0066\u0020\u0025\u0076", _fcef.Name)
				if _edegb := d.Skip(); _edegb != nil {
					return _edegb
				}
			}
		case _b.EndElement:
			break _dbbdb
		case _b.CharData:
		}
	}
	return nil
}

func (_deggee *ST_GrowShrinkType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_deggee = 0
	case "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065":
		*_deggee = 1
	case "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072":
		*_deggee = 2
	case "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072":
		*_deggee = 3
	}
	return nil
}

// Validate validates the CT_VerticalAlignFontProperty and its children
func (_fbcee *CT_VerticalAlignFontProperty) Validate() error {
	return _fbcee.ValidateWithPath("\u0043\u0054\u005f\u0056e\u0072\u0074\u0069\u0063\u0061\u006c\u0041\u006c\u0069\u0067n\u0046o\u006e\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0079")
}

func (_dccgf *CT_IndexedColors) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gfbe:
	for {
		_afega, _gbdae := d.Token()
		if _gbdae != nil {
			return _gbdae
		}
		switch _bddd := _afega.(type) {
		case _b.StartElement:
			switch _bddd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062\u0043\u006f\u006c\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062\u0043\u006f\u006c\u006f\u0072"}:
				_edgba := NewCT_RgbColor()
				if _gafabg := d.DecodeElement(_edgba, &_bddd); _gafabg != nil {
					return _gafabg
				}
				_dccgf.RgbColor = append(_dccgf.RgbColor, _edgba)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073\u0020\u0025v", _bddd.Name)
				if _cdade := d.Skip(); _cdade != nil {
					return _cdade
				}
			}
		case _b.EndElement:
			break _gfbe
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_SourceTypeUnset         ST_SourceType = 0
	ST_SourceTypeWorksheet     ST_SourceType = 1
	ST_SourceTypeExternal      ST_SourceType = 2
	ST_SourceTypeConsolidation ST_SourceType = 3
	ST_SourceTypeScenario      ST_SourceType = 4
)

type CT_FontScheme struct {

	// Font Scheme
	ValAttr ST_FontScheme
}

func (_ffaeff *CT_WebPublishObjects) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbgf := range start.Attr {
		if _bbgf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_faedgb, _dgbbb := _eb.ParseUint(_bbgf.Value, 10, 32)
			if _dgbbb != nil {
				return _dgbbb
			}
			_eddccg := uint32(_faedgb)
			_ffaeff.CountAttr = &_eddccg
			continue
		}
	}
_cadgf:
	for {
		_faagfc, _dgcea := d.Token()
		if _dgcea != nil {
			return _dgcea
		}
		switch _bcbgg := _faagfc.(type) {
		case _b.StartElement:
			switch _bcbgg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065b\u0050\u0075\u0062l\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065b\u0050\u0075\u0062l\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074"}:
				_abafe := NewCT_WebPublishObject()
				if _ffcae := d.DecodeElement(_abafe, &_bcbgg); _ffcae != nil {
					return _ffcae
				}
				_ffaeff.WebPublishObject = append(_ffaeff.WebPublishObject, _abafe)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074\u0073\u0020\u0025\u0076", _bcbgg.Name)
				if _bedef := d.Skip(); _bedef != nil {
					return _bedef
				}
			}
		case _b.EndElement:
			break _cadgf
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SheetDimension and its children, prefixing error messages with path
func (_bcbeda *CT_SheetDimension) ValidateWithPath(path string) error { return nil }

func (_bdfeb *CT_ConditionalFormatting) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _acgf := range start.Attr {
		if _acgf.Name.Local == "\u0070\u0069\u0076o\u0074" {
			_efgfe, _fafad := _eb.ParseBool(_acgf.Value)
			if _fafad != nil {
				return _fafad
			}
			_bdfeb.PivotAttr = &_efgfe
			continue
		}
		if _acgf.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_bfeb, _bcabb := ParseSliceST_Sqref(_acgf.Value)
			if _bcabb != nil {
				return _bcabb
			}
			_bdfeb.SqrefAttr = &_bfeb
			continue
		}
	}
_dcdea:
	for {
		_ebgf, _ffge := d.Token()
		if _ffge != nil {
			return _ffge
		}
		switch _dace := _ebgf.(type) {
		case _b.StartElement:
			switch _dace.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0052\u0075\u006c\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0052\u0075\u006c\u0065"}:
				_ccdd := NewCT_CfRule()
				if _eccc := d.DecodeElement(_ccdd, &_dace); _eccc != nil {
					return _eccc
				}
				_bdfeb.CfRule = append(_bdfeb.CfRule, _ccdd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bdfeb.ExtLst = NewCT_ExtensionList()
				if _dfgc := d.DecodeElement(_bdfeb.ExtLst, &_dace); _dfgc != nil {
					return _dfgc
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067\u0020%\u0076", _dace.Name)
				if _ecbce := d.Skip(); _ecbce != nil {
					return _ecbce
				}
			}
		case _b.EndElement:
			break _dcdea
		case _b.CharData:
		}
	}
	return nil
}

func (_fgdfb *CT_RowFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ggdea := range start.Attr {
		if _ggdea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eddgfe, _fgcfb := _eb.ParseUint(_ggdea.Value, 10, 32)
			if _fgcfb != nil {
				return _fgcfb
			}
			_eeacc := uint32(_eddgfe)
			_fgdfb.CountAttr = &_eeacc
			continue
		}
	}
_cdfab:
	for {
		_agdcc, _fgaeab := d.Token()
		if _fgaeab != nil {
			return _fgaeab
		}
		switch _egcfge := _agdcc.(type) {
		case _b.StartElement:
			switch _egcfge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}:
				_egaaef := NewCT_Field()
				if _bbdgc := d.DecodeElement(_egaaef, &_egcfge); _bbdgc != nil {
					return _bbdgc
				}
				_fgdfb.Field = append(_fgdfb.Field, _egaaef)
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u006f\u0077F\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _egcfge.Name)
				if _dgebaeb := d.Skip(); _dgebaeb != nil {
					return _dgebaeb
				}
			}
		case _b.EndElement:
			break _cdfab
		case _b.CharData:
		}
	}
	return nil
}

type CT_OleLink struct {
	IdAttr string

	// Object Link Identifier
	ProgIdAttr string

	// Object Link Items
	OleItems *CT_OleItems
}

type CT_Cols struct {

	// Column Width & Formatting
	Col []*CT_Col
}

// ValidateWithPath validates the CT_MeasureDimensionMap and its children, prefixing error messages with path
func (_edcafd *CT_MeasureDimensionMap) ValidateWithPath(path string) error { return nil }

type CT_XStringElement struct {

	// Value
	VAttr string
}

const (
	ST_BorderStyleUnset            ST_BorderStyle = 0
	ST_BorderStyleNone             ST_BorderStyle = 1
	ST_BorderStyleThin             ST_BorderStyle = 2
	ST_BorderStyleMedium           ST_BorderStyle = 3
	ST_BorderStyleDashed           ST_BorderStyle = 4
	ST_BorderStyleDotted           ST_BorderStyle = 5
	ST_BorderStyleThick            ST_BorderStyle = 6
	ST_BorderStyleDouble           ST_BorderStyle = 7
	ST_BorderStyleHair             ST_BorderStyle = 8
	ST_BorderStyleMediumDashed     ST_BorderStyle = 9
	ST_BorderStyleDashDot          ST_BorderStyle = 10
	ST_BorderStyleMediumDashDot    ST_BorderStyle = 11
	ST_BorderStyleDashDotDot       ST_BorderStyle = 12
	ST_BorderStyleMediumDashDotDot ST_BorderStyle = 13
	ST_BorderStyleSlantDashDot     ST_BorderStyle = 14
)

// Validate validates the CT_PrintOptions and its children
func (_ebcab *CT_PrintOptions) Validate() error {
	return _ebcab.ValidateWithPath("\u0043T\u005fP\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073")
}

// Validate validates the CT_PatternFill and its children
func (_gfggba *CT_PatternFill) Validate() error {
	return _gfggba.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072n\u0046\u0069\u006c\u006c")
}

func (_bgabef *ST_DataConsolidateFunction) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eeedde, _eccbe := d.Token()
	if _eccbe != nil {
		return _eccbe
	}
	if _faeed, _facga := _eeedde.(_b.EndElement); _facga && _faeed.Name == start.Name {
		*_bgabef = 1
		return nil
	}
	if _fccgd, _aagca := _eeedde.(_b.CharData); !_aagca {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eeedde)
	} else {
		switch string(_fccgd) {
		case "":
			*_bgabef = 0
		case "\u0061v\u0065\u0072\u0061\u0067\u0065":
			*_bgabef = 1
		case "\u0063\u006f\u0075n\u0074":
			*_bgabef = 2
		case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
			*_bgabef = 3
		case "\u006d\u0061\u0078":
			*_bgabef = 4
		case "\u006d\u0069\u006e":
			*_bgabef = 5
		case "\u0070r\u006f\u0064\u0075\u0063\u0074":
			*_bgabef = 6
		case "\u0073\u0074\u0064\u0044\u0065\u0076":
			*_bgabef = 7
		case "\u0073t\u0064\u0044\u0065\u0076\u0070":
			*_bgabef = 8
		case "\u0073\u0075\u006d":
			*_bgabef = 9
		case "\u0076\u0061\u0072":
			*_bgabef = 10
		case "\u0076\u0061\u0072\u0070":
			*_bgabef = 11
		}
	}
	_eeedde, _eccbe = d.Token()
	if _eccbe != nil {
		return _eccbe
	}
	if _gdbcaf, _addbg := _eeedde.(_b.EndElement); _addbg && _gdbcaf.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eeedde)
}

func (_gfffc *CT_PCDSDTCEntries) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fcgee := range start.Attr {
		if _fcgee.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aede, _aeafg := _eb.ParseUint(_fcgee.Value, 10, 32)
			if _aeafg != nil {
				return _aeafg
			}
			_eeefg := uint32(_aede)
			_gfffc.CountAttr = &_eeefg
			continue
		}
	}
_fcbg:
	for {
		_gadec, _ceeea := d.Token()
		if _ceeea != nil {
			return _ceeea
		}
		switch _gdbbcg := _gadec.(type) {
		case _b.StartElement:
			switch _gdbbcg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_geeae := NewCT_Missing()
				if _aggdd := d.DecodeElement(_geeae, &_gdbbcg); _aggdd != nil {
					return _aggdd
				}
				_gfffc.M = append(_gfffc.M, _geeae)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_gafca := NewCT_Number()
				if _dceccg := d.DecodeElement(_gafca, &_gdbbcg); _dceccg != nil {
					return _dceccg
				}
				_gfffc.N = append(_gfffc.N, _gafca)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_dgbff := NewCT_Error()
				if _acgfd := d.DecodeElement(_dgbff, &_gdbbcg); _acgfd != nil {
					return _acgfd
				}
				_gfffc.E = append(_gfffc.E, _dgbff)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_agbgf := NewCT_String()
				if _ffafc := d.DecodeElement(_agbgf, &_gdbbcg); _ffafc != nil {
					return _ffafc
				}
				_gfffc.S = append(_gfffc.S, _agbgf)
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006e\u0074\u0072\u0069\u0065\u0073\u0020\u0025\u0076", _gdbbcg.Name)
				if _cebdgc := d.Skip(); _cebdgc != nil {
					return _cebdgc
				}
			}
		case _b.EndElement:
			break _fcbg
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_QueryTable() *CT_QueryTable { _cedac := &CT_QueryTable{}; return _cedac }

// Validate validates the CT_CellStyle and its children
func (_bacd *CT_CellStyle) Validate() error {
	return _bacd.ValidateWithPath("\u0043\u0054\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065")
}

func NewCT_MemberProperties() *CT_MemberProperties { _gcbba := &CT_MemberProperties{}; return _gcbba }

func (_fdeee *CT_CommentList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ffgd:
	for {
		_abdc, _cgea := d.Token()
		if _cgea != nil {
			return _cgea
		}
		switch _afbaa := _abdc.(type) {
		case _b.StartElement:
			switch _afbaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}:
				_cedbe := NewCT_Comment()
				if _aada := d.DecodeElement(_cedbe, &_afbaa); _aada != nil {
					return _aada
				}
				_fdeee.Comment = append(_fdeee.Comment, _cedbe)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074L\u0069s\u0074\u0020\u0025\u0076", _afbaa.Name)
				if _ggga := d.Skip(); _ggga != nil {
					return _ggga
				}
			}
		case _b.EndElement:
			break _ffgd
		case _b.CharData:
		}
	}
	return nil
}

func (_abgbaf *CT_VerticalAlignFontProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_ffgcec, _egad := _abgbaf.ValAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0061\u006c"})
	if _egad != nil {
		return _egad
	}
	start.Attr = append(start.Attr, _ffgcec)
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_DateGroupItem() *CT_DateGroupItem {
	_acabe := &CT_DateGroupItem{}
	_acabe.DateTimeGroupingAttr = ST_DateTimeGrouping(1)
	return _acabe
}

func (_eecfg *CT_FontName) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", _eecfg.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_decd *CT_PhoneticRun) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgdeb := range start.Attr {
		if _dgdeb.Name.Local == "\u0073\u0062" {
			_acbffa, _cgafab := _eb.ParseUint(_dgdeb.Value, 10, 32)
			if _cgafab != nil {
				return _cgafab
			}
			_decd.SbAttr = uint32(_acbffa)
			continue
		}
		if _dgdeb.Name.Local == "\u0065\u0062" {
			_dcdag, _aadffb := _eb.ParseUint(_dgdeb.Value, 10, 32)
			if _aadffb != nil {
				return _aadffb
			}
			_decd.EbAttr = uint32(_dcdag)
			continue
		}
	}
_fcbfg:
	for {
		_deccg, _bddea := d.Token()
		if _bddea != nil {
			return _bddea
		}
		switch _gcdef := _deccg.(type) {
		case _b.StartElement:
			switch _gcdef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				if _agdab := d.DecodeElement(&_decd.T, &_gcdef); _agdab != nil {
					return _agdab
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074\u0069c\u0052u\u006e\u0020\u0025\u0076", _gcdef.Name)
				if _bcea := d.Skip(); _bcea != nil {
					return _bcea
				}
			}
		case _b.EndElement:
			break _fcbfg
		case _b.CharData:
		}
	}
	return nil
}

func (_aacbc *CT_Comments) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_aaae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u0068\u006f\u0072\u0073"}}
	e.EncodeElement(_aacbc.Authors, _aaae)
	_dfcdf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074"}}
	e.EncodeElement(_aacbc.CommentList, _dfcdf)
	if _aacbc.ExtLst != nil {
		_ecded := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_aacbc.ExtLst, _ecded)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DdeLink and its children
func (_ebabc *CT_DdeLink) Validate() error {
	return _ebabc.ValidateWithPath("\u0043\u0054\u005f\u0044\u0064\u0065\u004c\u0069\u006e\u006b")
}

// Validate validates the CT_pivotTableDefinition and its children
func (_gefbg *CT_pivotTableDefinition) Validate() error {
	return _gefbg.ValidateWithPath("\u0043\u0054\u005fpi\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e")
}

func NewCT_TableStyleElement() *CT_TableStyleElement {
	_bbdee := &CT_TableStyleElement{}
	_bbdee.TypeAttr = ST_TableStyleType(1)
	return _bbdee
}

func NewCT_NumFmt() *CT_NumFmt { _adgbce := &CT_NumFmt{}; return _adgbce }

// ValidateWithPath validates the CT_String and its children, prefixing error messages with path
func (_babaf *CT_String) ValidateWithPath(path string) error {
	for _egedbg, _gbaae := range _babaf.Tpls {
		if _bbfca := _gbaae.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _egedbg)); _bbfca != nil {
			return _bbfca
		}
	}
	for _dbcce, _fggbge := range _babaf.X {
		if _ebcagf := _fggbge.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _dbcce)); _ebcagf != nil {
			return _ebcagf
		}
	}
	return nil
}

// Validate validates the CT_SheetData and its children
func (_faedb *CT_SheetData) Validate() error {
	return _faedb.ValidateWithPath("\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061")
}

type CT_FontName struct {

	// String Value
	ValAttr string
}

func (_gdbdaa ST_DataConsolidateFunction) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bdbggg := _b.Attr{}
	_bdbggg.Name = name
	switch _gdbdaa {
	case ST_DataConsolidateFunctionUnset:
		_bdbggg.Value = ""
	case ST_DataConsolidateFunctionAverage:
		_bdbggg.Value = "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case ST_DataConsolidateFunctionCount:
		_bdbggg.Value = "\u0063\u006f\u0075n\u0074"
	case ST_DataConsolidateFunctionCountNums:
		_bdbggg.Value = "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case ST_DataConsolidateFunctionMax:
		_bdbggg.Value = "\u006d\u0061\u0078"
	case ST_DataConsolidateFunctionMin:
		_bdbggg.Value = "\u006d\u0069\u006e"
	case ST_DataConsolidateFunctionProduct:
		_bdbggg.Value = "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case ST_DataConsolidateFunctionStdDev:
		_bdbggg.Value = "\u0073\u0074\u0064\u0044\u0065\u0076"
	case ST_DataConsolidateFunctionStdDevp:
		_bdbggg.Value = "\u0073t\u0064\u0044\u0065\u0076\u0070"
	case ST_DataConsolidateFunctionSum:
		_bdbggg.Value = "\u0073\u0075\u006d"
	case ST_DataConsolidateFunctionVar:
		_bdbggg.Value = "\u0076\u0061\u0072"
	case ST_DataConsolidateFunctionVarp:
		_bdbggg.Value = "\u0076\u0061\u0072\u0070"
	}
	return _bdbggg, nil
}

func (_aagaf *CT_I) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbadd := range start.Attr {
		if _cbadd.Name.Local == "\u0074" {
			_aagaf.TAttr.UnmarshalXMLAttr(_cbadd)
			continue
		}
		if _cbadd.Name.Local == "\u0072" {
			_ageef, _bbedg := _eb.ParseUint(_cbadd.Value, 10, 32)
			if _bbedg != nil {
				return _bbedg
			}
			_agdgd := uint32(_ageef)
			_aagaf.RAttr = &_agdgd
			continue
		}
		if _cbadd.Name.Local == "\u0069" {
			_ggcbf, _gbcbc := _eb.ParseUint(_cbadd.Value, 10, 32)
			if _gbcbc != nil {
				return _gbcbc
			}
			_ffab := uint32(_ggcbf)
			_aagaf.IAttr = &_ffab
			continue
		}
	}
_aafbba:
	for {
		_bgffe, _edbe := d.Token()
		if _edbe != nil {
			return _edbe
		}
		switch _fbggac := _bgffe.(type) {
		case _b.StartElement:
			switch _fbggac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_acgfc := NewCT_X()
				if _adbff := d.DecodeElement(_acgfc, &_fbggac); _adbff != nil {
					return _adbff
				}
				_aagaf.X = append(_aagaf.X, _acgfc)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0049\u0020\u0025\u0076", _fbggac.Name)
				if _fddga := d.Skip(); _fddga != nil {
					return _fddga
				}
			}
		case _b.EndElement:
			break _aafbba
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_UndoInfo and its children, prefixing error messages with path
func (_dbegd *CT_UndoInfo) ValidateWithPath(path string) error {
	if _dbegd.ExpAttr == ST_FormulaExpressionUnset {
		return _ec.Errorf("\u0025\u0073\u002fE\u0078\u0070\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _abdgcg := _dbegd.ExpAttr.ValidateWithPath(path + "\u002f\u0045\u0078\u0070\u0041\u0074\u0074\u0072"); _abdgcg != nil {
		return _abdgcg
	}
	return nil
}

func (_adfca *ST_CellFormulaType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_adfca = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_adfca = 1
	case "\u0061\u0072\u0072a\u0079":
		*_adfca = 2
	case "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce":
		*_adfca = 3
	case "\u0073\u0068\u0061\u0072\u0065\u0064":
		*_adfca = 4
	}
	return nil
}

const (
	ST_SortByUnset     ST_SortBy = 0
	ST_SortByValue     ST_SortBy = 1
	ST_SortByCellColor ST_SortBy = 2
	ST_SortByFontColor ST_SortBy = 3
	ST_SortByIcon      ST_SortBy = 4
)

func NewCT_Control() *CT_Control { _aabf := &CT_Control{}; return _aabf }

type ST_ParameterType byte

type CT_CommentPr struct {

	// Locked Flag
	LockedAttr *bool

	// Default Size Flag
	DefaultSizeAttr *bool

	// Print Flag
	PrintAttr *bool

	// Disabled Flag
	DisabledAttr *bool

	// Automatic Fill Flag
	AutoFillAttr *bool

	// Automatic Line Flag
	AutoLineAttr *bool

	// Alternative Text
	AltTextAttr *string

	// Text Horizontal Alignment
	TextHAlignAttr ST_TextHAlign

	// ext Vertical Alignment
	TextVAlignAttr ST_TextVAlign

	// Text Lock Flag
	LockTextAttr *bool

	// Far East Alignment Flag
	JustLastXAttr *bool

	// Automatic Text Scaling Flag
	AutoScaleAttr *bool
	Anchor        *CT_ObjectAnchor
}

type CT_ExternalSheetDataSet struct {

	// External Sheet Data Set
	SheetData []*CT_ExternalSheetData
}

func NewCT_ServerFormats() *CT_ServerFormats { _agefc := &CT_ServerFormats{}; return _agefc }

func (_dcfag *CT_RevisionCellChange) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dcfag.Nc = NewCT_Cell()
	for _, _caedf := range start.Attr {
		if _caedf.Name.Local == "\u006f\u006c\u0064P\u0068" {
			_bfefdd, _afcaaf := _eb.ParseBool(_caedf.Value)
			if _afcaaf != nil {
				return _afcaaf
			}
			_dcfag.OldPhAttr = &_bfefdd
			continue
		}
		if _caedf.Name.Local == "\u0065\u006e\u0064\u004ffL\u0069\u0073\u0074\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0055\u0070\u0064\u0061t\u0065" {
			_baadcd, _ccbad := _eb.ParseBool(_caedf.Value)
			if _ccbad != nil {
				return _ccbad
			}
			_dcfag.EndOfListFormulaUpdateAttr = &_baadcd
			continue
		}
		if _caedf.Name.Local == "\u006f\u0064\u0078\u0066" {
			_abfdb, _cebge := _eb.ParseBool(_caedf.Value)
			if _cebge != nil {
				return _cebge
			}
			_dcfag.OdxfAttr = &_abfdb
			continue
		}
		if _caedf.Name.Local == "\u0073" {
			_aggbf, _affb := _eb.ParseBool(_caedf.Value)
			if _affb != nil {
				return _affb
			}
			_dcfag.SAttr = &_aggbf
			continue
		}
		if _caedf.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_dfdaca, _ecaae := _eb.ParseUint(_caedf.Value, 10, 32)
			if _ecaae != nil {
				return _ecaae
			}
			_edbac := uint32(_dfdaca)
			_dcfag.NumFmtIdAttr = &_edbac
			continue
		}
		if _caedf.Name.Local == "\u006f\u006c\u0064\u0051\u0075\u006f\u0074\u0065\u0050r\u0065\u0066\u0069\u0078" {
			_ecddg, _aaafg := _eb.ParseBool(_caedf.Value)
			if _aaafg != nil {
				return _aaafg
			}
			_dcfag.OldQuotePrefixAttr = &_ecddg
			continue
		}
		if _caedf.Name.Local == "\u0070\u0068" {
			_gaffbf, _bacbdb := _eb.ParseBool(_caedf.Value)
			if _bacbdb != nil {
				return _bacbdb
			}
			_dcfag.PhAttr = &_gaffbf
			continue
		}
		if _caedf.Name.Local == "\u0073\u0049\u0064" {
			_aggcge, _bbbbf := _eb.ParseUint(_caedf.Value, 10, 32)
			if _bbbbf != nil {
				return _bbbbf
			}
			_dcfag.SIdAttr = uint32(_aggcge)
			continue
		}
		if _caedf.Name.Local == "\u0078\u0066\u0044x\u0066" {
			_ebecg, _fadcf := _eb.ParseBool(_caedf.Value)
			if _fadcf != nil {
				return _fadcf
			}
			_dcfag.XfDxfAttr = &_ebecg
			continue
		}
		if _caedf.Name.Local == "\u0064\u0078\u0066" {
			_baafb, _gcbae := _eb.ParseBool(_caedf.Value)
			if _gcbae != nil {
				return _gcbae
			}
			_dcfag.DxfAttr = &_baafb
			continue
		}
		if _caedf.Name.Local == "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078" {
			_fbefaf, _eggdb := _eb.ParseBool(_caedf.Value)
			if _eggdb != nil {
				return _eggdb
			}
			_dcfag.QuotePrefixAttr = &_fbefaf
			continue
		}
		if _caedf.Name.Local == "\u0072\u0049\u0064" {
			_bbacdg, _egcag := _eb.ParseUint(_caedf.Value, 10, 32)
			if _egcag != nil {
				return _egcag
			}
			_dfedgg := uint32(_bbacdg)
			_dcfag.RIdAttr = &_dfedgg
			continue
		}
		if _caedf.Name.Local == "\u0075\u0061" {
			_abdcfg, _cdbga := _eb.ParseBool(_caedf.Value)
			if _cdbga != nil {
				return _cdbga
			}
			_dcfag.UaAttr = &_abdcfg
			continue
		}
		if _caedf.Name.Local == "\u0072\u0061" {
			_cbeae, _eegfa := _eb.ParseBool(_caedf.Value)
			if _eegfa != nil {
				return _eegfa
			}
			_dcfag.RaAttr = &_cbeae
			continue
		}
	}
_afefd:
	for {
		_egafd, _agadg := d.Token()
		if _agadg != nil {
			return _agadg
		}
		switch _faadge := _egafd.(type) {
		case _b.StartElement:
			switch _faadge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0063"}:
				_dcfag.Oc = NewCT_Cell()
				if _bggbad := d.DecodeElement(_dcfag.Oc, &_faadge); _bggbad != nil {
					return _bggbad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0063"}:
				if _cagaf := d.DecodeElement(_dcfag.Nc, &_faadge); _cagaf != nil {
					return _cagaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0064\u0078\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0064\u0078\u0066"}:
				_dcfag.Odxf = NewCT_Dxf()
				if _gddcb := d.DecodeElement(_dcfag.Odxf, &_faadge); _gddcb != nil {
					return _gddcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0064\u0078\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0064\u0078\u0066"}:
				_dcfag.Ndxf = NewCT_Dxf()
				if _eegcda := d.DecodeElement(_dcfag.Ndxf, &_faadge); _eegcda != nil {
					return _eegcda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcfag.ExtLst = NewCT_ExtensionList()
				if _bdfadc := d.DecodeElement(_dcfag.ExtLst, &_faadge); _bdfadc != nil {
					return _bdfadc
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0043\u0065\u006c\u006c\u0043\u0068\u0061\u006e\u0067\u0065\u0020\u0025\u0076", _faadge.Name)
				if _ecgbg := d.Skip(); _ecgbg != nil {
					return _ecgbg
				}
			}
		case _b.EndElement:
			break _afefd
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_WebPr() *CT_WebPr { _dcfab := &CT_WebPr{}; return _dcfab }

// Validate validates the CT_GradientStop and its children
func (_cfead *CT_GradientStop) Validate() error {
	return _cfead.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070")
}

func (_eaabg *CT_MapInfo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _deaec := range start.Attr {
		if _deaec.Name.Local == "\u0053\u0065\u006c\u0065ct\u0069\u006f\u006e\u004e\u0061\u006d\u0065\u0073\u0070\u0061\u0063\u0065\u0073" {
			_bgfcb, _ddge := _deaec.Value, error(nil)
			if _ddge != nil {
				return _ddge
			}
			_eaabg.SelectionNamespacesAttr = _bgfcb
			continue
		}
	}
_ddba:
	for {
		_cecd, _dfgdg := d.Token()
		if _dfgdg != nil {
			return _dfgdg
		}
		switch _faedc := _cecd.(type) {
		case _b.StartElement:
			switch _faedc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}:
				_babe := NewCT_Schema()
				if _gefceg := d.DecodeElement(_babe, &_faedc); _gefceg != nil {
					return _gefceg
				}
				_eaabg.Schema = append(_eaabg.Schema, _babe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}:
				_efacg := NewCT_Map()
				if _ebcbb := d.DecodeElement(_efacg, &_faedc); _ebcbb != nil {
					return _ebcbb
				}
				_eaabg.Map = append(_eaabg.Map, _efacg)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fM\u0061\u0070\u0049\u006e\u0066\u006f\u0020\u0025\u0076", _faedc.Name)
				if _fdfaf := d.Skip(); _fdfaf != nil {
					return _fdfaf
				}
			}
		case _b.EndElement:
			break _ddba
		case _b.CharData:
		}
	}
	return nil
}

func (_dgcbd *Users) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0075\u0073\u0065\u0072\u0073"
	return _dgcbd.CT_Users.MarshalXML(e, start)
}

func (_begccfg *VolTypes) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u0076\u006f\u006c\u0054\u0079\u0070\u0065\u0073"
	return _begccfg.CT_VolTypes.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_ExtensionList and its children, prefixing error messages with path
func (_cgdcb *CT_ExtensionList) ValidateWithPath(path string) error {
	for _fbaa, _abecg := range _cgdcb.Ext {
		if _dffa := _abecg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _fbaa)); _dffa != nil {
			return _dffa
		}
	}
	return nil
}

func (_ddcaf ST_GrowShrinkType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bbdgf := _b.Attr{}
	_bbdgf.Name = name
	switch _ddcaf {
	case ST_GrowShrinkTypeUnset:
		_bbdgf.Value = ""
	case ST_GrowShrinkTypeInsertDelete:
		_bbdgf.Value = "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065"
	case ST_GrowShrinkTypeInsertClear:
		_bbdgf.Value = "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072"
	case ST_GrowShrinkTypeOverwriteClear:
		_bbdgf.Value = "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072"
	}
	return _bbdgf, nil
}

// ValidateWithPath validates the CT_TableColumn and its children, prefixing error messages with path
func (_fdeeeg *CT_TableColumn) ValidateWithPath(path string) error {
	if _fgfe := _fdeeeg.TotalsRowFunctionAttr.ValidateWithPath(path + "\u002f\u0054\u006f\u0074al\u0073\u0052\u006f\u0077\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0041\u0074t\u0072"); _fgfe != nil {
		return _fgfe
	}
	if _fdeeeg.CalculatedColumnFormula != nil {
		if _aagfdd := _fdeeeg.CalculatedColumnFormula.ValidateWithPath(path + "\u002fC\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0043\u006fl\u0075\u006d\u006e\u0046\u006f\u0072\u006d\u0075\u006c\u0061"); _aagfdd != nil {
			return _aagfdd
		}
	}
	if _fdeeeg.TotalsRowFormula != nil {
		if _dgbea := _fdeeeg.TotalsRowFormula.ValidateWithPath(path + "\u002f\u0054\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u006fr\u006d\u0075\u006c\u0061"); _dgbea != nil {
			return _dgbea
		}
	}
	if _fdeeeg.XmlColumnPr != nil {
		if _debbg := _fdeeeg.XmlColumnPr.ValidateWithPath(path + "\u002f\u0058\u006dl\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"); _debbg != nil {
			return _debbg
		}
	}
	if _fdeeeg.ExtLst != nil {
		if _gadea := _fdeeeg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gadea != nil {
			return _gadea
		}
	}
	return nil
}

func (_dagc *CT_ExternalSheetName) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dagc.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_dagc.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_ControlPr() *CT_ControlPr {
	_ecfad := &CT_ControlPr{}
	_ecfad.Anchor = NewCT_ObjectAnchor()
	return _ecfad
}

func (_abfeaf ST_Objects) String() string {
	switch _abfeaf {
	case 0:
		return ""
	case 1:
		return "\u0061\u006c\u006c"
	case 2:
		return "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

type CT_QueryTable struct {

	// QueryTable Name
	NameAttr string

	// First Row Column Titles
	HeadersAttr *bool

	// Row Numbers
	RowNumbersAttr *bool

	// Disable Refresh
	DisableRefreshAttr *bool

	// Background Refresh
	BackgroundRefreshAttr *bool

	// First Background Refresh
	FirstBackgroundRefreshAttr *bool

	// Refresh On Load
	RefreshOnLoadAttr *bool

	// Grow Shrink Type
	GrowShrinkTypeAttr ST_GrowShrinkType

	// Fill Adjacent Formulas
	FillFormulasAttr *bool

	// Remove Data On Save
	RemoveDataOnSaveAttr *bool

	// Disable Edit
	DisableEditAttr *bool

	// Preserve Formatting On Refresh
	PreserveFormattingAttr *bool

	// Adjust Column Width On Refresh
	AdjustColumnWidthAttr *bool

	// Intermediate
	IntermediateAttr *bool

	// Connection Id
	ConnectionIdAttr uint32

	// QueryTable Refresh Information
	QueryTableRefresh *CT_QueryTableRefresh

	// Future Feature Data Storage Area
	ExtLst                      *CT_ExtensionList
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

type CT_PivotFilters struct {

	// Pivot Filter Count
	CountAttr *uint32

	// PivotTable Advanced Filter
	Filter []*CT_PivotFilter
}

func (_fefgac *CT_RevisionMove) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _caeba := range start.Attr {
		if _caeba.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_babdf, _cgfad := _eb.ParseUint(_caeba.Value, 10, 32)
			if _cgfad != nil {
				return _cgfad
			}
			_fefgac.SheetIdAttr = uint32(_babdf)
			continue
		}
		if _caeba.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065" {
			_eddgbf, _bddbf := _caeba.Value, error(nil)
			if _bddbf != nil {
				return _bddbf
			}
			_fefgac.SourceAttr = _eddgbf
			continue
		}
		if _caeba.Name.Local == "d\u0065\u0073\u0074\u0069\u006e\u0061\u0074\u0069\u006f\u006e" {
			_cegbd, _daaag := _caeba.Value, error(nil)
			if _daaag != nil {
				return _daaag
			}
			_fefgac.DestinationAttr = _cegbd
			continue
		}
		if _caeba.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_cbdbf, _geedg := _eb.ParseUint(_caeba.Value, 10, 32)
			if _geedg != nil {
				return _geedg
			}
			_eaaabf := uint32(_cbdbf)
			_fefgac.SourceSheetIdAttr = &_eaaabf
			continue
		}
		if _caeba.Name.Local == "\u0072\u0049\u0064" {
			_fecgc, _gegbcd := _eb.ParseUint(_caeba.Value, 10, 32)
			if _gegbcd != nil {
				return _gegbcd
			}
			_dcdfd := uint32(_fecgc)
			_fefgac.RIdAttr = &_dcdfd
			continue
		}
		if _caeba.Name.Local == "\u0075\u0061" {
			_gbcgd, _dedffe := _eb.ParseBool(_caeba.Value)
			if _dedffe != nil {
				return _dedffe
			}
			_fefgac.UaAttr = &_gbcgd
			continue
		}
		if _caeba.Name.Local == "\u0072\u0061" {
			_dceag, _fgcgc := _eb.ParseBool(_caeba.Value)
			if _fgcgc != nil {
				return _fgcgc
			}
			_fefgac.RaAttr = &_dceag
			continue
		}
	}
_fdbfa:
	for {
		_ccdgb, _bedfeg := d.Token()
		if _bedfeg != nil {
			return _bedfeg
		}
		switch _gafaee := _ccdgb.(type) {
		case _b.StartElement:
			switch _gafaee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}:
				_cgbda := NewCT_UndoInfo()
				if _efbaf := d.DecodeElement(_cgbda, &_gafaee); _efbaf != nil {
					return _efbaf
				}
				_fefgac.Undo = append(_fefgac.Undo, _cgbda)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_dffdg := NewCT_RevisionCellChange()
				if _abdad := d.DecodeElement(_dffdg, &_gafaee); _abdad != nil {
					return _abdad
				}
				_fefgac.Rcc = append(_fefgac.Rcc, _dffdg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_ecdcg := NewCT_RevisionFormatting()
				if _ggdef := d.DecodeElement(_ecdcg, &_gafaee); _ggdef != nil {
					return _ggdef
				}
				_fefgac.Rfmt = append(_fefgac.Rfmt, _ecdcg)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065\u0020\u0025\u0076", _gafaee.Name)
				if _edbf := d.Skip(); _edbf != nil {
					return _edbf
				}
			}
		case _b.EndElement:
			break _fdbfa
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Fill and its children, prefixing error messages with path
func (_fgbf *CT_Fill) ValidateWithPath(path string) error {
	if _fgbf.PatternFill != nil {
		if _cabca := _fgbf.PatternFill.ValidateWithPath(path + "\u002f\u0050\u0061t\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"); _cabca != nil {
			return _cabca
		}
	}
	if _fgbf.GradientFill != nil {
		if _gegdf := _fgbf.GradientFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"); _gegdf != nil {
			return _gegdf
		}
	}
	return nil
}

func (_abbdae *CT_Selection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbaebe := range start.Attr {
		if _dbaebe.Name.Local == "\u0070\u0061\u006e\u0065" {
			_abbdae.PaneAttr.UnmarshalXMLAttr(_dbaebe)
			continue
		}
		if _dbaebe.Name.Local == "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0065\u006c\u006c" {
			_daccge, _gcgaea := _dbaebe.Value, error(nil)
			if _gcgaea != nil {
				return _gcgaea
			}
			_abbdae.ActiveCellAttr = &_daccge
			continue
		}
		if _dbaebe.Name.Local == "\u0061\u0063\u0074i\u0076\u0065\u0043\u0065\u006c\u006c\u0049\u0064" {
			_cfaadd, _gbccga := _eb.ParseUint(_dbaebe.Value, 10, 32)
			if _gbccga != nil {
				return _gbccga
			}
			_fbecbe := uint32(_cfaadd)
			_abbdae.ActiveCellIdAttr = &_fbecbe
			continue
		}
		if _dbaebe.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_edafb, _fgdegb := ParseSliceST_Sqref(_dbaebe.Value)
			if _fgdegb != nil {
				return _fgdegb
			}
			_abbdae.SqrefAttr = &_edafb
			continue
		}
	}
	for {
		_ffbee, _ccggb := d.Token()
		if _ccggb != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _ccggb)
		}
		if _bfdef, _aegfe := _ffbee.(_b.EndElement); _aegfe && _bfdef.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_ChartsheetViews struct {

	// Chart Sheet View
	SheetView []*CT_ChartsheetView
	ExtLst    *CT_ExtensionList
}

// Validate validates the CT_ConditionalFormat and its children
func (_feffe *CT_ConditionalFormat) Validate() error {
	return _feffe.ValidateWithPath("C\u0054_\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0061\u006c\u0046\u006frm\u0061\u0074")
}

// ValidateWithPath validates the CT_HeaderFooter and its children, prefixing error messages with path
func (_gbada *CT_HeaderFooter) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_DataConsolidate and its children
func (_abcab *CT_DataConsolidate) Validate() error {
	return _abcab.ValidateWithPath("\u0043T\u005fD\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065")
}

const (
	ST_DvAspectUnset            ST_DvAspect = 0
	ST_DvAspectDVASPECT_CONTENT ST_DvAspect = 1
	ST_DvAspectDVASPECT_ICON    ST_DvAspect = 2
)

func (_acdaf *CT_WebPublishObjects) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _acdaf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_acdaf.CountAttr)})
	}
	e.EncodeToken(start)
	_bcgebc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0077eb\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074"}}
	for _, _fdcaf := range _acdaf.WebPublishObject {
		e.EncodeElement(_fdcaf, _bcgebc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_RPrElt and its children
func (_gbbfg *CT_RPrElt) Validate() error {
	return _gbbfg.ValidateWithPath("\u0043T\u005f\u0052\u0050\u0072\u0045\u006ct")
}

func (_dgbdc ST_BorderStyle) String() string {
	switch _dgbdc {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0074\u0068\u0069\u006e"
	case 3:
		return "\u006d\u0065\u0064\u0069\u0075\u006d"
	case 4:
		return "\u0064\u0061\u0073\u0068\u0065\u0064"
	case 5:
		return "\u0064\u006f\u0074\u0074\u0065\u0064"
	case 6:
		return "\u0074\u0068\u0069c\u006b"
	case 7:
		return "\u0064\u006f\u0075\u0062\u006c\u0065"
	case 8:
		return "\u0068\u0061\u0069\u0072"
	case 9:
		return "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064"
	case 10:
		return "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case 11:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case 12:
		return "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case 13:
		return "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case 14:
		return "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	}
	return ""
}

// Validate validates the CT_TableParts and its children
func (_fgegab *CT_TableParts) Validate() error {
	return _fgegab.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073")
}

func NewCT_pivotTableDefinition() *CT_pivotTableDefinition {
	_daed := &CT_pivotTableDefinition{}
	_daed.Location = NewCT_Location()
	return _daed
}

// Validate validates the CT_CustomChartsheetViews and its children
func (_fagbc *CT_CustomChartsheetViews) Validate() error {
	return _fagbc.ValidateWithPath("\u0043T\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072t\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073")
}

type CT_Chartsheet struct {

	// Chart Sheet Properties
	SheetPr *CT_ChartsheetPr

	// Chart Sheet Views
	SheetViews *CT_ChartsheetViews

	// Chart Sheet Protection
	SheetProtection *CT_ChartsheetProtection

	// Custom Chart Sheet Views
	CustomSheetViews *CT_CustomChartsheetViews
	PageMargins      *CT_PageMargins
	PageSetup        *CT_CsPageSetup
	HeaderFooter     *CT_HeaderFooter

	// Drawing
	Drawing       *CT_Drawing
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Reference in Header Footer
	LegacyDrawingHF *CT_LegacyDrawing

	// Drawing Reference in Header Footer
	DrawingHF       *CT_DrawingHF
	Picture         *CT_SheetBackgroundPicture
	WebPublishItems *CT_WebPublishItems
	ExtLst          *CT_ExtensionList
}

type CT_FieldsUsage struct {

	// Field Count
	CountAttr *uint32

	// PivotCache Field Id
	FieldUsage []*CT_FieldUsage
}

type CT_Metadata struct {

	// Metadata Types Collection
	MetadataTypes *CT_MetadataTypes

	// Metadata String Store
	MetadataStrings *CT_MetadataStrings

	// MDX Metadata Information
	MdxMetadata *CT_MdxMetadata

	// Future Metadata
	FutureMetadata []*CT_FutureMetadata

	// Cell Metadata
	CellMetadata *CT_MetadataBlocks

	// Value Metadata
	ValueMetadata *CT_MetadataBlocks

	// Future Feature Storage Area
	ExtLst *CT_ExtensionList
}

func (_cccee *CT_Groups) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgcca := range start.Attr {
		if _cgcca.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ebfagg, _dbgfb := _eb.ParseUint(_cgcca.Value, 10, 32)
			if _dbgfb != nil {
				return _dbgfb
			}
			_dddce := uint32(_ebfagg)
			_cccee.CountAttr = &_dddce
			continue
		}
	}
_ceggb:
	for {
		_gbdfb, _gffbc := d.Token()
		if _gffbc != nil {
			return _gffbc
		}
		switch _dbede := _gbdfb.(type) {
		case _b.StartElement:
			switch _dbede.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070"}:
				_eddc := NewCT_LevelGroup()
				if _ffggdf := d.DecodeElement(_eddc, &_dbede); _ffggdf != nil {
					return _ffggdf
				}
				_cccee.Group = append(_cccee.Group, _eddc)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0047\u0072\u006fu\u0070\u0073 \u0025\u0076", _dbede.Name)
				if _ccbef := d.Skip(); _ccbef != nil {
					return _ccbef
				}
			}
		case _b.EndElement:
			break _ceggb
		case _b.CharData:
		}
	}
	return nil
}

func (_egfbg *CT_ExternalReference) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _egfbg.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_PivotCache() *CT_PivotCache { _gcadeg := &CT_PivotCache{}; return _gcadeg }

// Validate validates the CT_PivotCacheRecords and its children
func (_cgfec *CT_PivotCacheRecords) Validate() error {
	return _cgfec.ValidateWithPath("C\u0054_\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063h\u0065\u0052\u0065\u0063or\u0064\u0073")
}

func (_dgdaa *CT_RevisionSheetRename) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _dgdaa.SheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fl\u0064\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _dgdaa.OldNameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ee\u0077\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _dgdaa.NewNameAttr)})
	if _dgdaa.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_dgdaa.RIdAttr)})
	}
	if _dgdaa.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dgdaa.UaAttr))})
	}
	if _dgdaa.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dgdaa.RaAttr))})
	}
	e.EncodeToken(start)
	if _dgdaa.ExtLst != nil {
		_dcfegg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dgdaa.ExtLst, _dcfegg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_ExternalSheetData() *CT_ExternalSheetData { _addg := &CT_ExternalSheetData{}; return _addg }

// ValidateWithPath validates the CT_ColFields and its children, prefixing error messages with path
func (_eefa *CT_ColFields) ValidateWithPath(path string) error {
	for _fdff, _bfbg := range _eefa.Field {
		if _dgga := _bfbg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002fF\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _fdff)); _dgga != nil {
			return _dgga
		}
	}
	return nil
}

// ValidateWithPath validates the CT_XmlCellPr and its children, prefixing error messages with path
func (_fffff *CT_XmlCellPr) ValidateWithPath(path string) error {
	if _bbegcf := _fffff.XmlPr.ValidateWithPath(path + "\u002f\u0058\u006d\u006c\u0050\u0072"); _bbegcf != nil {
		return _bbegcf
	}
	if _fffff.ExtLst != nil {
		if _deded := _fffff.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _deded != nil {
			return _deded
		}
	}
	return nil
}

func (_gaffff ST_DvAspect) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fbfbff := _b.Attr{}
	_fbfbff.Name = name
	switch _gaffff {
	case ST_DvAspectUnset:
		_fbfbff.Value = ""
	case ST_DvAspectDVASPECT_CONTENT:
		_fbfbff.Value = "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054"
	case ST_DvAspectDVASPECT_ICON:
		_fbfbff.Value = "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e"
	}
	return _fbfbff, nil
}

// ValidateWithPath validates the CT_FontScheme and its children, prefixing error messages with path
func (_bddae *CT_FontScheme) ValidateWithPath(path string) error {
	if _bddae.ValAttr == ST_FontSchemeUnset {
		return _ec.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _eaafc := _bddae.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _eaafc != nil {
		return _eaafc
	}
	return nil
}

func (_cefcfa *CT_ExternalDefinedName) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbedf := range start.Attr {
		if _fbedf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_adgc, _ecdgf := _fbedf.Value, error(nil)
			if _ecdgf != nil {
				return _ecdgf
			}
			_cefcfa.NameAttr = _adgc
			continue
		}
		if _fbedf.Name.Local == "\u0072\u0065\u0066\u0065\u0072\u0073\u0054\u006f" {
			_abefa, _ccfa := _fbedf.Value, error(nil)
			if _ccfa != nil {
				return _ccfa
			}
			_cefcfa.RefersToAttr = &_abefa
			continue
		}
		if _fbedf.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_baeeb, _gadg := _eb.ParseUint(_fbedf.Value, 10, 32)
			if _gadg != nil {
				return _gadg
			}
			_agbfd := uint32(_baeeb)
			_cefcfa.SheetIdAttr = &_agbfd
			continue
		}
	}
	for {
		_cdad, _aggca := d.Token()
		if _aggca != nil {
			return _ec.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072n\u0061l\u0044e\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u003a\u0020\u0025\u0073", _aggca)
		}
		if _gbgdgc, _fcbf := _cdad.(_b.EndElement); _fcbf && _gbgdgc.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_PaneUnset       ST_Pane = 0
	ST_PaneBottomRight ST_Pane = 1
	ST_PaneTopRight    ST_Pane = 2
	ST_PaneBottomLeft  ST_Pane = 3
	ST_PaneTopLeft     ST_Pane = 4
)

// Validate validates the CT_ServerFormats and its children
func (_eeea *CT_ServerFormats) Validate() error {
	return _eeea.ValidateWithPath("\u0043\u0054_\u0053\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073")
}

// ValidateWithPath validates the CT_Border and its children, prefixing error messages with path
func (_eedcb *CT_Border) ValidateWithPath(path string) error {
	if _eedcb.Start != nil {
		if _bgee := _eedcb.Start.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0072\u0074"); _bgee != nil {
			return _bgee
		}
	}
	if _eedcb.End != nil {
		if _dcg := _eedcb.End.ValidateWithPath(path + "\u002f\u0045\u006e\u0064"); _dcg != nil {
			return _dcg
		}
	}
	if _eedcb.Left != nil {
		if _dcdd := _eedcb.Left.ValidateWithPath(path + "\u002f\u004c\u0065f\u0074"); _dcdd != nil {
			return _dcdd
		}
	}
	if _eedcb.Right != nil {
		if _ggc := _eedcb.Right.ValidateWithPath(path + "\u002f\u0052\u0069\u0067\u0068\u0074"); _ggc != nil {
			return _ggc
		}
	}
	if _eedcb.Top != nil {
		if _eff := _eedcb.Top.ValidateWithPath(path + "\u002f\u0054\u006f\u0070"); _eff != nil {
			return _eff
		}
	}
	if _eedcb.Bottom != nil {
		if _aggc := _eedcb.Bottom.ValidateWithPath(path + "\u002fB\u006f\u0074\u0074\u006f\u006d"); _aggc != nil {
			return _aggc
		}
	}
	if _eedcb.Diagonal != nil {
		if _gbcb := _eedcb.Diagonal.ValidateWithPath(path + "\u002fD\u0069\u0061\u0067\u006f\u006e\u0061l"); _gbcb != nil {
			return _gbcb
		}
	}
	if _eedcb.Vertical != nil {
		if _bgf := _eedcb.Vertical.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u0069\u0063\u0061l"); _bgf != nil {
			return _bgf
		}
	}
	if _eedcb.Horizontal != nil {
		if _cfeb := _eedcb.Horizontal.ValidateWithPath(path + "/\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"); _cfeb != nil {
			return _cfeb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BooleanProperty and its children, prefixing error messages with path
func (_cbe *CT_BooleanProperty) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_PageBreak and its children
func (_ggaffe *CT_PageBreak) Validate() error {
	return _ggaffe.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b")
}

// ValidateWithPath validates the CT_IconFilter and its children, prefixing error messages with path
func (_bdbce *CT_IconFilter) ValidateWithPath(path string) error {
	if _bdbce.IconSetAttr == ST_IconSetTypeUnset {
		return _ec.Errorf("%\u0073\u002f\u0049\u0063\u006f\u006eS\u0065\u0074\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _gedgad := _bdbce.IconSetAttr.ValidateWithPath(path + "\u002f\u0049\u0063o\u006e\u0053\u0065\u0074\u0041\u0074\u0074\u0072"); _gedgad != nil {
		return _gedgad
	}
	return nil
}

func (_bfg *CT_Break) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bfg.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_bfg.IdAttr)})
	}
	if _bfg.MinAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_bfg.MinAttr)})
	}
	if _bfg.MaxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078"}, Value: _ec.Sprintf("\u0025\u0076", *_bfg.MaxAttr)})
	}
	if _bfg.ManAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bfg.ManAttr))})
	}
	if _bfg.PtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bfg.PtAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PrintOptions and its children, prefixing error messages with path
func (_abcdea *CT_PrintOptions) ValidateWithPath(path string) error { return nil }

type CT_Dialogsheet struct {

	// Sheet Properties
	SheetPr *CT_SheetPr

	// Dialog Sheet Views
	SheetViews *CT_SheetViews

	// Dialog Sheet Format Properties
	SheetFormatPr *CT_SheetFormatPr

	// Sheet Protection
	SheetProtection *CT_SheetProtection

	// Custom Sheet Views
	CustomSheetViews *CT_CustomSheetViews

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Margins
	PageMargins *CT_PageMargins

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header & Footer Settings
	HeaderFooter *CT_HeaderFooter

	// Drawing
	Drawing *CT_Drawing

	// Legacy Drawing
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Header Footer
	LegacyDrawingHF *CT_LegacyDrawing
	DrawingHF       *CT_DrawingHF
	OleObjects      *CT_OleObjects
	Controls        *CT_Controls

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_SmartTagTypes and its children
func (_cggfc *CT_SmartTagTypes) Validate() error {
	return _cggfc.ValidateWithPath("\u0043\u0054_\u0053\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073")
}

func (_bedfb ST_Comments) ValidateWithPath(path string) error {
	switch _bedfb {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bedfb))
	}
	return nil
}

type CT_Item struct {

	// Item User Caption
	NAttr *string

	// Item Type
	TAttr ST_ItemType

	// Hidden
	HAttr *bool

	// Character
	SAttr *bool

	// Hide Details
	SdAttr *bool

	// Calculated Member
	FAttr *bool

	// Missing
	MAttr *bool

	// Child Items
	CAttr *bool

	// Item Index
	XAttr *uint32

	// Expanded
	DAttr *bool

	// Drill Across Attributes
	EAttr *bool
}

func (_gecca *PivotCacheDefinition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gecca.CT_PivotCacheDefinition = *NewCT_PivotCacheDefinition()
	for _, _ccfaa := range start.Attr {
		if _ccfaa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ccfaa.Name.Local == "\u0069\u0064" || _ccfaa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ccfaa.Name.Local == "\u0069\u0064" {
			_fgcec, _acdbe := _ccfaa.Value, error(nil)
			if _acdbe != nil {
				return _acdbe
			}
			_gecca.IdAttr = &_fgcec
			continue
		}
		if _ccfaa.Name.Local == "\u0075\u0070g\u0072\u0061\u0064e\u004f\u006e\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_fcbcf, _bccgce := _eb.ParseBool(_ccfaa.Value)
			if _bccgce != nil {
				return _bccgce
			}
			_gecca.UpgradeOnRefreshAttr = &_fcbcf
			continue
		}
		if _ccfaa.Name.Local == "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065" {
			_cabbaf, _bdacf := _eb.ParseBool(_ccfaa.Value)
			if _bdacf != nil {
				return _bdacf
			}
			_gecca.TupleCacheAttr = &_cabbaf
			continue
		}
		if _ccfaa.Name.Local == "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061" {
			_gdeaf, _bcecdb := _eb.ParseBool(_ccfaa.Value)
			if _bcecdb != nil {
				return _bcecdb
			}
			_gecca.SaveDataAttr = &_gdeaf
			continue
		}
		if _ccfaa.Name.Local == "\u0073u\u0070p\u006f\u0072\u0074\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0079" {
			_cdcd, _egefa := _eb.ParseBool(_ccfaa.Value)
			if _egefa != nil {
				return _egefa
			}
			_gecca.SupportSubqueryAttr = &_cdcd
			continue
		}
		if _ccfaa.Name.Local == "\u006f\u0070\u0074\u0069\u006d\u0069\u007a\u0065\u004de\u006d\u006f\u0072\u0079" {
			_cgadf, _ebdbc := _eb.ParseBool(_ccfaa.Value)
			if _ebdbc != nil {
				return _ebdbc
			}
			_gecca.OptimizeMemoryAttr = &_cgadf
			continue
		}
		if _ccfaa.Name.Local == "s\u0075p\u0070\u006f\u0072\u0074\u0041\u0064\u0076\u0061n\u0063\u0065\u0064\u0044ri\u006c\u006c" {
			_deadd, _fdgeaf := _eb.ParseBool(_ccfaa.Value)
			if _fdgeaf != nil {
				return _fdgeaf
			}
			_gecca.SupportAdvancedDrillAttr = &_deadd
			continue
		}
		if _ccfaa.Name.Local == "r\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0042\u0079" {
			_faaag, _acfde := _ccfaa.Value, error(nil)
			if _acfde != nil {
				return _acfde
			}
			_gecca.RefreshedByAttr = &_faaag
			continue
		}
		if _ccfaa.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0044\u0061\u0074\u0065\u0049\u0073\u006f" {
			_bacee, _dcdbbe := ParseStdlibTime(_ccfaa.Value)
			if _dcdbbe != nil {
				return _dcdbbe
			}
			_gecca.RefreshedDateIsoAttr = &_bacee
			continue
		}
		if _ccfaa.Name.Local == "\u0069n\u0076\u0061\u006c\u0069\u0064" {
			_bgagg, _fedaf := _eb.ParseBool(_ccfaa.Value)
			if _fedaf != nil {
				return _fedaf
			}
			_gecca.InvalidAttr = &_bgagg
			continue
		}
		if _ccfaa.Name.Local == "\u0062a\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0051\u0075\u0065\u0072\u0079" {
			_fabdaa, _degcga := _eb.ParseBool(_ccfaa.Value)
			if _degcga != nil {
				return _degcga
			}
			_gecca.BackgroundQueryAttr = &_fabdaa
			continue
		}
		if _ccfaa.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0049\u0074\u0065\u006d\u0073L\u0069\u006d\u0069\u0074" {
			_ccbfe, _eefbe := _eb.ParseUint(_ccfaa.Value, 10, 32)
			if _eefbe != nil {
				return _eefbe
			}
			_ffggca := uint32(_ccbfe)
			_gecca.MissingItemsLimitAttr = &_ffggca
			continue
		}
		if _ccfaa.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_eabegc, _cgdad := _eb.ParseUint(_ccfaa.Value, 10, 8)
			if _cgdad != nil {
				return _cgdad
			}
			_dcgcc := uint8(_eabegc)
			_gecca.RefreshedVersionAttr = &_dcgcc
			continue
		}
		if _ccfaa.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_cfbcc, _cgfada := _eb.ParseBool(_ccfaa.Value)
			if _cgfada != nil {
				return _cgfada
			}
			_gecca.RefreshOnLoadAttr = &_cfbcc
			continue
		}
		if _ccfaa.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0044\u0061\u0074\u0065" {
			_gafda, _eecfc := _eb.ParseFloat(_ccfaa.Value, 64)
			if _eecfc != nil {
				return _eecfc
			}
			_gecca.RefreshedDateAttr = &_gafda
			continue
		}
		if _ccfaa.Name.Local == "r\u0065\u0063\u006f\u0072\u0064\u0043\u006f\u0075\u006e\u0074" {
			_gafag, _ebceb := _eb.ParseUint(_ccfaa.Value, 10, 32)
			if _ebceb != nil {
				return _ebceb
			}
			_efcebg := uint32(_gafag)
			_gecca.RecordCountAttr = &_efcebg
			continue
		}
		if _ccfaa.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_gggdf, _cceca := _eb.ParseUint(_ccfaa.Value, 10, 8)
			if _cceca != nil {
				return _cceca
			}
			_dabdea := uint8(_gggdf)
			_gecca.CreatedVersionAttr = &_dabdea
			continue
		}
		if _ccfaa.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_dbgfgc, _gadcfc := _eb.ParseUint(_ccfaa.Value, 10, 8)
			if _gadcfc != nil {
				return _gadcfc
			}
			_ddaba := uint8(_dbgfgc)
			_gecca.MinRefreshableVersionAttr = &_ddaba
			continue
		}
		if _ccfaa.Name.Local == "\u0065\u006e\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_bddbg, _cabef := _eb.ParseBool(_ccfaa.Value)
			if _cabef != nil {
				return _cabef
			}
			_gecca.EnableRefreshAttr = &_bddbg
			continue
		}
	}
_acffg:
	for {
		_dgcef, _bdggge := d.Token()
		if _bdggge != nil {
			return _bdggge
		}
		switch _ececg := _dgcef.(type) {
		case _b.StartElement:
			switch _ececg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}:
				if _bacef := d.DecodeElement(_gecca.CacheSource, &_ececg); _bacef != nil {
					return _bacef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				if _fcfcd := d.DecodeElement(_gecca.CacheFields, &_ececg); _fcfcd != nil {
					return _fcfcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_gecca.CacheHierarchies = NewCT_CacheHierarchies()
				if _efcec := d.DecodeElement(_gecca.CacheHierarchies, &_ececg); _efcec != nil {
					return _efcec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}:
				_gecca.Kpis = NewCT_PCDKPIs()
				if _fgfda := d.DecodeElement(_gecca.Kpis, &_ececg); _fgfda != nil {
					return _fgfda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}:
				_gecca.TupleCache = NewCT_TupleCache()
				if _edaccc := d.DecodeElement(_gecca.TupleCache, &_ececg); _edaccc != nil {
					return _edaccc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}:
				_gecca.CalculatedItems = NewCT_CalculatedItems()
				if _agdgga := d.DecodeElement(_gecca.CalculatedItems, &_ececg); _agdgga != nil {
					return _agdgga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}:
				_gecca.CalculatedMembers = NewCT_CalculatedMembers()
				if _edbge := d.DecodeElement(_gecca.CalculatedMembers, &_ececg); _edbge != nil {
					return _edbge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}:
				_gecca.Dimensions = NewCT_Dimensions()
				if _ggbga := d.DecodeElement(_gecca.Dimensions, &_ececg); _ggbga != nil {
					return _ggbga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}:
				_gecca.MeasureGroups = NewCT_MeasureGroups()
				if _acged := d.DecodeElement(_gecca.MeasureGroups, &_ececg); _acged != nil {
					return _acged
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}:
				_gecca.Maps = NewCT_MeasureDimensionMaps()
				if _bcdfg := d.DecodeElement(_gecca.Maps, &_ececg); _bcdfg != nil {
					return _bcdfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gecca.ExtLst = NewCT_ExtensionList()
				if _ggfga := d.DecodeElement(_gecca.ExtLst, &_ececg); _ggfga != nil {
					return _ggfga
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _ececg.Name)
				if _gabdga := d.Skip(); _gabdga != nil {
					return _gabdga
				}
			}
		case _b.EndElement:
			break _acffg
		case _b.CharData:
		}
	}
	return nil
}

func (_eface *CT_MdxMetadata) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ccbeff := range start.Attr {
		if _ccbeff.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bgdeg, _ececa := _eb.ParseUint(_ccbeff.Value, 10, 32)
			if _ececa != nil {
				return _ececa
			}
			_dfacg := uint32(_bgdeg)
			_eface.CountAttr = &_dfacg
			continue
		}
	}
_abbbf:
	for {
		_ecba, _bfgecc := d.Token()
		if _bfgecc != nil {
			return _bfgecc
		}
		switch _bdcea := _ecba.(type) {
		case _b.StartElement:
			switch _bdcea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0064\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0064\u0078"}:
				_facdd := NewCT_Mdx()
				if _facce := d.DecodeElement(_facdd, &_bdcea); _facce != nil {
					return _facce
				}
				_eface.Mdx = append(_eface.Mdx, _facdd)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u0074\u0061d\u0061t\u0061\u0020\u0025\u0076", _bdcea.Name)
				if _debddb := d.Skip(); _debddb != nil {
					return _debddb
				}
			}
		case _b.EndElement:
			break _abbbf
		case _b.CharData:
		}
	}
	return nil
}

func (_gecaf *CT_CustomFilter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gecaf.OperatorAttr != ST_FilterOperatorUnset {
		_abeeb, _gabcf := _gecaf.OperatorAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072"})
		if _gabcf != nil {
			return _gabcf
		}
		start.Attr = append(start.Attr, _abeeb)
	}
	if _gecaf.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_gecaf.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CustomProperties and its children, prefixing error messages with path
func (_fcdab *CT_CustomProperties) ValidateWithPath(path string) error {
	for _eadfg, _gdbdd := range _fcdab.CustomPr {
		if _ebdc := _gdbdd.ValidateWithPath(_ec.Sprintf("\u0025s\u002fC\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u005b\u0025\u0064\u005d", path, _eadfg)); _ebdc != nil {
			return _ebdc
		}
	}
	return nil
}

// Validate validates the CT_Hyperlinks and its children
func (_fcgdc *CT_Hyperlinks) Validate() error {
	return _fcgdc.ValidateWithPath("\u0043\u0054\u005f\u0048\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073")
}

func (_dddcea *ST_PageOrder) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fcfdb, _ebedb := d.Token()
	if _ebedb != nil {
		return _ebedb
	}
	if _ecbgaa, _cffgeb := _fcfdb.(_b.EndElement); _cffgeb && _ecbgaa.Name == start.Name {
		*_dddcea = 1
		return nil
	}
	if _gbgbec, _bfdee := _fcfdb.(_b.CharData); !_bfdee {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcfdb)
	} else {
		switch string(_gbgbec) {
		case "":
			*_dddcea = 0
		case "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072":
			*_dddcea = 1
		case "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e":
			*_dddcea = 2
		}
	}
	_fcfdb, _ebedb = d.Token()
	if _ebedb != nil {
		return _ebedb
	}
	if _gbfcb, _fcgdd := _fcfdb.(_b.EndElement); _fcgdd && _gbfcb.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcfdb)
}

// Validate validates the CT_ChartsheetProtection and its children
func (_fcgae *CT_ChartsheetProtection) Validate() error {
	return _fcgae.ValidateWithPath("\u0043\u0054\u005fCh\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e")
}

func (_cfebg *CT_ExternalLink) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cfebg.Choice != nil {
		_cfebg.Choice.MarshalXML(e, _b.StartElement{})
	}
	if _cfebg.ExtLst != nil {
		_gdff := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cfebg.ExtLst, _gdff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cegad ST_FilterOperator) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cegad.String(), start)
}

func NewCT_String() *CT_String { _egeccg := &CT_String{}; return _egeccg }

func (_caad *CT_Connections) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_edca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}}
	for _, _ecafe := range _caad.Connection {
		e.EncodeElement(_ecafe, _edca)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_FieldGroup struct {

	// Parent
	ParAttr *uint32

	// Field Base
	BaseAttr *uint32

	// Range Grouping Properties
	RangePr *CT_RangePr

	// Discrete Grouping Properties
	DiscretePr *CT_DiscretePr

	// OLAP Group Items
	GroupItems *CT_GroupItems
}

// ValidateWithPath validates the CT_Dialogsheet and its children, prefixing error messages with path
func (_deee *CT_Dialogsheet) ValidateWithPath(path string) error {
	if _deee.SheetPr != nil {
		if _fadfg := _deee.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _fadfg != nil {
			return _fadfg
		}
	}
	if _deee.SheetViews != nil {
		if _cagc := _deee.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _cagc != nil {
			return _cagc
		}
	}
	if _deee.SheetFormatPr != nil {
		if _cfdg := _deee.SheetFormatPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"); _cfdg != nil {
			return _cfdg
		}
	}
	if _deee.SheetProtection != nil {
		if _gfdeb := _deee.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _gfdeb != nil {
			return _gfdeb
		}
	}
	if _deee.CustomSheetViews != nil {
		if _aade := _deee.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _aade != nil {
			return _aade
		}
	}
	if _deee.PrintOptions != nil {
		if _gfbga := _deee.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _gfbga != nil {
			return _gfbga
		}
	}
	if _deee.PageMargins != nil {
		if _ffddfa := _deee.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _ffddfa != nil {
			return _ffddfa
		}
	}
	if _deee.PageSetup != nil {
		if _cfbbe := _deee.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _cfbbe != nil {
			return _cfbbe
		}
	}
	if _deee.HeaderFooter != nil {
		if _daeed := _deee.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _daeed != nil {
			return _daeed
		}
	}
	if _deee.Drawing != nil {
		if _ebgcc := _deee.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _ebgcc != nil {
			return _ebgcc
		}
	}
	if _deee.LegacyDrawing != nil {
		if _fbae := _deee.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _fbae != nil {
			return _fbae
		}
	}
	if _deee.LegacyDrawingHF != nil {
		if _ggaf := _deee.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _ggaf != nil {
			return _ggaf
		}
	}
	if _deee.DrawingHF != nil {
		if _aaef := _deee.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _aaef != nil {
			return _aaef
		}
	}
	if _deee.OleObjects != nil {
		if _afggd := _deee.OleObjects.ValidateWithPath(path + "/\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"); _afggd != nil {
			return _afggd
		}
	}
	if _deee.Controls != nil {
		if _bgged := _deee.Controls.ValidateWithPath(path + "\u002fC\u006f\u006e\u0074\u0072\u006f\u006cs"); _bgged != nil {
			return _bgged
		}
	}
	if _deee.ExtLst != nil {
		if _fbbf := _deee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbbf != nil {
			return _fbbf
		}
	}
	return nil
}

type CT_CustomChartsheetView struct {

	// GUID
	GuidAttr string

	// Print Scale
	ScaleAttr *uint32

	// Visible State
	StateAttr ST_SheetState

	// Zoom To Fit
	ZoomToFitAttr *bool
	PageMargins   *CT_PageMargins

	// Chart Sheet Page Setup
	PageSetup    *CT_CsPageSetup
	HeaderFooter *CT_HeaderFooter
}

func (_ccgbf *CT_PivotField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ccgbf.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_ccgbf.NameAttr)})
	}
	if _ccgbf.AxisAttr != ST_AxisUnset {
		_dfgaa, _bgfeg := _ccgbf.AxisAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0078\u0069\u0073"})
		if _bgfeg != nil {
			return _bgfeg
		}
		start.Attr = append(start.Attr, _dfgaa)
	}
	if _ccgbf.DataFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.DataFieldAttr))})
	}
	if _ccgbf.SubtotalCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073u\u0062t\u006f\u0074\u0061\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_ccgbf.SubtotalCaptionAttr)})
	}
	if _ccgbf.ShowDropDownsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.ShowDropDownsAttr))})
	}
	if _ccgbf.HiddenLevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "h\u0069\u0064\u0064\u0065\u006e\u004c\u0065\u0076\u0065\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.HiddenLevelAttr))})
	}
	if _ccgbf.UniqueMemberPropertyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "u\u006ei\u0071\u0075\u0065\u004d\u0065\u006d\u0062\u0065r\u0050\u0072\u006f\u0070er\u0074\u0079"}, Value: _ec.Sprintf("\u0025\u0076", *_ccgbf.UniqueMemberPropertyAttr)})
	}
	if _ccgbf.CompactAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u0070\u0061\u0063\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.CompactAttr))})
	}
	if _ccgbf.AllDrilledAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u0044\u0072\u0069\u006c\u006c\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.AllDrilledAttr))})
	}
	if _ccgbf.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_ccgbf.NumFmtIdAttr)})
	}
	if _ccgbf.OutlineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.OutlineAttr))})
	}
	if _ccgbf.SubtotalTopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.SubtotalTopAttr))})
	}
	if _ccgbf.DragToRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.DragToRowAttr))})
	}
	if _ccgbf.DragToColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.DragToColAttr))})
	}
	if _ccgbf.MultipleItemSelectionAllowedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.MultipleItemSelectionAllowedAttr))})
	}
	if _ccgbf.DragToPageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.DragToPageAttr))})
	}
	if _ccgbf.DragToDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.DragToDataAttr))})
	}
	if _ccgbf.DragOffAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064r\u0061\u0067\u004f\u0066\u0066"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.DragOffAttr))})
	}
	if _ccgbf.ShowAllAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0041\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.ShowAllAttr))})
	}
	if _ccgbf.InsertBlankRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0042\u006c\u0061n\u006b\u0052\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.InsertBlankRowAttr))})
	}
	if _ccgbf.ServerFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.ServerFieldAttr))})
	}
	if _ccgbf.InsertPageBreakAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069n\u0073e\u0072\u0074\u0050\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.InsertPageBreakAttr))})
	}
	if _ccgbf.AutoShowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0053\u0068\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.AutoShowAttr))})
	}
	if _ccgbf.TopAutoShowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u006f\u0070\u0041\u0075\u0074\u006f\u0053\u0068\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.TopAutoShowAttr))})
	}
	if _ccgbf.HideNewItemsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064e\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.HideNewItemsAttr))})
	}
	if _ccgbf.MeasureFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.MeasureFilterAttr))})
	}
	if _ccgbf.IncludeNewItemsInFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.IncludeNewItemsInFilterAttr))})
	}
	if _ccgbf.ItemPageCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0074\u0065\u006d\u0050\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ccgbf.ItemPageCountAttr)})
	}
	if _ccgbf.SortTypeAttr != ST_FieldSortTypeUnset {
		_eegfd, _cdgdd := _ccgbf.SortTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065"})
		if _cdgdd != nil {
			return _cdgdd
		}
		start.Attr = append(start.Attr, _eegfd)
	}
	if _ccgbf.DataSourceSortAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061\u0053\u006f\u0075\u0072\u0063e\u0053\u006f\u0072\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.DataSourceSortAttr))})
	}
	if _ccgbf.NonAutoSortDefaultAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006eo\u006eA\u0075\u0074\u006f\u0053\u006fr\u0074\u0044e\u0066\u0061\u0075\u006c\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.NonAutoSortDefaultAttr))})
	}
	if _ccgbf.RankByAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061\u006e\u006b\u0042\u0079"}, Value: _ec.Sprintf("\u0025\u0076", *_ccgbf.RankByAttr)})
	}
	if _ccgbf.DefaultSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.DefaultSubtotalAttr))})
	}
	if _ccgbf.SumSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.SumSubtotalAttr))})
	}
	if _ccgbf.CountASubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.CountASubtotalAttr))})
	}
	if _ccgbf.AvgSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.AvgSubtotalAttr))})
	}
	if _ccgbf.MaxSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.MaxSubtotalAttr))})
	}
	if _ccgbf.MinSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.MinSubtotalAttr))})
	}
	if _ccgbf.ProductSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.ProductSubtotalAttr))})
	}
	if _ccgbf.CountSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.CountSubtotalAttr))})
	}
	if _ccgbf.StdDevSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.StdDevSubtotalAttr))})
	}
	if _ccgbf.StdDevPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.StdDevPSubtotalAttr))})
	}
	if _ccgbf.VarSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.VarSubtotalAttr))})
	}
	if _ccgbf.VarPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.VarPSubtotalAttr))})
	}
	if _ccgbf.ShowPropCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0050\u0072\u006f\u0070\u0043\u0065\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.ShowPropCellAttr))})
	}
	if _ccgbf.ShowPropTipAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0054\u0069\u0070"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.ShowPropTipAttr))})
	}
	if _ccgbf.ShowPropAsCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0041\u0073\u0043\u0061p\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.ShowPropAsCaptionAttr))})
	}
	if _ccgbf.DefaultAttributeDrillStateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0041\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0044\u0072\u0069\u006c\u006c\u0053t\u0061\u0074\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ccgbf.DefaultAttributeDrillStateAttr))})
	}
	e.EncodeToken(start)
	if _ccgbf.Items != nil {
		_gdaae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_ccgbf.Items, _gdaae)
	}
	if _ccgbf.AutoSortScope != nil {
		_abceaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0061\u0075\u0074o\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065"}}
		e.EncodeElement(_ccgbf.AutoSortScope, _abceaf)
	}
	if _ccgbf.ExtLst != nil {
		_fffga := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ccgbf.ExtLst, _fffga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_OleSize and its children, prefixing error messages with path
func (_baffc *CT_OleSize) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Dimensions and its children
func (_fgbea *CT_Dimensions) Validate() error {
	return _fgbea.ValidateWithPath("\u0043\u0054\u005f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073")
}

func (_cgaa *CT_CacheHierarchy) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _cgaa.UniqueNameAttr)})
	if _cgaa.CaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_cgaa.CaptionAttr)})
	}
	if _cgaa.MeasureAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006de\u0061\u0073\u0075\u0072\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cgaa.MeasureAttr))})
	}
	if _cgaa.SetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cgaa.SetAttr))})
	}
	if _cgaa.ParentSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070a\u0072\u0065\u006e\u0074\u0053\u0065t"}, Value: _ec.Sprintf("\u0025\u0076", *_cgaa.ParentSetAttr)})
	}
	if _cgaa.IconSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_cgaa.IconSetAttr)})
	}
	if _cgaa.AttributeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061t\u0074\u0072\u0069\u0062\u0075\u0074e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cgaa.AttributeAttr))})
	}
	if _cgaa.TimeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cgaa.TimeAttr))})
	}
	if _cgaa.KeyAttributeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006b\u0065\u0079A\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cgaa.KeyAttributeAttr))})
	}
	if _cgaa.DefaultMemberUniqueNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0066au\u006c\u0074\u004d\u0065\u006d\u0062\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_cgaa.DefaultMemberUniqueNameAttr)})
	}
	if _cgaa.AllUniqueNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_cgaa.AllUniqueNameAttr)})
	}
	if _cgaa.AllCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_cgaa.AllCaptionAttr)})
	}
	if _cgaa.DimensionUniqueNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u006d\u0065ns\u0069\u006f\u006e\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_cgaa.DimensionUniqueNameAttr)})
	}
	if _cgaa.DisplayFolderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_cgaa.DisplayFolderAttr)})
	}
	if _cgaa.MeasureGroupAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, Value: _ec.Sprintf("\u0025\u0076", *_cgaa.MeasureGroupAttr)})
	}
	if _cgaa.MeasuresAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cgaa.MeasuresAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", _cgaa.CountAttr)})
	if _cgaa.OneFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006e\u0065\u0046\u0069\u0065\u006c\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cgaa.OneFieldAttr))})
	}
	if _cgaa.MemberValueDatatypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u006d\u0062er\u0056\u0061\u006c\u0075\u0065\u0044\u0061\u0074\u0061\u0074\u0079\u0070\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_cgaa.MemberValueDatatypeAttr)})
	}
	if _cgaa.UnbalancedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cgaa.UnbalancedAttr))})
	}
	if _cgaa.UnbalancedGroupAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075n\u0062a\u006c\u0061\u006e\u0063\u0065\u0064\u0047\u0072\u006f\u0075\u0070"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cgaa.UnbalancedGroupAttr))})
	}
	if _cgaa.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cgaa.HiddenAttr))})
	}
	e.EncodeToken(start)
	if _cgaa.FieldsUsage != nil {
		_edaa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064\u0073U\u0073\u0061\u0067\u0065"}}
		e.EncodeElement(_cgaa.FieldsUsage, _edaa)
	}
	if _cgaa.GroupLevels != nil {
		_fgbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u004ce\u0076\u0065\u006c\u0073"}}
		e.EncodeElement(_cgaa.GroupLevels, _fgbc)
	}
	if _cgaa.ExtLst != nil {
		_abeb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cgaa.ExtLst, _abeb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SheetCalcPr and its children, prefixing error messages with path
func (_eggge *CT_SheetCalcPr) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_OlapPr and its children
func (_adggc *CT_OlapPr) Validate() error {
	return _adggc.ValidateWithPath("\u0043T\u005f\u004f\u006c\u0061\u0070\u0050r")
}

func (_cefab *CT_QueryTableFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cefab.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_cefab.CountAttr)})
	}
	e.EncodeToken(start)
	if _cefab.QueryTableField != nil {
		_bdeaf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003aq\u0075\u0065\u0072\u0079\u0054a\u0062\u006ce\u0046\u0069\u0065\u006c\u0064"}}
		for _, _cecca := range _cefab.QueryTableField {
			e.EncodeElement(_cecca, _bdeaf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func ParseSliceST_Sqref(s string) (ST_Sqref, error) { return ST_Sqref(_ea.Fields(s)), nil }

type CT_PivotTableStyle struct {

	// Table Style Name
	NameAttr *string

	// Show Row Header Formatting
	ShowRowHeadersAttr *bool

	// Show Table Style Column Header Formatting
	ShowColHeadersAttr *bool

	// Show Row Stripes
	ShowRowStripesAttr *bool

	// Show Column Stripes
	ShowColStripesAttr *bool

	// Show Last Column
	ShowLastColumnAttr *bool
}

type CT_XmlCellPr struct {

	// Table Field Id
	IdAttr uint32

	// Unique Table Name
	UniqueNameAttr *string

	// Column XML Properties
	XmlPr *CT_XmlPr

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_ProtectedRange and its children
func (_cccgd *CT_ProtectedRange) Validate() error {
	return _cccgd.ValidateWithPath("\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065")
}

func (_badaaa *CT_Scenarios) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ccagg := range start.Attr {
		if _ccagg.Name.Local == "\u0063u\u0072\u0072\u0065\u006e\u0074" {
			_fcfeag, _dagcg := _eb.ParseUint(_ccagg.Value, 10, 32)
			if _dagcg != nil {
				return _dagcg
			}
			_edgab := uint32(_fcfeag)
			_badaaa.CurrentAttr = &_edgab
			continue
		}
		if _ccagg.Name.Local == "\u0073\u0068\u006f\u0077" {
			_gaaca, _dggcbg := _eb.ParseUint(_ccagg.Value, 10, 32)
			if _dggcbg != nil {
				return _dggcbg
			}
			_beaea := uint32(_gaaca)
			_badaaa.ShowAttr = &_beaea
			continue
		}
		if _ccagg.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_bafgbe, _edffg := ParseSliceST_Sqref(_ccagg.Value)
			if _edffg != nil {
				return _edffg
			}
			_badaaa.SqrefAttr = &_bafgbe
			continue
		}
	}
_cgeb:
	for {
		_cbbfa, _dcgeff := d.Token()
		if _dcgeff != nil {
			return _dcgeff
		}
		switch _gebff := _cbbfa.(type) {
		case _b.StartElement:
			switch _gebff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"}:
				_acggc := NewCT_Scenario()
				if _fabea := d.DecodeElement(_acggc, &_gebff); _fabea != nil {
					return _fabea
				}
				_badaaa.Scenario = append(_badaaa.Scenario, _acggc)
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0063\u0065n\u0061\u0072\u0069\u006f\u0073\u0020\u0025\u0076", _gebff.Name)
				if _begeb := d.Skip(); _begeb != nil {
					return _begeb
				}
			}
		case _b.EndElement:
			break _cgeb
		case _b.CharData:
		}
	}
	return nil
}

func (_cegbc *CT_IntProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", _cegbc.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_faee *CT_DataBinding) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fgbe := range start.Attr {
		if _fgbe.Name.Local == "\u0044a\u0074a\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_aecd, _ddad := _fgbe.Value, error(nil)
			if _ddad != nil {
				return _ddad
			}
			_faee.DataBindingNameAttr = &_aecd
			continue
		}
		if _fgbe.Name.Local == "F\u0069\u006c\u0065\u0042\u0069\u006e\u0064\u0069\u006e\u0067" {
			_dcaeab, _bedc := _eb.ParseBool(_fgbe.Value)
			if _bedc != nil {
				return _bedc
			}
			_faee.FileBindingAttr = &_dcaeab
			continue
		}
		if _fgbe.Name.Local == "\u0043\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0044" {
			_gafea, _dfada := _eb.ParseUint(_fgbe.Value, 10, 32)
			if _dfada != nil {
				return _dfada
			}
			_gbef := uint32(_gafea)
			_faee.ConnectionIDAttr = &_gbef
			continue
		}
		if _fgbe.Name.Local == "\u0046i\u006ce\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_gagg, _geba := _fgbe.Value, error(nil)
			if _geba != nil {
				return _geba
			}
			_faee.FileBindingNameAttr = &_gagg
			continue
		}
		if _fgbe.Name.Local == "\u0044\u0061\u0074\u0061Bi\u006e\u0064\u0069\u006e\u0067\u004c\u006f\u0061\u0064\u004d\u006f\u0064\u0065" {
			_eegf, _egab := _eb.ParseUint(_fgbe.Value, 10, 32)
			if _egab != nil {
				return _egab
			}
			_faee.DataBindingLoadModeAttr = uint32(_eegf)
			continue
		}
	}
_cbafc:
	for {
		_dccf, _gbdde := d.Token()
		if _gbdde != nil {
			return _gbdde
		}
		switch _ddgfd := _dccf.(type) {
		case _b.StartElement:
			switch _ddgfd.Name {
			default:
				if _gaad, _bdfc := _f.CreateElement(_ddgfd); _bdfc != nil {
					return _bdfc
				} else {
					if _ffbad := d.DecodeElement(_gaad, &_ddgfd); _ffbad != nil {
						return _ffbad
					}
					_faee.Any = _gaad
				}
			}
		case _b.EndElement:
			break _cbafc
		case _b.CharData:
		}
	}
	return nil
}

func (_bdgfgf *CT_PhoneticRun) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0062"}, Value: _ec.Sprintf("\u0025\u0076", _bdgfgf.SbAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0062"}, Value: _ec.Sprintf("\u0025\u0076", _bdgfgf.EbAttr)})
	e.EncodeToken(start)
	_ffebbd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074"}}
	_f.AddPreserveSpaceAttr(&_ffebbd, _bdgfgf.T)
	e.EncodeElement(_bdgfgf.T, _ffebbd)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_daceb *CT_MemberProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ceeeg := range start.Attr {
		if _ceeeg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dfae, _aaggb := _ceeeg.Value, error(nil)
			if _aaggb != nil {
				return _aaggb
			}
			_daceb.NameAttr = &_dfae
			continue
		}
		if _ceeeg.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u0065\u006c\u006c" {
			_cfegag, _defaf := _eb.ParseBool(_ceeeg.Value)
			if _defaf != nil {
				return _defaf
			}
			_daceb.ShowCellAttr = &_cfegag
			continue
		}
		if _ceeeg.Name.Local == "\u0073h\u006f\u0077\u0054\u0069\u0070" {
			_befde, _bccgf := _eb.ParseBool(_ceeeg.Value)
			if _bccgf != nil {
				return _bccgf
			}
			_daceb.ShowTipAttr = &_befde
			continue
		}
		if _ceeeg.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_cagbc, _ebfdc := _eb.ParseBool(_ceeeg.Value)
			if _ebfdc != nil {
				return _ebfdc
			}
			_daceb.ShowAsCaptionAttr = &_cagbc
			continue
		}
		if _ceeeg.Name.Local == "\u006ea\u006d\u0065\u004c\u0065\u006e" {
			_afed, _baefcg := _eb.ParseUint(_ceeeg.Value, 10, 32)
			if _baefcg != nil {
				return _baefcg
			}
			_afec := uint32(_afed)
			_daceb.NameLenAttr = &_afec
			continue
		}
		if _ceeeg.Name.Local == "\u0070\u0050\u006f\u0073" {
			_bcgba, _fgddd := _eb.ParseUint(_ceeeg.Value, 10, 32)
			if _fgddd != nil {
				return _fgddd
			}
			_bgdbc := uint32(_bcgba)
			_daceb.PPosAttr = &_bgdbc
			continue
		}
		if _ceeeg.Name.Local == "\u0070\u004c\u0065\u006e" {
			_cadda, _ccadfe := _eb.ParseUint(_ceeeg.Value, 10, 32)
			if _ccadfe != nil {
				return _ccadfe
			}
			_beebg := uint32(_cadda)
			_daceb.PLenAttr = &_beebg
			continue
		}
		if _ceeeg.Name.Local == "\u006c\u0065\u0076e\u006c" {
			_ggbbc, _gcgga := _eb.ParseUint(_ceeeg.Value, 10, 32)
			if _gcgga != nil {
				return _gcgga
			}
			_aadda := uint32(_ggbbc)
			_daceb.LevelAttr = &_aadda
			continue
		}
		if _ceeeg.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_eddgb, _eefe := _eb.ParseUint(_ceeeg.Value, 10, 32)
			if _eefe != nil {
				return _eefe
			}
			_daceb.FieldAttr = uint32(_eddgb)
			continue
		}
	}
	for {
		_faddf, _bbcce := d.Token()
		if _bbcce != nil {
			return _ec.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079: \u0025\u0073", _bbcce)
		}
		if _baedb, _fgaea := _faddf.(_b.EndElement); _fgaea && _baedb.Name == start.Name {
			break
		}
	}
	return nil
}

func NewVolTypes() *VolTypes {
	_cbbdf := &VolTypes{}
	_cbbdf.CT_VolTypes = *NewCT_VolTypes()
	return _cbbdf
}

type CT_DateGroupItem struct {

	// Year
	YearAttr uint16

	// Month
	MonthAttr *uint16

	// Day
	DayAttr *uint16

	// Hour
	HourAttr *uint16

	// Minute
	MinuteAttr *uint16

	// Second
	SecondAttr *uint16

	// Date Time Grouping
	DateTimeGroupingAttr ST_DateTimeGrouping
}

func (_cgbfb *CT_SheetId) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ccfee := range start.Attr {
		if _ccfee.Name.Local == "\u0076\u0061\u006c" {
			_efffcb, _baggc := _eb.ParseUint(_ccfee.Value, 10, 32)
			if _baggc != nil {
				return _baggc
			}
			_cgbfb.ValAttr = uint32(_efffcb)
			continue
		}
	}
	for {
		_efegaf, _eggdc := d.Token()
		if _eggdc != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u003a\u0020%\u0073", _eggdc)
		}
		if _dacbbb, _dfcde := _efegaf.(_b.EndElement); _dfcde && _dacbbb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_ConditionalFormats struct {

	// Conditional Format Count
	CountAttr *uint32

	// Conditional Formatting
	ConditionalFormat []*CT_ConditionalFormat
}

type CT_PageItem struct {

	// Page Item Name
	NameAttr string
}

func (_bcddcc *Revisions) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003ar\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073"
	return _bcddcc.CT_Revisions.MarshalXML(e, start)
}

// Validate validates the CT_RevisionConflict and its children
func (_gfced *CT_RevisionConflict) Validate() error {
	return _gfced.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074")
}

func NewCT_MdxMetadata() *CT_MdxMetadata { _dded := &CT_MdxMetadata{}; return _dded }

func (_caefcd ST_MdxSetOrder) Validate() error { return _caefcd.ValidateWithPath("") }

func (_efacge ST_PhoneticAlignment) ValidateWithPath(path string) error {
	switch _efacge {
	case 0, 1, 2, 3, 4:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efacge))
	}
	return nil
}

func (_gdgeb *CT_WebPublishItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _gdgeb.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0076I\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _gdgeb.DivIdAttr)})
	_dfcbe, _ecadgb := _gdgeb.SourceTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0054\u0079\u0070\u0065"})
	if _ecadgb != nil {
		return _ecadgb
	}
	start.Attr = append(start.Attr, _dfcbe)
	if _gdgeb.SourceRefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073o\u0075\u0072\u0063\u0065\u0052\u0065f"}, Value: _ec.Sprintf("\u0025\u0076", *_gdgeb.SourceRefAttr)})
	}
	if _gdgeb.SourceObjectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_gdgeb.SourceObjectAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _gdgeb.DestinationFileAttr)})
	if _gdgeb.TitleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_gdgeb.TitleAttr)})
	}
	if _gdgeb.AutoRepublishAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gdgeb.AutoRepublishAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_FileRecoveryPr and its children, prefixing error messages with path
func (_cbba *CT_FileRecoveryPr) ValidateWithPath(path string) error { return nil }

func NewCT_CacheSource() *CT_CacheSource {
	_bfa := &CT_CacheSource{}
	_bfa.TypeAttr = ST_SourceType(1)
	return _bfa
}

func NewCT_ExternalDefinedNames() *CT_ExternalDefinedNames {
	_geea := &CT_ExternalDefinedNames{}
	return _geea
}

type ST_TargetScreenSize byte

func (_aeccc *CT_VolType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_ecaef, _agcdc := _aeccc.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _agcdc != nil {
		return _agcdc
	}
	start.Attr = append(start.Attr, _ecaef)
	e.EncodeToken(start)
	_fddgag := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006d\u0061\u0069\u006e"}}
	for _, _ccbgg := range _aeccc.Main {
		e.EncodeElement(_ccbgg, _fddgag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CsPageSetup and its children
func (_ecee *CT_CsPageSetup) Validate() error {
	return _ecee.ValidateWithPath("\u0043\u0054\u005f\u0043\u0073\u0050\u0061\u0067\u0065S\u0065\u0074\u0075\u0070")
}

func NewCT_RevisionCustomView() *CT_RevisionCustomView {
	_gfaede := &CT_RevisionCustomView{}
	_gfaede.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_gfaede.ActionAttr = ST_RevisionAction(1)
	return _gfaede
}

func NewCT_XmlCellPr() *CT_XmlCellPr {
	_dcfccd := &CT_XmlCellPr{}
	_dcfccd.XmlPr = NewCT_XmlPr()
	return _dcfccd
}

// ValidateWithPath validates the CT_PivotFilter and its children, prefixing error messages with path
func (_dcffd *CT_PivotFilter) ValidateWithPath(path string) error {
	if _dcffd.TypeAttr == ST_PivotFilterTypeUnset {
		return _ec.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _egfea := _dcffd.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _egfea != nil {
		return _egfea
	}
	if _aadbgd := _dcffd.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _aadbgd != nil {
		return _aadbgd
	}
	if _dcffd.ExtLst != nil {
		if _deebcb := _dcffd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _deebcb != nil {
			return _deebcb
		}
	}
	return nil
}

func (_babac *CT_Pages) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _babac.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_babac.CountAttr)})
	}
	e.EncodeToken(start)
	_fage := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0070\u0061\u0067\u0065"}}
	for _, _eegba := range _babac.Page {
		e.EncodeElement(_eegba, _fage)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_CalculatedItems struct {

	// Calculated Item Formula Count
	CountAttr *uint32

	// Calculated Item
	CalculatedItem []*CT_CalculatedItem
}

func NewCT_Mdx() *CT_Mdx { _aefeb := &CT_Mdx{}; _aefeb.FAttr = ST_MdxFunctionType(1); return _aefeb }

func (_fdgeg *ST_MdxFunctionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fdgeg = 0
	case "\u006d":
		*_fdgeg = 1
	case "\u0076":
		*_fdgeg = 2
	case "\u0073":
		*_fdgeg = 3
	case "\u0063":
		*_fdgeg = 4
	case "\u0072":
		*_fdgeg = 5
	case "\u0070":
		*_fdgeg = 6
	case "\u006b":
		*_fdgeg = 7
	}
	return nil
}

func (_gbedgg *CT_RowHierarchiesUsage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gbedgg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_gbedgg.CountAttr)})
	}
	e.EncodeToken(start)
	_bcgac := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0072\u006f\u0077\u0048\u0069\u0065\u0072\u0061r\u0063\u0068\u0079\u0055sa\u0067\u0065"}}
	for _, _bbfgg := range _gbedgg.RowHierarchyUsage {
		e.EncodeElement(_bbfgg, _bcgac)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_geafa ST_FileType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_geafa.String(), start)
}

// Validate validates the CT_FileVersion and its children
func (_agaf *CT_FileVersion) Validate() error {
	return _agaf.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0056\u0065r\u0073\u0069\u006f\u006e")
}

const (
	ST_VolDepTypeUnset         ST_VolDepType = 0
	ST_VolDepTypeRealTimeData  ST_VolDepType = 1
	ST_VolDepTypeOlapFunctions ST_VolDepType = 2
)

func (_dafee *CT_FileSharing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fccdg := range start.Attr {
		if _fccdg.Name.Local == "\u0072\u0065\u0061\u0064On\u006c\u0079\u0052\u0065\u0063\u006f\u006d\u006d\u0065\u006e\u0064\u0065\u0064" {
			_cccfe, _faebc := _eb.ParseBool(_fccdg.Value)
			if _faebc != nil {
				return _faebc
			}
			_dafee.ReadOnlyRecommendedAttr = &_cccfe
			continue
		}
		if _fccdg.Name.Local == "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065" {
			_ddgad, _fgdf := _fccdg.Value, error(nil)
			if _fgdf != nil {
				return _fgdf
			}
			_dafee.UserNameAttr = &_ddgad
			continue
		}
		if _fccdg.Name.Local == "\u0072\u0065\u0073\u0065rv\u0061\u0074\u0069\u006f\u006e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_ffbga, _egece := _fccdg.Value, error(nil)
			if _egece != nil {
				return _egece
			}
			_dafee.ReservationPasswordAttr = &_ffbga
			continue
		}
		if _fccdg.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_efgfea, _gcade := _fccdg.Value, error(nil)
			if _gcade != nil {
				return _gcade
			}
			_dafee.AlgorithmNameAttr = &_efgfea
			continue
		}
		if _fccdg.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_bdbgd, _fdfbb := _fccdg.Value, error(nil)
			if _fdfbb != nil {
				return _fdfbb
			}
			_dafee.HashValueAttr = &_bdbgd
			continue
		}
		if _fccdg.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_beddd, _bdbfe := _fccdg.Value, error(nil)
			if _bdbfe != nil {
				return _bdbfe
			}
			_dafee.SaltValueAttr = &_beddd
			continue
		}
		if _fccdg.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_daegd, _ffbef := _eb.ParseUint(_fccdg.Value, 10, 32)
			if _ffbef != nil {
				return _ffbef
			}
			_deafc := uint32(_daegd)
			_dafee.SpinCountAttr = &_deafc
			continue
		}
	}
	for {
		_cedfda, _acdeb := d.Token()
		if _acdeb != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067:\u0020\u0025\u0073", _acdeb)
		}
		if _ecfbf, _cgded := _cedfda.(_b.EndElement); _cgded && _ecfbf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OleObject and its children, prefixing error messages with path
func (_adcea *CT_OleObject) ValidateWithPath(path string) error {
	if _cbeg := _adcea.DvAspectAttr.ValidateWithPath(path + "\u002f\u0044\u0076\u0041\u0073\u0070\u0065\u0063\u0074\u0041\u0074\u0074\u0072"); _cbeg != nil {
		return _cbeg
	}
	if _cbee := _adcea.OleUpdateAttr.ValidateWithPath(path + "\u002f\u004f\u006c\u0065\u0055\u0070\u0064\u0061\u0074e\u0041\u0074\u0074\u0072"); _cbee != nil {
		return _cbee
	}
	if _adcea.ObjectPr != nil {
		if _egeff := _adcea.ObjectPr.ValidateWithPath(path + "\u002fO\u0062\u006a\u0065\u0063\u0074\u0050r"); _egeff != nil {
			return _egeff
		}
	}
	return nil
}

func (_gfd *CT_AutoFilter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gaag := range start.Attr {
		if _gaag.Name.Local == "\u0072\u0065\u0066" {
			_bf, _fe := _gaag.Value, error(nil)
			if _fe != nil {
				return _fe
			}
			_gfd.RefAttr = &_bf
			continue
		}
	}
_eda:
	for {
		_gfb, _bdc := d.Token()
		if _bdc != nil {
			return _bdc
		}
		switch _abd := _gfb.(type) {
		case _b.StartElement:
			switch _abd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006ct\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006ct\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e"}:
				_cdc := NewCT_FilterColumn()
				if _fed := d.DecodeElement(_cdc, &_abd); _fed != nil {
					return _fed
				}
				_gfd.FilterColumn = append(_gfd.FilterColumn, _cdc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_gfd.SortState = NewCT_SortState()
				if _eed := d.DecodeElement(_gfd.SortState, &_abd); _eed != nil {
					return _eed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfd.ExtLst = NewCT_ExtensionList()
				if _edab := d.DecodeElement(_gfd.ExtLst, &_abd); _edab != nil {
					return _edab
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041u\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072 \u0025\u0076", _abd.Name)
				if _gba := d.Skip(); _gba != nil {
					return _gba
				}
			}
		case _b.EndElement:
			break _eda
		case _b.CharData:
		}
	}
	return nil
}

func (_gcbed ST_GrowShrinkType) Validate() error { return _gcbed.ValidateWithPath("") }

func (_cfeae *CT_SortCondition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gedbbg := range start.Attr {
		if _gedbbg.Name.Local == "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067" {
			_fdbfd, _fdgdbc := _eb.ParseBool(_gedbbg.Value)
			if _fdgdbc != nil {
				return _fdgdbc
			}
			_cfeae.DescendingAttr = &_fdbfd
			continue
		}
		if _gedbbg.Name.Local == "\u0073\u006f\u0072\u0074\u0042\u0079" {
			_cfeae.SortByAttr.UnmarshalXMLAttr(_gedbbg)
			continue
		}
		if _gedbbg.Name.Local == "\u0072\u0065\u0066" {
			_dagcba, _ccbea := _gedbbg.Value, error(nil)
			if _ccbea != nil {
				return _ccbea
			}
			_cfeae.RefAttr = _dagcba
			continue
		}
		if _gedbbg.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073\u0074" {
			_cbbfb, _fdeef := _gedbbg.Value, error(nil)
			if _fdeef != nil {
				return _fdeef
			}
			_cfeae.CustomListAttr = &_cbbfb
			continue
		}
		if _gedbbg.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_dgegg, _bdgbg := _eb.ParseUint(_gedbbg.Value, 10, 32)
			if _bdgbg != nil {
				return _bdgbg
			}
			_cbbcacb := uint32(_dgegg)
			_cfeae.DxfIdAttr = &_cbbcacb
			continue
		}
		if _gedbbg.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_cfeae.IconSetAttr.UnmarshalXMLAttr(_gedbbg)
			continue
		}
		if _gedbbg.Name.Local == "\u0069\u0063\u006f\u006e\u0049\u0064" {
			_gagbfb, _bbffbb := _eb.ParseUint(_gedbbg.Value, 10, 32)
			if _bbffbb != nil {
				return _bbffbb
			}
			_dfbee := uint32(_gagbfb)
			_cfeae.IconIdAttr = &_dfbee
			continue
		}
	}
	for {
		_efcgga, _acdfg := d.Token()
		if _acdfg != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u006f\u0072\u0074C\u006fn\u0064\u0069\u0074\u0069\u006f\u006e\u003a \u0025\u0073", _acdfg)
		}
		if _faefa, _gdgff := _efcgga.(_b.EndElement); _gdgff && _faefa.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_PivotFields struct {

	// Field Count
	CountAttr *uint32

	// PivotTable Field
	PivotField []*CT_PivotField
}

func (_fdec *CT_MetadataTypes) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bdbe := range start.Attr {
		if _bdbe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fegff, _deace := _eb.ParseUint(_bdbe.Value, 10, 32)
			if _deace != nil {
				return _deace
			}
			_cdae := uint32(_fegff)
			_fdec.CountAttr = &_cdae
			continue
		}
	}
_dccgfb:
	for {
		_bccge, _eadc := d.Token()
		if _eadc != nil {
			return _eadc
		}
		switch _fbeegc := _bccge.(type) {
		case _b.StartElement:
			switch _fbeegc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}:
				_efdbf := NewCT_MetadataType()
				if _bggbc := d.DecodeElement(_efdbf, &_fbeegc); _bggbc != nil {
					return _bggbc
				}
				_fdec.MetadataType = append(_fdec.MetadataType, _efdbf)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073\u0020\u0025v", _fbeegc.Name)
				if _cecee := d.Skip(); _cecee != nil {
					return _cecee
				}
			}
		case _b.EndElement:
			break _dccgfb
		case _b.CharData:
		}
	}
	return nil
}

type CT_RgbColor struct {

	// Alpha Red Green Blue
	RgbAttr *string
}

type Headers struct{ CT_RevisionHeaders }

// ValidateWithPath validates the CT_CellStyles and its children, prefixing error messages with path
func (_aaad *CT_CellStyles) ValidateWithPath(path string) error {
	for _dffc, _ddfc := range _aaad.CellStyle {
		if _bgeb := _ddfc.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u0043\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u005b\u0025\u0064\u005d", path, _dffc)); _bgeb != nil {
			return _bgeb
		}
	}
	return nil
}

func (_bdaab *CT_CustomWorkbookView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _bdaab.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _bdaab.GuidAttr)})
	if _bdaab.AutoUpdateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0055\u0070\u0064\u0061\u0074\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bdaab.AutoUpdateAttr))})
	}
	if _bdaab.MergeIntervalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0072\u0067\u0065\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_bdaab.MergeIntervalAttr)})
	}
	if _bdaab.ChangesSavedWinAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063h\u0061n\u0067\u0065\u0073\u0053\u0061\u0076\u0065\u0064\u0057\u0069\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bdaab.ChangesSavedWinAttr))})
	}
	if _bdaab.OnlySyncAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006e\u006c\u0079\u0053\u0079\u006e\u0063"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bdaab.OnlySyncAttr))})
	}
	if _bdaab.PersonalViewAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0065\u0072s\u006f\u006e\u0061\u006c\u0056\u0069\u0065\u0077"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bdaab.PersonalViewAttr))})
	}
	if _bdaab.IncludePrintSettingsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "i\u006ec\u006c\u0075\u0064\u0065\u0050\u0072\u0069\u006et\u0053\u0065\u0074\u0074in\u0067\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bdaab.IncludePrintSettingsAttr))})
	}
	if _bdaab.IncludeHiddenRowColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0063\u006cud\u0065\u0048\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0043\u006f\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bdaab.IncludeHiddenRowColAttr))})
	}
	if _bdaab.MaximizedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bdaab.MaximizedAttr))})
	}
	if _bdaab.MinimizedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bdaab.MinimizedAttr))})
	}
	if _bdaab.ShowHorizontalScrollAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bdaab.ShowHorizontalScrollAttr))})
	}
	if _bdaab.ShowVerticalScrollAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bdaab.ShowVerticalScrollAttr))})
	}
	if _bdaab.ShowSheetTabsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bdaab.ShowSheetTabsAttr))})
	}
	if _bdaab.XWindowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078W\u0069\u006e\u0064\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0076", *_bdaab.XWindowAttr)})
	}
	if _bdaab.YWindowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079W\u0069\u006e\u0064\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0076", *_bdaab.YWindowAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068"}, Value: _ec.Sprintf("\u0025\u0076", _bdaab.WindowWidthAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _ec.Sprintf("\u0025\u0076", _bdaab.WindowHeightAttr)})
	if _bdaab.TabRatioAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f"}, Value: _ec.Sprintf("\u0025\u0076", *_bdaab.TabRatioAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0063\u0074\u0069\u0076\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _bdaab.ActiveSheetIdAttr)})
	if _bdaab.ShowFormulaBarAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0075l\u0061\u0042\u0061\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bdaab.ShowFormulaBarAttr))})
	}
	if _bdaab.ShowStatusbarAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0074\u0061\u0074\u0075\u0073\u0062\u0061\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bdaab.ShowStatusbarAttr))})
	}
	if _bdaab.ShowCommentsAttr != ST_CommentsUnset {
		_ccdgc, _gdebe := _bdaab.ShowCommentsAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"})
		if _gdebe != nil {
			return _gdebe
		}
		start.Attr = append(start.Attr, _ccdgc)
	}
	if _bdaab.ShowObjectsAttr != ST_ObjectsUnset {
		_bdcef, _fdfe := _bdaab.ShowObjectsAttr.MarshalXMLAttr(_b.Name{Local: "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073"})
		if _fdfe != nil {
			return _fdfe
		}
		start.Attr = append(start.Attr, _bdcef)
	}
	e.EncodeToken(start)
	if _bdaab.ExtLst != nil {
		_bfgec := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bdaab.ExtLst, _bfgec)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_VolTopic and its children, prefixing error messages with path
func (_ggdbcb *CT_VolTopic) ValidateWithPath(path string) error {
	if _gdbga := _ggdbcb.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _gdbga != nil {
		return _gdbga
	}
	for _efgbeg, _fcfda := range _ggdbcb.Tr {
		if _dcbab := _fcfda.ValidateWithPath(_ec.Sprintf("\u0025s\u002f\u0054\u0072\u005b\u0025\u0064]", path, _efgbeg)); _dcbab != nil {
			return _dcbab
		}
	}
	return nil
}

// Validate validates the CT_Query and its children
func (_cfacd *CT_Query) Validate() error {
	return _cfacd.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079")
}

// ValidateWithPath validates the CT_rowItems and its children, prefixing error messages with path
func (_fcecc *CT_rowItems) ValidateWithPath(path string) error {
	for _adafg, _gcgeg := range _fcecc.I {
		if _gdggg := _gcgeg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0049\u005b\u0025\u0064\u005d", path, _adafg)); _gdggg != nil {
			return _gdggg
		}
	}
	return nil
}

func (_dcaad *CT_TablePart) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bdbgg := range start.Attr {
		if _bdbgg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bdbgg.Name.Local == "\u0069\u0064" || _bdbgg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bdbgg.Name.Local == "\u0069\u0064" {
			_ebcfb, _beaafc := _bdbgg.Value, error(nil)
			if _beaafc != nil {
				return _beaafc
			}
			_dcaad.IdAttr = _ebcfb
			continue
		}
	}
	for {
		_bffcf, _gdadf := d.Token()
		if _gdadf != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061b\u006c\u0065\u0050\u0061\u0072\u0074\u003a\u0020\u0025\u0073", _gdadf)
		}
		if _eccgc, _babggb := _bffcf.(_b.EndElement); _babggb && _eccgc.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_Chartsheet() *CT_Chartsheet {
	_dfgb := &CT_Chartsheet{}
	_dfgb.SheetViews = NewCT_ChartsheetViews()
	_dfgb.Drawing = NewCT_Drawing()
	return _dfgb
}

func (_bdfdg ST_SortMethod) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_adeca := _b.Attr{}
	_adeca.Name = name
	switch _bdfdg {
	case ST_SortMethodUnset:
		_adeca.Value = ""
	case ST_SortMethodStroke:
		_adeca.Value = "\u0073\u0074\u0072\u006f\u006b\u0065"
	case ST_SortMethodPinYin:
		_adeca.Value = "\u0070\u0069\u006e\u0059\u0069\u006e"
	case ST_SortMethodNone:
		_adeca.Value = "\u006e\u006f\u006e\u0065"
	}
	return _adeca, nil
}

// Validate validates the CT_FileSharing and its children
func (_ebgda *CT_FileSharing) Validate() error {
	return _ebgda.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0053\u0068a\u0072\u0069\u006e\u0067")
}

func (_faafa ST_SortType) ValidateWithPath(path string) error {
	switch _faafa {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_faafa))
	}
	return nil
}

func (_cecea *CT_ProtectedRanges) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bcaba:
	for {
		_gebge, _ffedae := d.Token()
		if _ffedae != nil {
			return _ffedae
		}
		switch _accde := _gebge.(type) {
		case _b.StartElement:
			switch _accde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065"}:
				_ggefg := NewCT_ProtectedRange()
				if _fadeb := d.DecodeElement(_ggefg, &_accde); _fadeb != nil {
					return _fadeb
				}
				_cecea.ProtectedRange = append(_cecea.ProtectedRange, _ggefg)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063t\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073\u0020\u0025\u0076", _accde.Name)
				if _aacfe := d.Skip(); _aacfe != nil {
					return _aacfe
				}
			}
		case _b.EndElement:
			break _bcaba
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_CellProtection() *CT_CellProtection { _ddbf := &CT_CellProtection{}; return _ddbf }

func NewCT_I() *CT_I { _cfbd := &CT_I{}; return _cfbd }

func (_cccfb *CT_MetadataRecord) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074"}, Value: _ec.Sprintf("\u0025\u0076", _cccfb.TAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _ec.Sprintf("\u0025\u0076", _cccfb.VAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gbfa *CT_DataValidations) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gbfa.DisablePromptsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0050\u0072o\u006d\u0070\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbfa.DisablePromptsAttr))})
	}
	if _gbfa.XWindowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078W\u0069\u006e\u0064\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0076", *_gbfa.XWindowAttr)})
	}
	if _gbfa.YWindowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079W\u0069\u006e\u0064\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0076", *_gbfa.YWindowAttr)})
	}
	if _gbfa.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_gbfa.CountAttr)})
	}
	e.EncodeToken(start)
	_cdddb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"}}
	for _, _ecef := range _gbfa.DataValidation {
		e.EncodeElement(_ecef, _cdddb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cdbd *CT_IgnoredErrors) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fcfae := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ai\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072"}}
	for _, _aadagd := range _cdbd.IgnoredError {
		e.EncodeElement(_aadagd, _fcfae)
	}
	if _cdbd.ExtLst != nil {
		_beaff := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cdbd.ExtLst, _beaff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bgefd *PivotTableDefinition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bgefd.CT_pivotTableDefinition = *NewCT_pivotTableDefinition()
	for _, _acdbf := range start.Attr {
		if _acdbf.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_gdceg, _fbdcdc := _eb.ParseUint(_acdbf.Value, 10, 8)
			if _fbdcdc != nil {
				return _fbdcdc
			}
			_eaddgd := uint8(_gdceg)
			_bgefd.CreatedVersionAttr = &_eaddgd
			continue
		}
		if _acdbf.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_caage, _dedagc := _eb.ParseUint(_acdbf.Value, 10, 32)
			if _dedagc != nil {
				return _dedagc
			}
			_abgdfc := uint32(_caage)
			_bgefd.IndentAttr = &_abgdfc
			continue
		}
		if _acdbf.Name.Local == "\u0070i\u0076o\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065" {
			_bggdd, _aecgd := _acdbf.Value, error(nil)
			if _aecgd != nil {
				return _aecgd
			}
			_bgefd.PivotTableStyleAttr = &_bggdd
			continue
		}
		if _acdbf.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0052\u006f\u0077" {
			_faacdfa, _gcadegd := _eb.ParseBool(_acdbf.Value)
			if _gcadegd != nil {
				return _gcadegd
			}
			_bgefd.ShowEmptyRowAttr = &_faacdfa
			continue
		}
		if _acdbf.Name.Local == "\u0074\u0061\u0067" {
			_dfedfd, _cdcdd := _acdbf.Value, error(nil)
			if _cdcdd != nil {
				return _cdcdd
			}
			_bgefd.TagAttr = &_dfedfd
			continue
		}
		if _acdbf.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0043\u006f\u006c" {
			_decgc, _bdefb := _eb.ParseBool(_acdbf.Value)
			if _bdefb != nil {
				return _bdefb
			}
			_bgefd.ShowEmptyColAttr = &_decgc
			continue
		}
		if _acdbf.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_agfed, _edcce := _eb.ParseUint(_acdbf.Value, 10, 8)
			if _edcce != nil {
				return _edcce
			}
			_dgbee := uint8(_agfed)
			_bgefd.MinRefreshableVersionAttr = &_dgbee
			continue
		}
		if _acdbf.Name.Local == "s\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072\u0073" {
			_aeaefd, _bbggc := _eb.ParseBool(_acdbf.Value)
			if _bbggc != nil {
				return _bbggc
			}
			_bgefd.ShowHeadersAttr = &_aeaefd
			continue
		}
		if _acdbf.Name.Local == "\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b\u0054o\u0074\u0061\u006c\u0073" {
			_adgcb, _efcfe := _eb.ParseBool(_acdbf.Value)
			if _efcfe != nil {
				return _efcfe
			}
			_bgefd.AsteriskTotalsAttr = &_adgcb
			continue
		}
		if _acdbf.Name.Local == "\u0063o\u006d\u0070\u0061\u0063\u0074" {
			_feecf, _edfec := _eb.ParseBool(_acdbf.Value)
			if _edfec != nil {
				return _edfec
			}
			_bgefd.CompactAttr = &_feecf
			continue
		}
		if _acdbf.Name.Local == "\u0065\u0064\u0069\u0074\u0044\u0061\u0074\u0061" {
			_cbfeb, _ecfccf := _eb.ParseBool(_acdbf.Value)
			if _ecfccf != nil {
				return _ecfccf
			}
			_bgefd.EditDataAttr = &_cbfeb
			continue
		}
		if _acdbf.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_aaebd, _bdceae := _eb.ParseBool(_acdbf.Value)
			if _bdceae != nil {
				return _bdceae
			}
			_bgefd.OutlineAttr = &_aaebd
			continue
		}
		if _acdbf.Name.Local == "\u0073\u0068\u006fw\u0043\u0061\u006c\u0063\u004d\u0062\u0072\u0073" {
			_gaegb, _ggcg := _eb.ParseBool(_acdbf.Value)
			if _ggcg != nil {
				return _ggcg
			}
			_bgefd.ShowCalcMbrsAttr = &_gaegb
			continue
		}
		if _acdbf.Name.Local == "o\u0075\u0074\u006c\u0069\u006e\u0065\u0044\u0061\u0074\u0061" {
			_ggcbca, _gcfeg := _eb.ParseBool(_acdbf.Value)
			if _gcfeg != nil {
				return _gcfeg
			}
			_bgefd.OutlineDataAttr = &_ggcbca
			continue
		}
		if _acdbf.Name.Local == "\u0067\u0072\u0069\u0064\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_aacgaf, _geeca := _eb.ParseBool(_acdbf.Value)
			if _geeca != nil {
				return _geeca
			}
			_bgefd.GridDropZonesAttr = &_aacgaf
			continue
		}
		if _acdbf.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073t\u0053\u006f\u0072\u0074" {
			_fgdbf, _ebddcc := _eb.ParseBool(_acdbf.Value)
			if _ebddcc != nil {
				return _ebddcc
			}
			_bgefd.CustomListSortAttr = &_fgdbf
			continue
		}
		if _acdbf.Name.Local == "\u0072\u006f\u0077\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_cbbba, _ccbgd := _eb.ParseBool(_acdbf.Value)
			if _ccbgd != nil {
				return _ccbgd
			}
			_bgefd.RowGrandTotalsAttr = &_cbbba
			continue
		}
		if _acdbf.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ebgce, _fbffe := _eb.ParseBool(_acdbf.Value)
			if _fbffe != nil {
				return _fbffe
			}
			_bgefd.ApplyWidthHeightFormatsAttr = &_ebgce
			continue
		}
		if _acdbf.Name.Local == "\u0075\u0073\u0065\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067" {
			_acbea, _ffbgf := _eb.ParseBool(_acdbf.Value)
			if _ffbgf != nil {
				return _ffbgf
			}
			_bgefd.UseAutoFormattingAttr = &_acbea
			continue
		}
		if _acdbf.Name.Local == "\u0072\u006fw\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_baaed, _afebcc := _acdbf.Value, error(nil)
			if _afebcc != nil {
				return _afebcc
			}
			_bgefd.RowHeaderCaptionAttr = &_baaed
			continue
		}
		if _acdbf.Name.Local == "\u0073h\u006f\u0077\u0044\u0072\u0069\u006cl" {
			_gbeffe, _gebdd := _eb.ParseBool(_acdbf.Value)
			if _gebdd != nil {
				return _gebdd
			}
			_bgefd.ShowDrillAttr = &_gbeffe
			continue
		}
		if _acdbf.Name.Local == "\u006de\u0072\u0067\u0065\u0049\u0074\u0065m" {
			_afcagd, _faaab := _eb.ParseBool(_acdbf.Value)
			if _faaab != nil {
				return _faaab
			}
			_bgefd.MergeItemAttr = &_afcagd
			continue
		}
		if _acdbf.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_bgcedb, _acbed := _eb.ParseBool(_acdbf.Value)
			if _acbed != nil {
				return _acbed
			}
			_bgefd.ApplyBorderFormatsAttr = &_bgcedb
			continue
		}
		if _acdbf.Name.Local == "\u0076\u0069\u0073u\u0061\u006c\u0054\u006f\u0074\u0061\u006c\u0073" {
			_ffeaad, _efdba := _eb.ParseBool(_acdbf.Value)
			if _efdba != nil {
				return _efdba
			}
			_bgefd.VisualTotalsAttr = &_ffeaad
			continue
		}
		if _acdbf.Name.Local == "c\u006f\u006d\u0070\u0061\u0063\u0074\u0044\u0061\u0074\u0061" {
			_gadgd, _ddabc := _eb.ParseBool(_acdbf.Value)
			if _ddabc != nil {
				return _ddabc
			}
			_bgefd.CompactDataAttr = &_gadgd
			continue
		}
		if _acdbf.Name.Local == "\u0064\u0061\u0074a\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_ggfdd, _aacdc := _eb.ParseUint(_acdbf.Value, 10, 32)
			if _aacdc != nil {
				return _aacdc
			}
			_eegedb := uint32(_ggfdd)
			_bgefd.DataPositionAttr = &_eegedb
			continue
		}
		if _acdbf.Name.Local == "m\u0075l\u0074\u0069\u0070\u006c\u0065\u0046\u0069\u0065l\u0064\u0046\u0069\u006cte\u0072\u0073" {
			_daegaf, _eggfbf := _eb.ParseBool(_acdbf.Value)
			if _eggfbf != nil {
				return _eggfbf
			}
			_bgefd.MultipleFieldFiltersAttr = &_daegaf
			continue
		}
		if _acdbf.Name.Local == "\u0070\u0061g\u0065\u004f\u0076e\u0072\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e" {
			_gcfab, _fgfgb := _eb.ParseBool(_acdbf.Value)
			if _fgfgb != nil {
				return _fgfgb
			}
			_bgefd.PageOverThenDownAttr = &_gcfab
			continue
		}
		if _acdbf.Name.Local == "\u0066\u0069\u0065\u006cdL\u0069\u0073\u0074\u0053\u006f\u0072\u0074\u0041\u0073\u0063\u0065\u006e\u0064\u0069n\u0067" {
			_ecafce, _cefaad := _eb.ParseBool(_acdbf.Value)
			if _cefaad != nil {
				return _cefaad
			}
			_bgefd.FieldListSortAscendingAttr = &_ecafce
			continue
		}
		if _acdbf.Name.Local == "s\u0068\u006f\u0077\u004d\u0069\u0073\u0073\u0069\u006e\u0067" {
			_deaggf, _egdeff := _eb.ParseBool(_acdbf.Value)
			if _egdeff != nil {
				return _egdeff
			}
			_bgefd.ShowMissingAttr = &_deaggf
			continue
		}
		if _acdbf.Name.Local == "\u0066\u0069e\u006c\u0064\u0050r\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_dfgcg, _cgcfac := _eb.ParseBool(_acdbf.Value)
			if _cgcfac != nil {
				return _cgcfac
			}
			_bgefd.FieldPrintTitlesAttr = &_dfgcg
			continue
		}
		if _acdbf.Name.Local == "\u0073\u0068\u006f\u0077Me\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0054\u0069p\u0073" {
			_dgcfa, _adgdc := _eb.ParseBool(_acdbf.Value)
			if _adgdc != nil {
				return _adgdc
			}
			_bgefd.ShowMemberPropertyTipsAttr = &_dgcfa
			continue
		}
		if _acdbf.Name.Local == "\u0070a\u0067\u0065\u0053\u0074\u0079\u006ce" {
			_gfefd, _gaaee := _acdbf.Value, error(nil)
			if _gaaee != nil {
				return _gaaee
			}
			_bgefd.PageStyleAttr = &_gfefd
			continue
		}
		if _acdbf.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_dacccc, _dbeddb := _eb.ParseUint(_acdbf.Value, 10, 32)
			if _dbeddb != nil {
				return _dbeddb
			}
			_dcaccg := uint32(_dacccc)
			_bgefd.AutoFormatIdAttr = &_dcaccg
			continue
		}
		if _acdbf.Name.Local == "\u0073h\u006f\u0077\u0049\u0074\u0065\u006ds" {
			_afgdcb, _babde := _eb.ParseBool(_acdbf.Value)
			if _babde != nil {
				return _babde
			}
			_bgefd.ShowItemsAttr = &_afgdcb
			continue
		}
		if _acdbf.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cdceca, _ebgbe := _eb.ParseBool(_acdbf.Value)
			if _ebgbe != nil {
				return _ebgbe
			}
			_bgefd.ApplyPatternFormatsAttr = &_cdceca
			continue
		}
		if _acdbf.Name.Local == "e\u006e\u0061\u0062\u006ceF\u0069e\u006c\u0064\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073" {
			_eebfae, _cbebg := _eb.ParseBool(_acdbf.Value)
			if _cbebg != nil {
				return _cbebg
			}
			_bgefd.EnableFieldPropertiesAttr = &_eebfae
			continue
		}
		if _acdbf.Name.Local == "\u0073\u0068\u006f\u0077\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0065L\u0061\u0062\u0065\u006c" {
			_eecebg, _egbae := _eb.ParseBool(_acdbf.Value)
			if _egbae != nil {
				return _egbae
			}
			_bgefd.ShowMultipleLabelAttr = &_eecebg
			continue
		}
		if _acdbf.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_gbaad, _baagb := _eb.ParseBool(_acdbf.Value)
			if _baagb != nil {
				return _baagb
			}
			_bgefd.PreserveFormattingAttr = &_gbaad
			continue
		}
		if _acdbf.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_agdddb, _ecafcb := _eb.ParseBool(_acdbf.Value)
			if _ecafcb != nil {
				return _ecafcb
			}
			_bgefd.PublishedAttr = &_agdddb
			continue
		}
		if _acdbf.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_fccdag, _cecdb := _acdbf.Value, error(nil)
			if _cecdb != nil {
				return _cecdb
			}
			_bgefd.MissingCaptionAttr = &_fccdag
			continue
		}
		if _acdbf.Name.Local == "\u0069m\u006d\u0065\u0072\u0073\u0069\u0076e" {
			_gbgaf, _dcdeea := _eb.ParseBool(_acdbf.Value)
			if _dcdeea != nil {
				return _dcdeea
			}
			_bgefd.ImmersiveAttr = &_gbgaf
			continue
		}
		if _acdbf.Name.Local == "\u0070\u0061\u0067\u0065\u0057\u0072\u0061\u0070" {
			_cceaea, _dcegeg := _eb.ParseUint(_acdbf.Value, 10, 32)
			if _dcegeg != nil {
				return _dcegeg
			}
			_cbgebd := uint32(_cceaea)
			_bgefd.PageWrapAttr = &_cbgebd
			continue
		}
		if _acdbf.Name.Local == "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074" {
			_bgege, _cdbff := _eb.ParseUint(_acdbf.Value, 10, 32)
			if _cdbff != nil {
				return _cdbff
			}
			_eaffbg := uint32(_bgege)
			_bgefd.ChartFormatAttr = &_eaffbg
			continue
		}
		if _acdbf.Name.Local == "\u0073\u0068o\u0077\u0044\u0061t\u0061\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e" {
			_eacbb, _gaebf := _eb.ParseBool(_acdbf.Value)
			if _gaebf != nil {
				return _gaebf
			}
			_bgefd.ShowDataDropDownAttr = &_eacbb
			continue
		}
		if _acdbf.Name.Local == "\u0063\u006fl\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_aegff, _bgaab := _acdbf.Value, error(nil)
			if _bgaab != nil {
				return _bgaab
			}
			_bgefd.ColHeaderCaptionAttr = &_aegff
			continue
		}
		if _acdbf.Name.Local == "\u0073\u0075\u0062\u0074ot\u0061\u006c\u0048\u0069\u0064\u0064\u0065\u006e\u0049\u0074\u0065\u006d\u0073" {
			_cgdgc, _afeaa := _eb.ParseBool(_acdbf.Value)
			if _afeaa != nil {
				return _afeaa
			}
			_bgefd.SubtotalHiddenItemsAttr = &_cgdgc
			continue
		}
		if _acdbf.Name.Local == "\u006d\u0064\u0078\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0069\u0065\u0073" {
			_gcfee, _cfffa := _eb.ParseBool(_acdbf.Value)
			if _cfffa != nil {
				return _cfffa
			}
			_bgefd.MdxSubqueriesAttr = &_gcfee
			continue
		}
		if _acdbf.Name.Local == "\u0065\u0072\u0072o\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_daebe, _eegbeb := _acdbf.Value, error(nil)
			if _eegbeb != nil {
				return _eegbeb
			}
			_bgefd.ErrorCaptionAttr = &_daebe
			continue
		}
		if _acdbf.Name.Local == "\u0063\u006f\u006c\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_aageg, _dcbfe := _eb.ParseBool(_acdbf.Value)
			if _dcbfe != nil {
				return _dcbfe
			}
			_bgefd.ColGrandTotalsAttr = &_aageg
			continue
		}
		if _acdbf.Name.Local == "\u0070\u0072\u0069\u006e\u0074\u0044\u0072\u0069\u006c\u006c" {
			_ddefg, _eaafd := _eb.ParseBool(_acdbf.Value)
			if _eaafd != nil {
				return _eaafd
			}
			_bgefd.PrintDrillAttr = &_ddefg
			continue
		}
		if _acdbf.Name.Local == "\u0069t\u0065m\u0050\u0072\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_eefca, _fgaggc := _eb.ParseBool(_acdbf.Value)
			if _fgaggc != nil {
				return _fgaggc
			}
			_bgefd.ItemPrintTitlesAttr = &_eefca
			continue
		}
		if _acdbf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fdbdf, _bggcgc := _acdbf.Value, error(nil)
			if _bggcgc != nil {
				return _bggcgc
			}
			_bgefd.NameAttr = _fdbdf
			continue
		}
		if _acdbf.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_dgcfcg, _agadgc := _eb.ParseBool(_acdbf.Value)
			if _agadgc != nil {
				return _agadgc
			}
			_bgefd.ShowDropZonesAttr = &_dgcfcg
			continue
		}
		if _acdbf.Name.Local == "\u0073\u0068\u006fw\u0044\u0061\u0074\u0061\u0054\u0069\u0070\u0073" {
			_badfc, _fdeab := _eb.ParseBool(_acdbf.Value)
			if _fdeab != nil {
				return _fdeab
			}
			_bgefd.ShowDataTipsAttr = &_badfc
			continue
		}
		if _acdbf.Name.Local == "\u0076\u0061\u0063a\u0074\u0065\u0064\u0053\u0074\u0079\u006c\u0065" {
			_bfdff, _ggbce := _acdbf.Value, error(nil)
			if _ggbce != nil {
				return _ggbce
			}
			_bgefd.VacatedStyleAttr = &_bfdff
			continue
		}
		if _acdbf.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0054\u006f\u0074\u0061\u006c\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_bdgag, _febega := _acdbf.Value, error(nil)
			if _febega != nil {
				return _febega
			}
			_bgefd.GrandTotalCaptionAttr = &_bdgag
			continue
		}
		if _acdbf.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_bdeggb, _ecegb := _eb.ParseBool(_acdbf.Value)
			if _ecegb != nil {
				return _ecegb
			}
			_bgefd.ApplyNumberFormatsAttr = &_bdeggb
			continue
		}
		if _acdbf.Name.Local == "e\u006e\u0061\u0062\u006c\u0065\u0044\u0072\u0069\u006c\u006c" {
			_dfbbe, _bcedcd := _eb.ParseBool(_acdbf.Value)
			if _bcedcd != nil {
				return _bcedcd
			}
			_bgefd.EnableDrillAttr = &_dfbbe
			continue
		}
		if _acdbf.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_beagbf, _bfffga := _eb.ParseBool(_acdbf.Value)
			if _bfffga != nil {
				return _bfffga
			}
			_bgefd.ApplyFontFormatsAttr = &_beagbf
			continue
		}
		if _acdbf.Name.Local == "\u0064\u0069s\u0061\u0062\u006ce\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074" {
			_dfcaac, _accfbd := _eb.ParseBool(_acdbf.Value)
			if _accfbd != nil {
				return _accfbd
			}
			_bgefd.DisableFieldListAttr = &_dfcaac
			continue
		}
		if _acdbf.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_feega, _aacfg := _eb.ParseBool(_acdbf.Value)
			if _aacfg != nil {
				return _aacfg
			}
			_bgefd.ApplyAlignmentFormatsAttr = &_feega
			continue
		}
		if _acdbf.Name.Local == "\u0064\u0061\u0074\u0061\u004f\u006e\u0052\u006f\u0077\u0073" {
			_gegecf, _dcddccd := _eb.ParseBool(_acdbf.Value)
			if _dcddccd != nil {
				return _dcddccd
			}
			_bgefd.DataOnRowsAttr = &_gegecf
			continue
		}
		if _acdbf.Name.Local == "d\u0061\u0074\u0061\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_fcafgg, _gbfaf := _acdbf.Value, error(nil)
			if _gbfaf != nil {
				return _gbfaf
			}
			_bgefd.DataCaptionAttr = _fcafgg
			continue
		}
		if _acdbf.Name.Local == "\u0073h\u006f\u0077\u0045\u0072\u0072\u006fr" {
			_deadfd, _fcaad := _eb.ParseBool(_acdbf.Value)
			if _fcaad != nil {
				return _fcaad
			}
			_bgefd.ShowErrorAttr = &_deadfd
			continue
		}
		if _acdbf.Name.Local == "\u0063a\u0063\u0068\u0065\u0049\u0064" {
			_bbbcac, _eadaba := _eb.ParseUint(_acdbf.Value, 10, 32)
			if _eadaba != nil {
				return _eadaba
			}
			_bgefd.CacheIdAttr = uint32(_bbbcac)
			continue
		}
		if _acdbf.Name.Local == "\u0065\u006e\u0061b\u006c\u0065\u0057\u0069\u007a\u0061\u0072\u0064" {
			_ebfged, _dgeadg := _eb.ParseBool(_acdbf.Value)
			if _dgeadg != nil {
				return _dgeadg
			}
			_bgefd.EnableWizardAttr = &_ebfged
			continue
		}
		if _acdbf.Name.Local == "\u0075\u0070\u0064\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_dfcaf, _ccaad := _eb.ParseUint(_acdbf.Value, 10, 8)
			if _ccaad != nil {
				return _ccaad
			}
			_eaddag := uint8(_dfcaf)
			_bgefd.UpdatedVersionAttr = &_eaddag
			continue
		}
	}
_egdcd:
	for {
		_ccbge, _bbbec := d.Token()
		if _bbbec != nil {
			return _bbbec
		}
		switch _afebf := _ccbge.(type) {
		case _b.StartElement:
			switch _afebf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}:
				if _edcba := d.DecodeElement(_bgefd.Location, &_afebf); _edcba != nil {
					return _edcba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_bgefd.PivotFields = NewCT_PivotFields()
				if _eedcda := d.DecodeElement(_bgefd.PivotFields, &_afebf); _eedcda != nil {
					return _eedcda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}:
				_bgefd.RowFields = NewCT_RowFields()
				if _dggaff := d.DecodeElement(_bgefd.RowFields, &_afebf); _dggaff != nil {
					return _dggaff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}:
				_bgefd.RowItems = NewCT_rowItems()
				if _aeeeb := d.DecodeElement(_bgefd.RowItems, &_afebf); _aeeeb != nil {
					return _aeeeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}:
				_bgefd.ColFields = NewCT_ColFields()
				if _gefdg := d.DecodeElement(_bgefd.ColFields, &_afebf); _gefdg != nil {
					return _gefdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}:
				_bgefd.ColItems = NewCT_colItems()
				if _gcgeeg := d.DecodeElement(_bgefd.ColItems, &_afebf); _gcgeeg != nil {
					return _gcgeeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_bgefd.PageFields = NewCT_PageFields()
				if _fdgad := d.DecodeElement(_bgefd.PageFields, &_afebf); _fdgad != nil {
					return _fdgad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_bgefd.DataFields = NewCT_DataFields()
				if _efggfe := d.DecodeElement(_bgefd.DataFields, &_afebf); _efggfe != nil {
					return _efggfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}:
				_bgefd.Formats = NewCT_Formats()
				if _bbaddg := d.DecodeElement(_bgefd.Formats, &_afebf); _bbaddg != nil {
					return _bbaddg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}:
				_bgefd.ConditionalFormats = NewCT_ConditionalFormats()
				if _egfga := d.DecodeElement(_bgefd.ConditionalFormats, &_afebf); _egfga != nil {
					return _egfga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}:
				_bgefd.ChartFormats = NewCT_ChartFormats()
				if _eaagg := d.DecodeElement(_bgefd.ChartFormats, &_afebf); _eaagg != nil {
					return _eaagg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_bgefd.PivotHierarchies = NewCT_PivotHierarchies()
				if _dbggf := d.DecodeElement(_bgefd.PivotHierarchies, &_afebf); _dbggf != nil {
					return _dbggf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}:
				_bgefd.PivotTableStyleInfo = NewCT_PivotTableStyle()
				if _bcgdca := d.DecodeElement(_bgefd.PivotTableStyleInfo, &_afebf); _bcgdca != nil {
					return _bcgdca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
				_bgefd.Filters = NewCT_PivotFilters()
				if _acfbb := d.DecodeElement(_bgefd.Filters, &_afebf); _acfbb != nil {
					return _acfbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_bgefd.RowHierarchiesUsage = NewCT_RowHierarchiesUsage()
				if _bdbfgd := d.DecodeElement(_bgefd.RowHierarchiesUsage, &_afebf); _bdbfgd != nil {
					return _bdbfgd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_bgefd.ColHierarchiesUsage = NewCT_ColHierarchiesUsage()
				if _aefcbg := d.DecodeElement(_bgefd.ColHierarchiesUsage, &_afebf); _aefcbg != nil {
					return _aefcbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgefd.ExtLst = NewCT_ExtensionList()
				if _bdeff := d.DecodeElement(_bgefd.ExtLst, &_afebf); _bdeff != nil {
					return _bdeff
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0050\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _afebf.Name)
				if _dagfa := d.Skip(); _dagfa != nil {
					return _dagfa
				}
			}
		case _b.EndElement:
			break _egdcd
		case _b.CharData:
		}
	}
	return nil
}

type CT_SheetView struct {

	// Window Protection
	WindowProtectionAttr *bool

	// Show Formulas
	ShowFormulasAttr *bool

	// Show Grid Lines
	ShowGridLinesAttr *bool

	// Show Headers
	ShowRowColHeadersAttr *bool

	// Show Zero Values
	ShowZerosAttr *bool

	// Right To Left
	RightToLeftAttr *bool

	// Sheet Tab Selected
	TabSelectedAttr *bool

	// Show Ruler
	ShowRulerAttr *bool

	// Show Outline Symbols
	ShowOutlineSymbolsAttr *bool

	// Default Grid Color
	DefaultGridColorAttr *bool

	// Show White Space
	ShowWhiteSpaceAttr *bool

	// View Type
	ViewAttr ST_SheetViewType

	// Top Left Visible Cell
	TopLeftCellAttr *string

	// Color Id
	ColorIdAttr *uint32

	// Zoom Scale
	ZoomScaleAttr *uint32

	// Zoom Scale Normal View
	ZoomScaleNormalAttr *uint32

	// Zoom Scale Page Break Preview
	ZoomScaleSheetLayoutViewAttr *uint32

	// Zoom Scale Page Layout View
	ZoomScalePageLayoutViewAttr *uint32

	// Workbook View Index
	WorkbookViewIdAttr uint32

	// View Pane
	Pane *CT_Pane

	// Selection
	Selection []*CT_Selection

	// PivotTable Selection
	PivotSelection []*CT_PivotSelection

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_SmartTags and its children
func (_debee *CT_SmartTags) Validate() error {
	return _debee.ValidateWithPath("\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073")
}

func (_acbaa ST_OleUpdate) String() string {
	switch _acbaa {
	case 0:
		return ""
	case 1:
		return "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053"
	case 2:
		return "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c"
	}
	return ""
}

func (_bggdg *ST_DvAspect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cgabg, _fgdgef := d.Token()
	if _fgdgef != nil {
		return _fgdgef
	}
	if _efcefb, _ecafb := _cgabg.(_b.EndElement); _ecafb && _efcefb.Name == start.Name {
		*_bggdg = 1
		return nil
	}
	if _ggbbe, _aedag := _cgabg.(_b.CharData); !_aedag {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgabg)
	} else {
		switch string(_ggbbe) {
		case "":
			*_bggdg = 0
		case "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054":
			*_bggdg = 1
		case "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e":
			*_bggdg = 2
		}
	}
	_cgabg, _fgdgef = d.Token()
	if _fgdgef != nil {
		return _fgdgef
	}
	if _ecccfa, _bafgbf := _cgabg.(_b.EndElement); _bafgbf && _ecccfa.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgabg)
}

// ValidateWithPath validates the CT_MdxKPI and its children, prefixing error messages with path
func (_effbf *CT_MdxKPI) ValidateWithPath(path string) error {
	if _effbf.PAttr == ST_MdxKPIPropertyUnset {
		return _ec.Errorf("\u0025\u0073/\u0050\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066ie\u006c\u0064", path)
	}
	if _bgfg := _effbf.PAttr.ValidateWithPath(path + "\u002f\u0050\u0041\u0074\u0074\u0072"); _bgfg != nil {
		return _bgfg
	}
	return nil
}

type CT_PCDKPIs struct {

	// KPI Count
	CountAttr *uint32

	// OLAP KPI
	Kpi []*CT_PCDKPI
}

type CT_SheetBackgroundPicture struct{ IdAttr string }

// ValidateWithPath validates the CT_PivotAreaReference and its children, prefixing error messages with path
func (_eaegb *CT_PivotAreaReference) ValidateWithPath(path string) error {
	for _cgdcbd, _daddf := range _eaegb.X {
		if _egfcc := _daddf.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _cgdcbd)); _egfcc != nil {
			return _egfcc
		}
	}
	if _eaegb.ExtLst != nil {
		if _bbgae := _eaegb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bbgae != nil {
			return _bbgae
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Tables and its children, prefixing error messages with path
func (_deaebe *CT_Tables) ValidateWithPath(path string) error {
	for _afgee, _cgffgg := range _deaebe.M {
		if _bdcefd := _cgffgg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _afgee)); _bdcefd != nil {
			return _bdcefd
		}
	}
	for _feegd, _acdde := range _deaebe.S {
		if _bdcdb := _acdde.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _feegd)); _bdcdb != nil {
			return _bdcdb
		}
	}
	for _bgcde, _fcbea := range _deaebe.X {
		if _fbfgg := _fcbea.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _bgcde)); _fbfgg != nil {
			return _fbfgg
		}
	}
	return nil
}

func (_ecfdd *CT_Extension) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ecfdd.UriAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0072\u0069"}, Value: _ec.Sprintf("\u0025\u0076", *_ecfdd.UriAttr)})
	}
	e.EncodeToken(start)
	if _ecfdd.Any != nil {
		_ecfdd.Any.MarshalXML(e, _b.StartElement{})
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GradientFill and its children
func (_bfbfb *CT_GradientFill) Validate() error {
	return _bfbfb.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c")
}

func (_bdfe *CT_ColorFilter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bdfe.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_bdfe.DxfIdAttr)})
	}
	if _bdfe.CellColorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bdfe.CellColorAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_LegacyDrawing struct{ IdAttr string }

func (_egggea ST_TableStyleType) Validate() error { return _egggea.ValidateWithPath("") }

func (_cgccae *CT_MetadataBlock) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ddaga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u0063"}}
	for _, _abedfe := range _cgccae.Rc {
		e.EncodeElement(_abedfe, _ddaga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_Formats() *CT_Formats { _cega := &CT_Formats{}; return _cega }

func NewCT_Cell() *CT_Cell { _bdgd := &CT_Cell{}; return _bdgd }

func (_acdab *ST_GradientType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ccfbdb, _dgcge := d.Token()
	if _dgcge != nil {
		return _dgcge
	}
	if _adbdf, _dagbb := _ccfbdb.(_b.EndElement); _dagbb && _adbdf.Name == start.Name {
		*_acdab = 1
		return nil
	}
	if _gffcea, _ebdcgg := _ccfbdb.(_b.CharData); !_ebdcgg {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccfbdb)
	} else {
		switch string(_gffcea) {
		case "":
			*_acdab = 0
		case "\u006c\u0069\u006e\u0065\u0061\u0072":
			*_acdab = 1
		case "\u0070\u0061\u0074\u0068":
			*_acdab = 2
		}
	}
	_ccfbdb, _dgcge = d.Token()
	if _dgcge != nil {
		return _dgcge
	}
	if _gccdg, _bdfga := _ccfbdb.(_b.EndElement); _bdfga && _gccdg.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccfbdb)
}

const (
	ST_PivotAreaTypeUnset    ST_PivotAreaType = 0
	ST_PivotAreaTypeNone     ST_PivotAreaType = 1
	ST_PivotAreaTypeNormal   ST_PivotAreaType = 2
	ST_PivotAreaTypeData     ST_PivotAreaType = 3
	ST_PivotAreaTypeAll      ST_PivotAreaType = 4
	ST_PivotAreaTypeOrigin   ST_PivotAreaType = 5
	ST_PivotAreaTypeButton   ST_PivotAreaType = 6
	ST_PivotAreaTypeTopEnd   ST_PivotAreaType = 7
	ST_PivotAreaTypeTopRight ST_PivotAreaType = 8
)

func NewCT_FileRecoveryPr() *CT_FileRecoveryPr { _cgbbg := &CT_FileRecoveryPr{}; return _cgbbg }

func (_bcad *CT_ChartsheetPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bcad.PublishedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bcad.PublishedAttr))})
	}
	if _bcad.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_bcad.CodeNameAttr)})
	}
	e.EncodeToken(start)
	if _bcad.TabColor != nil {
		_dcgc := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_bcad.TabColor, _dcgc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_Drawing() *CT_Drawing { _dgce := &CT_Drawing{}; return _dgce }

// ValidateWithPath validates the Workbook and its children, prefixing error messages with path
func (_gacff *Workbook) ValidateWithPath(path string) error {
	if _egfff := _gacff.CT_Workbook.ValidateWithPath(path); _egfff != nil {
		return _egfff
	}
	return nil
}

func (_fdgff *CT_WebPublishItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgbcg := range start.Attr {
		if _cgbcg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ccaee, _cefdb := _eb.ParseUint(_cgbcg.Value, 10, 32)
			if _cefdb != nil {
				return _cefdb
			}
			_aecgf := uint32(_ccaee)
			_fdgff.CountAttr = &_aecgf
			continue
		}
	}
_gaged:
	for {
		_eadbc, _bgfgg := d.Token()
		if _bgfgg != nil {
			return _bgfgg
		}
		switch _bccgefa := _eadbc.(type) {
		case _b.StartElement:
			switch _bccgefa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d"}:
				_cbebee := NewCT_WebPublishItem()
				if _cefac := d.DecodeElement(_cbebee, &_bccgefa); _cefac != nil {
					return _cefac
				}
				_fdgff.WebPublishItem = append(_fdgff.WebPublishItem, _cbebee)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062l\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _bccgefa.Name)
				if _egfged := d.Skip(); _egfged != nil {
					return _egfged
				}
			}
		case _b.EndElement:
			break _gaged
		case _b.CharData:
		}
	}
	return nil
}

func (_daffa *CT_Map) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0049\u0044"}, Value: _ec.Sprintf("\u0025\u0076", _daffa.IDAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _daffa.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "R\u006f\u006f\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", _daffa.RootElementAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0053\u0063\u0068\u0065\u006d\u0061\u0049\u0044"}, Value: _ec.Sprintf("\u0025\u0076", _daffa.SchemaIDAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0053\u0068\u006f\u0077\u0049\u006d\u0070\u006f\u0072\u0074\u0045\u0078\u0070\u006f\u0072t\u0056a\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0045\u0072\u0072\u006f\u0072\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(_daffa.ShowImportExportValidationErrorsAttr))})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0041u\u0074\u006f\u0046\u0069\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(_daffa.AutoFitAttr))})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0041\u0070\u0070\u0065\u006e\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(_daffa.AppendAttr))})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "P\u0072e\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072t\u0041\u0046\u004c\u0061yo\u0075\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(_daffa.PreserveSortAFLayoutAttr))})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0046o\u0072\u006d\u0061\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(_daffa.PreserveFormatAttr))})
	e.EncodeToken(start)
	if _daffa.DataBinding != nil {
		_bbbfe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0044\u0061\u0074\u0061\u0042\u0069n\u0064\u0069\u006e\u0067"}}
		e.EncodeElement(_daffa.DataBinding, _bbbfe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Extension and its children
func (_dccgc *CT_Extension) Validate() error {
	return _dccgc.ValidateWithPath("\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e")
}

func NewUsers() *Users { _egbbef := &Users{}; _egbbef.CT_Users = *NewCT_Users(); return _egbbef }

type CT_PivotCacheRecords struct {

	// PivotCache Records Count
	CountAttr *uint32

	// PivotCache Record
	R []*CT_Record

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

const (
	ST_OrientationUnset     ST_Orientation = 0
	ST_OrientationDefault   ST_Orientation = 1
	ST_OrientationPortrait  ST_Orientation = 2
	ST_OrientationLandscape ST_Orientation = 3
)

// ValidateWithPath validates the CT_MapInfo and its children, prefixing error messages with path
func (_dfdeae *CT_MapInfo) ValidateWithPath(path string) error {
	for _bcgab, _ggbbg := range _dfdeae.Schema {
		if _beaa := _ggbbg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0053\u0063\u0068\u0065\u006d\u0061\u005b\u0025\u0064\u005d", path, _bcgab)); _beaa != nil {
			return _beaa
		}
	}
	for _aadef, _fafbc := range _dfdeae.Map {
		if _decad := _fafbc.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004d\u0061\u0070\u005b\u0025\u0064\u005d", path, _aadef)); _decad != nil {
			return _decad
		}
	}
	return nil
}

// Validate validates the SingleXmlCells and its children
func (_edcdb *SingleXmlCells) Validate() error {
	return _edcdb.ValidateWithPath("\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073")
}

func (_dbfab *CT_Scenarios) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dbfab.CurrentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063u\u0072\u0072\u0065\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_dbfab.CurrentAttr)})
	}
	if _dbfab.ShowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0076", *_dbfab.ShowAttr)})
	}
	if _dbfab.SqrefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _ec.Sprintf("\u0025\u0076", *_dbfab.SqrefAttr)})
	}
	e.EncodeToken(start)
	_cagd := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"}}
	for _, _dcaae := range _dbfab.Scenario {
		e.EncodeElement(_dcaae, _cagd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_addea *CT_Mdx) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e"}, Value: _ec.Sprintf("\u0025\u0076", _addea.NAttr)})
	_agdf, _addgb := _addea.FAttr.MarshalXMLAttr(_b.Name{Local: "\u0066"})
	if _addgb != nil {
		return _addgb
	}
	start.Attr = append(start.Attr, _agdf)
	e.EncodeToken(start)
	if _addea.T != nil {
		_eacc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074"}}
		e.EncodeElement(_addea.T, _eacc)
	}
	if _addea.Ms != nil {
		_baacea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003am\u0073"}}
		e.EncodeElement(_addea.Ms, _baacea)
	}
	if _addea.P != nil {
		_bfgbf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070"}}
		e.EncodeElement(_addea.P, _bfgbf)
	}
	if _addea.K != nil {
		_edfbd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006b"}}
		e.EncodeElement(_addea.K, _edfbd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ChartFormats and its children
func (_gbeeg *CT_ChartFormats) Validate() error {
	return _gbeeg.ValidateWithPath("\u0043T\u005fC\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073")
}

type CT_OleItem struct {

	// Object Name
	NameAttr string

	// Icon
	IconAttr *bool

	// Advise
	AdviseAttr *bool

	// Object is an Image
	PreferPicAttr *bool
}

func (_bfaegd *CT_Map) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aeggd := range start.Attr {
		if _aeggd.Name.Local == "\u0049\u0044" {
			_aagcc, _cdeab := _eb.ParseUint(_aeggd.Value, 10, 32)
			if _cdeab != nil {
				return _cdeab
			}
			_bfaegd.IDAttr = uint32(_aagcc)
			continue
		}
		if _aeggd.Name.Local == "\u004e\u0061\u006d\u0065" {
			_gabfg, _eafde := _aeggd.Value, error(nil)
			if _eafde != nil {
				return _eafde
			}
			_bfaegd.NameAttr = _gabfg
			continue
		}
		if _aeggd.Name.Local == "R\u006f\u006f\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074" {
			_dccgg, _agdbca := _aeggd.Value, error(nil)
			if _agdbca != nil {
				return _agdbca
			}
			_bfaegd.RootElementAttr = _dccgg
			continue
		}
		if _aeggd.Name.Local == "\u0053\u0063\u0068\u0065\u006d\u0061\u0049\u0044" {
			_ddadb, _beeed := _aeggd.Value, error(nil)
			if _beeed != nil {
				return _beeed
			}
			_bfaegd.SchemaIDAttr = _ddadb
			continue
		}
		if _aeggd.Name.Local == "\u0053\u0068\u006f\u0077\u0049\u006d\u0070\u006f\u0072\u0074\u0045\u0078\u0070\u006f\u0072t\u0056a\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0045\u0072\u0072\u006f\u0072\u0073" {
			_dgeae, _fbfada := _eb.ParseBool(_aeggd.Value)
			if _fbfada != nil {
				return _fbfada
			}
			_bfaegd.ShowImportExportValidationErrorsAttr = _dgeae
			continue
		}
		if _aeggd.Name.Local == "\u0041u\u0074\u006f\u0046\u0069\u0074" {
			_abcf, _dceeb := _eb.ParseBool(_aeggd.Value)
			if _dceeb != nil {
				return _dceeb
			}
			_bfaegd.AutoFitAttr = _abcf
			continue
		}
		if _aeggd.Name.Local == "\u0041\u0070\u0070\u0065\u006e\u0064" {
			_afade, _fgce := _eb.ParseBool(_aeggd.Value)
			if _fgce != nil {
				return _fgce
			}
			_bfaegd.AppendAttr = _afade
			continue
		}
		if _aeggd.Name.Local == "P\u0072e\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072t\u0041\u0046\u004c\u0061yo\u0075\u0074" {
			_bdbd, _beacg := _eb.ParseBool(_aeggd.Value)
			if _beacg != nil {
				return _beacg
			}
			_bfaegd.PreserveSortAFLayoutAttr = _bdbd
			continue
		}
		if _aeggd.Name.Local == "\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0046o\u0072\u006d\u0061\u0074" {
			_ccgec, _bffff := _eb.ParseBool(_aeggd.Value)
			if _bffff != nil {
				return _bffff
			}
			_bfaegd.PreserveFormatAttr = _ccgec
			continue
		}
	}
_debcg:
	for {
		_adgbc, _egffc := d.Token()
		if _egffc != nil {
			return _egffc
		}
		switch _dfgca := _adgbc.(type) {
		case _b.StartElement:
			switch _dfgca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "D\u0061\u0074\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "D\u0061\u0074\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}:
				_bfaegd.DataBinding = NewCT_DataBinding()
				if _fbbbg := d.DecodeElement(_bfaegd.DataBinding, &_dfgca); _fbbbg != nil {
					return _fbbbg
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0061\u0070\u0020\u0025\u0076", _dfgca.Name)
				if _afgf := d.Skip(); _afgf != nil {
					return _afgf
				}
			}
		case _b.EndElement:
			break _debcg
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Drawing and its children
func (_degbca *CT_Drawing) Validate() error {
	return _degbca.ValidateWithPath("\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067")
}

// Validate validates the CT_RevisionComment and its children
func (_gcgfd *CT_RevisionComment) Validate() error {
	return _gcgfd.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0043o\u006d\u006d\u0065\u006e\u0074")
}

func NewCT_ExternalReference() *CT_ExternalReference { _bgdb := &CT_ExternalReference{}; return _bgdb }

func (_afaccc ST_TargetScreenSize) ValidateWithPath(path string) error {
	switch _afaccc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_afaccc))
	}
	return nil
}

func NewCT_MetadataBlocks() *CT_MetadataBlocks { _gcee := &CT_MetadataBlocks{}; return _gcee }

func (_gebce ST_PhoneticAlignment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gebce.String(), start)
}

func (_ffae *CT_CustomFilter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aeaf := range start.Attr {
		if _aeaf.Name.Local == "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072" {
			_ffae.OperatorAttr.UnmarshalXMLAttr(_aeaf)
			continue
		}
		if _aeaf.Name.Local == "\u0076\u0061\u006c" {
			_dfdae, _gcgff := _aeaf.Value, error(nil)
			if _gcgff != nil {
				return _gcgff
			}
			_ffae.ValAttr = &_dfdae
			continue
		}
	}
	for {
		_aded, _egcfg := d.Token()
		if _egcfg != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dF\u0069\u006c\u0074e\u0072:\u0020\u0025\u0073", _egcfg)
		}
		if _bdcb, _afdacd := _aded.(_b.EndElement); _afdacd && _bdcb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gefbe ST_PageOrder) String() string {
	switch _gefbe {
	case 0:
		return ""
	case 1:
		return "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072"
	case 2:
		return "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e"
	}
	return ""
}

// ValidateWithPath validates the Dialogsheet and its children, prefixing error messages with path
func (_gaafbb *Dialogsheet) ValidateWithPath(path string) error {
	if _defbc := _gaafbb.CT_Dialogsheet.ValidateWithPath(path); _defbc != nil {
		return _defbc
	}
	return nil
}

func NewCT_PageSetUpPr() *CT_PageSetUpPr { _gbbaac := &CT_PageSetUpPr{}; return _gbbaac }

func (_afadbg ST_DataValidationType) ValidateWithPath(path string) error {
	switch _afadbg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_afadbg))
	}
	return nil
}

// Validate validates the CT_CellProtection and its children
func (_defeg *CT_CellProtection) Validate() error {
	return _defeg.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0074\u0065c\u0074\u0069\u006f\u006e")
}

func (_ggafbe *CT_Sst) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggafbe.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ggafbe.CountAttr)})
	}
	if _ggafbe.UniqueCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "u\u006e\u0069\u0071\u0075\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ggafbe.UniqueCountAttr)})
	}
	e.EncodeToken(start)
	if _ggafbe.Si != nil {
		_adedc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0069"}}
		for _, _bdeebd := range _ggafbe.Si {
			e.EncodeElement(_bdeebd, _adedc)
		}
	}
	if _ggafbe.ExtLst != nil {
		_effgad := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ggafbe.ExtLst, _effgad)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DateGroupItem and its children
func (_degbc *CT_DateGroupItem) Validate() error {
	return _degbc.ValidateWithPath("\u0043\u0054_\u0044\u0061\u0074e\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d")
}

func (_bdfebd ST_Pane) ValidateWithPath(path string) error {
	switch _bdfebd {
	case 0, 1, 2, 3, 4:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdfebd))
	}
	return nil
}

type ST_TimePeriod byte

type CT_QueryCache struct {

	// Cached Query Count
	CountAttr *uint32

	// Query
	Query []*CT_Query
}

func (_aggfef *CT_X) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _afcfe := range start.Attr {
		if _afcfe.Name.Local == "\u0076" {
			_bfafbf, _acbgag := _eb.ParseInt(_afcfe.Value, 10, 32)
			if _acbgag != nil {
				return _acbgag
			}
			_bfaceaf := int32(_bfafbf)
			_aggfef.VAttr = &_bfaceaf
			continue
		}
	}
	for {
		_edfad, _fdfdg := d.Token()
		if _fdfdg != nil {
			return _ec.Errorf("\u0070\u0061r\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0058\u003a\u0020\u0025\u0073", _fdfdg)
		}
		if _cgfgb, _gcce := _edfad.(_b.EndElement); _gcce && _cgfgb.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ExternalSheetData and its children
func (_edcfb *CT_ExternalSheetData) Validate() error {
	return _edcfb.ValidateWithPath("C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Da\u0074\u0061")
}

// Validate validates the CT_CalcChain and its children
func (_adcf *CT_CalcChain) Validate() error {
	return _adcf.ValidateWithPath("\u0043\u0054\u005fC\u0061\u006c\u0063\u0043\u0068\u0061\u0069\u006e")
}

func (_accf *CT_ChartsheetView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _accf.TabSelectedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_accf.TabSelectedAttr))})
	}
	if _accf.ZoomScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce"}, Value: _ec.Sprintf("\u0025\u0076", *_accf.ZoomScaleAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _accf.WorkbookViewIdAttr)})
	if _accf.ZoomToFitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_accf.ZoomToFitAttr))})
	}
	e.EncodeToken(start)
	if _accf.ExtLst != nil {
		_bbag := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_accf.ExtLst, _bbag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cecg *CT_Filter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efded := range start.Attr {
		if _efded.Name.Local == "\u0076\u0061\u006c" {
			_caegc, _baeca := _efded.Value, error(nil)
			if _baeca != nil {
				return _baeca
			}
			_cecg.ValAttr = &_caegc
			continue
		}
	}
	for {
		_efcdcb, _bbcec := d.Token()
		if _bbcec != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0046\u0069\u006ct\u0065\u0072\u003a\u0020\u0025\u0073", _bbcec)
		}
		if _gcgge, _ecdgd := _efcdcb.(_b.EndElement); _ecdgd && _gcgge.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gecgff *CT_Pages) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _defgd := range start.Attr {
		if _defgd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_deafba, _adbffc := _eb.ParseUint(_defgd.Value, 10, 32)
			if _adbffc != nil {
				return _adbffc
			}
			_gfbda := uint32(_deafba)
			_gecgff.CountAttr = &_gfbda
			continue
		}
	}
_cbbgg:
	for {
		_dggecb, _eegab := d.Token()
		if _eegab != nil {
			return _eegab
		}
		switch _fefac := _dggecb.(type) {
		case _b.StartElement:
			switch _fefac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065"}:
				_eafac := NewCT_PCDSCPage()
				if _abfgbb := d.DecodeElement(_eafac, &_fefac); _abfgbb != nil {
					return _abfgbb
				}
				_gecgff.Page = append(_gecgff.Page, _eafac)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0073\u0020\u0025\u0076", _fefac.Name)
				if _egdaf := d.Skip(); _egdaf != nil {
					return _egdaf
				}
			}
		case _b.EndElement:
			break _cbbgg
		case _b.CharData:
		}
	}
	return nil
}

type ST_ConditionalFormattingOperator byte

func NewCT_ExternalSheetNames() *CT_ExternalSheetNames {
	_edga := &CT_ExternalSheetNames{}
	return _edga
}

type CT_RPrElt struct {

	// Font
	RFont *CT_FontName

	// Character Set
	Charset *CT_IntProperty

	// Font Family
	Family *CT_IntProperty

	// Bold
	B *CT_BooleanProperty

	// Italic
	I *CT_BooleanProperty

	// Strike Through
	Strike *CT_BooleanProperty

	// Outline
	Outline *CT_BooleanProperty

	// Shadow
	Shadow *CT_BooleanProperty

	// Condense
	Condense *CT_BooleanProperty

	// Extend
	Extend *CT_BooleanProperty

	// Text Color
	Color *CT_Color

	// Font Size
	Sz *CT_FontSize

	// Underline
	U *CT_UnderlineProperty

	// Vertical Alignment
	VertAlign *CT_VerticalAlignFontProperty

	// Font Scheme
	Scheme *CT_FontScheme
}

// ValidateWithPath validates the Users and its children, prefixing error messages with path
func (_cffedb *Users) ValidateWithPath(path string) error {
	if _bddaa := _cffedb.CT_Users.ValidateWithPath(path); _bddaa != nil {
		return _bddaa
	}
	return nil
}

// Validate validates the CT_MergeCells and its children
func (_fbadf *CT_MergeCells) Validate() error {
	return _fbadf.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073")
}

func (_eccgegd *CT_ProtectedRanges) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cfaef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065"}}
	for _, _ccgdea := range _eccgegd.ProtectedRange {
		e.EncodeElement(_ccgdea, _cfaef)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CustomWorkbookViews and its children
func (_fafab *CT_CustomWorkbookViews) Validate() error {
	return _fafab.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065w\u0073")
}

func (_fgdcf *ST_ExternalConnectionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fgdcf = 0
	case "\u0067e\u006e\u0065\u0072\u0061\u006c":
		*_fgdcf = 1
	case "\u0074\u0065\u0078\u0074":
		*_fgdcf = 2
	case "\u004d\u0044\u0059":
		*_fgdcf = 3
	case "\u0044\u004d\u0059":
		*_fgdcf = 4
	case "\u0059\u004d\u0044":
		*_fgdcf = 5
	case "\u004d\u0059\u0044":
		*_fgdcf = 6
	case "\u0044\u0059\u004d":
		*_fgdcf = 7
	case "\u0059\u0044\u004d":
		*_fgdcf = 8
	case "\u0073\u006b\u0069\u0070":
		*_fgdcf = 9
	case "\u0045\u004d\u0044":
		*_fgdcf = 10
	}
	return nil
}

func (_eabfb ST_SortBy) ValidateWithPath(path string) error {
	switch _eabfb {
	case 0, 1, 2, 3, 4:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eabfb))
	}
	return nil
}

func (_fabda *CT_WebPublishing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cagfb := range start.Attr {
		if _cagfb.Name.Local == "\u0063\u0073\u0073" {
			_bfdcdc, _adffg := _eb.ParseBool(_cagfb.Value)
			if _adffg != nil {
				return _adffg
			}
			_fabda.CssAttr = &_bfdcdc
			continue
		}
		if _cagfb.Name.Local == "\u0074h\u0069\u0063\u006b\u0065\u0074" {
			_dbbba, _cbfef := _eb.ParseBool(_cagfb.Value)
			if _cbfef != nil {
				return _cbfef
			}
			_fabda.ThicketAttr = &_dbbba
			continue
		}
		if _cagfb.Name.Local == "\u006c\u006f\u006e\u0067\u0046\u0069\u006c\u0065\u004e\u0061\u006d\u0065\u0073" {
			_aebbc, _ffddfg := _eb.ParseBool(_cagfb.Value)
			if _ffddfg != nil {
				return _ffddfg
			}
			_fabda.LongFileNamesAttr = &_aebbc
			continue
		}
		if _cagfb.Name.Local == "\u0076\u006d\u006c" {
			_gcgbf, _cfage := _eb.ParseBool(_cagfb.Value)
			if _cfage != nil {
				return _cfage
			}
			_fabda.VmlAttr = &_gcgbf
			continue
		}
		if _cagfb.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067" {
			_ddgbb, _bgdfgd := _eb.ParseBool(_cagfb.Value)
			if _bgdfgd != nil {
				return _bgdfgd
			}
			_fabda.AllowPngAttr = &_ddgbb
			continue
		}
		if _cagfb.Name.Local == "\u0074\u0061r\u0067\u0065\u0074S\u0063\u0072\u0065\u0065\u006e\u0053\u0069\u007a\u0065" {
			_fabda.TargetScreenSizeAttr.UnmarshalXMLAttr(_cagfb)
			continue
		}
		if _cagfb.Name.Local == "\u0064\u0070\u0069" {
			_gffefa, _caebc := _eb.ParseUint(_cagfb.Value, 10, 32)
			if _caebc != nil {
				return _caebc
			}
			_aeabf := uint32(_gffefa)
			_fabda.DpiAttr = &_aeabf
			continue
		}
		if _cagfb.Name.Local == "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065" {
			_edece, _egcfe := _eb.ParseUint(_cagfb.Value, 10, 32)
			if _egcfe != nil {
				return _egcfe
			}
			_gcbbg := uint32(_edece)
			_fabda.CodePageAttr = &_gcbbg
			continue
		}
		if _cagfb.Name.Local == "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074" {
			_eccbc, _beeca := _cagfb.Value, error(nil)
			if _beeca != nil {
				return _beeca
			}
			_fabda.CharacterSetAttr = &_eccbc
			continue
		}
	}
	for {
		_cfeec, _bfgfd := d.Token()
		if _bfgfd != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050u\u0062l\u0069\u0073\u0068\u0069\u006e\u0067\u003a \u0025\u0073", _bfgfd)
		}
		if _beacb, _edacg := _cfeec.(_b.EndElement); _edacg && _beacb.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Sets and its children
func (_ggdaa *CT_Sets) Validate() error {
	return _ggdaa.ValidateWithPath("\u0043T\u005f\u0053\u0065\u0074\u0073")
}

type ST_IconSetType byte

func NewRevisions() *Revisions {
	_ddagef := &Revisions{}
	_ddagef.CT_Revisions = *NewCT_Revisions()
	return _ddagef
}

func (_cdgfd *ST_TargetScreenSize) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cdgfd = 0
	case "\u00354\u0034\u0078\u0033\u0037\u0036":
		*_cdgfd = 1
	case "\u00364\u0030\u0078\u0034\u0038\u0030":
		*_cdgfd = 2
	case "\u00372\u0030\u0078\u0035\u0031\u0032":
		*_cdgfd = 3
	case "\u00380\u0030\u0078\u0036\u0030\u0030":
		*_cdgfd = 4
	case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
		*_cdgfd = 5
	case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
		*_cdgfd = 6
	case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
		*_cdgfd = 7
	case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
		*_cdgfd = 8
	case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
		*_cdgfd = 9
	case "\u00318\u0030\u0030\u0078\u0031\u0034\u00340":
		*_cdgfd = 10
	case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
		*_cdgfd = 11
	}
	return nil
}

func (_bfcfa ST_IconSetType) Validate() error { return _bfcfa.ValidateWithPath("") }

func (_bcabe ST_WebSourceType) ValidateWithPath(path string) error {
	switch _bcabe {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bcabe))
	}
	return nil
}

const (
	ST_PhoneticTypeUnset             ST_PhoneticType = 0
	ST_PhoneticTypeHalfwidthKatakana ST_PhoneticType = 1
	ST_PhoneticTypeFullwidthKatakana ST_PhoneticType = 2
	ST_PhoneticTypeHiragana          ST_PhoneticType = 3
	ST_PhoneticTypeNoConversion      ST_PhoneticType = 4
)

func NewCT_OleObjects() *CT_OleObjects { _edgfdg := &CT_OleObjects{}; return _edgfdg }

func NewCT_CalculatedItem() *CT_CalculatedItem {
	_ecfe := &CT_CalculatedItem{}
	_ecfe.PivotArea = NewCT_PivotArea()
	return _ecfe
}

func (_fadfba ST_UpdateLinks) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fadfba.String(), start)
}

type ST_TextVAlign byte

type CT_ExternalBook struct {
	IdAttr string

	// Supporting Workbook Sheet Names
	SheetNames *CT_ExternalSheetNames

	// Named Links
	DefinedNames *CT_ExternalDefinedNames

	// Cached Worksheet Data
	SheetDataSet *CT_ExternalSheetDataSet
}

func NewCT_DdeValue() *CT_DdeValue { _fdgdb := &CT_DdeValue{}; return _fdgdb }

func (_dceece ST_PatternType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cabfb := _b.Attr{}
	_cabfb.Name = name
	switch _dceece {
	case ST_PatternTypeUnset:
		_cabfb.Value = ""
	case ST_PatternTypeNone:
		_cabfb.Value = "\u006e\u006f\u006e\u0065"
	case ST_PatternTypeSolid:
		_cabfb.Value = "\u0073\u006f\u006ci\u0064"
	case ST_PatternTypeMediumGray:
		_cabfb.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079"
	case ST_PatternTypeDarkGray:
		_cabfb.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case ST_PatternTypeLightGray:
		_cabfb.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case ST_PatternTypeDarkHorizontal:
		_cabfb.Value = "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"
	case ST_PatternTypeDarkVertical:
		_cabfb.Value = "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case ST_PatternTypeDarkDown:
		_cabfb.Value = "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e"
	case ST_PatternTypeDarkUp:
		_cabfb.Value = "\u0064\u0061\u0072\u006b\u0055\u0070"
	case ST_PatternTypeDarkGrid:
		_cabfb.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064"
	case ST_PatternTypeDarkTrellis:
		_cabfb.Value = "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case ST_PatternTypeLightHorizontal:
		_cabfb.Value = "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"
	case ST_PatternTypeLightVertical:
		_cabfb.Value = "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case ST_PatternTypeLightDown:
		_cabfb.Value = "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n"
	case ST_PatternTypeLightUp:
		_cabfb.Value = "\u006ci\u0067\u0068\u0074\u0055\u0070"
	case ST_PatternTypeLightGrid:
		_cabfb.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d"
	case ST_PatternTypeLightTrellis:
		_cabfb.Value = "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case ST_PatternTypeGray125:
		_cabfb.Value = "\u0067r\u0061\u0079\u0031\u0032\u0035"
	case ST_PatternTypeGray0625:
		_cabfb.Value = "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035"
	}
	return _cabfb, nil
}

func NewCT_VolTypes() *CT_VolTypes { _cdcaa := &CT_VolTypes{}; return _cdcaa }

type CT_LevelGroup struct {

	// Group Name
	NameAttr string

	// Unique Group Name
	UniqueNameAttr string

	// Group Caption
	CaptionAttr string

	// Parent Unique Name
	UniqueParentAttr *string

	// Group Id
	IdAttr *int32

	// OLAP Group Members
	GroupMembers *CT_GroupMembers
}

func (_gfab *CT_FieldGroup) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfab.ParAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_gfab.ParAttr)})
	}
	if _gfab.BaseAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0073\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_gfab.BaseAttr)})
	}
	e.EncodeToken(start)
	if _gfab.RangePr != nil {
		_fdfba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0061\u006e\u0067\u0065\u0050\u0072"}}
		e.EncodeElement(_gfab.RangePr, _fdfba)
	}
	if _gfab.DiscretePr != nil {
		_ffbbfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"}}
		e.EncodeElement(_gfab.DiscretePr, _ffbbfa)
	}
	if _gfab.GroupItems != nil {
		_deacb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_gfab.GroupItems, _deacb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bfaded *Comments) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfaded.CT_Comments = *NewCT_Comments()
_ebffb:
	for {
		_fcfdg, _ccfdf := d.Token()
		if _ccfdf != nil {
			return _ccfdf
		}
		switch _ecbae := _fcfdg.(type) {
		case _b.StartElement:
			switch _ecbae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}:
				if _dcaadc := d.DecodeElement(_bfaded.Authors, &_ecbae); _dcaadc != nil {
					return _dcaadc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}:
				if _bcfce := d.DecodeElement(_bfaded.CommentList, &_ecbae); _bcfce != nil {
					return _bcfce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bfaded.ExtLst = NewCT_ExtensionList()
				if _accadf := d.DecodeElement(_bfaded.ExtLst, &_ecbae); _accadf != nil {
					return _accadf
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0020\u0025\u0076", _ecbae.Name)
				if _bfeeb := d.Skip(); _bfeeb != nil {
					return _bfeeb
				}
			}
		case _b.EndElement:
			break _ebffb
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DataRef and its children, prefixing error messages with path
func (_bgbf *CT_DataRef) ValidateWithPath(path string) error { return nil }

func (_deafe *CT_ExtensionList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ddgcg:
	for {
		_efcc, _bfcd := d.Token()
		if _bfcd != nil {
			return _bfcd
		}
		switch _cebfb := _efcc.(type) {
		case _b.StartElement:
			switch _cebfb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_ccaa := NewCT_Extension()
				if _dbgba := d.DecodeElement(_ccaa, &_cebfb); _dbgba != nil {
					return _dbgba
				}
				_deafe.Ext = append(_deafe.Ext, _ccaa)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _cebfb.Name)
				if _decb := d.Skip(); _decb != nil {
					return _decb
				}
			}
		case _b.EndElement:
			break _ddgcg
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_IgnoredErrors and its children
func (_fcfag *CT_IgnoredErrors) Validate() error {
	return _fcfag.ValidateWithPath("\u0043\u0054_\u0049\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073")
}

func (_afdaa *CT_CustomProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fadb := range start.Attr {
		if _fadb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fadb.Name.Local == "\u0069\u0064" || _fadb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fadb.Name.Local == "\u0069\u0064" {
			_agfd, _ggdaf := _fadb.Value, error(nil)
			if _ggdaf != nil {
				return _ggdaf
			}
			_afdaa.IdAttr = _agfd
			continue
		}
		if _fadb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bacdb, _gdbbf := _fadb.Value, error(nil)
			if _gdbbf != nil {
				return _gdbbf
			}
			_afdaa.NameAttr = _bacdb
			continue
		}
	}
	for {
		_afac, _dada := d.Token()
		if _dada != nil {
			return _ec.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079: \u0025\u0073", _dada)
		}
		if _eeed, _aegd := _afac.(_b.EndElement); _aegd && _eeed.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_PivotSelection and its children
func (_fgcd *CT_PivotSelection) Validate() error {
	return _fgcd.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e")
}

type CT_DdeValues struct {

	// Rows
	RowsAttr *uint32

	// Columns
	ColsAttr *uint32

	// Value
	Value []*CT_DdeValue
}

// Validate validates the CT_GroupLevels and its children
func (_dcgdg *CT_GroupLevels) Validate() error {
	return _dcgdg.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004ce\u0076\u0065\u006c\u0073")
}

// Validate validates the CT_DbPr and its children
func (_bgag *CT_DbPr) Validate() error {
	return _bgag.ValidateWithPath("\u0043T\u005f\u0044\u0062\u0050\u0072")
}

func (_gcaec *CT_PivotAreaReferences) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bedee := range start.Attr {
		if _bedee.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ebdab, _bddbe := _eb.ParseUint(_bedee.Value, 10, 32)
			if _bddbe != nil {
				return _bddbe
			}
			_bfeec := uint32(_ebdab)
			_gcaec.CountAttr = &_bfeec
			continue
		}
	}
_fabgc:
	for {
		_edbb, _dbbdc := d.Token()
		if _dbbdc != nil {
			return _dbbdc
		}
		switch _dabbc := _edbb.(type) {
		case _b.StartElement:
			switch _dabbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072e\u0066\u0065\u0072\u0065\u006e\u0063e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072e\u0066\u0065\u0072\u0065\u006e\u0063e"}:
				_cccdd := NewCT_PivotAreaReference()
				if _afadf := d.DecodeElement(_cccdd, &_dabbc); _afadf != nil {
					return _afadf
				}
				_gcaec.Reference = append(_gcaec.Reference, _cccdd)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0050\u0069\u0076\u006ft\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073\u0020\u0025\u0076", _dabbc.Name)
				if _cafed := d.Skip(); _cafed != nil {
					return _cafed
				}
			}
		case _b.EndElement:
			break _fabgc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CalculatedItem and its children, prefixing error messages with path
func (_dbef *CT_CalculatedItem) ValidateWithPath(path string) error {
	if _fdbe := _dbef.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _fdbe != nil {
		return _fdbe
	}
	if _dbef.ExtLst != nil {
		if _gbe := _dbef.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbe != nil {
			return _gbe
		}
	}
	return nil
}

func NewCT_RgbColor() *CT_RgbColor { _bddac := &CT_RgbColor{}; return _bddac }

func NewCT_ChartFormats() *CT_ChartFormats { _acdf := &CT_ChartFormats{}; return _acdf }

// Validate validates the CT_Parameter and its children
func (_eeae *CT_Parameter) Validate() error {
	return _eeae.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072")
}

type CT_TableMissing struct{}

func (_ffbf *CT_DataValidation) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dfeag := range start.Attr {
		if _dfeag.Name.Local == "\u0073\u0068o\u0077\u0045\u0072r\u006f\u0072\u004d\u0065\u0073\u0073\u0061\u0067\u0065" {
			_bcgd, _adfdg := _eb.ParseBool(_dfeag.Value)
			if _adfdg != nil {
				return _adfdg
			}
			_ffbf.ShowErrorMessageAttr = &_bcgd
			continue
		}
		if _dfeag.Name.Local == "\u0065\u0072\u0072\u006f\u0072\u0054\u0069\u0074\u006c\u0065" {
			_cdddg, _affgg := _dfeag.Value, error(nil)
			if _affgg != nil {
				return _affgg
			}
			_ffbf.ErrorTitleAttr = &_cdddg
			continue
		}
		if _dfeag.Name.Local == "\u0065\u0072\u0072\u006f\u0072\u0053\u0074\u0079\u006c\u0065" {
			_ffbf.ErrorStyleAttr.UnmarshalXMLAttr(_dfeag)
			continue
		}
		if _dfeag.Name.Local == "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072" {
			_ffbf.OperatorAttr.UnmarshalXMLAttr(_dfeag)
			continue
		}
		if _dfeag.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0042\u006c\u0061\u006e\u006b" {
			_ecdef, _ggeef := _eb.ParseBool(_dfeag.Value)
			if _ggeef != nil {
				return _ggeef
			}
			_ffbf.AllowBlankAttr = &_ecdef
			continue
		}
		if _dfeag.Name.Local == "\u0073\u0068\u006fw\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e" {
			_cdeefc, _fdcgf := _eb.ParseBool(_dfeag.Value)
			if _fdcgf != nil {
				return _fdcgf
			}
			_ffbf.ShowDropDownAttr = &_cdeefc
			continue
		}
		if _dfeag.Name.Local == "\u0073\u0068o\u0077\u0049\u006ep\u0075\u0074\u004d\u0065\u0073\u0073\u0061\u0067\u0065" {
			_agcca, _dfbac := _eb.ParseBool(_dfeag.Value)
			if _dfbac != nil {
				return _dfbac
			}
			_ffbf.ShowInputMessageAttr = &_agcca
			continue
		}
		if _dfeag.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ffbf.TypeAttr.UnmarshalXMLAttr(_dfeag)
			continue
		}
		if _dfeag.Name.Local == "\u0069m\u0065\u004d\u006f\u0064\u0065" {
			_ffbf.ImeModeAttr.UnmarshalXMLAttr(_dfeag)
			continue
		}
		if _dfeag.Name.Local == "\u0065\u0072\u0072o\u0072" {
			_defd, _afbe := _dfeag.Value, error(nil)
			if _afbe != nil {
				return _afbe
			}
			_ffbf.ErrorAttr = &_defd
			continue
		}
		if _dfeag.Name.Local == "p\u0072\u006f\u006d\u0070\u0074\u0054\u0069\u0074\u006c\u0065" {
			_aadbg, _gfce := _dfeag.Value, error(nil)
			if _gfce != nil {
				return _gfce
			}
			_ffbf.PromptTitleAttr = &_aadbg
			continue
		}
		if _dfeag.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074" {
			_daba, _fdfeb := _dfeag.Value, error(nil)
			if _fdfeb != nil {
				return _fdfeb
			}
			_ffbf.PromptAttr = &_daba
			continue
		}
		if _dfeag.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_gfba, _fgab := ParseSliceST_Sqref(_dfeag.Value)
			if _fgab != nil {
				return _fgab
			}
			_ffbf.SqrefAttr = _gfba
			continue
		}
	}
_abgfb:
	for {
		_aefea, _cefe := d.Token()
		if _cefe != nil {
			return _cefe
		}
		switch _begag := _aefea.(type) {
		case _b.StartElement:
			switch _begag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0031"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0031"}:
				_ffbf.Formula1 = new(string)
				if _bbbd := d.DecodeElement(_ffbf.Formula1, &_begag); _bbbd != nil {
					return _bbbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0032"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0032"}:
				_ffbf.Formula2 = new(string)
				if _fdcd := d.DecodeElement(_ffbf.Formula2, &_begag); _fdcd != nil {
					return _fdcd
				}
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _begag.Name)
				if _bddg := d.Skip(); _bddg != nil {
					return _bddg
				}
			}
		case _b.EndElement:
			break _abgfb
		case _b.CharData:
		}
	}
	return nil
}

func (_dbbfd *CT_SingleXmlCells) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fdeff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u0069\u006eg\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}}
	for _, _aaggc := range _dbbfd.SingleXmlCell {
		e.EncodeElement(_aaggc, _fdeff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gcfbca *CT_SmartTagPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gcfbca.EmbedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006d\u0062e\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gcfbca.EmbedAttr))})
	}
	if _gcfbca.ShowAttr != ST_SmartTagShowUnset {
		_bdfce, _adgbb := _gcfbca.ShowAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0068\u006f\u0077"})
		if _adgbb != nil {
			return _adgbb
		}
		start.Attr = append(start.Attr, _bdfce)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_dfc *CT_ChartsheetProtection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dfc.PasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_dfc.PasswordAttr)})
	}
	if _dfc.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_dfc.AlgorithmNameAttr)})
	}
	if _dfc.HashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _ec.Sprintf("\u0025\u0076", *_dfc.HashValueAttr)})
	}
	if _dfc.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _ec.Sprintf("\u0025\u0076", *_dfc.SaltValueAttr)})
	}
	if _dfc.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _ec.Sprintf("\u0025\u0076", *_dfc.SpinCountAttr)})
	}
	if _dfc.ContentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006e\u0074\u0065\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dfc.ContentAttr))})
	}
	if _dfc.ObjectsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fb\u006a\u0065\u0063\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dfc.ObjectsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the AG_AutoFormat and its children, prefixing error messages with path
func (_cdb *AG_AutoFormat) ValidateWithPath(path string) error { return nil }

func NewCT_Hyperlinks() *CT_Hyperlinks { _bfcb := &CT_Hyperlinks{}; return _bfcb }

func (_dbgcd *CT_OleLink) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _dbgcd.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u0067\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _dbgcd.ProgIdAttr)})
	e.EncodeToken(start)
	if _dbgcd.OleItems != nil {
		_ebbaf := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u006f\u006c\u0065\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_dbgcd.OleItems, _ebbaf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_ecbebc ST_PatternType) String() string {
	switch _ecbebc {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u006f\u006ci\u0064"
	case 3:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079"
	case 4:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case 5:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case 6:
		return "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"
	case 7:
		return "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case 8:
		return "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e"
	case 9:
		return "\u0064\u0061\u0072\u006b\u0055\u0070"
	case 10:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064"
	case 11:
		return "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case 12:
		return "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"
	case 13:
		return "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case 14:
		return "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n"
	case 15:
		return "\u006ci\u0067\u0068\u0074\u0055\u0070"
	case 16:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d"
	case 17:
		return "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case 18:
		return "\u0067r\u0061\u0079\u0031\u0032\u0035"
	case 19:
		return "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035"
	}
	return ""
}

// ValidateWithPath validates the PivotCacheRecords and its children, prefixing error messages with path
func (_ecfgbf *PivotCacheRecords) ValidateWithPath(path string) error {
	if _bdaae := _ecfgbf.CT_PivotCacheRecords.ValidateWithPath(path); _bdaae != nil {
		return _bdaae
	}
	return nil
}

const (
	ST_PatternTypeUnset           ST_PatternType = 0
	ST_PatternTypeNone            ST_PatternType = 1
	ST_PatternTypeSolid           ST_PatternType = 2
	ST_PatternTypeMediumGray      ST_PatternType = 3
	ST_PatternTypeDarkGray        ST_PatternType = 4
	ST_PatternTypeLightGray       ST_PatternType = 5
	ST_PatternTypeDarkHorizontal  ST_PatternType = 6
	ST_PatternTypeDarkVertical    ST_PatternType = 7
	ST_PatternTypeDarkDown        ST_PatternType = 8
	ST_PatternTypeDarkUp          ST_PatternType = 9
	ST_PatternTypeDarkGrid        ST_PatternType = 10
	ST_PatternTypeDarkTrellis     ST_PatternType = 11
	ST_PatternTypeLightHorizontal ST_PatternType = 12
	ST_PatternTypeLightVertical   ST_PatternType = 13
	ST_PatternTypeLightDown       ST_PatternType = 14
	ST_PatternTypeLightUp         ST_PatternType = 15
	ST_PatternTypeLightGrid       ST_PatternType = 16
	ST_PatternTypeLightTrellis    ST_PatternType = 17
	ST_PatternTypeGray125         ST_PatternType = 18
	ST_PatternTypeGray0625        ST_PatternType = 19
)

// Validate validates the CT_RevisionInsertSheet and its children
func (_agddd *CT_RevisionInsertSheet) Validate() error {
	return _agddd.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0049\u006e\u0073\u0065\u0072\u0074\u0053\u0068\u0065e\u0074")
}

func (_agdcgf ST_VolValueType) Validate() error { return _agdcgf.ValidateWithPath("") }

type CT_DdeLink struct {

	// Service name
	DdeServiceAttr string

	// Topic for DDE server
	DdeTopicAttr string

	// DDE Items Collection
	DdeItems *CT_DdeItems
}

func NewCT_RevisionRowColumn() *CT_RevisionRowColumn {
	_bbfgdb := &CT_RevisionRowColumn{}
	_bbfgdb.ActionAttr = ST_rwColActionType(1)
	return _bbfgdb
}

func NewCT_QueryTableFields() *CT_QueryTableFields { _afagb := &CT_QueryTableFields{}; return _afagb }

func (_geed *CT_Col) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fcbb := range start.Attr {
		if _fcbb.Name.Local == "\u006d\u0069\u006e" {
			_ffcc, _dfdd := _eb.ParseUint(_fcbb.Value, 10, 32)
			if _dfdd != nil {
				return _dfdd
			}
			_geed.MinAttr = uint32(_ffcc)
			continue
		}
		if _fcbb.Name.Local == "\u006d\u0061\u0078" {
			_agga, _dbcf := _eb.ParseUint(_fcbb.Value, 10, 32)
			if _dbcf != nil {
				return _dbcf
			}
			_geed.MaxAttr = uint32(_agga)
			continue
		}
		if _fcbb.Name.Local == "\u0077\u0069\u0064t\u0068" {
			_ddaf, _gcdb := _eb.ParseFloat(_fcbb.Value, 64)
			if _gcdb != nil {
				return _gcdb
			}
			_geed.WidthAttr = &_ddaf
			continue
		}
		if _fcbb.Name.Local == "\u0073\u0074\u0079l\u0065" {
			_dfdde, _deeg := _eb.ParseUint(_fcbb.Value, 10, 32)
			if _deeg != nil {
				return _deeg
			}
			_agge := uint32(_dfdde)
			_geed.StyleAttr = &_agge
			continue
		}
		if _fcbb.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_cefd, _fcea := _eb.ParseBool(_fcbb.Value)
			if _fcea != nil {
				return _fcea
			}
			_geed.HiddenAttr = &_cefd
			continue
		}
		if _fcbb.Name.Local == "\u0062e\u0073\u0074\u0046\u0069\u0074" {
			_ebcb, _dbfgb := _eb.ParseBool(_fcbb.Value)
			if _dbfgb != nil {
				return _dbfgb
			}
			_geed.BestFitAttr = &_ebcb
			continue
		}
		if _fcbb.Name.Local == "c\u0075\u0073\u0074\u006f\u006d\u0057\u0069\u0064\u0074\u0068" {
			_acda, _fdgdf := _eb.ParseBool(_fcbb.Value)
			if _fdgdf != nil {
				return _fdgdf
			}
			_geed.CustomWidthAttr = &_acda
			continue
		}
		if _fcbb.Name.Local == "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063" {
			_ecca, _dfbg := _eb.ParseBool(_fcbb.Value)
			if _dfbg != nil {
				return _dfbg
			}
			_geed.PhoneticAttr = &_ecca
			continue
		}
		if _fcbb.Name.Local == "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c" {
			_cgac, _cgcaa := _eb.ParseUint(_fcbb.Value, 10, 8)
			if _cgcaa != nil {
				return _cgcaa
			}
			_ggeb := uint8(_cgac)
			_geed.OutlineLevelAttr = &_ggeb
			continue
		}
		if _fcbb.Name.Local == "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d" {
			_dec, _cbdb := _eb.ParseBool(_fcbb.Value)
			if _cbdb != nil {
				return _cbdb
			}
			_geed.CollapsedAttr = &_dec
			continue
		}
	}
	for {
		_ecgc, _ecaa := d.Token()
		if _ecaa != nil {
			return _ec.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0043o\u006c\u003a\u0020\u0025\u0073", _ecaa)
		}
		if _cgbag, _dadef := _ecgc.(_b.EndElement); _dadef && _cgbag.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_RangePr struct {

	// Source Data Set Beginning Range
	AutoStartAttr *bool

	// Source Data Ending Range
	AutoEndAttr *bool

	// Group By
	GroupByAttr ST_GroupBy

	// Numeric Grouping Start Value
	StartNumAttr *float64

	// Numeric Grouping End Value
	EndNumAttr *float64

	// Date Grouping Start Value
	StartDateAttr *_g.Time

	// Date Grouping End Value
	EndDateAttr *_g.Time

	// Grouping Interval
	GroupIntervalAttr *float64
}

type CT_BookView struct {

	// Visibility
	VisibilityAttr ST_Visibility

	// Minimized
	MinimizedAttr *bool

	// Show Horizontal Scroll
	ShowHorizontalScrollAttr *bool

	// Show Vertical Scroll
	ShowVerticalScrollAttr *bool

	// Show Sheet Tabs
	ShowSheetTabsAttr *bool

	// Upper Left Corner (X Coordinate)
	XWindowAttr *int32

	// Upper Left Corner (Y Coordinate)
	YWindowAttr *int32

	// Window Width
	WindowWidthAttr *uint32

	// Window Height
	WindowHeightAttr *uint32

	// Sheet Tab Ratio
	TabRatioAttr *uint32

	// First Sheet
	FirstSheetAttr *uint32

	// Active Sheet Index
	ActiveTabAttr *uint32

	// AutoFilter Date Grouping
	AutoFilterDateGroupingAttr *bool
	ExtLst                     *CT_ExtensionList
}

func NewChartsheet() *Chartsheet {
	_gceab := &Chartsheet{}
	_gceab.CT_Chartsheet = *NewCT_Chartsheet()
	return _gceab
}

func (_bcgde *CT_Sets) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eeefe := range start.Attr {
		if _eeefe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cbbcac, _baedbf := _eb.ParseUint(_eeefe.Value, 10, 32)
			if _baedbf != nil {
				return _baedbf
			}
			_gbcafa := uint32(_cbbcac)
			_bcgde.CountAttr = &_gbcafa
			continue
		}
	}
_bbegag:
	for {
		_bgcdg, _dgdef := d.Token()
		if _dgdef != nil {
			return _dgdef
		}
		switch _gbbece := _bgcdg.(type) {
		case _b.StartElement:
			switch _gbbece.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}:
				_eaebdf := NewCT_Set()
				if _adcgg := d.DecodeElement(_eaebdf, &_gbbece); _adcgg != nil {
					return _adcgg
				}
				_bcgde.Set = append(_bcgde.Set, _eaebdf)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u0065\u0074\u0073\u0020\u0025\u0076", _gbbece.Name)
				if _edabbb := d.Skip(); _edabbb != nil {
					return _edabbb
				}
			}
		case _b.EndElement:
			break _bbegag
		case _b.CharData:
		}
	}
	return nil
}

type CT_Comments struct {

	// Authors
	Authors *CT_Authors

	// List of Comments
	CommentList *CT_CommentList
	ExtLst      *CT_ExtensionList
}

func (_ggaaag ST_TimePeriod) Validate() error { return _ggaaag.ValidateWithPath("") }

func (_edadd *CT_OleSize) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _befdb := range start.Attr {
		if _befdb.Name.Local == "\u0072\u0065\u0066" {
			_cebaaa, _gccfbc := _befdb.Value, error(nil)
			if _gccfbc != nil {
				return _gccfbc
			}
			_edadd.RefAttr = _cebaaa
			continue
		}
	}
	for {
		_daaef, _fcebb := d.Token()
		if _fcebb != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u0053\u0069\u007a\u0065\u003a\u0020%\u0073", _fcebb)
		}
		if _abcfa, _aebgee := _daaef.(_b.EndElement); _aebgee && _abcfa.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_ExternalReference struct{ IdAttr string }

func (_gbebf *CT_QueryTable) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _gbebf.NameAttr)})
	if _gbebf.HeadersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068e\u0061\u0064\u0065\u0072\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbebf.HeadersAttr))})
	}
	if _gbebf.RowNumbersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbebf.RowNumbersAttr))})
	}
	if _gbebf.DisableRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbebf.DisableRefreshAttr))})
	}
	if _gbebf.BackgroundRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065f\u0072\u0065\u0073\u0068"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbebf.BackgroundRefreshAttr))})
	}
	if _gbebf.FirstBackgroundRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073tB\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065\u0066\u0072\u0065s\u0068"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbebf.FirstBackgroundRefreshAttr))})
	}
	if _gbebf.RefreshOnLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbebf.RefreshOnLoadAttr))})
	}
	if _gbebf.GrowShrinkTypeAttr != ST_GrowShrinkTypeUnset {
		_febea, _gebgf := _gbebf.GrowShrinkTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0067\u0072\u006f\u0077\u0053\u0068\u0072\u0069\u006ek\u0054\u0079\u0070\u0065"})
		if _gebgf != nil {
			return _gebgf
		}
		start.Attr = append(start.Attr, _febea)
	}
	if _gbebf.FillFormulasAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbebf.FillFormulasAttr))})
	}
	if _gbebf.RemoveDataOnSaveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065m\u006f\u0076\u0065D\u0061\u0074\u0061\u004f\u006e\u0053\u0061\u0076\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbebf.RemoveDataOnSaveAttr))})
	}
	if _gbebf.DisableEditAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0069\u0073\u0061\u0062\u006c\u0065\u0045\u0064\u0069\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbebf.DisableEditAttr))})
	}
	if _gbebf.PreserveFormattingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbebf.PreserveFormattingAttr))})
	}
	if _gbebf.AdjustColumnWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0064\u006a\u0075\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006eW\u0069\u0064\u0074\u0068"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbebf.AdjustColumnWidthAttr))})
	}
	if _gbebf.IntermediateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0074e\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbebf.IntermediateAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _gbebf.ConnectionIdAttr)})
	if _gbebf.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_gbebf.AutoFormatIdAttr)})
	}
	if _gbebf.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbebf.ApplyNumberFormatsAttr))})
	}
	if _gbebf.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbebf.ApplyBorderFormatsAttr))})
	}
	if _gbebf.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbebf.ApplyFontFormatsAttr))})
	}
	if _gbebf.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbebf.ApplyPatternFormatsAttr))})
	}
	if _gbebf.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbebf.ApplyAlignmentFormatsAttr))})
	}
	if _gbebf.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gbebf.ApplyWidthHeightFormatsAttr))})
	}
	e.EncodeToken(start)
	if _gbebf.QueryTableRefresh != nil {
		_eeceg := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0052\u0065\u0066re\u0073\u0068"}}
		e.EncodeElement(_gbebf.QueryTableRefresh, _eeceg)
	}
	if _gbebf.ExtLst != nil {
		_defaeb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gbebf.ExtLst, _defaeb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_pivotTableDefinition and its children, prefixing error messages with path
func (_befafad *CT_pivotTableDefinition) ValidateWithPath(path string) error {
	if _cccggb := _befafad.Location.ValidateWithPath(path + "\u002fL\u006f\u0063\u0061\u0074\u0069\u006fn"); _cccggb != nil {
		return _cccggb
	}
	if _befafad.PivotFields != nil {
		if _gbfbfb := _befafad.PivotFields.ValidateWithPath(path + "\u002f\u0050\u0069v\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"); _gbfbfb != nil {
			return _gbfbfb
		}
	}
	if _befafad.RowFields != nil {
		if _fafcd := _befafad.RowFields.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073"); _fafcd != nil {
			return _fafcd
		}
	}
	if _befafad.RowItems != nil {
		if _fdgcg := _befafad.RowItems.ValidateWithPath(path + "\u002fR\u006f\u0077\u0049\u0074\u0065\u006ds"); _fdgcg != nil {
			return _fdgcg
		}
	}
	if _befafad.ColFields != nil {
		if _fffcbd := _befafad.ColFields.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073"); _fffcbd != nil {
			return _fffcbd
		}
	}
	if _befafad.ColItems != nil {
		if _aacee := _befafad.ColItems.ValidateWithPath(path + "\u002fC\u006f\u006c\u0049\u0074\u0065\u006ds"); _aacee != nil {
			return _aacee
		}
	}
	if _befafad.PageFields != nil {
		if _gggag := _befafad.PageFields.ValidateWithPath(path + "/\u0050\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"); _gggag != nil {
			return _gggag
		}
	}
	if _befafad.DataFields != nil {
		if _cebbc := _befafad.DataFields.ValidateWithPath(path + "/\u0044\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"); _cebbc != nil {
			return _cebbc
		}
	}
	if _befafad.Formats != nil {
		if _accce := _befafad.Formats.ValidateWithPath(path + "\u002f\u0046\u006f\u0072\u006d\u0061\u0074\u0073"); _accce != nil {
			return _accce
		}
	}
	if _befafad.ConditionalFormats != nil {
		if _ddega := _befafad.ConditionalFormats.ValidateWithPath(path + "\u002f\u0043\u006f\u006edi\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0073"); _ddega != nil {
			return _ddega
		}
	}
	if _befafad.ChartFormats != nil {
		if _gcacb := _befafad.ChartFormats.ValidateWithPath(path + "\u002f\u0043\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"); _gcacb != nil {
			return _gcacb
		}
	}
	if _befafad.PivotHierarchies != nil {
		if _fcdecf := _befafad.PivotHierarchies.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072c\u0068\u0069\u0065\u0073"); _fcdecf != nil {
			return _fcdecf
		}
	}
	if _befafad.PivotTableStyleInfo != nil {
		if _eecae := _befafad.PivotTableStyleInfo.ValidateWithPath(path + "/\u0050i\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065In\u0066\u006f"); _eecae != nil {
			return _eecae
		}
	}
	if _befafad.Filters != nil {
		if _aegbf := _befafad.Filters.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u0073"); _aegbf != nil {
			return _aegbf
		}
	}
	if _befafad.RowHierarchiesUsage != nil {
		if _afebg := _befafad.RowHierarchiesUsage.ValidateWithPath(path + "/\u0052o\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0069\u0065\u0073\u0055sa\u0067\u0065"); _afebg != nil {
			return _afebg
		}
	}
	if _befafad.ColHierarchiesUsage != nil {
		if _fbdbge := _befafad.ColHierarchiesUsage.ValidateWithPath(path + "/\u0043o\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0069\u0065\u0073\u0055sa\u0067\u0065"); _fbdbge != nil {
			return _fbdbge
		}
	}
	if _befafad.ExtLst != nil {
		if _edbbe := _befafad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _edbbe != nil {
			return _edbbe
		}
	}
	return nil
}

// Validate validates the CT_MdxMemeberProp and its children
func (_dcfcg *CT_MdxMemeberProp) Validate() error {
	return _dcfcg.ValidateWithPath("\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u006d\u0065\u0062\u0065r\u0050\u0072\u006f\u0070")
}

func (_dggcc *ST_SheetViewType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_adbccb, _cfcdcf := d.Token()
	if _cfcdcf != nil {
		return _cfcdcf
	}
	if _ffbac, _bdcdd := _adbccb.(_b.EndElement); _bdcdd && _ffbac.Name == start.Name {
		*_dggcc = 1
		return nil
	}
	if _abfcec, _dcdfg := _adbccb.(_b.CharData); !_dcdfg {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _adbccb)
	} else {
		switch string(_abfcec) {
		case "":
			*_dggcc = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_dggcc = 1
		case "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077":
			*_dggcc = 2
		case "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074":
			*_dggcc = 3
		}
	}
	_adbccb, _cfcdcf = d.Token()
	if _cfcdcf != nil {
		return _cfcdcf
	}
	if _egagd, _efcfg := _adbccb.(_b.EndElement); _efcfg && _egagd.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _adbccb)
}

// Validate validates the CT_DeletedField and its children
func (_dabce *CT_DeletedField) Validate() error {
	return _dabce.ValidateWithPath("\u0043T\u005fD\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064")
}

func (_babgd *CT_FileVersion) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gdbgc := range start.Attr {
		if _gdbgc.Name.Local == "\u0061p\u0070\u004e\u0061\u006d\u0065" {
			_efggb, _fbafc := _gdbgc.Value, error(nil)
			if _fbafc != nil {
				return _fbafc
			}
			_babgd.AppNameAttr = &_efggb
			continue
		}
		if _gdbgc.Name.Local == "\u006c\u0061\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064" {
			_bbdadf, _bagfa := _gdbgc.Value, error(nil)
			if _bagfa != nil {
				return _bagfa
			}
			_babgd.LastEditedAttr = &_bbdadf
			continue
		}
		if _gdbgc.Name.Local == "\u006c\u006f\u0077e\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064" {
			_cgcd, _gffc := _gdbgc.Value, error(nil)
			if _gffc != nil {
				return _gffc
			}
			_babgd.LowestEditedAttr = &_cgcd
			continue
		}
		if _gdbgc.Name.Local == "\u0072\u0075\u0070\u0042\u0075\u0069\u006c\u0064" {
			_aaag, _bcdbb := _gdbgc.Value, error(nil)
			if _bcdbb != nil {
				return _bcdbb
			}
			_babgd.RupBuildAttr = &_aaag
			continue
		}
		if _gdbgc.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_bffc, _efggg := _gdbgc.Value, error(nil)
			if _efggg != nil {
				return _efggg
			}
			_babgd.CodeNameAttr = &_bffc
			continue
		}
	}
	for {
		_egegg, _dafc := d.Token()
		if _dafc != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e:\u0020\u0025\u0073", _dafc)
		}
		if _gefb, _ggcff := _egegg.(_b.EndElement); _ggcff && _gefb.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_LevelGroup() *CT_LevelGroup {
	_aceb := &CT_LevelGroup{}
	_aceb.GroupMembers = NewCT_GroupMembers()
	return _aceb
}

func (_ggdb *CT_CellStyleXfs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggdb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ggdb.CountAttr)})
	}
	e.EncodeToken(start)
	_fcbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ax\u0066"}}
	for _, _gbda := range _ggdb.Xf {
		e.EncodeElement(_gbda, _fcbe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_ggecf ST_DateTimeGrouping) Validate() error { return _ggecf.ValidateWithPath("") }

type CT_Groups struct {

	// Level Group Count
	CountAttr *uint32

	// OLAP Group
	Group []*CT_LevelGroup
}

type CT_CalcChain struct {

	// Cell
	C      []*CT_CalcCell
	ExtLst *CT_ExtensionList
}

type CT_FileRecoveryPr struct {

	// Auto Recover
	AutoRecoverAttr *bool

	// Crash Save
	CrashSaveAttr *bool

	// Data Extract Load
	DataExtractLoadAttr *bool

	// Repair Load
	RepairLoadAttr *bool
}

type CT_VolMain struct {

	// First String
	FirstAttr string

	// Topic
	Tp []*CT_VolTopic
}

type CT_SmartTagType struct {

	// SmartTag Namespace URI
	NamespaceUriAttr *string

	// Name
	NameAttr *string

	// Smart Tag URL
	UrlAttr *string
}

func (_dcfba *CT_MemberProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aeddg := range start.Attr {
		if _aeddg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dffdb, _gafee := _eb.ParseUint(_aeddg.Value, 10, 32)
			if _gafee != nil {
				return _gafee
			}
			_faef := uint32(_dffdb)
			_dcfba.CountAttr = &_faef
			continue
		}
	}
_egac:
	for {
		_fdcfa, _cggaf := d.Token()
		if _cggaf != nil {
			return _cggaf
		}
		switch _fdgcd := _fdcfa.(type) {
		case _b.StartElement:
			switch _fdgcd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070"}:
				_efcae := NewCT_MemberProperty()
				if _cbcbg := d.DecodeElement(_efcae, &_fdgcd); _cbcbg != nil {
					return _cbcbg
				}
				_dcfba.Mp = append(_dcfba.Mp, _efcae)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _fdgcd.Name)
				if _bcagb := d.Skip(); _bcagb != nil {
					return _bcagb
				}
			}
		case _b.EndElement:
			break _egac
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Map and its children
func (_bbdge *CT_Map) Validate() error {
	return _bbdge.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u0070")
}

type CT_TableFormula struct {
	ArrayAttr bool
	Content   string
}

func (_faddc *CT_Workbook) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_faddc.Sheets = NewCT_Sheets()
	for _, _ggeceg := range start.Attr {
		if _ggeceg.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_faddc.ConformanceAttr.UnmarshalXMLAttr(_ggeceg)
			continue
		}
	}
_bgebd:
	for {
		_geecf, _gacce := d.Token()
		if _gacce != nil {
			return _gacce
		}
		switch _cefag := _geecf.(type) {
		case _b.StartElement:
			switch _cefag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}:
				_faddc.FileVersion = NewCT_FileVersion()
				if _dbgbcg := d.DecodeElement(_faddc.FileVersion, &_cefag); _dbgbcg != nil {
					return _dbgbcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}:
				_faddc.FileSharing = NewCT_FileSharing()
				if _adbdd := d.DecodeElement(_faddc.FileSharing, &_cefag); _adbdd != nil {
					return _adbdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}:
				_faddc.WorkbookPr = NewCT_WorkbookPr()
				if _efefff := d.DecodeElement(_faddc.WorkbookPr, &_cefag); _efefff != nil {
					return _efefff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}:
				_faddc.WorkbookProtection = NewCT_WorkbookProtection()
				if _aebfba := d.DecodeElement(_faddc.WorkbookProtection, &_cefag); _aebfba != nil {
					return _aebfba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}:
				_faddc.BookViews = NewCT_BookViews()
				if _dcdca := d.DecodeElement(_faddc.BookViews, &_cefag); _dcdca != nil {
					return _dcdca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}:
				if _eeedd := d.DecodeElement(_faddc.Sheets, &_cefag); _eeedd != nil {
					return _eeedd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}:
				_faddc.FunctionGroups = NewCT_FunctionGroups()
				if _acabbd := d.DecodeElement(_faddc.FunctionGroups, &_cefag); _acabbd != nil {
					return _acabbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}:
				_faddc.ExternalReferences = NewCT_ExternalReferences()
				if _aagdfb := d.DecodeElement(_faddc.ExternalReferences, &_cefag); _aagdfb != nil {
					return _aagdfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}:
				_faddc.DefinedNames = NewCT_DefinedNames()
				if _edcagg := d.DecodeElement(_faddc.DefinedNames, &_cefag); _edcagg != nil {
					return _edcagg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}:
				_faddc.CalcPr = NewCT_CalcPr()
				if _bdfcdf := d.DecodeElement(_faddc.CalcPr, &_cefag); _bdfcdf != nil {
					return _bdfcdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}:
				_faddc.OleSize = NewCT_OleSize()
				if _ggeedb := d.DecodeElement(_faddc.OleSize, &_cefag); _ggeedb != nil {
					return _ggeedb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}:
				_faddc.CustomWorkbookViews = NewCT_CustomWorkbookViews()
				if _fggbe := d.DecodeElement(_faddc.CustomWorkbookViews, &_cefag); _fggbe != nil {
					return _fggbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}:
				_faddc.PivotCaches = NewCT_PivotCaches()
				if _bfbad := d.DecodeElement(_faddc.PivotCaches, &_cefag); _bfbad != nil {
					return _bfbad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}:
				_faddc.SmartTagPr = NewCT_SmartTagPr()
				if _bdabb := d.DecodeElement(_faddc.SmartTagPr, &_cefag); _bdabb != nil {
					return _bdabb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}:
				_faddc.SmartTagTypes = NewCT_SmartTagTypes()
				if _bgdde := d.DecodeElement(_faddc.SmartTagTypes, &_cefag); _bgdde != nil {
					return _bgdde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}:
				_faddc.WebPublishing = NewCT_WebPublishing()
				if _gdgdb := d.DecodeElement(_faddc.WebPublishing, &_cefag); _gdgdb != nil {
					return _gdgdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}:
				_dgbbc := NewCT_FileRecoveryPr()
				if _dagdbd := d.DecodeElement(_dgbbc, &_cefag); _dagdbd != nil {
					return _dagdbd
				}
				_faddc.FileRecoveryPr = append(_faddc.FileRecoveryPr, _dgbbc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}:
				_faddc.WebPublishObjects = NewCT_WebPublishObjects()
				if _dcdef := d.DecodeElement(_faddc.WebPublishObjects, &_cefag); _dcdef != nil {
					return _dcdef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_faddc.ExtLst = NewCT_ExtensionList()
				if _bgaeac := d.DecodeElement(_faddc.ExtLst, &_cefag); _bgaeac != nil {
					return _bgaeac
				}
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0020\u0025\u0076", _cefag.Name)
				if _dafbe := d.Skip(); _dafbe != nil {
					return _dafbe
				}
			}
		case _b.EndElement:
			break _bgebd
		case _b.CharData:
		}
	}
	return nil
}

func (_gffg *CT_ControlPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gffg.Anchor = NewCT_ObjectAnchor()
	for _, _bgdfb := range start.Attr {
		if _bgdfb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bgdfb.Name.Local == "\u0069\u0064" || _bgdfb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bgdfb.Name.Local == "\u0069\u0064" {
			_fbdcc, _faaff := _bgdfb.Value, error(nil)
			if _faaff != nil {
				return _faaff
			}
			_gffg.IdAttr = &_fbdcc
			continue
		}
		if _bgdfb.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074" {
			_dfaa, _fdafa := _eb.ParseBool(_bgdfb.Value)
			if _fdafa != nil {
				return _fdafa
			}
			_gffg.AutoPictAttr = &_dfaa
			continue
		}
		if _bgdfb.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_bege, _bceg := _bgdfb.Value, error(nil)
			if _bceg != nil {
				return _bceg
			}
			_gffg.MacroAttr = &_bege
			continue
		}
		if _bgdfb.Name.Local == "\u0070\u0072\u0069n\u0074" {
			_cggg, _fgfc := _eb.ParseBool(_bgdfb.Value)
			if _fgfc != nil {
				return _fgfc
			}
			_gffg.PrintAttr = &_cggg
			continue
		}
		if _bgdfb.Name.Local == "\u0072\u0065\u0063a\u006c\u0063\u0041\u006c\u0077\u0061\u0079\u0073" {
			_efbfd, _cedf := _eb.ParseBool(_bgdfb.Value)
			if _cedf != nil {
				return _cedf
			}
			_gffg.RecalcAlwaysAttr = &_efbfd
			continue
		}
		if _bgdfb.Name.Local == "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074" {
			_beee, _dfbgg := _eb.ParseBool(_bgdfb.Value)
			if _dfbgg != nil {
				return _dfbgg
			}
			_gffg.UiObjectAttr = &_beee
			continue
		}
		if _bgdfb.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c" {
			_gfebb, _bfbf := _eb.ParseBool(_bgdfb.Value)
			if _bfbf != nil {
				return _bfbf
			}
			_gffg.AutoFillAttr = &_gfebb
			continue
		}
		if _bgdfb.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065" {
			_ebde, _faeb := _eb.ParseBool(_bgdfb.Value)
			if _faeb != nil {
				return _faeb
			}
			_gffg.AutoLineAttr = &_ebde
			continue
		}
		if _bgdfb.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_eafcd, _gfad := _eb.ParseBool(_bgdfb.Value)
			if _gfad != nil {
				return _gfad
			}
			_gffg.LockedAttr = &_eafcd
			continue
		}
		if _bgdfb.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064" {
			_dfad, _ceaa := _eb.ParseBool(_bgdfb.Value)
			if _ceaa != nil {
				return _ceaa
			}
			_gffg.DisabledAttr = &_dfad
			continue
		}
		if _bgdfb.Name.Local == "\u0061l\u0074\u0054\u0065\u0078\u0074" {
			_dfea, _ccea := _bgdfb.Value, error(nil)
			if _ccea != nil {
				return _ccea
			}
			_gffg.AltTextAttr = &_dfea
			continue
		}
		if _bgdfb.Name.Local == "\u006c\u0069\u006e\u006b\u0065\u0064\u0043\u0065\u006c\u006c" {
			_deac, _cefc := _bgdfb.Value, error(nil)
			if _cefc != nil {
				return _cefc
			}
			_gffg.LinkedCellAttr = &_deac
			continue
		}
		if _bgdfb.Name.Local == "\u006c\u0069\u0073\u0074\u0046\u0069\u006c\u006c\u0052\u0061\u006e\u0067\u0065" {
			_beaf, _ebbd := _bgdfb.Value, error(nil)
			if _ebbd != nil {
				return _ebbd
			}
			_gffg.ListFillRangeAttr = &_beaf
			continue
		}
		if _bgdfb.Name.Local == "\u0063\u0066" {
			_ebfag, _bdbfg := _bgdfb.Value, error(nil)
			if _bdbfg != nil {
				return _bdbfg
			}
			_gffg.CfAttr = &_ebfag
			continue
		}
		if _bgdfb.Name.Local == "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065" {
			_geag, _fdac := _eb.ParseBool(_bgdfb.Value)
			if _fdac != nil {
				return _fdac
			}
			_gffg.DefaultSizeAttr = &_geag
			continue
		}
	}
_dfge:
	for {
		_ebga, _befd := d.Token()
		if _befd != nil {
			return _befd
		}
		switch _bfgf := _ebga.(type) {
		case _b.StartElement:
			switch _bfgf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _bgbgc := d.DecodeElement(_gffg.Anchor, &_bfgf); _bgbgc != nil {
					return _bgbgc
				}
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006et\u0072\u006f\u006c\u0050\u0072\u0020\u0025\u0076", _bfgf.Name)
				if _aabad := d.Skip(); _aabad != nil {
					return _aabad
				}
			}
		case _b.EndElement:
			break _dfge
		case _b.CharData:
		}
	}
	return nil
}

func (_faaef *CT_XmlCellPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_faaef.XmlPr = NewCT_XmlPr()
	for _, _dcaba := range start.Attr {
		if _dcaba.Name.Local == "\u0069\u0064" {
			_babafd, _gadga := _eb.ParseUint(_dcaba.Value, 10, 32)
			if _gadga != nil {
				return _gadga
			}
			_faaef.IdAttr = uint32(_babafd)
			continue
		}
		if _dcaba.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_aaegd, _aeacga := _dcaba.Value, error(nil)
			if _aeacga != nil {
				return _aeacga
			}
			_faaef.UniqueNameAttr = &_aaegd
			continue
		}
	}
_dbfce:
	for {
		_bfegf, _egccb := d.Token()
		if _egccb != nil {
			return _egccb
		}
		switch _efdead := _bfegf.(type) {
		case _b.StartElement:
			switch _efdead.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u006d\u006cP\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u006d\u006cP\u0072"}:
				if _geffd := d.DecodeElement(_faaef.XmlPr, &_efdead); _geffd != nil {
					return _geffd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_faaef.ExtLst = NewCT_ExtensionList()
				if _eeegb := d.DecodeElement(_faaef.ExtLst, &_efdead); _eeegb != nil {
					return _eeegb
				}
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_X\u006d\u006cC\u0065\u006c\u006c\u0050\u0072\u0020\u0025\u0076", _efdead.Name)
				if _bfffg := d.Skip(); _bfffg != nil {
					return _bfffg
				}
			}
		case _b.EndElement:
			break _dbfce
		case _b.CharData:
		}
	}
	return nil
}

func (_cebe *CT_ObjectPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cebe.Anchor = NewCT_ObjectAnchor()
	for _, _ddaef := range start.Attr {
		if _ddaef.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ddaef.Name.Local == "\u0069\u0064" || _ddaef.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ddaef.Name.Local == "\u0069\u0064" {
			_bbdeb, _ebddc := _ddaef.Value, error(nil)
			if _ebddc != nil {
				return _ebddc
			}
			_cebe.IdAttr = &_bbdeb
			continue
		}
		if _ddaef.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065" {
			_cbddf, _cgadd := _eb.ParseBool(_ddaef.Value)
			if _cgadd != nil {
				return _cgadd
			}
			_cebe.AutoLineAttr = &_cbddf
			continue
		}
		if _ddaef.Name.Local == "\u0070\u0072\u0069n\u0074" {
			_gcaab, _bdcf := _eb.ParseBool(_ddaef.Value)
			if _bdcf != nil {
				return _bdcf
			}
			_cebe.PrintAttr = &_gcaab
			continue
		}
		if _ddaef.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064" {
			_cffeb, _bccdg := _eb.ParseBool(_ddaef.Value)
			if _bccdg != nil {
				return _bccdg
			}
			_cebe.DisabledAttr = &_cffeb
			continue
		}
		if _ddaef.Name.Local == "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074" {
			_aaebb, _fadec := _eb.ParseBool(_ddaef.Value)
			if _fadec != nil {
				return _fadec
			}
			_cebe.UiObjectAttr = &_aaebb
			continue
		}
		if _ddaef.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c" {
			_edcea, _fgcbf := _eb.ParseBool(_ddaef.Value)
			if _fgcbf != nil {
				return _fgcbf
			}
			_cebe.AutoFillAttr = &_edcea
			continue
		}
		if _ddaef.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_bbcggf, _eeceb := _eb.ParseBool(_ddaef.Value)
			if _eeceb != nil {
				return _eeceb
			}
			_cebe.LockedAttr = &_bbcggf
			continue
		}
		if _ddaef.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074" {
			_acgdb, _ffeda := _eb.ParseBool(_ddaef.Value)
			if _ffeda != nil {
				return _ffeda
			}
			_cebe.AutoPictAttr = &_acgdb
			continue
		}
		if _ddaef.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_egbff, _cacef := _ddaef.Value, error(nil)
			if _cacef != nil {
				return _cacef
			}
			_cebe.MacroAttr = &_egbff
			continue
		}
		if _ddaef.Name.Local == "\u0061l\u0074\u0054\u0065\u0078\u0074" {
			_fgfcge, _adgde := _ddaef.Value, error(nil)
			if _adgde != nil {
				return _adgde
			}
			_cebe.AltTextAttr = &_fgfcge
			continue
		}
		if _ddaef.Name.Local == "\u0064\u0064\u0065" {
			_eafebd, _ddgfb := _eb.ParseBool(_ddaef.Value)
			if _ddgfb != nil {
				return _ddgfb
			}
			_cebe.DdeAttr = &_eafebd
			continue
		}
		if _ddaef.Name.Local == "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065" {
			_cbacf, _faeea := _eb.ParseBool(_ddaef.Value)
			if _faeea != nil {
				return _faeea
			}
			_cebe.DefaultSizeAttr = &_cbacf
			continue
		}
	}
_gbddf:
	for {
		_gdfdgd, _gcacc := d.Token()
		if _gcacc != nil {
			return _gcacc
		}
		switch _deabb := _gdfdgd.(type) {
		case _b.StartElement:
			switch _deabb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _fcbc := d.DecodeElement(_cebe.Anchor, &_deabb); _fcbc != nil {
					return _fcbc
				}
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0050\u0072\u0020\u0025\u0076", _deabb.Name)
				if _eafce := d.Skip(); _eafce != nil {
					return _eafce
				}
			}
		case _b.EndElement:
			break _gbddf
		case _b.CharData:
		}
	}
	return nil
}

func (_adcdf *CT_CalculatedItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _adcdf.FieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_adcdf.FieldAttr)})
	}
	if _adcdf.FormulaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, Value: _ec.Sprintf("\u0025\u0076", *_adcdf.FormulaAttr)})
	}
	e.EncodeToken(start)
	_cddgg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_adcdf.PivotArea, _cddgg)
	if _adcdf.ExtLst != nil {
		_egeb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_adcdf.ExtLst, _egeb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gecdba *ST_CalcMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbega, _febbf := d.Token()
	if _febbf != nil {
		return _febbf
	}
	if _gffgf, _gdbfd := _dbega.(_b.EndElement); _gdbfd && _gffgf.Name == start.Name {
		*_gecdba = 1
		return nil
	}
	if _cbfaa, _gaccdg := _dbega.(_b.CharData); !_gaccdg {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbega)
	} else {
		switch string(_cbfaa) {
		case "":
			*_gecdba = 0
		case "\u006d\u0061\u006e\u0075\u0061\u006c":
			*_gecdba = 1
		case "\u0061\u0075\u0074\u006f":
			*_gecdba = 2
		case "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065":
			*_gecdba = 3
		}
	}
	_dbega, _febbf = d.Token()
	if _febbf != nil {
		return _febbf
	}
	if _gdefe, _cbeda := _dbega.(_b.EndElement); _cbeda && _gdefe.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbega)
}

type CT_PageSetUpPr struct {

	// Show Auto Page Breaks
	AutoPageBreaksAttr *bool

	// Fit To Page
	FitToPageAttr *bool
}

func (_eaaafa *CT_SheetProtection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _decbe := range start.Attr {
		if _decbe.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074\u0052\u006f\u0077\u0073" {
			_ddfgf, _dgcda := _eb.ParseBool(_decbe.Value)
			if _dgcda != nil {
				return _dgcda
			}
			_eaaafa.FormatRowsAttr = &_ddfgf
			continue
		}
		if _decbe.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_gbfcc, _baggd := _eb.ParseBool(_decbe.Value)
			if _baggd != nil {
				return _baggd
			}
			_eaaafa.InsertColumnsAttr = &_gbfcc
			continue
		}
		if _decbe.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_ddfde, _fdbda := _decbe.Value, error(nil)
			if _fdbda != nil {
				return _fdbda
			}
			_eaaafa.AlgorithmNameAttr = &_ddfde
			continue
		}
		if _decbe.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077\u0073" {
			_daade, _ebaee := _eb.ParseBool(_decbe.Value)
			if _ebaee != nil {
				return _ebaee
			}
			_eaaafa.InsertRowsAttr = &_daade
			continue
		}
		if _decbe.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_gfcbdf, _aeggc := _decbe.Value, error(nil)
			if _aeggc != nil {
				return _aeggc
			}
			_eaaafa.SaltValueAttr = &_gfcbdf
			continue
		}
		if _decbe.Name.Local == "\u0069\u006es\u0065\u0072\u0074H\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073" {
			_cdbge, _eedce := _eb.ParseBool(_decbe.Value)
			if _eedce != nil {
				return _eedce
			}
			_eaaafa.InsertHyperlinksAttr = &_cdbge
			continue
		}
		if _decbe.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_fdafb, _fgagd := _eb.ParseBool(_decbe.Value)
			if _fgagd != nil {
				return _fgagd
			}
			_eaaafa.SheetAttr = &_fdafb
			continue
		}
		if _decbe.Name.Local == "\u0064\u0065\u006c\u0065\u0074\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_dfddf, _cdcga := _eb.ParseBool(_decbe.Value)
			if _cdcga != nil {
				return _cdcga
			}
			_eaaafa.DeleteColumnsAttr = &_dfddf
			continue
		}
		if _decbe.Name.Local == "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs" {
			_dffga, _abgdfe := _eb.ParseBool(_decbe.Value)
			if _abgdfe != nil {
				return _abgdfe
			}
			_eaaafa.ScenariosAttr = &_dffga
			continue
		}
		if _decbe.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_fddedc, _bffed := _eb.ParseBool(_decbe.Value)
			if _bffed != nil {
				return _bffed
			}
			_eaaafa.FormatColumnsAttr = &_fddedc
			continue
		}
		if _decbe.Name.Local == "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_bedeg, _bccaad := _decbe.Value, error(nil)
			if _bccaad != nil {
				return _bccaad
			}
			_eaaafa.PasswordAttr = &_bedeg
			continue
		}
		if _decbe.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_gaffac, _afgab := _decbe.Value, error(nil)
			if _afgab != nil {
				return _afgab
			}
			_eaaafa.HashValueAttr = &_gaffac
			continue
		}
		if _decbe.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_agcgb, _ggbfd := _eb.ParseUint(_decbe.Value, 10, 32)
			if _ggbfd != nil {
				return _ggbfd
			}
			_ffddg := uint32(_agcgb)
			_eaaafa.SpinCountAttr = &_ffddg
			continue
		}
		if _decbe.Name.Local == "\u006fb\u006a\u0065\u0063\u0074\u0073" {
			_fgead, _gegee := _eb.ParseBool(_decbe.Value)
			if _gegee != nil {
				return _gegee
			}
			_eaaafa.ObjectsAttr = &_fgead
			continue
		}
		if _decbe.Name.Local == "f\u006f\u0072\u006d\u0061\u0074\u0043\u0065\u006c\u006c\u0073" {
			_baaef, _cbffb := _eb.ParseBool(_decbe.Value)
			if _cbffb != nil {
				return _cbffb
			}
			_eaaafa.FormatCellsAttr = &_baaef
			continue
		}
		if _decbe.Name.Local == "\u0064\u0065\u006c\u0065\u0074\u0065\u0052\u006f\u0077\u0073" {
			_bdgbbg, _bccec := _eb.ParseBool(_decbe.Value)
			if _bccec != nil {
				return _bccec
			}
			_eaaafa.DeleteRowsAttr = &_bdgbbg
			continue
		}
		if _decbe.Name.Local == "\u0073\u0065\u006c\u0065\u0063\u0074\u004c\u006f\u0063\u006b\u0065\u0064C\u0065\u006c\u006c\u0073" {
			_aaeee, _gddda := _eb.ParseBool(_decbe.Value)
			if _gddda != nil {
				return _gddda
			}
			_eaaafa.SelectLockedCellsAttr = &_aaeee
			continue
		}
		if _decbe.Name.Local == "\u0073\u006f\u0072\u0074" {
			_bgddab, _ccffb := _eb.ParseBool(_decbe.Value)
			if _ccffb != nil {
				return _ccffb
			}
			_eaaafa.SortAttr = &_bgddab
			continue
		}
		if _decbe.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072" {
			_aagbc, _aceeg := _eb.ParseBool(_decbe.Value)
			if _aceeg != nil {
				return _aceeg
			}
			_eaaafa.AutoFilterAttr = &_aagbc
			continue
		}
		if _decbe.Name.Local == "p\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0073" {
			_fdbad, _dbggea := _eb.ParseBool(_decbe.Value)
			if _dbggea != nil {
				return _dbggea
			}
			_eaaafa.PivotTablesAttr = &_fdbad
			continue
		}
		if _decbe.Name.Local == "\u0073\u0065\u006c\u0065ct\u0055\u006e\u006c\u006f\u0063\u006b\u0065\u0064\u0043\u0065\u006c\u006c\u0073" {
			_bcbccf, _daaea := _eb.ParseBool(_decbe.Value)
			if _daaea != nil {
				return _daaea
			}
			_eaaafa.SelectUnlockedCellsAttr = &_bcbccf
			continue
		}
	}
	for {
		_dfdgc, _egcec := d.Token()
		if _egcec != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0053\u0068\u0065\u0065\u0074\u0050\u0072o\u0074\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _egcec)
		}
		if _fbfadg, _faegba := _dfdgc.(_b.EndElement); _faegba && _fbfadg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_CalcCell struct {

	// Cell Reference
	RAttr   *string
	RefAttr *string

	// Sheet Id
	IAttr *int32

	// Child Chain
	SAttr *bool

	// New Dependency Level
	LAttr *bool

	// New Thread
	TAttr *bool

	// Array
	AAttr *bool
}

type CT_IgnoredErrors struct {

	// Ignored Error
	IgnoredError []*CT_IgnoredError
	ExtLst       *CT_ExtensionList
}

type CT_MetadataType struct {

	// Metadata Type Name
	NameAttr string

	// Minimum Supported Version
	MinSupportedVersionAttr uint32

	// Metadata Ghost Row
	GhostRowAttr *bool

	// Metadata Ghost Column
	GhostColAttr *bool

	// Metadata Edit
	EditAttr *bool

	// Metadata Cell Value Delete
	DeleteAttr *bool

	// Metadata Copy
	CopyAttr *bool

	// Metadata Paste All
	PasteAllAttr *bool

	// Metadata Paste Formulas
	PasteFormulasAttr *bool

	// Metadata Paste Special Values
	PasteValuesAttr *bool

	// Metadata Paste Formats
	PasteFormatsAttr *bool

	// Metadata Paste Comments
	PasteCommentsAttr *bool

	// Metadata Paste Data Validation
	PasteDataValidationAttr *bool

	// Metadata Paste Borders
	PasteBordersAttr *bool

	// Metadata Paste Column Widths
	PasteColWidthsAttr *bool

	// Metadata Paste Number Formats
	PasteNumberFormatsAttr *bool

	// Metadata Merge
	MergeAttr *bool

	// Meatadata Split First
	SplitFirstAttr *bool

	// Metadata Split All
	SplitAllAttr *bool

	// Metadata Insert Delete
	RowColShiftAttr *bool

	// Metadata Clear All
	ClearAllAttr *bool

	// Metadata Clear Formats
	ClearFormatsAttr *bool

	// Metadata Clear Contents
	ClearContentsAttr *bool

	// Metadata Clear Comments
	ClearCommentsAttr *bool

	// Metadata Formula Assignment
	AssignAttr *bool

	// Metadata Coercion
	CoerceAttr *bool

	// Adjust Metadata
	AdjustAttr *bool

	// Cell Metadata
	CellMetaAttr *bool
}

func NewCT_AutoFilter() *CT_AutoFilter { _adg := &CT_AutoFilter{}; return _adg }

func (_adgcc *MapInfo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_adgcc.CT_MapInfo = *NewCT_MapInfo()
	for _, _effff := range start.Attr {
		if _effff.Name.Local == "\u0053\u0065\u006c\u0065ct\u0069\u006f\u006e\u004e\u0061\u006d\u0065\u0073\u0070\u0061\u0063\u0065\u0073" {
			_fecff, _bdece := _effff.Value, error(nil)
			if _bdece != nil {
				return _bdece
			}
			_adgcc.SelectionNamespacesAttr = _fecff
			continue
		}
	}
_cfaac:
	for {
		_gbgdgfg, _bebgb := d.Token()
		if _bebgb != nil {
			return _bebgb
		}
		switch _dgbdg := _gbgdgfg.(type) {
		case _b.StartElement:
			switch _dgbdg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}:
				_caacde := NewCT_Schema()
				if _fedcea := d.DecodeElement(_caacde, &_dgbdg); _fedcea != nil {
					return _fedcea
				}
				_adgcc.Schema = append(_adgcc.Schema, _caacde)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}:
				_bgcafd := NewCT_Map()
				if _dgggf := d.DecodeElement(_bgcafd, &_dgbdg); _dgggf != nil {
					return _dgggf
				}
				_adgcc.Map = append(_adgcc.Map, _bgcafd)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004da\u0070\u0049\u006e\u0066\u006f\u0020\u0025\u0076", _dgbdg.Name)
				if _bdebd := d.Skip(); _bdebd != nil {
					return _bdebd
				}
			}
		case _b.EndElement:
			break _cfaac
		case _b.CharData:
		}
	}
	return nil
}

func (_ccdff *CT_Field) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfbca := range start.Attr {
		if _gfbca.Name.Local == "\u0078" {
			_ageba, _bcffg := _eb.ParseInt(_gfbca.Value, 10, 32)
			if _bcffg != nil {
				return _bcffg
			}
			_ccdff.XAttr = int32(_ageba)
			continue
		}
	}
	for {
		_baca, _aaca := d.Token()
		if _aaca != nil {
			return _ec.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0069\u0065\u006c\u0064: \u0025\u0073", _aaca)
		}
		if _cedfg, _feeb := _baca.(_b.EndElement); _feeb && _cedfg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_aadd *CT_HierarchyUsage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eacgd := range start.Attr {
		if _eacgd.Name.Local == "\u0068\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065" {
			_bffbg, _deeag := _eb.ParseInt(_eacgd.Value, 10, 32)
			if _deeag != nil {
				return _deeag
			}
			_aadd.HierarchyUsageAttr = int32(_bffbg)
			continue
		}
	}
	for {
		_edac, _aabdg := d.Token()
		if _aabdg != nil {
			return _ec.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079\u0055\u0073\u0061\u0067\u0065: \u0025\u0073", _aabdg)
		}
		if _eddef, _cegeg := _edac.(_b.EndElement); _cegeg && _eddef.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_Parameters() *CT_Parameters { _bacdg := &CT_Parameters{}; return _bacdg }

// ValidateWithPath validates the CT_PageField and its children, prefixing error messages with path
func (_cbacdf *CT_PageField) ValidateWithPath(path string) error {
	if _cbacdf.ExtLst != nil {
		if _agcce := _cbacdf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _agcce != nil {
			return _agcce
		}
	}
	return nil
}

type CT_ObjectPr struct {

	// Locked Flag
	LockedAttr *bool

	// Default Size Flag
	DefaultSizeAttr *bool

	// Print Flag
	PrintAttr *bool

	// Disabled Flag
	DisabledAttr *bool

	// UI Object Flag
	UiObjectAttr *bool

	// Automatic Fill Flag
	AutoFillAttr *bool

	// Automatic Line Flag
	AutoLineAttr *bool

	// Automatic Size Flag
	AutoPictAttr *bool

	// Custom Function
	MacroAttr *string

	// Alternative Text
	AltTextAttr *string

	// Dynamic Data Exchange Flag
	DdeAttr *bool
	IdAttr  *string
	Anchor  *CT_ObjectAnchor
}

// Validate validates the CT_CacheHierarchies and its children
func (_fgf *CT_CacheHierarchies) Validate() error {
	return _fgf.ValidateWithPath("\u0043\u0054\u005f\u0043ac\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073")
}

func (_ggbg *CT_Fills) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggbg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ggbg.CountAttr)})
	}
	e.EncodeToken(start)
	if _ggbg.Fill != nil {
		_affgfb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u006c"}}
		for _, _aacgd := range _ggbg.Fill {
			e.EncodeElement(_aacgd, _affgfb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_CalcModeUnset       ST_CalcMode = 0
	ST_CalcModeManual      ST_CalcMode = 1
	ST_CalcModeAuto        ST_CalcMode = 2
	ST_CalcModeAutoNoTable ST_CalcMode = 3
)

// ValidateWithPath validates the CT_SmartTagTypes and its children, prefixing error messages with path
func (_fccbe *CT_SmartTagTypes) ValidateWithPath(path string) error {
	for _fgacd, _efddd := range _fccbe.SmartTagType {
		if _bcgdcg := _efddd.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0053ma\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u005b\u0025\u0064\u005d", path, _fgacd)); _bcgdcg != nil {
			return _bcgdcg
		}
	}
	return nil
}

func (_dfedge ST_ConditionalFormattingOperator) String() string {
	switch _dfedge {
	case 0:
		return ""
	case 1:
		return "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 2:
		return "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 3:
		return "\u0065\u0071\u0075a\u006c"
	case 4:
		return "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 5:
		return "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case 6:
		return "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case 7:
		return "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case 8:
		return "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 9:
		return "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case 10:
		return "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case 11:
		return "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case 12:
		return "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	}
	return ""
}

func (_ebegf *CT_DataRefs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebegf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ebegf.CountAttr)})
	}
	e.EncodeToken(start)
	if _ebegf.DataRef != nil {
		_fddb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0052\u0065\u0066"}}
		for _, _bbea := range _ebegf.DataRef {
			e.EncodeElement(_bbea, _fddb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GroupMember and its children
func (_ccgb *CT_GroupMember) Validate() error {
	return _ccgb.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004de\u006d\u0062\u0065\u0072")
}

func NewCT_DefinedNames() *CT_DefinedNames { _efgg := &CT_DefinedNames{}; return _efgg }

func (_bedfc *CT_Worksheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bedfc.SheetData = NewCT_SheetData()
_geede:
	for {
		_cfdga, _ddffgg := d.Token()
		if _ddffgg != nil {
			return _ddffgg
		}
		switch _fcadc := _cfdga.(type) {
		case _b.StartElement:
			switch _fcadc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_bedfc.SheetPr = NewCT_SheetPr()
				if _dfgeca := d.DecodeElement(_bedfc.SheetPr, &_fcadc); _dfgeca != nil {
					return _dfgeca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_bedfc.Dimension = NewCT_SheetDimension()
				if _ebggfc := d.DecodeElement(_bedfc.Dimension, &_fcadc); _ebggfc != nil {
					return _ebggfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_bedfc.SheetViews = NewCT_SheetViews()
				if _ffccf := d.DecodeElement(_bedfc.SheetViews, &_fcadc); _ffccf != nil {
					return _ffccf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_bedfc.SheetFormatPr = NewCT_SheetFormatPr()
				if _caagg := d.DecodeElement(_bedfc.SheetFormatPr, &_fcadc); _caagg != nil {
					return _caagg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}:
				_dfbeg := NewCT_Cols()
				if _efdcb := d.DecodeElement(_dfbeg, &_fcadc); _efdcb != nil {
					return _efdcb
				}
				_bedfc.Cols = append(_bedfc.Cols, _dfbeg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				if _egfgfe := d.DecodeElement(_bedfc.SheetData, &_fcadc); _egfgfe != nil {
					return _egfgfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}:
				_bedfc.SheetCalcPr = NewCT_SheetCalcPr()
				if _afgae := d.DecodeElement(_bedfc.SheetCalcPr, &_fcadc); _afgae != nil {
					return _afgae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_bedfc.SheetProtection = NewCT_SheetProtection()
				if _gbfef := d.DecodeElement(_bedfc.SheetProtection, &_fcadc); _gbfef != nil {
					return _gbfef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}:
				_bedfc.ProtectedRanges = NewCT_ProtectedRanges()
				if _cbgg := d.DecodeElement(_bedfc.ProtectedRanges, &_fcadc); _cbgg != nil {
					return _cbgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}:
				_bedfc.Scenarios = NewCT_Scenarios()
				if _fdecd := d.DecodeElement(_bedfc.Scenarios, &_fcadc); _fdecd != nil {
					return _fdecd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_bedfc.AutoFilter = NewCT_AutoFilter()
				if _badfdf := d.DecodeElement(_bedfc.AutoFilter, &_fcadc); _badfdf != nil {
					return _badfdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_bedfc.SortState = NewCT_SortState()
				if _abfebb := d.DecodeElement(_bedfc.SortState, &_fcadc); _abfebb != nil {
					return _abfebb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}:
				_bedfc.DataConsolidate = NewCT_DataConsolidate()
				if _facgf := d.DecodeElement(_bedfc.DataConsolidate, &_fcadc); _facgf != nil {
					return _facgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_bedfc.CustomSheetViews = NewCT_CustomSheetViews()
				if _ddefbc := d.DecodeElement(_bedfc.CustomSheetViews, &_fcadc); _ddefbc != nil {
					return _ddefbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}:
				_bedfc.MergeCells = NewCT_MergeCells()
				if _fagaea := d.DecodeElement(_bedfc.MergeCells, &_fcadc); _fagaea != nil {
					return _fagaea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_bedfc.PhoneticPr = NewCT_PhoneticPr()
				if _dbaffe := d.DecodeElement(_bedfc.PhoneticPr, &_fcadc); _dbaffe != nil {
					return _dbaffe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}:
				_adecb := NewCT_ConditionalFormatting()
				if _gdgfd := d.DecodeElement(_adecb, &_fcadc); _gdgfd != nil {
					return _gdgfd
				}
				_bedfc.ConditionalFormatting = append(_bedfc.ConditionalFormatting, _adecb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}:
				_bedfc.DataValidations = NewCT_DataValidations()
				if _eeagaf := d.DecodeElement(_bedfc.DataValidations, &_fcadc); _eeagaf != nil {
					return _eeagaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}:
				_bedfc.Hyperlinks = NewCT_Hyperlinks()
				if _acbgab := d.DecodeElement(_bedfc.Hyperlinks, &_fcadc); _acbgab != nil {
					return _acbgab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_bedfc.PrintOptions = NewCT_PrintOptions()
				if _fgfadd := d.DecodeElement(_bedfc.PrintOptions, &_fcadc); _fgfadd != nil {
					return _fgfadd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_bedfc.PageMargins = NewCT_PageMargins()
				if _cdeae := d.DecodeElement(_bedfc.PageMargins, &_fcadc); _cdeae != nil {
					return _cdeae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_bedfc.PageSetup = NewCT_PageSetup()
				if _gfgbcc := d.DecodeElement(_bedfc.PageSetup, &_fcadc); _gfgbcc != nil {
					return _gfgbcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_bedfc.HeaderFooter = NewCT_HeaderFooter()
				if _bagbfd := d.DecodeElement(_bedfc.HeaderFooter, &_fcadc); _bagbfd != nil {
					return _bagbfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_bedfc.RowBreaks = NewCT_PageBreak()
				if _abfab := d.DecodeElement(_bedfc.RowBreaks, &_fcadc); _abfab != nil {
					return _abfab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_bedfc.ColBreaks = NewCT_PageBreak()
				if _cdgfb := d.DecodeElement(_bedfc.ColBreaks, &_fcadc); _cdgfb != nil {
					return _cdgfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}:
				_bedfc.CustomProperties = NewCT_CustomProperties()
				if _bfbcd := d.DecodeElement(_bedfc.CustomProperties, &_fcadc); _bfbcd != nil {
					return _bfbcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}:
				_bedfc.CellWatches = NewCT_CellWatches()
				if _cdbgf := d.DecodeElement(_bedfc.CellWatches, &_fcadc); _cdbgf != nil {
					return _cdbgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}:
				_bedfc.IgnoredErrors = NewCT_IgnoredErrors()
				if _gaabcc := d.DecodeElement(_bedfc.IgnoredErrors, &_fcadc); _gaabcc != nil {
					return _gaabcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_bedfc.SmartTags = NewCT_SmartTags()
				if _bafcdd := d.DecodeElement(_bedfc.SmartTags, &_fcadc); _bafcdd != nil {
					return _bafcdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_bedfc.Drawing = NewCT_Drawing()
				if _gbbca := d.DecodeElement(_bedfc.Drawing, &_fcadc); _gbbca != nil {
					return _gbbca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_bedfc.LegacyDrawing = NewCT_LegacyDrawing()
				if _fbdddc := d.DecodeElement(_bedfc.LegacyDrawing, &_fcadc); _fbdddc != nil {
					return _fbdddc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_bedfc.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _dggad := d.DecodeElement(_bedfc.LegacyDrawingHF, &_fcadc); _dggad != nil {
					return _dggad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_bedfc.DrawingHF = NewCT_DrawingHF()
				if _bbfcd := d.DecodeElement(_bedfc.DrawingHF, &_fcadc); _bbfcd != nil {
					return _bbfcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_bedfc.Picture = NewCT_SheetBackgroundPicture()
				if _adbga := d.DecodeElement(_bedfc.Picture, &_fcadc); _adbga != nil {
					return _adbga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_bedfc.OleObjects = NewCT_OleObjects()
				if _dfegb := d.DecodeElement(_bedfc.OleObjects, &_fcadc); _dfegb != nil {
					return _dfegb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_bedfc.Controls = NewCT_Controls()
				if _cacbaa := d.DecodeElement(_bedfc.Controls, &_fcadc); _cacbaa != nil {
					return _cacbaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_bedfc.WebPublishItems = NewCT_WebPublishItems()
				if _afccg := d.DecodeElement(_bedfc.WebPublishItems, &_fcadc); _afccg != nil {
					return _afccg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}:
				_bedfc.TableParts = NewCT_TableParts()
				if _fabbe := d.DecodeElement(_bedfc.TableParts, &_fcadc); _fabbe != nil {
					return _fabbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bedfc.ExtLst = NewCT_ExtensionList()
				if _decf := d.DecodeElement(_bedfc.ExtLst, &_fcadc); _decf != nil {
					return _decf
				}
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_W\u006f\u0072k\u0073\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _fcadc.Name)
				if _fedeg := d.Skip(); _fedeg != nil {
					return _fedeg
				}
			}
		case _b.EndElement:
			break _geede
		case _b.CharData:
		}
	}
	return nil
}

func (_eecdd ST_Qualifier) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gedaed := _b.Attr{}
	_gedaed.Name = name
	switch _eecdd {
	case ST_QualifierUnset:
		_gedaed.Value = ""
	case ST_QualifierDoubleQuote:
		_gedaed.Value = "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case ST_QualifierSingleQuote:
		_gedaed.Value = "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case ST_QualifierNone:
		_gedaed.Value = "\u006e\u006f\u006e\u0065"
	}
	return _gedaed, nil
}

func (_dfdea *CT_ExternalReference) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bgggf := range start.Attr {
		if _bgggf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bgggf.Name.Local == "\u0069\u0064" || _bgggf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bgggf.Name.Local == "\u0069\u0064" {
			_gfcac, _aecc := _bgggf.Value, error(nil)
			if _aecc != nil {
				return _aecc
			}
			_dfdea.IdAttr = _gfcac
			continue
		}
	}
	for {
		_dbdgd, _agcdf := d.Token()
		if _agcdf != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065r\u006ea\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u003a\u0020\u0025\u0073", _agcdf)
		}
		if _bagc, _gafg := _dbdgd.(_b.EndElement); _gafg && _bagc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_abcac ST_RevisionAction) Validate() error { return _abcac.ValidateWithPath("") }

func (_cafdcb ST_BorderStyle) Validate() error { return _cafdcb.ValidateWithPath("") }

// ValidateWithPath validates the CT_Cols and its children, prefixing error messages with path
func (_fagbe *CT_Cols) ValidateWithPath(path string) error {
	for _fbdba, _efba := range _fagbe.Col {
		if _fadc := _efba.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006c\u005b\u0025\u0064\u005d", path, _fbdba)); _fadc != nil {
			return _fadc
		}
	}
	return nil
}

func (_dcf *CT_CacheField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddg := range start.Attr {
		if _ddg.Name.Local == "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y" {
			_eedcd, _ffg := _eb.ParseInt(_ddg.Value, 10, 32)
			if _ffg != nil {
				return _ffg
			}
			_ebbg := int32(_eedcd)
			_dcf.HierarchyAttr = &_ebbg
			continue
		}
		if _ddg.Name.Local == "\u006c\u0065\u0076e\u006c" {
			_egc, _ebd := _eb.ParseUint(_ddg.Value, 10, 32)
			if _ebd != nil {
				return _ebd
			}
			_dcfd := uint32(_egc)
			_dcf.LevelAttr = &_dcfd
			continue
		}
		if _ddg.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_efe, _dee := _ddg.Value, error(nil)
			if _dee != nil {
				return _dee
			}
			_dcf.CaptionAttr = &_efe
			continue
		}
		if _ddg.Name.Local == "\u0064\u0061\u0074\u0061\u0062\u0061\u0073\u0065\u0046\u0069\u0065\u006c\u0064" {
			_bbdb, _dae := _eb.ParseBool(_ddg.Value)
			if _dae != nil {
				return _dae
			}
			_dcf.DatabaseFieldAttr = &_bbdb
			continue
		}
		if _ddg.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064" {
			_fee, _cba := _eb.ParseBool(_ddg.Value)
			if _cba != nil {
				return _cba
			}
			_dcf.ServerFieldAttr = &_fee
			continue
		}
		if _ddg.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_cbed, _cedb := _eb.ParseUint(_ddg.Value, 10, 32)
			if _cedb != nil {
				return _cedb
			}
			_acb := uint32(_cbed)
			_dcf.NumFmtIdAttr = &_acb
			continue
		}
		if _ddg.Name.Local == "\u0066o\u0072\u006d\u0075\u006c\u0061" {
			_bfff, _aef := _ddg.Value, error(nil)
			if _aef != nil {
				return _aef
			}
			_dcf.FormulaAttr = &_bfff
			continue
		}
		if _ddg.Name.Local == "\u0073q\u006c\u0054\u0079\u0070\u0065" {
			_cec, _gedb := _eb.ParseInt(_ddg.Value, 10, 32)
			if _gedb != nil {
				return _gedb
			}
			_cfag := int32(_cec)
			_dcf.SqlTypeAttr = &_cfag
			continue
		}
		if _ddg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ddgg, _acd := _ddg.Value, error(nil)
			if _acd != nil {
				return _acd
			}
			_dcf.NameAttr = _ddgg
			continue
		}
		if _ddg.Name.Local == "\u0070\u0072\u006fp\u0065\u0072\u0074\u0079\u004e\u0061\u006d\u0065" {
			_ddc, _dadf := _ddg.Value, error(nil)
			if _dadf != nil {
				return _dadf
			}
			_dcf.PropertyNameAttr = &_ddc
			continue
		}
		if _ddg.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004c\u0069\u0073\u0074" {
			_dgbc, _aaff := _eb.ParseBool(_ddg.Value)
			if _aaff != nil {
				return _aaff
			}
			_dcf.UniqueListAttr = &_dgbc
			continue
		}
		if _ddg.Name.Local == "\u006d\u0061\u0070p\u0069\u006e\u0067\u0043\u006f\u0075\u006e\u0074" {
			_gedba, _acff := _eb.ParseUint(_ddg.Value, 10, 32)
			if _acff != nil {
				return _acff
			}
			_dbee := uint32(_gedba)
			_dcf.MappingCountAttr = &_dbee
			continue
		}
		if _ddg.Name.Local == "\u006d\u0065\u006d\u0062er\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0046\u0069\u0065\u006c\u0064" {
			_gae, _fcf := _eb.ParseBool(_ddg.Value)
			if _fcf != nil {
				return _fcf
			}
			_dcf.MemberPropertyFieldAttr = &_gae
			continue
		}
	}
_fag:
	for {
		_ecd, _efcg := d.Token()
		if _efcg != nil {
			return _efcg
		}
		switch _cbc := _ecd.(type) {
		case _b.StartElement:
			switch _cbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0061\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0061\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}:
				_dcf.SharedItems = NewCT_SharedItems()
				if _edgg := d.DecodeElement(_dcf.SharedItems, &_cbc); _edgg != nil {
					return _edgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"}:
				_dcf.FieldGroup = NewCT_FieldGroup()
				if _cgb := d.DecodeElement(_dcf.FieldGroup, &_cbc); _cgb != nil {
					return _cgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u004da\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u004da\u0070"}:
				_gfbf := NewCT_X()
				if _fdga := d.DecodeElement(_gfbf, &_cbc); _fdga != nil {
					return _fdga
				}
				_dcf.MpMap = append(_dcf.MpMap, _gfbf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcf.ExtLst = NewCT_ExtensionList()
				if _aggcc := d.DecodeElement(_dcf.ExtLst, &_cbc); _aggcc != nil {
					return _aggcc
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043a\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064 \u0025\u0076", _cbc.Name)
				if _eecb := d.Skip(); _eecb != nil {
					return _eecb
				}
			}
		case _b.EndElement:
			break _fag
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Consolidation and its children, prefixing error messages with path
func (_cabfa *CT_Consolidation) ValidateWithPath(path string) error {
	if _cabfa.Pages != nil {
		if _ggce := _cabfa.Pages.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0073"); _ggce != nil {
			return _ggce
		}
	}
	if _gbbd := _cabfa.RangeSets.ValidateWithPath(path + "\u002f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073"); _gbbd != nil {
		return _gbbd
	}
	return nil
}

// Validate validates the CT_ReviewedRevisions and its children
func (_dgabf *CT_ReviewedRevisions) Validate() error {
	return _dgabf.ValidateWithPath("C\u0054_\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064R\u0065\u0076\u0069\u0073io\u006e\u0073")
}

// ValidateWithPath validates the CT_IconSet and its children, prefixing error messages with path
func (_cead *CT_IconSet) ValidateWithPath(path string) error {
	if _gcfeb := _cead.IconSetAttr.ValidateWithPath(path + "\u002f\u0049\u0063o\u006e\u0053\u0065\u0074\u0041\u0074\u0074\u0072"); _gcfeb != nil {
		return _gcfeb
	}
	for _accg, _caafa := range _cead.Cfvo {
		if _ceba := _caafa.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0043\u0066\u0076\u006f\u005b\u0025\u0064\u005d", path, _accg)); _ceba != nil {
			return _ceba
		}
	}
	return nil
}

func (_dbddb *CT_XmlCellPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _dbddb.IdAttr)})
	if _dbddb.UniqueNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_dbddb.UniqueNameAttr)})
	}
	e.EncodeToken(start)
	_aaeba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078\u006d\u006c\u0050\u0072"}}
	e.EncodeElement(_dbddb.XmlPr, _aaeba)
	if _dbddb.ExtLst != nil {
		_bccfe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dbddb.ExtLst, _bccfe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

type CT_PrintOptions struct {

	// Horizontal Centered
	HorizontalCenteredAttr *bool

	// Vertical Centered
	VerticalCenteredAttr *bool

	// Print Headings
	HeadingsAttr *bool

	// Print Grid Lines
	GridLinesAttr *bool

	// Grid Lines Set
	GridLinesSetAttr *bool
}

func (_aebgef *CT_WebPublishObject) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _aebgef.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0076I\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _aebgef.DivIdAttr)})
	if _aebgef.SourceObjectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_aebgef.SourceObjectAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _aebgef.DestinationFileAttr)})
	if _aebgef.TitleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_aebgef.TitleAttr)})
	}
	if _aebgef.AutoRepublishAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aebgef.AutoRepublishAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fbgda *CT_FutureMetadata) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddcd := range start.Attr {
		if _ddcd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dfdab, _deagfg := _ddcd.Value, error(nil)
			if _deagfg != nil {
				return _deagfg
			}
			_fbgda.NameAttr = _dfdab
			continue
		}
		if _ddcd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eefd, _dabefd := _eb.ParseUint(_ddcd.Value, 10, 32)
			if _dabefd != nil {
				return _dabefd
			}
			_dgedad := uint32(_eefd)
			_fbgda.CountAttr = &_dgedad
			continue
		}
	}
_edabb:
	for {
		_deaeb, _afcaa := d.Token()
		if _afcaa != nil {
			return _afcaa
		}
		switch _dcbb := _deaeb.(type) {
		case _b.StartElement:
			switch _dcbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}:
				_acfcf := NewCT_FutureMetadataBlock()
				if _efbe := d.DecodeElement(_acfcf, &_dcbb); _efbe != nil {
					return _efbe
				}
				_fbgda.Bk = append(_fbgda.Bk, _acfcf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbgda.ExtLst = NewCT_ExtensionList()
				if _gaaafe := d.DecodeElement(_fbgda.ExtLst, &_dcbb); _gaaafe != nil {
					return _gaaafe
				}
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0020\u0025\u0076", _dcbb.Name)
				if _dacbd := d.Skip(); _dacbd != nil {
					return _dacbd
				}
			}
		case _b.EndElement:
			break _edabb
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MetadataTypes and its children, prefixing error messages with path
func (_agbc *CT_MetadataTypes) ValidateWithPath(path string) error {
	for _dggdc, _bggba := range _agbc.MetadataType {
		if _fdbf := _bggba.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004det\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u005b\u0025\u0064\u005d", path, _dggdc)); _fdbf != nil {
			return _fdbf
		}
	}
	return nil
}

func (_gec *CT_Break) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgdb := range start.Attr {
		if _cgdb.Name.Local == "\u0069\u0064" {
			_cgad, _bca := _eb.ParseUint(_cgdb.Value, 10, 32)
			if _bca != nil {
				return _bca
			}
			_ebe := uint32(_cgad)
			_gec.IdAttr = &_ebe
			continue
		}
		if _cgdb.Name.Local == "\u006d\u0069\u006e" {
			_ebb, _eec := _eb.ParseUint(_cgdb.Value, 10, 32)
			if _eec != nil {
				return _eec
			}
			_dedb := uint32(_ebb)
			_gec.MinAttr = &_dedb
			continue
		}
		if _cgdb.Name.Local == "\u006d\u0061\u0078" {
			_cgfc, _bac := _eb.ParseUint(_cgdb.Value, 10, 32)
			if _bac != nil {
				return _bac
			}
			_cdg := uint32(_cgfc)
			_gec.MaxAttr = &_cdg
			continue
		}
		if _cgdb.Name.Local == "\u006d\u0061\u006e" {
			_ega, _feda := _eb.ParseBool(_cgdb.Value)
			if _feda != nil {
				return _feda
			}
			_gec.ManAttr = &_ega
			continue
		}
		if _cgdb.Name.Local == "\u0070\u0074" {
			_gbdg, _afb := _eb.ParseBool(_cgdb.Value)
			if _afb != nil {
				return _afb
			}
			_gec.PtAttr = &_gbdg
			continue
		}
	}
	for {
		_adga, _bdg := d.Token()
		if _bdg != nil {
			return _ec.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fB\u0072\u0065\u0061\u006b: \u0025\u0073", _bdg)
		}
		if _cfa, _cdge := _adga.(_b.EndElement); _cdge && _cfa.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_CustomFilters struct {

	// And
	AndAttr *bool

	// Custom Filter Criteria
	CustomFilter []*CT_CustomFilter
}

func NewCT_IconFilter() *CT_IconFilter {
	_ddfge := &CT_IconFilter{}
	_ddfge.IconSetAttr = ST_IconSetType(1)
	return _ddfge
}

func (_baece ST_MdxKPIProperty) Validate() error { return _baece.ValidateWithPath("") }

func (_fdef *CT_CalculatedItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fdef.PivotArea = NewCT_PivotArea()
	for _, _cgda := range start.Attr {
		if _cgda.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_eabf, _dbcc := _eb.ParseUint(_cgda.Value, 10, 32)
			if _dbcc != nil {
				return _dbcc
			}
			_bfge := uint32(_eabf)
			_fdef.FieldAttr = &_bfge
			continue
		}
		if _cgda.Name.Local == "\u0066o\u0072\u006d\u0075\u006c\u0061" {
			_acbg, _acc := _cgda.Value, error(nil)
			if _acc != nil {
				return _acc
			}
			_fdef.FormulaAttr = &_acbg
			continue
		}
	}
_ebda:
	for {
		_dede, _dbge := d.Token()
		if _dbge != nil {
			return _dbge
		}
		switch _agec := _dede.(type) {
		case _b.StartElement:
			switch _agec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _dbae := d.DecodeElement(_fdef.PivotArea, &_agec); _dbae != nil {
					return _dbae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdef.ExtLst = NewCT_ExtensionList()
				if _geeb := d.DecodeElement(_fdef.ExtLst, &_agec); _geeb != nil {
					return _geeb
				}
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0020\u0025\u0076", _agec.Name)
				if _bbgbc := d.Skip(); _bbgbc != nil {
					return _bbgbc
				}
			}
		case _b.EndElement:
			break _ebda
		case _b.CharData:
		}
	}
	return nil
}

func (_caffe *ST_BorderStyle) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_caffe = 0
	case "\u006e\u006f\u006e\u0065":
		*_caffe = 1
	case "\u0074\u0068\u0069\u006e":
		*_caffe = 2
	case "\u006d\u0065\u0064\u0069\u0075\u006d":
		*_caffe = 3
	case "\u0064\u0061\u0073\u0068\u0065\u0064":
		*_caffe = 4
	case "\u0064\u006f\u0074\u0074\u0065\u0064":
		*_caffe = 5
	case "\u0074\u0068\u0069c\u006b":
		*_caffe = 6
	case "\u0064\u006f\u0075\u0062\u006c\u0065":
		*_caffe = 7
	case "\u0068\u0061\u0069\u0072":
		*_caffe = 8
	case "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064":
		*_caffe = 9
	case "\u0064a\u0073\u0068\u0044\u006f\u0074":
		*_caffe = 10
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
		*_caffe = 11
	case "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_caffe = 12
	case "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_caffe = 13
	case "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
		*_caffe = 14
	}
	return nil
}

func (_cfeef *CT_Sheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gggcg := range start.Attr {
		if _gggcg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gggcg.Name.Local == "\u0069\u0064" || _gggcg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gggcg.Name.Local == "\u0069\u0064" {
			_bdfda, _egbgd := _gggcg.Value, error(nil)
			if _egbgd != nil {
				return _egbgd
			}
			_cfeef.IdAttr = _bdfda
			continue
		}
		if _gggcg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_aeebgd, _bgabg := _gggcg.Value, error(nil)
			if _bgabg != nil {
				return _bgabg
			}
			_cfeef.NameAttr = _aeebgd
			continue
		}
		if _gggcg.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_feebb, _fgga := _eb.ParseUint(_gggcg.Value, 10, 32)
			if _fgga != nil {
				return _fgga
			}
			_cfeef.SheetIdAttr = uint32(_feebb)
			continue
		}
		if _gggcg.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_cfeef.StateAttr.UnmarshalXMLAttr(_gggcg)
			continue
		}
	}
	for {
		_bggdc, _dgabb := d.Token()
		if _dgabb != nil {
			return _ec.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0068\u0065\u0065\u0074: \u0025\u0073", _dgabb)
		}
		if _adeag, _debfg := _bggdc.(_b.EndElement); _debfg && _adeag.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the PivotCacheDefinition and its children
func (_ebcbf *PivotCacheDefinition) Validate() error {
	return _ebcbf.ValidateWithPath("P\u0069v\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e")
}

func (_dcedeg *CT_Parameter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgfeb := range start.Attr {
		if _dgfeb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dgbcd, _fbgge := _dgfeb.Value, error(nil)
			if _fbgge != nil {
				return _fbgge
			}
			_dcedeg.NameAttr = &_dgbcd
			continue
		}
		if _dgfeb.Name.Local == "\u0073q\u006c\u0054\u0079\u0070\u0065" {
			_bcdfeg, _agdaa := _eb.ParseInt(_dgfeb.Value, 10, 32)
			if _agdaa != nil {
				return _agdaa
			}
			_gaadb := int32(_bcdfeg)
			_dcedeg.SqlTypeAttr = &_gaadb
			continue
		}
		if _dgfeb.Name.Local == "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0054\u0079\u0070\u0065" {
			_dcedeg.ParameterTypeAttr.UnmarshalXMLAttr(_dgfeb)
			continue
		}
		if _dgfeb.Name.Local == "\u0072e\u0066r\u0065\u0073\u0068\u004f\u006e\u0043\u0068\u0061\u006e\u0067\u0065" {
			_eafdc, _ggece := _eb.ParseBool(_dgfeb.Value)
			if _ggece != nil {
				return _ggece
			}
			_dcedeg.RefreshOnChangeAttr = &_eafdc
			continue
		}
		if _dgfeb.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074" {
			_aaecb, _afefb := _dgfeb.Value, error(nil)
			if _afefb != nil {
				return _afefb
			}
			_dcedeg.PromptAttr = &_aaecb
			continue
		}
		if _dgfeb.Name.Local == "\u0062o\u006f\u006c\u0065\u0061\u006e" {
			_badbc, _bdffe := _eb.ParseBool(_dgfeb.Value)
			if _bdffe != nil {
				return _bdffe
			}
			_dcedeg.BooleanAttr = &_badbc
			continue
		}
		if _dgfeb.Name.Local == "\u0064\u006f\u0075\u0062\u006c\u0065" {
			_gcgdd, _ffdae := _eb.ParseFloat(_dgfeb.Value, 64)
			if _ffdae != nil {
				return _ffdae
			}
			_dcedeg.DoubleAttr = &_gcgdd
			continue
		}
		if _dgfeb.Name.Local == "\u0069n\u0074\u0065\u0067\u0065\u0072" {
			_caggf, _aedeg := _eb.ParseInt(_dgfeb.Value, 10, 32)
			if _aedeg != nil {
				return _aedeg
			}
			_adccg := int32(_caggf)
			_dcedeg.IntegerAttr = &_adccg
			continue
		}
		if _dgfeb.Name.Local == "\u0073\u0074\u0072\u0069\u006e\u0067" {
			_eccabg, _cbbbd := _dgfeb.Value, error(nil)
			if _cbbbd != nil {
				return _cbbbd
			}
			_dcedeg.StringAttr = &_eccabg
			continue
		}
		if _dgfeb.Name.Local == "\u0063\u0065\u006c\u006c" {
			_geegdg, _dfdc := _dgfeb.Value, error(nil)
			if _dfdc != nil {
				return _dfdc
			}
			_dcedeg.CellAttr = &_geegdg
			continue
		}
	}
	for {
		_bdcbb, _ccbdde := d.Token()
		if _ccbdde != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0061r\u0061\u006d\u0065\u0074\u0065\u0072\u003a\u0020\u0025\u0073", _ccbdde)
		}
		if _bfcfe, _cfab := _bdcbb.(_b.EndElement); _cfab && _bfcfe.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dgbf *CT_ColHierarchiesUsage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _febc := range start.Attr {
		if _febc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bgce, _eaca := _eb.ParseUint(_febc.Value, 10, 32)
			if _eaca != nil {
				return _eaca
			}
			_bcbg := uint32(_bgce)
			_dgbf.CountAttr = &_bcbg
			continue
		}
	}
_facd:
	for {
		_dfce, _bada := d.Token()
		if _bada != nil {
			return _bada
		}
		switch _efcge := _dfce.(type) {
		case _b.StartElement:
			switch _efcge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}:
				_cafac := NewCT_HierarchyUsage()
				if _eedgb := d.DecodeElement(_cafac, &_efcge); _eedgb != nil {
					return _eedgb
				}
				_dgbf.ColHierarchyUsage = append(_dgbf.ColHierarchyUsage, _cafac)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u006f\u006c\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065\u0020\u0025\u0076", _efcge.Name)
				if _addf := d.Skip(); _addf != nil {
					return _addf
				}
			}
		case _b.EndElement:
			break _facd
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_NumFmts and its children
func (_bdgfg *CT_NumFmts) Validate() error {
	return _bdgfg.ValidateWithPath("\u0043\u0054\u005f\u004e\u0075\u006d\u0046\u006d\u0074\u0073")
}

func (_gefeeg *ST_RevisionAction) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bafdab, _abddfb := d.Token()
	if _abddfb != nil {
		return _abddfb
	}
	if _dggac, _dbfbcf := _bafdab.(_b.EndElement); _dbfbcf && _dggac.Name == start.Name {
		*_gefeeg = 1
		return nil
	}
	if _adceab, _ccbdfe := _bafdab.(_b.CharData); !_ccbdfe {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bafdab)
	} else {
		switch string(_adceab) {
		case "":
			*_gefeeg = 0
		case "\u0061\u0064\u0064":
			*_gefeeg = 1
		case "\u0064\u0065\u006c\u0065\u0074\u0065":
			*_gefeeg = 2
		}
	}
	_bafdab, _abddfb = d.Token()
	if _abddfb != nil {
		return _abddfb
	}
	if _cfgca, _eadcf := _bafdab.(_b.EndElement); _eadcf && _cfgca.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bafdab)
}

// ValidateWithPath validates the CT_CellWatches and its children, prefixing error messages with path
func (_bccf *CT_CellWatches) ValidateWithPath(path string) error {
	for _cege, _beag := range _bccf.CellWatch {
		if _adgda := _beag.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u0043\u0065\u006cl\u0057\u0061\u0074\u0063\u0068\u005b\u0025\u0064\u005d", path, _cege)); _adgda != nil {
			return _adgda
		}
	}
	return nil
}

type CT_Dxf struct {

	// Font Properties
	Font *CT_Font

	// Number Format
	NumFmt *CT_NumFmt

	// Fill
	Fill *CT_Fill

	// Alignment
	Alignment *CT_CellAlignment

	// Border Properties
	Border *CT_Border

	// Protection Properties
	Protection *CT_CellProtection

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

const (
	ST_CellFormulaTypeUnset     ST_CellFormulaType = 0
	ST_CellFormulaTypeNormal    ST_CellFormulaType = 1
	ST_CellFormulaTypeArray     ST_CellFormulaType = 2
	ST_CellFormulaTypeDataTable ST_CellFormulaType = 3
	ST_CellFormulaTypeShared    ST_CellFormulaType = 4
)

func (_cfbbf ST_Visibility) ValidateWithPath(path string) error {
	switch _cfbbf {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cfbbf))
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionRowColumn and its children, prefixing error messages with path
func (_ccfef *CT_RevisionRowColumn) ValidateWithPath(path string) error {
	if _ccfef.ActionAttr == ST_rwColActionTypeUnset {
		return _ec.Errorf("\u0025\u0073\u002fAc\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072\u0020i\u0073 \u0061 \u006da\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fagdcf := _ccfef.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _fagdcf != nil {
		return _fagdcf
	}
	for _cggfbf, _agbgg := range _ccfef.Undo {
		if _efggf := _agbgg.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0055\u006e\u0064\u006f\u005b\u0025\u0064\u005d", path, _cggfbf)); _efggf != nil {
			return _efggf
		}
	}
	for _eddcgf, _ccab := range _ccfef.Rcc {
		if _dcfeg := _ccab.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0063\u005b\u0025\u0064\u005d", path, _eddcgf)); _dcfeg != nil {
			return _dcfeg
		}
	}
	for _eddbf, _gccdb := range _ccfef.Rfmt {
		if _bgggd := _gccdb.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0052\u0066\u006d\u0074\u005b\u0025\u0064\u005d", path, _eddbf)); _bgggd != nil {
			return _bgggd
		}
	}
	return nil
}

// Validate validates the CT_Border and its children
func (_efcb *CT_Border) Validate() error {
	return _efcb.ValidateWithPath("\u0043T\u005f\u0042\u006f\u0072\u0064\u0065r")
}

func (_fgfa *CT_FileRecoveryPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fgfa.AutoRecoverAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0075\u0074\u006f\u0052\u0065\u0063\u006f\u0076\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgfa.AutoRecoverAttr))})
	}
	if _fgfa.CrashSaveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063r\u0061\u0073\u0068\u0053\u0061\u0076e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgfa.CrashSaveAttr))})
	}
	if _fgfa.DataExtractLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064a\u0074a\u0045\u0078\u0074\u0072\u0061\u0063\u0074\u004c\u006f\u0061\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgfa.DataExtractLoadAttr))})
	}
	if _fgfa.RepairLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0070\u0061\u0069\u0072\u004c\u006f\u0061\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgfa.RepairLoadAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_ecbca *CT_PageField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ceeg := range start.Attr {
		if _ceeg.Name.Local == "\u0066\u006c\u0064" {
			_cgagdf, _ddfgg := _eb.ParseInt(_ceeg.Value, 10, 32)
			if _ddfgg != nil {
				return _ddfgg
			}
			_ecbca.FldAttr = int32(_cgagdf)
			continue
		}
		if _ceeg.Name.Local == "\u0069\u0074\u0065\u006d" {
			_cccdb, _fccca := _eb.ParseUint(_ceeg.Value, 10, 32)
			if _fccca != nil {
				return _fccca
			}
			_ebcgg := uint32(_cccdb)
			_ecbca.ItemAttr = &_ebcgg
			continue
		}
		if _ceeg.Name.Local == "\u0068\u0069\u0065\u0072" {
			_gacab, _edfbf := _eb.ParseInt(_ceeg.Value, 10, 32)
			if _edfbf != nil {
				return _edfbf
			}
			_fdece := int32(_gacab)
			_ecbca.HierAttr = &_fdece
			continue
		}
		if _ceeg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_acgdf, _dbgdcg := _ceeg.Value, error(nil)
			if _dbgdcg != nil {
				return _dbgdcg
			}
			_ecbca.NameAttr = &_acgdf
			continue
		}
		if _ceeg.Name.Local == "\u0063\u0061\u0070" {
			_gecafb, _dagdb := _ceeg.Value, error(nil)
			if _dagdb != nil {
				return _dagdb
			}
			_ecbca.CapAttr = &_gecafb
			continue
		}
	}
_bccgc:
	for {
		_aeda, _ffeac := d.Token()
		if _ffeac != nil {
			return _ffeac
		}
		switch _cecfc := _aeda.(type) {
		case _b.StartElement:
			switch _cecfc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ecbca.ExtLst = NewCT_ExtensionList()
				if _acdfa := d.DecodeElement(_ecbca.ExtLst, &_cecfc); _acdfa != nil {
					return _acdfa
				}
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0061\u0067e\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _cecfc.Name)
				if _geegdd := d.Skip(); _geegdd != nil {
					return _geegdd
				}
			}
		case _b.EndElement:
			break _bccgc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_OleSize and its children
func (_dadeg *CT_OleSize) Validate() error {
	return _dadeg.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u0053\u0069\u007a\u0065")
}

// ValidateWithPath validates the StyleSheet and its children, prefixing error messages with path
func (_cfadc *StyleSheet) ValidateWithPath(path string) error {
	if _gfgdf := _cfadc.CT_Stylesheet.ValidateWithPath(path); _gfgdf != nil {
		return _gfgdf
	}
	return nil
}

func NewCT_colItems() *CT_colItems { _degddc := &CT_colItems{}; return _degddc }

func NewCT_ExternalRow() *CT_ExternalRow { _gcec := &CT_ExternalRow{}; return _gcec }

func (_bfbd *CT_IgnoredError) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _ec.Sprintf("\u0025\u0076", _bfbd.SqrefAttr)})
	if _bfbd.EvalErrorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065v\u0061\u006c\u0045\u0072\u0072\u006fr"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bfbd.EvalErrorAttr))})
	}
	if _bfbd.TwoDigitTextYearAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0077o\u0044\u0069\u0067i\u0074\u0054\u0065\u0078\u0074\u0059\u0065\u0061\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bfbd.TwoDigitTextYearAttr))})
	}
	if _bfbd.NumberStoredAsTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006eu\u006db\u0065\u0072\u0053\u0074\u006fr\u0065\u0064A\u0073\u0054\u0065\u0078\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bfbd.NumberStoredAsTextAttr))})
	}
	if _bfbd.FormulaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bfbd.FormulaAttr))})
	}
	if _bfbd.FormulaRangeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072m\u0075\u006c\u0061\u0052\u0061\u006e\u0067\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bfbd.FormulaRangeAttr))})
	}
	if _bfbd.UnlockedFormulaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075n\u006co\u0063\u006b\u0065\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bfbd.UnlockedFormulaAttr))})
	}
	if _bfbd.EmptyCellReferenceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065m\u0070t\u0079\u0043\u0065\u006c\u006cR\u0065\u0066e\u0072\u0065\u006e\u0063\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bfbd.EmptyCellReferenceAttr))})
	}
	if _bfbd.ListDataValidationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ci\u0073t\u0044\u0061\u0074\u0061\u0056a\u006c\u0069d\u0061\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bfbd.ListDataValidationAttr))})
	}
	if _bfbd.CalculatedColumnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bfbd.CalculatedColumnAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_FileVersion and its children, prefixing error messages with path
func (_bcecd *CT_FileVersion) ValidateWithPath(path string) error {
	if _bcecd.CodeNameAttr != nil {
		if !_bb.ST_GuidPatternRe.MatchString(*_bcecd.CodeNameAttr) {
			return _ec.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u006fd\u0065\u004e\u0061m\u0065\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _bb.ST_GuidPatternRe, *_bcecd.CodeNameAttr)
		}
	}
	return nil
}

// Validate validates the CT_CustomProperties and its children
func (_aadae *CT_CustomProperties) Validate() error {
	return _aadae.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_acfag *CT_Pane) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _acfag.XSplitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0053\u0070\u006c\u0069\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_acfag.XSplitAttr)})
	}
	if _acfag.YSplitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079\u0053\u0070\u006c\u0069\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_acfag.YSplitAttr)})
	}
	if _acfag.TopLeftCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_acfag.TopLeftCellAttr)})
	}
	if _acfag.ActivePaneAttr != ST_PaneUnset {
		_dgdee, _ebgba := _acfag.ActivePaneAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0063\u0074\u0069\u0076\u0065\u0050\u0061\u006e\u0065"})
		if _ebgba != nil {
			return _ebgba
		}
		start.Attr = append(start.Attr, _dgdee)
	}
	if _acfag.StateAttr != ST_PaneStateUnset {
		_bbcfd, _cggbe := _acfag.StateAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _cggbe != nil {
			return _cggbe
		}
		start.Attr = append(start.Attr, _bbcfd)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_ExtensionList and its children, prefixing error messages with path
func (_acdff *EG_ExtensionList) ValidateWithPath(path string) error {
	for _efdbgd, _eedcee := range _acdff.Ext {
		if _faabca := _eedcee.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _efdbgd)); _faabca != nil {
			return _faabca
		}
	}
	return nil
}

func (_bggec *CT_SharedUser) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _bggec.GuidAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _bggec.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _bggec.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _bggec.DateTimeAttr)})
	e.EncodeToken(start)
	if _bggec.ExtLst != nil {
		_ccbdgb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bggec.ExtLst, _ccbdgb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewHeaders() *Headers {
	_abaaa := &Headers{}
	_abaaa.CT_RevisionHeaders = *NewCT_RevisionHeaders()
	return _abaaa
}

func NewCT_DataRef() *CT_DataRef { _adebc := &CT_DataRef{}; return _adebc }

type CT_AutoSortScope struct {

	// Auto Sort Scope
	PivotArea *CT_PivotArea
}

type CT_TableStyleInfo struct {

	// Style Name
	NameAttr *string

	// Show First Column
	ShowFirstColumnAttr *bool

	// Show Last Column
	ShowLastColumnAttr *bool

	// Show Row Stripes
	ShowRowStripesAttr *bool

	// Show Column Stripes
	ShowColumnStripesAttr *bool
}

func (_abeag *ST_DataValidationErrorStyle) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_abeag = 0
	case "\u0073\u0074\u006f\u0070":
		*_abeag = 1
	case "\u0077a\u0072\u006e\u0069\u006e\u0067":
		*_abeag = 2
	case "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
		*_abeag = 3
	}
	return nil
}

func (_effdf *CT_MetadataType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _effdf.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0053up\u0070\u006f\u0072\u0074\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", _effdf.MinSupportedVersionAttr)})
	if _effdf.GhostRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0068\u006f\u0073\u0074\u0052\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.GhostRowAttr))})
	}
	if _effdf.GhostColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0068\u006f\u0073\u0074\u0043\u006f\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.GhostColAttr))})
	}
	if _effdf.EditAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0064\u0069\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.EditAttr))})
	}
	if _effdf.DeleteAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006c\u0065\u0074\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.DeleteAttr))})
	}
	if _effdf.CopyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0070\u0079"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.CopyAttr))})
	}
	if _effdf.PasteAllAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0041\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.PasteAllAttr))})
	}
	if _effdf.PasteFormulasAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.PasteFormulasAttr))})
	}
	if _effdf.PasteValuesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0061\u0073\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.PasteValuesAttr))})
	}
	if _effdf.PasteFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073t\u0065\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.PasteFormatsAttr))})
	}
	if _effdf.PasteCommentsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.PasteCommentsAttr))})
	}
	if _effdf.PasteDataValidationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0074eD\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.PasteDataValidationAttr))})
	}
	if _effdf.PasteBordersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073t\u0065\u0042\u006f\u0072\u0064\u0065\u0072\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.PasteBordersAttr))})
	}
	if _effdf.PasteColWidthsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006c\u0057i\u0064\u0074\u0068\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.PasteColWidthsAttr))})
	}
	if _effdf.PasteNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070a\u0073t\u0065\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.PasteNumberFormatsAttr))})
	}
	if _effdf.MergeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0072g\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.MergeAttr))})
	}
	if _effdf.SplitFirstAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u006c\u0069\u0074\u0046\u0069\u0072\u0073\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.SplitFirstAttr))})
	}
	if _effdf.SplitAllAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u006c\u0069\u0074\u0041\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.SplitAllAttr))})
	}
	if _effdf.RowColShiftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "r\u006f\u0077\u0043\u006f\u006c\u0053\u0068\u0069\u0066\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.RowColShiftAttr))})
	}
	if _effdf.ClearAllAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006c\u0065\u0061\u0072\u0041\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.ClearAllAttr))})
	}
	if _effdf.ClearFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006c\u0065a\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.ClearFormatsAttr))})
	}
	if _effdf.ClearContentsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.ClearContentsAttr))})
	}
	if _effdf.ClearCommentsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.ClearCommentsAttr))})
	}
	if _effdf.AssignAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0073\u0073\u0069\u0067\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.AssignAttr))})
	}
	if _effdf.CoerceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0065\u0072\u0063\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.CoerceAttr))})
	}
	if _effdf.AdjustAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0064\u006a\u0075\u0073\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.AdjustAttr))})
	}
	if _effdf.CellMetaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0065\u006c\u006c\u004d\u0065\u0074\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_effdf.CellMetaAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_QueryTableRefresh and its children, prefixing error messages with path
func (_ddgfdd *CT_QueryTableRefresh) ValidateWithPath(path string) error {
	if _agaae := _ddgfdd.QueryTableFields.ValidateWithPath(path + "\u002f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046i\u0065\u006c\u0064\u0073"); _agaae != nil {
		return _agaae
	}
	if _ddgfdd.QueryTableDeletedFields != nil {
		if _ddaaf := _ddgfdd.QueryTableDeletedFields.ValidateWithPath(path + "\u002fQ\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0044\u0065l\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073"); _ddaaf != nil {
			return _ddaaf
		}
	}
	if _ddgfdd.SortState != nil {
		if _acdgb := _ddgfdd.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _acdgb != nil {
			return _acdgb
		}
	}
	if _ddgfdd.ExtLst != nil {
		if _eagbae := _ddgfdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eagbae != nil {
			return _eagbae
		}
	}
	return nil
}

func (_gafaac *CT_WebPublishObject) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edfce := range start.Attr {
		if _edfce.Name.Local == "\u0069\u0064" {
			_gdada, _ceceaa := _eb.ParseUint(_edfce.Value, 10, 32)
			if _ceceaa != nil {
				return _ceceaa
			}
			_gafaac.IdAttr = uint32(_gdada)
			continue
		}
		if _edfce.Name.Local == "\u0064\u0069\u0076I\u0064" {
			_bcdde, _faeec := _edfce.Value, error(nil)
			if _faeec != nil {
				return _faeec
			}
			_gafaac.DivIdAttr = _bcdde
			continue
		}
		if _edfce.Name.Local == "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074" {
			_cgefc, _efada := _edfce.Value, error(nil)
			if _efada != nil {
				return _efada
			}
			_gafaac.SourceObjectAttr = &_cgefc
			continue
		}
		if _edfce.Name.Local == "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065" {
			_efegbg, _egfbfd := _edfce.Value, error(nil)
			if _egfbfd != nil {
				return _egfbfd
			}
			_gafaac.DestinationFileAttr = _efegbg
			continue
		}
		if _edfce.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_edgbe, _ecbgd := _edfce.Value, error(nil)
			if _ecbgd != nil {
				return _ecbgd
			}
			_gafaac.TitleAttr = &_edgbe
			continue
		}
		if _edfce.Name.Local == "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068" {
			_fgebab, _fgcfc := _eb.ParseBool(_edfce.Value)
			if _fgcfc != nil {
				return _fgcfc
			}
			_gafaac.AutoRepublishAttr = &_fgebab
			continue
		}
	}
	for {
		_ccdcd, _cbecc := d.Token()
		if _cbecc != nil {
			return _ec.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0057\u0065\u0062\u0050\u0075b\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _cbecc)
		}
		if _dbgbc, _febge := _ccdcd.(_b.EndElement); _febge && _dbgbc.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_WebPublishItems struct {

	// Web Publishing Items Count
	CountAttr *uint32

	// Web Publishing Item
	WebPublishItem []*CT_WebPublishItem
}

// ValidateWithPath validates the CT_Tuple and its children, prefixing error messages with path
func (_efgbe *CT_Tuple) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Metadata and its children
func (_ggbed *CT_Metadata) Validate() error {
	return _ggbed.ValidateWithPath("C\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061")
}

// ValidateWithPath validates the Metadata and its children, prefixing error messages with path
func (_adfbe *Metadata) ValidateWithPath(path string) error {
	if _aeage := _adfbe.CT_Metadata.ValidateWithPath(path); _aeage != nil {
		return _aeage
	}
	return nil
}

func NewCT_Workbook() *CT_Workbook {
	_gcdgf := &CT_Workbook{}
	_gcdgf.Sheets = NewCT_Sheets()
	return _gcdgf
}

func (_fbbcc *ST_HorizontalAlignment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cfddgd, _aaddf := d.Token()
	if _aaddf != nil {
		return _aaddf
	}
	if _eeadcf, _cdffg := _cfddgd.(_b.EndElement); _cdffg && _eeadcf.Name == start.Name {
		*_fbbcc = 1
		return nil
	}
	if _adcfb, _ffafd := _cfddgd.(_b.CharData); !_ffafd {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cfddgd)
	} else {
		switch string(_adcfb) {
		case "":
			*_fbbcc = 0
		case "\u0067e\u006e\u0065\u0072\u0061\u006c":
			*_fbbcc = 1
		case "\u006c\u0065\u0066\u0074":
			*_fbbcc = 2
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_fbbcc = 3
		case "\u0072\u0069\u0067h\u0074":
			*_fbbcc = 4
		case "\u0066\u0069\u006c\u006c":
			*_fbbcc = 5
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_fbbcc = 6
		case "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073":
			*_fbbcc = 7
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_fbbcc = 8
		}
	}
	_cfddgd, _aaddf = d.Token()
	if _aaddf != nil {
		return _aaddf
	}
	if _cfedc, _dcbdge := _cfddgd.(_b.EndElement); _dcbdge && _cfedc.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cfddgd)
}

func (_bcda *CT_CellStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bcda.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_bcda.NameAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0066\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _bcda.XfIdAttr)})
	if _bcda.BuiltinIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062u\u0069\u006c\u0074\u0069\u006e\u0049d"}, Value: _ec.Sprintf("\u0025\u0076", *_bcda.BuiltinIdAttr)})
	}
	if _bcda.ILevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u004c\u0065\u0076\u0065\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_bcda.ILevelAttr)})
	}
	if _bcda.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bcda.HiddenAttr))})
	}
	if _bcda.CustomBuiltinAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0042\u0075\u0069\u006c\u0074\u0069\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bcda.CustomBuiltinAttr))})
	}
	e.EncodeToken(start)
	if _bcda.ExtLst != nil {
		_adeb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bcda.ExtLst, _adeb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_ffeg *CT_ConditionalFormat) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ffeg.PivotAreas = NewCT_PivotAreas()
	for _, _dffd := range start.Attr {
		if _dffd.Name.Local == "\u0073\u0063\u006fp\u0065" {
			_ffeg.ScopeAttr.UnmarshalXMLAttr(_dffd)
			continue
		}
		if _dffd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ffeg.TypeAttr.UnmarshalXMLAttr(_dffd)
			continue
		}
		if _dffd.Name.Local == "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079" {
			_cgafa, _fdcf := _eb.ParseUint(_dffd.Value, 10, 32)
			if _fdcf != nil {
				return _fdcf
			}
			_ffeg.PriorityAttr = uint32(_cgafa)
			continue
		}
	}
_ecbe:
	for {
		_gdbf, _gedd := d.Token()
		if _gedd != nil {
			return _gedd
		}
		switch _efbfb := _gdbf.(type) {
		case _b.StartElement:
			switch _efbfb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"}:
				if _gbbc := d.DecodeElement(_ffeg.PivotAreas, &_efbfb); _gbbc != nil {
					return _gbbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ffeg.ExtLst = NewCT_ExtensionList()
				if _cage := d.DecodeElement(_ffeg.ExtLst, &_efbfb); _cage != nil {
					return _cage
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0020\u0025\u0076", _efbfb.Name)
				if _fdggc := d.Skip(); _fdggc != nil {
					return _fdggc
				}
			}
		case _b.EndElement:
			break _ecbe
		case _b.CharData:
		}
	}
	return nil
}

func (_fdbfbg ST_FileType) String() string {
	switch _fdbfbg {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u0063"
	case 2:
		return "\u0077\u0069\u006e"
	case 3:
		return "\u0064\u006f\u0073"
	case 4:
		return "\u006c\u0069\u006e"
	case 5:
		return "\u006f\u0074\u0068e\u0072"
	}
	return ""
}

func (_adgbd *ST_CfType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_adgbd = 0
	case "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e":
		*_adgbd = 1
	case "\u0063\u0065\u006c\u006c\u0049\u0073":
		*_adgbd = 2
	case "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065":
		*_adgbd = 3
	case "\u0064a\u0074\u0061\u0042\u0061\u0072":
		*_adgbd = 4
	case "\u0069c\u006f\u006e\u0053\u0065\u0074":
		*_adgbd = 5
	case "\u0074\u006f\u00701\u0030":
		*_adgbd = 6
	case "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
		*_adgbd = 7
	case "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
		*_adgbd = 8
	case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
		*_adgbd = 9
	case "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
		*_adgbd = 10
	case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
		*_adgbd = 11
	case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
		*_adgbd = 12
	case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
		*_adgbd = 13
	case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
		*_adgbd = 14
	case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
		*_adgbd = 15
	case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
		*_adgbd = 16
	case "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064":
		*_adgbd = 17
	case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
		*_adgbd = 18
	}
	return nil
}

// ValidateWithPath validates the CT_CustomChartsheetView and its children, prefixing error messages with path
func (_fdedg *CT_CustomChartsheetView) ValidateWithPath(path string) error {
	if !_bb.ST_GuidPatternRe.MatchString(_fdedg.GuidAttr) {
		return _ec.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _bb.ST_GuidPatternRe, _fdedg.GuidAttr)
	}
	if _cbac := _fdedg.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _cbac != nil {
		return _cbac
	}
	if _fdedg.PageMargins != nil {
		if _dcdfb := _fdedg.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _dcdfb != nil {
			return _dcdfb
		}
	}
	if _fdedg.PageSetup != nil {
		if _bgfda := _fdedg.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _bgfda != nil {
			return _bgfda
		}
	}
	if _fdedg.HeaderFooter != nil {
		if _gfag := _fdedg.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _gfag != nil {
			return _gfag
		}
	}
	return nil
}

// Validate validates the CT_Missing and its children
func (_cgbdda *CT_Missing) Validate() error {
	return _cgbdda.ValidateWithPath("\u0043\u0054\u005f\u004d\u0069\u0073\u0073\u0069\u006e\u0067")
}

type CT_CellStyleXfs struct {

	// Style Count
	CountAttr *uint32

	// Formatting Elements
	Xf []*CT_Xf
}

// Validate validates the CT_MeasureGroups and its children
func (_bbccg *CT_MeasureGroups) Validate() error {
	return _bbccg.ValidateWithPath("\u0043\u0054_\u004d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073")
}

func (_bbfcf *CT_DataValidation) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bbfcf.TypeAttr != ST_DataValidationTypeUnset {
		_ccfd, _baba := _bbfcf.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _baba != nil {
			return _baba
		}
		start.Attr = append(start.Attr, _ccfd)
	}
	if _bbfcf.ErrorStyleAttr != ST_DataValidationErrorStyleUnset {
		_ffeag, _bcfdd := _bbfcf.ErrorStyleAttr.MarshalXMLAttr(_b.Name{Local: "\u0065\u0072\u0072\u006f\u0072\u0053\u0074\u0079\u006c\u0065"})
		if _bcfdd != nil {
			return _bcfdd
		}
		start.Attr = append(start.Attr, _ffeag)
	}
	if _bbfcf.ImeModeAttr != ST_DataValidationImeModeUnset {
		_dggbe, _bbdf := _bbfcf.ImeModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0069m\u0065\u004d\u006f\u0064\u0065"})
		if _bbdf != nil {
			return _bbdf
		}
		start.Attr = append(start.Attr, _dggbe)
	}
	if _bbfcf.OperatorAttr != ST_DataValidationOperatorUnset {
		_gaaa, _ebcec := _bbfcf.OperatorAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072"})
		if _ebcec != nil {
			return _ebcec
		}
		start.Attr = append(start.Attr, _gaaa)
	}
	if _bbfcf.AllowBlankAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0042\u006c\u0061\u006e\u006b"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bbfcf.AllowBlankAttr))})
	}
	if _bbfcf.ShowDropDownAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bbfcf.ShowDropDownAttr))})
	}
	if _bbfcf.ShowInputMessageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u0049\u006ep\u0075\u0074\u004d\u0065\u0073\u0073\u0061\u0067\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bbfcf.ShowInputMessageAttr))})
	}
	if _bbfcf.ShowErrorMessageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u0045\u0072r\u006f\u0072\u004d\u0065\u0073\u0073\u0061\u0067\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bbfcf.ShowErrorMessageAttr))})
	}
	if _bbfcf.ErrorTitleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0072\u0072\u006f\u0072\u0054\u0069\u0074\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_bbfcf.ErrorTitleAttr)})
	}
	if _bbfcf.ErrorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0072\u0072o\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_bbfcf.ErrorAttr)})
	}
	if _bbfcf.PromptTitleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0072\u006f\u006d\u0070\u0074\u0054\u0069\u0074\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_bbfcf.PromptTitleAttr)})
	}
	if _bbfcf.PromptAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_bbfcf.PromptAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _ec.Sprintf("\u0025\u0076", _bbfcf.SqrefAttr)})
	e.EncodeToken(start)
	if _bbfcf.Formula1 != nil {
		_abeba := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0031"}}
		_f.AddPreserveSpaceAttr(&_abeba, *_bbfcf.Formula1)
		e.EncodeElement(_bbfcf.Formula1, _abeba)
	}
	if _bbfcf.Formula2 != nil {
		_gabf := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0032"}}
		_f.AddPreserveSpaceAttr(&_gabf, *_bbfcf.Formula2)
		e.EncodeElement(_bbfcf.Formula2, _gabf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_SortState struct {

	// Sort by Columns
	ColumnSortAttr *bool

	// Case Sensitive
	CaseSensitiveAttr *bool

	// Sort Method
	SortMethodAttr ST_SortMethod

	// Sort Range
	RefAttr string

	// Sort Condition
	SortCondition []*CT_SortCondition
	ExtLst        *CT_ExtensionList
}

func (_edcaga *CT_RevisionHeader) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_edcaga.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_edcaga.SheetIdMap = NewCT_SheetIdMap()
	for _, _fggbfg := range start.Attr {
		if _fggbfg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fggbfg.Name.Local == "\u0069\u0064" || _fggbfg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fggbfg.Name.Local == "\u0069\u0064" {
			_bcgbf, _gcbdcb := _fggbfg.Value, error(nil)
			if _gcbdcb != nil {
				return _gcbdcb
			}
			_edcaga.IdAttr = _bcgbf
			continue
		}
		if _fggbfg.Name.Local == "\u0067\u0075\u0069\u0064" {
			_fgggb, _ccbfa := _fggbfg.Value, error(nil)
			if _ccbfa != nil {
				return _ccbfa
			}
			_edcaga.GuidAttr = _fgggb
			continue
		}
		if _fggbfg.Name.Local == "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065" {
			_dcbcf, _bcbcc := ParseStdlibTime(_fggbfg.Value)
			if _bcbcc != nil {
				return _bcbcc
			}
			_edcaga.DateTimeAttr = _dcbcf
			continue
		}
		if _fggbfg.Name.Local == "\u006d\u0061\u0078\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_gabcc, _ddage := _eb.ParseUint(_fggbfg.Value, 10, 32)
			if _ddage != nil {
				return _ddage
			}
			_edcaga.MaxSheetIdAttr = uint32(_gabcc)
			continue
		}
		if _fggbfg.Name.Local == "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065" {
			_fcbdeg, _beabc := _fggbfg.Value, error(nil)
			if _beabc != nil {
				return _beabc
			}
			_edcaga.UserNameAttr = _fcbdeg
			continue
		}
		if _fggbfg.Name.Local == "\u006d\u0069\u006e\u0052\u0049\u0064" {
			_faggfb, _gabee := _eb.ParseUint(_fggbfg.Value, 10, 32)
			if _gabee != nil {
				return _gabee
			}
			_bgcbff := uint32(_faggfb)
			_edcaga.MinRIdAttr = &_bgcbff
			continue
		}
		if _fggbfg.Name.Local == "\u006d\u0061\u0078\u0052\u0049\u0064" {
			_dabcd, _gbge := _eb.ParseUint(_fggbfg.Value, 10, 32)
			if _gbge != nil {
				return _gbge
			}
			_fgcbbg := uint32(_dabcd)
			_edcaga.MaxRIdAttr = &_fgcbbg
			continue
		}
	}
_abebc:
	for {
		_fgdcb, _eafb := d.Token()
		if _eafb != nil {
			return _eafb
		}
		switch _bcgef := _fgdcb.(type) {
		case _b.StartElement:
			switch _bcgef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"}:
				if _gfebd := d.DecodeElement(_edcaga.SheetIdMap, &_bcgef); _gfebd != nil {
					return _gfebd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076i\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076i\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"}:
				_edcaga.ReviewedList = NewCT_ReviewedRevisions()
				if _affdg := d.DecodeElement(_edcaga.ReviewedList, &_bcgef); _affdg != nil {
					return _affdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edcaga.ExtLst = NewCT_ExtensionList()
				if _afgfb := d.DecodeElement(_edcaga.ExtLst, &_bcgef); _afgfb != nil {
					return _afgfb
				}
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0048\u0065\u0061\u0064\u0065\u0072\u0020\u0025\u0076", _bcgef.Name)
				if _bagde := d.Skip(); _bagde != nil {
					return _bagde
				}
			}
		case _b.EndElement:
			break _abebc
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_CustomWorkbookViews() *CT_CustomWorkbookViews {
	_cgaff := &CT_CustomWorkbookViews{}
	return _cgaff
}

func NewCT_ColFields() *CT_ColFields { _bdeb := &CT_ColFields{}; return _bdeb }

type ST_PivotFilterType byte

func (_cbbf *CT_Parameter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbbf.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_cbbf.NameAttr)})
	}
	if _cbbf.SqlTypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073q\u006c\u0054\u0079\u0070\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_cbbf.SqlTypeAttr)})
	}
	if _cbbf.ParameterTypeAttr != ST_ParameterTypeUnset {
		_cbcdc, _bfcde := _cbbf.ParameterTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0054\u0079\u0070\u0065"})
		if _bfcde != nil {
			return _bfcde
		}
		start.Attr = append(start.Attr, _cbcdc)
	}
	if _cbbf.RefreshOnChangeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0066r\u0065\u0073\u0068\u004f\u006e\u0043\u0068\u0061\u006e\u0067\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cbbf.RefreshOnChangeAttr))})
	}
	if _cbbf.PromptAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_cbbf.PromptAttr)})
	}
	if _cbbf.BooleanAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062o\u006f\u006c\u0065\u0061\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cbbf.BooleanAttr))})
	}
	if _cbbf.DoubleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u006f\u0075\u0062\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_cbbf.DoubleAttr)})
	}
	if _cbbf.IntegerAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069n\u0074\u0065\u0067\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_cbbf.IntegerAttr)})
	}
	if _cbbf.StringAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0072\u0069\u006e\u0067"}, Value: _ec.Sprintf("\u0025\u0076", *_cbbf.StringAttr)})
	}
	if _cbbf.CellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0065\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_cbbf.CellAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_decaea *ST_IconSetType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_beffd, _adecg := d.Token()
	if _adecg != nil {
		return _adecg
	}
	if _baffd, _cgcee := _beffd.(_b.EndElement); _cgcee && _baffd.Name == start.Name {
		*_decaea = 1
		return nil
	}
	if _fggag, _agcag := _beffd.(_b.CharData); !_agcag {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _beffd)
	} else {
		switch string(_fggag) {
		case "":
			*_decaea = 0
		case "\u0033A\u0072\u0072\u006f\u0077\u0073":
			*_decaea = 1
		case "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
			*_decaea = 2
		case "\u0033\u0046\u006c\u0061\u0067\u0073":
			*_decaea = 3
		case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031":
			*_decaea = 4
		case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032":
			*_decaea = 5
		case "\u0033\u0053\u0069\u0067\u006e\u0073":
			*_decaea = 6
		case "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073":
			*_decaea = 7
		case "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732":
			*_decaea = 8
		case "\u0034A\u0072\u0072\u006f\u0077\u0073":
			*_decaea = 9
		case "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
			*_decaea = 10
		case "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b":
			*_decaea = 11
		case "\u0034R\u0061\u0074\u0069\u006e\u0067":
			*_decaea = 12
		case "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073":
			*_decaea = 13
		case "\u0035A\u0072\u0072\u006f\u0077\u0073":
			*_decaea = 14
		case "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
			*_decaea = 15
		case "\u0035R\u0061\u0074\u0069\u006e\u0067":
			*_decaea = 16
		case "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s":
			*_decaea = 17
		}
	}
	_beffd, _adecg = d.Token()
	if _adecg != nil {
		return _adecg
	}
	if _ffcdfb, _bdfcdd := _beffd.(_b.EndElement); _bdfcdd && _ffcdfb.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _beffd)
}

func (_aggbb *CT_OleSize) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", _aggbb.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Cfvo and its children
func (_fafb *CT_Cfvo) Validate() error {
	return _fafb.ValidateWithPath("\u0043T\u005f\u0043\u0066\u0076\u006f")
}

// Validate validates the CT_SortCondition and its children
func (_geaae *CT_SortCondition) Validate() error {
	return _geaae.ValidateWithPath("\u0043\u0054_\u0053\u006f\u0072t\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e")
}

func (_dega *CT_DateTime) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _ec.Sprintf("\u0025\u0076", _dega.VAttr)})
	if _dega.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dega.UAttr))})
	}
	if _dega.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dega.FAttr))})
	}
	if _dega.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_dega.CAttr)})
	}
	if _dega.CpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0070"}, Value: _ec.Sprintf("\u0025\u0076", *_dega.CpAttr)})
	}
	e.EncodeToken(start)
	if _dega.X != nil {
		_bggge := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _dgedd := range _dega.X {
			e.EncodeElement(_dgedd, _bggge)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Dxf and its children
func (_gafccf *CT_Dxf) Validate() error {
	return _gafccf.ValidateWithPath("\u0043\u0054\u005f\u0044\u0078\u0066")
}

// ValidateWithPath validates the Worksheet and its children, prefixing error messages with path
func (_abdfea *Worksheet) ValidateWithPath(path string) error {
	if _fbbeb := _abdfea.CT_Worksheet.ValidateWithPath(path); _fbbeb != nil {
		return _fbbeb
	}
	return nil
}

func (_bdac *CT_CustomChartsheetViews) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bdac.CustomSheetView != nil {
		_cfee := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077"}}
		for _, _ffba := range _bdac.CustomSheetView {
			e.EncodeElement(_ffba, _cfee)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cedbf *ST_CredMethod) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ccafeb, _abeea := d.Token()
	if _abeea != nil {
		return _abeea
	}
	if _bbfdb, _caccaa := _ccafeb.(_b.EndElement); _caccaa && _bbfdb.Name == start.Name {
		*_cedbf = 1
		return nil
	}
	if _cadae, _fgeeb := _ccafeb.(_b.CharData); !_fgeeb {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccafeb)
	} else {
		switch string(_cadae) {
		case "":
			*_cedbf = 0
		case "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064":
			*_cedbf = 1
		case "\u006e\u006f\u006e\u0065":
			*_cedbf = 2
		case "\u0073\u0074\u006f\u0072\u0065\u0064":
			*_cedbf = 3
		case "\u0070\u0072\u006f\u006d\u0070\u0074":
			*_cedbf = 4
		}
	}
	_ccafeb, _abeea = d.Token()
	if _abeea != nil {
		return _abeea
	}
	if _edgeb, _bcebc := _ccafeb.(_b.EndElement); _bcebc && _edgeb.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccafeb)
}

type ST_Orientation byte

func NewCT_Sheet() *CT_Sheet { _agdcf := &CT_Sheet{}; return _agdcf }

type CT_SheetDimension struct {

	// Reference
	RefAttr string
}

func (_bccg *CT_IgnoredErrors) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bfbdg:
	for {
		_cdggg, _cagg := d.Token()
		if _cagg != nil {
			return _cagg
		}
		switch _bagac := _cdggg.(type) {
		case _b.StartElement:
			switch _bagac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072"}:
				_gbbbf := NewCT_IgnoredError()
				if _egbbc := d.DecodeElement(_gbbbf, &_bagac); _egbbc != nil {
					return _egbbc
				}
				_bccg.IgnoredError = append(_bccg.IgnoredError, _gbbbf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bccg.ExtLst = NewCT_ExtensionList()
				if _gfcbd := d.DecodeElement(_bccg.ExtLst, &_bagac); _gfcbd != nil {
					return _gfcbd
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0049\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073\u0020\u0025v", _bagac.Name)
				if _gddd := d.Skip(); _gddd != nil {
					return _gddd
				}
			}
		case _b.EndElement:
			break _bfbdg
		case _b.CharData:
		}
	}
	return nil
}

func (_feca *CT_ColorFilter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ffce := range start.Attr {
		if _ffce.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_dcgbg, _aefag := _eb.ParseUint(_ffce.Value, 10, 32)
			if _aefag != nil {
				return _aefag
			}
			_effef := uint32(_dcgbg)
			_feca.DxfIdAttr = &_effef
			continue
		}
		if _ffce.Name.Local == "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr" {
			_ageb, _ebcg := _eb.ParseBool(_ffce.Value)
			if _ebcg != nil {
				return _ebcg
			}
			_feca.CellColorAttr = &_ageb
			continue
		}
	}
	for {
		_cebf, _eaab := d.Token()
		if _eaab != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072:\u0020\u0025\u0073", _eaab)
		}
		if _fecb, _aabaa := _cebf.(_b.EndElement); _aabaa && _fecb.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_CalculatedItems() *CT_CalculatedItems { _bdce := &CT_CalculatedItems{}; return _bdce }

// ValidateWithPath validates the CT_PhoneticPr and its children, prefixing error messages with path
func (_faaea *CT_PhoneticPr) ValidateWithPath(path string) error {
	if _bfgga := _faaea.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _bfgga != nil {
		return _bfgga
	}
	if _acdefe := _faaea.AlignmentAttr.ValidateWithPath(path + "\u002f\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006et\u0041\u0074\u0074\u0072"); _acdefe != nil {
		return _acdefe
	}
	return nil
}

func NewCT_CommentPr() *CT_CommentPr {
	_baddg := &CT_CommentPr{}
	_baddg.Anchor = NewCT_ObjectAnchor()
	return _baddg
}

func (_babaac *CT_WorksheetSource) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ffbabf := range start.Attr {
		if _ffbabf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ffbabf.Name.Local == "\u0069\u0064" || _ffbabf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ffbabf.Name.Local == "\u0069\u0064" {
			_cdfda, _aedcf := _ffbabf.Value, error(nil)
			if _aedcf != nil {
				return _aedcf
			}
			_babaac.IdAttr = &_cdfda
			continue
		}
		if _ffbabf.Name.Local == "\u0072\u0065\u0066" {
			_dcacc, _ebecb := _ffbabf.Value, error(nil)
			if _ebecb != nil {
				return _ebecb
			}
			_babaac.RefAttr = &_dcacc
			continue
		}
		if _ffbabf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ecgfeb, _adcbf := _ffbabf.Value, error(nil)
			if _adcbf != nil {
				return _adcbf
			}
			_babaac.NameAttr = &_ecgfeb
			continue
		}
		if _ffbabf.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_gbebda, _gggfd := _ffbabf.Value, error(nil)
			if _gggfd != nil {
				return _gggfd
			}
			_babaac.SheetAttr = &_gbebda
			continue
		}
	}
	for {
		_fbfgb, _gbcfd := d.Token()
		if _gbcfd != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0057\u006f\u0072\u006b\u0073\u0068\u0065e\u0074\u0053\u006f\u0075\u0072\u0063\u0065\u003a\u0020\u0025\u0073", _gbcfd)
		}
		if _cdbbb, _cebfba := _fbfgb.(_b.EndElement); _cebfba && _cdbbb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fcbd *CT_CommentList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fcbd.Comment != nil {
		_eafd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006d\u006d\u0065\u006e\u0074"}}
		for _, _gebe := range _fcbd.Comment {
			e.EncodeElement(_gebe, _eafd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_baaa *CT_CalcCell) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _baaa.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_baaa.RAttr)})
	}
	if _baaa.RefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", *_baaa.RefAttr)})
	}
	if _baaa.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _ec.Sprintf("\u0025\u0076", *_baaa.IAttr)})
	}
	if _baaa.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_baaa.SAttr))})
	}
	if _baaa.LAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_baaa.LAttr))})
	}
	if _baaa.TAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_baaa.TAttr))})
	}
	if _baaa.AAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_baaa.AAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ExternalCell and its children
func (_gefgc *CT_ExternalCell) Validate() error {
	return _gefgc.ValidateWithPath("\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0043\u0065\u006c\u006c")
}

// Validate validates the CT_Members and its children
func (_egdda *CT_Members) Validate() error {
	return _egdda.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0073")
}

func (_dcgbc *CT_Index) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _ec.Sprintf("\u0025\u0076", _dcgbc.VAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CommentList and its children, prefixing error messages with path
func (_adda *CT_CommentList) ValidateWithPath(path string) error {
	for _aeee, _gafce := range _adda.Comment {
		if _afffg := _gafce.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006d\u006d\u0065\u006et\u005b\u0025\u0064\u005d", path, _aeee)); _afffg != nil {
			return _afffg
		}
	}
	return nil
}

func (_fadcg ST_Pane) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bcadec := _b.Attr{}
	_bcadec.Name = name
	switch _fadcg {
	case ST_PaneUnset:
		_bcadec.Value = ""
	case ST_PaneBottomRight:
		_bcadec.Value = "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case ST_PaneTopRight:
		_bcadec.Value = "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case ST_PaneBottomLeft:
		_bcadec.Value = "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case ST_PaneTopLeft:
		_bcadec.Value = "\u0074o\u0070\u004c\u0065\u0066\u0074"
	}
	return _bcadec, nil
}

type CT_DataField struct {

	// Data Field Name
	NameAttr *string

	// Field
	FldAttr uint32

	// Subtotal
	SubtotalAttr ST_DataConsolidateFunction

	// Show Data As Display Format
	ShowDataAsAttr ST_ShowDataAs

	// 'Show Data As' Base Field
	BaseFieldAttr *int32

	// 'Show Data As' Base Setting
	BaseItemAttr *uint32

	// Number Format Id
	NumFmtIdAttr *uint32

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

type CT_Dimensions struct {

	// OLAP Dimensions Count
	CountAttr *uint32

	// OLAP Dimension
	Dimension []*CT_PivotDimension
}

type CT_Record struct {

	// No Value
	M []*CT_Missing

	// Numeric Value
	N []*CT_Number

	// Boolean
	B []*CT_Boolean

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String

	// Date Time
	D []*CT_DateTime

	// Shared Items Index
	X []*CT_Index
}

func NewCT_ChartsheetView() *CT_ChartsheetView { _gfgba := &CT_ChartsheetView{}; return _gfgba }

func (_aabdf ST_FontScheme) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fggac := _b.Attr{}
	_fggac.Name = name
	switch _aabdf {
	case ST_FontSchemeUnset:
		_fggac.Value = ""
	case ST_FontSchemeNone:
		_fggac.Value = "\u006e\u006f\u006e\u0065"
	case ST_FontSchemeMajor:
		_fggac.Value = "\u006d\u0061\u006ao\u0072"
	case ST_FontSchemeMinor:
		_fggac.Value = "\u006d\u0069\u006eo\u0072"
	}
	return _fggac, nil
}

func NewCT_Error() *CT_Error { _gega := &CT_Error{}; return _gega }

func (_baaac ST_Qualifier) ValidateWithPath(path string) error {
	switch _baaac {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_baaac))
	}
	return nil
}

func (_cagdd ST_DynamicFilterType) ValidateWithPath(path string) error {
	switch _cagdd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cagdd))
	}
	return nil
}

func (_fedga *ST_GradientType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fedga = 0
	case "\u006c\u0069\u006e\u0065\u0061\u0072":
		*_fedga = 1
	case "\u0070\u0061\u0074\u0068":
		*_fedga = 2
	}
	return nil
}

// Validate validates the CT_PivotAreaReferences and its children
func (_fdad *CT_PivotAreaReferences) Validate() error {
	return _fdad.ValidateWithPath("\u0043\u0054\u005f\u0050iv\u006f\u0074\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0073")
}

// Validate validates the CT_RangePr and its children
func (_afdgda *CT_RangePr) Validate() error {
	return _afdgda.ValidateWithPath("\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0050\u0072")
}

// ValidateWithPath validates the CT_DdeLink and its children, prefixing error messages with path
func (_ddefd *CT_DdeLink) ValidateWithPath(path string) error {
	if _ddefd.DdeItems != nil {
		if _afcac := _ddefd.DdeItems.ValidateWithPath(path + "\u002fD\u0064\u0065\u0049\u0074\u0065\u006ds"); _afcac != nil {
			return _afcac
		}
	}
	return nil
}

func (_afaeg *CT_PageItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgeaa := range start.Attr {
		if _dgeaa.Name.Local == "\u006e\u0061\u006d\u0065" {
			_caaced, _eccga := _dgeaa.Value, error(nil)
			if _eccga != nil {
				return _eccga
			}
			_afaeg.NameAttr = _caaced
			continue
		}
	}
	for {
		_bgdfg, _cfggc := d.Token()
		if _cfggc != nil {
			return _ec.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0049\u0074\u0065\u006d\u003a\u0020\u0025\u0073", _cfggc)
		}
		if _fdcab, _fccfb := _bgdfg.(_b.EndElement); _fccfb && _fdcab.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gdeade ST_DataConsolidateFunction) Validate() error { return _gdeade.ValidateWithPath("") }

// Validate validates the CT_DataValidations and its children
func (_fbda *CT_DataValidations) Validate() error {
	return _fbda.ValidateWithPath("\u0043T\u005fD\u0061\u0074\u0061\u0056\u0061l\u0069\u0064a\u0074\u0069\u006f\u006e\u0073")
}

func NewCT_Worksheet() *CT_Worksheet {
	_agbac := &CT_Worksheet{}
	_agbac.SheetData = NewCT_SheetData()
	return _agbac
}

// ValidateWithPath validates the Comments and its children, prefixing error messages with path
func (_decfc *Comments) ValidateWithPath(path string) error {
	if _aface := _decfc.CT_Comments.ValidateWithPath(path); _aface != nil {
		return _aface
	}
	return nil
}

type CT_CellWatch struct {

	// Reference
	RAttr string
}

func NewCT_DefinedName() *CT_DefinedName { _bbae := &CT_DefinedName{}; return _bbae }

func (_deada *CT_SheetIdMap) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eebbe := range start.Attr {
		if _eebbe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bcbca, _faddaa := _eb.ParseUint(_eebbe.Value, 10, 32)
			if _faddaa != nil {
				return _faddaa
			}
			_eegbg := uint32(_bcbca)
			_deada.CountAttr = &_eegbg
			continue
		}
	}
_bfaddf:
	for {
		_bdacg, _dgaaeg := d.Token()
		if _dgaaeg != nil {
			return _dgaaeg
		}
		switch _gddgc := _bdacg.(type) {
		case _b.StartElement:
			switch _gddgc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}:
				_fgafc := NewCT_SheetId()
				if _badegb := d.DecodeElement(_fgafc, &_gddgc); _badegb != nil {
					return _badegb
				}
				_deada.SheetId = append(_deada.SheetId, _fgafc)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070 \u0025\u0076", _gddgc.Name)
				if _geaeff := d.Skip(); _geaeff != nil {
					return _geaeff
				}
			}
		case _b.EndElement:
			break _bfaddf
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BookViews and its children, prefixing error messages with path
func (_bffb *CT_BookViews) ValidateWithPath(path string) error {
	for _edgbc, _dbgb := range _bffb.WorkbookView {
		if _dca := _dbgb.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0057or\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u005b\u0025\u0064\u005d", path, _edgbc)); _dca != nil {
			return _dca
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Revisions and its children, prefixing error messages with path
func (_cgfdbf *CT_Revisions) ValidateWithPath(path string) error {
	for _bedda, _bceae := range _cgfdbf.Rrc {
		if _gbeegd := _bceae.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0052\u0072\u0063\u005b\u0025\u0064\u005d", path, _bedda)); _gbeegd != nil {
			return _gbeegd
		}
	}
	for _ebcaaa, _ggdbc := range _cgfdbf.Rm {
		if _ebcecg := _ggdbc.ValidateWithPath(_ec.Sprintf("\u0025s\u002f\u0052\u006d\u005b\u0025\u0064]", path, _ebcaaa)); _ebcecg != nil {
			return _ebcecg
		}
	}
	for _ggeed, _fbdbg := range _cgfdbf.Rcv {
		if _eedbg := _fbdbg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0076\u005b\u0025\u0064\u005d", path, _ggeed)); _eedbg != nil {
			return _eedbg
		}
	}
	for _aacd, _feefa := range _cgfdbf.Rsnm {
		if _bbfeg := _feefa.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0052\u0073\u006e\u006d\u005b\u0025\u0064\u005d", path, _aacd)); _bbfeg != nil {
			return _bbfeg
		}
	}
	for _ceegd, _cabba := range _cgfdbf.Ris {
		if _eeabg := _cabba.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0052\u0069\u0073\u005b\u0025\u0064\u005d", path, _ceegd)); _eeabg != nil {
			return _eeabg
		}
	}
	for _bggcb, _fdccb := range _cgfdbf.Rcc {
		if _dcbdf := _fdccb.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0063\u005b\u0025\u0064\u005d", path, _bggcb)); _dcbdf != nil {
			return _dcbdf
		}
	}
	for _fdfga, _afdaag := range _cgfdbf.Rfmt {
		if _cbagg := _afdaag.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0052\u0066\u006d\u0074\u005b\u0025\u0064\u005d", path, _fdfga)); _cbagg != nil {
			return _cbagg
		}
	}
	for _fgebe, _ggdf := range _cgfdbf.Raf {
		if _dgegc := _ggdf.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0052\u0061\u0066\u005b\u0025\u0064\u005d", path, _fgebe)); _dgegc != nil {
			return _dgegc
		}
	}
	for _ggdcd, _adceg := range _cgfdbf.Rdn {
		if _bbaad := _adceg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0052\u0064\u006e\u005b\u0025\u0064\u005d", path, _ggdcd)); _bbaad != nil {
			return _bbaad
		}
	}
	for _bgdgg, _dfegd := range _cgfdbf.Rcmt {
		if _fecge := _dfegd.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0052\u0063\u006d\u0074\u005b\u0025\u0064\u005d", path, _bgdgg)); _fecge != nil {
			return _fecge
		}
	}
	for _fabfd, _ceegc := range _cgfdbf.Rqt {
		if _dbeeg := _ceegc.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0052\u0071\u0074\u005b\u0025\u0064\u005d", path, _fabfd)); _dbeeg != nil {
			return _dbeeg
		}
	}
	for _bdeag, _agebbc := range _cgfdbf.Rcft {
		if _fgegg := _agebbc.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0052\u0063\u0066\u0074\u005b\u0025\u0064\u005d", path, _bdeag)); _fgegg != nil {
			return _fgegg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DdeItem and its children, prefixing error messages with path
func (_cecb *CT_DdeItem) ValidateWithPath(path string) error {
	if _cecb.Values != nil {
		if _cgae := _cecb.Values.ValidateWithPath(path + "\u002fV\u0061\u006c\u0075\u0065\u0073"); _cgae != nil {
			return _cgae
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Dxfs and its children, prefixing error messages with path
func (_gcef *CT_Dxfs) ValidateWithPath(path string) error {
	for _ccgae, _gdgb := range _gcef.Dxf {
		if _gefg := _gdgb.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0044\u0078\u0066\u005b\u0025\u0064\u005d", path, _ccgae)); _gefg != nil {
			return _gefg
		}
	}
	return nil
}

func (_bfabfb *ST_Qualifier) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bfabfb = 0
	case "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
		*_bfabfb = 1
	case "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
		*_bfabfb = 2
	case "\u006e\u006f\u006e\u0065":
		*_bfabfb = 3
	}
	return nil
}

func (_eccae *CT_GradientFill) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fcgg := range start.Attr {
		if _fcgg.Name.Local == "\u0074\u0079\u0070\u0065" {
			_eccae.TypeAttr.UnmarshalXMLAttr(_fcgg)
			continue
		}
		if _fcgg.Name.Local == "\u0064\u0065\u0067\u0072\u0065\u0065" {
			_bfdfa, _agaaf := _eb.ParseFloat(_fcgg.Value, 64)
			if _agaaf != nil {
				return _agaaf
			}
			_eccae.DegreeAttr = &_bfdfa
			continue
		}
		if _fcgg.Name.Local == "\u006c\u0065\u0066\u0074" {
			_ecbdfa, _cfgf := _eb.ParseFloat(_fcgg.Value, 64)
			if _cfgf != nil {
				return _cfgf
			}
			_eccae.LeftAttr = &_ecbdfa
			continue
		}
		if _fcgg.Name.Local == "\u0072\u0069\u0067h\u0074" {
			_ggge, _agged := _eb.ParseFloat(_fcgg.Value, 64)
			if _agged != nil {
				return _agged
			}
			_eccae.RightAttr = &_ggge
			continue
		}
		if _fcgg.Name.Local == "\u0074\u006f\u0070" {
			_cceeg, _gecdb := _eb.ParseFloat(_fcgg.Value, 64)
			if _gecdb != nil {
				return _gecdb
			}
			_eccae.TopAttr = &_cceeg
			continue
		}
		if _fcgg.Name.Local == "\u0062\u006f\u0074\u0074\u006f\u006d" {
			_gggfa, _cacde := _eb.ParseFloat(_fcgg.Value, 64)
			if _cacde != nil {
				return _cacde
			}
			_eccae.BottomAttr = &_gggfa
			continue
		}
	}
_ddgab:
	for {
		_eefdd, _acgfa := d.Token()
		if _acgfa != nil {
			return _acgfa
		}
		switch _bfbcf := _eefdd.(type) {
		case _b.StartElement:
			switch _bfbcf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u006f\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u006f\u0070"}:
				_facc := NewCT_GradientStop()
				if _bedcc := d.DecodeElement(_facc, &_bfbcf); _bedcc != nil {
					return _bedcc
				}
				_eccae.Stop = append(_eccae.Stop, _facc)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c\u0020\u0025\u0076", _bfbcf.Name)
				if _badf := d.Skip(); _badf != nil {
					return _badf
				}
			}
		case _b.EndElement:
			break _ddgab
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Break and its children, prefixing error messages with path
func (_gafc *CT_Break) ValidateWithPath(path string) error { return nil }

func (_aefde ST_FormatAction) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_abdaa := _b.Attr{}
	_abdaa.Name = name
	switch _aefde {
	case ST_FormatActionUnset:
		_abdaa.Value = ""
	case ST_FormatActionBlank:
		_abdaa.Value = "\u0062\u006c\u0061n\u006b"
	case ST_FormatActionFormatting:
		_abdaa.Value = "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"
	case ST_FormatActionDrill:
		_abdaa.Value = "\u0064\u0072\u0069l\u006c"
	case ST_FormatActionFormula:
		_abdaa.Value = "\u0066o\u0072\u006d\u0075\u006c\u0061"
	}
	return _abdaa, nil
}

func (_debbb *CT_TableMissing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gbbdd *CT_GradientStop) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gbbdd.Color = NewCT_Color()
	for _, _cded := range start.Attr {
		if _cded.Name.Local == "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_dbbga, _edfe := _eb.ParseFloat(_cded.Value, 64)
			if _edfe != nil {
				return _edfe
			}
			_gbbdd.PositionAttr = _dbbga
			continue
		}
	}
_bagg:
	for {
		_baedg, _cdea := d.Token()
		if _cdea != nil {
			return _cdea
		}
		switch _gcfag := _baedg.(type) {
		case _b.StartElement:
			switch _gcfag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				if _edgfd := d.DecodeElement(_gbbdd.Color, &_gcfag); _edgfd != nil {
					return _edgfd
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u0020\u0025\u0076", _gcfag.Name)
				if _ccdaf := d.Skip(); _ccdaf != nil {
					return _ccdaf
				}
			}
		case _b.EndElement:
			break _bagg
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_SheetCalcPr() *CT_SheetCalcPr { _ceadd := &CT_SheetCalcPr{}; return _ceadd }

func (_adacg *CT_DdeItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fcfb:
	for {
		_facge, _ceca := d.Token()
		if _ceca != nil {
			return _ceca
		}
		switch _deafb := _facge.(type) {
		case _b.StartElement:
			switch _deafb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u0049\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u0049\u0074\u0065\u006d"}:
				_caef := NewCT_DdeItem()
				if _gbgcg := d.DecodeElement(_caef, &_deafb); _gbgcg != nil {
					return _gbgcg
				}
				_adacg.DdeItem = append(_adacg.DdeItem, _caef)
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _deafb.Name)
				if _bedea := d.Skip(); _bedea != nil {
					return _bedea
				}
			}
		case _b.EndElement:
			break _fcfb
		case _b.CharData:
		}
	}
	return nil
}

func (_dbde *CT_ExternalLinkChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_abcdc:
	for {
		_bcgdd, _degc := d.Token()
		if _degc != nil {
			return _degc
		}
		switch _geaf := _bcgdd.(type) {
		case _b.StartElement:
			switch _geaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}:
				_dbde.ExternalBook = NewCT_ExternalBook()
				if _ebcea := d.DecodeElement(_dbde.ExternalBook, &_geaf); _ebcea != nil {
					return _ebcea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}:
				_dbde.DdeLink = NewCT_DdeLink()
				if _dbda := d.DecodeElement(_dbde.DdeLink, &_geaf); _dbda != nil {
					return _dbda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}:
				_dbde.OleLink = NewCT_OleLink()
				if _dbaca := d.DecodeElement(_dbde.OleLink, &_geaf); _dbaca != nil {
					return _dbaca
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _geaf.Name)
				if _deeb := d.Skip(); _deeb != nil {
					return _deeb
				}
			}
		case _b.EndElement:
			break _abcdc
		case _b.CharData:
		}
	}
	return nil
}

type CT_Control struct {

	// Shape Id
	ShapeIdAttr uint32
	IdAttr      string

	// Control Name
	NameAttr *string

	// Embedded Control Properties
	ControlPr *CT_ControlPr
}

func (_fcffa ST_Scope) Validate() error { return _fcffa.ValidateWithPath("") }

func (_afacec ST_PageOrder) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_afacec.String(), start)
}

// ValidateWithPath validates the CT_DefinedName and its children, prefixing error messages with path
func (_cedeb *CT_DefinedName) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_MetadataStrings and its children, prefixing error messages with path
func (_bacbb *CT_MetadataStrings) ValidateWithPath(path string) error {
	for _bggcge, _baefe := range _bacbb.S {
		if _dbaeb := _baefe.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _bggcge)); _dbaeb != nil {
			return _dbaeb
		}
	}
	return nil
}

func (_bdaaffb *Workbook) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b"
	return _bdaaffb.CT_Workbook.MarshalXML(e, start)
}

type CT_AutoFilter struct {

	// Cell or Range Reference
	RefAttr *string

	// AutoFilter Column
	FilterColumn []*CT_FilterColumn

	// Sort State for Auto Filter
	SortState *CT_SortState
	ExtLst    *CT_ExtensionList
}

type CT_FilterColumn struct {

	// Filter Column Data
	ColIdAttr uint32

	// Hidden AutoFilter Button
	HiddenButtonAttr *bool

	// Show Filter Button
	ShowButtonAttr *bool

	// Filter Criteria
	Filters *CT_Filters

	// Top 10
	Top10 *CT_Top10

	// Custom Filters
	CustomFilters *CT_CustomFilters

	// Dynamic Filter
	DynamicFilter *CT_DynamicFilter

	// Color Filter Criteria
	ColorFilter *CT_ColorFilter

	// Icon Filter
	IconFilter *CT_IconFilter
	ExtLst     *CT_ExtensionList
}

func NewCT_MetadataStrings() *CT_MetadataStrings { _cbfe := &CT_MetadataStrings{}; return _cbfe }

type CT_MeasureGroups struct {

	// Measure Group Count
	CountAttr *uint32

	// OLAP Measure Group
	MeasureGroup []*CT_MeasureGroup
}

func NewCT_Filter() *CT_Filter { _gbcea := &CT_Filter{}; return _gbcea }

func (_defde *CT_Macrosheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_defde.SheetData = NewCT_SheetData()
_cecab:
	for {
		_aegcb, _geace := d.Token()
		if _geace != nil {
			return _geace
		}
		switch _dcfe := _aegcb.(type) {
		case _b.StartElement:
			switch _dcfe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_defde.SheetPr = NewCT_SheetPr()
				if _ebfb := d.DecodeElement(_defde.SheetPr, &_dcfe); _ebfb != nil {
					return _ebfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_defde.Dimension = NewCT_SheetDimension()
				if _bcbacg := d.DecodeElement(_defde.Dimension, &_dcfe); _bcbacg != nil {
					return _bcbacg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_defde.SheetViews = NewCT_SheetViews()
				if _dgac := d.DecodeElement(_defde.SheetViews, &_dcfe); _dgac != nil {
					return _dgac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_defde.SheetFormatPr = NewCT_SheetFormatPr()
				if _deffag := d.DecodeElement(_defde.SheetFormatPr, &_dcfe); _deffag != nil {
					return _deffag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}:
				_edgcd := NewCT_Cols()
				if _fbeac := d.DecodeElement(_edgcd, &_dcfe); _fbeac != nil {
					return _fbeac
				}
				_defde.Cols = append(_defde.Cols, _edgcd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				if _eccff := d.DecodeElement(_defde.SheetData, &_dcfe); _eccff != nil {
					return _eccff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_defde.SheetProtection = NewCT_SheetProtection()
				if _cbcg := d.DecodeElement(_defde.SheetProtection, &_dcfe); _cbcg != nil {
					return _cbcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_defde.AutoFilter = NewCT_AutoFilter()
				if _ebagc := d.DecodeElement(_defde.AutoFilter, &_dcfe); _ebagc != nil {
					return _ebagc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_defde.SortState = NewCT_SortState()
				if _cbgb := d.DecodeElement(_defde.SortState, &_dcfe); _cbgb != nil {
					return _cbgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}:
				_defde.DataConsolidate = NewCT_DataConsolidate()
				if _deaab := d.DecodeElement(_defde.DataConsolidate, &_dcfe); _deaab != nil {
					return _deaab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_defde.CustomSheetViews = NewCT_CustomSheetViews()
				if _ggecac := d.DecodeElement(_defde.CustomSheetViews, &_dcfe); _ggecac != nil {
					return _ggecac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_defde.PhoneticPr = NewCT_PhoneticPr()
				if _cdegd := d.DecodeElement(_defde.PhoneticPr, &_dcfe); _cdegd != nil {
					return _cdegd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}:
				_bffd := NewCT_ConditionalFormatting()
				if _affggf := d.DecodeElement(_bffd, &_dcfe); _affggf != nil {
					return _affggf
				}
				_defde.ConditionalFormatting = append(_defde.ConditionalFormatting, _bffd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_defde.PrintOptions = NewCT_PrintOptions()
				if _gcfcc := d.DecodeElement(_defde.PrintOptions, &_dcfe); _gcfcc != nil {
					return _gcfcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_defde.PageMargins = NewCT_PageMargins()
				if _faace := d.DecodeElement(_defde.PageMargins, &_dcfe); _faace != nil {
					return _faace
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_defde.PageSetup = NewCT_PageSetup()
				if _bfabe := d.DecodeElement(_defde.PageSetup, &_dcfe); _bfabe != nil {
					return _bfabe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_defde.HeaderFooter = NewCT_HeaderFooter()
				if _ddeba := d.DecodeElement(_defde.HeaderFooter, &_dcfe); _ddeba != nil {
					return _ddeba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_defde.RowBreaks = NewCT_PageBreak()
				if _gccfbg := d.DecodeElement(_defde.RowBreaks, &_dcfe); _gccfbg != nil {
					return _gccfbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_defde.ColBreaks = NewCT_PageBreak()
				if _cbgage := d.DecodeElement(_defde.ColBreaks, &_dcfe); _cbgage != nil {
					return _cbgage
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}:
				_defde.CustomProperties = NewCT_CustomProperties()
				if _ageeb := d.DecodeElement(_defde.CustomProperties, &_dcfe); _ageeb != nil {
					return _ageeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_defde.Drawing = NewCT_Drawing()
				if _gdffb := d.DecodeElement(_defde.Drawing, &_dcfe); _gdffb != nil {
					return _gdffb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_defde.LegacyDrawing = NewCT_LegacyDrawing()
				if _caebg := d.DecodeElement(_defde.LegacyDrawing, &_dcfe); _caebg != nil {
					return _caebg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_defde.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _affff := d.DecodeElement(_defde.LegacyDrawingHF, &_dcfe); _affff != nil {
					return _affff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_defde.DrawingHF = NewCT_DrawingHF()
				if _fegcb := d.DecodeElement(_defde.DrawingHF, &_dcfe); _fegcb != nil {
					return _fegcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_defde.Picture = NewCT_SheetBackgroundPicture()
				if _bdbfb := d.DecodeElement(_defde.Picture, &_dcfe); _bdbfb != nil {
					return _bdbfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_defde.OleObjects = NewCT_OleObjects()
				if _bdgac := d.DecodeElement(_defde.OleObjects, &_dcfe); _bdgac != nil {
					return _bdgac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_defde.ExtLst = NewCT_ExtensionList()
				if _dfedc := d.DecodeElement(_defde.ExtLst, &_dcfe); _dfedc != nil {
					return _dfedc
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004da\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074 \u0025\u0076", _dcfe.Name)
				if _gdfgd := d.Skip(); _gdfgd != nil {
					return _gdfgd
				}
			}
		case _b.EndElement:
			break _cecab
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalSheetData and its children, prefixing error messages with path
func (_dffag *CT_ExternalSheetData) ValidateWithPath(path string) error {
	for _cgffbg, _edcff := range _dffag.Row {
		if _befaa := _edcff.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0052\u006f\u0077\u005b\u0025\u0064\u005d", path, _cgffbg)); _befaa != nil {
			return _befaa
		}
	}
	return nil
}

type CT_PivotHierarchy struct {

	// Outline New Levels
	OutlineAttr *bool

	// Multiple Field Filters
	MultipleItemSelectionAllowedAttr *bool

	// New Levels Subtotals At Top
	SubtotalTopAttr *bool

	// Show In Field List
	ShowInFieldListAttr *bool

	// Drag To Row
	DragToRowAttr *bool

	// Drag To Column
	DragToColAttr *bool

	// Drag to Page
	DragToPageAttr *bool

	// Drag To Data
	DragToDataAttr *bool

	// Drag Off
	DragOffAttr *bool

	// Inclusive Manual Filter
	IncludeNewItemsInFilterAttr *bool

	// Hierarchy Caption
	CaptionAttr *string

	// OLAP Member Properties
	Mps *CT_MemberProperties

	// Members
	Members []*CT_Members

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func NewCT_CustomFilters() *CT_CustomFilters { _eeba := &CT_CustomFilters{}; return _eeba }

func (_cegde ST_CfType) ValidateWithPath(path string) error {
	switch _cegde {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cegde))
	}
	return nil
}

func (_afcde ST_UpdateLinks) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dfbba := _b.Attr{}
	_dfbba.Name = name
	switch _afcde {
	case ST_UpdateLinksUnset:
		_dfbba.Value = ""
	case ST_UpdateLinksUserSet:
		_dfbba.Value = "\u0075s\u0065\u0072\u0053\u0065\u0074"
	case ST_UpdateLinksNever:
		_dfbba.Value = "\u006e\u0065\u0076e\u0072"
	case ST_UpdateLinksAlways:
		_dfbba.Value = "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return _dfbba, nil
}

// Validate validates the CT_ServerFormat and its children
func (_facbg *CT_ServerFormat) Validate() error {
	return _facbg.ValidateWithPath("\u0043T\u005fS\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074")
}

// ValidateWithPath validates the CT_NumFmt and its children, prefixing error messages with path
func (_eefeb *CT_NumFmt) ValidateWithPath(path string) error { return nil }

func NewCT_WorksheetSource() *CT_WorksheetSource { _aecfea := &CT_WorksheetSource{}; return _aecfea }

func NewCT_CellStyleXfs() *CT_CellStyleXfs { _begba := &CT_CellStyleXfs{}; return _begba }

// ValidateWithPath validates the CT_TupleCache and its children, prefixing error messages with path
func (_fdfdd *CT_TupleCache) ValidateWithPath(path string) error {
	if _fdfdd.Entries != nil {
		if _dbfba := _fdfdd.Entries.ValidateWithPath(path + "\u002f\u0045\u006e\u0074\u0072\u0069\u0065\u0073"); _dbfba != nil {
			return _dbfba
		}
	}
	if _fdfdd.Sets != nil {
		if _dcgbd := _fdfdd.Sets.ValidateWithPath(path + "\u002f\u0053\u0065t\u0073"); _dcgbd != nil {
			return _dcgbd
		}
	}
	if _fdfdd.QueryCache != nil {
		if _fabdf := _fdfdd.QueryCache.ValidateWithPath(path + "/\u0051\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"); _fabdf != nil {
			return _fabdf
		}
	}
	if _fdfdd.ServerFormats != nil {
		if _dedgad := _fdfdd.ServerFormats.ValidateWithPath(path + "\u002f\u0053\u0065\u0072\u0076\u0065\u0072\u0046\u006fr\u006d\u0061\u0074\u0073"); _dedgad != nil {
			return _dedgad
		}
	}
	if _fdfdd.ExtLst != nil {
		if _cdedfg := _fdfdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cdedfg != nil {
			return _cdedfg
		}
	}
	return nil
}

type CT_ColorFilter struct {

	// Differential Format Record Id
	DxfIdAttr *uint32

	// Filter By Cell Color
	CellColorAttr *bool
}

func (_eadbgd *CT_colItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eadbgd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_eadbgd.CountAttr)})
	}
	e.EncodeToken(start)
	_acge := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069"}}
	for _, _feeab := range _eadbgd.I {
		e.EncodeElement(_feeab, _acge)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gade *CT_MeasureGroups) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gabgab := range start.Attr {
		if _gabgab.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aebcc, _feecd := _eb.ParseUint(_gabgab.Value, 10, 32)
			if _feecd != nil {
				return _feecd
			}
			_fdagf := uint32(_aebcc)
			_gade.CountAttr = &_fdagf
			continue
		}
	}
_gcfae:
	for {
		_aagb, _bedbc := d.Token()
		if _bedbc != nil {
			return _bedbc
		}
		switch _cabcg := _aagb.(type) {
		case _b.StartElement:
			switch _cabcg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}:
				_dfbde := NewCT_MeasureGroup()
				if _bbdaab := d.DecodeElement(_dfbde, &_cabcg); _bbdaab != nil {
					return _bbdaab
				}
				_gade.MeasureGroup = append(_gade.MeasureGroup, _dfbde)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073\u0020\u0025v", _cabcg.Name)
				if _abfcc := d.Skip(); _abfcc != nil {
					return _abfcc
				}
			}
		case _b.EndElement:
			break _gcfae
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Comment and its children
func (_deccf *CT_Comment) Validate() error {
	return _deccf.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074")
}

func (_cdfdb *CT_ObjectAnchor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cdfdb.MoveWithCellsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u006f\u0076\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cdfdb.MoveWithCellsAttr))})
	}
	if _cdfdb.SizeWithCellsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0069\u007a\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cdfdb.SizeWithCellsAttr))})
	}
	e.EncodeToken(start)
	_adaff := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0066\u0072\u006f\u006d"}}
	e.EncodeElement(_cdfdb.From, _adaff)
	_aaffb := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0074\u006f"}}
	e.EncodeElement(_cdfdb.To, _aaffb)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_DdeValueType byte

func (_gggce ST_SortType) String() string {
	switch _gggce {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case 3:
		return "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	case 4:
		return "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061"
	case 5:
		return "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061"
	case 6:
		return "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c"
	case 7:
		return "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c"
	}
	return ""
}

func (_cegfg *CT_SheetPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cegfg.SyncHorizontalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0079\u006e\u0063\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cegfg.SyncHorizontalAttr))})
	}
	if _cegfg.SyncVerticalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0079\u006ec\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cegfg.SyncVerticalAttr))})
	}
	if _cegfg.SyncRefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073y\u006e\u0063\u0052\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", *_cegfg.SyncRefAttr)})
	}
	if _cegfg.TransitionEvaluationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0045v\u0061\u006c\u0075\u0061ti\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cegfg.TransitionEvaluationAttr))})
	}
	if _cegfg.TransitionEntryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074r\u0061n\u0073\u0069\u0074\u0069\u006f\u006e\u0045\u006e\u0074\u0072\u0079"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cegfg.TransitionEntryAttr))})
	}
	if _cegfg.PublishedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cegfg.PublishedAttr))})
	}
	if _cegfg.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_cegfg.CodeNameAttr)})
	}
	if _cegfg.FilterModeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072\u004d\u006f\u0064\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cegfg.FilterModeAttr))})
	}
	if _cegfg.EnableFormatConditionsCalculationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0061\u0062\u006c\u0065F\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0073\u0043\u0061\u006c\u0063\u0075\u006ca\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cegfg.EnableFormatConditionsCalculationAttr))})
	}
	e.EncodeToken(start)
	if _cegfg.TabColor != nil {
		_cfcbg := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_cegfg.TabColor, _cfcbg)
	}
	if _cegfg.OutlinePr != nil {
		_cebgb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ao\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072"}}
		e.EncodeElement(_cegfg.OutlinePr, _cebgb)
	}
	if _cegfg.PageSetUpPr != nil {
		_bgdff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u0053\u0065t\u0055\u0070\u0050\u0072"}}
		e.EncodeElement(_cegfg.PageSetUpPr, _bgdff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cfcae ST_CellFormulaType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cfcae.String(), start)
}

// Validate validates the CT_Reviewed and its children
func (_gedbb *CT_Reviewed) Validate() error {
	return _gedbb.ValidateWithPath("C\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064")
}

// Validate validates the CT_CustomChartsheetView and its children
func (_ggca *CT_CustomChartsheetView) Validate() error {
	return _ggca.ValidateWithPath("\u0043\u0054\u005fCu\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077")
}

// ValidateWithPath validates the CT_PivotCacheDefinition and its children, prefixing error messages with path
func (_gacgb *CT_PivotCacheDefinition) ValidateWithPath(path string) error {
	if _cfdad := _gacgb.CacheSource.ValidateWithPath(path + "\u002f\u0043\u0061c\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"); _cfdad != nil {
		return _cfdad
	}
	if _bbadf := _gacgb.CacheFields.ValidateWithPath(path + "\u002f\u0043\u0061c\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"); _bbadf != nil {
		return _bbadf
	}
	if _gacgb.CacheHierarchies != nil {
		if _edeaf := _gacgb.CacheHierarchies.ValidateWithPath(path + "\u002f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072c\u0068\u0069\u0065\u0073"); _edeaf != nil {
			return _edeaf
		}
	}
	if _gacgb.Kpis != nil {
		if _dgfdf := _gacgb.Kpis.ValidateWithPath(path + "\u002f\u004b\u0070i\u0073"); _dgfdf != nil {
			return _dgfdf
		}
	}
	if _gacgb.TupleCache != nil {
		if _ffcdc := _gacgb.TupleCache.ValidateWithPath(path + "/\u0054\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"); _ffcdc != nil {
			return _ffcdc
		}
	}
	if _gacgb.CalculatedItems != nil {
		if _dacaa := _gacgb.CalculatedItems.ValidateWithPath(path + "\u002f\u0043a\u006c\u0063\u0075l\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"); _dacaa != nil {
			return _dacaa
		}
	}
	if _gacgb.CalculatedMembers != nil {
		if _aeceg := _gacgb.CalculatedMembers.ValidateWithPath(path + "\u002fC\u0061l\u0063\u0075\u006c\u0061\u0074e\u0064\u004de\u006d\u0062\u0065\u0072\u0073"); _aeceg != nil {
			return _aeceg
		}
	}
	if _gacgb.Dimensions != nil {
		if _gfbeeg := _gacgb.Dimensions.ValidateWithPath(path + "/\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"); _gfbeeg != nil {
			return _gfbeeg
		}
	}
	if _gacgb.MeasureGroups != nil {
		if _dfecb := _gacgb.MeasureGroups.ValidateWithPath(path + "\u002f\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0047r\u006f\u0075\u0070\u0073"); _dfecb != nil {
			return _dfecb
		}
	}
	if _gacgb.Maps != nil {
		if _bebfb := _gacgb.Maps.ValidateWithPath(path + "\u002f\u004d\u0061p\u0073"); _bebfb != nil {
			return _bebfb
		}
	}
	if _gacgb.ExtLst != nil {
		if _bafdc := _gacgb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bafdc != nil {
			return _bafdc
		}
	}
	return nil
}

type CT_TablePart struct{ IdAttr string }

func (_agffa *CT_Dxfs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebag := range start.Attr {
		if _ebag.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gbcdg, _cbgae := _eb.ParseUint(_ebag.Value, 10, 32)
			if _cbgae != nil {
				return _cbgae
			}
			_cdcae := uint32(_gbcdg)
			_agffa.CountAttr = &_cdcae
			continue
		}
	}
_ggfe:
	for {
		_bbbca, _ebbbg := d.Token()
		if _ebbbg != nil {
			return _ebbbg
		}
		switch _edcc := _bbbca.(type) {
		case _b.StartElement:
			switch _edcc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}:
				_afcec := NewCT_Dxf()
				if _baage := d.DecodeElement(_afcec, &_edcc); _baage != nil {
					return _baage
				}
				_agffa.Dxf = append(_agffa.Dxf, _afcec)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0044\u0078\u0066\u0073\u0020\u0025\u0076", _edcc.Name)
				if _fadab := d.Skip(); _fadab != nil {
					return _fadab
				}
			}
		case _b.EndElement:
			break _ggfe
		case _b.CharData:
		}
	}
	return nil
}

type CT_PageBreak struct {

	// Page Break Count
	CountAttr *uint32

	// Manual Break Count
	ManualBreakCountAttr *uint32

	// Break
	Brk []*CT_Break
}

type CT_Workbook struct {

	// Document Conformance Class
	ConformanceAttr _bb.ST_ConformanceClass

	// File Version
	FileVersion *CT_FileVersion

	// File Sharing
	FileSharing *CT_FileSharing

	// Workbook Properties
	WorkbookPr *CT_WorkbookPr

	// Workbook Protection
	WorkbookProtection *CT_WorkbookProtection

	// Workbook Views
	BookViews *CT_BookViews

	// Sheets
	Sheets *CT_Sheets

	// Function Groups
	FunctionGroups *CT_FunctionGroups

	// External References
	ExternalReferences *CT_ExternalReferences

	// Defined Names
	DefinedNames *CT_DefinedNames

	// Calculation Properties
	CalcPr *CT_CalcPr

	// Embedded Object Size
	OleSize *CT_OleSize

	// Custom Workbook Views
	CustomWorkbookViews *CT_CustomWorkbookViews

	// PivotCaches
	PivotCaches *CT_PivotCaches

	// Smart Tag Properties
	SmartTagPr *CT_SmartTagPr

	// Smart Tag Types
	SmartTagTypes *CT_SmartTagTypes

	// Web Publishing Properties
	WebPublishing *CT_WebPublishing

	// File Recovery Properties
	FileRecoveryPr []*CT_FileRecoveryPr

	// Web Publish Objects
	WebPublishObjects *CT_WebPublishObjects

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_debac *CT_Selection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _debac.PaneAttr != ST_PaneUnset {
		_eacgbe, _dfded := _debac.PaneAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0061\u006e\u0065"})
		if _dfded != nil {
			return _dfded
		}
		start.Attr = append(start.Attr, _eacgbe)
	}
	if _debac.ActiveCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0065\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_debac.ActiveCellAttr)})
	}
	if _debac.ActiveCellIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0063\u0074i\u0076\u0065\u0043\u0065\u006c\u006c\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_debac.ActiveCellIdAttr)})
	}
	if _debac.SqrefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _ec.Sprintf("\u0025\u0076", *_debac.SqrefAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_abacfe ST_TotalsRowFunction) ValidateWithPath(path string) error {
	switch _abacfe {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abacfe))
	}
	return nil
}

func (_afde *CT_CacheSource) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_abcc, _adfe := _afde.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _adfe != nil {
		return _adfe
	}
	start.Attr = append(start.Attr, _abcc)
	if _afde.ConnectionIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_afde.ConnectionIdAttr)})
	}
	e.EncodeToken(start)
	if _afde.WorksheetSource != nil {
		_fffe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003aw\u006f\u0072\u006b\u0073\u0068e\u0065\u0074S\u006f\u0075\u0072\u0063\u0065"}}
		e.EncodeElement(_afde.WorksheetSource, _fffe)
	}
	if _afde.Consolidation != nil {
		_badc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0063\u006f\u006es\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_afde.Consolidation, _badc)
	}
	if _afde.ExtLst != nil {
		_aeb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_afde.ExtLst, _aeb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_FutureMetadata struct {

	// Metadata Type Name
	NameAttr string

	// Future Metadata Block Count
	CountAttr *uint32

	// Future Metadata Block
	Bk []*CT_FutureMetadataBlock

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_aaebc ST_CellType) ValidateWithPath(path string) error {
	switch _aaebc {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aaebc))
	}
	return nil
}

func (_aefbc ST_ParameterType) ValidateWithPath(path string) error {
	switch _aefbc {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aefbc))
	}
	return nil
}

const (
	ST_MdxKPIPropertyUnset ST_MdxKPIProperty = 0
	ST_MdxKPIPropertyV     ST_MdxKPIProperty = 1
	ST_MdxKPIPropertyG     ST_MdxKPIProperty = 2
	ST_MdxKPIPropertyS     ST_MdxKPIProperty = 3
	ST_MdxKPIPropertyT     ST_MdxKPIProperty = 4
	ST_MdxKPIPropertyW     ST_MdxKPIProperty = 5
	ST_MdxKPIPropertyM     ST_MdxKPIProperty = 6
)

func (_dafeeb *ST_Pane) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dafeeb = 0
	case "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
		*_dafeeb = 1
	case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
		*_dafeeb = 2
	case "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
		*_dafeeb = 3
	case "\u0074o\u0070\u004c\u0065\u0066\u0074":
		*_dafeeb = 4
	}
	return nil
}

// Validate validates the CT_PCDSCPage and its children
func (_bfbfg *CT_PCDSCPage) Validate() error {
	return _bfbfg.ValidateWithPath("\u0043\u0054\u005fP\u0043\u0044\u0053\u0043\u0050\u0061\u0067\u0065")
}

type CT_MetadataBlock struct {

	// Metadata Record
	Rc []*CT_MetadataRecord
}

type CT_Sheet struct {

	// Sheet Name
	NameAttr string

	// Sheet Tab Id
	SheetIdAttr uint32

	// Visible State
	StateAttr ST_SheetState
	IdAttr    string
}

func (_aggfe *CT_RevisionMove) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _aggfe.SheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _aggfe.SourceAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0073\u0074\u0069\u006e\u0061\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", _aggfe.DestinationAttr)})
	if _aggfe.SourceSheetIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_aggfe.SourceSheetIdAttr)})
	}
	if _aggfe.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_aggfe.RIdAttr)})
	}
	if _aggfe.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aggfe.UaAttr))})
	}
	if _aggfe.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aggfe.RaAttr))})
	}
	e.EncodeToken(start)
	if _aggfe.Undo != nil {
		_gbfdg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0075\u006e\u0064\u006f"}}
		for _, _baade := range _aggfe.Undo {
			e.EncodeElement(_baade, _gbfdg)
		}
	}
	if _aggfe.Rcc != nil {
		_aaffd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0063"}}
		for _, _eaecf := range _aggfe.Rcc {
			e.EncodeElement(_eaecf, _aaffd)
		}
	}
	if _aggfe.Rfmt != nil {
		_acfe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0072\u0066\u006d\u0074"}}
		for _, _ebfef := range _aggfe.Rfmt {
			e.EncodeElement(_ebfef, _acfe)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Scenario and its children
func (_faeac *CT_Scenario) Validate() error {
	return _faeac.ValidateWithPath("C\u0054\u005f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f")
}

type CT_MergeCell struct {

	// Reference
	RefAttr string
}

type CT_MdxSet struct {

	// Set Definition Index
	NsAttr uint32

	// Sort By Member Index Count
	CAttr *uint32

	// Set Sort Order
	OAttr ST_MdxSetOrder

	// Member Unique Name Index
	N []*CT_MetadataStringIndex
}

type CT_CalcPr struct {

	// Calculation Id
	CalcIdAttr *uint32

	// Calculation Mode
	CalcModeAttr ST_CalcMode

	// Full Calculation On Load
	FullCalcOnLoadAttr *bool

	// Reference Mode
	RefModeAttr ST_RefMode

	// Calculation Iteration
	IterateAttr *bool

	// Iteration Count
	IterateCountAttr *uint32

	// Iterative Calculation Delta
	IterateDeltaAttr *float64

	// Full Precision Calculation
	FullPrecisionAttr *bool

	// Calc Completed
	CalcCompletedAttr *bool

	// Calculate On Save
	CalcOnSaveAttr *bool

	// Concurrent Calculations
	ConcurrentCalcAttr *bool

	// Concurrent Thread Manual Count
	ConcurrentManualCountAttr *uint32

	// Force Full Calculation
	ForceFullCalcAttr *bool
}

func (_ffbc *CT_CellAlignment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ffbc.HorizontalAttr != ST_HorizontalAlignmentUnset {
		_feea, _cabe := _ffbc.HorizontalAttr.MarshalXMLAttr(_b.Name{Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"})
		if _cabe != nil {
			return _cabe
		}
		start.Attr = append(start.Attr, _feea)
	}
	if _ffbc.VerticalAttr != ST_VerticalAlignmentUnset {
		_cdgd, _edagb := _ffbc.VerticalAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"})
		if _edagb != nil {
			return _edagb
		}
		start.Attr = append(start.Attr, _cdgd)
	}
	if _ffbc.TextRotationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0065\u0078t\u0052\u006f\u0074\u0061\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_ffbc.TextRotationAttr)})
	}
	if _ffbc.WrapTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0072\u0061\u0070\u0054\u0065\u0078\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ffbc.WrapTextAttr))})
	}
	if _ffbc.IndentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0064\u0065\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ffbc.IndentAttr)})
	}
	if _ffbc.RelativeIndentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0049n\u0064\u0065\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ffbc.RelativeIndentAttr)})
	}
	if _ffbc.JustifyLastLineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006au\u0073t\u0069\u0066\u0079\u004c\u0061\u0073\u0074\u004c\u0069\u006e\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ffbc.JustifyLastLineAttr))})
	}
	if _ffbc.ShrinkToFitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068\u0072\u0069\u006e\u006b\u0054\u006f\u0046\u0069\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ffbc.ShrinkToFitAttr))})
	}
	if _ffbc.ReadingOrderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0061d\u0069\u006e\u0067\u004f\u0072\u0064\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_ffbc.ReadingOrderAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_febef *CT_PivotArea) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fecdbb := range start.Attr {
		if _fecdbb.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_dggfd, _cfacab := _eb.ParseBool(_fecdbb.Value)
			if _cfacab != nil {
				return _cfacab
			}
			_febef.OutlineAttr = &_dggfd
			continue
		}
		if _fecdbb.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_cddaf, _ceffe := _eb.ParseInt(_fecdbb.Value, 10, 32)
			if _ceffe != nil {
				return _ceffe
			}
			_geeac := int32(_cddaf)
			_febef.FieldAttr = &_geeac
			continue
		}
		if _fecdbb.Name.Local == "\u0064\u0061\u0074\u0061\u004f\u006e\u006c\u0079" {
			_bcfe, _eggbgb := _eb.ParseBool(_fecdbb.Value)
			if _eggbgb != nil {
				return _eggbgb
			}
			_febef.DataOnlyAttr = &_bcfe
			continue
		}
		if _fecdbb.Name.Local == "\u006ca\u0062\u0065\u006c\u004f\u006e\u006cy" {
			_geccf, _ebadg := _eb.ParseBool(_fecdbb.Value)
			if _ebadg != nil {
				return _ebadg
			}
			_febef.LabelOnlyAttr = &_geccf
			continue
		}
		if _fecdbb.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0052\u006f\u0077" {
			_fabed, _efgdd := _eb.ParseBool(_fecdbb.Value)
			if _efgdd != nil {
				return _efgdd
			}
			_febef.GrandRowAttr = &_fabed
			continue
		}
		if _fecdbb.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0043\u006f\u006c" {
			_dcaa, _gfcda := _eb.ParseBool(_fecdbb.Value)
			if _gfcda != nil {
				return _gfcda
			}
			_febef.GrandColAttr = &_dcaa
			continue
		}
		if _fecdbb.Name.Local == "\u0063\u0061\u0063\u0068\u0065\u0049\u006e\u0064\u0065\u0078" {
			_beedgc, _dccce := _eb.ParseBool(_fecdbb.Value)
			if _dccce != nil {
				return _dccce
			}
			_febef.CacheIndexAttr = &_beedgc
			continue
		}
		if _fecdbb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_febef.TypeAttr.UnmarshalXMLAttr(_fecdbb)
			continue
		}
		if _fecdbb.Name.Local == "\u006f\u0066\u0066\u0073\u0065\u0074" {
			_fefbec, _bgaea := _fecdbb.Value, error(nil)
			if _bgaea != nil {
				return _bgaea
			}
			_febef.OffsetAttr = &_fefbec
			continue
		}
		if _fecdbb.Name.Local == "c\u006f\u006c\u006c\u0061\u0070\u0073e\u0064\u004c\u0065\u0076\u0065\u006c\u0073\u0041\u0072e\u0053\u0075\u0062t\u006ft\u0061\u006c\u0073" {
			_babace, _decaee := _eb.ParseBool(_fecdbb.Value)
			if _decaee != nil {
				return _decaee
			}
			_febef.CollapsedLevelsAreSubtotalsAttr = &_babace
			continue
		}
		if _fecdbb.Name.Local == "\u0061\u0078\u0069\u0073" {
			_febef.AxisAttr.UnmarshalXMLAttr(_fecdbb)
			continue
		}
		if _fecdbb.Name.Local == "\u0066\u0069\u0065\u006c\u0064\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_bfgdag, _gddag := _eb.ParseUint(_fecdbb.Value, 10, 32)
			if _gddag != nil {
				return _gddag
			}
			_egcede := uint32(_bfgdag)
			_febef.FieldPositionAttr = &_egcede
			continue
		}
	}
_bebcf:
	for {
		_acgc, _ebdff := d.Token()
		if _ebdff != nil {
			return _ebdff
		}
		switch _adeeg := _acgc.(type) {
		case _b.StartElement:
			switch _adeeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"}:
				_febef.References = NewCT_PivotAreaReferences()
				if _gaeebc := d.DecodeElement(_febef.References, &_adeeg); _gaeebc != nil {
					return _gaeebc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_febef.ExtLst = NewCT_ExtensionList()
				if _dfaec := d.DecodeElement(_febef.ExtLst, &_adeeg); _dfaec != nil {
					return _dfaec
				}
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0069\u0076o\u0074\u0041\u0072\u0065\u0061\u0020\u0025\u0076", _adeeg.Name)
				if _ggecg := d.Skip(); _ggecg != nil {
					return _ggecg
				}
			}
		case _b.EndElement:
			break _bebcf
		case _b.CharData:
		}
	}
	return nil
}

type CT_ChartsheetProtection struct {

	// Password
	PasswordAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Contents
	ContentAttr *bool

	// Objects Locked
	ObjectsAttr *bool
}

// ValidateWithPath validates the CT_FunctionGroup and its children, prefixing error messages with path
func (_dccdb *CT_FunctionGroup) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_OleObjects and its children, prefixing error messages with path
func (_ccgbb *CT_OleObjects) ValidateWithPath(path string) error {
	for _fbdbe, _ccfbb := range _ccgbb.OleObject {
		if _fbeeaf := _ccfbb.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u004f\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u005b\u0025\u0064\u005d", path, _fbdbe)); _fbeeaf != nil {
			return _fbeeaf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Schema and its children, prefixing error messages with path
func (_ebbeec *CT_Schema) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_RElt and its children, prefixing error messages with path
func (_accac *CT_RElt) ValidateWithPath(path string) error {
	if _accac.RPr != nil {
		if _efbggf := _accac.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _efbggf != nil {
			return _efbggf
		}
	}
	return nil
}

// Validate validates the CT_OleObject and its children
func (_aebbef *CT_OleObject) Validate() error {
	return _aebbef.ValidateWithPath("\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074")
}

const (
	ST_ShowDataAsUnset          ST_ShowDataAs = 0
	ST_ShowDataAsNormal         ST_ShowDataAs = 1
	ST_ShowDataAsDifference     ST_ShowDataAs = 2
	ST_ShowDataAsPercent        ST_ShowDataAs = 3
	ST_ShowDataAsPercentDiff    ST_ShowDataAs = 4
	ST_ShowDataAsRunTotal       ST_ShowDataAs = 5
	ST_ShowDataAsPercentOfRow   ST_ShowDataAs = 6
	ST_ShowDataAsPercentOfCol   ST_ShowDataAs = 7
	ST_ShowDataAsPercentOfTotal ST_ShowDataAs = 8
	ST_ShowDataAsIndex          ST_ShowDataAs = 9
)

func NewCT_IndexedColors() *CT_IndexedColors { _ddgac := &CT_IndexedColors{}; return _ddgac }

// Validate validates the CT_Comments and its children
func (_fagd *CT_Comments) Validate() error {
	return _fagd.ValidateWithPath("C\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073")
}

func _gddba(_eggfeb bool) uint8 {
	if _eggfeb {
		return 1
	}
	return 0
}

func NewCT_Cols() *CT_Cols { _ceaeg := &CT_Cols{}; return _ceaeg }

// ValidateWithPath validates the CT_SheetViews and its children, prefixing error messages with path
func (_ddffg *CT_SheetViews) ValidateWithPath(path string) error {
	for _cefcfg, _dbcff := range _ddffg.SheetView {
		if _dbbcg := _dbcff.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u0056\u0069\u0065\u0077\u005b\u0025\u0064\u005d", path, _cefcfg)); _dbbcg != nil {
			return _dbbcg
		}
	}
	if _ddffg.ExtLst != nil {
		if _ffdgaf := _ddffg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffdgaf != nil {
			return _ffdgaf
		}
	}
	return nil
}

func (_dfab *CT_Cols) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cbaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c"}}
	for _, _fbeae := range _dfab.Col {
		e.EncodeElement(_fbeae, _cbaf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_HeaderFooter and its children
func (_bafcee *CT_HeaderFooter) Validate() error {
	return _bafcee.ValidateWithPath("\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072")
}

type ST_RefMode byte

// Validate validates the CT_CellWatch and its children
func (_acfc *CT_CellWatch) Validate() error {
	return _acfc.ValidateWithPath("\u0043\u0054\u005fC\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068")
}

func NewTable() *Table { _bafgba := &Table{}; _bafgba.CT_Table = *NewCT_Table(); return _bafgba }

func (_bdage *CT_MergeCell) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eabdg := range start.Attr {
		if _eabdg.Name.Local == "\u0072\u0065\u0066" {
			_dgcd, _bdad := _eabdg.Value, error(nil)
			if _bdad != nil {
				return _bdad
			}
			_bdage.RefAttr = _dgcd
			continue
		}
	}
	for {
		_fbbgc, _dcfea := d.Token()
		if _dcfea != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065r\u0067\u0065\u0043\u0065\u006c\u006c\u003a\u0020\u0025\u0073", _dcfea)
		}
		if _ebef, _ffaf := _fbbgc.(_b.EndElement); _ffaf && _ebef.Name == start.Name {
			break
		}
	}
	return nil
}

func (_efdeaa *Worksheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_efdeaa.CT_Worksheet = *NewCT_Worksheet()
_acdbg:
	for {
		_geedd, _gfbdaa := d.Token()
		if _gfbdaa != nil {
			return _gfbdaa
		}
		switch _bdcad := _geedd.(type) {
		case _b.StartElement:
			switch _bdcad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_efdeaa.SheetPr = NewCT_SheetPr()
				if _cdgegc := d.DecodeElement(_efdeaa.SheetPr, &_bdcad); _cdgegc != nil {
					return _cdgegc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_efdeaa.Dimension = NewCT_SheetDimension()
				if _gfggdg := d.DecodeElement(_efdeaa.Dimension, &_bdcad); _gfggdg != nil {
					return _gfggdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_efdeaa.SheetViews = NewCT_SheetViews()
				if _dfcdd := d.DecodeElement(_efdeaa.SheetViews, &_bdcad); _dfcdd != nil {
					return _dfcdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_efdeaa.SheetFormatPr = NewCT_SheetFormatPr()
				if _eecebgf := d.DecodeElement(_efdeaa.SheetFormatPr, &_bdcad); _eecebgf != nil {
					return _eecebgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}:
				_dccba := NewCT_Cols()
				if _eecfd := d.DecodeElement(_dccba, &_bdcad); _eecfd != nil {
					return _eecfd
				}
				_efdeaa.Cols = append(_efdeaa.Cols, _dccba)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				if _aefaa := d.DecodeElement(_efdeaa.SheetData, &_bdcad); _aefaa != nil {
					return _aefaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}:
				_efdeaa.SheetCalcPr = NewCT_SheetCalcPr()
				if _fggcce := d.DecodeElement(_efdeaa.SheetCalcPr, &_bdcad); _fggcce != nil {
					return _fggcce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_efdeaa.SheetProtection = NewCT_SheetProtection()
				if _gcafc := d.DecodeElement(_efdeaa.SheetProtection, &_bdcad); _gcafc != nil {
					return _gcafc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}:
				_efdeaa.ProtectedRanges = NewCT_ProtectedRanges()
				if _ecgab := d.DecodeElement(_efdeaa.ProtectedRanges, &_bdcad); _ecgab != nil {
					return _ecgab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}:
				_efdeaa.Scenarios = NewCT_Scenarios()
				if _ddfce := d.DecodeElement(_efdeaa.Scenarios, &_bdcad); _ddfce != nil {
					return _ddfce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_efdeaa.AutoFilter = NewCT_AutoFilter()
				if _feccb := d.DecodeElement(_efdeaa.AutoFilter, &_bdcad); _feccb != nil {
					return _feccb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_efdeaa.SortState = NewCT_SortState()
				if _fgdab := d.DecodeElement(_efdeaa.SortState, &_bdcad); _fgdab != nil {
					return _fgdab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}:
				_efdeaa.DataConsolidate = NewCT_DataConsolidate()
				if _dccgda := d.DecodeElement(_efdeaa.DataConsolidate, &_bdcad); _dccgda != nil {
					return _dccgda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_efdeaa.CustomSheetViews = NewCT_CustomSheetViews()
				if _bcfeb := d.DecodeElement(_efdeaa.CustomSheetViews, &_bdcad); _bcfeb != nil {
					return _bcfeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}:
				_efdeaa.MergeCells = NewCT_MergeCells()
				if _gbdeed := d.DecodeElement(_efdeaa.MergeCells, &_bdcad); _gbdeed != nil {
					return _gbdeed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_efdeaa.PhoneticPr = NewCT_PhoneticPr()
				if _ggdae := d.DecodeElement(_efdeaa.PhoneticPr, &_bdcad); _ggdae != nil {
					return _ggdae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}:
				_fgeefd := NewCT_ConditionalFormatting()
				if _badfb := d.DecodeElement(_fgeefd, &_bdcad); _badfb != nil {
					return _badfb
				}
				_efdeaa.ConditionalFormatting = append(_efdeaa.ConditionalFormatting, _fgeefd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}:
				_efdeaa.DataValidations = NewCT_DataValidations()
				if _edfffa := d.DecodeElement(_efdeaa.DataValidations, &_bdcad); _edfffa != nil {
					return _edfffa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}:
				_efdeaa.Hyperlinks = NewCT_Hyperlinks()
				if _eaacef := d.DecodeElement(_efdeaa.Hyperlinks, &_bdcad); _eaacef != nil {
					return _eaacef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_efdeaa.PrintOptions = NewCT_PrintOptions()
				if _eafeg := d.DecodeElement(_efdeaa.PrintOptions, &_bdcad); _eafeg != nil {
					return _eafeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_efdeaa.PageMargins = NewCT_PageMargins()
				if _ccgffd := d.DecodeElement(_efdeaa.PageMargins, &_bdcad); _ccgffd != nil {
					return _ccgffd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_efdeaa.PageSetup = NewCT_PageSetup()
				if _dabgc := d.DecodeElement(_efdeaa.PageSetup, &_bdcad); _dabgc != nil {
					return _dabgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_efdeaa.HeaderFooter = NewCT_HeaderFooter()
				if _ggfde := d.DecodeElement(_efdeaa.HeaderFooter, &_bdcad); _ggfde != nil {
					return _ggfde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_efdeaa.RowBreaks = NewCT_PageBreak()
				if _ebffe := d.DecodeElement(_efdeaa.RowBreaks, &_bdcad); _ebffe != nil {
					return _ebffe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_efdeaa.ColBreaks = NewCT_PageBreak()
				if _gdcfbe := d.DecodeElement(_efdeaa.ColBreaks, &_bdcad); _gdcfbe != nil {
					return _gdcfbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}:
				_efdeaa.CustomProperties = NewCT_CustomProperties()
				if _bccea := d.DecodeElement(_efdeaa.CustomProperties, &_bdcad); _bccea != nil {
					return _bccea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}:
				_efdeaa.CellWatches = NewCT_CellWatches()
				if _bfddgg := d.DecodeElement(_efdeaa.CellWatches, &_bdcad); _bfddgg != nil {
					return _bfddgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}:
				_efdeaa.IgnoredErrors = NewCT_IgnoredErrors()
				if _gecdf := d.DecodeElement(_efdeaa.IgnoredErrors, &_bdcad); _gecdf != nil {
					return _gecdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_efdeaa.SmartTags = NewCT_SmartTags()
				if _fdfcf := d.DecodeElement(_efdeaa.SmartTags, &_bdcad); _fdfcf != nil {
					return _fdfcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_efdeaa.Drawing = NewCT_Drawing()
				if _ebadc := d.DecodeElement(_efdeaa.Drawing, &_bdcad); _ebadc != nil {
					return _ebadc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_efdeaa.LegacyDrawing = NewCT_LegacyDrawing()
				if _bgagec := d.DecodeElement(_efdeaa.LegacyDrawing, &_bdcad); _bgagec != nil {
					return _bgagec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_efdeaa.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _egeac := d.DecodeElement(_efdeaa.LegacyDrawingHF, &_bdcad); _egeac != nil {
					return _egeac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_efdeaa.DrawingHF = NewCT_DrawingHF()
				if _becbb := d.DecodeElement(_efdeaa.DrawingHF, &_bdcad); _becbb != nil {
					return _becbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_efdeaa.Picture = NewCT_SheetBackgroundPicture()
				if _gccaa := d.DecodeElement(_efdeaa.Picture, &_bdcad); _gccaa != nil {
					return _gccaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_efdeaa.OleObjects = NewCT_OleObjects()
				if _ceged := d.DecodeElement(_efdeaa.OleObjects, &_bdcad); _ceged != nil {
					return _ceged
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_efdeaa.Controls = NewCT_Controls()
				if _fccaeb := d.DecodeElement(_efdeaa.Controls, &_bdcad); _fccaeb != nil {
					return _fccaeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_efdeaa.WebPublishItems = NewCT_WebPublishItems()
				if _cfggcd := d.DecodeElement(_efdeaa.WebPublishItems, &_bdcad); _cfggcd != nil {
					return _cfggcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}:
				_efdeaa.TableParts = NewCT_TableParts()
				if _ecbede := d.DecodeElement(_efdeaa.TableParts, &_bdcad); _ecbede != nil {
					return _ecbede
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efdeaa.ExtLst = NewCT_ExtensionList()
				if _cfdfdg := d.DecodeElement(_efdeaa.ExtLst, &_bdcad); _cfdfdg != nil {
					return _cfdfdg
				}
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0057\u006f\u0072\u006b\u0073\u0068e\u0065\u0074 \u0025\u0076", _bdcad.Name)
				if _acded := d.Skip(); _acded != nil {
					return _acded
				}
			}
		case _b.EndElement:
			break _acdbg
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_FieldGroup() *CT_FieldGroup { _cggca := &CT_FieldGroup{}; return _cggca }

type CT_Cell struct {

	// Reference
	RAttr *string

	// Style Index
	SAttr *uint32

	// Cell Data Type
	TAttr ST_CellType

	// Cell Metadata Index
	CmAttr *uint32

	// Value Metadata Index
	VmAttr *uint32

	// Show Phonetic
	PhAttr *bool

	// Formula
	F *CT_CellFormula

	// Cell Value
	V *string

	// Rich Text Inline
	Is *CT_Rst

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_InputCells and its children, prefixing error messages with path
func (_aaage *CT_InputCells) ValidateWithPath(path string) error { return nil }

func (_gddfg *CT_RevisionQueryTableField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _gddfg.SheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", _gddfg.RefAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066i\u0065\u006c\u0064\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _gddfg.FieldIdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bdgcda *ST_FormatAction) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bdgcda = 0
	case "\u0062\u006c\u0061n\u006b":
		*_bdgcda = 1
	case "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067":
		*_bdgcda = 2
	case "\u0064\u0072\u0069l\u006c":
		*_bdgcda = 3
	case "\u0066o\u0072\u006d\u0075\u006c\u0061":
		*_bdgcda = 4
	}
	return nil
}

func NewCT_Borders() *CT_Borders { _abb := &CT_Borders{}; return _abb }

type CT_FileSharing struct {

	// Read Only Recommended
	ReadOnlyRecommendedAttr *bool

	// User Name
	UserNameAttr *string

	// Write Reservation Password
	ReservationPasswordAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32
}

func NewCT_FileVersion() *CT_FileVersion { _cfdfb := &CT_FileVersion{}; return _cfdfb }

func (_dafdd *CT_QueryTableRefresh) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dafdd.PreserveSortFilterLayoutAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0065\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072\u0074\u0046i\u006c\u0074\u0065\u0072\u004c\u0061\u0079\u006f\u0075\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dafdd.PreserveSortFilterLayoutAttr))})
	}
	if _dafdd.FieldIdWrappedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065\u006c\u0064\u0049\u0064\u0057\u0072a\u0070\u0070\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dafdd.FieldIdWrappedAttr))})
	}
	if _dafdd.HeadersInLastRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "h\u0065a\u0064\u0065\u0072\u0073\u0049\u006e\u004c\u0061s\u0074\u0052\u0065\u0066re\u0073\u0068"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dafdd.HeadersInLastRefreshAttr))})
	}
	if _dafdd.MinimumVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0069\u006d\u0075\u006d\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_dafdd.MinimumVersionAttr)})
	}
	if _dafdd.NextIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0065\u0078\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_dafdd.NextIdAttr)})
	}
	if _dafdd.UnboundColumnsLeftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075n\u0062o\u0075\u006e\u0064\u0043\u006fl\u0075\u006dn\u0073\u004c\u0065\u0066\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_dafdd.UnboundColumnsLeftAttr)})
	}
	if _dafdd.UnboundColumnsRightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0062\u006fun\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0073\u0052\u0069\u0067\u0068\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_dafdd.UnboundColumnsRightAttr)})
	}
	e.EncodeToken(start)
	_dagca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0071ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}}
	e.EncodeElement(_dafdd.QueryTableFields, _dagca)
	if _dafdd.QueryTableDeletedFields != nil {
		_aebee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069e\u006c\u0064\u0073"}}
		e.EncodeElement(_dafdd.QueryTableDeletedFields, _aebee)
	}
	if _dafdd.SortState != nil {
		_acfdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_dafdd.SortState, _acfdg)
	}
	if _dafdd.ExtLst != nil {
		_ccecg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dafdd.ExtLst, _ccecg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fgge *CT_CellSmartTag) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ffa := range start.Attr {
		if _ffa.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ecaf, _adgd := _eb.ParseUint(_ffa.Value, 10, 32)
			if _adgd != nil {
				return _adgd
			}
			_fgge.TypeAttr = uint32(_ecaf)
			continue
		}
		if _ffa.Name.Local == "\u0064e\u006c\u0065\u0074\u0065\u0064" {
			_gfeb, _aagc := _eb.ParseBool(_ffa.Value)
			if _aagc != nil {
				return _aagc
			}
			_fgge.DeletedAttr = &_gfeb
			continue
		}
		if _ffa.Name.Local == "\u0078\u006d\u006c\u0042\u0061\u0073\u0065\u0064" {
			_cdab, _dagf := _eb.ParseBool(_ffa.Value)
			if _dagf != nil {
				return _dagf
			}
			_fgge.XmlBasedAttr = &_cdab
			continue
		}
	}
_dfd:
	for {
		_ecad, _ddgf := d.Token()
		if _ddgf != nil {
			return _ddgf
		}
		switch _egebc := _ecad.(type) {
		case _b.StartElement:
			switch _egebc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072"}:
				_dcae := NewCT_CellSmartTagPr()
				if _agaa := d.DecodeElement(_dcae, &_egebc); _agaa != nil {
					return _agaa
				}
				_fgge.CellSmartTagPr = append(_fgge.CellSmartTagPr, _dcae)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0020\u0025\u0076", _egebc.Name)
				if _febbb := d.Skip(); _febbb != nil {
					return _febbb
				}
			}
		case _b.EndElement:
			break _dfd
		case _b.CharData:
		}
	}
	return nil
}

type CT_CalculatedMember struct {

	// Calculated Member Name
	NameAttr string

	// Calculated Member MDX Formula
	MdxAttr string

	// OLAP Calculated Member Name
	MemberNameAttr *string

	// Hierarchy Name
	HierarchyAttr *string

	// Parent Name
	ParentAttr *string

	// Calculated Members Solve Order
	SolveOrderAttr *int32

	// Set
	SetAttr *bool

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

type CT_TableColumns struct {

	// Column Count
	CountAttr *uint32

	// Table Column
	TableColumn []*CT_TableColumn
}

// Validate validates the CT_TupleCache and its children
func (_eggec *CT_TupleCache) Validate() error {
	return _eggec.ValidateWithPath("\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065")
}

func (_cbagf ST_FontScheme) Validate() error { return _cbagf.ValidateWithPath("") }

func NewCT_Dxf() *CT_Dxf { _eagge := &CT_Dxf{}; return _eagge }

type CT_GradientFill struct {

	// Gradient Fill Type
	TypeAttr ST_GradientType

	// Linear Gradient Degree
	DegreeAttr *float64

	// Left Convergence
	LeftAttr *float64

	// Right Convergence
	RightAttr *float64

	// Top Gradient Convergence
	TopAttr *float64

	// Bottom Convergence
	BottomAttr *float64

	// Gradient Stop
	Stop []*CT_GradientStop
}

// Validate validates the CT_ConditionalFormatting and its children
func (_deae *CT_ConditionalFormatting) Validate() error {
	return _deae.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067")
}

// Validate validates the CT_FunctionGroups and its children
func (_deadc *CT_FunctionGroups) Validate() error {
	return _deadc.ValidateWithPath("\u0043\u0054\u005f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073")
}

// Validate validates the CT_Fills and its children
func (_baeeac *CT_Fills) Validate() error {
	return _baeeac.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0073")
}

func (_bgba *CT_CommentPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bgba.Anchor = NewCT_ObjectAnchor()
	for _, _fgde := range start.Attr {
		if _fgde.Name.Local == "\u0061l\u0074\u0054\u0065\u0078\u0074" {
			_ccega, _gcda := _fgde.Value, error(nil)
			if _gcda != nil {
				return _gcda
			}
			_bgba.AltTextAttr = &_ccega
			continue
		}
		if _fgde.Name.Local == "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065" {
			_fdgef, _dgcgf := _eb.ParseBool(_fgde.Value)
			if _dgcgf != nil {
				return _dgcgf
			}
			_bgba.DefaultSizeAttr = &_fdgef
			continue
		}
		if _fgde.Name.Local == "\u0070\u0072\u0069n\u0074" {
			_cfgc, _dgbgb := _eb.ParseBool(_fgde.Value)
			if _dgbgb != nil {
				return _dgbgb
			}
			_bgba.PrintAttr = &_cfgc
			continue
		}
		if _fgde.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064" {
			_adbb, _aacb := _eb.ParseBool(_fgde.Value)
			if _aacb != nil {
				return _aacb
			}
			_bgba.DisabledAttr = &_adbb
			continue
		}
		if _fgde.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c" {
			_ddaa, _gagab := _eb.ParseBool(_fgde.Value)
			if _gagab != nil {
				return _gagab
			}
			_bgba.AutoFillAttr = &_ddaa
			continue
		}
		if _fgde.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065" {
			_eedb, _cfdc := _eb.ParseBool(_fgde.Value)
			if _cfdc != nil {
				return _cfdc
			}
			_bgba.AutoLineAttr = &_eedb
			continue
		}
		if _fgde.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_efgb, _dbab := _eb.ParseBool(_fgde.Value)
			if _dbab != nil {
				return _dbab
			}
			_bgba.LockedAttr = &_efgb
			continue
		}
		if _fgde.Name.Local == "\u0074\u0065\u0078\u0074\u0048\u0041\u006c\u0069\u0067\u006e" {
			_bgba.TextHAlignAttr.UnmarshalXMLAttr(_fgde)
			continue
		}
		if _fgde.Name.Local == "\u0074\u0065\u0078\u0074\u0056\u0041\u006c\u0069\u0067\u006e" {
			_bgba.TextVAlignAttr.UnmarshalXMLAttr(_fgde)
			continue
		}
		if _fgde.Name.Local == "\u006c\u006f\u0063\u006b\u0054\u0065\u0078\u0074" {
			_ebdb, _eaae := _eb.ParseBool(_fgde.Value)
			if _eaae != nil {
				return _eaae
			}
			_bgba.LockTextAttr = &_ebdb
			continue
		}
		if _fgde.Name.Local == "\u006au\u0073\u0074\u004c\u0061\u0073\u0074X" {
			_egdeb, _becbe := _eb.ParseBool(_fgde.Value)
			if _becbe != nil {
				return _becbe
			}
			_bgba.JustLastXAttr = &_egdeb
			continue
		}
		if _fgde.Name.Local == "\u0061u\u0074\u006f\u0053\u0063\u0061\u006ce" {
			_ggcc, _daef := _eb.ParseBool(_fgde.Value)
			if _daef != nil {
				return _daef
			}
			_bgba.AutoScaleAttr = &_ggcc
			continue
		}
	}
_faad:
	for {
		_eaaec, _gaee := d.Token()
		if _gaee != nil {
			return _gaee
		}
		switch _ecadf := _eaaec.(type) {
		case _b.StartElement:
			switch _ecadf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _bacfd := d.DecodeElement(_bgba.Anchor, &_ecadf); _bacfd != nil {
					return _bacfd
				}
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006dm\u0065\u006e\u0074\u0050\u0072\u0020\u0025\u0076", _ecadf.Name)
				if _cbfd := d.Skip(); _cbfd != nil {
					return _cbfd
				}
			}
		case _b.EndElement:
			break _faad
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_FutureMetadataBlock() *CT_FutureMetadataBlock {
	_ebcdba := &CT_FutureMetadataBlock{}
	return _ebcdba
}

func (_fcead *CT_DataRef) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fcead.RefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", *_fcead.RefAttr)})
	}
	if _fcead.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_fcead.NameAttr)})
	}
	if _fcead.SheetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_fcead.SheetAttr)})
	}
	if _fcead.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_fcead.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fgadc *CT_GroupMember) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _fgadc.UniqueNameAttr)})
	if _fgadc.GroupAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u006fu\u0070"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgadc.GroupAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_DataValidationOperator byte

// Validate validates the CT_FutureMetadata and its children
func (_adcbc *CT_FutureMetadata) Validate() error {
	return _adcbc.ValidateWithPath("\u0043\u0054\u005f\u0046\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061")
}

func (_cgdcfg ST_DynamicFilterType) Validate() error { return _cgdcfg.ValidateWithPath("") }

func (_deabd *CT_Query) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0064\u0078"}, Value: _ec.Sprintf("\u0025\u0076", _deabd.MdxAttr)})
	e.EncodeToken(start)
	if _deabd.Tpls != nil {
		_fbgcg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		e.EncodeElement(_deabd.Tpls, _fbgcg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cffcg *CT_LevelGroup) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cffcg.GroupMembers = NewCT_GroupMembers()
	for _, _becgd := range start.Attr {
		if _becgd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gbegg, _ffeaa := _becgd.Value, error(nil)
			if _ffeaa != nil {
				return _ffeaa
			}
			_cffcg.NameAttr = _gbegg
			continue
		}
		if _becgd.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_dccad, _cbfgd := _becgd.Value, error(nil)
			if _cbfgd != nil {
				return _cbfgd
			}
			_cffcg.UniqueNameAttr = _dccad
			continue
		}
		if _becgd.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_bdeee, _deegca := _becgd.Value, error(nil)
			if _deegca != nil {
				return _deegca
			}
			_cffcg.CaptionAttr = _bdeee
			continue
		}
		if _becgd.Name.Local == "\u0075\u006e\u0069q\u0075\u0065\u0050\u0061\u0072\u0065\u006e\u0074" {
			_efgda, _afcge := _becgd.Value, error(nil)
			if _afcge != nil {
				return _afcge
			}
			_cffcg.UniqueParentAttr = &_efgda
			continue
		}
		if _becgd.Name.Local == "\u0069\u0064" {
			_fcgaa, _bfgb := _eb.ParseInt(_becgd.Value, 10, 32)
			if _bfgb != nil {
				return _bfgb
			}
			_eeeg := int32(_fcgaa)
			_cffcg.IdAttr = &_eeeg
			continue
		}
	}
_eaebe:
	for {
		_egeggf, _dccc := d.Token()
		if _dccc != nil {
			return _dccc
		}
		switch _eccfe := _egeggf.(type) {
		case _b.StartElement:
			switch _eccfe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"}:
				if _bddcb := d.DecodeElement(_cffcg.GroupMembers, &_eccfe); _bddcb != nil {
					return _bddcb
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004ce\u0076\u0065\u006c\u0047\u0072\u006f\u0075\u0070 \u0025\u0076", _eccfe.Name)
				if _gceg := d.Skip(); _gceg != nil {
					return _gceg
				}
			}
		case _b.EndElement:
			break _eaebe
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PivotHierarchy and its children
func (_gfga *CT_PivotHierarchy) Validate() error {
	return _gfga.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079")
}

func NewCT_InputCells() *CT_InputCells { _cbdcb := &CT_InputCells{}; return _cbdcb }

func (_gdfaf *CT_PageField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006c\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _gdfaf.FldAttr)})
	if _gdfaf.ItemAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0074\u0065\u006d"}, Value: _ec.Sprintf("\u0025\u0076", *_gdfaf.ItemAttr)})
	}
	if _gdfaf.HierAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_gdfaf.HierAttr)})
	}
	if _gdfaf.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_gdfaf.NameAttr)})
	}
	if _gdfaf.CapAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061\u0070"}, Value: _ec.Sprintf("\u0025\u0076", *_gdfaf.CapAttr)})
	}
	e.EncodeToken(start)
	if _gdfaf.ExtLst != nil {
		_cddaa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gdfaf.ExtLst, _cddaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_QueryTable and its children, prefixing error messages with path
func (_fgafa *CT_QueryTable) ValidateWithPath(path string) error {
	if _gcadea := _fgafa.GrowShrinkTypeAttr.ValidateWithPath(path + "\u002f\u0047\u0072\u006fwS\u0068\u0072\u0069\u006e\u006b\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _gcadea != nil {
		return _gcadea
	}
	if _fgafa.QueryTableRefresh != nil {
		if _ebcdd := _fgafa.QueryTableRefresh.ValidateWithPath(path + "\u002fQ\u0075e\u0072\u0079\u0054\u0061\u0062l\u0065\u0052e\u0066\u0072\u0065\u0073\u0068"); _ebcdd != nil {
			return _ebcdd
		}
	}
	if _fgafa.ExtLst != nil {
		if _gagbe := _fgafa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gagbe != nil {
			return _gagbe
		}
	}
	return nil
}

type CT_CustomProperties struct {

	// Custom Property
	CustomPr []*CT_CustomProperty
}

type ST_CfType byte

func (_afcae *CT_ProtectedRange) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edba := range start.Attr {
		if _edba.Name.Local == "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_efge, _eefab := _edba.Value, error(nil)
			if _eefab != nil {
				return _eefab
			}
			_afcae.PasswordAttr = &_efge
			continue
		}
		if _edba.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_efea, _cfdba := ParseSliceST_Sqref(_edba.Value)
			if _cfdba != nil {
				return _cfdba
			}
			_afcae.SqrefAttr = _efea
			continue
		}
		if _edba.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ffgddg, _faebb := _edba.Value, error(nil)
			if _faebb != nil {
				return _faebb
			}
			_afcae.NameAttr = _ffgddg
			continue
		}
		if _edba.Name.Local == "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072" {
			_bgebf, _gbacg := _edba.Value, error(nil)
			if _gbacg != nil {
				return _gbacg
			}
			_afcae.SecurityDescriptorAttr = &_bgebf
			continue
		}
		if _edba.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_fbcgea, _gfdfe := _edba.Value, error(nil)
			if _gfdfe != nil {
				return _gfdfe
			}
			_afcae.AlgorithmNameAttr = &_fbcgea
			continue
		}
		if _edba.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_bgded, _efdec := _edba.Value, error(nil)
			if _efdec != nil {
				return _efdec
			}
			_afcae.HashValueAttr = &_bgded
			continue
		}
		if _edba.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_eafdf, _abae := _edba.Value, error(nil)
			if _abae != nil {
				return _abae
			}
			_afcae.SaltValueAttr = &_eafdf
			continue
		}
		if _edba.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_gcegf, _deeac := _eb.ParseUint(_edba.Value, 10, 32)
			if _deeac != nil {
				return _deeac
			}
			_bfgff := uint32(_gcegf)
			_afcae.SpinCountAttr = &_bfgff
			continue
		}
	}
_bcafab:
	for {
		_ddfbca, _dfgab := d.Token()
		if _dfgab != nil {
			return _dfgab
		}
		switch _baabbf := _ddfbca.(type) {
		case _b.StartElement:
			switch _baabbf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072"}:
				var _aafaa string
				if _bfeda := d.DecodeElement(&_aafaa, &_baabbf); _bfeda != nil {
					return _bfeda
				}
				_afcae.SecurityDescriptor = append(_afcae.SecurityDescriptor, _aafaa)
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0020\u0025\u0076", _baabbf.Name)
				if _bbgeg := d.Skip(); _bbgeg != nil {
					return _bbgeg
				}
			}
		case _b.EndElement:
			break _bcafab
		case _b.CharData:
		}
	}
	return nil
}

type PivotCacheRecords struct{ CT_PivotCacheRecords }

// ValidateWithPath validates the CT_Format and its children, prefixing error messages with path
func (_dgee *CT_Format) ValidateWithPath(path string) error {
	if _ffeee := _dgee.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _ffeee != nil {
		return _ffeee
	}
	if _egedb := _dgee.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _egedb != nil {
		return _egedb
	}
	if _dgee.ExtLst != nil {
		if _ffefa := _dgee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffefa != nil {
			return _ffefa
		}
	}
	return nil
}

func (_cffbb *CT_CustomSheetView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _cffbb.GuidAttr)})
	if _cffbb.ScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0063\u0061l\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_cffbb.ScaleAttr)})
	}
	if _cffbb.ColorIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006c\u006f\u0072\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_cffbb.ColorIdAttr)})
	}
	if _cffbb.ShowPageBreaksAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cffbb.ShowPageBreaksAttr))})
	}
	if _cffbb.ShowFormulasAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cffbb.ShowFormulasAttr))})
	}
	if _cffbb.ShowGridLinesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cffbb.ShowGridLinesAttr))})
	}
	if _cffbb.ShowRowColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cffbb.ShowRowColAttr))})
	}
	if _cffbb.OutlineSymbolsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0053\u0079m\u0062\u006f\u006c\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cffbb.OutlineSymbolsAttr))})
	}
	if _cffbb.ZeroValuesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007a\u0065\u0072\u006f\u0056\u0061\u006c\u0075\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cffbb.ZeroValuesAttr))})
	}
	if _cffbb.FitToPageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cffbb.FitToPageAttr))})
	}
	if _cffbb.PrintAreaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cffbb.PrintAreaAttr))})
	}
	if _cffbb.FilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cffbb.FilterAttr))})
	}
	if _cffbb.ShowAutoFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0075\u0074\u006f\u0046i\u006c\u0074\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cffbb.ShowAutoFilterAttr))})
	}
	if _cffbb.HiddenRowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cffbb.HiddenRowsAttr))})
	}
	if _cffbb.HiddenColumnsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cffbb.HiddenColumnsAttr))})
	}
	if _cffbb.StateAttr != ST_SheetStateUnset {
		_acfcg, _dgbaf := _cffbb.StateAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _dgbaf != nil {
			return _dgbaf
		}
		start.Attr = append(start.Attr, _acfcg)
	}
	if _cffbb.FilterUniqueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006ct\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cffbb.FilterUniqueAttr))})
	}
	if _cffbb.ViewAttr != ST_SheetViewTypeUnset {
		_edfca, _dccg := _cffbb.ViewAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0069\u0065\u0077"})
		if _dccg != nil {
			return _dccg
		}
		start.Attr = append(start.Attr, _edfca)
	}
	if _cffbb.ShowRulerAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cffbb.ShowRulerAttr))})
	}
	if _cffbb.TopLeftCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_cffbb.TopLeftCellAttr)})
	}
	e.EncodeToken(start)
	if _cffbb.Pane != nil {
		_gbag := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0070\u0061\u006e\u0065"}}
		e.EncodeElement(_cffbb.Pane, _gbag)
	}
	if _cffbb.Selection != nil {
		_dbgg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_cffbb.Selection, _dbgg)
	}
	if _cffbb.RowBreaks != nil {
		_fcfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_cffbb.RowBreaks, _fcfa)
	}
	if _cffbb.ColBreaks != nil {
		_fgddb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_cffbb.ColBreaks, _fgddb)
	}
	if _cffbb.PageMargins != nil {
		_effg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_cffbb.PageMargins, _effg)
	}
	if _cffbb.PrintOptions != nil {
		_bbbfb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_cffbb.PrintOptions, _bbbfb)
	}
	if _cffbb.PageSetup != nil {
		_fabf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_cffbb.PageSetup, _fabf)
	}
	if _cffbb.HeaderFooter != nil {
		_acbff := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_cffbb.HeaderFooter, _acbff)
	}
	if _cffbb.AutoFilter != nil {
		_gcfb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_cffbb.AutoFilter, _gcfb)
	}
	if _cffbb.ExtLst != nil {
		_dfga := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cffbb.ExtLst, _dfga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_BorderPr() *CT_BorderPr { _bad := &CT_BorderPr{}; return _bad }

func (_adgab *CT_CellStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcdg := range start.Attr {
		if _bcdg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gebb, _bbfc := _bcdg.Value, error(nil)
			if _bbfc != nil {
				return _bbfc
			}
			_adgab.NameAttr = &_gebb
			continue
		}
		if _bcdg.Name.Local == "\u0078\u0066\u0049\u0064" {
			_bddb, _cdba := _eb.ParseUint(_bcdg.Value, 10, 32)
			if _cdba != nil {
				return _cdba
			}
			_adgab.XfIdAttr = uint32(_bddb)
			continue
		}
		if _bcdg.Name.Local == "\u0062u\u0069\u006c\u0074\u0069\u006e\u0049d" {
			_adgb, _gaff := _eb.ParseUint(_bcdg.Value, 10, 32)
			if _gaff != nil {
				return _gaff
			}
			_ceaed := uint32(_adgb)
			_adgab.BuiltinIdAttr = &_ceaed
			continue
		}
		if _bcdg.Name.Local == "\u0069\u004c\u0065\u0076\u0065\u006c" {
			_acfad, _eaeb := _eb.ParseUint(_bcdg.Value, 10, 32)
			if _eaeb != nil {
				return _eaeb
			}
			_cbg := uint32(_acfad)
			_adgab.ILevelAttr = &_cbg
			continue
		}
		if _bcdg.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_gcfg, _cgfa := _eb.ParseBool(_bcdg.Value)
			if _cgfa != nil {
				return _cgfa
			}
			_adgab.HiddenAttr = &_gcfg
			continue
		}
		if _bcdg.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u0042\u0075\u0069\u006c\u0074\u0069\u006e" {
			_cacc, _gaeb := _eb.ParseBool(_bcdg.Value)
			if _gaeb != nil {
				return _gaeb
			}
			_adgab.CustomBuiltinAttr = &_cacc
			continue
		}
	}
_baee:
	for {
		_abfg, _caaf := d.Token()
		if _caaf != nil {
			return _caaf
		}
		switch _deffa := _abfg.(type) {
		case _b.StartElement:
			switch _deffa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adgab.ExtLst = NewCT_ExtensionList()
				if _bag := d.DecodeElement(_adgab.ExtLst, &_deffa); _bag != nil {
					return _bag
				}
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _deffa.Name)
				if _fbeea := d.Skip(); _fbeea != nil {
					return _fbeea
				}
			}
		case _b.EndElement:
			break _baee
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PivotTableStyle and its children, prefixing error messages with path
func (_aaade *CT_PivotTableStyle) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Macrosheet and its children
func (_aefac *CT_Macrosheet) Validate() error {
	return _aefac.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074")
}

func (_bbebd *ST_UpdateLinks) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cgedc, _fcgbee := d.Token()
	if _fcgbee != nil {
		return _fcgbee
	}
	if _feefb, _gecgfb := _cgedc.(_b.EndElement); _gecgfb && _feefb.Name == start.Name {
		*_bbebd = 1
		return nil
	}
	if _baggad, _bdafa := _cgedc.(_b.CharData); !_bdafa {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgedc)
	} else {
		switch string(_baggad) {
		case "":
			*_bbebd = 0
		case "\u0075s\u0065\u0072\u0053\u0065\u0074":
			*_bbebd = 1
		case "\u006e\u0065\u0076e\u0072":
			*_bbebd = 2
		case "\u0061\u006c\u0077\u0061\u0079\u0073":
			*_bbebd = 3
		}
	}
	_cgedc, _fcgbee = d.Token()
	if _fcgbee != nil {
		return _fcgbee
	}
	if _bffbggf, _fgfeg := _cgedc.(_b.EndElement); _fgfeg && _bffbggf.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgedc)
}

type CT_MdxMemeberProp struct {

	// Member Unique Name Index
	NAttr uint32

	// Property Name Index
	NpAttr uint32
}

func (_dffgf *ST_TimePeriod) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dffgf = 0
	case "\u0074\u006f\u0064a\u0079":
		*_dffgf = 1
	case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
		*_dffgf = 2
	case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
		*_dffgf = 3
	case "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s":
		*_dffgf = 4
	case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
		*_dffgf = 5
	case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
		*_dffgf = 6
	case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
		*_dffgf = 7
	case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
		*_dffgf = 8
	case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
		*_dffgf = 9
	case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
		*_dffgf = 10
	}
	return nil
}

// ValidateWithPath validates the CT_Record and its children, prefixing error messages with path
func (_bggce *CT_Record) ValidateWithPath(path string) error {
	for _gfcg, _egdfb := range _bggce.M {
		if _fgade := _egdfb.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _gfcg)); _fgade != nil {
			return _fgade
		}
	}
	for _adfga, _ecbcgg := range _bggce.N {
		if _agcgcb := _ecbcgg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _adfga)); _agcgcb != nil {
			return _agcgcb
		}
	}
	for _dgced, _gbcaf := range _bggce.B {
		if _bbddbg := _gbcaf.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _dgced)); _bbddbg != nil {
			return _bbddbg
		}
	}
	for _degfbc, _facba := range _bggce.E {
		if _abgeac := _facba.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _degfbc)); _abgeac != nil {
			return _abgeac
		}
	}
	for _ccfbd, _bbbdf := range _bggce.S {
		if _aedc := _bbbdf.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _ccfbd)); _aedc != nil {
			return _aedc
		}
	}
	for _ddfae, _cecbb := range _bggce.D {
		if _edeeb := _cecbb.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0044\u005b\u0025\u0064\u005d", path, _ddfae)); _edeeb != nil {
			return _edeeb
		}
	}
	for _edcfae, _bcbdb := range _bggce.X {
		if _bcggd := _bcbdb.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _edcfae)); _bcggd != nil {
			return _bcggd
		}
	}
	return nil
}

func (_fdgaa ST_SheetState) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fdgaa.String(), start)
}

func NewCT_MdxKPI() *CT_MdxKPI {
	_daeff := &CT_MdxKPI{}
	_daeff.PAttr = ST_MdxKPIProperty(1)
	return _daeff
}

const (
	ST_CfvoTypeUnset      ST_CfvoType = 0
	ST_CfvoTypeNum        ST_CfvoType = 1
	ST_CfvoTypePercent    ST_CfvoType = 2
	ST_CfvoTypeMax        ST_CfvoType = 3
	ST_CfvoTypeMin        ST_CfvoType = 4
	ST_CfvoTypeFormula    ST_CfvoType = 5
	ST_CfvoTypePercentile ST_CfvoType = 6
)

// ValidateWithPath validates the CT_OleItems and its children, prefixing error messages with path
func (_eaega *CT_OleItems) ValidateWithPath(path string) error {
	for _edacda, _gfffa := range _eaega.OleItem {
		if _dedee := _gfffa.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004f\u006c\u0065\u0049\u0074\u0065m\u005b\u0025\u0064\u005d", path, _edacda)); _dedee != nil {
			return _dedee
		}
	}
	return nil
}

func NewCT_UndoInfo() *CT_UndoInfo {
	_fdagc := &CT_UndoInfo{}
	_fdagc.ExpAttr = ST_FormulaExpression(1)
	return _fdagc
}

// ValidateWithPath validates the CT_CalculatedItems and its children, prefixing error messages with path
func (_egfc *CT_CalculatedItems) ValidateWithPath(path string) error {
	for _cfae, _gafa := range _egfc.CalculatedItem {
		if _eca := _gafa.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0043\u0061lc\u0075l\u0061\u0074\u0065\u0064\u0049t\u0065\u006d\u005b\u0025\u0064\u005d", path, _cfae)); _eca != nil {
			return _eca
		}
	}
	return nil
}

func (_eaffbe ST_FilterOperator) String() string {
	switch _eaffbe {
	case 0:
		return ""
	case 1:
		return "\u0065\u0071\u0075a\u006c"
	case 2:
		return "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 3:
		return "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 4:
		return "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 5:
		return "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case 6:
		return "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	}
	return ""
}

func (_bgfdc *CT_PCDSCPage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aage := range start.Attr {
		if _aage.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dcdga, _fdacd := _eb.ParseUint(_aage.Value, 10, 32)
			if _fdacd != nil {
				return _fdacd
			}
			_fddce := uint32(_dcdga)
			_bgfdc.CountAttr = &_fddce
			continue
		}
	}
_gbgbc:
	for {
		_bebgf, _cbcbd := d.Token()
		if _cbcbd != nil {
			return _cbcbd
		}
		switch _dgeea := _bebgf.(type) {
		case _b.StartElement:
			switch _dgeea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0049\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0049\u0074\u0065\u006d"}:
				_baedgb := NewCT_PageItem()
				if _bbgc := d.DecodeElement(_baedgb, &_dgeea); _bbgc != nil {
					return _bbgc
				}
				_bgfdc.PageItem = append(_bgfdc.PageItem, _baedgb)
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0043\u0044S\u0043\u0050\u0061\u0067\u0065\u0020\u0025\u0076", _dgeea.Name)
				if _dgabg := d.Skip(); _dgabg != nil {
					return _dgabg
				}
			}
		case _b.EndElement:
			break _gbgbc
		case _b.CharData:
		}
	}
	return nil
}

func (_adeagd ST_GradientType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bcceff := _b.Attr{}
	_bcceff.Name = name
	switch _adeagd {
	case ST_GradientTypeUnset:
		_bcceff.Value = ""
	case ST_GradientTypeLinear:
		_bcceff.Value = "\u006c\u0069\u006e\u0065\u0061\u0072"
	case ST_GradientTypePath:
		_bcceff.Value = "\u0070\u0061\u0074\u0068"
	}
	return _bcceff, nil
}

// ValidateWithPath validates the CT_GradientFill and its children, prefixing error messages with path
func (_adgfb *CT_GradientFill) ValidateWithPath(path string) error {
	if _gdffg := _adgfb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _gdffg != nil {
		return _gdffg
	}
	for _gadda, _geeda := range _adgfb.Stop {
		if _egfcf := _geeda.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0053\u0074\u006f\u0070\u005b\u0025\u0064\u005d", path, _gadda)); _egfcf != nil {
			return _egfcf
		}
	}
	return nil
}

type CT_WebPublishObjects struct {

	// Count
	CountAttr *uint32

	// Web Publishing Object
	WebPublishObject []*CT_WebPublishObject
}

type CT_Worksheet struct {

	// Worksheet Properties
	SheetPr *CT_SheetPr

	// Worksheet Dimensions
	Dimension *CT_SheetDimension

	// Sheet Views
	SheetViews *CT_SheetViews

	// Sheet Format Properties
	SheetFormatPr *CT_SheetFormatPr

	// Column Information
	Cols []*CT_Cols

	// Sheet Data
	SheetData *CT_SheetData

	// Sheet Calculation Properties
	SheetCalcPr *CT_SheetCalcPr

	// Sheet Protection
	SheetProtection *CT_SheetProtection

	// Protected Ranges
	ProtectedRanges *CT_ProtectedRanges

	// Scenarios
	Scenarios *CT_Scenarios

	// AutoFilter
	AutoFilter *CT_AutoFilter

	// Sort State
	SortState *CT_SortState

	// Data Consolidate
	DataConsolidate *CT_DataConsolidate

	// Custom Sheet Views
	CustomSheetViews *CT_CustomSheetViews

	// Merge Cells
	MergeCells *CT_MergeCells

	// Phonetic Properties
	PhoneticPr *CT_PhoneticPr

	// Conditional Formatting
	ConditionalFormatting []*CT_ConditionalFormatting

	// Data Validations
	DataValidations *CT_DataValidations

	// Hyperlinks
	Hyperlinks *CT_Hyperlinks

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Margins
	PageMargins *CT_PageMargins

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header and Footer Settings
	HeaderFooter *CT_HeaderFooter

	// Horizontal Page Breaks
	RowBreaks *CT_PageBreak

	// Vertical Page Breaks
	ColBreaks *CT_PageBreak

	// Custom Properties
	CustomProperties *CT_CustomProperties

	// Cell Watch Items
	CellWatches *CT_CellWatches

	// Ignored Errors
	IgnoredErrors *CT_IgnoredErrors

	// Smart Tags
	SmartTags *CT_SmartTags

	// Drawing
	Drawing *CT_Drawing

	// Legacy Drawing
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Header Footer
	LegacyDrawingHF *CT_LegacyDrawing
	DrawingHF       *CT_DrawingHF

	// Background Image
	Picture    *CT_SheetBackgroundPicture
	OleObjects *CT_OleObjects

	// Embedded Controls
	Controls *CT_Controls

	// Web Publishing Items
	WebPublishItems *CT_WebPublishItems

	// Table Parts
	TableParts *CT_TableParts

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_bcfde *Table) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065"
	return _bcfde.CT_Table.MarshalXML(e, start)
}

type CT_ExternalLink struct {
	Choice *CT_ExternalLinkChoice
	ExtLst *CT_ExtensionList
}

type ST_HorizontalAlignment byte

func (_ebcag *CT_I) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebcag.TAttr != ST_ItemTypeUnset {
		_begcc, _gcfga := _ebcag.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _gcfga != nil {
			return _gcfga
		}
		start.Attr = append(start.Attr, _begcc)
	}
	if _ebcag.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_ebcag.RAttr)})
	}
	if _ebcag.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _ec.Sprintf("\u0025\u0076", *_ebcag.IAttr)})
	}
	e.EncodeToken(start)
	if _ebcag.X != nil {
		_ccaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _ffbd := range _ebcag.X {
			e.EncodeElement(_ffbd, _ccaf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fdfeec *CT_Metadata) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gccfg:
	for {
		_fgecc, _ggaef := d.Token()
		if _ggaef != nil {
			return _ggaef
		}
		switch _cdgag := _fgecc.(type) {
		case _b.StartElement:
			switch _cdgag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}:
				_fdfeec.MetadataTypes = NewCT_MetadataTypes()
				if _eaad := d.DecodeElement(_fdfeec.MetadataTypes, &_cdgag); _eaad != nil {
					return _eaad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}:
				_fdfeec.MetadataStrings = NewCT_MetadataStrings()
				if _adead := d.DecodeElement(_fdfeec.MetadataStrings, &_cdgag); _adead != nil {
					return _adead
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_fdfeec.MdxMetadata = NewCT_MdxMetadata()
				if _deebg := d.DecodeElement(_fdfeec.MdxMetadata, &_cdgag); _deebg != nil {
					return _deebg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}:
				_cgdce := NewCT_FutureMetadata()
				if _ffdga := d.DecodeElement(_cgdce, &_cdgag); _ffdga != nil {
					return _ffdga
				}
				_fdfeec.FutureMetadata = append(_fdfeec.FutureMetadata, _cgdce)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_fdfeec.CellMetadata = NewCT_MetadataBlocks()
				if _febeg := d.DecodeElement(_fdfeec.CellMetadata, &_cdgag); _febeg != nil {
					return _febeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_fdfeec.ValueMetadata = NewCT_MetadataBlocks()
				if _fafcg := d.DecodeElement(_fdfeec.ValueMetadata, &_cdgag); _fafcg != nil {
					return _fafcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdfeec.ExtLst = NewCT_ExtensionList()
				if _deba := d.DecodeElement(_fdfeec.ExtLst, &_cdgag); _deba != nil {
					return _deba
				}
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0020\u0025\u0076", _cdgag.Name)
				if _fdbaa := d.Skip(); _fdbaa != nil {
					return _fdbaa
				}
			}
		case _b.EndElement:
			break _gccfg
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_VolTopicRef() *CT_VolTopicRef { _afgge := &CT_VolTopicRef{}; return _afgge }

func NewCT_PageField() *CT_PageField { _dabdc := &CT_PageField{}; return _dabdc }

// Validate validates the CT_DataBar and its children
func (_ggadd *CT_DataBar) Validate() error {
	return _ggadd.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0061\u0072")
}

type CT_RevisionFormatting struct {

	// Sheet Id
	SheetIdAttr uint32

	// Row or Column Formatting Change
	XfDxfAttr *bool

	// Style
	SAttr *bool

	// Sequence Of References
	SqrefAttr ST_Sqref

	// Start index
	StartAttr *uint32

	// Length
	LengthAttr *uint32

	// Formatting
	Dxf    *CT_Dxf
	ExtLst *CT_ExtensionList
}

type CT_HeaderFooter struct {

	// Different Odd Even Header Footer
	DifferentOddEvenAttr *bool

	// Different First Page
	DifferentFirstAttr *bool

	// Scale Header & Footer With Document
	ScaleWithDocAttr *bool

	// Align Margins
	AlignWithMarginsAttr *bool

	// Odd Header
	OddHeader *string

	// Odd Page Footer
	OddFooter *string

	// Even Page Header
	EvenHeader *string

	// Even Page Footer
	EvenFooter *string

	// First Page Header
	FirstHeader *string

	// First Page Footer
	FirstFooter *string
}

func NewCT_Selection() *CT_Selection { _bbgdc := &CT_Selection{}; return _bbgdc }

// Validate validates the CT_ProtectedRanges and its children
func (_ecfeg *CT_ProtectedRanges) Validate() error {
	return _ecfeg.ValidateWithPath("\u0043T\u005fP\u0072\u006f\u0074\u0065\u0063t\u0065\u0064R\u0061\u006e\u0067\u0065\u0073")
}

func (_gccdd *CT_SheetView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gccdd.WindowProtectionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0069n\u0064\u006f\u0077P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gccdd.WindowProtectionAttr))})
	}
	if _gccdd.ShowFormulasAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gccdd.ShowFormulasAttr))})
	}
	if _gccdd.ShowGridLinesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gccdd.ShowGridLinesAttr))})
	}
	if _gccdd.ShowRowColHeadersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gccdd.ShowRowColHeadersAttr))})
	}
	if _gccdd.ShowZerosAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u005a\u0065\u0072\u006fs"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gccdd.ShowZerosAttr))})
	}
	if _gccdd.RightToLeftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "r\u0069\u0067\u0068\u0074\u0054\u006f\u004c\u0065\u0066\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gccdd.RightToLeftAttr))})
	}
	if _gccdd.TabSelectedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gccdd.TabSelectedAttr))})
	}
	if _gccdd.ShowRulerAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gccdd.ShowRulerAttr))})
	}
	if _gccdd.ShowOutlineSymbolsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gccdd.ShowOutlineSymbolsAttr))})
	}
	if _gccdd.DefaultGridColorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065f\u0061\u0075\u006ct\u0047\u0072\u0069\u0064\u0043\u006f\u006c\u006f\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gccdd.DefaultGridColorAttr))})
	}
	if _gccdd.ShowWhiteSpaceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0057\u0068\u0069\u0074\u0065S\u0070\u0061\u0063\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gccdd.ShowWhiteSpaceAttr))})
	}
	if _gccdd.ViewAttr != ST_SheetViewTypeUnset {
		_edbecf, _cefeg := _gccdd.ViewAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0069\u0065\u0077"})
		if _cefeg != nil {
			return _cefeg
		}
		start.Attr = append(start.Attr, _edbecf)
	}
	if _gccdd.TopLeftCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_gccdd.TopLeftCellAttr)})
	}
	if _gccdd.ColorIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006c\u006f\u0072\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_gccdd.ColorIdAttr)})
	}
	if _gccdd.ZoomScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce"}, Value: _ec.Sprintf("\u0025\u0076", *_gccdd.ZoomScaleAttr)})
	}
	if _gccdd.ZoomScaleNormalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007ao\u006fm\u0053\u0063\u0061\u006c\u0065\u004e\u006f\u0072\u006d\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_gccdd.ZoomScaleNormalAttr)})
	}
	if _gccdd.ZoomScaleSheetLayoutViewAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007ao\u006f\u006d\u0053\u0063\u0061\u006c\u0065\u0053\u0068\u0065\u0065t\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077"}, Value: _ec.Sprintf("\u0025\u0076", *_gccdd.ZoomScaleSheetLayoutViewAttr)})
	}
	if _gccdd.ZoomScalePageLayoutViewAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007a\u006f\u006fmS\u0063\u0061\u006c\u0065\u0050\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077"}, Value: _ec.Sprintf("\u0025\u0076", *_gccdd.ZoomScalePageLayoutViewAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _gccdd.WorkbookViewIdAttr)})
	e.EncodeToken(start)
	if _gccdd.Pane != nil {
		_fdafgd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0070\u0061\u006e\u0065"}}
		e.EncodeElement(_gccdd.Pane, _fdafgd)
	}
	if _gccdd.Selection != nil {
		_dggaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		for _, _ecdbg := range _gccdd.Selection {
			e.EncodeElement(_ecdbg, _dggaf)
		}
	}
	if _gccdd.PivotSelection != nil {
		_ggdfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e"}}
		for _, _agbab := range _gccdd.PivotSelection {
			e.EncodeElement(_agbab, _ggdfa)
		}
	}
	if _gccdd.ExtLst != nil {
		_eeadc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gccdd.ExtLst, _eeadc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_geabcc ST_Axis) Validate() error { return _geabcc.ValidateWithPath("") }

func (_fggde *CT_DdeLink) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _beccd := range start.Attr {
		if _beccd.Name.Local == "\u0064\u0064\u0065\u0053\u0065\u0072\u0076\u0069\u0063\u0065" {
			_cbaff, _bbbb := _beccd.Value, error(nil)
			if _bbbb != nil {
				return _bbbb
			}
			_fggde.DdeServiceAttr = _cbaff
			continue
		}
		if _beccd.Name.Local == "\u0064\u0064\u0065\u0054\u006f\u0070\u0069\u0063" {
			_caec, _ccbb := _beccd.Value, error(nil)
			if _ccbb != nil {
				return _ccbb
			}
			_fggde.DdeTopicAttr = _caec
			continue
		}
	}
_adaf:
	for {
		_feabf, _aadag := d.Token()
		if _aadag != nil {
			return _aadag
		}
		switch _cdfef := _feabf.(type) {
		case _b.StartElement:
			switch _cdfef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0064\u0065\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0064\u0065\u0049\u0074\u0065\u006d\u0073"}:
				_fggde.DdeItems = NewCT_DdeItems()
				if _abfbc := d.DecodeElement(_fggde.DdeItems, &_cdfef); _abfbc != nil {
					return _abfbc
				}
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0064\u0065\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _cdfef.Name)
				if _gbcca := d.Skip(); _gbcca != nil {
					return _gbcca
				}
			}
		case _b.EndElement:
			break _adaf
		case _b.CharData:
		}
	}
	return nil
}

func (_fageg *CT_QueryTableDeletedFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fageg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_fageg.CountAttr)})
	}
	e.EncodeToken(start)
	_ggbgc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ad\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064"}}
	for _, _eaaeb := range _fageg.DeletedField {
		e.EncodeElement(_eaaeb, _ggbgc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_MdxSetOrder byte

func NewCT_Reviewed() *CT_Reviewed { _fafde := &CT_Reviewed{}; return _fafde }

func NewCT_SheetFormatPr() *CT_SheetFormatPr { _daegdd := &CT_SheetFormatPr{}; return _daegdd }

func (_cdgdb *ST_Axis) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cdgdb = 0
	case "\u0061x\u0069\u0073\u0052\u006f\u0077":
		*_cdgdb = 1
	case "\u0061x\u0069\u0073\u0043\u006f\u006c":
		*_cdgdb = 2
	case "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065":
		*_cdgdb = 3
	case "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073":
		*_cdgdb = 4
	}
	return nil
}

type CT_Rst struct {

	// Text
	T *string

	// Rich Text Run
	R []*CT_RElt

	// Phonetic Run
	RPh []*CT_PhoneticRun

	// Phonetic Properties
	PhoneticPr *CT_PhoneticPr
}

// ValidateWithPath validates the CT_RevisionCellChange and its children, prefixing error messages with path
func (_aaeed *CT_RevisionCellChange) ValidateWithPath(path string) error {
	if _aaeed.Oc != nil {
		if _gccbg := _aaeed.Oc.ValidateWithPath(path + "\u002f\u004f\u0063"); _gccbg != nil {
			return _gccbg
		}
	}
	if _dgccc := _aaeed.Nc.ValidateWithPath(path + "\u002f\u004e\u0063"); _dgccc != nil {
		return _dgccc
	}
	if _aaeed.Odxf != nil {
		if _ffdfg := _aaeed.Odxf.ValidateWithPath(path + "\u002f\u004f\u0064x\u0066"); _ffdfg != nil {
			return _ffdfg
		}
	}
	if _aaeed.Ndxf != nil {
		if _efdgc := _aaeed.Ndxf.ValidateWithPath(path + "\u002f\u004e\u0064x\u0066"); _efdgc != nil {
			return _efdgc
		}
	}
	if _aaeed.ExtLst != nil {
		if _gecfe := _aaeed.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gecfe != nil {
			return _gecfe
		}
	}
	return nil
}

func NewCT_GroupLevel() *CT_GroupLevel { _gacf := &CT_GroupLevel{}; return _gacf }

func (_dcgab *CT_PivotCacheDefinition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dcgab.CacheSource = NewCT_CacheSource()
	_dcgab.CacheFields = NewCT_CacheFields()
	for _, _dccbc := range start.Attr {
		if _dccbc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dccbc.Name.Local == "\u0069\u0064" || _dccbc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dccbc.Name.Local == "\u0069\u0064" {
			_gddgabg, _efgcf := _dccbc.Value, error(nil)
			if _efgcf != nil {
				return _efgcf
			}
			_dcgab.IdAttr = &_gddgabg
			continue
		}
		if _dccbc.Name.Local == "\u0075\u0070g\u0072\u0061\u0064e\u004f\u006e\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_gacaf, _adcffc := _eb.ParseBool(_dccbc.Value)
			if _adcffc != nil {
				return _adcffc
			}
			_dcgab.UpgradeOnRefreshAttr = &_gacaf
			continue
		}
		if _dccbc.Name.Local == "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065" {
			_bdcdc, _bdfca := _eb.ParseBool(_dccbc.Value)
			if _bdfca != nil {
				return _bdfca
			}
			_dcgab.TupleCacheAttr = &_bdcdc
			continue
		}
		if _dccbc.Name.Local == "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061" {
			_dfbgc, _abacg := _eb.ParseBool(_dccbc.Value)
			if _abacg != nil {
				return _abacg
			}
			_dcgab.SaveDataAttr = &_dfbgc
			continue
		}
		if _dccbc.Name.Local == "\u0073u\u0070p\u006f\u0072\u0074\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0079" {
			_degcg, _abbdag := _eb.ParseBool(_dccbc.Value)
			if _abbdag != nil {
				return _abbdag
			}
			_dcgab.SupportSubqueryAttr = &_degcg
			continue
		}
		if _dccbc.Name.Local == "\u006f\u0070\u0074\u0069\u006d\u0069\u007a\u0065\u004de\u006d\u006f\u0072\u0079" {
			_cefdg, _babgf := _eb.ParseBool(_dccbc.Value)
			if _babgf != nil {
				return _babgf
			}
			_dcgab.OptimizeMemoryAttr = &_cefdg
			continue
		}
		if _dccbc.Name.Local == "s\u0075p\u0070\u006f\u0072\u0074\u0041\u0064\u0076\u0061n\u0063\u0065\u0064\u0044ri\u006c\u006c" {
			_gdecb, _cgabb := _eb.ParseBool(_dccbc.Value)
			if _cgabb != nil {
				return _cgabb
			}
			_dcgab.SupportAdvancedDrillAttr = &_gdecb
			continue
		}
		if _dccbc.Name.Local == "r\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0042\u0079" {
			_fafeag, _ggeccg := _dccbc.Value, error(nil)
			if _ggeccg != nil {
				return _ggeccg
			}
			_dcgab.RefreshedByAttr = &_fafeag
			continue
		}
		if _dccbc.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0044\u0061\u0074\u0065\u0049\u0073\u006f" {
			_aaccf, _cecef := ParseStdlibTime(_dccbc.Value)
			if _cecef != nil {
				return _cecef
			}
			_dcgab.RefreshedDateIsoAttr = &_aaccf
			continue
		}
		if _dccbc.Name.Local == "\u0069n\u0076\u0061\u006c\u0069\u0064" {
			_beecc, _gddc := _eb.ParseBool(_dccbc.Value)
			if _gddc != nil {
				return _gddc
			}
			_dcgab.InvalidAttr = &_beecc
			continue
		}
		if _dccbc.Name.Local == "\u0062a\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0051\u0075\u0065\u0072\u0079" {
			_eddcg, _gaageb := _eb.ParseBool(_dccbc.Value)
			if _gaageb != nil {
				return _gaageb
			}
			_dcgab.BackgroundQueryAttr = &_eddcg
			continue
		}
		if _dccbc.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0049\u0074\u0065\u006d\u0073L\u0069\u006d\u0069\u0074" {
			_gbffa, _dbgea := _eb.ParseUint(_dccbc.Value, 10, 32)
			if _dbgea != nil {
				return _dbgea
			}
			_faeff := uint32(_gbffa)
			_dcgab.MissingItemsLimitAttr = &_faeff
			continue
		}
		if _dccbc.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_gddf, _cccab := _eb.ParseUint(_dccbc.Value, 10, 8)
			if _cccab != nil {
				return _cccab
			}
			_gfddd := uint8(_gddf)
			_dcgab.RefreshedVersionAttr = &_gfddd
			continue
		}
		if _dccbc.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_eaaabb, _geggf := _eb.ParseBool(_dccbc.Value)
			if _geggf != nil {
				return _geggf
			}
			_dcgab.RefreshOnLoadAttr = &_eaaabb
			continue
		}
		if _dccbc.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0044\u0061\u0074\u0065" {
			_bedcg, _eebad := _eb.ParseFloat(_dccbc.Value, 64)
			if _eebad != nil {
				return _eebad
			}
			_dcgab.RefreshedDateAttr = &_bedcg
			continue
		}
		if _dccbc.Name.Local == "r\u0065\u0063\u006f\u0072\u0064\u0043\u006f\u0075\u006e\u0074" {
			_daaba, _fdeac := _eb.ParseUint(_dccbc.Value, 10, 32)
			if _fdeac != nil {
				return _fdeac
			}
			_abcccd := uint32(_daaba)
			_dcgab.RecordCountAttr = &_abcccd
			continue
		}
		if _dccbc.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_edgff, _aaegc := _eb.ParseUint(_dccbc.Value, 10, 8)
			if _aaegc != nil {
				return _aaegc
			}
			_aadfag := uint8(_edgff)
			_dcgab.CreatedVersionAttr = &_aadfag
			continue
		}
		if _dccbc.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_daccfa, _efdge := _eb.ParseUint(_dccbc.Value, 10, 8)
			if _efdge != nil {
				return _efdge
			}
			_cgeaa := uint8(_daccfa)
			_dcgab.MinRefreshableVersionAttr = &_cgeaa
			continue
		}
		if _dccbc.Name.Local == "\u0065\u006e\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_aggcg, _cfccd := _eb.ParseBool(_dccbc.Value)
			if _cfccd != nil {
				return _cfccd
			}
			_dcgab.EnableRefreshAttr = &_aggcg
			continue
		}
	}
_bagbg:
	for {
		_fcab, _baedge := d.Token()
		if _baedge != nil {
			return _baedge
		}
		switch _ebgec := _fcab.(type) {
		case _b.StartElement:
			switch _ebgec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}:
				if _ddbee := d.DecodeElement(_dcgab.CacheSource, &_ebgec); _ddbee != nil {
					return _ddbee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				if _caedd := d.DecodeElement(_dcgab.CacheFields, &_ebgec); _caedd != nil {
					return _caedd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_dcgab.CacheHierarchies = NewCT_CacheHierarchies()
				if _bgbgcg := d.DecodeElement(_dcgab.CacheHierarchies, &_ebgec); _bgbgcg != nil {
					return _bgbgcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}:
				_dcgab.Kpis = NewCT_PCDKPIs()
				if _bcdaa := d.DecodeElement(_dcgab.Kpis, &_ebgec); _bcdaa != nil {
					return _bcdaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}:
				_dcgab.TupleCache = NewCT_TupleCache()
				if _gebab := d.DecodeElement(_dcgab.TupleCache, &_ebgec); _gebab != nil {
					return _gebab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}:
				_dcgab.CalculatedItems = NewCT_CalculatedItems()
				if _cbdcg := d.DecodeElement(_dcgab.CalculatedItems, &_ebgec); _cbdcg != nil {
					return _cbdcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}:
				_dcgab.CalculatedMembers = NewCT_CalculatedMembers()
				if _efbca := d.DecodeElement(_dcgab.CalculatedMembers, &_ebgec); _efbca != nil {
					return _efbca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}:
				_dcgab.Dimensions = NewCT_Dimensions()
				if _fgaba := d.DecodeElement(_dcgab.Dimensions, &_ebgec); _fgaba != nil {
					return _fgaba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}:
				_dcgab.MeasureGroups = NewCT_MeasureGroups()
				if _fccag := d.DecodeElement(_dcgab.MeasureGroups, &_ebgec); _fccag != nil {
					return _fccag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}:
				_dcgab.Maps = NewCT_MeasureDimensionMaps()
				if _eaddd := d.DecodeElement(_dcgab.Maps, &_ebgec); _eaddd != nil {
					return _eaddd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcgab.ExtLst = NewCT_ExtensionList()
				if _feddb := d.DecodeElement(_dcgab.ExtLst, &_ebgec); _feddb != nil {
					return _feddb
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068e\u0044\u0065\u0066\u0069\u006e\u0069t\u0069\u006f\u006e \u0025\u0076", _ebgec.Name)
				if _fdgab := d.Skip(); _fdgab != nil {
					return _fdgab
				}
			}
		case _b.EndElement:
			break _bagbg
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_WebPublishItem() *CT_WebPublishItem {
	_bcdaaf := &CT_WebPublishItem{}
	_bcdaaf.SourceTypeAttr = ST_WebSourceType(1)
	return _bcdaaf
}

// Validate validates the CT_MdxKPI and its children
func (_dbbgd *CT_MdxKPI) Validate() error {
	return _dbbgd.ValidateWithPath("\u0043T\u005f\u004d\u0064\u0078\u004b\u0050I")
}

// Validate validates the CT_Location and its children
func (_aeag *CT_Location) Validate() error {
	return _aeag.ValidateWithPath("C\u0054\u005f\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e")
}

func (_bebacd ST_Comments) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gcaeffe := _b.Attr{}
	_gcaeffe.Name = name
	switch _bebacd {
	case ST_CommentsUnset:
		_gcaeffe.Value = ""
	case ST_CommentsCommNone:
		_gcaeffe.Value = "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065"
	case ST_CommentsCommIndicator:
		_gcaeffe.Value = "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	case ST_CommentsCommIndAndComment:
		_gcaeffe.Value = "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074"
	}
	return _gcaeffe, nil
}

type CT_MergeCells struct {

	// Count
	CountAttr *uint32

	// Merged Cell
	MergeCell []*CT_MergeCell
}

const (
	ST_MdxFunctionTypeUnset ST_MdxFunctionType = 0
	ST_MdxFunctionTypeM     ST_MdxFunctionType = 1
	ST_MdxFunctionTypeV     ST_MdxFunctionType = 2
	ST_MdxFunctionTypeS     ST_MdxFunctionType = 3
	ST_MdxFunctionTypeC     ST_MdxFunctionType = 4
	ST_MdxFunctionTypeR     ST_MdxFunctionType = 5
	ST_MdxFunctionTypeP     ST_MdxFunctionType = 6
	ST_MdxFunctionTypeK     ST_MdxFunctionType = 7
)

func (_cgffgb *CT_TupleCache) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cgffgb.Entries != nil {
		_efbgb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065\u006e\u0074\u0072\u0069\u0065\u0073"}}
		e.EncodeElement(_cgffgb.Entries, _efbgb)
	}
	if _cgffgb.Sets != nil {
		_fcgef := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0065\u0074\u0073"}}
		e.EncodeElement(_cgffgb.Sets, _fcgef)
	}
	if _cgffgb.QueryCache != nil {
		_ceceff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"}}
		e.EncodeElement(_cgffgb.QueryCache, _ceceff)
	}
	if _cgffgb.ServerFormats != nil {
		_dbcfg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_cgffgb.ServerFormats, _dbcfg)
	}
	if _cgffgb.ExtLst != nil {
		_fadgc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cgffgb.ExtLst, _fadgc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Font and its children
func (_gbbb *CT_Font) Validate() error {
	return _gbbb.ValidateWithPath("\u0043T\u005f\u0046\u006f\u006e\u0074")
}

func (_bcdfa *CT_MdxKPI) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bcdfa.PAttr = ST_MdxKPIProperty(1)
	for _, _bdbceg := range start.Attr {
		if _bdbceg.Name.Local == "\u006e" {
			_dfcbb, _face := _eb.ParseUint(_bdbceg.Value, 10, 32)
			if _face != nil {
				return _face
			}
			_bcdfa.NAttr = uint32(_dfcbb)
			continue
		}
		if _bdbceg.Name.Local == "\u006e\u0070" {
			_dbeee, _gbeae := _eb.ParseUint(_bdbceg.Value, 10, 32)
			if _gbeae != nil {
				return _gbeae
			}
			_bcdfa.NpAttr = uint32(_dbeee)
			continue
		}
		if _bdbceg.Name.Local == "\u0070" {
			_bcdfa.PAttr.UnmarshalXMLAttr(_bdbceg)
			continue
		}
	}
	for {
		_fcdddf, _agfgf := d.Token()
		if _agfgf != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004d\u0064\u0078K\u0050\u0049\u003a\u0020\u0025\u0073", _agfgf)
		}
		if _afcbe, _ecbcga := _fcdddf.(_b.EndElement); _ecbcga && _afcbe.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Sheet and its children
func (_eceaa *CT_Sheet) Validate() error {
	return _eceaa.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074")
}

func (_gdbeed ST_PhoneticAlignment) String() string {
	switch _gdbeed {
	case 0:
		return ""
	case 1:
		return "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case 2:
		return "\u006c\u0065\u0066\u0074"
	case 3:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 4:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}

// ValidateWithPath validates the CT_XmlPr and its children, prefixing error messages with path
func (_ggege *CT_XmlPr) ValidateWithPath(path string) error {
	if _ggege.ExtLst != nil {
		if _adfbc := _ggege.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _adfbc != nil {
			return _adfbc
		}
	}
	return nil
}

func (_dgeeb ST_DvAspect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dgeeb.String(), start)
}

func NewCT_RevisionFormatting() *CT_RevisionFormatting {
	_cgdcd := &CT_RevisionFormatting{}
	return _cgdcd
}

func NewCT_OleObject() *CT_OleObject { _fgage := &CT_OleObject{}; return _fgage }

func (_agafg ST_CredMethod) ValidateWithPath(path string) error {
	switch _agafg {
	case 0, 1, 2, 3, 4:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_agafg))
	}
	return nil
}

type CT_GroupItems struct {

	// Items Created Count
	CountAttr *uint32

	// No Value
	M []*CT_Missing

	// Numeric Value
	N []*CT_Number

	// Boolean
	B []*CT_Boolean

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String

	// Date Time
	D []*CT_DateTime
}

// ValidateWithPath validates the CT_PivotDimension and its children, prefixing error messages with path
func (_cbdff *CT_PivotDimension) ValidateWithPath(path string) error { return nil }

type CT_CustomChartsheetViews struct {

	// Custom Chart Sheet View
	CustomSheetView []*CT_CustomChartsheetView
}

func NewCT_Rst() *CT_Rst { _dddgf := &CT_Rst{}; return _dddgf }

// Validate validates the CT_Item and its children
func (_adcfdb *CT_Item) Validate() error {
	return _adcfdb.ValidateWithPath("\u0043T\u005f\u0049\u0074\u0065\u006d")
}

type CT_Revisions struct {

	// Revision Row Column Insert Delete
	Rrc []*CT_RevisionRowColumn

	// Revision Cell Move
	Rm []*CT_RevisionMove

	// Revision Custom View
	Rcv []*CT_RevisionCustomView

	// Revision Sheet Name
	Rsnm []*CT_RevisionSheetRename

	// Revision Insert Sheet
	Ris []*CT_RevisionInsertSheet

	// Revision Cell Change
	Rcc []*CT_RevisionCellChange

	// Revision Format
	Rfmt []*CT_RevisionFormatting

	// Revision AutoFormat
	Raf []*CT_RevisionAutoFormatting

	// Revision Defined Name
	Rdn []*CT_RevisionDefinedName

	// Revision Cell Comment
	Rcmt []*CT_RevisionComment

	// Revision Query Table
	Rqt []*CT_RevisionQueryTableField

	// Revision Merge Conflict
	Rcft []*CT_RevisionConflict
}

const (
	ST_ItemTypeUnset   ST_ItemType = 0
	ST_ItemTypeData    ST_ItemType = 1
	ST_ItemTypeDefault ST_ItemType = 2
	ST_ItemTypeSum     ST_ItemType = 3
	ST_ItemTypeCountA  ST_ItemType = 4
	ST_ItemTypeAvg     ST_ItemType = 5
	ST_ItemTypeMax     ST_ItemType = 6
	ST_ItemTypeMin     ST_ItemType = 7
	ST_ItemTypeProduct ST_ItemType = 8
	ST_ItemTypeCount   ST_ItemType = 9
	ST_ItemTypeStdDev  ST_ItemType = 10
	ST_ItemTypeStdDevP ST_ItemType = 11
	ST_ItemTypeVar     ST_ItemType = 12
	ST_ItemTypeVarP    ST_ItemType = 13
	ST_ItemTypeGrand   ST_ItemType = 14
	ST_ItemTypeBlank   ST_ItemType = 15
)

// ValidateWithPath validates the CT_ExternalLinkChoice and its children, prefixing error messages with path
func (_adcefg *CT_ExternalLinkChoice) ValidateWithPath(path string) error {
	if _adcefg.ExternalBook != nil {
		if _ecfae := _adcefg.ExternalBook.ValidateWithPath(path + "\u002f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"); _ecfae != nil {
			return _ecfae
		}
	}
	if _adcefg.DdeLink != nil {
		if _dgab := _adcefg.DdeLink.ValidateWithPath(path + "\u002f\u0044\u0064\u0065\u004c\u0069\u006e\u006b"); _dgab != nil {
			return _dgab
		}
	}
	if _adcefg.OleLink != nil {
		if _cgfdf := _adcefg.OleLink.ValidateWithPath(path + "\u002f\u004f\u006c\u0065\u004c\u0069\u006e\u006b"); _cgfdf != nil {
			return _cgfdf
		}
	}
	return nil
}

func (_deedd ST_IconSetType) String() string {
	switch _deedd {
	case 0:
		return ""
	case 1:
		return "\u0033A\u0072\u0072\u006f\u0077\u0073"
	case 2:
		return "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case 3:
		return "\u0033\u0046\u006c\u0061\u0067\u0073"
	case 4:
		return "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031"
	case 5:
		return "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032"
	case 6:
		return "\u0033\u0053\u0069\u0067\u006e\u0073"
	case 7:
		return "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073"
	case 8:
		return "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732"
	case 9:
		return "\u0034A\u0072\u0072\u006f\u0077\u0073"
	case 10:
		return "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case 11:
		return "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b"
	case 12:
		return "\u0034R\u0061\u0074\u0069\u006e\u0067"
	case 13:
		return "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073"
	case 14:
		return "\u0035A\u0072\u0072\u006f\u0077\u0073"
	case 15:
		return "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case 16:
		return "\u0035R\u0061\u0074\u0069\u006e\u0067"
	case 17:
		return "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s"
	}
	return ""
}

func (_bddbd *CT_PageMargins) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcbad := range start.Attr {
		if _dcbad.Name.Local == "\u006c\u0065\u0066\u0074" {
			_fdgbg, _adebcf := _eb.ParseFloat(_dcbad.Value, 64)
			if _adebcf != nil {
				return _adebcf
			}
			_bddbd.LeftAttr = _fdgbg
			continue
		}
		if _dcbad.Name.Local == "\u0072\u0069\u0067h\u0074" {
			_beagag, _adcbg := _eb.ParseFloat(_dcbad.Value, 64)
			if _adcbg != nil {
				return _adcbg
			}
			_bddbd.RightAttr = _beagag
			continue
		}
		if _dcbad.Name.Local == "\u0074\u006f\u0070" {
			_ddbc, _fadeab := _eb.ParseFloat(_dcbad.Value, 64)
			if _fadeab != nil {
				return _fadeab
			}
			_bddbd.TopAttr = _ddbc
			continue
		}
		if _dcbad.Name.Local == "\u0062\u006f\u0074\u0074\u006f\u006d" {
			_cgffd, _fedbd := _eb.ParseFloat(_dcbad.Value, 64)
			if _fedbd != nil {
				return _fedbd
			}
			_bddbd.BottomAttr = _cgffd
			continue
		}
		if _dcbad.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072" {
			_cgcbc, _bacbc := _eb.ParseFloat(_dcbad.Value, 64)
			if _bacbc != nil {
				return _bacbc
			}
			_bddbd.HeaderAttr = _cgcbc
			continue
		}
		if _dcbad.Name.Local == "\u0066\u006f\u006f\u0074\u0065\u0072" {
			_eabge, _dgagd := _eb.ParseFloat(_dcbad.Value, 64)
			if _dgagd != nil {
				return _dgagd
			}
			_bddbd.FooterAttr = _eabge
			continue
		}
	}
	for {
		_ceeec, _egedec := d.Token()
		if _egedec != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073:\u0020\u0025\u0073", _egedec)
		}
		if _gdadd, _egceb := _ceeec.(_b.EndElement); _egceb && _gdadd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gdcee *Connections) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gdcee.CT_Connections = *NewCT_Connections()
_deeff:
	for {
		_ggegeg, _bacgc := d.Token()
		if _bacgc != nil {
			return _bacgc
		}
		switch _bedbe := _ggegeg.(type) {
		case _b.StartElement:
			switch _bedbe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_deacf := NewCT_Connection()
				if _afbgg := d.DecodeElement(_deacf, &_bedbe); _afbgg != nil {
					return _afbgg
				}
				_gdcee.Connection = append(_gdcee.Connection, _deacf)
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _bedbe.Name)
				if _fafaa := d.Skip(); _fafaa != nil {
					return _fafaa
				}
			}
		case _b.EndElement:
			break _deeff
		case _b.CharData:
		}
	}
	return nil
}

func (_eaefff *ST_FieldSortType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bcecad, _aaebe := d.Token()
	if _aaebe != nil {
		return _aaebe
	}
	if _bcafe, _cbbea := _bcecad.(_b.EndElement); _cbbea && _bcafe.Name == start.Name {
		*_eaefff = 1
		return nil
	}
	if _daaaa, _ecdafd := _bcecad.(_b.CharData); !_ecdafd {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bcecad)
	} else {
		switch string(_daaaa) {
		case "":
			*_eaefff = 0
		case "\u006d\u0061\u006e\u0075\u0061\u006c":
			*_eaefff = 1
		case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
			*_eaefff = 2
		case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
			*_eaefff = 3
		}
	}
	_bcecad, _aaebe = d.Token()
	if _aaebe != nil {
		return _aaebe
	}
	if _aadfgd, _ffeabd := _bcecad.(_b.EndElement); _ffeabd && _aadfgd.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bcecad)
}

func (_cecf *CT_CellXfs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cecf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_cecf.CountAttr)})
	}
	e.EncodeToken(start)
	_gdeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ax\u0066"}}
	for _, _ecgae := range _cecf.Xf {
		e.EncodeElement(_ecgae, _gdeb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_MemberProperty and its children, prefixing error messages with path
func (_gcggg *CT_MemberProperty) ValidateWithPath(path string) error { return nil }

func (_bdcfa *CT_Schema) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0049\u0044"}, Value: _ec.Sprintf("\u0025\u0076", _bdcfa.IDAttr)})
	if _bdcfa.SchemaRefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0053c\u0068\u0065\u006d\u0061\u0052\u0065f"}, Value: _ec.Sprintf("\u0025\u0076", *_bdcfa.SchemaRefAttr)})
	}
	if _bdcfa.NamespaceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u004ea\u006d\u0065\u0073\u0070\u0061\u0063e"}, Value: _ec.Sprintf("\u0025\u0076", *_bdcfa.NamespaceAttr)})
	}
	if _bdcfa.SchemaLanguageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0053\u0063\u0068\u0065\u006d\u0061\u004c\u0061\u006eg\u0075\u0061\u0067\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_bdcfa.SchemaLanguageAttr)})
	}
	e.EncodeToken(start)
	if _bdcfa.Any != nil {
		_bdcfa.Any.MarshalXML(e, _b.StartElement{})
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_aggac *CT_Reviewed) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efbagb := range start.Attr {
		if _efbagb.Name.Local == "\u0072\u0049\u0064" {
			_ggdda, _gcbgc := _eb.ParseUint(_efbagb.Value, 10, 32)
			if _gcbgc != nil {
				return _gcbgc
			}
			_aggac.RIdAttr = uint32(_ggdda)
			continue
		}
	}
	for {
		_facda, _edbbc := d.Token()
		if _edbbc != nil {
			return _ec.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u003a\u0020\u0025\u0073", _edbbc)
		}
		if _bbgegf, _fcafg := _facda.(_b.EndElement); _fcafg && _bbgegf.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cacfgc *CT_Rst) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cacfgc.T != nil {
		_faagg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074"}}
		_f.AddPreserveSpaceAttr(&_faagg, *_cacfgc.T)
		e.EncodeElement(_cacfgc.T, _faagg)
	}
	if _cacfgc.R != nil {
		_bgfgb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072"}}
		for _, _geadd := range _cacfgc.R {
			e.EncodeElement(_geadd, _bgfgb)
		}
	}
	if _cacfgc.RPh != nil {
		_fbacg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0050\u0068"}}
		for _, _fdcfaa := range _cacfgc.RPh {
			e.EncodeElement(_fdcfaa, _fbacg)
		}
	}
	if _cacfgc.PhoneticPr != nil {
		_affaae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}}
		e.EncodeElement(_cacfgc.PhoneticPr, _affaae)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_SharedItems struct {

	// Contains Semi Mixed Data Types
	ContainsSemiMixedTypesAttr *bool

	// Contains Non Date
	ContainsNonDateAttr *bool

	// Contains Date
	ContainsDateAttr *bool

	// Contains String
	ContainsStringAttr *bool

	// Contains Blank
	ContainsBlankAttr *bool

	// Contains Mixed Data Types
	ContainsMixedTypesAttr *bool

	// Contains Numbers
	ContainsNumberAttr *bool

	// Contains Integer
	ContainsIntegerAttr *bool

	// Minimum Numeric Value
	MinValueAttr *float64

	// Maximum Numeric Value
	MaxValueAttr *float64

	// Minimum Date Time
	MinDateAttr *_g.Time

	// Maximum Date Time Value
	MaxDateAttr *_g.Time

	// Shared Items Count
	CountAttr *uint32

	// Long Text
	LongTextAttr *bool

	// No Value
	M []*CT_Missing

	// Numeric
	N []*CT_Number

	// Boolean
	B []*CT_Boolean

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String

	// Date Time
	D []*CT_DateTime
}

type CT_QueryTableDeletedFields struct {

	// Deleted Fields Count
	CountAttr *uint32

	// Deleted Field
	DeletedField []*CT_DeletedField
}

func NewCT_BookView() *CT_BookView { _ca := &CT_BookView{}; return _ca }

func (_eggdf *CT_RangeSet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eggdf.I1Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0031"}, Value: _ec.Sprintf("\u0025\u0076", *_eggdf.I1Attr)})
	}
	if _eggdf.I2Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0032"}, Value: _ec.Sprintf("\u0025\u0076", *_eggdf.I2Attr)})
	}
	if _eggdf.I3Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0033"}, Value: _ec.Sprintf("\u0025\u0076", *_eggdf.I3Attr)})
	}
	if _eggdf.I4Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0034"}, Value: _ec.Sprintf("\u0025\u0076", *_eggdf.I4Attr)})
	}
	if _eggdf.RefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", *_eggdf.RefAttr)})
	}
	if _eggdf.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_eggdf.NameAttr)})
	}
	if _eggdf.SheetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_eggdf.SheetAttr)})
	}
	if _eggdf.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_eggdf.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Tuples struct {

	// Member Name Count
	CAttr *uint32

	// Tuple
	Tpl []*CT_Tuple
}

func (_caegbb *ST_ParameterType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_caegbb = 0
	case "\u0070\u0072\u006f\u006d\u0070\u0074":
		*_caegbb = 1
	case "\u0076\u0061\u006cu\u0065":
		*_caegbb = 2
	case "\u0063\u0065\u006c\u006c":
		*_caegbb = 3
	}
	return nil
}

type ST_rwColActionType byte

func (_eadbg *CT_PCDSDTCEntries) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eadbg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_eadbg.CountAttr)})
	}
	e.EncodeToken(start)
	if _eadbg.M != nil {
		_abegf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _gdcge := range _eadbg.M {
			e.EncodeElement(_gdcge, _abegf)
		}
	}
	if _eadbg.N != nil {
		_ffead := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _bdegf := range _eadbg.N {
			e.EncodeElement(_bdegf, _ffead)
		}
	}
	if _eadbg.E != nil {
		_fgdce := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _abgbf := range _eadbg.E {
			e.EncodeElement(_abgbf, _fgdce)
		}
	}
	if _eadbg.S != nil {
		_cgedf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _dadac := range _eadbg.S {
			e.EncodeElement(_dadac, _cgedf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_RElt and its children
func (_ddegb *CT_RElt) Validate() error {
	return _ddegb.ValidateWithPath("\u0043T\u005f\u0052\u0045\u006c\u0074")
}

func NewCT_GroupMember() *CT_GroupMember { _eecbgb := &CT_GroupMember{}; return _eecbgb }

type CT_MetadataRecord struct {

	// Metadata Record Type Index
	TAttr uint32

	// Metadata Record Value Index
	VAttr uint32
}

func (_cebb *CT_ExternalBook) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _cebb.IdAttr)})
	e.EncodeToken(start)
	if _cebb.SheetNames != nil {
		_babg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"}}
		e.EncodeElement(_cebb.SheetNames, _babg)
	}
	if _cebb.DefinedNames != nil {
		_efdgg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ad\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}}
		e.EncodeElement(_cebb.DefinedNames, _efdgg)
	}
	if _cebb.SheetDataSet != nil {
		_ccge := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"}}
		e.EncodeElement(_cebb.SheetDataSet, _ccge)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_ecgcge ST_MdxFunctionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bdgfca := _b.Attr{}
	_bdgfca.Name = name
	switch _ecgcge {
	case ST_MdxFunctionTypeUnset:
		_bdgfca.Value = ""
	case ST_MdxFunctionTypeM:
		_bdgfca.Value = "\u006d"
	case ST_MdxFunctionTypeV:
		_bdgfca.Value = "\u0076"
	case ST_MdxFunctionTypeS:
		_bdgfca.Value = "\u0073"
	case ST_MdxFunctionTypeC:
		_bdgfca.Value = "\u0063"
	case ST_MdxFunctionTypeR:
		_bdgfca.Value = "\u0072"
	case ST_MdxFunctionTypeP:
		_bdgfca.Value = "\u0070"
	case ST_MdxFunctionTypeK:
		_bdgfca.Value = "\u006b"
	}
	return _bdgfca, nil
}

type CT_ExternalSheetName struct {

	// Sheet Name Value
	ValAttr *string
}

func (_dcceb *CT_ExternalSheetNames) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dggf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065"}}
	for _, _ccbdg := range _dcceb.SheetName {
		e.EncodeElement(_ccbdg, _dggf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Pane struct {

	// Horizontal Split Position
	XSplitAttr *float64

	// Vertical Split Position
	YSplitAttr *float64

	// Top Left Visible Cell
	TopLeftCellAttr *string

	// Active Pane
	ActivePaneAttr ST_Pane

	// Split State
	StateAttr ST_PaneState
}

func (_ccdeg ST_PivotAreaType) String() string {
	switch _ccdeg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 3:
		return "\u0064\u0061\u0074\u0061"
	case 4:
		return "\u0061\u006c\u006c"
	case 5:
		return "\u006f\u0072\u0069\u0067\u0069\u006e"
	case 6:
		return "\u0062\u0075\u0074\u0074\u006f\u006e"
	case 7:
		return "\u0074\u006f\u0070\u0045\u006e\u0064"
	case 8:
		return "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	}
	return ""
}

type CT_MemberProperty struct {

	// OLAP Member Property Unique Name
	NameAttr *string

	// Show Cell
	ShowCellAttr *bool

	// Show Tooltip
	ShowTipAttr *bool

	// Show As Caption
	ShowAsCaptionAttr *bool

	// Name Length
	NameLenAttr *uint32

	// Property Name Character Index
	PPosAttr *uint32

	// Property Name Length
	PLenAttr *uint32

	// Level Index
	LevelAttr *uint32

	// Field Index
	FieldAttr uint32
}

// ValidateWithPath validates the CT_Top10 and its children, prefixing error messages with path
func (_agefd *CT_Top10) ValidateWithPath(path string) error { return nil }

func (_bdfdc ST_FormatAction) ValidateWithPath(path string) error {
	switch _bdfdc {
	case 0, 1, 2, 3, 4:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdfdc))
	}
	return nil
}

func NewCT_ConditionalFormat() *CT_ConditionalFormat {
	_abca := &CT_ConditionalFormat{}
	_abca.PivotAreas = NewCT_PivotAreas()
	return _abca
}

func (_aaagb ST_GrowShrinkType) String() string {
	switch _aaagb {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065"
	case 2:
		return "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072"
	case 3:
		return "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072"
	}
	return ""
}

// ValidateWithPath validates the CT_PivotCacheRecords and its children, prefixing error messages with path
func (_febfb *CT_PivotCacheRecords) ValidateWithPath(path string) error {
	for _bddcg, _caced := range _febfb.R {
		if _dddgc := _caced.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0052\u005b\u0025\u0064\u005d", path, _bddcg)); _dddgc != nil {
			return _dddgc
		}
	}
	if _febfb.ExtLst != nil {
		if _dgged := _febfb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgged != nil {
			return _dgged
		}
	}
	return nil
}

func (_gdfc *CT_BookViews) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_adc:
	for {
		_acf, _ggdg := d.Token()
		if _ggdg != nil {
			return _ggdg
		}
		switch _gfdac := _acf.(type) {
		case _b.StartElement:
			switch _gfdac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072k\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072k\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077"}:
				_gfg := NewCT_BookView()
				if _cee := d.DecodeElement(_gfg, &_gfdac); _cee != nil {
					return _cee
				}
				_gdfc.WorkbookView = append(_gdfc.WorkbookView, _gfg)
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_B\u006f\u006fk\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _gfdac.Name)
				if _ecc := d.Skip(); _ecc != nil {
					return _ecc
				}
			}
		case _b.EndElement:
			break _adc
		case _b.CharData:
		}
	}
	return nil
}

func (_daeede ST_UpdateLinks) Validate() error { return _daeede.ValidateWithPath("") }

// ValidateWithPath validates the CT_DateTime and its children, prefixing error messages with path
func (_gcabf *CT_DateTime) ValidateWithPath(path string) error {
	for _bbfg, _abcad := range _gcabf.X {
		if _dcba := _abcad.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _bbfg)); _dcba != nil {
			return _dcba
		}
	}
	return nil
}

// Validate validates the CT_RevisionHeaders and its children
func (_gebcgg *CT_RevisionHeaders) Validate() error {
	return _gebcgg.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0048e\u0061\u0064\u0065\u0072\u0073")
}

func (_bcbf ST_Axis) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bcbf.String(), start)
}

func (_bgcaaf *CT_RElt) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bgcaaf.RPr != nil {
		_dbgge := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0050\u0072"}}
		e.EncodeElement(_bgcaaf.RPr, _dbgge)
	}
	_bedf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074"}}
	_f.AddPreserveSpaceAttr(&_bedf, _bgcaaf.T)
	e.EncodeElement(_bgcaaf.T, _bedf)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_abe *CT_Boolean) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eedc := range start.Attr {
		if _eedc.Name.Local == "\u0076" {
			_afgd, _agg := _eb.ParseBool(_eedc.Value)
			if _agg != nil {
				return _agg
			}
			_abe.VAttr = _afgd
			continue
		}
		if _eedc.Name.Local == "\u0075" {
			_becg, _bcf := _eb.ParseBool(_eedc.Value)
			if _bcf != nil {
				return _bcf
			}
			_abe.UAttr = &_becg
			continue
		}
		if _eedc.Name.Local == "\u0066" {
			_cfe, _dcad := _eb.ParseBool(_eedc.Value)
			if _dcad != nil {
				return _dcad
			}
			_abe.FAttr = &_cfe
			continue
		}
		if _eedc.Name.Local == "\u0063" {
			_fegb, _gbaa := _eedc.Value, error(nil)
			if _gbaa != nil {
				return _gbaa
			}
			_abe.CAttr = &_fegb
			continue
		}
		if _eedc.Name.Local == "\u0063\u0070" {
			_cgc, _cge := _eb.ParseUint(_eedc.Value, 10, 32)
			if _cge != nil {
				return _cge
			}
			_fgb := uint32(_cgc)
			_abe.CpAttr = &_fgb
			continue
		}
	}
_dfe:
	for {
		_dgd, _eae := d.Token()
		if _eae != nil {
			return _eae
		}
		switch _dgdd := _dgd.(type) {
		case _b.StartElement:
			switch _dgdd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_bfe := NewCT_X()
				if _bbf := d.DecodeElement(_bfe, &_dgdd); _bbf != nil {
					return _bbf
				}
				_abe.X = append(_abe.X, _bfe)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fB\u006f\u006f\u006c\u0065\u0061\u006e\u0020\u0025\u0076", _dgdd.Name)
				if _cab := d.Skip(); _cab != nil {
					return _cab
				}
			}
		case _b.EndElement:
			break _dfe
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_DdeItem and its children
func (_efec *CT_DdeItem) Validate() error {
	return _efec.ValidateWithPath("\u0043\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d")
}

func (_ccbgec ST_CalcMode) ValidateWithPath(path string) error {
	switch _ccbgec {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ccbgec))
	}
	return nil
}

func NewCT_Macrosheet() *CT_Macrosheet {
	_daacga := &CT_Macrosheet{}
	_daacga.SheetData = NewCT_SheetData()
	return _daacga
}

// ValidateWithPath validates the CT_MeasureGroups and its children, prefixing error messages with path
func (_acdda *CT_MeasureGroups) ValidateWithPath(path string) error {
	for _fdacb, _abggd := range _acdda.MeasureGroup {
		if _bacbd := _abggd.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004dea\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u005b\u0025\u0064\u005d", path, _fdacb)); _bacbd != nil {
			return _bacbd
		}
	}
	return nil
}

func (_baedf *CT_QueryTableFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dfcac := range start.Attr {
		if _dfcac.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_adbgb, _fegbg := _eb.ParseUint(_dfcac.Value, 10, 32)
			if _fegbg != nil {
				return _fegbg
			}
			_ccggd := uint32(_adbgb)
			_baedf.CountAttr = &_ccggd
			continue
		}
	}
_aefae:
	for {
		_fbbab, _cfbdf := d.Token()
		if _cfbdf != nil {
			return _cfbdf
		}
		switch _cbcdd := _fbbab.(type) {
		case _b.StartElement:
			switch _cbcdd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064"}:
				_fefag := NewCT_QueryTableField()
				if _faddag := d.DecodeElement(_fefag, &_cbcdd); _faddag != nil {
					return _faddag
				}
				_baedf.QueryTableField = append(_baedf.QueryTableField, _fefag)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061bl\u0065\u0046\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _cbcdd.Name)
				if _bgcbeg := d.Skip(); _bgcbeg != nil {
					return _bgcbeg
				}
			}
		case _b.EndElement:
			break _aefae
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionFormatting and its children, prefixing error messages with path
func (_fcbge *CT_RevisionFormatting) ValidateWithPath(path string) error {
	if _fcbge.Dxf != nil {
		if _fcdcb := _fcbge.Dxf.ValidateWithPath(path + "\u002f\u0044\u0078\u0066"); _fcdcb != nil {
			return _fcdcb
		}
	}
	if _fcbge.ExtLst != nil {
		if _bdbdf := _fcbge.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bdbdf != nil {
			return _bdbdf
		}
	}
	return nil
}

func (_dgbeac *ST_CellComments) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dgaacd, _dcabg := d.Token()
	if _dcabg != nil {
		return _dcabg
	}
	if _acbcf, _eeedf := _dgaacd.(_b.EndElement); _eeedf && _acbcf.Name == start.Name {
		*_dgbeac = 1
		return nil
	}
	if _fcagcg, _agdffe := _dgaacd.(_b.CharData); !_agdffe {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgaacd)
	} else {
		switch string(_fcagcg) {
		case "":
			*_dgbeac = 0
		case "\u006e\u006f\u006e\u0065":
			*_dgbeac = 1
		case "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064":
			*_dgbeac = 2
		case "\u0061\u0074\u0045n\u0064":
			*_dgbeac = 3
		}
	}
	_dgaacd, _dcabg = d.Token()
	if _dcabg != nil {
		return _dcabg
	}
	if _egafb, _cecga := _dgaacd.(_b.EndElement); _cecga && _egafb.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgaacd)
}

type CT_MetadataStrings struct {

	// MDX Metadata String Count
	CountAttr *uint32

	// MDX Metadata String
	S []*CT_XStringElement
}

type CT_GroupMember struct {

	// Group Member Unique Name
	UniqueNameAttr string

	// Group
	GroupAttr *bool
}

func NewCT_ExternalSheetDataSet() *CT_ExternalSheetDataSet {
	_ggffd := &CT_ExternalSheetDataSet{}
	return _ggffd
}

func (_bcgbgab ST_FieldSortType) ValidateWithPath(path string) error {
	switch _bcgbgab {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bcgbgab))
	}
	return nil
}

func NewCT_CustomWorkbookView() *CT_CustomWorkbookView {
	_bcbea := &CT_CustomWorkbookView{}
	_bcbea.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _bcbea
}

// Validate validates the MapInfo and its children
func (_faaccg *MapInfo) Validate() error {
	return _faaccg.ValidateWithPath("\u004da\u0070\u0049\u006e\u0066\u006f")
}

// Validate validates the CT_WebPublishing and its children
func (_gedefc *CT_WebPublishing) Validate() error {
	return _gedefc.ValidateWithPath("\u0043\u0054_\u0057\u0065\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067")
}

type CT_ReviewedRevisions struct {

	// Reviewed Revisions Count
	CountAttr *uint32

	// Reviewed
	Reviewed []*CT_Reviewed
}

func NewCT_IconSet() *CT_IconSet { _degge := &CT_IconSet{}; return _degge }

// ValidateWithPath validates the CT_PivotCaches and its children, prefixing error messages with path
func (_cgeab *CT_PivotCaches) ValidateWithPath(path string) error {
	for _geceb, _afggbb := range _cgeab.PivotCache {
		if _deggg := _afggbb.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068e\u005b\u0025\u0064\u005d", path, _geceb)); _deggg != nil {
			return _deggg
		}
	}
	return nil
}

func (_eeefab *CT_TableColumns) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eeefab.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_eeefab.CountAttr)})
	}
	e.EncodeToken(start)
	_fcccb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0043o\u006c\u0075\u006d\u006e"}}
	for _, _aadaec := range _eeefab.TableColumn {
		e.EncodeElement(_aadaec, _fcccb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ObjectPr and its children, prefixing error messages with path
func (_agafa *CT_ObjectPr) ValidateWithPath(path string) error {
	if _dbgeda := _agafa.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _dbgeda != nil {
		return _dbgeda
	}
	return nil
}

func (_afcaed *CT_SharedUser) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_afcaed.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _bafcd := range start.Attr {
		if _bafcd.Name.Local == "\u0067\u0075\u0069\u0064" {
			_fffeg, _cfeggb := _bafcd.Value, error(nil)
			if _cfeggb != nil {
				return _cfeggb
			}
			_afcaed.GuidAttr = _fffeg
			continue
		}
		if _bafcd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_efdfd, _fcagf := _bafcd.Value, error(nil)
			if _fcagf != nil {
				return _fcagf
			}
			_afcaed.NameAttr = _efdfd
			continue
		}
		if _bafcd.Name.Local == "\u0069\u0064" {
			_ddfdfb, _baceae := _eb.ParseInt(_bafcd.Value, 10, 32)
			if _baceae != nil {
				return _baceae
			}
			_afcaed.IdAttr = int32(_ddfdfb)
			continue
		}
		if _bafcd.Name.Local == "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065" {
			_gecdg, _decgfc := ParseStdlibTime(_bafcd.Value)
			if _decgfc != nil {
				return _decgfc
			}
			_afcaed.DateTimeAttr = _gecdg
			continue
		}
	}
_ebggf:
	for {
		_dfbdee, _fgfgc := d.Token()
		if _fgfgc != nil {
			return _fgfgc
		}
		switch _ggbab := _dfbdee.(type) {
		case _b.StartElement:
			switch _ggbab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afcaed.ExtLst = NewCT_ExtensionList()
				if _cdedf := d.DecodeElement(_afcaed.ExtLst, &_ggbab); _cdedf != nil {
					return _cdedf
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0061\u0072\u0065\u0064\u0055\u0073\u0065\u0072 \u0025\u0076", _ggbab.Name)
				if _ccfbdf := d.Skip(); _ccfbdf != nil {
					return _ccfbdf
				}
			}
		case _b.EndElement:
			break _ebggf
		case _b.CharData:
		}
	}
	return nil
}

type ExternalLink struct{ CT_ExternalLink }

func (_ccdag *CT_Tables) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ecbcd := range start.Attr {
		if _ecbcd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ccefa, _dcffb := _eb.ParseUint(_ecbcd.Value, 10, 32)
			if _dcffb != nil {
				return _dcffb
			}
			_faacdf := uint32(_ccefa)
			_ccdag.CountAttr = &_faacdf
			continue
		}
	}
_ffgcc:
	for {
		_dbddd, _dgeaef := d.Token()
		if _dgeaef != nil {
			return _dgeaef
		}
		switch _aefge := _dbddd.(type) {
		case _b.StartElement:
			switch _aefge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_ffdbf := NewCT_TableMissing()
				if _fbbdf := d.DecodeElement(_ffdbf, &_aefge); _fbbdf != nil {
					return _fbbdf
				}
				_ccdag.M = append(_ccdag.M, _ffdbf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_cfacad := NewCT_XStringElement()
				if _ecegf := d.DecodeElement(_cfacad, &_aefge); _ecegf != nil {
					return _ecegf
				}
				_ccdag.S = append(_ccdag.S, _cfacad)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_gdfdf := NewCT_Index()
				if _cbffcc := d.DecodeElement(_gdfdf, &_aefge); _cbffcc != nil {
					return _cbffcc
				}
				_ccdag.X = append(_ccdag.X, _gdfdf)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0054\u0061\u0062l\u0065\u0073 \u0025\u0076", _aefge.Name)
				if _gcdgg := d.Skip(); _gcdgg != nil {
					return _gcdgg
				}
			}
		case _b.EndElement:
			break _ffgcc
		case _b.CharData:
		}
	}
	return nil
}

type ST_SheetViewType byte

// ValidateWithPath validates the CT_PhoneticRun and its children, prefixing error messages with path
func (_fceg *CT_PhoneticRun) ValidateWithPath(path string) error { return nil }

func (_fedf *CT_GroupLevel) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abgea := range start.Attr {
		if _abgea.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_cbaeb, _fafc := _abgea.Value, error(nil)
			if _fafc != nil {
				return _fafc
			}
			_fedf.UniqueNameAttr = _cbaeb
			continue
		}
		if _abgea.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_ggbbb, _ecab := _abgea.Value, error(nil)
			if _ecab != nil {
				return _ecab
			}
			_fedf.CaptionAttr = _ggbbb
			continue
		}
		if _abgea.Name.Local == "\u0075\u0073\u0065\u0072" {
			_cedbg, _cggcg := _eb.ParseBool(_abgea.Value)
			if _cggcg != nil {
				return _cggcg
			}
			_fedf.UserAttr = &_cedbg
			continue
		}
		if _abgea.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0052\u006f\u006c\u006c\u0055\u0070" {
			_afgc, _fddca := _eb.ParseBool(_abgea.Value)
			if _fddca != nil {
				return _fddca
			}
			_fedf.CustomRollUpAttr = &_afgc
			continue
		}
	}
_agfab:
	for {
		_abfdc, _dadgc := d.Token()
		if _dadgc != nil {
			return _dadgc
		}
		switch _gbade := _abfdc.(type) {
		case _b.StartElement:
			switch _gbade.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0073"}:
				_fedf.Groups = NewCT_Groups()
				if _eadee := d.DecodeElement(_fedf.Groups, &_gbade); _eadee != nil {
					return _eadee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fedf.ExtLst = NewCT_ExtensionList()
				if _ddfcfd := d.DecodeElement(_fedf.ExtLst, &_gbade); _ddfcfd != nil {
					return _ddfcfd
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c \u0025\u0076", _gbade.Name)
				if _bfdgb := d.Skip(); _bfdgb != nil {
					return _bfdgb
				}
			}
		case _b.EndElement:
			break _agfab
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_FunctionGroups() *CT_FunctionGroups { _fdeae := &CT_FunctionGroups{}; return _fdeae }

// ValidateWithPath validates the CT_FunctionGroups and its children, prefixing error messages with path
func (_ccffd *CT_FunctionGroups) ValidateWithPath(path string) error {
	for _eaceg, _gaacff := range _ccffd.FunctionGroup {
		if _agcfa := _gaacff.ValidateWithPath(_ec.Sprintf("%\u0073/\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006eG\u0072\u006f\u0075\u0070[%\u0064\u005d", path, _eaceg)); _agcfa != nil {
			return _agcfa
		}
	}
	return nil
}

func (_gbcge *CT_GradientFill) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gbcge.TypeAttr != ST_GradientTypeUnset {
		_efbg, _cebg := _gbcge.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _cebg != nil {
			return _cebg
		}
		start.Attr = append(start.Attr, _efbg)
	}
	if _gbcge.DegreeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0067\u0072\u0065\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_gbcge.DegreeAttr)})
	}
	if _gbcge.LeftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u0066\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_gbcge.LeftAttr)})
	}
	if _gbcge.RightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0069\u0067h\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_gbcge.RightAttr)})
	}
	if _gbcge.TopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0070"}, Value: _ec.Sprintf("\u0025\u0076", *_gbcge.TopAttr)})
	}
	if _gbcge.BottomAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, Value: _ec.Sprintf("\u0025\u0076", *_gbcge.BottomAttr)})
	}
	e.EncodeToken(start)
	if _gbcge.Stop != nil {
		_caddg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0074\u006f\u0070"}}
		for _, _ecbfe := range _gbcge.Stop {
			e.EncodeElement(_ecbfe, _caddg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cabfaf *ST_Comments) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cabfaf = 0
	case "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065":
		*_cabfaf = 1
	case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
		*_cabfaf = 2
	case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074":
		*_cabfaf = 3
	}
	return nil
}

func (_bcdfgg ST_DynamicFilterType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bcdfgg.String(), start)
}

func (_cdaae *CT_Item) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ggdc := range start.Attr {
		if _ggdc.Name.Local == "\u006e" {
			_dbedg, _fcaaf := _ggdc.Value, error(nil)
			if _fcaaf != nil {
				return _fcaaf
			}
			_cdaae.NAttr = &_dbedg
			continue
		}
		if _ggdc.Name.Local == "\u0074" {
			_cdaae.TAttr.UnmarshalXMLAttr(_ggdc)
			continue
		}
		if _ggdc.Name.Local == "\u0068" {
			_cfdaad, _ggeca := _eb.ParseBool(_ggdc.Value)
			if _ggeca != nil {
				return _ggeca
			}
			_cdaae.HAttr = &_cfdaad
			continue
		}
		if _ggdc.Name.Local == "\u0073" {
			_fcdgcd, _ggfead := _eb.ParseBool(_ggdc.Value)
			if _ggfead != nil {
				return _ggfead
			}
			_cdaae.SAttr = &_fcdgcd
			continue
		}
		if _ggdc.Name.Local == "\u0073\u0064" {
			_bgcaa, _dafba := _eb.ParseBool(_ggdc.Value)
			if _dafba != nil {
				return _dafba
			}
			_cdaae.SdAttr = &_bgcaa
			continue
		}
		if _ggdc.Name.Local == "\u0066" {
			_ebbee, _acad := _eb.ParseBool(_ggdc.Value)
			if _acad != nil {
				return _acad
			}
			_cdaae.FAttr = &_ebbee
			continue
		}
		if _ggdc.Name.Local == "\u006d" {
			_fbaee, _dgeef := _eb.ParseBool(_ggdc.Value)
			if _dgeef != nil {
				return _dgeef
			}
			_cdaae.MAttr = &_fbaee
			continue
		}
		if _ggdc.Name.Local == "\u0063" {
			_cffea, _fgeef := _eb.ParseBool(_ggdc.Value)
			if _fgeef != nil {
				return _fgeef
			}
			_cdaae.CAttr = &_cffea
			continue
		}
		if _ggdc.Name.Local == "\u0078" {
			_dcgg, _fagdfb := _eb.ParseUint(_ggdc.Value, 10, 32)
			if _fagdfb != nil {
				return _fagdfb
			}
			_bgcba := uint32(_dcgg)
			_cdaae.XAttr = &_bgcba
			continue
		}
		if _ggdc.Name.Local == "\u0064" {
			_dgcff, _geeef := _eb.ParseBool(_ggdc.Value)
			if _geeef != nil {
				return _geeef
			}
			_cdaae.DAttr = &_dgcff
			continue
		}
		if _ggdc.Name.Local == "\u0065" {
			_faebee, _gffcg := _eb.ParseBool(_ggdc.Value)
			if _gffcg != nil {
				return _gffcg
			}
			_cdaae.EAttr = &_faebee
			continue
		}
	}
	for {
		_fcfe, _fbfca := d.Token()
		if _fbfca != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u003a\u0020\u0025\u0073", _fbfca)
		}
		if _fcff, _abedf := _fcfe.(_b.EndElement); _abedf && _fcff.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_ExternalCell() *CT_ExternalCell { _badb := &CT_ExternalCell{}; return _badb }

func NewCT_RevisionComment() *CT_RevisionComment {
	_aageeg := &CT_RevisionComment{}
	_aageeg.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _aageeg
}

func NewCT_PivotFilters() *CT_PivotFilters { _bfadc := &CT_PivotFilters{}; return _bfadc }

type CT_GradientStop struct {

	// Gradient Stop Position
	PositionAttr float64

	// Color
	Color *CT_Color
}

func (_cecbbf *ST_HtmlFmt) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cecbbf = 0
	case "\u006e\u006f\u006e\u0065":
		*_cecbbf = 1
	case "\u0072\u0074\u0066":
		*_cecbbf = 2
	case "\u0061\u006c\u006c":
		*_cecbbf = 3
	}
	return nil
}

type ST_CfvoType byte

type CT_ColFields struct {

	// Repeated Items Count
	CountAttr *uint32

	// Field
	Field []*CT_Field
}

func NewCT_ProtectedRange() *CT_ProtectedRange { _fgeea := &CT_ProtectedRange{}; return _fgeea }

func (_ffcfg ST_IconSetType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ffcfg.String(), start)
}

func NewCT_DiscretePr() *CT_DiscretePr { _fgebg := &CT_DiscretePr{}; return _fgebg }

func (_dfbafc *ST_ItemType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fadbb, _ecgee := d.Token()
	if _ecgee != nil {
		return _ecgee
	}
	if _dgacf, _edefc := _fadbb.(_b.EndElement); _edefc && _dgacf.Name == start.Name {
		*_dfbafc = 1
		return nil
	}
	if _bafgag, _cfgge := _fadbb.(_b.CharData); !_cfgge {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fadbb)
	} else {
		switch string(_bafgag) {
		case "":
			*_dfbafc = 0
		case "\u0064\u0061\u0074\u0061":
			*_dfbafc = 1
		case "\u0064e\u0066\u0061\u0075\u006c\u0074":
			*_dfbafc = 2
		case "\u0073\u0075\u006d":
			*_dfbafc = 3
		case "\u0063\u006f\u0075\u006e\u0074\u0041":
			*_dfbafc = 4
		case "\u0061\u0076\u0067":
			*_dfbafc = 5
		case "\u006d\u0061\u0078":
			*_dfbafc = 6
		case "\u006d\u0069\u006e":
			*_dfbafc = 7
		case "\u0070r\u006f\u0064\u0075\u0063\u0074":
			*_dfbafc = 8
		case "\u0063\u006f\u0075n\u0074":
			*_dfbafc = 9
		case "\u0073\u0074\u0064\u0044\u0065\u0076":
			*_dfbafc = 10
		case "\u0073t\u0064\u0044\u0065\u0076\u0050":
			*_dfbafc = 11
		case "\u0076\u0061\u0072":
			*_dfbafc = 12
		case "\u0076\u0061\u0072\u0050":
			*_dfbafc = 13
		case "\u0067\u0072\u0061n\u0064":
			*_dfbafc = 14
		case "\u0062\u006c\u0061n\u006b":
			*_dfbafc = 15
		}
	}
	_fadbb, _ecgee = d.Token()
	if _ecgee != nil {
		return _ecgee
	}
	if _ccdbg, _eegcae := _fadbb.(_b.EndElement); _eegcae && _ccdbg.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fadbb)
}

func NewCT_PivotCaches() *CT_PivotCaches { _gcaae := &CT_PivotCaches{}; return _gcaae }

func NewCT_Color() *CT_Color { _aggef := &CT_Color{}; return _aggef }

// ValidateWithPath validates the CT_MdxTuple and its children, prefixing error messages with path
func (_egfgc *CT_MdxTuple) ValidateWithPath(path string) error {
	for _cefgc, _bdaeg := range _egfgc.N {
		if _ceedb := _bdaeg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _cefgc)); _ceedb != nil {
			return _ceedb
		}
	}
	return nil
}

func NewCT_Dialogsheet() *CT_Dialogsheet { _ccfca := &CT_Dialogsheet{}; return _ccfca }

func (_bbefg *CT_RevisionHeaders) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _bbefg.GuidAttr)})
	if _bbefg.LastGuidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0061\u0073\u0074\u0047\u0075\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_bbefg.LastGuidAttr)})
	}
	if _bbefg.SharedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0061\u0072\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bbefg.SharedAttr))})
	}
	if _bbefg.DiskRevisionsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u006b\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bbefg.DiskRevisionsAttr))})
	}
	if _bbefg.HistoryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068i\u0073\u0074\u006f\u0072\u0079"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bbefg.HistoryAttr))})
	}
	if _bbefg.TrackRevisionsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0072\u0061\u0063\u006b\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bbefg.TrackRevisionsAttr))})
	}
	if _bbefg.ExclusiveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065x\u0063\u006c\u0075\u0073\u0069\u0076e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bbefg.ExclusiveAttr))})
	}
	if _bbefg.RevisionIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_bbefg.RevisionIdAttr)})
	}
	if _bbefg.VersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076e\u0072\u0073\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_bbefg.VersionAttr)})
	}
	if _bbefg.KeepChangeHistoryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006b\u0065\u0065\u0070\u0043\u0068\u0061\u006e\u0067\u0065\u0048\u0069s\u0074\u006f\u0072\u0079"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bbefg.KeepChangeHistoryAttr))})
	}
	if _bbefg.ProtectedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u006f\u0074\u0065\u0063\u0074\u0065d"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bbefg.ProtectedAttr))})
	}
	if _bbefg.PreserveHistoryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0048\u0069\u0073\u0074\u006f\u0072\u0079"}, Value: _ec.Sprintf("\u0025\u0076", *_bbefg.PreserveHistoryAttr)})
	}
	e.EncodeToken(start)
	_ecgec := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0068\u0065\u0061\u0064\u0065r"}}
	for _, _ceebb := range _bbefg.Header {
		e.EncodeElement(_ceebb, _ecgec)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_PCDSDTCEntries struct {

	// Tuple Count
	CountAttr *uint32

	// No Value
	M []*CT_Missing

	// Numeric Value
	N []*CT_Number

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String
}

func (_cgecf *CT_Xf) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebfaa := range start.Attr {
		if _ebfaa.Name.Local == "\u0061p\u0070\u006c\u0079\u0046\u006f\u006et" {
			_ddbae, _edega := _eb.ParseBool(_ebfaa.Value)
			if _edega != nil {
				return _edega
			}
			_cgecf.ApplyFontAttr = &_ddbae
			continue
		}
		if _ebfaa.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_bccef, _agebae := _eb.ParseUint(_ebfaa.Value, 10, 32)
			if _agebae != nil {
				return _agebae
			}
			_ecdfe := uint32(_bccef)
			_cgecf.NumFmtIdAttr = &_ecdfe
			continue
		}
		if _ebfaa.Name.Local == "\u0061p\u0070\u006c\u0079\u0046\u0069\u006cl" {
			_bcceb, _fbcfe := _eb.ParseBool(_ebfaa.Value)
			if _fbcfe != nil {
				return _fbcfe
			}
			_cgecf.ApplyFillAttr = &_bcceb
			continue
		}
		if _ebfaa.Name.Local == "\u0066\u0069\u006c\u006c\u0049\u0064" {
			_dbgbg, _eebaf := _eb.ParseUint(_ebfaa.Value, 10, 32)
			if _eebaf != nil {
				return _eebaf
			}
			_bgagc := uint32(_dbgbg)
			_cgecf.FillIdAttr = &_bgagc
			continue
		}
		if _ebfaa.Name.Local == "\u0078\u0066\u0049\u0064" {
			_eadca, _dbafbf := _eb.ParseUint(_ebfaa.Value, 10, 32)
			if _dbafbf != nil {
				return _dbafbf
			}
			_acfcc := uint32(_eadca)
			_cgecf.XfIdAttr = &_acfcc
			continue
		}
		if _ebfaa.Name.Local == "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078" {
			_dgacc, _gegdd := _eb.ParseBool(_ebfaa.Value)
			if _gegdd != nil {
				return _gegdd
			}
			_cgecf.QuotePrefixAttr = &_dgacc
			continue
		}
		if _ebfaa.Name.Local == "p\u0069\u0076\u006f\u0074\u0042\u0075\u0074\u0074\u006f\u006e" {
			_efgad, _bdeeda := _eb.ParseBool(_ebfaa.Value)
			if _bdeeda != nil {
				return _bdeeda
			}
			_cgecf.PivotButtonAttr = &_efgad
			continue
		}
		if _ebfaa.Name.Local == "\u0061\u0070\u0070\u006c\u0079\u004e\u0075\u006d\u0062\u0065\u0072\u0046o\u0072\u006d\u0061\u0074" {
			_adefgg, _fcfcc := _eb.ParseBool(_ebfaa.Value)
			if _fcfcc != nil {
				return _fcfcc
			}
			_cgecf.ApplyNumberFormatAttr = &_adefgg
			continue
		}
		if _ebfaa.Name.Local == "\u0066\u006f\u006e\u0074\u0049\u0064" {
			_dbbcc, _gffbe := _eb.ParseUint(_ebfaa.Value, 10, 32)
			if _gffbe != nil {
				return _gffbe
			}
			_bffdc := uint32(_dbbcc)
			_cgecf.FontIdAttr = &_bffdc
			continue
		}
		if _ebfaa.Name.Local == "\u0062\u006f\u0072\u0064\u0065\u0072\u0049\u0064" {
			_degad, _ddcfe := _eb.ParseUint(_ebfaa.Value, 10, 32)
			if _ddcfe != nil {
				return _ddcfe
			}
			_acebb := uint32(_degad)
			_cgecf.BorderIdAttr = &_acebb
			continue
		}
		if _ebfaa.Name.Local == "a\u0070\u0070\u006c\u0079\u0042\u006f\u0072\u0064\u0065\u0072" {
			_agacbe, _ggbgcbc := _eb.ParseBool(_ebfaa.Value)
			if _ggbgcbc != nil {
				return _ggbgcbc
			}
			_cgecf.ApplyBorderAttr = &_agacbe
			continue
		}
		if _ebfaa.Name.Local == "\u0061\u0070\u0070\u006c\u0079\u0041\u006c\u0069\u0067n\u006d\u0065\u006e\u0074" {
			_fbaag, _gccfcf := _eb.ParseBool(_ebfaa.Value)
			if _gccfcf != nil {
				return _gccfcf
			}
			_cgecf.ApplyAlignmentAttr = &_fbaag
			continue
		}
		if _ebfaa.Name.Local == "\u0061p\u0070l\u0079\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e" {
			_gfabeb, _gdfaeb := _eb.ParseBool(_ebfaa.Value)
			if _gdfaeb != nil {
				return _gdfaeb
			}
			_cgecf.ApplyProtectionAttr = &_gfabeb
			continue
		}
	}
_eaaafg:
	for {
		_aabed, _cgabc := d.Token()
		if _cgabc != nil {
			return _cgabc
		}
		switch _ebfab := _aabed.(type) {
		case _b.StartElement:
			switch _ebfab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}:
				_cgecf.Alignment = NewCT_CellAlignment()
				if _faadgde := d.DecodeElement(_cgecf.Alignment, &_ebfab); _faadgde != nil {
					return _faadgde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_cgecf.Protection = NewCT_CellProtection()
				if _facef := d.DecodeElement(_cgecf.Protection, &_ebfab); _facef != nil {
					return _facef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgecf.ExtLst = NewCT_ExtensionList()
				if _efeaa := d.DecodeElement(_cgecf.ExtLst, &_ebfab); _efeaa != nil {
					return _efeaa
				}
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0043\u0054\u005fX\u0066 \u0025\u0076", _ebfab.Name)
				if _aabgg := d.Skip(); _aabgg != nil {
					return _aabgg
				}
			}
		case _b.EndElement:
			break _eaaafg
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_FontName() *CT_FontName { _fbadg := &CT_FontName{}; return _fbadg }

const (
	ST_RevisionActionUnset  ST_RevisionAction = 0
	ST_RevisionActionAdd    ST_RevisionAction = 1
	ST_RevisionActionDelete ST_RevisionAction = 2
)

// Validate validates the CT_PivotDimension and its children
func (_fdffb *CT_PivotDimension) Validate() error {
	return _fdffb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_TableStyle and its children, prefixing error messages with path
func (_gcdaa *CT_TableStyle) ValidateWithPath(path string) error {
	for _cfdcfa, _ddfbcd := range _gcdaa.TableStyleElement {
		if _dffbfa := _ddfbcd.ValidateWithPath(_ec.Sprintf("\u0025s\u002f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065E\u006c\u0065\u006d\u0065\u006e\u0074\u005b\u0025\u0064\u005d", path, _cfdcfa)); _dffbfa != nil {
			return _dffbfa
		}
	}
	return nil
}

func NewCT_SheetId() *CT_SheetId { _egddg := &CT_SheetId{}; return _egddg }

// ValidateWithPath validates the CT_VolType and its children, prefixing error messages with path
func (_cdbgb *CT_VolType) ValidateWithPath(path string) error {
	if _cdbgb.TypeAttr == ST_VolDepTypeUnset {
		return _ec.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _afgad := _cdbgb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _afgad != nil {
		return _afgad
	}
	for _dcdceac, _bdcec := range _cdbgb.Main {
		if _fbabg := _bdcec.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u004d\u0061\u0069\u006e\u005b\u0025\u0064\u005d", path, _dcdceac)); _fbabg != nil {
			return _fbabg
		}
	}
	return nil
}

func (_efgdac *ST_MdxSetOrder) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aegfb, _fgadg := d.Token()
	if _fgadg != nil {
		return _fgadg
	}
	if _bbeaee, _eceaad := _aegfb.(_b.EndElement); _eceaad && _bbeaee.Name == start.Name {
		*_efgdac = 1
		return nil
	}
	if _fgagde, _ebgge := _aegfb.(_b.CharData); !_ebgge {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aegfb)
	} else {
		switch string(_fgagde) {
		case "":
			*_efgdac = 0
		case "\u0075":
			*_efgdac = 1
		case "\u0061":
			*_efgdac = 2
		case "\u0064":
			*_efgdac = 3
		case "\u0061\u0061":
			*_efgdac = 4
		case "\u0061\u0064":
			*_efgdac = 5
		case "\u006e\u0061":
			*_efgdac = 6
		case "\u006e\u0064":
			*_efgdac = 7
		}
	}
	_aegfb, _fgadg = d.Token()
	if _fgadg != nil {
		return _fgadg
	}
	if _gcdcbd, _bgdfgg := _aegfb.(_b.EndElement); _bgdfgg && _gcdcbd.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aegfb)
}

func (_aaagg ST_MdxSetOrder) ValidateWithPath(path string) error {
	switch _aaagg {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aaagg))
	}
	return nil
}

func (_aadeb ST_GradientType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_aadeb.String(), start)
}

func (_babec *CT_SheetViews) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gaaedc:
	for {
		_cbaab, _dgadg := d.Token()
		if _dgadg != nil {
			return _dgadg
		}
		switch _dafeac := _cbaab.(type) {
		case _b.StartElement:
			switch _dafeac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}:
				_fecfb := NewCT_SheetView()
				if _geffg := d.DecodeElement(_fecfb, &_dafeac); _geffg != nil {
					return _geffg
				}
				_babec.SheetView = append(_babec.SheetView, _fecfb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_babec.ExtLst = NewCT_ExtensionList()
				if _ccfag := d.DecodeElement(_babec.ExtLst, &_dafeac); _ccfag != nil {
					return _ccfag
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073 \u0025\u0076", _dafeac.Name)
				if _defgc := d.Skip(); _defgc != nil {
					return _defgc
				}
			}
		case _b.EndElement:
			break _gaaedc
		case _b.CharData:
		}
	}
	return nil
}

func (_ecfbef *CT_VerticalAlignFontProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ecfbef.ValAttr = _bb.ST_VerticalAlignRun(1)
	for _, _geffb := range start.Attr {
		if _geffb.Name.Local == "\u0076\u0061\u006c" {
			_ecfbef.ValAttr.UnmarshalXMLAttr(_geffb)
			continue
		}
	}
	for {
		_befee, _eegca := d.Token()
		if _eegca != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006cA\u006c\u0069\u0067\u006e\u0046\u006f\u006e\u0074\u0050\u0072op\u0065\u0072\u0074y\u003a \u0025\u0073", _eegca)
		}
		if _bfabb, _dfbdc := _befee.(_b.EndElement); _dfbdc && _bfabb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cgaaa *CT_ColFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cgaaa.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_cgaaa.CountAttr)})
	}
	e.EncodeToken(start)
	_ffeed := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064"}}
	for _, _edb := range _cgaaa.Field {
		e.EncodeElement(_edb, _ffeed)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_DdeItems struct {

	// DDE Item definition
	DdeItem []*CT_DdeItem
}

// Validate validates the CT_ObjectPr and its children
func (_gfdega *CT_ObjectPr) Validate() error {
	return _gfdega.ValidateWithPath("C\u0054\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0050\u0072")
}

// ValidateWithPath validates the CT_WebPr and its children, prefixing error messages with path
func (_dcdddf *CT_WebPr) ValidateWithPath(path string) error {
	if _cada := _dcdddf.HtmlFormatAttr.ValidateWithPath(path + "\u002fH\u0074m\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0041\u0074\u0074\u0072"); _cada != nil {
		return _cada
	}
	if _dcdddf.Tables != nil {
		if _dfaafc := _dcdddf.Tables.ValidateWithPath(path + "\u002fT\u0061\u0062\u006c\u0065\u0073"); _dfaafc != nil {
			return _dfaafc
		}
	}
	return nil
}

func (_dgabcg ST_Orientation) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_agcgbb := _b.Attr{}
	_agcgbb.Name = name
	switch _dgabcg {
	case ST_OrientationUnset:
		_agcgbb.Value = ""
	case ST_OrientationDefault:
		_agcgbb.Value = "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case ST_OrientationPortrait:
		_agcgbb.Value = "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074"
	case ST_OrientationLandscape:
		_agcgbb.Value = "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e"
	}
	return _agcgbb, nil
}

func (_ebfbc *Worksheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003aw\u006f\u0072\u006b\u0073\u0068\u0065\u0065\u0074"
	return _ebfbc.CT_Worksheet.MarshalXML(e, start)
}

func NewCT_DataFields() *CT_DataFields { _cegee := &CT_DataFields{}; return _cegee }

// ValidateWithPath validates the Revisions and its children, prefixing error messages with path
func (_ffage *Revisions) ValidateWithPath(path string) error {
	if _bgdgf := _ffage.CT_Revisions.ValidateWithPath(path); _bgdgf != nil {
		return _bgdgf
	}
	return nil
}

// ValidateWithPath validates the CT_Sheet and its children, prefixing error messages with path
func (_fedfb *CT_Sheet) ValidateWithPath(path string) error {
	if _edgggc := _fedfb.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _edgggc != nil {
		return _edgggc
	}
	return nil
}

// Validate validates the CT_MapInfo and its children
func (_ceeda *CT_MapInfo) Validate() error {
	return _ceeda.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u0070\u0049\u006e\u0066\u006f")
}

const (
	ST_FilterOperatorUnset              ST_FilterOperator = 0
	ST_FilterOperatorEqual              ST_FilterOperator = 1
	ST_FilterOperatorLessThan           ST_FilterOperator = 2
	ST_FilterOperatorLessThanOrEqual    ST_FilterOperator = 3
	ST_FilterOperatorNotEqual           ST_FilterOperator = 4
	ST_FilterOperatorGreaterThanOrEqual ST_FilterOperator = 5
	ST_FilterOperatorGreaterThan        ST_FilterOperator = 6
)

func (_ggea *CT_CustomWorkbookViews) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ddcg := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u0075st\u006fm\u0057\u006f\u0072\u006b\u0062o\u006f\u006b\u0056\u0069\u0065\u0077"}}
	for _, _dafac := range _ggea.CustomWorkbookView {
		e.EncodeElement(_dafac, _ddcg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_GroupLevels() *CT_GroupLevels { _bbage := &CT_GroupLevels{}; return _bbage }

// ValidateWithPath validates the CT_DiscretePr and its children, prefixing error messages with path
func (_fcgab *CT_DiscretePr) ValidateWithPath(path string) error {
	for _gagga, _fcddd := range _fcgab.X {
		if _dedgg := _fcddd.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _gagga)); _dedgg != nil {
			return _dedgg
		}
	}
	return nil
}

func (_defbeb ST_PageOrder) ValidateWithPath(path string) error {
	switch _defbeb {
	case 0, 1, 2:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_defbeb))
	}
	return nil
}

type CT_RevisionComment struct {

	// Sheet Id
	SheetIdAttr uint32

	// Cell
	CellAttr string

	// GUID
	GuidAttr string

	// User Action
	ActionAttr ST_RevisionAction

	// Always Show Comment
	AlwaysShowAttr *bool

	// Old Comment
	OldAttr *bool

	// Comment In Hidden Row
	HiddenRowAttr *bool

	// Hidden Column
	HiddenColumnAttr *bool

	// Author
	AuthorAttr string

	// Original Comment Length
	OldLengthAttr *uint32

	// New Comment Length
	NewLengthAttr *uint32
}

type CT_Sheets struct {

	// Sheet Information
	Sheet []*CT_Sheet
}

type CT_QueryTableRefresh struct {

	// Preserve Sort & Filter Layout
	PreserveSortFilterLayoutAttr *bool

	// Next Field Id Wrapped
	FieldIdWrappedAttr *bool

	// Headers In Last Refresh
	HeadersInLastRefreshAttr *bool

	// Minimum Refresh Version
	MinimumVersionAttr *uint8

	// Next field id
	NextIdAttr *uint32

	// Columns Left
	UnboundColumnsLeftAttr *uint32

	// Columns Right
	UnboundColumnsRightAttr *uint32

	// Query table fields
	QueryTableFields *CT_QueryTableFields

	// Deleted Fields
	QueryTableDeletedFields *CT_QueryTableDeletedFields

	// Sort State
	SortState *CT_SortState

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_IgnoredErrors and its children, prefixing error messages with path
func (_bbeee *CT_IgnoredErrors) ValidateWithPath(path string) error {
	for _cabb, _aacc := range _bbeee.IgnoredError {
		if _cfcgc := _aacc.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0049gn\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u005b\u0025\u0064\u005d", path, _cabb)); _cfcgc != nil {
			return _cfcgc
		}
	}
	if _bbeee.ExtLst != nil {
		if _dgaec := _bbeee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgaec != nil {
			return _dgaec
		}
	}
	return nil
}

func (_gcff *CT_Cfvo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gcff.TypeAttr = ST_CfvoType(1)
	for _, _dcdg := range start.Attr {
		if _dcdg.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gcff.TypeAttr.UnmarshalXMLAttr(_dcdg)
			continue
		}
		if _dcdg.Name.Local == "\u0076\u0061\u006c" {
			_eaea, _bdbc := _dcdg.Value, error(nil)
			if _bdbc != nil {
				return _bdbc
			}
			_gcff.ValAttr = &_eaea
			continue
		}
		if _dcdg.Name.Local == "\u0067\u0074\u0065" {
			_gcdfe, _beae := _eb.ParseBool(_dcdg.Value)
			if _beae != nil {
				return _beae
			}
			_gcff.GteAttr = &_gcdfe
			continue
		}
	}
_befgc:
	for {
		_gbadc, _egfb := d.Token()
		if _egfb != nil {
			return _egfb
		}
		switch _ceagd := _gbadc.(type) {
		case _b.StartElement:
			switch _ceagd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcff.ExtLst = NewCT_ExtensionList()
				if _dcfb := d.DecodeElement(_gcff.ExtLst, &_ceagd); _dcfb != nil {
					return _dcfb
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u0066\u0076\u006f\u0020\u0025\u0076", _ceagd.Name)
				if _gede := d.Skip(); _gede != nil {
					return _gede
				}
			}
		case _b.EndElement:
			break _befgc
		case _b.CharData:
		}
	}
	return nil
}

func (_bffeef *CT_MetadataStringIndex) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078"}, Value: _ec.Sprintf("\u0025\u0076", _bffeef.XAttr)})
	if _bffeef.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bffeef.SAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_ebf *CT_AutoSortScope) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_bff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_ebf.PivotArea, _bff)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_adff *CT_CustomChartsheetViews) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cgfd:
	for {
		_bgeec, _bdcee := d.Token()
		if _bdcee != nil {
			return _bdcee
		}
		switch _fecdg := _bgeec.(type) {
		case _b.StartElement:
			switch _fecdg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}:
				_fdbga := NewCT_CustomChartsheetView()
				if _dgcf := d.DecodeElement(_fdbga, &_fecdg); _dgcf != nil {
					return _dgcf
				}
				_adff.CustomSheetView = append(_adff.CustomSheetView, _fdbga)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073\u0020%\u0076", _fecdg.Name)
				if _bdee := d.Skip(); _bdee != nil {
					return _bdee
				}
			}
		case _b.EndElement:
			break _cgfd
		case _b.CharData:
		}
	}
	return nil
}

func (_degg *CT_Colors) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dgfd:
	for {
		_dagfg, _ccad := d.Token()
		if _ccad != nil {
			return _ccad
		}
		switch _bcab := _dagfg.(type) {
		case _b.StartElement:
			switch _bcab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073"}:
				_degg.IndexedColors = NewCT_IndexedColors()
				if _dabc := d.DecodeElement(_degg.IndexedColors, &_bcab); _dabc != nil {
					return _dabc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006dr\u0075\u0043\u006f\u006c\u006f\u0072s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006dr\u0075\u0043\u006f\u006c\u006f\u0072s"}:
				_degg.MruColors = NewCT_MRUColors()
				if _eecbg := d.DecodeElement(_degg.MruColors, &_bcab); _eecbg != nil {
					return _eecbg
				}
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u006f\u006co\u0072\u0073 \u0025\u0076", _bcab.Name)
				if _ffcfc := d.Skip(); _ffcfc != nil {
					return _ffcfc
				}
			}
		case _b.EndElement:
			break _dgfd
		case _b.CharData:
		}
	}
	return nil
}

func (_fddad *CT_NumFmt) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _fddad.NumFmtIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u0064\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _fddad.FormatCodeAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_adbcf *CT_ServerFormat) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _adbcf.CultureAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063u\u006c\u0074\u0075\u0072\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_adbcf.CultureAttr)})
	}
	if _adbcf.FormatAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_adbcf.FormatAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bffde ST_Scope) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fbcbf := _b.Attr{}
	_fbcbf.Name = name
	switch _bffde {
	case ST_ScopeUnset:
		_fbcbf.Value = ""
	case ST_ScopeSelection:
		_fbcbf.Value = "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"
	case ST_ScopeData:
		_fbcbf.Value = "\u0064\u0061\u0074\u0061"
	case ST_ScopeField:
		_fbcbf.Value = "\u0066\u0069\u0065l\u0064"
	}
	return _fbcbf, nil
}

func (_fdaef ST_Comments) Validate() error { return _fdaef.ValidateWithPath("") }

// Validate validates the CT_Break and its children
func (_bcc *CT_Break) Validate() error {
	return _bcc.ValidateWithPath("\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b")
}

// ValidateWithPath validates the CT_Sheets and its children, prefixing error messages with path
func (_faddgd *CT_Sheets) ValidateWithPath(path string) error {
	for _gbcgec, _dggbba := range _faddgd.Sheet {
		if _edeec := _dggbba.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002fS\u0068\u0065\u0065\u0074\u005b\u0025\u0064\u005d", path, _gbcgec)); _edeec != nil {
			return _edeec
		}
	}
	return nil
}

func NewCT_MetadataType() *CT_MetadataType { _dcbff := &CT_MetadataType{}; return _dcbff }

func (_efeae *ST_Scope) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_efeae = 0
	case "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn":
		*_efeae = 1
	case "\u0064\u0061\u0074\u0061":
		*_efeae = 2
	case "\u0066\u0069\u0065l\u0064":
		*_efeae = 3
	}
	return nil
}

func (_gdagd *ST_DynamicFilterType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gdagd = 0
	case "\u006e\u0075\u006c\u006c":
		*_gdagd = 1
	case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
		*_gdagd = 2
	case "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
		*_gdagd = 3
	case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
		*_gdagd = 4
	case "\u0074\u006f\u0064a\u0079":
		*_gdagd = 5
	case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
		*_gdagd = 6
	case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
		*_gdagd = 7
	case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
		*_gdagd = 8
	case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
		*_gdagd = 9
	case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
		*_gdagd = 10
	case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
		*_gdagd = 11
	case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
		*_gdagd = 12
	case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_gdagd = 13
	case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_gdagd = 14
	case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_gdagd = 15
	case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
		*_gdagd = 16
	case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
		*_gdagd = 17
	case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
		*_gdagd = 18
	case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
		*_gdagd = 19
	case "\u0051\u0031":
		*_gdagd = 20
	case "\u0051\u0032":
		*_gdagd = 21
	case "\u0051\u0033":
		*_gdagd = 22
	case "\u0051\u0034":
		*_gdagd = 23
	case "\u004d\u0031":
		*_gdagd = 24
	case "\u004d\u0032":
		*_gdagd = 25
	case "\u004d\u0033":
		*_gdagd = 26
	case "\u004d\u0034":
		*_gdagd = 27
	case "\u004d\u0035":
		*_gdagd = 28
	case "\u004d\u0036":
		*_gdagd = 29
	case "\u004d\u0037":
		*_gdagd = 30
	case "\u004d\u0038":
		*_gdagd = 31
	case "\u004d\u0039":
		*_gdagd = 32
	case "\u004d\u0031\u0030":
		*_gdagd = 33
	case "\u004d\u0031\u0031":
		*_gdagd = 34
	case "\u004d\u0031\u0032":
		*_gdagd = 35
	}
	return nil
}

func (_bceadb *CT_SheetProtection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bceadb.PasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_bceadb.PasswordAttr)})
	}
	if _bceadb.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_bceadb.AlgorithmNameAttr)})
	}
	if _bceadb.HashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _ec.Sprintf("\u0025\u0076", *_bceadb.HashValueAttr)})
	}
	if _bceadb.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _ec.Sprintf("\u0025\u0076", *_bceadb.SaltValueAttr)})
	}
	if _bceadb.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _ec.Sprintf("\u0025\u0076", *_bceadb.SpinCountAttr)})
	}
	if _bceadb.SheetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bceadb.SheetAttr))})
	}
	if _bceadb.ObjectsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fb\u006a\u0065\u0063\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bceadb.ObjectsAttr))})
	}
	if _bceadb.ScenariosAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bceadb.ScenariosAttr))})
	}
	if _bceadb.FormatCellsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "f\u006f\u0072\u006d\u0061\u0074\u0043\u0065\u006c\u006c\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bceadb.FormatCellsAttr))})
	}
	if _bceadb.FormatColumnsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bceadb.FormatColumnsAttr))})
	}
	if _bceadb.FormatRowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074\u0052\u006f\u0077\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bceadb.FormatRowsAttr))})
	}
	if _bceadb.InsertColumnsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bceadb.InsertColumnsAttr))})
	}
	if _bceadb.InsertRowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bceadb.InsertRowsAttr))})
	}
	if _bceadb.InsertHyperlinksAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006es\u0065\u0072\u0074H\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bceadb.InsertHyperlinksAttr))})
	}
	if _bceadb.DeleteColumnsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006c\u0065\u0074\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bceadb.DeleteColumnsAttr))})
	}
	if _bceadb.DeleteRowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006c\u0065\u0074\u0065\u0052\u006f\u0077\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bceadb.DeleteRowsAttr))})
	}
	if _bceadb.SelectLockedCellsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u006c\u0065\u0063\u0074\u004c\u006f\u0063\u006b\u0065\u0064C\u0065\u006c\u006c\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bceadb.SelectLockedCellsAttr))})
	}
	if _bceadb.SortAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0072\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bceadb.SortAttr))})
	}
	if _bceadb.AutoFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bceadb.AutoFilterAttr))})
	}
	if _bceadb.PivotTablesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bceadb.PivotTablesAttr))})
	}
	if _bceadb.SelectUnlockedCellsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u006c\u0065ct\u0055\u006e\u006c\u006f\u0063\u006b\u0065\u0064\u0043\u0065\u006c\u006c\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bceadb.SelectUnlockedCellsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_IgnoredError() *CT_IgnoredError { _adddb := &CT_IgnoredError{}; return _adddb }

func (_abfcd ST_CellComments) ValidateWithPath(path string) error {
	switch _abfcd {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abfcd))
	}
	return nil
}

func (_edcf *CT_BookView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _edcf.VisibilityAttr != ST_VisibilityUnset {
		_fdg, _faeg := _edcf.VisibilityAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0069\u0073\u0069\u0062\u0069\u006c\u0069\u0074\u0079"})
		if _faeg != nil {
			return _faeg
		}
		start.Attr = append(start.Attr, _fdg)
	}
	if _edcf.MinimizedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_edcf.MinimizedAttr))})
	}
	if _edcf.ShowHorizontalScrollAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_edcf.ShowHorizontalScrollAttr))})
	}
	if _edcf.ShowVerticalScrollAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_edcf.ShowVerticalScrollAttr))})
	}
	if _edcf.ShowSheetTabsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_edcf.ShowSheetTabsAttr))})
	}
	if _edcf.XWindowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078W\u0069\u006e\u0064\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0076", *_edcf.XWindowAttr)})
	}
	if _edcf.YWindowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079W\u0069\u006e\u0064\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0076", *_edcf.YWindowAttr)})
	}
	if _edcf.WindowWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068"}, Value: _ec.Sprintf("\u0025\u0076", *_edcf.WindowWidthAttr)})
	}
	if _edcf.WindowHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_edcf.WindowHeightAttr)})
	}
	if _edcf.TabRatioAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f"}, Value: _ec.Sprintf("\u0025\u0076", *_edcf.TabRatioAttr)})
	}
	if _edcf.FirstSheetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0053\u0068\u0065\u0065\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_edcf.FirstSheetAttr)})
	}
	if _edcf.ActiveTabAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061c\u0074\u0069\u0076\u0065\u0054\u0061b"}, Value: _ec.Sprintf("\u0025\u0076", *_edcf.ActiveTabAttr)})
	}
	if _edcf.AutoFilterDateGroupingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006fFi\u006c\u0074\u0065\u0072\u0044\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0069n\u0067"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_edcf.AutoFilterDateGroupingAttr))})
	}
	e.EncodeToken(start)
	if _edcf.ExtLst != nil {
		_bffa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_edcf.ExtLst, _bffa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type AG_RevData struct {
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}

func (_egacb ST_MdxFunctionType) Validate() error { return _egacb.ValidateWithPath("") }

type CT_SharedUser struct {

	// User Revisions GUID
	GuidAttr string

	// User Name
	NameAttr string

	// User Id
	IdAttr int32

	// Date Time
	DateTimeAttr _g.Time
	ExtLst       *CT_ExtensionList
}

func (_bfcfd ST_WebSourceType) Validate() error { return _bfcfd.ValidateWithPath("") }

// Validate validates the CT_UnderlineProperty and its children
func (_dfdacg *CT_UnderlineProperty) Validate() error {
	return _dfdacg.ValidateWithPath("C\u0054_\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0050\u0072\u006f\u0070er\u0074\u0079")
}

type CT_MetadataTypes struct {

	// Metadata Type Count
	CountAttr *uint32

	// Metadata Type Information
	MetadataType []*CT_MetadataType
}

// Validate validates the CT_PageSetUpPr and its children
func (_agccc *CT_PageSetUpPr) Validate() error {
	return _agccc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0053\u0065t\u0055\u0070\u0050\u0072")
}

func (_bdfeg *CT_Index) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _geeeg := range start.Attr {
		if _geeeg.Name.Local == "\u0076" {
			_fdeea, _cgfff := _eb.ParseUint(_geeeg.Value, 10, 32)
			if _cgfff != nil {
				return _cgfff
			}
			_bdfeg.VAttr = uint32(_fdeea)
			continue
		}
	}
	for {
		_dgaea, _fedb := d.Token()
		if _fedb != nil {
			return _ec.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fI\u006e\u0064\u0065\u0078: \u0025\u0073", _fedb)
		}
		if _dgafe, _ddceb := _dgaea.(_b.EndElement); _ddceb && _dgafe.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_SheetView() *CT_SheetView { _ebdecc := &CT_SheetView{}; return _ebdecc }

// ValidateWithPath validates the CT_Worksheet and its children, prefixing error messages with path
func (_acec *CT_Worksheet) ValidateWithPath(path string) error {
	if _acec.SheetPr != nil {
		if _adbec := _acec.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _adbec != nil {
			return _adbec
		}
	}
	if _acec.Dimension != nil {
		if _bcgbfa := _acec.Dimension.ValidateWithPath(path + "\u002f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"); _bcgbfa != nil {
			return _bcgbfa
		}
	}
	if _acec.SheetViews != nil {
		if _dfeceb := _acec.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _dfeceb != nil {
			return _dfeceb
		}
	}
	if _acec.SheetFormatPr != nil {
		if _bcffe := _acec.SheetFormatPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"); _bcffe != nil {
			return _bcffe
		}
	}
	for _bbfdef, _cbgfc := range _acec.Cols {
		if _eccbfe := _cbgfc.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0043\u006f\u006c\u0073\u005b\u0025\u0064\u005d", path, _bbfdef)); _eccbfe != nil {
			return _eccbfe
		}
	}
	if _adgdd := _acec.SheetData.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"); _adgdd != nil {
		return _adgdd
	}
	if _acec.SheetCalcPr != nil {
		if _febbc := _acec.SheetCalcPr.ValidateWithPath(path + "\u002f\u0053\u0068e\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"); _febbc != nil {
			return _febbc
		}
	}
	if _acec.SheetProtection != nil {
		if _gfabb := _acec.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _gfabb != nil {
			return _gfabb
		}
	}
	if _acec.ProtectedRanges != nil {
		if _agead := _acec.ProtectedRanges.ValidateWithPath(path + "\u002f\u0050r\u006f\u0074\u0065c\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"); _agead != nil {
			return _agead
		}
	}
	if _acec.Scenarios != nil {
		if _egbgb := _acec.Scenarios.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073"); _egbgb != nil {
			return _egbgb
		}
	}
	if _acec.AutoFilter != nil {
		if _gffbbec := _acec.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _gffbbec != nil {
			return _gffbbec
		}
	}
	if _acec.SortState != nil {
		if _egcbbc := _acec.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _egcbbc != nil {
			return _egcbbc
		}
	}
	if _acec.DataConsolidate != nil {
		if _gagfb := _acec.DataConsolidate.ValidateWithPath(path + "\u002f\u0044a\u0074\u0061\u0043o\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"); _gagfb != nil {
			return _gagfb
		}
	}
	if _acec.CustomSheetViews != nil {
		if _ceceeb := _acec.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _ceceeb != nil {
			return _ceceeb
		}
	}
	if _acec.MergeCells != nil {
		if _gfbcc := _acec.MergeCells.ValidateWithPath(path + "/\u004d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"); _gfbcc != nil {
			return _gfbcc
		}
	}
	if _acec.PhoneticPr != nil {
		if _acceg := _acec.PhoneticPr.ValidateWithPath(path + "/\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"); _acceg != nil {
			return _acceg
		}
	}
	for _fcfce, _gccgd := range _acec.ConditionalFormatting {
		if _dbgfe := _gccgd.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0043o\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072m\u0061\u0074\u0074\u0069\u006e\u0067\u005b%\u0064\u005d", path, _fcfce)); _dbgfe != nil {
			return _dbgfe
		}
	}
	if _acec.DataValidations != nil {
		if _cffdg := _acec.DataValidations.ValidateWithPath(path + "\u002f\u0044a\u0074\u0061\u0056a\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"); _cffdg != nil {
			return _cffdg
		}
	}
	if _acec.Hyperlinks != nil {
		if _dcaed := _acec.Hyperlinks.ValidateWithPath(path + "/\u0048\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"); _dcaed != nil {
			return _dcaed
		}
	}
	if _acec.PrintOptions != nil {
		if _degbb := _acec.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _degbb != nil {
			return _degbb
		}
	}
	if _acec.PageMargins != nil {
		if _bbfdc := _acec.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _bbfdc != nil {
			return _bbfdc
		}
	}
	if _acec.PageSetup != nil {
		if _gdacd := _acec.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _gdacd != nil {
			return _gdacd
		}
	}
	if _acec.HeaderFooter != nil {
		if _adddg := _acec.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _adddg != nil {
			return _adddg
		}
	}
	if _acec.RowBreaks != nil {
		if _eefba := _acec.RowBreaks.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"); _eefba != nil {
			return _eefba
		}
	}
	if _acec.ColBreaks != nil {
		if _gcbcb := _acec.ColBreaks.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"); _gcbcb != nil {
			return _gcbcb
		}
	}
	if _acec.CustomProperties != nil {
		if _ggcbff := _acec.CustomProperties.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073"); _ggcbff != nil {
			return _ggcbff
		}
	}
	if _acec.CellWatches != nil {
		if _gegge := _acec.CellWatches.ValidateWithPath(path + "\u002f\u0043\u0065l\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"); _gegge != nil {
			return _gegge
		}
	}
	if _acec.IgnoredErrors != nil {
		if _ceffc := _acec.IgnoredErrors.ValidateWithPath(path + "\u002f\u0049\u0067\u006e\u006f\u0072\u0065\u0064\u0045r\u0072\u006f\u0072\u0073"); _ceffc != nil {
			return _ceffc
		}
	}
	if _acec.SmartTags != nil {
		if _ecadae := _acec.SmartTags.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"); _ecadae != nil {
			return _ecadae
		}
	}
	if _acec.Drawing != nil {
		if _gececg := _acec.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _gececg != nil {
			return _gececg
		}
	}
	if _acec.LegacyDrawing != nil {
		if _agdeb := _acec.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _agdeb != nil {
			return _agdeb
		}
	}
	if _acec.LegacyDrawingHF != nil {
		if _cccbaf := _acec.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _cccbaf != nil {
			return _cccbaf
		}
	}
	if _acec.DrawingHF != nil {
		if _efbbd := _acec.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _efbbd != nil {
			return _efbbd
		}
	}
	if _acec.Picture != nil {
		if _dggbf := _acec.Picture.ValidateWithPath(path + "\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065"); _dggbf != nil {
			return _dggbf
		}
	}
	if _acec.OleObjects != nil {
		if _gfbfe := _acec.OleObjects.ValidateWithPath(path + "/\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"); _gfbfe != nil {
			return _gfbfe
		}
	}
	if _acec.Controls != nil {
		if _ebebc := _acec.Controls.ValidateWithPath(path + "\u002fC\u006f\u006e\u0074\u0072\u006f\u006cs"); _ebebc != nil {
			return _ebebc
		}
	}
	if _acec.WebPublishItems != nil {
		if _dbgcc := _acec.WebPublishItems.ValidateWithPath(path + "\u002f\u0057e\u0062\u0050\u0075b\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"); _dbgcc != nil {
			return _dbgcc
		}
	}
	if _acec.TableParts != nil {
		if _ebabf := _acec.TableParts.ValidateWithPath(path + "/\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"); _ebabf != nil {
			return _ebabf
		}
	}
	if _acec.ExtLst != nil {
		if _bcgfac := _acec.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bcgfac != nil {
			return _bcgfac
		}
	}
	return nil
}

type ST_FormatAction byte

func (_gcagc *CT_RowHierarchiesUsage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _afbdb := range start.Attr {
		if _afbdb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ffcedf, _edaae := _eb.ParseUint(_afbdb.Value, 10, 32)
			if _edaae != nil {
				return _edaae
			}
			_gggdb := uint32(_ffcedf)
			_gcagc.CountAttr = &_gggdb
			continue
		}
	}
_dfcge:
	for {
		_bbbac, _fdagb := d.Token()
		if _fdagb != nil {
			return _fdagb
		}
		switch _fbbabc := _bbbac.(type) {
		case _b.StartElement:
			switch _fbbabc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}:
				_fecbc := NewCT_HierarchyUsage()
				if _bfgdaae := d.DecodeElement(_fecbc, &_fbbabc); _bfgdaae != nil {
					return _bfgdaae
				}
				_gcagc.RowHierarchyUsage = append(_gcagc.RowHierarchyUsage, _fecbc)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u006f\u0077\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065\u0020\u0025\u0076", _fbbabc.Name)
				if _ggdfd := d.Skip(); _ggdfd != nil {
					return _ggdfd
				}
			}
		case _b.EndElement:
			break _dfcge
		case _b.CharData:
		}
	}
	return nil
}

func (_bcgabc *CT_SheetCalcPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bcgabc.FullCalcOnLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bcgabc.FullCalcOnLoadAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_PivotDimension struct {

	// Measure
	MeasureAttr *bool

	// Dimension Name
	NameAttr string

	// Dimension Unique Name
	UniqueNameAttr string

	// Dimension Display Name
	CaptionAttr string
}

func NewCT_WebPublishing() *CT_WebPublishing { _fdaad := &CT_WebPublishing{}; return _fdaad }

func (_fbfde ST_FilterOperator) Validate() error { return _fbfde.ValidateWithPath("") }

type ST_DataConsolidateFunction byte

// ValidateWithPath validates the CT_FutureMetadata and its children, prefixing error messages with path
func (_cebdg *CT_FutureMetadata) ValidateWithPath(path string) error {
	for _cddbg, _fdab := range _cebdg.Bk {
		if _eegb := _fdab.ValidateWithPath(_ec.Sprintf("\u0025s\u002f\u0042\u006b\u005b\u0025\u0064]", path, _cddbg)); _eegb != nil {
			return _eegb
		}
	}
	if _cebdg.ExtLst != nil {
		if _dfaga := _cebdg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dfaga != nil {
			return _dfaga
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Colors and its children, prefixing error messages with path
func (_eeag *CT_Colors) ValidateWithPath(path string) error {
	if _eeag.IndexedColors != nil {
		if _dgdgb := _eeag.IndexedColors.ValidateWithPath(path + "\u002f\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0043o\u006c\u006f\u0072\u0073"); _dgdgb != nil {
			return _dgdgb
		}
	}
	if _eeag.MruColors != nil {
		if _feffb := _eeag.MruColors.ValidateWithPath(path + "\u002f\u004d\u0072\u0075\u0043\u006f\u006c\u006f\u0072\u0073"); _feffb != nil {
			return _feffb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Workbook and its children, prefixing error messages with path
func (_dddfad *CT_Workbook) ValidateWithPath(path string) error {
	if _daffag := _dddfad.ConformanceAttr.ValidateWithPath(path + "\u002f\u0043o\u006e\u0066\u006fr\u006d\u0061\u006e\u0063\u0065\u0041\u0074\u0074\u0072"); _daffag != nil {
		return _daffag
	}
	if _dddfad.FileVersion != nil {
		if _fcafd := _dddfad.FileVersion.ValidateWithPath(path + "\u002f\u0046\u0069l\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"); _fcafd != nil {
			return _fcafd
		}
	}
	if _dddfad.FileSharing != nil {
		if _cadef := _dddfad.FileSharing.ValidateWithPath(path + "\u002f\u0046\u0069l\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"); _cadef != nil {
			return _cadef
		}
	}
	if _dddfad.WorkbookPr != nil {
		if _dbcbbd := _dddfad.WorkbookPr.ValidateWithPath(path + "/\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"); _dbcbbd != nil {
			return _dbcbbd
		}
	}
	if _dddfad.WorkbookProtection != nil {
		if _ecbed := _dddfad.WorkbookProtection.ValidateWithPath(path + "\u002f\u0057\u006f\u0072kb\u006f\u006f\u006b\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _ecbed != nil {
			return _ecbed
		}
	}
	if _dddfad.BookViews != nil {
		if _edafd := _dddfad.BookViews.ValidateWithPath(path + "\u002f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"); _edafd != nil {
			return _edafd
		}
	}
	if _daafe := _dddfad.Sheets.ValidateWithPath(path + "\u002fS\u0068\u0065\u0065\u0074\u0073"); _daafe != nil {
		return _daafe
	}
	if _dddfad.FunctionGroups != nil {
		if _cggea := _dddfad.FunctionGroups.ValidateWithPath(path + "\u002fF\u0075n\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0073"); _cggea != nil {
			return _cggea
		}
	}
	if _dddfad.ExternalReferences != nil {
		if _ebgeg := _dddfad.ExternalReferences.ValidateWithPath(path + "\u002f\u0045\u0078\u0074er\u006e\u0061\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"); _ebgeg != nil {
			return _ebgeg
		}
	}
	if _dddfad.DefinedNames != nil {
		if _ebeeg := _dddfad.DefinedNames.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"); _ebeeg != nil {
			return _ebeeg
		}
	}
	if _dddfad.CalcPr != nil {
		if _dgdefd := _dddfad.CalcPr.ValidateWithPath(path + "\u002fC\u0061\u006c\u0063\u0050\u0072"); _dgdefd != nil {
			return _dgdefd
		}
	}
	if _dddfad.OleSize != nil {
		if _bgcbad := _dddfad.OleSize.ValidateWithPath(path + "\u002f\u004f\u006c\u0065\u0053\u0069\u007a\u0065"); _bgcbad != nil {
			return _bgcbad
		}
	}
	if _dddfad.CustomWorkbookViews != nil {
		if _eagggg := _dddfad.CustomWorkbookViews.ValidateWithPath(path + "/\u0043u\u0073\u0074\u006f\u006d\u0057\u006f\u0072\u006bb\u006f\u006f\u006b\u0056ie\u0077\u0073"); _eagggg != nil {
			return _eagggg
		}
	}
	if _dddfad.PivotCaches != nil {
		if _fcagfa := _dddfad.PivotCaches.ValidateWithPath(path + "\u002f\u0050\u0069v\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"); _fcagfa != nil {
			return _fcagfa
		}
	}
	if _dddfad.SmartTagPr != nil {
		if _defecg := _dddfad.SmartTagPr.ValidateWithPath(path + "/\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"); _defecg != nil {
			return _defecg
		}
	}
	if _dddfad.SmartTagTypes != nil {
		if _aafabd := _dddfad.SmartTagTypes.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067T\u0079\u0070\u0065\u0073"); _aafabd != nil {
			return _aafabd
		}
	}
	if _dddfad.WebPublishing != nil {
		if _geeeb := _dddfad.WebPublishing.ValidateWithPath(path + "\u002f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u0069\u006e\u0067"); _geeeb != nil {
			return _geeeb
		}
	}
	for _eacfd, _agaadd := range _dddfad.FileRecoveryPr {
		if _ddeab := _agaadd.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0046\u0069le\u0052e\u0063\u006f\u0076\u0065\u0072y\u0050\u0072\u005b\u0025\u0064\u005d", path, _eacfd)); _ddeab != nil {
			return _ddeab
		}
	}
	if _dddfad.WebPublishObjects != nil {
		if _aeccbd := _dddfad.WebPublishObjects.ValidateWithPath(path + "\u002fW\u0065b\u0050\u0075\u0062\u006c\u0069s\u0068\u004fb\u006a\u0065\u0063\u0074\u0073"); _aeccbd != nil {
			return _aeccbd
		}
	}
	if _dddfad.ExtLst != nil {
		if _gfddg := _dddfad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfddg != nil {
			return _gfddg
		}
	}
	return nil
}

type CT_SheetViews struct {

	// Worksheet View
	SheetView []*CT_SheetView

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_dafde *CT_SheetData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bfefg:
	for {
		_aceed, _cfdcf := d.Token()
		if _cfdcf != nil {
			return _cfdcf
		}
		switch _dffgb := _aceed.(type) {
		case _b.StartElement:
			switch _dffgb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}:
				_gdabdf := NewCT_Row()
				if _bfacb := d.DecodeElement(_gdabdf, &_dffgb); _bfacb != nil {
					return _bfacb
				}
				_dafde.Row = append(_dafde.Row, _gdabdf)
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u0020\u0025\u0076", _dffgb.Name)
				if _aeddf := d.Skip(); _aeddf != nil {
					return _aeddf
				}
			}
		case _b.EndElement:
			break _bfefg
		case _b.CharData:
		}
	}
	return nil
}

func (_cdcaga ST_Sqref) String() string { return _ea.Join(_cdcaga, "\u0020") }

func (_gcbca *CT_SingleXmlCell) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _gcbca.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _ec.Sprintf("\u0025\u0076", _gcbca.RAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _gcbca.ConnectionIdAttr)})
	e.EncodeToken(start)
	_ebcee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ax\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072"}}
	e.EncodeElement(_gcbca.XmlCellPr, _ebcee)
	if _gcbca.ExtLst != nil {
		_bbgag := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gcbca.ExtLst, _bbgag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bfde *CT_CustomFilters) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bfde.AndAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006e\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bfde.AndAttr))})
	}
	e.EncodeToken(start)
	_aafb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}}
	for _, _eefaa := range _bfde.CustomFilter {
		e.EncodeElement(_eefaa, _aafb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Cfvo and its children, prefixing error messages with path
func (_ebbc *CT_Cfvo) ValidateWithPath(path string) error {
	if _ebbc.TypeAttr == ST_CfvoTypeUnset {
		return _ec.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _dfef := _ebbc.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _dfef != nil {
		return _dfef
	}
	if _ebbc.ExtLst != nil {
		if _afeb := _ebbc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _afeb != nil {
			return _afeb
		}
	}
	return nil
}

func (_cddaaf ST_TextVAlign) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cddaaf.String(), start)
}

func NewCT_Colors() *CT_Colors { _dbca := &CT_Colors{}; return _dbca }

func (_ebfadg *CT_Schema) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbaef := range start.Attr {
		if _dbaef.Name.Local == "\u0049\u0044" {
			_efacb, _bbabf := _dbaef.Value, error(nil)
			if _bbabf != nil {
				return _bbabf
			}
			_ebfadg.IDAttr = _efacb
			continue
		}
		if _dbaef.Name.Local == "\u0053c\u0068\u0065\u006d\u0061\u0052\u0065f" {
			_eaggg, _beccc := _dbaef.Value, error(nil)
			if _beccc != nil {
				return _beccc
			}
			_ebfadg.SchemaRefAttr = &_eaggg
			continue
		}
		if _dbaef.Name.Local == "\u004ea\u006d\u0065\u0073\u0070\u0061\u0063e" {
			_daadc, _ecabb := _dbaef.Value, error(nil)
			if _ecabb != nil {
				return _ecabb
			}
			_ebfadg.NamespaceAttr = &_daadc
			continue
		}
		if _dbaef.Name.Local == "\u0053\u0063\u0068\u0065\u006d\u0061\u004c\u0061\u006eg\u0075\u0061\u0067\u0065" {
			_egeag, _fgbgf := _dbaef.Value, error(nil)
			if _fgbgf != nil {
				return _fgbgf
			}
			_ebfadg.SchemaLanguageAttr = &_egeag
			continue
		}
	}
_fcceeg:
	for {
		_gebgbf, _bacca := d.Token()
		if _bacca != nil {
			return _bacca
		}
		switch _gbgbb := _gebgbf.(type) {
		case _b.StartElement:
			switch _gbgbb.Name {
			default:
				if _dedgd, _cbafe := _f.CreateElement(_gbgbb); _cbafe != nil {
					return _cbafe
				} else {
					if _edcgf := d.DecodeElement(_dedgd, &_gbgbb); _edcgf != nil {
						return _edcgf
					}
					_ebfadg.Any = _dedgd
				}
			}
		case _b.EndElement:
			break _fcceeg
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TableMissing and its children
func (_gddae *CT_TableMissing) Validate() error {
	return _gddae.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u004d\u0069\u0073\u0073\u0069\u006e\u0067")
}

func (_gfgfa *ST_PatternType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gaafa, _eaafe := d.Token()
	if _eaafe != nil {
		return _eaafe
	}
	if _cegfcg, _eggfea := _gaafa.(_b.EndElement); _eggfea && _cegfcg.Name == start.Name {
		*_gfgfa = 1
		return nil
	}
	if _aabaf, _gfgdc := _gaafa.(_b.CharData); !_gfgdc {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gaafa)
	} else {
		switch string(_aabaf) {
		case "":
			*_gfgfa = 0
		case "\u006e\u006f\u006e\u0065":
			*_gfgfa = 1
		case "\u0073\u006f\u006ci\u0064":
			*_gfgfa = 2
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079":
			*_gfgfa = 3
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
			*_gfgfa = 4
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
			*_gfgfa = 5
		case "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c":
			*_gfgfa = 6
		case "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
			*_gfgfa = 7
		case "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e":
			*_gfgfa = 8
		case "\u0064\u0061\u0072\u006b\u0055\u0070":
			*_gfgfa = 9
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064":
			*_gfgfa = 10
		case "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
			*_gfgfa = 11
		case "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c":
			*_gfgfa = 12
		case "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
			*_gfgfa = 13
		case "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n":
			*_gfgfa = 14
		case "\u006ci\u0067\u0068\u0074\u0055\u0070":
			*_gfgfa = 15
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d":
			*_gfgfa = 16
		case "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
			*_gfgfa = 17
		case "\u0067r\u0061\u0079\u0031\u0032\u0035":
			*_gfgfa = 18
		case "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035":
			*_gfgfa = 19
		}
	}
	_gaafa, _eaafe = d.Token()
	if _eaafe != nil {
		return _eaafe
	}
	if _feggg, _agcdff := _gaafa.(_b.EndElement); _agcdff && _feggg.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gaafa)
}

// Validate validates the CT_DrawingHF and its children
func (_cfaeb *CT_DrawingHF) Validate() error {
	return _cfaeb.ValidateWithPath("\u0043\u0054\u005fD\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046")
}

func (_afefc *CT_IndexedColors) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_effba := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0072\u0067\u0062\u0043\u006f\u006c\u006f\u0072"}}
	for _, _gdgbg := range _afefc.RgbColor {
		e.EncodeElement(_gdgbg, _effba)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_ebba *CT_GroupLevels) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebba.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ebba.CountAttr)})
	}
	e.EncodeToken(start)
	_gfcdc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c"}}
	for _, _debdd := range _ebba.GroupLevel {
		e.EncodeElement(_debdd, _gfcdc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GroupItems and its children
func (_adcc *CT_GroupItems) Validate() error {
	return _adcc.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073")
}

// Validate validates the CT_ChartsheetView and its children
func (_gebcc *CT_ChartsheetView) Validate() error {
	return _gebcc.ValidateWithPath("\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065t\u0056\u0069\u0065\u0077")
}

const (
	ST_TargetScreenSizeUnset     ST_TargetScreenSize = 0
	ST_TargetScreenSize544x376   ST_TargetScreenSize = 1
	ST_TargetScreenSize640x480   ST_TargetScreenSize = 2
	ST_TargetScreenSize720x512   ST_TargetScreenSize = 3
	ST_TargetScreenSize800x600   ST_TargetScreenSize = 4
	ST_TargetScreenSize1024x768  ST_TargetScreenSize = 5
	ST_TargetScreenSize1152x882  ST_TargetScreenSize = 6
	ST_TargetScreenSize1152x900  ST_TargetScreenSize = 7
	ST_TargetScreenSize1280x1024 ST_TargetScreenSize = 8
	ST_TargetScreenSize1600x1200 ST_TargetScreenSize = 9
	ST_TargetScreenSize1800x1440 ST_TargetScreenSize = 10
	ST_TargetScreenSize1920x1200 ST_TargetScreenSize = 11
)

// ValidateWithPath validates the CT_NumFmts and its children, prefixing error messages with path
func (_defcd *CT_NumFmts) ValidateWithPath(path string) error {
	for _bggf, _dgccg := range _defcd.NumFmt {
		if _gbddee := _dgccg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004e\u0075\u006d\u0046\u006d\u0074\u005b\u0025\u0064\u005d", path, _bggf)); _gbddee != nil {
			return _gbddee
		}
	}
	return nil
}

func NewCT_PivotFields() *CT_PivotFields { _cebbd := &CT_PivotFields{}; return _cebbd }

func (_fgfgcca ST_TextHAlign) String() string {
	switch _fgfgcca {
	case 0:
		return ""
	case 1:
		return "\u006c\u0065\u0066\u0074"
	case 2:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 3:
		return "\u0072\u0069\u0067h\u0074"
	case 4:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 5:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}

func (_daeedf *CT_ServerFormats) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _daeedf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_daeedf.CountAttr)})
	}
	e.EncodeToken(start)
	if _daeedf.ServerFormat != nil {
		_gcddf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074"}}
		for _, _ggag := range _daeedf.ServerFormat {
			e.EncodeElement(_ggag, _gcddf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gcafa *CT_TableStyleElement) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_eccd, _bdeaga := _gcafa.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _bdeaga != nil {
		return _bdeaga
	}
	start.Attr = append(start.Attr, _eccd)
	if _gcafa.SizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0069\u007a\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_gcafa.SizeAttr)})
	}
	if _gcafa.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_gcafa.DxfIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_DataRef struct {

	// Reference
	RefAttr *string

	// Named Range
	NameAttr *string

	// Sheet Name
	SheetAttr *string
	IdAttr    *string
}

func (_gcgea *CT_Dxf) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _gcgea.Font != nil {
		_fcfgcf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u006f\u006e\u0074"}}
		e.EncodeElement(_gcgea.Font, _fcfgcf)
	}
	if _gcgea.NumFmt != nil {
		_efceed := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006e\u0075\u006d\u0046\u006dt"}}
		e.EncodeElement(_gcgea.NumFmt, _efceed)
	}
	if _gcgea.Fill != nil {
		_cecbe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_gcgea.Fill, _cecbe)
	}
	if _gcgea.Alignment != nil {
		_gbdef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003aa\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"}}
		e.EncodeElement(_gcgea.Alignment, _gbdef)
	}
	if _gcgea.Border != nil {
		_eebc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0062\u006f\u0072\u0064\u0065r"}}
		e.EncodeElement(_gcgea.Border, _eebc)
	}
	if _gcgea.Protection != nil {
		_bgdd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_gcgea.Protection, _bgdd)
	}
	if _gcgea.ExtLst != nil {
		_eced := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gcgea.ExtLst, _eced)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_SheetBackgroundPicture() *CT_SheetBackgroundPicture {
	_facfeg := &CT_SheetBackgroundPicture{}
	return _facfeg
}

func (_cbde *CT_ChartsheetView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _caafd := range start.Attr {
		if _caafd.Name.Local == "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064" {
			_bdgf, _bbagc := _eb.ParseBool(_caafd.Value)
			if _bbagc != nil {
				return _bbagc
			}
			_cbde.TabSelectedAttr = &_bdgf
			continue
		}
		if _caafd.Name.Local == "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce" {
			_cfac, _dbcgb := _eb.ParseUint(_caafd.Value, 10, 32)
			if _dbcgb != nil {
				return _dbcgb
			}
			_dbdge := uint32(_cfac)
			_cbde.ZoomScaleAttr = &_dbdge
			continue
		}
		if _caafd.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064" {
			_aeea, _cgff := _eb.ParseUint(_caafd.Value, 10, 32)
			if _cgff != nil {
				return _cgff
			}
			_cbde.WorkbookViewIdAttr = uint32(_aeea)
			continue
		}
		if _caafd.Name.Local == "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t" {
			_gdcd, _abgb := _eb.ParseBool(_caafd.Value)
			if _abgb != nil {
				return _abgb
			}
			_cbde.ZoomToFitAttr = &_gdcd
			continue
		}
	}
_fbef:
	for {
		_gfbgb, _ffefg := d.Token()
		if _ffefg != nil {
			return _ffefg
		}
		switch _ddce := _gfbgb.(type) {
		case _b.StartElement:
			switch _ddce.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbde.ExtLst = NewCT_ExtensionList()
				if _fcfgc := d.DecodeElement(_cbde.ExtLst, &_ddce); _fcfgc != nil {
					return _fcfgc
				}
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _ddce.Name)
				if _cffcc := d.Skip(); _cffcc != nil {
					return _cffcc
				}
			}
		case _b.EndElement:
			break _fbef
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PivotFilter and its children
func (_ggecb *CT_PivotFilter) Validate() error {
	return _ggecb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u006c\u0074\u0065\u0072")
}

type CT_Number struct {

	// Value
	VAttr float64

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// Background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// OLAP Members
	Tpls []*CT_Tuples

	// Member Property Index
	X []*CT_X
}

func (_bbeea *ST_PageOrder) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bbeea = 0
	case "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072":
		*_bbeea = 1
	case "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e":
		*_bbeea = 2
	}
	return nil
}

type AG_AutoFormat struct {
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

func NewCT_CustomProperty() *CT_CustomProperty { _cbbe := &CT_CustomProperty{}; return _cbbe }

const (
	ST_DynamicFilterTypeUnset        ST_DynamicFilterType = 0
	ST_DynamicFilterTypeNull         ST_DynamicFilterType = 1
	ST_DynamicFilterTypeAboveAverage ST_DynamicFilterType = 2
	ST_DynamicFilterTypeBelowAverage ST_DynamicFilterType = 3
	ST_DynamicFilterTypeTomorrow     ST_DynamicFilterType = 4
	ST_DynamicFilterTypeToday        ST_DynamicFilterType = 5
	ST_DynamicFilterTypeYesterday    ST_DynamicFilterType = 6
	ST_DynamicFilterTypeNextWeek     ST_DynamicFilterType = 7
	ST_DynamicFilterTypeThisWeek     ST_DynamicFilterType = 8
	ST_DynamicFilterTypeLastWeek     ST_DynamicFilterType = 9
	ST_DynamicFilterTypeNextMonth    ST_DynamicFilterType = 10
	ST_DynamicFilterTypeThisMonth    ST_DynamicFilterType = 11
	ST_DynamicFilterTypeLastMonth    ST_DynamicFilterType = 12
	ST_DynamicFilterTypeNextQuarter  ST_DynamicFilterType = 13
	ST_DynamicFilterTypeThisQuarter  ST_DynamicFilterType = 14
	ST_DynamicFilterTypeLastQuarter  ST_DynamicFilterType = 15
	ST_DynamicFilterTypeNextYear     ST_DynamicFilterType = 16
	ST_DynamicFilterTypeThisYear     ST_DynamicFilterType = 17
	ST_DynamicFilterTypeLastYear     ST_DynamicFilterType = 18
	ST_DynamicFilterTypeYearToDate   ST_DynamicFilterType = 19
	ST_DynamicFilterTypeQ1           ST_DynamicFilterType = 20
	ST_DynamicFilterTypeQ2           ST_DynamicFilterType = 21
	ST_DynamicFilterTypeQ3           ST_DynamicFilterType = 22
	ST_DynamicFilterTypeQ4           ST_DynamicFilterType = 23
	ST_DynamicFilterTypeM1           ST_DynamicFilterType = 24
	ST_DynamicFilterTypeM2           ST_DynamicFilterType = 25
	ST_DynamicFilterTypeM3           ST_DynamicFilterType = 26
	ST_DynamicFilterTypeM4           ST_DynamicFilterType = 27
	ST_DynamicFilterTypeM5           ST_DynamicFilterType = 28
	ST_DynamicFilterTypeM6           ST_DynamicFilterType = 29
	ST_DynamicFilterTypeM7           ST_DynamicFilterType = 30
	ST_DynamicFilterTypeM8           ST_DynamicFilterType = 31
	ST_DynamicFilterTypeM9           ST_DynamicFilterType = 32
	ST_DynamicFilterTypeM10          ST_DynamicFilterType = 33
	ST_DynamicFilterTypeM11          ST_DynamicFilterType = 34
	ST_DynamicFilterTypeM12          ST_DynamicFilterType = 35
)

// ValidateWithPath validates the CT_OleItem and its children, prefixing error messages with path
func (_bcabd *CT_OleItem) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_RowHierarchiesUsage and its children, prefixing error messages with path
func (_gafff *CT_RowHierarchiesUsage) ValidateWithPath(path string) error {
	for _aecef, _gafcae := range _gafff.RowHierarchyUsage {
		if _cgeg := _gafcae.ValidateWithPath(_ec.Sprintf("\u0025s\u002f\u0052\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0079\u0055\u0073\u0061\u0067\u0065\u005b\u0025\u0064\u005d", path, _aecef)); _cgeg != nil {
			return _cgeg
		}
	}
	return nil
}

// ValidateWithPath validates the VolTypes and its children, prefixing error messages with path
func (_adfbf *VolTypes) ValidateWithPath(path string) error {
	if _cabbe := _adfbf.CT_VolTypes.ValidateWithPath(path); _cabbe != nil {
		return _cabbe
	}
	return nil
}

func (_fgcca *CT_RevisionComment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _fgcca.SheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0065\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0076", _fgcca.CellAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _fgcca.GuidAttr)})
	if _fgcca.ActionAttr != ST_RevisionActionUnset {
		_bfggea, _dbdgb := _fgcca.ActionAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
		if _dbdgb != nil {
			return _dbdgb
		}
		start.Attr = append(start.Attr, _bfggea)
	}
	if _fgcca.AlwaysShowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0077\u0061\u0079\u0073\u0053\u0068\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgcca.AlwaysShowAttr))})
	}
	if _fgcca.OldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgcca.OldAttr))})
	}
	if _fgcca.HiddenRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068i\u0064\u0064\u0065\u006e\u0052\u006fw"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgcca.HiddenRowAttr))})
	}
	if _fgcca.HiddenColumnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064d\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgcca.HiddenColumnAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u0068\u006f\u0072"}, Value: _ec.Sprintf("\u0025\u0076", _fgcca.AuthorAttr)})
	if _fgcca.OldLengthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fl\u0064\u004c\u0065\u006e\u0067\u0074h"}, Value: _ec.Sprintf("\u0025\u0076", *_fgcca.OldLengthAttr)})
	}
	if _fgcca.NewLengthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ee\u0077\u004c\u0065\u006e\u0067\u0074h"}, Value: _ec.Sprintf("\u0025\u0076", *_fgcca.NewLengthAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cbaffg *CT_PivotHierarchies) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebbgf := range start.Attr {
		if _ebbgf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cadcb, _afbbf := _eb.ParseUint(_ebbgf.Value, 10, 32)
			if _afbbf != nil {
				return _afbbf
			}
			_gbefe := uint32(_cadcb)
			_cbaffg.CountAttr = &_gbefe
			continue
		}
	}
_aedf:
	for {
		_fbbda, _dcbegb := d.Token()
		if _dcbegb != nil {
			return _dcbegb
		}
		switch _cadbb := _fbbda.(type) {
		case _b.StartElement:
			switch _cadbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}:
				_gefcc := NewCT_PivotHierarchy()
				if _dadag := d.DecodeElement(_gefcc, &_cadbb); _dadag != nil {
					return _dadag
				}
				_cbaffg.PivotHierarchy = append(_cbaffg.PivotHierarchy, _gefcc)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069er\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0020\u0025\u0076", _cadbb.Name)
				if _cggbb := d.Skip(); _cggbb != nil {
					return _cggbb
				}
			}
		case _b.EndElement:
			break _aedf
		case _b.CharData:
		}
	}
	return nil
}

func (_cebcc *CT_HierarchyUsage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _cebcc.HierarchyUsageAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_WebPublishItem and its children, prefixing error messages with path
func (_gdfga *CT_WebPublishItem) ValidateWithPath(path string) error {
	if _gdfga.SourceTypeAttr == ST_WebSourceTypeUnset {
		return _ec.Errorf("\u0025\u0073\u002f\u0053\u006f\u0075\u0072\u0063\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006da\u006e\u0064\u0061\u0074\u006fr\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _bggecb := _gdfga.SourceTypeAttr.ValidateWithPath(path + "\u002fS\u006fu\u0072\u0063\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _bggecb != nil {
		return _bggecb
	}
	return nil
}

func (_cbagab ST_SortType) Validate() error { return _cbagab.ValidateWithPath("") }

func (_fbbecb *CT_Table) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fbbecb.TableColumns = NewCT_TableColumns()
	for _, _afgea := range start.Attr {
		if _afgea.Name.Local == "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d" {
			_cdcff, _afgef := _eb.ParseUint(_afgea.Value, 10, 32)
			if _afgef != nil {
				return _afgef
			}
			_fccec := uint32(_cdcff)
			_fbbecb.DataDxfIdAttr = &_fccec
			continue
		}
		if _afgea.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_baeff, _gagefc := _eb.ParseUint(_afgea.Value, 10, 32)
			if _gagefc != nil {
				return _gagefc
			}
			_ffgfe := uint32(_baeff)
			_fbbecb.TotalsRowDxfIdAttr = &_ffgfe
			continue
		}
		if _afgea.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dbdfbg, _gfbdd := _afgea.Value, error(nil)
			if _gfbdd != nil {
				return _gfbdd
			}
			_fbbecb.NameAttr = &_dbdfbg
			continue
		}
		if _afgea.Name.Local == "h\u0065a\u0064\u0065\u0072\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_cfgeb, _cfbdc := _eb.ParseUint(_afgea.Value, 10, 32)
			if _cfbdc != nil {
				return _cfbdc
			}
			_faeae := uint32(_cfgeb)
			_fbbecb.HeaderRowBorderDxfIdAttr = &_faeae
			continue
		}
		if _afgea.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_cccdbb, _cefaae := _afgea.Value, error(nil)
			if _cefaae != nil {
				return _cefaae
			}
			_fbbecb.CommentAttr = &_cccdbb
			continue
		}
		if _afgea.Name.Local == "\u0074\u0061b\u006c\u0065\u0042o\u0072\u0064\u0065\u0072\u0044\u0078\u0066\u0049\u0064" {
			_egedad, _ceffb := _eb.ParseUint(_afgea.Value, 10, 32)
			if _ceffb != nil {
				return _ceffb
			}
			_afabc := uint32(_egedad)
			_fbbecb.TableBorderDxfIdAttr = &_afabc
			continue
		}
		if _afgea.Name.Local == "\u0074a\u0062\u006c\u0065\u0054\u0079\u0070e" {
			_fbbecb.TableTypeAttr.UnmarshalXMLAttr(_afgea)
			continue
		}
		if _afgea.Name.Local == "t\u006ft\u0061\u006c\u0073\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_cdfgb, _bceb := _eb.ParseUint(_afgea.Value, 10, 32)
			if _bceb != nil {
				return _bceb
			}
			_cddaec := uint32(_cdfgb)
			_fbbecb.TotalsRowBorderDxfIdAttr = &_cddaec
			continue
		}
		if _afgea.Name.Local == "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw" {
			_afecd, _debaf := _eb.ParseBool(_afgea.Value)
			if _debaf != nil {
				return _debaf
			}
			_fbbecb.InsertRowAttr = &_afecd
			continue
		}
		if _afgea.Name.Local == "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_dadfa, _cfgee := _afgea.Value, error(nil)
			if _cfgee != nil {
				return _cfgee
			}
			_fbbecb.HeaderRowCellStyleAttr = &_dadfa
			continue
		}
		if _afgea.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_dcbeb, _ggdbe := _eb.ParseUint(_afgea.Value, 10, 32)
			if _ggdbe != nil {
				return _ggdbe
			}
			_gcebb := uint32(_dcbeb)
			_fbbecb.TotalsRowCountAttr = &_gcebb
			continue
		}
		if _afgea.Name.Local == "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_fabaa, _dfdeb := _afgea.Value, error(nil)
			if _dfdeb != nil {
				return _dfdeb
			}
			_fbbecb.TotalsRowCellStyleAttr = &_fabaa
			continue
		}
		if _afgea.Name.Local == "d\u0069\u0073\u0070\u006c\u0061\u0079\u004e\u0061\u006d\u0065" {
			_dbefb, _dbaec := _afgea.Value, error(nil)
			if _dbaec != nil {
				return _dbaec
			}
			_fbbecb.DisplayNameAttr = _dbefb
			continue
		}
		if _afgea.Name.Local == "\u0069\u0064" {
			_cbdegg, _gcdcf := _eb.ParseUint(_afgea.Value, 10, 32)
			if _gcdcf != nil {
				return _gcdcf
			}
			_fbbecb.IdAttr = uint32(_cbdegg)
			continue
		}
		if _afgea.Name.Local == "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065" {
			_baada, _febfg := _afgea.Value, error(nil)
			if _febfg != nil {
				return _febfg
			}
			_fbbecb.DataCellStyleAttr = &_baada
			continue
		}
		if _afgea.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_fagbea, _dgede := _eb.ParseBool(_afgea.Value)
			if _dgede != nil {
				return _dgede
			}
			_fbbecb.PublishedAttr = &_fagbea
			continue
		}
		if _afgea.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_fddaa, _fgbbg := _eb.ParseUint(_afgea.Value, 10, 32)
			if _fgbbg != nil {
				return _fgbbg
			}
			_gcdacfc := uint32(_fddaa)
			_fbbecb.ConnectionIdAttr = &_gcdacfc
			continue
		}
		if _afgea.Name.Local == "\u0072\u0065\u0066" {
			_febee, _dfgadf := _afgea.Value, error(nil)
			if _dfgadf != nil {
				return _dfgadf
			}
			_fbbecb.RefAttr = _febee
			continue
		}
		if _afgea.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077S\u0068\u0069\u0066\u0074" {
			_gaffacc, _fgagdf := _eb.ParseBool(_afgea.Value)
			if _fgagdf != nil {
				return _fgagdf
			}
			_fbbecb.InsertRowShiftAttr = &_gaffacc
			continue
		}
		if _afgea.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077S\u0068\u006f\u0077\u006e" {
			_ffcce, _ggbdg := _eb.ParseBool(_afgea.Value)
			if _ggbdg != nil {
				return _ggbdg
			}
			_fbbecb.TotalsRowShownAttr = &_ffcce
			continue
		}
		if _afgea.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_abbgd, _ecdbgg := _eb.ParseUint(_afgea.Value, 10, 32)
			if _ecdbgg != nil {
				return _ecdbgg
			}
			_cecbbd := uint32(_abbgd)
			_fbbecb.HeaderRowDxfIdAttr = &_cecbbd
			continue
		}
		if _afgea.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_ecedf, _gfdea := _eb.ParseUint(_afgea.Value, 10, 32)
			if _gfdea != nil {
				return _gfdea
			}
			_bgdea := uint32(_ecedf)
			_fbbecb.HeaderRowCountAttr = &_bgdea
			continue
		}
	}
_gface:
	for {
		_acdcb, _bbdgb := d.Token()
		if _bbdgb != nil {
			return _bbdgb
		}
		switch _agdbeg := _acdcb.(type) {
		case _b.StartElement:
			switch _agdbeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_fbbecb.AutoFilter = NewCT_AutoFilter()
				if _gbfab := d.DecodeElement(_fbbecb.AutoFilter, &_agdbeg); _gbfab != nil {
					return _gbfab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_fbbecb.SortState = NewCT_SortState()
				if _gdgcf := d.DecodeElement(_fbbecb.SortState, &_agdbeg); _gdgcf != nil {
					return _gdgcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}:
				if _ecaecd := d.DecodeElement(_fbbecb.TableColumns, &_agdbeg); _ecaecd != nil {
					return _ecaecd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}:
				_fbbecb.TableStyleInfo = NewCT_TableStyleInfo()
				if _fgbfg := d.DecodeElement(_fbbecb.TableStyleInfo, &_agdbeg); _fgbfg != nil {
					return _fgbfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbbecb.ExtLst = NewCT_ExtensionList()
				if _bcddfg := d.DecodeElement(_fbbecb.ExtLst, &_agdbeg); _bcddfg != nil {
					return _bcddfg
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0020\u0025\u0076", _agdbeg.Name)
				if _ecaad := d.Skip(); _ecaad != nil {
					return _ecaad
				}
			}
		case _b.EndElement:
			break _gface
		case _b.CharData:
		}
	}
	return nil
}

func (_daaeg ST_OleUpdate) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dadge := _b.Attr{}
	_dadge.Name = name
	switch _daaeg {
	case ST_OleUpdateUnset:
		_dadge.Value = ""
	case ST_OleUpdateOLEUPDATE_ALWAYS:
		_dadge.Value = "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053"
	case ST_OleUpdateOLEUPDATE_ONCALL:
		_dadge.Value = "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c"
	}
	return _dadge, nil
}

type ST_SortMethod byte

func (_eegabc ST_GroupBy) Validate() error { return _eegabc.ValidateWithPath("") }

func (_fgcdd *CT_TableColumn) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eaaff := range start.Attr {
		if _eaaff.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_fgdbb, _dbcab := _eb.ParseUint(_eaaff.Value, 10, 32)
			if _dbcab != nil {
				return _dbcab
			}
			_feacd := uint32(_fgdbb)
			_fgcdd.TotalsRowDxfIdAttr = &_feacd
			continue
		}
		if _eaaff.Name.Local == "\u0069\u0064" {
			_caaff, _dabeef := _eb.ParseUint(_eaaff.Value, 10, 32)
			if _dabeef != nil {
				return _dabeef
			}
			_fgcdd.IdAttr = uint32(_caaff)
			continue
		}
		if _eaaff.Name.Local == "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_gebcb, _begfg := _eaaff.Value, error(nil)
			if _begfg != nil {
				return _begfg
			}
			_fgcdd.HeaderRowCellStyleAttr = &_gebcb
			continue
		}
		if _eaaff.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bebde, _ggebf := _eaaff.Value, error(nil)
			if _ggebf != nil {
				return _ggebf
			}
			_fgcdd.NameAttr = _bebde
			continue
		}
		if _eaaff.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077L\u0061\u0062\u0065\u006c" {
			_ggdbf, _cebea := _eaaff.Value, error(nil)
			if _cebea != nil {
				return _cebea
			}
			_fgcdd.TotalsRowLabelAttr = &_ggdbf
			continue
		}
		if _eaaff.Name.Local == "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069e\u006c\u0064\u0049\u0064" {
			_gffeb, _fagbca := _eb.ParseUint(_eaaff.Value, 10, 32)
			if _fagbca != nil {
				return _fagbca
			}
			_aeffc := uint32(_gffeb)
			_fgcdd.QueryTableFieldIdAttr = &_aeffc
			continue
		}
		if _eaaff.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_gggac, _cfcfc := _eb.ParseUint(_eaaff.Value, 10, 32)
			if _cfcfc != nil {
				return _cfcfc
			}
			_geeec := uint32(_gggac)
			_fgcdd.HeaderRowDxfIdAttr = &_geeec
			continue
		}
		if _eaaff.Name.Local == "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d" {
			_dacde, _dbbbd := _eb.ParseUint(_eaaff.Value, 10, 32)
			if _dbbbd != nil {
				return _dbbbd
			}
			_fcdfgd := uint32(_dacde)
			_fgcdd.DataDxfIdAttr = &_fcdfgd
			continue
		}
		if _eaaff.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_geced, _eebadg := _eaaff.Value, error(nil)
			if _eebadg != nil {
				return _eebadg
			}
			_fgcdd.UniqueNameAttr = &_geced
			continue
		}
		if _eaaff.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u0075\u006ec\u0074\u0069\u006f\u006e" {
			_fgcdd.TotalsRowFunctionAttr.UnmarshalXMLAttr(_eaaff)
			continue
		}
		if _eaaff.Name.Local == "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065" {
			_agcgcc, _afgba := _eaaff.Value, error(nil)
			if _afgba != nil {
				return _afgba
			}
			_fgcdd.DataCellStyleAttr = &_agcgcc
			continue
		}
		if _eaaff.Name.Local == "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_dcaac, _bbeca := _eaaff.Value, error(nil)
			if _bbeca != nil {
				return _bbeca
			}
			_fgcdd.TotalsRowCellStyleAttr = &_dcaac
			continue
		}
	}
_ggdaaf:
	for {
		_cbegfg, _gbgfd := d.Token()
		if _gbgfd != nil {
			return _gbgfd
		}
		switch _cegfgd := _cbegfg.(type) {
		case _b.StartElement:
			switch _cegfgd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006ccu\u006c\u0061\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006ccu\u006c\u0061\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}:
				_fgcdd.CalculatedColumnFormula = NewCT_TableFormula()
				if _bdbga := d.DecodeElement(_fgcdd.CalculatedColumnFormula, &_cegfgd); _bdbga != nil {
					return _bdbga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006ft\u0061\u006c\u0073R\u006f\u0077\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006ft\u0061\u006c\u0073R\u006f\u0077\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}:
				_fgcdd.TotalsRowFormula = NewCT_TableFormula()
				if _cafecd := d.DecodeElement(_fgcdd.TotalsRowFormula, &_cegfgd); _cafecd != nil {
					return _cafecd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "x\u006d\u006c\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "x\u006d\u006c\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"}:
				_fgcdd.XmlColumnPr = NewCT_XmlColumnPr()
				if _debddd := d.DecodeElement(_fgcdd.XmlColumnPr, &_cegfgd); _debddd != nil {
					return _debddd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgcdd.ExtLst = NewCT_ExtensionList()
				if _beged := d.DecodeElement(_fgcdd.ExtLst, &_cegfgd); _beged != nil {
					return _beged
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006fl\u0075m\u006e\u0020\u0025\u0076", _cegfgd.Name)
				if _ggbdgc := d.Skip(); _ggbdgc != nil {
					return _ggbdgc
				}
			}
		case _b.EndElement:
			break _ggdaaf
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_TextPr() *CT_TextPr { _ceaea := &CT_TextPr{}; return _ceaea }

func NewCT_SharedItems() *CT_SharedItems { _dbfdbc := &CT_SharedItems{}; return _dbfdbc }

type CT_FunctionGroups struct {

	// Built-in Function Group Count
	BuiltInGroupCountAttr *uint32

	// Function Group
	FunctionGroup []*CT_FunctionGroup
}

func (_bdbde ST_PhoneticType) Validate() error { return _bdbde.ValidateWithPath("") }

// Validate validates the CT_PivotCache and its children
func (_fbbdd *CT_PivotCache) Validate() error {
	return _fbbdd.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065")
}

func NewCT_ChartsheetViews() *CT_ChartsheetViews { _abbg := &CT_ChartsheetViews{}; return _abbg }

// Validate validates the EG_ExtensionList and its children
func (_geebga *EG_ExtensionList) Validate() error {
	return _geebga.ValidateWithPath("\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_CellSmartTagPr and its children, prefixing error messages with path
func (_fagb *CT_CellSmartTagPr) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_TablePart and its children
func (_ddgea *CT_TablePart) Validate() error {
	return _ddgea.ValidateWithPath("\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074")
}

type CT_ChartsheetPr struct {

	// Published
	PublishedAttr *bool

	// Code Name
	CodeNameAttr *string
	TabColor     *CT_Color
}

func (_ceede *CT_GroupMembers) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ceede.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ceede.CountAttr)})
	}
	e.EncodeToken(start)
	_ddbgb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u004de\u006d\u0062\u0065\u0072"}}
	for _, _cdfec := range _ceede.GroupMember {
		e.EncodeElement(_cdfec, _ddbgb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Sst struct {

	// String Count
	CountAttr *uint32

	// Unique String Count
	UniqueCountAttr *uint32

	// String Item
	Si     []*CT_Rst
	ExtLst *CT_ExtensionList
}

func (_gedeg *CT_MdxSet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0073"}, Value: _ec.Sprintf("\u0025\u0076", _gedeg.NsAttr)})
	if _gedeg.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_gedeg.CAttr)})
	}
	if _gedeg.OAttr != ST_MdxSetOrderUnset {
		_bdddc, _ggceb := _gedeg.OAttr.MarshalXMLAttr(_b.Name{Local: "\u006f"})
		if _ggceb != nil {
			return _ggceb
		}
		start.Attr = append(start.Attr, _bdddc)
	}
	e.EncodeToken(start)
	if _gedeg.N != nil {
		_ccfae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _adbffg := range _gedeg.N {
			e.EncodeElement(_adbffg, _ccfae)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_Fonts() *CT_Fonts { _bfded := &CT_Fonts{}; return _bfded }

func (_adebg ST_GroupBy) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_adebg.String(), start)
}

func NewCT_IntProperty() *CT_IntProperty { _cgbdf := &CT_IntProperty{}; return _cgbdf }

func (_agd *CT_CellWatches) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cabf:
	for {
		_fbdga, _aabda := d.Token()
		if _aabda != nil {
			return _aabda
		}
		switch _cbbb := _fbdga.(type) {
		case _b.StartElement:
			switch _cbbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0057\u0061\u0074\u0063h"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0057\u0061\u0074\u0063h"}:
				_ebce := NewCT_CellWatch()
				if _cafa := d.DecodeElement(_ebce, &_cbbb); _cafa != nil {
					return _cafa
				}
				_agd.CellWatch = append(_agd.CellWatch, _ebce)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0057\u0061\u0074c\u0068e\u0073\u0020\u0025\u0076", _cbbb.Name)
				if _bccb := d.Skip(); _bccb != nil {
					return _bccb
				}
			}
		case _b.EndElement:
			break _cabf
		case _b.CharData:
		}
	}
	return nil
}

func (_bfabg ST_HorizontalAlignment) ValidateWithPath(path string) error {
	switch _bfabg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bfabg))
	}
	return nil
}

func (_fbgdgb ST_Axis) ValidateWithPath(path string) error {
	switch _fbgdgb {
	case 0, 1, 2, 3, 4:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fbgdgb))
	}
	return nil
}

type ST_TableType byte

type CT_Cfvo struct {

	// Type
	TypeAttr ST_CfvoType

	// Value
	ValAttr *string

	// Greater Than Or Equal
	GteAttr *bool
	ExtLst  *CT_ExtensionList
}

func (_gbdbb *ST_Orientation) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ebdbf, _gedag := d.Token()
	if _gedag != nil {
		return _gedag
	}
	if _eefaed, _cggbd := _ebdbf.(_b.EndElement); _cggbd && _eefaed.Name == start.Name {
		*_gbdbb = 1
		return nil
	}
	if _ddbce, _cdgfg := _ebdbf.(_b.CharData); !_cdgfg {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebdbf)
	} else {
		switch string(_ddbce) {
		case "":
			*_gbdbb = 0
		case "\u0064e\u0066\u0061\u0075\u006c\u0074":
			*_gbdbb = 1
		case "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074":
			*_gbdbb = 2
		case "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e":
			*_gbdbb = 3
		}
	}
	_ebdbf, _gedag = d.Token()
	if _gedag != nil {
		return _gedag
	}
	if _babfg, _gefef := _ebdbf.(_b.EndElement); _gefef && _babfg.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebdbf)
}

func (_bffdb ST_Pane) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bffdb.String(), start)
}

func (_dabae *CT_DdeValue) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbag := range start.Attr {
		if _dbag.Name.Local == "\u0074" {
			_dabae.TAttr.UnmarshalXMLAttr(_dbag)
			continue
		}
	}
_afdfe:
	for {
		_ffacc, _fcbba := d.Token()
		if _fcbba != nil {
			return _fcbba
		}
		switch _aedb := _ffacc.(type) {
		case _b.StartElement:
			switch _aedb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c"}:
				if _gaacb := d.DecodeElement(&_dabae.Val, &_aedb); _gaacb != nil {
					return _gaacb
				}
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0064\u0065\u0056\u0061\u006c\u0075\u0065\u0020\u0025\u0076", _aedb.Name)
				if _ecgg := d.Skip(); _ecgg != nil {
					return _ecgg
				}
			}
		case _b.EndElement:
			break _afdfe
		case _b.CharData:
		}
	}
	return nil
}

type CT_RangeSet struct {

	// Field Item Index Page 1
	I1Attr *uint32

	// Field Item Index Page 2
	I2Attr *uint32

	// Field Item index Page 3
	I3Attr *uint32

	// Field Item Index Page 4
	I4Attr *uint32

	// Reference
	RefAttr *string

	// Named Range
	NameAttr *string

	// Sheet Name
	SheetAttr *string
	IdAttr    *string
}

// ValidateWithPath validates the CT_ChartsheetPr and its children, prefixing error messages with path
func (_gefee *CT_ChartsheetPr) ValidateWithPath(path string) error {
	if _gefee.TabColor != nil {
		if _dfdbc := _gefee.TabColor.ValidateWithPath(path + "\u002fT\u0061\u0062\u0043\u006f\u006c\u006fr"); _dfdbc != nil {
			return _dfdbc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableMissing and its children, prefixing error messages with path
func (_cfcgg *CT_TableMissing) ValidateWithPath(path string) error { return nil }

func NewCT_DdeItems() *CT_DdeItems { _fecdb := &CT_DdeItems{}; return _fecdb }

func (_fbaab *QueryTable) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fbaab.CT_QueryTable = *NewCT_QueryTable()
	for _, _adfgd := range start.Attr {
		if _adfgd.Name.Local == "\u0061\u0064\u006a\u0075\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006eW\u0069\u0064\u0074\u0068" {
			_dcfafg, _fdeaa := _eb.ParseBool(_adfgd.Value)
			if _fdeaa != nil {
				return _fdeaa
			}
			_fbaab.AdjustColumnWidthAttr = &_dcfafg
			continue
		}
		if _adfgd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_eadafe, _daada := _adfgd.Value, error(nil)
			if _daada != nil {
				return _daada
			}
			_fbaab.NameAttr = _eadafe
			continue
		}
		if _adfgd.Name.Local == "\u0069\u006e\u0074e\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065" {
			_bgbdfd, _bfdcce := _eb.ParseBool(_adfgd.Value)
			if _bfdcce != nil {
				return _bfdcce
			}
			_fbaab.IntermediateAttr = &_bgbdfd
			continue
		}
		if _adfgd.Name.Local == "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073" {
			_dggfcc, _bfcbdd := _eb.ParseBool(_adfgd.Value)
			if _bfcbdd != nil {
				return _bfcbdd
			}
			_fbaab.RowNumbersAttr = &_dggfcc
			continue
		}
		if _adfgd.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_edeeef, _gadac := _eb.ParseUint(_adfgd.Value, 10, 32)
			if _gadac != nil {
				return _gadac
			}
			_fbaab.ConnectionIdAttr = uint32(_edeeef)
			continue
		}
		if _adfgd.Name.Local == "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_dcbga, _fdgba := _eb.ParseBool(_adfgd.Value)
			if _fdgba != nil {
				return _fdgba
			}
			_fbaab.BackgroundRefreshAttr = &_dcbga
			continue
		}
		if _adfgd.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_gaddaac, _cdcecc := _eb.ParseBool(_adfgd.Value)
			if _cdcecc != nil {
				return _cdcecc
			}
			_fbaab.RefreshOnLoadAttr = &_gaddaac
			continue
		}
		if _adfgd.Name.Local == "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_ebgaf, _abfbfd := _eb.ParseBool(_adfgd.Value)
			if _abfbfd != nil {
				return _abfbfd
			}
			_fbaab.FillFormulasAttr = &_ebgaf
			continue
		}
		if _adfgd.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_geedeg, _adbbag := _eb.ParseBool(_adfgd.Value)
			if _adbbag != nil {
				return _adbbag
			}
			_fbaab.ApplyNumberFormatsAttr = &_geedeg
			continue
		}
		if _adfgd.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bggff, _gdaag := _eb.ParseBool(_adfgd.Value)
			if _gdaag != nil {
				return _gdaag
			}
			_fbaab.ApplyFontFormatsAttr = &_bggff
			continue
		}
		if _adfgd.Name.Local == "\u0066\u0069\u0072\u0073tB\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065\u0066\u0072\u0065s\u0068" {
			_ecedc, _fdaee := _eb.ParseBool(_adfgd.Value)
			if _fdaee != nil {
				return _fdaee
			}
			_fbaab.FirstBackgroundRefreshAttr = &_ecedc
			continue
		}
		if _adfgd.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_daced, _afegag := _eb.ParseUint(_adfgd.Value, 10, 32)
			if _afegag != nil {
				return _afegag
			}
			_cbagc := uint32(_daced)
			_fbaab.AutoFormatIdAttr = &_cbagc
			continue
		}
		if _adfgd.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bgfgd, _agacbg := _eb.ParseBool(_adfgd.Value)
			if _agacbg != nil {
				return _agacbg
			}
			_fbaab.ApplyAlignmentFormatsAttr = &_bgfgd
			continue
		}
		if _adfgd.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_dfbff, _egdg := _eb.ParseBool(_adfgd.Value)
			if _egdg != nil {
				return _egdg
			}
			_fbaab.DisableRefreshAttr = &_dfbff
			continue
		}
		if _adfgd.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_beefa, _fedad := _eb.ParseBool(_adfgd.Value)
			if _fedad != nil {
				return _fedad
			}
			_fbaab.ApplyBorderFormatsAttr = &_beefa
			continue
		}
		if _adfgd.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_caeced, _gcgbe := _eb.ParseBool(_adfgd.Value)
			if _gcgbe != nil {
				return _gcgbe
			}
			_fbaab.PreserveFormattingAttr = &_caeced
			continue
		}
		if _adfgd.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gebfge, _fffgab := _eb.ParseBool(_adfgd.Value)
			if _fffgab != nil {
				return _fffgab
			}
			_fbaab.ApplyPatternFormatsAttr = &_gebfge
			continue
		}
		if _adfgd.Name.Local == "\u0067\u0072\u006f\u0077\u0053\u0068\u0072\u0069\u006ek\u0054\u0079\u0070\u0065" {
			_fbaab.GrowShrinkTypeAttr.UnmarshalXMLAttr(_adfgd)
			continue
		}
		if _adfgd.Name.Local == "d\u0069\u0073\u0061\u0062\u006c\u0065\u0045\u0064\u0069\u0074" {
			_fggaf, _fccgae := _eb.ParseBool(_adfgd.Value)
			if _fccgae != nil {
				return _fccgae
			}
			_fbaab.DisableEditAttr = &_fggaf
			continue
		}
		if _adfgd.Name.Local == "\u0068e\u0061\u0064\u0065\u0072\u0073" {
			_gabega, _addbb := _eb.ParseBool(_adfgd.Value)
			if _addbb != nil {
				return _addbb
			}
			_fbaab.HeadersAttr = &_gabega
			continue
		}
		if _adfgd.Name.Local == "\u0072\u0065m\u006f\u0076\u0065D\u0061\u0074\u0061\u004f\u006e\u0053\u0061\u0076\u0065" {
			_bbcbf, _acaag := _eb.ParseBool(_adfgd.Value)
			if _acaag != nil {
				return _acaag
			}
			_fbaab.RemoveDataOnSaveAttr = &_bbcbf
			continue
		}
		if _adfgd.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_adbef, _aaafa := _eb.ParseBool(_adfgd.Value)
			if _aaafa != nil {
				return _aaafa
			}
			_fbaab.ApplyWidthHeightFormatsAttr = &_adbef
			continue
		}
	}
_adbcc:
	for {
		_acgcg, _ggefgc := d.Token()
		if _ggefgc != nil {
			return _ggefgc
		}
		switch _eebbg := _acgcg.(type) {
		case _b.StartElement:
			switch _eebbg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}:
				_fbaab.QueryTableRefresh = NewCT_QueryTableRefresh()
				if _aeccf := d.DecodeElement(_fbaab.QueryTableRefresh, &_eebbg); _aeccf != nil {
					return _aeccf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbaab.ExtLst = NewCT_ExtensionList()
				if _eebcba := d.DecodeElement(_fbaab.ExtLst, &_eebbg); _eebcba != nil {
					return _eebcba
				}
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0051\u0075\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0020\u0025\u0076", _eebbg.Name)
				if _fdgbbd := d.Skip(); _fdgbbd != nil {
					return _fdgbbd
				}
			}
		case _b.EndElement:
			break _adbcc
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_Missing() *CT_Missing { _afffe := &CT_Missing{}; return _afffe }

type CT_Row struct {

	// Row Index
	RAttr *uint32

	// Spans
	SpansAttr *ST_CellSpans

	// Style Index
	SAttr *uint32

	// Custom Format
	CustomFormatAttr *bool

	// Row Height
	HtAttr *float64

	// Hidden
	HiddenAttr *bool

	// Custom Height
	CustomHeightAttr *bool

	// Outline Level
	OutlineLevelAttr *uint8

	// Collapsed
	CollapsedAttr *bool

	// Thick Top Border
	ThickTopAttr *bool

	// Thick Bottom
	ThickBotAttr *bool

	// Show Phonetic
	PhAttr *bool

	// Cell
	C []*CT_Cell

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func NewCT_ObjectAnchor() *CT_ObjectAnchor {
	_fadgf := &CT_ObjectAnchor{}
	_fadgf.From = _c.NewFrom()
	_fadgf.To = _c.NewTo()
	return _fadgf
}

func (_ababe *ST_SheetState) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdbbd, _cbccbc := d.Token()
	if _cbccbc != nil {
		return _cbccbc
	}
	if _efgcd, _dcefda := _bdbbd.(_b.EndElement); _dcefda && _efgcd.Name == start.Name {
		*_ababe = 1
		return nil
	}
	if _agceeg, _ffada := _bdbbd.(_b.CharData); !_ffada {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdbbd)
	} else {
		switch string(_agceeg) {
		case "":
			*_ababe = 0
		case "\u0076i\u0073\u0069\u0062\u006c\u0065":
			*_ababe = 1
		case "\u0068\u0069\u0064\u0064\u0065\u006e":
			*_ababe = 2
		case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
			*_ababe = 3
		}
	}
	_bdbbd, _cbccbc = d.Token()
	if _cbccbc != nil {
		return _cbccbc
	}
	if _egaca, _gfcbdc := _bdbbd.(_b.EndElement); _gfcbdc && _egaca.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdbbd)
}

func (_cagce *ST_TableType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fbgdad, _fdecdcg := d.Token()
	if _fdecdcg != nil {
		return _fdecdcg
	}
	if _bcgfef, _bcdfef := _fbgdad.(_b.EndElement); _bcdfef && _bcgfef.Name == start.Name {
		*_cagce = 1
		return nil
	}
	if _fagfa, _ccgfe := _fbgdad.(_b.CharData); !_ccgfe {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbgdad)
	} else {
		switch string(_fagfa) {
		case "":
			*_cagce = 0
		case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
			*_cagce = 1
		case "\u0078\u006d\u006c":
			*_cagce = 2
		case "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065":
			*_cagce = 3
		}
	}
	_fbgdad, _fdecdcg = d.Token()
	if _fdecdcg != nil {
		return _fdecdcg
	}
	if _becfd, _fddbg := _fbgdad.(_b.EndElement); _fddbg && _becfd.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbgdad)
}

func (_ggeeda ST_TotalsRowFunction) Validate() error { return _ggeeda.ValidateWithPath("") }

// ValidateWithPath validates the CT_Fills and its children, prefixing error messages with path
func (_edee *CT_Fills) ValidateWithPath(path string) error {
	for _abde, _debeb := range _edee.Fill {
		if _ddacb := _debeb.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0046\u0069\u006c\u006c\u005b\u0025\u0064\u005d", path, _abde)); _ddacb != nil {
			return _ddacb
		}
	}
	return nil
}

func NewCT_Set() *CT_Set { _eadfb := &CT_Set{}; return _eadfb }

type CT_Map struct {

	// XML Mapping ID
	IDAttr uint32

	// XML Mapping Name
	NameAttr string

	// Root Element Name
	RootElementAttr string

	// Schema Name
	SchemaIDAttr string

	// Show Validation Errors
	ShowImportExportValidationErrorsAttr bool

	// AutoFit Table on Refresh
	AutoFitAttr bool

	// Append Data to Table
	AppendAttr bool

	// Preserve AutoFilter State
	PreserveSortAFLayoutAttr bool

	// Preserve Cell Formatting
	PreserveFormatAttr bool

	// XML Mapping
	DataBinding *CT_DataBinding
}

func NewCT_SmartTags() *CT_SmartTags { _bgabe := &CT_SmartTags{}; return _bgabe }

func (_gdga *CT_OleItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efcga := range start.Attr {
		if _efcga.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fcgdf, _fcgba := _efcga.Value, error(nil)
			if _fcgba != nil {
				return _fcgba
			}
			_gdga.NameAttr = _fcgdf
			continue
		}
		if _efcga.Name.Local == "\u0069\u0063\u006f\u006e" {
			_cgacf, _fgdbcc := _eb.ParseBool(_efcga.Value)
			if _fgdbcc != nil {
				return _fgdbcc
			}
			_gdga.IconAttr = &_cgacf
			continue
		}
		if _efcga.Name.Local == "\u0061\u0064\u0076\u0069\u0073\u0065" {
			_bfec, _cceec := _eb.ParseBool(_efcga.Value)
			if _cceec != nil {
				return _cceec
			}
			_gdga.AdviseAttr = &_bfec
			continue
		}
		if _efcga.Name.Local == "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c" {
			_fdagfb, _acedf := _eb.ParseBool(_efcga.Value)
			if _acedf != nil {
				return _acedf
			}
			_gdga.PreferPicAttr = &_fdagfb
			continue
		}
	}
	for {
		_bdeba, _gfee := d.Token()
		if _gfee != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u003a\u0020%\u0073", _gfee)
		}
		if _agfge, _ffgad := _bdeba.(_b.EndElement); _ffgad && _agfge.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_VolTopicRef struct {

	// Reference
	RAttr string

	// Sheet Id
	SAttr uint32
}

func (_dcgdd *CT_TableFormula) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eegeeb := range start.Attr {
		if _eegeeb.Name.Local == "\u0061\u0072\u0072a\u0079" {
			_agaeec, _ccgbd := _eb.ParseBool(_eegeeb.Value)
			if _ccgbd != nil {
				return _ccgbd
			}
			_dcgdd.ArrayAttr = _agaeec
			continue
		}
	}
	for {
		_gegdfd, _fegag := d.Token()
		if _fegag != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0046o\u0072\u006d\u0075l\u0061:\u0020\u0025\u0073", _fegag)
		}
		if _bcdab, _bbbgf := _gegdfd.(_b.CharData); _bbbgf {
			_dcgdd.Content = string(_bcdab)
		}
		if _adeae, _efgdg := _gegdfd.(_b.EndElement); _efgdg && _adeae.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PageBreak and its children, prefixing error messages with path
func (_afadeb *CT_PageBreak) ValidateWithPath(path string) error {
	for _eggfc, _cdbee := range _afadeb.Brk {
		if _eebff := _cdbee.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0042\u0072\u006b\u005b\u0025\u0064\u005d", path, _eggfc)); _eebff != nil {
			return _eebff
		}
	}
	return nil
}

// Validate validates the CT_WorksheetSource and its children
func (_gbefbc *CT_WorksheetSource) Validate() error {
	return _gbefbc.ValidateWithPath("\u0043T\u005fW\u006f\u0072\u006b\u0073\u0068e\u0065\u0074S\u006f\u0075\u0072\u0063\u0065")
}

func NewCT_Items() *CT_Items { _bbgaa := &CT_Items{}; return _bbgaa }

type CT_ConditionalFormat struct {

	// Conditional Formatting Scope
	ScopeAttr ST_Scope

	// Conditional Formatting Rule Type
	TypeAttr ST_Type

	// Priority
	PriorityAttr uint32

	// Pivot Areas
	PivotAreas *CT_PivotAreas
	ExtLst     *CT_ExtensionList
}

func (_gcfca *ST_VolDepType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gcfca = 0
	case "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061":
		*_gcfca = 1
	case "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073":
		*_gcfca = 2
	}
	return nil
}

type CT_ColorScale struct {

	// Conditional Format Value Object
	Cfvo []*CT_Cfvo

	// Color Gradiant Interpolation
	Color []*CT_Color
}

const (
	ST_CellTypeUnset     ST_CellType = 0
	ST_CellTypeB         ST_CellType = 1
	ST_CellTypeN         ST_CellType = 2
	ST_CellTypeE         ST_CellType = 3
	ST_CellTypeS         ST_CellType = 4
	ST_CellTypeStr       ST_CellType = 5
	ST_CellTypeInlineStr ST_CellType = 6
)

func (_gcaefd *Dialogsheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gcaefd.CT_Dialogsheet = *NewCT_Dialogsheet()
_dacfb:
	for {
		_bcedc, _ageafg := d.Token()
		if _ageafg != nil {
			return _ageafg
		}
		switch _gdbcf := _bcedc.(type) {
		case _b.StartElement:
			switch _gdbcf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_gcaefd.SheetPr = NewCT_SheetPr()
				if _dfadac := d.DecodeElement(_gcaefd.SheetPr, &_gdbcf); _dfadac != nil {
					return _dfadac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_gcaefd.SheetViews = NewCT_SheetViews()
				if _ddeeb := d.DecodeElement(_gcaefd.SheetViews, &_gdbcf); _ddeeb != nil {
					return _ddeeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_gcaefd.SheetFormatPr = NewCT_SheetFormatPr()
				if _gafccb := d.DecodeElement(_gcaefd.SheetFormatPr, &_gdbcf); _gafccb != nil {
					return _gafccb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_gcaefd.SheetProtection = NewCT_SheetProtection()
				if _afcdfe := d.DecodeElement(_gcaefd.SheetProtection, &_gdbcf); _afcdfe != nil {
					return _afcdfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_gcaefd.CustomSheetViews = NewCT_CustomSheetViews()
				if _gfdab := d.DecodeElement(_gcaefd.CustomSheetViews, &_gdbcf); _gfdab != nil {
					return _gfdab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_gcaefd.PrintOptions = NewCT_PrintOptions()
				if _fdcfea := d.DecodeElement(_gcaefd.PrintOptions, &_gdbcf); _fdcfea != nil {
					return _fdcfea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_gcaefd.PageMargins = NewCT_PageMargins()
				if _cgccg := d.DecodeElement(_gcaefd.PageMargins, &_gdbcf); _cgccg != nil {
					return _cgccg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_gcaefd.PageSetup = NewCT_PageSetup()
				if _ecdce := d.DecodeElement(_gcaefd.PageSetup, &_gdbcf); _ecdce != nil {
					return _ecdce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_gcaefd.HeaderFooter = NewCT_HeaderFooter()
				if _deefg := d.DecodeElement(_gcaefd.HeaderFooter, &_gdbcf); _deefg != nil {
					return _deefg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_gcaefd.Drawing = NewCT_Drawing()
				if _aeeff := d.DecodeElement(_gcaefd.Drawing, &_gdbcf); _aeeff != nil {
					return _aeeff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_gcaefd.LegacyDrawing = NewCT_LegacyDrawing()
				if _dgbbd := d.DecodeElement(_gcaefd.LegacyDrawing, &_gdbcf); _dgbbd != nil {
					return _dgbbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_gcaefd.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _abbcg := d.DecodeElement(_gcaefd.LegacyDrawingHF, &_gdbcf); _abbcg != nil {
					return _abbcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_gcaefd.DrawingHF = NewCT_DrawingHF()
				if _gagbfc := d.DecodeElement(_gcaefd.DrawingHF, &_gdbcf); _gagbfc != nil {
					return _gagbfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_gcaefd.OleObjects = NewCT_OleObjects()
				if _bdfcea := d.DecodeElement(_gcaefd.OleObjects, &_gdbcf); _bdfcea != nil {
					return _bdfcea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_gcaefd.Controls = NewCT_Controls()
				if _gbbfga := d.DecodeElement(_gcaefd.Controls, &_gdbcf); _gbbfga != nil {
					return _gbbfga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcaefd.ExtLst = NewCT_ExtensionList()
				if _bafbc := d.DecodeElement(_gcaefd.ExtLst, &_gdbcf); _bafbc != nil {
					return _bafbc
				}
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0044\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _gdbcf.Name)
				if _cfgdd := d.Skip(); _cfgdd != nil {
					return _cfgdd
				}
			}
		case _b.EndElement:
			break _dacfb
		case _b.CharData:
		}
	}
	return nil
}

func (_bddcd *CT_PrintOptions) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfaee := range start.Attr {
		if _gfaee.Name.Local == "\u0068o\u0072i\u007a\u006f\u006e\u0074\u0061l\u0043\u0065n\u0074\u0065\u0072\u0065\u0064" {
			_ddda, _ebcdg := _eb.ParseBool(_gfaee.Value)
			if _ebcdg != nil {
				return _ebcdg
			}
			_bddcd.HorizontalCenteredAttr = &_ddda
			continue
		}
		if _gfaee.Name.Local == "\u0076\u0065r\u0074\u0069\u0063a\u006c\u0043\u0065\u006e\u0074\u0065\u0072\u0065\u0064" {
			_aaaagb, _fgfg := _eb.ParseBool(_gfaee.Value)
			if _fgfg != nil {
				return _fgfg
			}
			_bddcd.VerticalCenteredAttr = &_aaaagb
			continue
		}
		if _gfaee.Name.Local == "\u0068\u0065\u0061\u0064\u0069\u006e\u0067\u0073" {
			_cbege, _cfggb := _eb.ParseBool(_gfaee.Value)
			if _cfggb != nil {
				return _cfggb
			}
			_bddcd.HeadingsAttr = &_cbege
			continue
		}
		if _gfaee.Name.Local == "\u0067r\u0069\u0064\u004c\u0069\u006e\u0065s" {
			_acfab, _eefbdg := _eb.ParseBool(_gfaee.Value)
			if _eefbdg != nil {
				return _eefbdg
			}
			_bddcd.GridLinesAttr = &_acfab
			continue
		}
		if _gfaee.Name.Local == "\u0067\u0072\u0069d\u004c\u0069\u006e\u0065\u0073\u0053\u0065\u0074" {
			_cccdbf, _acdaa := _eb.ParseBool(_gfaee.Value)
			if _acdaa != nil {
				return _acdaa
			}
			_bddcd.GridLinesSetAttr = &_cccdbf
			continue
		}
	}
	for {
		_ddefe, _ffcged := d.Token()
		if _ffcged != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0050\u0072\u0069\u006e\u0074\u004fp\u0074\u0069\u006fn\u0073:\u0020\u0025\u0073", _ffcged)
		}
		if _bcddfe, _efcgg := _ddefe.(_b.EndElement); _efcgg && _bcddfe.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ffdfa *ST_Axis) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbgcg, _ccadd := d.Token()
	if _ccadd != nil {
		return _ccadd
	}
	if _fbaeea, _dgfbe := _dbgcg.(_b.EndElement); _dgfbe && _fbaeea.Name == start.Name {
		*_ffdfa = 1
		return nil
	}
	if _efcacb, _efgcc := _dbgcg.(_b.CharData); !_efgcc {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbgcg)
	} else {
		switch string(_efcacb) {
		case "":
			*_ffdfa = 0
		case "\u0061x\u0069\u0073\u0052\u006f\u0077":
			*_ffdfa = 1
		case "\u0061x\u0069\u0073\u0043\u006f\u006c":
			*_ffdfa = 2
		case "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065":
			*_ffdfa = 3
		case "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073":
			*_ffdfa = 4
		}
	}
	_dbgcg, _ccadd = d.Token()
	if _ccadd != nil {
		return _ccadd
	}
	if _ecddc, _efbdd := _dbgcg.(_b.EndElement); _efbdd && _ecddc.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbgcg)
}

type CT_Hyperlink struct {

	// Reference
	RefAttr string
	IdAttr  *string

	// Location
	LocationAttr *string

	// Tool Tip
	TooltipAttr *string

	// Display String
	DisplayAttr *string
}

func NewCT_rowItems() *CT_rowItems { _aecge := &CT_rowItems{}; return _aecge }

func (_fccfe ST_ExternalConnectionType) String() string {
	switch _fccfe {
	case 0:
		return ""
	case 1:
		return "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case 2:
		return "\u0074\u0065\u0078\u0074"
	case 3:
		return "\u004d\u0044\u0059"
	case 4:
		return "\u0044\u004d\u0059"
	case 5:
		return "\u0059\u004d\u0044"
	case 6:
		return "\u004d\u0059\u0044"
	case 7:
		return "\u0044\u0059\u004d"
	case 8:
		return "\u0059\u0044\u004d"
	case 9:
		return "\u0073\u006b\u0069\u0070"
	case 10:
		return "\u0045\u004d\u0044"
	}
	return ""
}

func (_fdaac *CT_Record) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fdaac.M != nil {
		_cgecda := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _abgad := range _fdaac.M {
			e.EncodeElement(_abgad, _cgecda)
		}
	}
	if _fdaac.N != nil {
		_fdbgf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _accgda := range _fdaac.N {
			e.EncodeElement(_accgda, _fdbgf)
		}
	}
	if _fdaac.B != nil {
		_dbga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _gecaeb := range _fdaac.B {
			e.EncodeElement(_gecaeb, _dbga)
		}
	}
	if _fdaac.E != nil {
		_ecgbad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _fegfe := range _fdaac.E {
			e.EncodeElement(_fegfe, _ecgbad)
		}
	}
	if _fdaac.S != nil {
		_cgfge := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _cdgea := range _fdaac.S {
			e.EncodeElement(_cdgea, _cgfge)
		}
	}
	if _fdaac.D != nil {
		_fbdbab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064"}}
		for _, _gbegc := range _fdaac.D {
			e.EncodeElement(_gbegc, _fbdbab)
		}
	}
	if _fdaac.X != nil {
		_befbd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _eecee := range _fdaac.X {
			e.EncodeElement(_eecee, _befbd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_I and its children, prefixing error messages with path
func (_agde *CT_I) ValidateWithPath(path string) error {
	if _gfdbc := _agde.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _gfdbc != nil {
		return _gfdbc
	}
	for _daabb, _fcfd := range _agde.X {
		if _cgaad := _fcfd.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _daabb)); _cgaad != nil {
			return _cgaad
		}
	}
	return nil
}

type ST_SortBy byte

func (_bcgaf *CT_RevisionComment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bcgaf.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _egdaff := range start.Attr {
		if _egdaff.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_eefad, _gbagb := _eb.ParseUint(_egdaff.Value, 10, 32)
			if _gbagb != nil {
				return _gbagb
			}
			_bcgaf.SheetIdAttr = uint32(_eefad)
			continue
		}
		if _egdaff.Name.Local == "\u0063\u0065\u006c\u006c" {
			_gaadgcd, _gegdcd := _egdaff.Value, error(nil)
			if _gegdcd != nil {
				return _gegdcd
			}
			_bcgaf.CellAttr = _gaadgcd
			continue
		}
		if _egdaff.Name.Local == "\u0067\u0075\u0069\u0064" {
			_aaegeg, _gegdbc := _egdaff.Value, error(nil)
			if _gegdbc != nil {
				return _gegdbc
			}
			_bcgaf.GuidAttr = _aaegeg
			continue
		}
		if _egdaff.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_bcgaf.ActionAttr.UnmarshalXMLAttr(_egdaff)
			continue
		}
		if _egdaff.Name.Local == "\u0061\u006c\u0077\u0061\u0079\u0073\u0053\u0068\u006f\u0077" {
			_baabf, _aaffge := _eb.ParseBool(_egdaff.Value)
			if _aaffge != nil {
				return _aaffge
			}
			_bcgaf.AlwaysShowAttr = &_baabf
			continue
		}
		if _egdaff.Name.Local == "\u006f\u006c\u0064" {
			_badaa, _daead := _eb.ParseBool(_egdaff.Value)
			if _daead != nil {
				return _daead
			}
			_bcgaf.OldAttr = &_badaa
			continue
		}
		if _egdaff.Name.Local == "\u0068i\u0064\u0064\u0065\u006e\u0052\u006fw" {
			_dbgab, _bfccd := _eb.ParseBool(_egdaff.Value)
			if _bfccd != nil {
				return _bfccd
			}
			_bcgaf.HiddenRowAttr = &_dbgab
			continue
		}
		if _egdaff.Name.Local == "\u0068\u0069\u0064d\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e" {
			_gabce, _dcedg := _eb.ParseBool(_egdaff.Value)
			if _dcedg != nil {
				return _dcedg
			}
			_bcgaf.HiddenColumnAttr = &_gabce
			continue
		}
		if _egdaff.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072" {
			_gdbee, _acgbe := _egdaff.Value, error(nil)
			if _acgbe != nil {
				return _acgbe
			}
			_bcgaf.AuthorAttr = _gdbee
			continue
		}
		if _egdaff.Name.Local == "\u006fl\u0064\u004c\u0065\u006e\u0067\u0074h" {
			_ggbbbe, _bcfag := _eb.ParseUint(_egdaff.Value, 10, 32)
			if _bcfag != nil {
				return _bcfag
			}
			_dcddd := uint32(_ggbbbe)
			_bcgaf.OldLengthAttr = &_dcddd
			continue
		}
		if _egdaff.Name.Local == "\u006ee\u0077\u004c\u0065\u006e\u0067\u0074h" {
			_cfgfg, _bbffe := _eb.ParseUint(_egdaff.Value, 10, 32)
			if _bbffe != nil {
				return _bbffe
			}
			_bfccf := uint32(_cfgfg)
			_bcgaf.NewLengthAttr = &_bfccf
			continue
		}
	}
	for {
		_egfcef, _cfacagb := d.Token()
		if _cfacagb != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006fn\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073", _cfacagb)
		}
		if _afbad, _ecbcad := _egfcef.(_b.EndElement); _ecbcad && _afbad.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_RevisionInsertSheet struct {

	// Sheet Id
	SheetIdAttr uint32

	// Sheet Name
	NameAttr string

	// Sheet Position
	SheetPositionAttr uint32
	RIdAttr           *uint32
	UaAttr            *bool
	RaAttr            *bool
}

func NewPivotCacheDefinition() *PivotCacheDefinition {
	_fdafcce := &PivotCacheDefinition{}
	_fdafcce.CT_PivotCacheDefinition = *NewCT_PivotCacheDefinition()
	return _fdafcce
}

// ValidateWithPath validates the CT_ProtectedRange and its children, prefixing error messages with path
func (_ebcdge *CT_ProtectedRange) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_ConditionalFormats and its children, prefixing error messages with path
func (_bdae *CT_ConditionalFormats) ValidateWithPath(path string) error {
	for _ebcaa, _gada := range _bdae.ConditionalFormat {
		if _fdcfc := _gada.ValidateWithPath(_ec.Sprintf("\u0025s\u002f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u005b\u0025\u0064\u005d", path, _ebcaa)); _fdcfc != nil {
			return _fdcfc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RangePr and its children, prefixing error messages with path
func (_agefee *CT_RangePr) ValidateWithPath(path string) error {
	if _gcagg := _agefee.GroupByAttr.ValidateWithPath(path + "\u002f\u0047\u0072o\u0075\u0070\u0042\u0079\u0041\u0074\u0074\u0072"); _gcagg != nil {
		return _gcagg
	}
	return nil
}

func (_debef *CT_OleLink) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgafd := range start.Attr {
		if _dgafd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dgafd.Name.Local == "\u0069\u0064" || _dgafd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dgafd.Name.Local == "\u0069\u0064" {
			_ggedb, _ebfae := _dgafd.Value, error(nil)
			if _ebfae != nil {
				return _ebfae
			}
			_debef.IdAttr = _ggedb
			continue
		}
		if _dgafd.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_cebdad, _cdcbb := _dgafd.Value, error(nil)
			if _cdcbb != nil {
				return _cdcbb
			}
			_debef.ProgIdAttr = _cebdad
			continue
		}
	}
_ccfdbbe:
	for {
		_abdgc, _aeaea := d.Token()
		if _aeaea != nil {
			return _aeaea
		}
		switch _abfggb := _abdgc.(type) {
		case _b.StartElement:
			switch _abfggb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0049\u0074\u0065\u006d\u0073"}:
				_debef.OleItems = NewCT_OleItems()
				if _gddaa := d.DecodeElement(_debef.OleItems, &_abfggb); _gddaa != nil {
					return _gddaa
				}
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fO\u006c\u0065\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _abfggb.Name)
				if _bbfgd := d.Skip(); _bbfgd != nil {
					return _bbfgd
				}
			}
		case _b.EndElement:
			break _ccfdbbe
		case _b.CharData:
		}
	}
	return nil
}

func (_edea *CT_ChartFormats) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _edea.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_edea.CountAttr)})
	}
	e.EncodeToken(start)
	_dfffd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0074\u0046o\u0072\u006d\u0061\u0074"}}
	for _, _ccff := range _edea.ChartFormat {
		e.EncodeElement(_ccff, _dfffd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fefg *CT_PivotAreaReference) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fefg.FieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_fefg.FieldAttr)})
	}
	if _fefg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_fefg.CountAttr)})
	}
	if _fefg.SelectedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefg.SelectedAttr))})
	}
	if _fefg.ByPositionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0079\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefg.ByPositionAttr))})
	}
	if _fefg.RelativeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefg.RelativeAttr))})
	}
	if _fefg.DefaultSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefg.DefaultSubtotalAttr))})
	}
	if _fefg.SumSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefg.SumSubtotalAttr))})
	}
	if _fefg.CountASubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefg.CountASubtotalAttr))})
	}
	if _fefg.AvgSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefg.AvgSubtotalAttr))})
	}
	if _fefg.MaxSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefg.MaxSubtotalAttr))})
	}
	if _fefg.MinSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefg.MinSubtotalAttr))})
	}
	if _fefg.ProductSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefg.ProductSubtotalAttr))})
	}
	if _fefg.CountSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefg.CountSubtotalAttr))})
	}
	if _fefg.StdDevSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefg.StdDevSubtotalAttr))})
	}
	if _fefg.StdDevPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefg.StdDevPSubtotalAttr))})
	}
	if _fefg.VarSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefg.VarSubtotalAttr))})
	}
	if _fefg.VarPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefg.VarPSubtotalAttr))})
	}
	e.EncodeToken(start)
	if _fefg.X != nil {
		_eaegf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _dcded := range _fefg.X {
			e.EncodeElement(_dcded, _eaegf)
		}
	}
	if _fefg.ExtLst != nil {
		_aadeg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fefg.ExtLst, _aadeg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Colors and its children
func (_gcdc *CT_Colors) Validate() error {
	return _gcdc.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006c\u006f\u0072s")
}

func (_cbdgg ST_DateTimeGrouping) ValidateWithPath(path string) error {
	switch _cbdgg {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbdgg))
	}
	return nil
}

type SingleXmlCells struct{ CT_SingleXmlCells }

func (_ebgbff ST_Qualifier) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ebgbff.String(), start)
}

func (_aabdad ST_CalcMode) String() string {
	switch _aabdad {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u006e\u0075\u0061\u006c"
	case 2:
		return "\u0061\u0075\u0074\u006f"
	case 3:
		return "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065"
	}
	return ""
}

// Validate validates the CT_Fonts and its children
func (_dfcc *CT_Fonts) Validate() error {
	return _dfcc.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0073")
}

type CT_Borders struct {

	// Border Count
	CountAttr *uint32

	// Border
	Border []*CT_Border
}

// Validate validates the CT_PageItem and its children
func (_egbce *CT_PageItem) Validate() error {
	return _egbce.ValidateWithPath("C\u0054\u005f\u0050\u0061\u0067\u0065\u0049\u0074\u0065\u006d")
}

func (_cbbac ST_TableType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cbbac.String(), start)
}

func NewCT_PhoneticRun() *CT_PhoneticRun { _dcfgdb := &CT_PhoneticRun{}; return _dcfgdb }

func (_afdbb ST_DataValidationImeMode) ValidateWithPath(path string) error {
	switch _afdbb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_afdbb))
	}
	return nil
}

func (_adfabg *ST_CfvoType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ebbeaa, _afaef := d.Token()
	if _afaef != nil {
		return _afaef
	}
	if _aabgff, _egcdgd := _ebbeaa.(_b.EndElement); _egcdgd && _aabgff.Name == start.Name {
		*_adfabg = 1
		return nil
	}
	if _bfada, _fdcaaf := _ebbeaa.(_b.CharData); !_fdcaaf {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebbeaa)
	} else {
		switch string(_bfada) {
		case "":
			*_adfabg = 0
		case "\u006e\u0075\u006d":
			*_adfabg = 1
		case "\u0070e\u0072\u0063\u0065\u006e\u0074":
			*_adfabg = 2
		case "\u006d\u0061\u0078":
			*_adfabg = 3
		case "\u006d\u0069\u006e":
			*_adfabg = 4
		case "\u0066o\u0072\u006d\u0075\u006c\u0061":
			*_adfabg = 5
		case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065":
			*_adfabg = 6
		}
	}
	_ebbeaa, _afaef = d.Token()
	if _afaef != nil {
		return _afaef
	}
	if _ggafgc, _dgdag := _ebbeaa.(_b.EndElement); _dgdag && _ggafgc.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebbeaa)
}

func (_fafce *ST_UpdateLinks) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fafce = 0
	case "\u0075s\u0065\u0072\u0053\u0065\u0074":
		*_fafce = 1
	case "\u006e\u0065\u0076e\u0072":
		*_fafce = 2
	case "\u0061\u006c\u0077\u0061\u0079\u0073":
		*_fafce = 3
	}
	return nil
}

// Validate validates the CT_ChartFormat and its children
func (_dfdb *CT_ChartFormat) Validate() error {
	return _dfdb.ValidateWithPath("\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0046o\u0072\u006d\u0061\u0074")
}

type CT_UnderlineProperty struct {

	// Underline Value
	ValAttr ST_UnderlineValues
}

// ValidateWithPath validates the CT_ExternalLink and its children, prefixing error messages with path
func (_accfb *CT_ExternalLink) ValidateWithPath(path string) error {
	if _accfb.Choice != nil {
		if _agfa := _accfb.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _agfa != nil {
			return _agfa
		}
	}
	if _accfb.ExtLst != nil {
		if _adegg := _accfb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _adegg != nil {
			return _adegg
		}
	}
	return nil
}

func (_ggagc *CT_VolTopicRef) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddcfd := range start.Attr {
		if _ddcfd.Name.Local == "\u0072" {
			_cefbe, _gafaa := _ddcfd.Value, error(nil)
			if _gafaa != nil {
				return _gafaa
			}
			_ggagc.RAttr = _cefbe
			continue
		}
		if _ddcfd.Name.Local == "\u0073" {
			_adaba, _egdca := _eb.ParseUint(_ddcfd.Value, 10, 32)
			if _egdca != nil {
				return _egdca
			}
			_ggagc.SAttr = uint32(_adaba)
			continue
		}
	}
	for {
		_ebceec, _afeec := d.Token()
		if _afeec != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fV\u006f\u006c\u0054\u006f\u0070\u0069\u0063\u0052\u0065\u0066:\u0020\u0025\u0073", _afeec)
		}
		if _fgabg, _gfadf := _ebceec.(_b.EndElement); _gfadf && _fgabg.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_PivotAreaType byte

func (_bfddg *CT_Member) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _bfddg.NameAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_DdeLink() *CT_DdeLink { _aabdaa := &CT_DdeLink{}; return _aabdaa }

func (_bcbab *CT_NumFmts) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bcbab.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_bcbab.CountAttr)})
	}
	e.EncodeToken(start)
	if _bcbab.NumFmt != nil {
		_efgfeg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006e\u0075\u006d\u0046\u006dt"}}
		for _, _ffefb := range _bcbab.NumFmt {
			e.EncodeElement(_ffefb, _efgfeg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Missing struct {

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// Tuples
	Tpls []*CT_Tuples

	// Member Property Indexes
	X []*CT_X
}

func NewCT_PivotAreas() *CT_PivotAreas { _bccgag := &CT_PivotAreas{}; return _bccgag }

// Validate validates the CT_DdeValue and its children
func (_dfeagb *CT_DdeValue) Validate() error {
	return _dfeagb.ValidateWithPath("C\u0054\u005f\u0044\u0064\u0065\u0056\u0061\u006c\u0075\u0065")
}

// Validate validates the CT_SheetCalcPr and its children
func (_fdeda *CT_SheetCalcPr) Validate() error {
	return _fdeda.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0043a\u006c\u0063\u0050\u0072")
}

// Validate validates the CT_Revisions and its children
func (_eaaag *CT_Revisions) Validate() error {
	return _eaaag.ValidateWithPath("\u0043\u0054\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073")
}

func NewCT_ServerFormat() *CT_ServerFormat { _efccd := &CT_ServerFormat{}; return _efccd }

// Validate validates the CT_ColFields and its children
func (_efeg *CT_ColFields) Validate() error {
	return _efeg.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073")
}

func (_begbd *CT_SheetPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _faggd := range start.Attr {
		if _faggd.Name.Local == "\u0073\u0079\u006e\u0063\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c" {
			_cegce, _dgefg := _eb.ParseBool(_faggd.Value)
			if _dgefg != nil {
				return _dgefg
			}
			_begbd.SyncHorizontalAttr = &_cegce
			continue
		}
		if _faggd.Name.Local == "\u0073\u0079\u006ec\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c" {
			_afeaca, _dgfbcc := _eb.ParseBool(_faggd.Value)
			if _dgfbcc != nil {
				return _dgfbcc
			}
			_begbd.SyncVerticalAttr = &_afeaca
			continue
		}
		if _faggd.Name.Local == "\u0073y\u006e\u0063\u0052\u0065\u0066" {
			_afaac, _cbfdf := _faggd.Value, error(nil)
			if _cbfdf != nil {
				return _cbfdf
			}
			_begbd.SyncRefAttr = &_afaac
			continue
		}
		if _faggd.Name.Local == "t\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0045v\u0061\u006c\u0075\u0061ti\u006f\u006e" {
			_dfbcc, _cbec := _eb.ParseBool(_faggd.Value)
			if _cbec != nil {
				return _cbec
			}
			_begbd.TransitionEvaluationAttr = &_dfbcc
			continue
		}
		if _faggd.Name.Local == "\u0074r\u0061n\u0073\u0069\u0074\u0069\u006f\u006e\u0045\u006e\u0074\u0072\u0079" {
			_abddf, _dcdaa := _eb.ParseBool(_faggd.Value)
			if _dcdaa != nil {
				return _dcdaa
			}
			_begbd.TransitionEntryAttr = &_abddf
			continue
		}
		if _faggd.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_bgccg, _fecegd := _eb.ParseBool(_faggd.Value)
			if _fecegd != nil {
				return _fecegd
			}
			_begbd.PublishedAttr = &_bgccg
			continue
		}
		if _faggd.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_egfde, _fedacd := _faggd.Value, error(nil)
			if _fedacd != nil {
				return _fedacd
			}
			_begbd.CodeNameAttr = &_egfde
			continue
		}
		if _faggd.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072\u004d\u006f\u0064\u0065" {
			_eddfe, _cgbfc := _eb.ParseBool(_faggd.Value)
			if _cgbfc != nil {
				return _cgbfc
			}
			_begbd.FilterModeAttr = &_eddfe
			continue
		}
		if _faggd.Name.Local == "\u0065\u006e\u0061\u0062\u006c\u0065F\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0073\u0043\u0061\u006c\u0063\u0075\u006ca\u0074\u0069\u006f\u006e" {
			_gcfeba, _facae := _eb.ParseBool(_faggd.Value)
			if _facae != nil {
				return _facae
			}
			_begbd.EnableFormatConditionsCalculationAttr = &_gcfeba
			continue
		}
	}
_gbgbd:
	for {
		_gegcc, _efeag := d.Token()
		if _efeag != nil {
			return _efeag
		}
		switch _eaace := _gegcc.(type) {
		case _b.StartElement:
			switch _eaace.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}:
				_begbd.TabColor = NewCT_Color()
				if _bffba := d.DecodeElement(_begbd.TabColor, &_eaace); _bffba != nil {
					return _bffba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065\u0050r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065\u0050r"}:
				_begbd.OutlinePr = NewCT_OutlinePr()
				if _egbdf := d.DecodeElement(_begbd.OutlinePr, &_eaace); _egbdf != nil {
					return _egbdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"}:
				_begbd.PageSetUpPr = NewCT_PageSetUpPr()
				if _befef := d.DecodeElement(_begbd.PageSetUpPr, &_eaace); _befef != nil {
					return _befef
				}
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0050\u0072\u0020\u0025\u0076", _eaace.Name)
				if _eegfg := d.Skip(); _eegfg != nil {
					return _eegfg
				}
			}
		case _b.EndElement:
			break _gbgbd
		case _b.CharData:
		}
	}
	return nil
}

type ST_DynamicFilterType byte

type Chartsheet struct{ CT_Chartsheet }

func (_geedaf *CT_WebPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _geedaf.XmlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_geedaf.XmlAttr))})
	}
	if _geedaf.SourceDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0044\u0061\u0074\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_geedaf.SourceDataAttr))})
	}
	if _geedaf.ParsePreAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0072\u0073\u0065\u0050\u0072\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_geedaf.ParsePreAttr))})
	}
	if _geedaf.ConsecutiveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_geedaf.ConsecutiveAttr))})
	}
	if _geedaf.FirstRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_geedaf.FirstRowAttr))})
	}
	if _geedaf.Xl97Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006c\u0039\u0037"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_geedaf.Xl97Attr))})
	}
	if _geedaf.TextDatesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074e\u0078\u0074\u0044\u0061\u0074\u0065s"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_geedaf.TextDatesAttr))})
	}
	if _geedaf.Xl2000Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006c\u0032\u0030\u0030\u0030"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_geedaf.Xl2000Attr))})
	}
	if _geedaf.UrlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0072\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_geedaf.UrlAttr)})
	}
	if _geedaf.PostAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u006f\u0073\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_geedaf.PostAttr)})
	}
	if _geedaf.HtmlTablesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0074\u006d\u006c\u0054\u0061\u0062\u006c\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_geedaf.HtmlTablesAttr))})
	}
	if _geedaf.HtmlFormatAttr != ST_HtmlFmtUnset {
		_fcgdcc, _fcefd := _geedaf.HtmlFormatAttr.MarshalXMLAttr(_b.Name{Local: "\u0068\u0074\u006d\u006c\u0046\u006f\u0072\u006d\u0061\u0074"})
		if _fcefd != nil {
			return _fcefd
		}
		start.Attr = append(start.Attr, _fcgdcc)
	}
	if _geedaf.EditPageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0064\u0069\u0074\u0050\u0061\u0067\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_geedaf.EditPageAttr)})
	}
	e.EncodeToken(start)
	if _geedaf.Tables != nil {
		_dcead := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0061\u0062\u006c\u0065s"}}
		e.EncodeElement(_geedaf.Tables, _dcead)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_Dimensions() *CT_Dimensions { _egcg := &CT_Dimensions{}; return _egcg }

func (_aaga *CT_FieldsUsage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbfac := range start.Attr {
		if _bbfac.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cbbc, _gdgg := _eb.ParseUint(_bbfac.Value, 10, 32)
			if _gdgg != nil {
				return _gdgg
			}
			_ecdc := uint32(_cbbc)
			_aaga.CountAttr = &_ecdc
			continue
		}
	}
_bdfa:
	for {
		_caaga, _gbba := d.Token()
		if _gbba != nil {
			return _gbba
		}
		switch _fabeb := _caaga.(type) {
		case _b.StartElement:
			switch _fabeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065"}:
				_agea := NewCT_FieldUsage()
				if _agfba := d.DecodeElement(_agea, &_fabeb); _agfba != nil {
					return _agfba
				}
				_aaga.FieldUsage = append(_aaga.FieldUsage, _agea)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0073\u0055s\u0061g\u0065\u0020\u0025\u0076", _fabeb.Name)
				if _gabcb := d.Skip(); _gabcb != nil {
					return _gabcb
				}
			}
		case _b.EndElement:
			break _bdfa
		case _b.CharData:
		}
	}
	return nil
}

type CT_VolTopic struct {

	// Type
	TAttr ST_VolValueType

	// Topic Value
	V string

	// Strings in Subtopic
	Stp []string

	// References
	Tr []*CT_VolTopicRef
}

func (_affg *CT_BooleanProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _affg.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_affg.ValAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fcaae *CT_DrawingHF) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddcf := range start.Attr {
		if _ddcf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ddcf.Name.Local == "\u0069\u0064" || _ddcf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ddcf.Name.Local == "\u0069\u0064" {
			_efgbd, _ffaca := _ddcf.Value, error(nil)
			if _ffaca != nil {
				return _ffaca
			}
			_fcaae.IdAttr = _efgbd
			continue
		}
		if _ddcf.Name.Local == "\u0072\u0068\u0066" {
			_bfcf, _ebdbd := _eb.ParseUint(_ddcf.Value, 10, 32)
			if _ebdbd != nil {
				return _ebdbd
			}
			_cbcd := uint32(_bfcf)
			_fcaae.RhfAttr = &_cbcd
			continue
		}
		if _ddcf.Name.Local == "\u006c\u0066\u006f" {
			_ageec, _bcgfe := _eb.ParseUint(_ddcf.Value, 10, 32)
			if _bcgfe != nil {
				return _bcgfe
			}
			_gabde := uint32(_ageec)
			_fcaae.LfoAttr = &_gabde
			continue
		}
		if _ddcf.Name.Local == "\u006c\u0066\u0065" {
			_efcd, _cggac := _eb.ParseUint(_ddcf.Value, 10, 32)
			if _cggac != nil {
				return _cggac
			}
			_bcbbf := uint32(_efcd)
			_fcaae.LfeAttr = &_bcbbf
			continue
		}
		if _ddcf.Name.Local == "\u006c\u0068\u0066" {
			_cccef, _caga := _eb.ParseUint(_ddcf.Value, 10, 32)
			if _caga != nil {
				return _caga
			}
			_bffbf := uint32(_cccef)
			_fcaae.LhfAttr = &_bffbf
			continue
		}
		if _ddcf.Name.Local == "\u006c\u0066\u0066" {
			_gbedd, _bdgfa := _eb.ParseUint(_ddcf.Value, 10, 32)
			if _bdgfa != nil {
				return _bdgfa
			}
			_gaabc := uint32(_gbedd)
			_fcaae.LffAttr = &_gaabc
			continue
		}
		if _ddcf.Name.Local == "\u0063\u0068\u0065" {
			_efdb, _gbccb := _eb.ParseUint(_ddcf.Value, 10, 32)
			if _gbccb != nil {
				return _gbccb
			}
			_bebcb := uint32(_efdb)
			_fcaae.CheAttr = &_bebcb
			continue
		}
		if _ddcf.Name.Local == "\u0072\u0068\u006f" {
			_efcgc, _dccbe := _eb.ParseUint(_ddcf.Value, 10, 32)
			if _dccbe != nil {
				return _dccbe
			}
			_debg := uint32(_efcgc)
			_fcaae.RhoAttr = &_debg
			continue
		}
		if _ddcf.Name.Local == "\u0072\u0068\u0065" {
			_ffbeb, _ceedc := _eb.ParseUint(_ddcf.Value, 10, 32)
			if _ceedc != nil {
				return _ceedc
			}
			_gafdf := uint32(_ffbeb)
			_fcaae.RheAttr = &_gafdf
			continue
		}
		if _ddcf.Name.Local == "\u006c\u0068\u006f" {
			_fggdf, _cgacd := _eb.ParseUint(_ddcf.Value, 10, 32)
			if _cgacd != nil {
				return _cgacd
			}
			_faaba := uint32(_fggdf)
			_fcaae.LhoAttr = &_faaba
			continue
		}
		if _ddcf.Name.Local == "\u006c\u0068\u0065" {
			_bacb, _degdb := _eb.ParseUint(_ddcf.Value, 10, 32)
			if _degdb != nil {
				return _degdb
			}
			_fbgbc := uint32(_bacb)
			_fcaae.LheAttr = &_fbgbc
			continue
		}
		if _ddcf.Name.Local == "\u0063\u0068\u006f" {
			_dcaf, _fdcaa := _eb.ParseUint(_ddcf.Value, 10, 32)
			if _fdcaa != nil {
				return _fdcaa
			}
			_aeec := uint32(_dcaf)
			_fcaae.ChoAttr = &_aeec
			continue
		}
		if _ddcf.Name.Local == "\u0063\u0068\u0066" {
			_dfed, _eacd := _eb.ParseUint(_ddcf.Value, 10, 32)
			if _eacd != nil {
				return _eacd
			}
			_ceggd := uint32(_dfed)
			_fcaae.ChfAttr = &_ceggd
			continue
		}
		if _ddcf.Name.Local == "\u0063\u0066\u006f" {
			_egcgg, _beeeg := _eb.ParseUint(_ddcf.Value, 10, 32)
			if _beeeg != nil {
				return _beeeg
			}
			_eeedb := uint32(_egcgg)
			_fcaae.CfoAttr = &_eeedb
			continue
		}
		if _ddcf.Name.Local == "\u0063\u0066\u0065" {
			_egecg, _fcdgc := _eb.ParseUint(_ddcf.Value, 10, 32)
			if _fcdgc != nil {
				return _fcdgc
			}
			_cbceb := uint32(_egecg)
			_fcaae.CfeAttr = &_cbceb
			continue
		}
		if _ddcf.Name.Local == "\u0063\u0066\u0066" {
			_gaggc, _bbeda := _eb.ParseUint(_ddcf.Value, 10, 32)
			if _bbeda != nil {
				return _bbeda
			}
			_cdace := uint32(_gaggc)
			_fcaae.CffAttr = &_cdace
			continue
		}
		if _ddcf.Name.Local == "\u0072\u0066\u006f" {
			_dgafg, _aefg := _eb.ParseUint(_ddcf.Value, 10, 32)
			if _aefg != nil {
				return _aefg
			}
			_eadde := uint32(_dgafg)
			_fcaae.RfoAttr = &_eadde
			continue
		}
		if _ddcf.Name.Local == "\u0072\u0066\u0065" {
			_bfafe, _gfegb := _eb.ParseUint(_ddcf.Value, 10, 32)
			if _gfegb != nil {
				return _gfegb
			}
			_cacca := uint32(_bfafe)
			_fcaae.RfeAttr = &_cacca
			continue
		}
		if _ddcf.Name.Local == "\u0072\u0066\u0066" {
			_efgbf, _aegdg := _eb.ParseUint(_ddcf.Value, 10, 32)
			if _aegdg != nil {
				return _aegdg
			}
			_deggb := uint32(_efgbf)
			_fcaae.RffAttr = &_deggb
			continue
		}
	}
	for {
		_deega, _gdbfg := d.Token()
		if _gdbfg != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0072a\u0077\u0069\u006e\u0067\u0048\u0046\u003a\u0020\u0025\u0073", _gdbfg)
		}
		if _bcccd, _bcbcf := _deega.(_b.EndElement); _bcbcf && _bcccd.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_CacheFields() *CT_CacheFields { _fff := &CT_CacheFields{}; return _fff }

// Validate validates the CT_VolTopic and its children
func (_dffcd *CT_VolTopic) Validate() error {
	return _dffcd.ValidateWithPath("C\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070\u0069\u0063")
}

type ST_GradientType byte

type CT_DataConsolidate struct {

	// Function Index
	FunctionAttr ST_DataConsolidateFunction

	// Use Starting Column Labels
	StartLabelsAttr *bool

	// Starting Column Labels
	LeftLabelsAttr *bool

	// Labels In Top Row
	TopLabelsAttr *bool

	// Link
	LinkAttr *bool

	// Data Consolidation References
	DataRefs *CT_DataRefs
}

func (_bgffb *CT_ObjectAnchor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bgffb.From = _c.NewFrom()
	_bgffb.To = _c.NewTo()
	for _, _cacb := range start.Attr {
		if _cacb.Name.Local == "\u006d\u006f\u0076\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073" {
			_egfgd, _daca := _eb.ParseBool(_cacb.Value)
			if _daca != nil {
				return _daca
			}
			_bgffb.MoveWithCellsAttr = &_egfgd
			continue
		}
		if _cacb.Name.Local == "\u0073\u0069\u007a\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073" {
			_dgeff, _bfgeg := _eb.ParseBool(_cacb.Value)
			if _bfgeg != nil {
				return _bfgeg
			}
			_bgffb.SizeWithCellsAttr = &_dgeff
			continue
		}
	}
_agacb:
	for {
		_eabeb, _afcd := d.Token()
		if _afcd != nil {
			return _afcd
		}
		switch _cacaf := _eabeb.(type) {
		case _b.StartElement:
			switch _cacaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}:
				if _bbbda := d.DecodeElement(_bgffb.From, &_cacaf); _bbbda != nil {
					return _bbbda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0074\u006f"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u006f"}:
				if _ccgd := d.DecodeElement(_bgffb.To, &_cacaf); _ccgd != nil {
					return _ccgd
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0062\u006ae\u0063\u0074\u0041\u006e\u0063\u0068\u006f\u0072\u0020\u0025\u0076", _cacaf.Name)
				if _begbc := d.Skip(); _begbc != nil {
					return _begbc
				}
			}
		case _b.EndElement:
			break _agacb
		case _b.CharData:
		}
	}
	return nil
}

func (_adgdb *CT_PageSetup) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _adgdb.PaperSizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae"}, Value: _ec.Sprintf("\u0025\u0076", *_adgdb.PaperSizeAttr)})
	}
	if _adgdb.PaperHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_adgdb.PaperHeightAttr)})
	}
	if _adgdb.PaperWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068"}, Value: _ec.Sprintf("\u0025\u0076", *_adgdb.PaperWidthAttr)})
	}
	if _adgdb.ScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0063\u0061l\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_adgdb.ScaleAttr)})
	}
	if _adgdb.FirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_adgdb.FirstPageNumberAttr)})
	}
	if _adgdb.FitToWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0074\u0054\u006f\u0057\u0069\u0064\u0074\u0068"}, Value: _ec.Sprintf("\u0025\u0076", *_adgdb.FitToWidthAttr)})
	}
	if _adgdb.FitToHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "f\u0069\u0074\u0054\u006f\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_adgdb.FitToHeightAttr)})
	}
	if _adgdb.PageOrderAttr != ST_PageOrderUnset {
		_gcedcf, _cgaef := _adgdb.PageOrderAttr.MarshalXMLAttr(_b.Name{Local: "\u0070a\u0067\u0065\u004f\u0072\u0064\u0065r"})
		if _cgaef != nil {
			return _cgaef
		}
		start.Attr = append(start.Attr, _gcedcf)
	}
	if _adgdb.OrientationAttr != ST_OrientationUnset {
		_dfgef, _bgbgab := _adgdb.OrientationAttr.MarshalXMLAttr(_b.Name{Local: "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e"})
		if _bgbgab != nil {
			return _bgbgab
		}
		start.Attr = append(start.Attr, _dfgef)
	}
	if _adgdb.UsePrinterDefaultsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adgdb.UsePrinterDefaultsAttr))})
	}
	if _adgdb.BlackAndWhiteAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adgdb.BlackAndWhiteAttr))})
	}
	if _adgdb.DraftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072\u0061f\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adgdb.DraftAttr))})
	}
	if _adgdb.CellCommentsAttr != ST_CellCommentsUnset {
		_dgdea, _eefebd := _adgdb.CellCommentsAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u0065\u006cl\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"})
		if _eefebd != nil {
			return _eefebd
		}
		start.Attr = append(start.Attr, _dgdea)
	}
	if _adgdb.UseFirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adgdb.UseFirstPageNumberAttr))})
	}
	if _adgdb.ErrorsAttr != ST_PrintErrorUnset {
		_ecfaf, _adge := _adgdb.ErrorsAttr.MarshalXMLAttr(_b.Name{Local: "\u0065\u0072\u0072\u006f\u0072\u0073"})
		if _adge != nil {
			return _adge
		}
		start.Attr = append(start.Attr, _ecfaf)
	}
	if _adgdb.HorizontalDpiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069"}, Value: _ec.Sprintf("\u0025\u0076", *_adgdb.HorizontalDpiAttr)})
	}
	if _adgdb.VerticalDpiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069"}, Value: _ec.Sprintf("\u0025\u0076", *_adgdb.VerticalDpiAttr)})
	}
	if _adgdb.CopiesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0070\u0069\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0076", *_adgdb.CopiesAttr)})
	}
	if _adgdb.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_adgdb.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_aggcbc ST_Scope) ValidateWithPath(path string) error {
	switch _aggcbc {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aggcbc))
	}
	return nil
}

func (_eccdac *ST_FileType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dggfe, _cebec := d.Token()
	if _cebec != nil {
		return _cebec
	}
	if _aacbg, _ccbce := _dggfe.(_b.EndElement); _ccbce && _aacbg.Name == start.Name {
		*_eccdac = 1
		return nil
	}
	if _abadb, _ebaaf := _dggfe.(_b.CharData); !_ebaaf {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dggfe)
	} else {
		switch string(_abadb) {
		case "":
			*_eccdac = 0
		case "\u006d\u0061\u0063":
			*_eccdac = 1
		case "\u0077\u0069\u006e":
			*_eccdac = 2
		case "\u0064\u006f\u0073":
			*_eccdac = 3
		case "\u006c\u0069\u006e":
			*_eccdac = 4
		case "\u006f\u0074\u0068e\u0072":
			*_eccdac = 5
		}
	}
	_dggfe, _cebec = d.Token()
	if _cebec != nil {
		return _cebec
	}
	if _fgegbe, _abgcff := _dggfe.(_b.EndElement); _abgcff && _fgegbe.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dggfe)
}

// ValidateWithPath validates the CT_PageMargins and its children, prefixing error messages with path
func (_ffegf *CT_PageMargins) ValidateWithPath(path string) error { return nil }

func (_aabadc *CT_PageBreak) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aabadc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_aabadc.CountAttr)})
	}
	if _aabadc.ManualBreakCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061n\u0075\u0061\u006cB\u0072\u0065\u0061\u006b\u0043\u006f\u0075\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_aabadc.ManualBreakCountAttr)})
	}
	e.EncodeToken(start)
	if _aabadc.Brk != nil {
		_ecbaa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062\u0072\u006b"}}
		for _, _bfbgb := range _aabadc.Brk {
			e.EncodeElement(_bfbgb, _ecbaa)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_aeeef ST_HtmlFmt) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_aeeef.String(), start)
}

type CT_BooleanProperty struct {

	// Value
	ValAttr *bool
}

// Validate validates the CT_Error and its children
func (_ggfg *CT_Error) Validate() error {
	return _ggfg.ValidateWithPath("\u0043\u0054\u005f\u0045\u0072\u0072\u006f\u0072")
}

type CT_OleObjects struct {

	// Embedded Object
	OleObject []*CT_OleObject
}

// ValidateWithPath validates the CT_ExternalDefinedName and its children, prefixing error messages with path
func (_acfbc *CT_ExternalDefinedName) ValidateWithPath(path string) error { return nil }

func NewCT_ChartsheetProtection() *CT_ChartsheetProtection {
	_edage := &CT_ChartsheetProtection{}
	return _edage
}

type ST_GrowShrinkType byte

const (
	ST_FontSchemeUnset ST_FontScheme = 0
	ST_FontSchemeNone  ST_FontScheme = 1
	ST_FontSchemeMajor ST_FontScheme = 2
	ST_FontSchemeMinor ST_FontScheme = 3
)

func (_eagcfc *CT_Comment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eagcfc.Text = NewCT_Rst()
	for _, _fadda := range start.Attr {
		if _fadda.Name.Local == "\u0072\u0065\u0066" {
			_bcbeg, _aegg := _fadda.Value, error(nil)
			if _aegg != nil {
				return _aegg
			}
			_eagcfc.RefAttr = _bcbeg
			continue
		}
		if _fadda.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064" {
			_bfab, _gage := _eb.ParseUint(_fadda.Value, 10, 32)
			if _gage != nil {
				return _gage
			}
			_eagcfc.AuthorIdAttr = uint32(_bfab)
			continue
		}
		if _fadda.Name.Local == "\u0067\u0075\u0069\u0064" {
			_eaaa, _cggc := _fadda.Value, error(nil)
			if _cggc != nil {
				return _cggc
			}
			_eagcfc.GuidAttr = &_eaaa
			continue
		}
		if _fadda.Name.Local == "\u0073h\u0061\u0070\u0065\u0049\u0064" {
			_cggcc, _acfd := _eb.ParseUint(_fadda.Value, 10, 32)
			if _acfd != nil {
				return _acfd
			}
			_dbdb := uint32(_cggcc)
			_eagcfc.ShapeIdAttr = &_dbdb
			continue
		}
	}
_gdbe:
	for {
		_ebcdc, _gdfd := d.Token()
		if _gdfd != nil {
			return _gdfd
		}
		switch _dcfg := _ebcdc.(type) {
		case _b.StartElement:
			switch _dcfg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}:
				if _abfc := d.DecodeElement(_eagcfc.Text, &_dcfg); _abfc != nil {
					return _abfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074\u0050r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074\u0050r"}:
				_eagcfc.CommentPr = NewCT_CommentPr()
				if _fbebe := d.DecodeElement(_eagcfc.CommentPr, &_dcfg); _fbebe != nil {
					return _fbebe
				}
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _dcfg.Name)
				if _cefdc := d.Skip(); _cefdc != nil {
					return _cefdc
				}
			}
		case _b.EndElement:
			break _gdbe
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_String and its children
func (_cbddc *CT_String) Validate() error {
	return _cbddc.ValidateWithPath("\u0043T\u005f\u0053\u0074\u0072\u0069\u006eg")
}

func NewCT_RevisionHeader() *CT_RevisionHeader {
	_afcgc := &CT_RevisionHeader{}
	_afcgc.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_afcgc.SheetIdMap = NewCT_SheetIdMap()
	return _afcgc
}

func (_acaaab *ST_Visibility) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bccbga, _fgecd := d.Token()
	if _fgecd != nil {
		return _fgecd
	}
	if _bgbbfe, _gggdbd := _bccbga.(_b.EndElement); _gggdbd && _bgbbfe.Name == start.Name {
		*_acaaab = 1
		return nil
	}
	if _abbgb, _bcccdd := _bccbga.(_b.CharData); !_bcccdd {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bccbga)
	} else {
		switch string(_abbgb) {
		case "":
			*_acaaab = 0
		case "\u0076i\u0073\u0069\u0062\u006c\u0065":
			*_acaaab = 1
		case "\u0068\u0069\u0064\u0064\u0065\u006e":
			*_acaaab = 2
		case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
			*_acaaab = 3
		}
	}
	_bccbga, _fgecd = d.Token()
	if _fgecd != nil {
		return _fgecd
	}
	if _ccgee, _dfbbbb := _bccbga.(_b.EndElement); _dfbbbb && _ccgee.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bccbga)
}

func (_afbd *CT_CellStyles) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _afbd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_afbd.CountAttr)})
	}
	e.EncodeToken(start)
	_abgd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065"}}
	for _, _edfa := range _afbd.CellStyle {
		e.EncodeElement(_edfa, _abgd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_TablePart() *CT_TablePart { _fbgbf := &CT_TablePart{}; return _fbgbf }

func (_gcgeb ST_PivotFilterType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_adag := _b.Attr{}
	_adag.Name = name
	switch _gcgeb {
	case ST_PivotFilterTypeUnset:
		_adag.Value = ""
	case ST_PivotFilterTypeUnknown:
		_adag.Value = "\u0075n\u006b\u006e\u006f\u0077\u006e"
	case ST_PivotFilterTypeCount:
		_adag.Value = "\u0063\u006f\u0075n\u0074"
	case ST_PivotFilterTypePercent:
		_adag.Value = "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case ST_PivotFilterTypeSum:
		_adag.Value = "\u0073\u0075\u006d"
	case ST_PivotFilterTypeCaptionEqual:
		_adag.Value = "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeCaptionNotEqual:
		_adag.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeCaptionBeginsWith:
		_adag.Value = "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068"
	case ST_PivotFilterTypeCaptionNotBeginsWith:
		_adag.Value = "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068"
	case ST_PivotFilterTypeCaptionEndsWith:
		_adag.Value = "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case ST_PivotFilterTypeCaptionNotEndsWith:
		_adag.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068"
	case ST_PivotFilterTypeCaptionContains:
		_adag.Value = "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case ST_PivotFilterTypeCaptionNotContains:
		_adag.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073"
	case ST_PivotFilterTypeCaptionGreaterThan:
		_adag.Value = "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeCaptionGreaterThanOrEqual:
		_adag.Value = "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l"
	case ST_PivotFilterTypeCaptionLessThan:
		_adag.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeCaptionLessThanOrEqual:
		_adag.Value = "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c"
	case ST_PivotFilterTypeCaptionBetween:
		_adag.Value = "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeCaptionNotBetween:
		_adag.Value = "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeValueEqual:
		_adag.Value = "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeValueNotEqual:
		_adag.Value = "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeValueGreaterThan:
		_adag.Value = "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeValueGreaterThanOrEqual:
		_adag.Value = "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeValueLessThan:
		_adag.Value = "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeValueLessThanOrEqual:
		_adag.Value = "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case ST_PivotFilterTypeValueBetween:
		_adag.Value = "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeValueNotBetween:
		_adag.Value = "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeDateEqual:
		_adag.Value = "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l"
	case ST_PivotFilterTypeDateNotEqual:
		_adag.Value = "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeDateOlderThan:
		_adag.Value = "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeDateOlderThanOrEqual:
		_adag.Value = "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case ST_PivotFilterTypeDateNewerThan:
		_adag.Value = "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeDateNewerThanOrEqual:
		_adag.Value = "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case ST_PivotFilterTypeDateBetween:
		_adag.Value = "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeDateNotBetween:
		_adag.Value = "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeTomorrow:
		_adag.Value = "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case ST_PivotFilterTypeToday:
		_adag.Value = "\u0074\u006f\u0064a\u0079"
	case ST_PivotFilterTypeYesterday:
		_adag.Value = "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case ST_PivotFilterTypeNextWeek:
		_adag.Value = "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case ST_PivotFilterTypeThisWeek:
		_adag.Value = "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case ST_PivotFilterTypeLastWeek:
		_adag.Value = "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case ST_PivotFilterTypeNextMonth:
		_adag.Value = "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case ST_PivotFilterTypeThisMonth:
		_adag.Value = "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case ST_PivotFilterTypeLastMonth:
		_adag.Value = "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case ST_PivotFilterTypeNextQuarter:
		_adag.Value = "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_PivotFilterTypeThisQuarter:
		_adag.Value = "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_PivotFilterTypeLastQuarter:
		_adag.Value = "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_PivotFilterTypeNextYear:
		_adag.Value = "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case ST_PivotFilterTypeThisYear:
		_adag.Value = "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case ST_PivotFilterTypeLastYear:
		_adag.Value = "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case ST_PivotFilterTypeYearToDate:
		_adag.Value = "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case ST_PivotFilterTypeQ1:
		_adag.Value = "\u0051\u0031"
	case ST_PivotFilterTypeQ2:
		_adag.Value = "\u0051\u0032"
	case ST_PivotFilterTypeQ3:
		_adag.Value = "\u0051\u0033"
	case ST_PivotFilterTypeQ4:
		_adag.Value = "\u0051\u0034"
	case ST_PivotFilterTypeM1:
		_adag.Value = "\u004d\u0031"
	case ST_PivotFilterTypeM2:
		_adag.Value = "\u004d\u0032"
	case ST_PivotFilterTypeM3:
		_adag.Value = "\u004d\u0033"
	case ST_PivotFilterTypeM4:
		_adag.Value = "\u004d\u0034"
	case ST_PivotFilterTypeM5:
		_adag.Value = "\u004d\u0035"
	case ST_PivotFilterTypeM6:
		_adag.Value = "\u004d\u0036"
	case ST_PivotFilterTypeM7:
		_adag.Value = "\u004d\u0037"
	case ST_PivotFilterTypeM8:
		_adag.Value = "\u004d\u0038"
	case ST_PivotFilterTypeM9:
		_adag.Value = "\u004d\u0039"
	case ST_PivotFilterTypeM10:
		_adag.Value = "\u004d\u0031\u0030"
	case ST_PivotFilterTypeM11:
		_adag.Value = "\u004d\u0031\u0031"
	case ST_PivotFilterTypeM12:
		_adag.Value = "\u004d\u0031\u0032"
	}
	return _adag, nil
}

func (_fgdga ST_Type) String() string {
	switch _fgdga {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0061\u006c\u006c"
	case 3:
		return "\u0072\u006f\u0077"
	case 4:
		return "\u0063\u006f\u006c\u0075\u006d\u006e"
	}
	return ""
}

func (_baeaea *ST_ShowDataAs) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_baeaea = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_baeaea = 1
	case "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065":
		*_baeaea = 2
	case "\u0070e\u0072\u0063\u0065\u006e\u0074":
		*_baeaea = 3
	case "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066":
		*_baeaea = 4
	case "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c":
		*_baeaea = 5
	case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077":
		*_baeaea = 6
	case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c":
		*_baeaea = 7
	case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c":
		*_baeaea = 8
	case "\u0069\u006e\u0064e\u0078":
		*_baeaea = 9
	}
	return nil
}

func NewCT_ReviewedRevisions() *CT_ReviewedRevisions {
	_fgada := &CT_ReviewedRevisions{}
	return _fgada
}

type CT_Dxfs struct {

	// Format Count
	CountAttr *uint32

	// Formatting
	Dxf []*CT_Dxf
}

func (_aaaab *CT_QueryTableField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgcfa := range start.Attr {
		if _cgcfa.Name.Local == "\u0069\u0064" {
			_bfgfe, _dgegf := _eb.ParseUint(_cgcfa.Value, 10, 32)
			if _dgegf != nil {
				return _dgegf
			}
			_aaaab.IdAttr = uint32(_bfgfe)
			continue
		}
		if _cgcfa.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fgdddg, _dfagg := _cgcfa.Value, error(nil)
			if _dfagg != nil {
				return _dfagg
			}
			_aaaab.NameAttr = &_fgdddg
			continue
		}
		if _cgcfa.Name.Local == "\u0064a\u0074\u0061\u0042\u006f\u0075\u006ed" {
			_edcde, _aaecf := _eb.ParseBool(_cgcfa.Value)
			if _aaecf != nil {
				return _aaecf
			}
			_aaaab.DataBoundAttr = &_edcde
			continue
		}
		if _cgcfa.Name.Local == "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073" {
			_dbcdb, _ddbbg := _eb.ParseBool(_cgcfa.Value)
			if _ddbbg != nil {
				return _ddbbg
			}
			_aaaab.RowNumbersAttr = &_dbcdb
			continue
		}
		if _cgcfa.Name.Local == "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_bfafc, _eacab := _eb.ParseBool(_cgcfa.Value)
			if _eacab != nil {
				return _eacab
			}
			_aaaab.FillFormulasAttr = &_bfafc
			continue
		}
		if _cgcfa.Name.Local == "\u0063l\u0069\u0070\u0070\u0065\u0064" {
			_cddad, _bccfbd := _eb.ParseBool(_cgcfa.Value)
			if _bccfbd != nil {
				return _bccfbd
			}
			_aaaab.ClippedAttr = &_cddad
			continue
		}
		if _cgcfa.Name.Local == "\u0074\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0049\u0064" {
			_gecaa, _fdgee := _eb.ParseUint(_cgcfa.Value, 10, 32)
			if _fdgee != nil {
				return _fdgee
			}
			_accffg := uint32(_gecaa)
			_aaaab.TableColumnIdAttr = &_accffg
			continue
		}
	}
_abdabg:
	for {
		_gdadg, _cfdca := d.Token()
		if _cfdca != nil {
			return _cfdca
		}
		switch _ffaef := _gdadg.(type) {
		case _b.StartElement:
			switch _ffaef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aaaab.ExtLst = NewCT_ExtensionList()
				if _baeeaf := d.DecodeElement(_aaaab.ExtLst, &_ffaef); _baeeaf != nil {
					return _baeeaf
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054a\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _ffaef.Name)
				if _gffab := d.Skip(); _gffab != nil {
					return _gffab
				}
			}
		case _b.EndElement:
			break _abdabg
		case _b.CharData:
		}
	}
	return nil
}

func (_aceage ST_TableStyleType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fffce := _b.Attr{}
	_fffce.Name = name
	switch _aceage {
	case ST_TableStyleTypeUnset:
		_fffce.Value = ""
	case ST_TableStyleTypeWholeTable:
		_fffce.Value = "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065"
	case ST_TableStyleTypeHeaderRow:
		_fffce.Value = "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw"
	case ST_TableStyleTypeTotalRow:
		_fffce.Value = "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeFirstColumn:
		_fffce.Value = "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeLastColumn:
		_fffce.Value = "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeFirstRowStripe:
		_fffce.Value = "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeSecondRowStripe:
		_fffce.Value = "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeFirstColumnStripe:
		_fffce.Value = "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeSecondColumnStripe:
		_fffce.Value = "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeFirstHeaderCell:
		_fffce.Value = "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeLastHeaderCell:
		_fffce.Value = "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeFirstTotalCell:
		_fffce.Value = "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeLastTotalCell:
		_fffce.Value = "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeFirstSubtotalColumn:
		_fffce.Value = "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeSecondSubtotalColumn:
		_fffce.Value = "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e"
	case ST_TableStyleTypeThirdSubtotalColumn:
		_fffce.Value = "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeFirstSubtotalRow:
		_fffce.Value = "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeSecondSubtotalRow:
		_fffce.Value = "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeThirdSubtotalRow:
		_fffce.Value = "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeBlankRow:
		_fffce.Value = "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077"
	case ST_TableStyleTypeFirstColumnSubheading:
		_fffce.Value = "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeSecondColumnSubheading:
		_fffce.Value = "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067"
	case ST_TableStyleTypeThirdColumnSubheading:
		_fffce.Value = "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeFirstRowSubheading:
		_fffce.Value = "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeSecondRowSubheading:
		_fffce.Value = "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeThirdRowSubheading:
		_fffce.Value = "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypePageFieldLabels:
		_fffce.Value = "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073"
	case ST_TableStyleTypePageFieldValues:
		_fffce.Value = "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return _fffce, nil
}

func NewCT_Location() *CT_Location { _bfea := &CT_Location{}; return _bfea }

func (_ddgfad ST_CfvoType) String() string {
	switch _ddgfad {
	case 0:
		return ""
	case 1:
		return "\u006e\u0075\u006d"
	case 2:
		return "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case 3:
		return "\u006d\u0061\u0078"
	case 4:
		return "\u006d\u0069\u006e"
	case 5:
		return "\u0066o\u0072\u006d\u0075\u006c\u0061"
	case 6:
		return "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065"
	}
	return ""
}

func (_abfgg *CT_Members) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edaf := range start.Attr {
		if _edaf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dfcbgb, _cgfdb := _eb.ParseUint(_edaf.Value, 10, 32)
			if _cgfdb != nil {
				return _cgfdb
			}
			_febfce := uint32(_dfcbgb)
			_abfgg.CountAttr = &_febfce
			continue
		}
		if _edaf.Name.Local == "\u006c\u0065\u0076e\u006c" {
			_ebdfd, _gadgf := _eb.ParseUint(_edaf.Value, 10, 32)
			if _gadgf != nil {
				return _gadgf
			}
			_dbeed := uint32(_ebdfd)
			_abfgg.LevelAttr = &_dbeed
			continue
		}
	}
_bbdadd:
	for {
		_addeb, _bcgbg := d.Token()
		if _bcgbg != nil {
			return _bcgbg
		}
		switch _fecdd := _addeb.(type) {
		case _b.StartElement:
			switch _fecdd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u006d\u0062\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u006d\u0062\u0065\u0072"}:
				_bgdda := NewCT_Member()
				if _aabe := d.DecodeElement(_bgdda, &_fecdd); _aabe != nil {
					return _aabe
				}
				_abfgg.Member = append(_abfgg.Member, _bgdda)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fM\u0065\u006d\u0062\u0065\u0072\u0073\u0020\u0025\u0076", _fecdd.Name)
				if _fdgce := d.Skip(); _fdgce != nil {
					return _fdgce
				}
			}
		case _b.EndElement:
			break _bbdadd
		case _b.CharData:
		}
	}
	return nil
}

func (_cbgdf *CT_TableParts) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbgdf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_cbgdf.CountAttr)})
	}
	e.EncodeToken(start)
	if _cbgdf.TablePart != nil {
		_aebgda := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003at\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074"}}
		for _, _fbcbdb := range _cbgdf.TablePart {
			e.EncodeElement(_fbcbdb, _aebgda)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fdafcd *CT_MeasureGroups) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fdafcd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_fdafcd.CountAttr)})
	}
	e.EncodeToken(start)
	if _fdafcd.MeasureGroup != nil {
		_ffgf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003am\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}}
		for _, _effdd := range _fdafcd.MeasureGroup {
			e.EncodeElement(_effdd, _ffgf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_GradientFill() *CT_GradientFill { _adab := &CT_GradientFill{}; return _adab }

// Validate validates the CT_Control and its children
func (_bgef *CT_Control) Validate() error {
	return _bgef.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c")
}

type CT_RevisionRowColumn struct {

	// Sheet Id
	SIdAttr uint32

	// End Of List
	EolAttr *bool

	// Reference
	RefAttr string

	// User Action
	ActionAttr ST_rwColActionType

	// Edge Deleted
	EdgeAttr *bool

	// Undo
	Undo []*CT_UndoInfo

	// Revised Row Column
	Rcc []*CT_RevisionCellChange

	// Revision Format
	Rfmt    []*CT_RevisionFormatting
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}

// Validate validates the CT_SheetViews and its children
func (_ecdaf *CT_SheetViews) Validate() error {
	return _ecdaf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073")
}

func (_ddeef ST_FileType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gcbdae := _b.Attr{}
	_gcbdae.Name = name
	switch _ddeef {
	case ST_FileTypeUnset:
		_gcbdae.Value = ""
	case ST_FileTypeMac:
		_gcbdae.Value = "\u006d\u0061\u0063"
	case ST_FileTypeWin:
		_gcbdae.Value = "\u0077\u0069\u006e"
	case ST_FileTypeDos:
		_gcbdae.Value = "\u0064\u006f\u0073"
	case ST_FileTypeLin:
		_gcbdae.Value = "\u006c\u0069\u006e"
	case ST_FileTypeOther:
		_gcbdae.Value = "\u006f\u0074\u0068e\u0072"
	}
	return _gcbdae, nil
}

// ValidateWithPath validates the CT_MetadataType and its children, prefixing error messages with path
func (_eedee *CT_MetadataType) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_Dxf and its children, prefixing error messages with path
func (_ffgee *CT_Dxf) ValidateWithPath(path string) error {
	if _ffgee.Font != nil {
		if _cgecg := _ffgee.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _cgecg != nil {
			return _cgecg
		}
	}
	if _ffgee.NumFmt != nil {
		if _ceebd := _ffgee.NumFmt.ValidateWithPath(path + "\u002fN\u0075\u006d\u0046\u006d\u0074"); _ceebd != nil {
			return _ceebd
		}
	}
	if _ffgee.Fill != nil {
		if _ecfage := _ffgee.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _ecfage != nil {
			return _ecfage
		}
	}
	if _ffgee.Alignment != nil {
		if _cbfbe := _ffgee.Alignment.ValidateWithPath(path + "\u002f\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"); _cbfbe != nil {
			return _cbfbe
		}
	}
	if _ffgee.Border != nil {
		if _bcddf := _ffgee.Border.ValidateWithPath(path + "\u002fB\u006f\u0072\u0064\u0065\u0072"); _bcddf != nil {
			return _bcddf
		}
	}
	if _ffgee.Protection != nil {
		if _effaf := _ffgee.Protection.ValidateWithPath(path + "/\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _effaf != nil {
			return _effaf
		}
	}
	if _ffgee.ExtLst != nil {
		if _ccffc := _ffgee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ccffc != nil {
			return _ccffc
		}
	}
	return nil
}

func (_gfcgf *CT_Stylesheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gdagb:
	for {
		_eafdec, _cfcag := d.Token()
		if _cfcag != nil {
			return _cfcag
		}
		switch _bbffbg := _eafdec.(type) {
		case _b.StartElement:
			switch _bbffbg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}:
				_gfcgf.NumFmts = NewCT_NumFmts()
				if _gabdcb := d.DecodeElement(_gfcgf.NumFmts, &_bbffbg); _gabdcb != nil {
					return _gabdcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}:
				_gfcgf.Fonts = NewCT_Fonts()
				if _daaca := d.DecodeElement(_gfcgf.Fonts, &_bbffbg); _daaca != nil {
					return _daaca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}:
				_gfcgf.Fills = NewCT_Fills()
				if _bfbee := d.DecodeElement(_gfcgf.Fills, &_bbffbg); _bfbee != nil {
					return _bfbee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}:
				_gfcgf.Borders = NewCT_Borders()
				if _afgac := d.DecodeElement(_gfcgf.Borders, &_bbffbg); _afgac != nil {
					return _afgac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}:
				_gfcgf.CellStyleXfs = NewCT_CellStyleXfs()
				if _baceb := d.DecodeElement(_gfcgf.CellStyleXfs, &_bbffbg); _baceb != nil {
					return _baceb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}:
				_gfcgf.CellXfs = NewCT_CellXfs()
				if _effcd := d.DecodeElement(_gfcgf.CellXfs, &_bbffbg); _effcd != nil {
					return _effcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_gfcgf.CellStyles = NewCT_CellStyles()
				if _fgecf := d.DecodeElement(_gfcgf.CellStyles, &_bbffbg); _fgecf != nil {
					return _fgecf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}:
				_gfcgf.Dxfs = NewCT_Dxfs()
				if _egdfbb := d.DecodeElement(_gfcgf.Dxfs, &_bbffbg); _egdfbb != nil {
					return _egdfbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_gfcgf.TableStyles = NewCT_TableStyles()
				if _eecfab := d.DecodeElement(_gfcgf.TableStyles, &_bbffbg); _eecfab != nil {
					return _eecfab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}:
				_gfcgf.Colors = NewCT_Colors()
				if _bdfff := d.DecodeElement(_gfcgf.Colors, &_bbffbg); _bdfff != nil {
					return _bdfff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfcgf.ExtLst = NewCT_ExtensionList()
				if _fggfc := d.DecodeElement(_gfcgf.ExtLst, &_bbffbg); _fggfc != nil {
					return _fggfc
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053t\u0079\u006c\u0065\u0073\u0068\u0065\u0065\u0074 \u0025\u0076", _bbffbg.Name)
				if _ebfbab := d.Skip(); _ebfbab != nil {
					return _ebfbab
				}
			}
		case _b.EndElement:
			break _gdagb
		case _b.CharData:
		}
	}
	return nil
}

type CT_CellAlignment struct {

	// Horizontal Alignment
	HorizontalAttr ST_HorizontalAlignment

	// Vertical Alignment
	VerticalAttr ST_VerticalAlignment

	// Text Rotation
	TextRotationAttr *uint8

	// Wrap Text
	WrapTextAttr *bool

	// Indent
	IndentAttr *uint32

	// Relative Indent
	RelativeIndentAttr *int32

	// Justify Last Line
	JustifyLastLineAttr *bool

	// Shrink To Fit
	ShrinkToFitAttr *bool

	// Reading Order
	ReadingOrderAttr *uint32
}

func (_bcgcfd ST_DataConsolidateFunction) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bcgcfd.String(), start)
}

type CT_TableParts struct {

	// Count
	CountAttr *uint32

	// Table Part
	TablePart []*CT_TablePart
}

// Validate validates the AG_RevData and its children
func (_gd *AG_RevData) Validate() error {
	return _gd.ValidateWithPath("\u0041\u0047\u005f\u0052\u0065\u0076\u0044\u0061\u0074\u0061")
}

func (_fbgff *CT_SortState) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fbgff.ColumnSortAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006c\u0075\u006d\u006e\u0053\u006f\u0072\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fbgff.ColumnSortAttr))})
	}
	if _fbgff.CaseSensitiveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061\u0073\u0065\u0053\u0065\u006e\u0073\u0069\u0074\u0069\u0076\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fbgff.CaseSensitiveAttr))})
	}
	if _fbgff.SortMethodAttr != ST_SortMethodUnset {
		_dcgfa, _cedbc := _fbgff.SortMethodAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u006f\u0072\u0074\u004d\u0065\u0074\u0068\u006f\u0064"})
		if _cedbc != nil {
			return _cedbc
		}
		start.Attr = append(start.Attr, _dcgfa)
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", _fbgff.RefAttr)})
	e.EncodeToken(start)
	if _fbgff.SortCondition != nil {
		_bgddag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u006f\u0072t\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e"}}
		for _, _cgaga := range _fbgff.SortCondition {
			e.EncodeElement(_cgaga, _bgddag)
		}
	}
	if _fbgff.ExtLst != nil {
		_cbgf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fbgff.ExtLst, _cbgf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_VolType struct {

	// Type
	TypeAttr ST_VolDepType

	// Main
	Main []*CT_VolMain
}

func NewCT_HeaderFooter() *CT_HeaderFooter { _dgfb := &CT_HeaderFooter{}; return _dgfb }

// Validate validates the CT_QueryTableField and its children
func (_gegea *CT_QueryTableField) Validate() error {
	return _gegea.ValidateWithPath("\u0043T\u005fQ\u0075\u0065\u0072\u0079\u0054a\u0062\u006ce\u0046\u0069\u0065\u006c\u0064")
}

func (_faacee ST_IconSetType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cafbec := _b.Attr{}
	_cafbec.Name = name
	switch _faacee {
	case ST_IconSetTypeUnset:
		_cafbec.Value = ""
	case ST_IconSetType3Arrows:
		_cafbec.Value = "\u0033A\u0072\u0072\u006f\u0077\u0073"
	case ST_IconSetType3ArrowsGray:
		_cafbec.Value = "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case ST_IconSetType3Flags:
		_cafbec.Value = "\u0033\u0046\u006c\u0061\u0067\u0073"
	case ST_IconSetType3TrafficLights1:
		_cafbec.Value = "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031"
	case ST_IconSetType3TrafficLights2:
		_cafbec.Value = "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032"
	case ST_IconSetType3Signs:
		_cafbec.Value = "\u0033\u0053\u0069\u0067\u006e\u0073"
	case ST_IconSetType3Symbols:
		_cafbec.Value = "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073"
	case ST_IconSetType3Symbols2:
		_cafbec.Value = "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732"
	case ST_IconSetType4Arrows:
		_cafbec.Value = "\u0034A\u0072\u0072\u006f\u0077\u0073"
	case ST_IconSetType4ArrowsGray:
		_cafbec.Value = "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case ST_IconSetType4RedToBlack:
		_cafbec.Value = "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b"
	case ST_IconSetType4Rating:
		_cafbec.Value = "\u0034R\u0061\u0074\u0069\u006e\u0067"
	case ST_IconSetType4TrafficLights:
		_cafbec.Value = "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073"
	case ST_IconSetType5Arrows:
		_cafbec.Value = "\u0035A\u0072\u0072\u006f\u0077\u0073"
	case ST_IconSetType5ArrowsGray:
		_cafbec.Value = "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case ST_IconSetType5Rating:
		_cafbec.Value = "\u0035R\u0061\u0074\u0069\u006e\u0067"
	case ST_IconSetType5Quarters:
		_cafbec.Value = "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s"
	}
	return _cafbec, nil
}

type CT_DefinedName struct {
	NameAttr              string
	CommentAttr           *string
	CustomMenuAttr        *string
	DescriptionAttr       *string
	HelpAttr              *string
	StatusBarAttr         *string
	LocalSheetIdAttr      *uint32
	HiddenAttr            *bool
	FunctionAttr          *bool
	VbProcedureAttr       *bool
	XlmAttr               *bool
	FunctionGroupIdAttr   *uint32
	ShortcutKeyAttr       *string
	PublishToServerAttr   *bool
	WorkbookParameterAttr *bool
	Content               string
}

// Validate validates the CT_PivotCacheDefinition and its children
func (_ceggbe *CT_PivotCacheDefinition) Validate() error {
	return _ceggbe.ValidateWithPath("\u0043\u0054\u005fPi\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e")
}

type CT_DataBinding struct {

	// Unique Identifer
	DataBindingNameAttr *string

	// Binding to External File
	FileBindingAttr *bool

	// Reference to Connection ID
	ConnectionIDAttr *uint32

	// File Binding Name
	FileBindingNameAttr *string

	// XML Data Loading Behavior
	DataBindingLoadModeAttr uint32
	Any                     _f.Any
}

// ValidateWithPath validates the CT_RevisionSheetRename and its children, prefixing error messages with path
func (_bdfaf *CT_RevisionSheetRename) ValidateWithPath(path string) error {
	if _bdfaf.ExtLst != nil {
		if _ecafc := _bdfaf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ecafc != nil {
			return _ecafc
		}
	}
	return nil
}

func (_bcbbfc *CT_OlapPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bcbbfc.LocalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063a\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bcbbfc.LocalAttr))})
	}
	if _bcbbfc.LocalConnectionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006co\u0063a\u006c\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_bcbbfc.LocalConnectionAttr)})
	}
	if _bcbbfc.LocalRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063a\u006c\u0052\u0065\u0066\u0072\u0065\u0073\u0068"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bcbbfc.LocalRefreshAttr))})
	}
	if _bcbbfc.SendLocaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u006e\u0064\u004c\u006f\u0063\u0061\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bcbbfc.SendLocaleAttr))})
	}
	if _bcbbfc.RowDrillCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0077\u0044\u0072\u0069\u006c\u006c\u0043\u006f\u0075\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_bcbbfc.RowDrillCountAttr)})
	}
	if _bcbbfc.ServerFillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bcbbfc.ServerFillAttr))})
	}
	if _bcbbfc.ServerNumberFormatAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073e\u0072v\u0065\u0072\u004e\u0075\u006db\u0065\u0072F\u006f\u0072\u006d\u0061\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bcbbfc.ServerNumberFormatAttr))})
	}
	if _bcbbfc.ServerFontAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bcbbfc.ServerFontAttr))})
	}
	if _bcbbfc.ServerFontColorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073e\u0072v\u0065\u0072\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006f\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bcbbfc.ServerFontColorAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fgegbb ST_Objects) Validate() error { return _fgegbb.ValidateWithPath("") }

// ValidateWithPath validates the CT_CustomSheetViews and its children, prefixing error messages with path
func (_faaca *CT_CustomSheetViews) ValidateWithPath(path string) error {
	for _dcada, _eebg := range _faaca.CustomSheetView {
		if _cccg := _eebg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u005b\u0025d\u005d", path, _dcada)); _cccg != nil {
			return _cccg
		}
	}
	return nil
}

// Validate validates the CT_Chartsheet and its children
func (_edfc *CT_Chartsheet) Validate() error {
	return _edfc.ValidateWithPath("\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074")
}

func (_efabc *CT_Dialogsheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _efabc.SheetPr != nil {
		_gfeg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_efabc.SheetPr, _gfeg)
	}
	if _efabc.SheetViews != nil {
		_gbfb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_efabc.SheetViews, _gbfb)
	}
	if _efabc.SheetFormatPr != nil {
		_ccbdd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}}
		e.EncodeElement(_efabc.SheetFormatPr, _ccbdd)
	}
	if _efabc.SheetProtection != nil {
		_bead := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_efabc.SheetProtection, _bead)
	}
	if _efabc.CustomSheetViews != nil {
		_fbff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_efabc.CustomSheetViews, _fbff)
	}
	if _efabc.PrintOptions != nil {
		_dfega := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_efabc.PrintOptions, _dfega)
	}
	if _efabc.PageMargins != nil {
		_gccfe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_efabc.PageMargins, _gccfe)
	}
	if _efabc.PageSetup != nil {
		_dbff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_efabc.PageSetup, _dbff)
	}
	if _efabc.HeaderFooter != nil {
		_bafd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_efabc.HeaderFooter, _bafd)
	}
	if _efabc.Drawing != nil {
		_dddc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_efabc.Drawing, _dddc)
	}
	if _efabc.LegacyDrawing != nil {
		_geda := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_efabc.LegacyDrawing, _geda)
	}
	if _efabc.LegacyDrawingHF != nil {
		_gfdeg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_efabc.LegacyDrawingHF, _gfdeg)
	}
	if _efabc.DrawingHF != nil {
		_gccfff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_efabc.DrawingHF, _gccfff)
	}
	if _efabc.OleObjects != nil {
		_eececf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_efabc.OleObjects, _eececf)
	}
	if _efabc.Controls != nil {
		_abbbd := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}}
		e.EncodeElement(_efabc.Controls, _abbbd)
	}
	if _efabc.ExtLst != nil {
		_ccfg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_efabc.ExtLst, _ccfg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_MergeCells and its children, prefixing error messages with path
func (_efbce *CT_MergeCells) ValidateWithPath(path string) error {
	for _cabfc, _bgadc := range _efbce.MergeCell {
		if _eagef := _bgadc.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u004d\u0065\u0072g\u0065\u0043\u0065\u006c\u006c\u005b\u0025\u0064\u005d", path, _cabfc)); _eagef != nil {
			return _eagef
		}
	}
	return nil
}

func (_cafeb ST_Visibility) Validate() error { return _cafeb.ValidateWithPath("") }

func NewCT_Connection() *CT_Connection { _acdd := &CT_Connection{}; return _acdd }

func (_addbbd ST_PhoneticAlignment) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cbacdg := _b.Attr{}
	_cbacdg.Name = name
	switch _addbbd {
	case ST_PhoneticAlignmentUnset:
		_cbacdg.Value = ""
	case ST_PhoneticAlignmentNoControl:
		_cbacdg.Value = "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case ST_PhoneticAlignmentLeft:
		_cbacdg.Value = "\u006c\u0065\u0066\u0074"
	case ST_PhoneticAlignmentCenter:
		_cbacdg.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_PhoneticAlignmentDistributed:
		_cbacdg.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _cbacdg, nil
}

func NewCT_ConditionalFormats() *CT_ConditionalFormats {
	_fcdfg := &CT_ConditionalFormats{}
	return _fcdfg
}

// ValidateWithPath validates the CT_SingleXmlCells and its children, prefixing error messages with path
func (_aafab *CT_SingleXmlCells) ValidateWithPath(path string) error {
	for _afegc, _cfgcg := range _aafab.SingleXmlCell {
		if _cbcbef := _cfgcg.ValidateWithPath(_ec.Sprintf("%\u0073/\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006dl\u0043\u0065\u006c\u006c[%\u0064\u005d", path, _afegc)); _cbcbef != nil {
			return _cbcbef
		}
	}
	return nil
}

func (_aebba *CT_MdxKPI) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e"}, Value: _ec.Sprintf("\u0025\u0076", _aebba.NAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0070"}, Value: _ec.Sprintf("\u0025\u0076", _aebba.NpAttr)})
	_fggca, _fbbce := _aebba.PAttr.MarshalXMLAttr(_b.Name{Local: "\u0070"})
	if _fbbce != nil {
		return _fbbce
	}
	start.Attr = append(start.Attr, _fggca)
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_QueryTableFields struct {

	// Column Count
	CountAttr *uint32

	// QueryTable Field
	QueryTableField []*CT_QueryTableField
}

type CT_SheetData struct {

	// Row
	Row []*CT_Row
}

// ValidateWithPath validates the CT_MdxSet and its children, prefixing error messages with path
func (_ggacd *CT_MdxSet) ValidateWithPath(path string) error {
	if _beagf := _ggacd.OAttr.ValidateWithPath(path + "\u002f\u004f\u0041\u0074\u0074\u0072"); _beagf != nil {
		return _beagf
	}
	for _gbedf, _defgac := range _ggacd.N {
		if _ebggb := _defgac.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _gbedf)); _ebggb != nil {
			return _ebggb
		}
	}
	return nil
}

func (_ebadb *CT_SmartTags) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bfebf:
	for {
		_egfa, _ddffb := d.Token()
		if _ddffb != nil {
			return _ddffb
		}
		switch _fcffg := _egfa.(type) {
		case _b.StartElement:
			switch _fcffg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}:
				_bdfag := NewCT_CellSmartTags()
				if _baabbb := d.DecodeElement(_bdfag, &_fcffg); _baabbb != nil {
					return _baabbb
				}
				_ebadb.CellSmartTags = append(_ebadb.CellSmartTags, _bdfag)
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u006d\u0061r\u0074\u0054\u0061\u0067\u0073\u0020\u0025\u0076", _fcffg.Name)
				if _ccbac := d.Skip(); _ccbac != nil {
					return _ccbac
				}
			}
		case _b.EndElement:
			break _bfebf
		case _b.CharData:
		}
	}
	return nil
}

func (_degcea ST_DdeValueType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_degcea.String(), start)
}

type CT_BookViews struct {

	// Workbook View
	WorkbookView []*CT_BookView
}

type CT_IgnoredError struct {

	// Sequence of References
	SqrefAttr ST_Sqref

	// Evaluation Error
	EvalErrorAttr *bool

	// Two Digit Text Year
	TwoDigitTextYearAttr *bool

	// Number Stored As Text
	NumberStoredAsTextAttr *bool

	// Formula
	FormulaAttr *bool

	// Formula Range
	FormulaRangeAttr *bool

	// Unlocked Formula
	UnlockedFormulaAttr *bool

	// Empty Cell Reference
	EmptyCellReferenceAttr *bool

	// List Data Validation
	ListDataValidationAttr *bool

	// Calculated Column
	CalculatedColumnAttr *bool
}

func (_fcbfb ST_PhoneticType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cbdab := _b.Attr{}
	_cbdab.Name = name
	switch _fcbfb {
	case ST_PhoneticTypeUnset:
		_cbdab.Value = ""
	case ST_PhoneticTypeHalfwidthKatakana:
		_cbdab.Value = "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case ST_PhoneticTypeFullwidthKatakana:
		_cbdab.Value = "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case ST_PhoneticTypeHiragana:
		_cbdab.Value = "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case ST_PhoneticTypeNoConversion:
		_cbdab.Value = "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e"
	}
	return _cbdab, nil
}

// ValidateWithPath validates the CT_PageSetUpPr and its children, prefixing error messages with path
func (_dccadc *CT_PageSetUpPr) ValidateWithPath(path string) error { return nil }

func (_afffce *ST_FileType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_afffce = 0
	case "\u006d\u0061\u0063":
		*_afffce = 1
	case "\u0077\u0069\u006e":
		*_afffce = 2
	case "\u0064\u006f\u0073":
		*_afffce = 3
	case "\u006c\u0069\u006e":
		*_afffce = 4
	case "\u006f\u0074\u0068e\u0072":
		*_afffce = 5
	}
	return nil
}

func (_cfegb *CT_RevisionHeader) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _cfegb.GuidAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _cfegb.DateTimeAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _cfegb.MaxSheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _cfegb.UserNameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _cfegb.IdAttr)})
	if _cfegb.MinRIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0052\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_cfegb.MinRIdAttr)})
	}
	if _cfegb.MaxRIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078\u0052\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_cfegb.MaxRIdAttr)})
	}
	e.EncodeToken(start)
	_bedfe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"}}
	e.EncodeElement(_cfegb.SheetIdMap, _bedfe)
	if _cfegb.ReviewedList != nil {
		_cbbdc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ar\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"}}
		e.EncodeElement(_cfegb.ReviewedList, _cbbdc)
	}
	if _cfegb.ExtLst != nil {
		_abefac := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cfegb.ExtLst, _abefac)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_FieldsUsage and its children
func (_bebed *CT_FieldsUsage) Validate() error {
	return _bebed.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0073U\u0073\u0061\u0067\u0065")
}

func (_feae *CT_CalcChain) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cgde:
	for {
		_ecbf, _afad := d.Token()
		if _afad != nil {
			return _afad
		}
		switch _caf := _ecbf.(type) {
		case _b.StartElement:
			switch _caf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}:
				_gbfc := NewCT_CalcCell()
				if _fccb := d.DecodeElement(_gbfc, &_caf); _fccb != nil {
					return _fccb
				}
				_feae.C = append(_feae.C, _gbfc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_feae.ExtLst = NewCT_ExtensionList()
				if _gdgd := d.DecodeElement(_feae.ExtLst, &_caf); _gdgd != nil {
					return _gdgd
				}
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u0061\u006cc\u0043\u0068\u0061\u0069\u006e\u0020\u0025\u0076", _caf.Name)
				if _abdg := d.Skip(); _abdg != nil {
					return _abdg
				}
			}
		case _b.EndElement:
			break _cgde
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Field and its children
func (_bbecb *CT_Field) Validate() error {
	return _bbecb.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064")
}

func (_fdecdc *ST_FormatAction) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gfbgbg, _dbffd := d.Token()
	if _dbffd != nil {
		return _dbffd
	}
	if _gffefe, _bgeffe := _gfbgbg.(_b.EndElement); _bgeffe && _gffefe.Name == start.Name {
		*_fdecdc = 1
		return nil
	}
	if _caebcc, _beagfa := _gfbgbg.(_b.CharData); !_beagfa {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gfbgbg)
	} else {
		switch string(_caebcc) {
		case "":
			*_fdecdc = 0
		case "\u0062\u006c\u0061n\u006b":
			*_fdecdc = 1
		case "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067":
			*_fdecdc = 2
		case "\u0064\u0072\u0069l\u006c":
			*_fdecdc = 3
		case "\u0066o\u0072\u006d\u0075\u006c\u0061":
			*_fdecdc = 4
		}
	}
	_gfbgbg, _dbffd = d.Token()
	if _dbffd != nil {
		return _dbffd
	}
	if _fgagdb, _egbgc := _gfbgbg.(_b.EndElement); _egbgc && _fgagdb.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gfbgbg)
}

// ValidateWithPath validates the CT_SmartTags and its children, prefixing error messages with path
func (_fdafcc *CT_SmartTags) ValidateWithPath(path string) error {
	for _ffbdc, _dddgfg := range _fdafcc.CellSmartTags {
		if _bbgcd := _dddgfg.ValidateWithPath(_ec.Sprintf("%\u0073/\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072t\u0054\u0061\u0067\u0073[%\u0064\u005d", path, _ffbdc)); _bbgcd != nil {
			return _bbgcd
		}
	}
	return nil
}

func NewCT_SheetProtection() *CT_SheetProtection { _accaf := &CT_SheetProtection{}; return _accaf }

func (_afd *CT_BookView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dff := range start.Attr {
		if _dff.Name.Local == "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068" {
			_gcgc, _fbc := _eb.ParseUint(_dff.Value, 10, 32)
			if _fbc != nil {
				return _fbc
			}
			_adf := uint32(_gcgc)
			_afd.WindowWidthAttr = &_adf
			continue
		}
		if _dff.Name.Local == "\u0076\u0069\u0073\u0069\u0062\u0069\u006c\u0069\u0074\u0079" {
			_afd.VisibilityAttr.UnmarshalXMLAttr(_dff)
			continue
		}
		if _dff.Name.Local == "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c" {
			_fbga, _gag := _eb.ParseBool(_dff.Value)
			if _gag != nil {
				return _gag
			}
			_afd.ShowHorizontalScrollAttr = &_fbga
			continue
		}
		if _dff.Name.Local == "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c" {
			_fbd, _bee := _eb.ParseBool(_dff.Value)
			if _bee != nil {
				return _bee
			}
			_afd.ShowVerticalScrollAttr = &_fbd
			continue
		}
		if _dff.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073" {
			_edgb, _cbf := _eb.ParseBool(_dff.Value)
			if _cbf != nil {
				return _cbf
			}
			_afd.ShowSheetTabsAttr = &_edgb
			continue
		}
		if _dff.Name.Local == "\u0078W\u0069\u006e\u0064\u006f\u0077" {
			_fdc, _gca := _eb.ParseInt(_dff.Value, 10, 32)
			if _gca != nil {
				return _gca
			}
			_def := int32(_fdc)
			_afd.XWindowAttr = &_def
			continue
		}
		if _dff.Name.Local == "\u0079W\u0069\u006e\u0064\u006f\u0077" {
			_dac, _cgf := _eb.ParseInt(_dff.Value, 10, 32)
			if _cgf != nil {
				return _cgf
			}
			_bc := int32(_dac)
			_afd.YWindowAttr = &_bc
			continue
		}
		if _dff.Name.Local == "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d" {
			_aea, _fdf := _eb.ParseBool(_dff.Value)
			if _fdf != nil {
				return _fdf
			}
			_afd.MinimizedAttr = &_aea
			continue
		}
		if _dff.Name.Local == "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074" {
			_fdd, _gbc := _eb.ParseUint(_dff.Value, 10, 32)
			if _gbc != nil {
				return _gbc
			}
			_ddec := uint32(_fdd)
			_afd.WindowHeightAttr = &_ddec
			continue
		}
		if _dff.Name.Local == "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f" {
			_fdb, _cea := _eb.ParseUint(_dff.Value, 10, 32)
			if _cea != nil {
				return _cea
			}
			_ba := uint32(_fdb)
			_afd.TabRatioAttr = &_ba
			continue
		}
		if _dff.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0053\u0068\u0065\u0065\u0074" {
			_bfd, _dad := _eb.ParseUint(_dff.Value, 10, 32)
			if _dad != nil {
				return _dad
			}
			_fddf := uint32(_bfd)
			_afd.FirstSheetAttr = &_fddf
			continue
		}
		if _dff.Name.Local == "\u0061c\u0074\u0069\u0076\u0065\u0054\u0061b" {
			_dbcg, _ac := _eb.ParseUint(_dff.Value, 10, 32)
			if _ac != nil {
				return _ac
			}
			_abg := uint32(_dbcg)
			_afd.ActiveTabAttr = &_abg
			continue
		}
		if _dff.Name.Local == "\u0061\u0075\u0074\u006fFi\u006c\u0074\u0065\u0072\u0044\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0069n\u0067" {
			_cccf, _aff := _eb.ParseBool(_dff.Value)
			if _aff != nil {
				return _aff
			}
			_afd.AutoFilterDateGroupingAttr = &_cccf
			continue
		}
	}
_ggd:
	for {
		_gfc, _abc := d.Token()
		if _abc != nil {
			return _abc
		}
		switch _bgg := _gfc.(type) {
		case _b.StartElement:
			switch _bgg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afd.ExtLst = NewCT_ExtensionList()
				if _gdf := d.DecodeElement(_afd.ExtLst, &_bgg); _gdf != nil {
					return _gdf
				}
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _bgg.Name)
				if _ade := d.Skip(); _ade != nil {
					return _ade
				}
			}
		case _b.EndElement:
			break _ggd
		case _b.CharData:
		}
	}
	return nil
}

type CT_DataValidations struct {

	// Disable Prompts
	DisablePromptsAttr *bool

	// Top Left Corner (X Coodrinate)
	XWindowAttr *uint32

	// Top Left Corner (Y Coordinate)
	YWindowAttr *uint32

	// Data Validation Item Count
	CountAttr *uint32

	// Data Validation
	DataValidation []*CT_DataValidation
}

func (_bbcfc *CT_MeasureDimensionMap) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _agecd := range start.Attr {
		if _agecd.Name.Local == "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070" {
			_gaccd, _ebaag := _eb.ParseUint(_agecd.Value, 10, 32)
			if _ebaag != nil {
				return _ebaag
			}
			_gadgg := uint32(_gaccd)
			_bbcfc.MeasureGroupAttr = &_gadgg
			continue
		}
		if _agecd.Name.Local == "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn" {
			_gbdb, _bdceg := _eb.ParseUint(_agecd.Value, 10, 32)
			if _bdceg != nil {
				return _bdceg
			}
			_dddf := uint32(_gbdb)
			_bbcfc.DimensionAttr = &_dddf
			continue
		}
	}
	for {
		_gbgdb, _aebac := d.Token()
		if _aebac != nil {
			return _ec.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u0061s\u0075r\u0065D\u0069m\u0065\u006e\u0073\u0069\u006f\u006e\u004d\u0061\u0070\u003a\u0020\u0025\u0073", _aebac)
		}
		if _dgge, _efdfg := _gbgdb.(_b.EndElement); _efdfg && _dgge.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_PageSetup struct {

	// Paper Size
	PaperSizeAttr *uint32

	// Paper Height
	PaperHeightAttr *string

	// Paper Width
	PaperWidthAttr *string

	// Print Scale
	ScaleAttr *uint32

	// First Page Number
	FirstPageNumberAttr *uint32

	// Fit To Width
	FitToWidthAttr *uint32

	// Fit To Height
	FitToHeightAttr *uint32

	// Page Order
	PageOrderAttr ST_PageOrder

	// Orientation
	OrientationAttr ST_Orientation

	// Use Printer Defaults
	UsePrinterDefaultsAttr *bool

	// Black And White
	BlackAndWhiteAttr *bool

	// Draft
	DraftAttr *bool

	// Print Cell Comments
	CellCommentsAttr ST_CellComments

	// Use First Page Number
	UseFirstPageNumberAttr *bool

	// Print Error Handling
	ErrorsAttr ST_PrintError

	// Horizontal DPI
	HorizontalDpiAttr *uint32

	// Vertical DPI
	VerticalDpiAttr *uint32

	// Number Of Copies
	CopiesAttr *uint32
	IdAttr     *string
}

func (_geaacb *CT_Scenario) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gedcg := range start.Attr {
		if _gedcg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_efbdc, _gdeec := _gedcg.Value, error(nil)
			if _gdeec != nil {
				return _gdeec
			}
			_geaacb.NameAttr = _efbdc
			continue
		}
		if _gedcg.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_befeb, _bgcgf := _eb.ParseBool(_gedcg.Value)
			if _bgcgf != nil {
				return _bgcgf
			}
			_geaacb.LockedAttr = &_befeb
			continue
		}
		if _gedcg.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_dcgfe, _cbcbe := _eb.ParseBool(_gedcg.Value)
			if _cbcbe != nil {
				return _cbcbe
			}
			_geaacb.HiddenAttr = &_dcgfe
			continue
		}
		if _gedcg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eaffa, _fdffa := _eb.ParseUint(_gedcg.Value, 10, 32)
			if _fdffa != nil {
				return _fdffa
			}
			_acdfd := uint32(_eaffa)
			_geaacb.CountAttr = &_acdfd
			continue
		}
		if _gedcg.Name.Local == "\u0075\u0073\u0065\u0072" {
			_gfggc, _dabdg := _gedcg.Value, error(nil)
			if _dabdg != nil {
				return _dabdg
			}
			_geaacb.UserAttr = &_gfggc
			continue
		}
		if _gedcg.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_cfffd, _efgcb := _gedcg.Value, error(nil)
			if _efgcb != nil {
				return _efgcb
			}
			_geaacb.CommentAttr = &_cfffd
			continue
		}
	}
_bfbca:
	for {
		_fbgaea, _egcfd := d.Token()
		if _egcfd != nil {
			return _egcfd
		}
		switch _cgcfg := _fbgaea.(type) {
		case _b.StartElement:
			switch _cgcfg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073"}:
				_acdadd := NewCT_InputCells()
				if _cafbe := d.DecodeElement(_acdadd, &_cgcfg); _cafbe != nil {
					return _cafbe
				}
				_geaacb.InputCells = append(_geaacb.InputCells, _acdadd)
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0020\u0025\u0076", _cgcfg.Name)
				if _adddba := d.Skip(); _adddba != nil {
					return _adddba
				}
			}
		case _b.EndElement:
			break _bfbca
		case _b.CharData:
		}
	}
	return nil
}

func (_gccgbd *ST_FilterOperator) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gccgbd = 0
	case "\u0065\u0071\u0075a\u006c":
		*_gccgbd = 1
	case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_gccgbd = 2
	case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_gccgbd = 3
	case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_gccgbd = 4
	case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
		*_gccgbd = 5
	case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_gccgbd = 6
	}
	return nil
}

type CT_RowHierarchiesUsage struct {

	// Item Count
	CountAttr *uint32

	// Row OLAP Hierarchies
	RowHierarchyUsage []*CT_HierarchyUsage
}

func (_dgba *CT_CacheField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _dgba.NameAttr)})
	if _dgba.CaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_dgba.CaptionAttr)})
	}
	if _dgba.PropertyNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006fp\u0065\u0072\u0074\u0079\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_dgba.PropertyNameAttr)})
	}
	if _dgba.ServerFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dgba.ServerFieldAttr))})
	}
	if _dgba.UniqueListAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004c\u0069\u0073\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dgba.UniqueListAttr))})
	}
	if _dgba.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_dgba.NumFmtIdAttr)})
	}
	if _dgba.FormulaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, Value: _ec.Sprintf("\u0025\u0076", *_dgba.FormulaAttr)})
	}
	if _dgba.SqlTypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073q\u006c\u0054\u0079\u0070\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_dgba.SqlTypeAttr)})
	}
	if _dgba.HierarchyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y"}, Value: _ec.Sprintf("\u0025\u0076", *_dgba.HierarchyAttr)})
	}
	if _dgba.LevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u0076e\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_dgba.LevelAttr)})
	}
	if _dgba.DatabaseFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061\u0062\u0061\u0073\u0065\u0046\u0069\u0065\u006c\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dgba.DatabaseFieldAttr))})
	}
	if _dgba.MappingCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0070p\u0069\u006e\u0067\u0043\u006f\u0075\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_dgba.MappingCountAttr)})
	}
	if _dgba.MemberPropertyFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u006d\u0062er\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0046\u0069\u0065\u006c\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dgba.MemberPropertyFieldAttr))})
	}
	e.EncodeToken(start)
	if _dgba.SharedItems != nil {
		_bcag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0061\u0072\u0065\u0064I\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_dgba.SharedItems, _bcag)
	}
	if _dgba.FieldGroup != nil {
		_bcd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"}}
		e.EncodeElement(_dgba.FieldGroup, _bcd)
	}
	if _dgba.MpMap != nil {
		_dacb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0070\u004d\u0061\u0070"}}
		for _, _cgag := range _dgba.MpMap {
			e.EncodeElement(_cgag, _dacb)
		}
	}
	if _dgba.ExtLst != nil {
		_gda := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dgba.ExtLst, _gda)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_afedd ST_DateTimeGrouping) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_egdaa := _b.Attr{}
	_egdaa.Name = name
	switch _afedd {
	case ST_DateTimeGroupingUnset:
		_egdaa.Value = ""
	case ST_DateTimeGroupingYear:
		_egdaa.Value = "\u0079\u0065\u0061\u0072"
	case ST_DateTimeGroupingMonth:
		_egdaa.Value = "\u006d\u006f\u006et\u0068"
	case ST_DateTimeGroupingDay:
		_egdaa.Value = "\u0064\u0061\u0079"
	case ST_DateTimeGroupingHour:
		_egdaa.Value = "\u0068\u006f\u0075\u0072"
	case ST_DateTimeGroupingMinute:
		_egdaa.Value = "\u006d\u0069\u006e\u0075\u0074\u0065"
	case ST_DateTimeGroupingSecond:
		_egdaa.Value = "\u0073\u0065\u0063\u006f\u006e\u0064"
	}
	return _egdaa, nil
}

// ValidateWithPath validates the CT_PivotField and its children, prefixing error messages with path
func (_ababdc *CT_PivotField) ValidateWithPath(path string) error {
	if _afddc := _ababdc.AxisAttr.ValidateWithPath(path + "\u002fA\u0078\u0069\u0073\u0041\u0074\u0074r"); _afddc != nil {
		return _afddc
	}
	if _cgdeg := _ababdc.SortTypeAttr.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _cgdeg != nil {
		return _cgdeg
	}
	if _ababdc.Items != nil {
		if _dbagf := _ababdc.Items.ValidateWithPath(path + "\u002f\u0049\u0074\u0065\u006d\u0073"); _dbagf != nil {
			return _dbagf
		}
	}
	if _ababdc.AutoSortScope != nil {
		if _efaf := _ababdc.AutoSortScope.ValidateWithPath(path + "\u002f\u0041\u0075\u0074\u006f\u0053\u006f\u0072\u0074S\u0063\u006f\u0070\u0065"); _efaf != nil {
			return _efaf
		}
	}
	if _ababdc.ExtLst != nil {
		if _cefbfc := _ababdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cefbfc != nil {
			return _cefbfc
		}
	}
	return nil
}

type CT_RevisionSheetRename struct {

	// Sheet Id
	SheetIdAttr uint32

	// Old Sheet Name
	OldNameAttr string

	// New Sheet Name
	NewNameAttr string
	ExtLst      *CT_ExtensionList
	RIdAttr     *uint32
	UaAttr      *bool
	RaAttr      *bool
}

func (_dbfabd *ST_PivotAreaType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dbfabd = 0
	case "\u006e\u006f\u006e\u0065":
		*_dbfabd = 1
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_dbfabd = 2
	case "\u0064\u0061\u0074\u0061":
		*_dbfabd = 3
	case "\u0061\u006c\u006c":
		*_dbfabd = 4
	case "\u006f\u0072\u0069\u0067\u0069\u006e":
		*_dbfabd = 5
	case "\u0062\u0075\u0074\u0074\u006f\u006e":
		*_dbfabd = 6
	case "\u0074\u006f\u0070\u0045\u006e\u0064":
		*_dbfabd = 7
	case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
		*_dbfabd = 8
	}
	return nil
}

// Validate validates the Metadata and its children
func (_ddcecf *Metadata) Validate() error {
	return _ddcecf.ValidateWithPath("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061")
}

func (_agaagg *ST_Visibility) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_agaagg = 0
	case "\u0076i\u0073\u0069\u0062\u006c\u0065":
		*_agaagg = 1
	case "\u0068\u0069\u0064\u0064\u0065\u006e":
		*_agaagg = 2
	case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
		*_agaagg = 3
	}
	return nil
}

func (_eeabgf ST_PaneState) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_eeabgf.String(), start)
}

// ValidateWithPath validates the CT_WorkbookProtection and its children, prefixing error messages with path
func (_fbeegf *CT_WorkbookProtection) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_Parameter and its children, prefixing error messages with path
func (_bcdcb *CT_Parameter) ValidateWithPath(path string) error {
	if _bbbcg := _bcdcb.ParameterTypeAttr.ValidateWithPath(path + "\u002fP\u0061r\u0061\u006d\u0065\u0074\u0065r\u0054\u0079p\u0065\u0041\u0074\u0074\u0072"); _bbbcg != nil {
		return _bbbcg
	}
	return nil
}

func NewCT_PCDKPI() *CT_PCDKPI { _fcee := &CT_PCDKPI{}; return _fcee }

// Validate validates the CT_CellSmartTags and its children
func (_bcb *CT_CellSmartTags) Validate() error {
	return _bcb.ValidateWithPath("\u0043\u0054_\u0043\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073")
}

// Validate validates the CT_SheetDimension and its children
func (_ffdgge *CT_SheetDimension) Validate() error {
	return _ffdgge.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e")
}

func (_ffaac ST_VolValueType) ValidateWithPath(path string) error {
	switch _ffaac {
	case 0, 1, 2, 3, 4:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffaac))
	}
	return nil
}

func (_fbefa *CT_Dxfs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fbefa.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_fbefa.CountAttr)})
	}
	e.EncodeToken(start)
	if _fbefa.Dxf != nil {
		_eecd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0078\u0066"}}
		for _, _dadcg := range _fbefa.Dxf {
			e.EncodeElement(_dadcg, _eecd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bbbgc ST_DataValidationImeMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dcceg := _b.Attr{}
	_dcceg.Name = name
	switch _bbbgc {
	case ST_DataValidationImeModeUnset:
		_dcceg.Value = ""
	case ST_DataValidationImeModeNoControl:
		_dcceg.Value = "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case ST_DataValidationImeModeOff:
		_dcceg.Value = "\u006f\u0066\u0066"
	case ST_DataValidationImeModeOn:
		_dcceg.Value = "\u006f\u006e"
	case ST_DataValidationImeModeDisabled:
		_dcceg.Value = "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"
	case ST_DataValidationImeModeHiragana:
		_dcceg.Value = "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case ST_DataValidationImeModeFullKatakana:
		_dcceg.Value = "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case ST_DataValidationImeModeHalfKatakana:
		_dcceg.Value = "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case ST_DataValidationImeModeFullAlpha:
		_dcceg.Value = "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a"
	case ST_DataValidationImeModeHalfAlpha:
		_dcceg.Value = "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a"
	case ST_DataValidationImeModeFullHangul:
		_dcceg.Value = "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c"
	case ST_DataValidationImeModeHalfHangul:
		_dcceg.Value = "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c"
	}
	return _dcceg, nil
}

// Validate validates the CT_VolTopicRef and its children
func (_gdebad *CT_VolTopicRef) Validate() error {
	return _gdebad.ValidateWithPath("\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070i\u0063\u0052\u0065\u0066")
}

func (_cbd *CT_Cell) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbaf := range start.Attr {
		if _dbaf.Name.Local == "\u0072" {
			_fec, _ccda := _dbaf.Value, error(nil)
			if _ccda != nil {
				return _ccda
			}
			_cbd.RAttr = &_fec
			continue
		}
		if _dbaf.Name.Local == "\u0073" {
			_ddfga, _bbc := _eb.ParseUint(_dbaf.Value, 10, 32)
			if _bbc != nil {
				return _bbc
			}
			_efbc := uint32(_ddfga)
			_cbd.SAttr = &_efbc
			continue
		}
		if _dbaf.Name.Local == "\u0074" {
			_cbd.TAttr.UnmarshalXMLAttr(_dbaf)
			continue
		}
		if _dbaf.Name.Local == "\u0063\u006d" {
			_edeg, _agc := _eb.ParseUint(_dbaf.Value, 10, 32)
			if _agc != nil {
				return _agc
			}
			_cggf := uint32(_edeg)
			_cbd.CmAttr = &_cggf
			continue
		}
		if _dbaf.Name.Local == "\u0076\u006d" {
			_dfbc, _cffb := _eb.ParseUint(_dbaf.Value, 10, 32)
			if _cffb != nil {
				return _cffb
			}
			_dgbac := uint32(_dfbc)
			_cbd.VmAttr = &_dgbac
			continue
		}
		if _dbaf.Name.Local == "\u0070\u0068" {
			_caca, _acfb := _eb.ParseBool(_dbaf.Value)
			if _acfb != nil {
				return _acfb
			}
			_cbd.PhAttr = &_caca
			continue
		}
	}
_gbdc:
	for {
		_ggcf, _abda := d.Token()
		if _abda != nil {
			return _abda
		}
		switch _dbeg := _ggcf.(type) {
		case _b.StartElement:
			switch _dbeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066"}:
				_cbd.F = NewCT_CellFormula()
				if _eabg := d.DecodeElement(_cbd.F, &_dbeg); _eabg != nil {
					return _eabg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}:
				_cbd.V = new(string)
				if _aggd := d.DecodeElement(_cbd.V, &_dbeg); _aggd != nil {
					return _aggd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0073"}:
				_cbd.Is = NewCT_Rst()
				if _bbdc := d.DecodeElement(_cbd.Is, &_dbeg); _bbdc != nil {
					return _bbdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbd.ExtLst = NewCT_ExtensionList()
				if _gefe := d.DecodeElement(_cbd.ExtLst, &_dbeg); _gefe != nil {
					return _gefe
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u0065\u006c\u006c\u0020\u0025\u0076", _dbeg.Name)
				if _adcfd := d.Skip(); _adcfd != nil {
					return _adcfd
				}
			}
		case _b.EndElement:
			break _gbdc
		case _b.CharData:
		}
	}
	return nil
}

func (_ddffec *CT_SharedItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ddffec.ContainsSemiMixedTypesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0074ai\u006e\u0073\u0053\u0065\u006d\u0069\u004d\u0069\u0078\u0065\u0064\u0054\u0079\u0070e\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ddffec.ContainsSemiMixedTypesAttr))})
	}
	if _ddffec.ContainsNonDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006et\u0061\u0069\u006e\u0073\u004e\u006f\u006e\u0044\u0061\u0074\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ddffec.ContainsNonDateAttr))})
	}
	if _ddffec.ContainsDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0044\u0061\u0074\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ddffec.ContainsDateAttr))})
	}
	if _ddffec.ContainsStringAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0053t\u0072\u0069\u006e\u0067"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ddffec.ContainsStringAttr))})
	}
	if _ddffec.ContainsBlankAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042\u006c\u0061\u006e\u006b"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ddffec.ContainsBlankAttr))})
	}
	if _ddffec.ContainsMixedTypesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006et\u0061\u0069\u006e\u0073\u004di\u0078\u0065d\u0054\u0079\u0070\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ddffec.ContainsMixedTypesAttr))})
	}
	if _ddffec.ContainsNumberAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u004eu\u006d\u0062\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ddffec.ContainsNumberAttr))})
	}
	if _ddffec.ContainsIntegerAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006et\u0061\u0069\u006e\u0073\u0049\u006e\u0074\u0065\u0067\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ddffec.ContainsIntegerAttr))})
	}
	if _ddffec.MinValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0056\u0061\u006c\u0075\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_ddffec.MinValueAttr)})
	}
	if _ddffec.MaxValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078\u0056\u0061\u006c\u0075\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_ddffec.MaxValueAttr)})
	}
	if _ddffec.MinDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006di\u006e\u0044\u0061\u0074\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_ddffec.MinDateAttr)})
	}
	if _ddffec.MaxDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006da\u0078\u0044\u0061\u0074\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_ddffec.MaxDateAttr)})
	}
	if _ddffec.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ddffec.CountAttr)})
	}
	if _ddffec.LongTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u006e\u0067\u0054\u0065\u0078\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ddffec.LongTextAttr))})
	}
	e.EncodeToken(start)
	if _ddffec.M != nil {
		_aagdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _ddadf := range _ddffec.M {
			e.EncodeElement(_ddadf, _aagdg)
		}
	}
	if _ddffec.N != nil {
		_egeae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _cbfgf := range _ddffec.N {
			e.EncodeElement(_cbfgf, _egeae)
		}
	}
	if _ddffec.B != nil {
		_bdcbbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _agdba := range _ddffec.B {
			e.EncodeElement(_agdba, _bdcbbc)
		}
	}
	if _ddffec.E != nil {
		_cadfc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _aggdcf := range _ddffec.E {
			e.EncodeElement(_aggdcf, _cadfc)
		}
	}
	if _ddffec.S != nil {
		_defaab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _aggbg := range _ddffec.S {
			e.EncodeElement(_aggbg, _defaab)
		}
	}
	if _ddffec.D != nil {
		_abdeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064"}}
		for _, _deadfb := range _ddffec.D {
			e.EncodeElement(_deadfb, _abdeb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CustomWorkbookViews and its children, prefixing error messages with path
func (_gcbcf *CT_CustomWorkbookViews) ValidateWithPath(path string) error {
	for _befe, _cacf := range _gcbcf.CustomWorkbookView {
		if _gddga := _cacf.ValidateWithPath(_ec.Sprintf("\u0025s\u002f\u0043\u0075\u0073t\u006f\u006d\u0057\u006f\u0072k\u0062o\u006fk\u0056\u0069\u0065\u0077\u005b\u0025\u0064]", path, _befe)); _gddga != nil {
			return _gddga
		}
	}
	return nil
}

func (_bebac *CT_TableStyles) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfedb := range start.Attr {
		if _gfedb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bbcbc, _gdefa := _eb.ParseUint(_gfedb.Value, 10, 32)
			if _gdefa != nil {
				return _gdefa
			}
			_becccb := uint32(_bbcbc)
			_bebac.CountAttr = &_becccb
			continue
		}
		if _gfedb.Name.Local == "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0054\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065" {
			_gagda, _dddag := _gfedb.Value, error(nil)
			if _dddag != nil {
				return _dddag
			}
			_bebac.DefaultTableStyleAttr = &_gagda
			continue
		}
		if _gfedb.Name.Local == "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0050\u0069\u0076\u006f\u0074S\u0074\u0079\u006c\u0065" {
			_gfdcg, _bbbbgf := _gfedb.Value, error(nil)
			if _bbbbgf != nil {
				return _bbbbgf
			}
			_bebac.DefaultPivotStyleAttr = &_gfdcg
			continue
		}
	}
_gefdf:
	for {
		_gdbfc, _acgfb := d.Token()
		if _acgfb != nil {
			return _acgfb
		}
		switch _gdaddc := _gdbfc.(type) {
		case _b.StartElement:
			switch _gdaddc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_gdabb := NewCT_TableStyle()
				if _acdeg := d.DecodeElement(_gdabb, &_gdaddc); _acdeg != nil {
					return _acdeg
				}
				_bebac.TableStyle = append(_bebac.TableStyle, _gdabb)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074y\u006ce\u0073\u0020\u0025\u0076", _gdaddc.Name)
				if _fdeec := d.Skip(); _fdeec != nil {
					return _fdeec
				}
			}
		case _b.EndElement:
			break _gefdf
		case _b.CharData:
		}
	}
	return nil
}

func (_bcdfgb ST_SheetViewType) ValidateWithPath(path string) error {
	switch _bcdfgb {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bcdfgb))
	}
	return nil
}

func (_cecbf ST_ShowDataAs) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_adebcga := _b.Attr{}
	_adebcga.Name = name
	switch _cecbf {
	case ST_ShowDataAsUnset:
		_adebcga.Value = ""
	case ST_ShowDataAsNormal:
		_adebcga.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_ShowDataAsDifference:
		_adebcga.Value = "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065"
	case ST_ShowDataAsPercent:
		_adebcga.Value = "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case ST_ShowDataAsPercentDiff:
		_adebcga.Value = "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066"
	case ST_ShowDataAsRunTotal:
		_adebcga.Value = "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c"
	case ST_ShowDataAsPercentOfRow:
		_adebcga.Value = "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077"
	case ST_ShowDataAsPercentOfCol:
		_adebcga.Value = "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c"
	case ST_ShowDataAsPercentOfTotal:
		_adebcga.Value = "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c"
	case ST_ShowDataAsIndex:
		_adebcga.Value = "\u0069\u006e\u0064e\u0078"
	}
	return _adebcga, nil
}

// ValidateWithPath validates the MapInfo and its children, prefixing error messages with path
func (_fbgfb *MapInfo) ValidateWithPath(path string) error {
	if _gdbda := _fbgfb.CT_MapInfo.ValidateWithPath(path); _gdbda != nil {
		return _gdbda
	}
	return nil
}

func NewCT_PageSetup() *CT_PageSetup { _ggdcb := &CT_PageSetup{}; return _ggdcb }

func (_dgaed ST_DataConsolidateFunction) ValidateWithPath(path string) error {
	switch _dgaed {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgaed))
	}
	return nil
}

func (_abcaf ST_CfvoType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_abcaf.String(), start)
}

func (_adfcee ST_PageOrder) Validate() error { return _adfcee.ValidateWithPath("") }

// ValidateWithPath validates the CT_Metadata and its children, prefixing error messages with path
func (_ffddc *CT_Metadata) ValidateWithPath(path string) error {
	if _ffddc.MetadataTypes != nil {
		if _fagdc := _ffddc.MetadataTypes.ValidateWithPath(path + "\u002f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061T\u0079\u0070\u0065\u0073"); _fagdc != nil {
			return _fagdc
		}
	}
	if _ffddc.MetadataStrings != nil {
		if _debbe := _ffddc.MetadataStrings.ValidateWithPath(path + "\u002f\u004de\u0074\u0061\u0064a\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"); _debbe != nil {
			return _debbe
		}
	}
	if _ffddc.MdxMetadata != nil {
		if _acegc := _ffddc.MdxMetadata.ValidateWithPath(path + "\u002f\u004d\u0064x\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"); _acegc != nil {
			return _acegc
		}
	}
	for _ecgcf, _gbfea := range _ffddc.FutureMetadata {
		if _gadcf := _gbfea.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0046\u0075tu\u0072e\u004d\u0065\u0074\u0061\u0064a\u0074\u0061\u005b\u0025\u0064\u005d", path, _ecgcf)); _gadcf != nil {
			return _gadcf
		}
	}
	if _ffddc.CellMetadata != nil {
		if _cbda := _ffddc.CellMetadata.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"); _cbda != nil {
			return _cbda
		}
	}
	if _ffddc.ValueMetadata != nil {
		if _gfgcc := _ffddc.ValueMetadata.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0075\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"); _gfgcc != nil {
			return _gfgcc
		}
	}
	if _ffddc.ExtLst != nil {
		if _fgagg := _ffddc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fgagg != nil {
			return _fgagg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Row and its children, prefixing error messages with path
func (_eacb *CT_Row) ValidateWithPath(path string) error {
	for _cfgce, _fbgag := range _eacb.C {
		if _gfbed := _fbgag.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0043\u005b\u0025\u0064\u005d", path, _cfgce)); _gfbed != nil {
			return _gfbed
		}
	}
	if _eacb.ExtLst != nil {
		if _cccbd := _eacb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cccbd != nil {
			return _cccbd
		}
	}
	return nil
}

func NewCT_PCDSDTCEntries() *CT_PCDSDTCEntries { _beece := &CT_PCDSDTCEntries{}; return _beece }

// ValidateWithPath validates the CT_CacheFields and its children, prefixing error messages with path
func (_ffgc *CT_CacheFields) ValidateWithPath(path string) error {
	for _dbf, _dgbd := range _ffgc.CacheField {
		if _bdff := _dgbd.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0043\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006cd\u005b\u0025\u0064\u005d", path, _dbf)); _bdff != nil {
			return _bdff
		}
	}
	return nil
}

func (_gdfb *CT_Reviewed) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _gdfb.RIdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_affeg *CT_PivotSelection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_affeg.PivotArea = NewCT_PivotArea()
	for _, _beegc := range start.Attr {
		if _beegc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _beegc.Name.Local == "\u0069\u0064" || _beegc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _beegc.Name.Local == "\u0069\u0064" {
			_afege, _efgff := _beegc.Value, error(nil)
			if _efgff != nil {
				return _efgff
			}
			_affeg.IdAttr = &_afege
			continue
		}
		if _beegc.Name.Local == "\u006d\u0069\u006e" {
			_bedae, _eegcd := _eb.ParseUint(_beegc.Value, 10, 32)
			if _eegcd != nil {
				return _eegcd
			}
			_gfgag := uint32(_bedae)
			_affeg.MinAttr = &_gfgag
			continue
		}
		if _beegc.Name.Local == "\u006d\u0061\u0078" {
			_bbegc, _egacg := _eb.ParseUint(_beegc.Value, 10, 32)
			if _egacg != nil {
				return _egacg
			}
			_cbdfb := uint32(_bbegc)
			_affeg.MaxAttr = &_cbdfb
			continue
		}
		if _beegc.Name.Local == "\u006c\u0061\u0062e\u006c" {
			_fgedb, _dcfee := _eb.ParseBool(_beegc.Value)
			if _dcfee != nil {
				return _dcfee
			}
			_affeg.LabelAttr = &_fgedb
			continue
		}
		if _beegc.Name.Local == "\u0061c\u0074\u0069\u0076\u0065\u0052\u006fw" {
			_bbcae, _baeb := _eb.ParseUint(_beegc.Value, 10, 32)
			if _baeb != nil {
				return _baeb
			}
			_edddee := uint32(_bbcae)
			_affeg.ActiveRowAttr = &_edddee
			continue
		}
		if _beegc.Name.Local == "\u0065\u0078\u0074\u0065\u006e\u0064\u0061\u0062\u006c\u0065" {
			_aefbfc, _fdfd := _eb.ParseBool(_beegc.Value)
			if _fdfd != nil {
				return _fdfd
			}
			_affeg.ExtendableAttr = &_aefbfc
			continue
		}
		if _beegc.Name.Local == "\u0061\u0078\u0069\u0073" {
			_affeg.AxisAttr.UnmarshalXMLAttr(_beegc)
			continue
		}
		if _beegc.Name.Local == "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn" {
			_fdebc, _edfd := _eb.ParseUint(_beegc.Value, 10, 32)
			if _edfd != nil {
				return _edfd
			}
			_ccfdbc := uint32(_fdebc)
			_affeg.DimensionAttr = &_ccfdbc
			continue
		}
		if _beegc.Name.Local == "\u0073\u0074\u0061r\u0074" {
			_ddaeff, _begdf := _eb.ParseUint(_beegc.Value, 10, 32)
			if _begdf != nil {
				return _begdf
			}
			_agebc := uint32(_ddaeff)
			_affeg.StartAttr = &_agebc
			continue
		}
		if _beegc.Name.Local == "\u0070\u0061\u006e\u0065" {
			_affeg.PaneAttr.UnmarshalXMLAttr(_beegc)
			continue
		}
		if _beegc.Name.Local == "\u0064\u0061\u0074\u0061" {
			_gecfg, _dceaaa := _eb.ParseBool(_beegc.Value)
			if _dceaaa != nil {
				return _dceaaa
			}
			_affeg.DataAttr = &_gecfg
			continue
		}
		if _beegc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bdbbe, _ageaf := _eb.ParseUint(_beegc.Value, 10, 32)
			if _ageaf != nil {
				return _ageaf
			}
			_affac := uint32(_bdbbe)
			_affeg.CountAttr = &_affac
			continue
		}
		if _beegc.Name.Local == "\u0061c\u0074\u0069\u0076\u0065\u0043\u006fl" {
			_fabgd, _cdcgd := _eb.ParseUint(_beegc.Value, 10, 32)
			if _cdcgd != nil {
				return _cdcgd
			}
			_gfbad := uint32(_fabgd)
			_affeg.ActiveColAttr = &_gfbad
			continue
		}
		if _beegc.Name.Local == "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0052\u006f\u0077" {
			_adcgd, _bbcdd := _eb.ParseUint(_beegc.Value, 10, 32)
			if _bbcdd != nil {
				return _bbcdd
			}
			_fedce := uint32(_adcgd)
			_affeg.PreviousRowAttr = &_fedce
			continue
		}
		if _beegc.Name.Local == "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0043\u006f\u006c" {
			_egbabf, _afbeff := _eb.ParseUint(_beegc.Value, 10, 32)
			if _afbeff != nil {
				return _afbeff
			}
			_eeddg := uint32(_egbabf)
			_affeg.PreviousColAttr = &_eeddg
			continue
		}
		if _beegc.Name.Local == "\u0063\u006c\u0069c\u006b" {
			_gadcg, _dcgga := _eb.ParseUint(_beegc.Value, 10, 32)
			if _dcgga != nil {
				return _dcgga
			}
			_gded := uint32(_gadcg)
			_affeg.ClickAttr = &_gded
			continue
		}
		if _beegc.Name.Local == "\u0073\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072" {
			_cfgd, _ddbbd := _eb.ParseBool(_beegc.Value)
			if _ddbbd != nil {
				return _ddbbd
			}
			_affeg.ShowHeaderAttr = &_cfgd
			continue
		}
	}
_efcab:
	for {
		_ecgfga, _efbecc := d.Token()
		if _efbecc != nil {
			return _efbecc
		}
		switch _gbfda := _ecgfga.(type) {
		case _b.StartElement:
			switch _gbfda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _cegfb := d.DecodeElement(_affeg.PivotArea, &_gbfda); _cegfb != nil {
					return _cegfb
				}
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _gbfda.Name)
				if _accaa := d.Skip(); _accaa != nil {
					return _accaa
				}
			}
		case _b.EndElement:
			break _efcab
		case _b.CharData:
		}
	}
	return nil
}

func (_eceab *CT_IconSet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eceab.IconSetAttr != ST_IconSetTypeUnset {
		_aadbdc, _edcag := _eceab.IconSetAttr.MarshalXMLAttr(_b.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"})
		if _edcag != nil {
			return _edcag
		}
		start.Attr = append(start.Attr, _aadbdc)
	}
	if _eceab.ShowValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_eceab.ShowValueAttr))})
	}
	if _eceab.PercentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070e\u0072\u0063\u0065\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_eceab.PercentAttr))})
	}
	if _eceab.ReverseAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0076\u0065\u0072\u0073\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_eceab.ReverseAttr))})
	}
	e.EncodeToken(start)
	_decgf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u0066\u0076\u006f"}}
	for _, _cfggd := range _eceab.Cfvo {
		e.EncodeElement(_cfggd, _decgf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_befbdg ST_PaneState) Validate() error { return _befbdg.ValidateWithPath("") }

func (_adef *CT_CellWatches) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dacg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068"}}
	for _, _bfcc := range _adef.CellWatch {
		e.EncodeElement(_bfcc, _dacg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_ecbga *CT_WorksheetSource) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ecbga.RefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", *_ecbga.RefAttr)})
	}
	if _ecbga.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_ecbga.NameAttr)})
	}
	if _ecbga.SheetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ecbga.SheetAttr)})
	}
	if _ecbga.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_ecbga.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DataFields and its children
func (_eace *CT_DataFields) Validate() error {
	return _eace.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073")
}

func (_bdefc *PivotCacheDefinition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003api\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e"
	return _bdefc.CT_PivotCacheDefinition.MarshalXML(e, start)
}

func (_bgddabc ST_SheetState) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_abefbb := _b.Attr{}
	_abefbb.Name = name
	switch _bgddabc {
	case ST_SheetStateUnset:
		_abefbb.Value = ""
	case ST_SheetStateVisible:
		_abefbb.Value = "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case ST_SheetStateHidden:
		_abefbb.Value = "\u0068\u0069\u0064\u0064\u0065\u006e"
	case ST_SheetStateVeryHidden:
		_abefbb.Value = "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return _abefbb, nil
}

// ValidateWithPath validates the CT_MetadataBlock and its children, prefixing error messages with path
func (_aebfa *CT_MetadataBlock) ValidateWithPath(path string) error {
	for _dcgfc, _bddcbd := range _aebfa.Rc {
		if _cffgc := _bddcbd.ValidateWithPath(_ec.Sprintf("\u0025s\u002f\u0052\u0063\u005b\u0025\u0064]", path, _dcgfc)); _cffgc != nil {
			return _cffgc
		}
	}
	return nil
}

type CT_ColHierarchiesUsage struct {

	// Items Count
	CountAttr *uint32

	// Column OLAP Hierarchies
	ColHierarchyUsage []*CT_HierarchyUsage
}

func (_edcbe ST_SortBy) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_edcbe.String(), start)
}

// ValidateWithPath validates the CT_RevisionInsertSheet and its children, prefixing error messages with path
func (_gegdbe *CT_RevisionInsertSheet) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Tuples and its children
func (_ccggf *CT_Tuples) Validate() error {
	return _ccggf.ValidateWithPath("\u0043T\u005f\u0054\u0075\u0070\u006c\u0065s")
}

func (_aagdb ST_PhoneticType) String() string {
	switch _aagdb {
	case 0:
		return ""
	case 1:
		return "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case 2:
		return "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case 3:
		return "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case 4:
		return "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e"
	}
	return ""
}

// Validate validates the CT_Groups and its children
func (_fcge *CT_Groups) Validate() error {
	return _fcge.ValidateWithPath("\u0043T\u005f\u0047\u0072\u006f\u0075\u0070s")
}

func (_gbabf *CT_Sst) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adfab := range start.Attr {
		if _adfab.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bdgea, _ebbea := _eb.ParseUint(_adfab.Value, 10, 32)
			if _ebbea != nil {
				return _ebbea
			}
			_febgc := uint32(_bdgea)
			_gbabf.CountAttr = &_febgc
			continue
		}
		if _adfab.Name.Local == "u\u006e\u0069\u0071\u0075\u0065\u0043\u006f\u0075\u006e\u0074" {
			_geaeffd, _bbaed := _eb.ParseUint(_adfab.Value, 10, 32)
			if _bbaed != nil {
				return _bbaed
			}
			_eaaafe := uint32(_geaeffd)
			_gbabf.UniqueCountAttr = &_eaaafe
			continue
		}
	}
_egegdg:
	for {
		_bcddg, _bggea := d.Token()
		if _bggea != nil {
			return _bggea
		}
		switch _feeefd := _bcddg.(type) {
		case _b.StartElement:
			switch _feeefd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}:
				_eafgcb := NewCT_Rst()
				if _gageg := d.DecodeElement(_eafgcb, &_feeefd); _gageg != nil {
					return _gageg
				}
				_gbabf.Si = append(_gbabf.Si, _eafgcb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbabf.ExtLst = NewCT_ExtensionList()
				if _afbca := d.DecodeElement(_gbabf.ExtLst, &_feeefd); _afbca != nil {
					return _afbca
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0073\u0074\u0020\u0025\u0076", _feeefd.Name)
				if _ecddgf := d.Skip(); _ecddgf != nil {
					return _ecddgf
				}
			}
		case _b.EndElement:
			break _egegdg
		case _b.CharData:
		}
	}
	return nil
}

func (_eebbf ST_DataConsolidateFunction) String() string {
	switch _eebbf {
	case 0:
		return ""
	case 1:
		return "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case 2:
		return "\u0063\u006f\u0075n\u0074"
	case 3:
		return "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case 4:
		return "\u006d\u0061\u0078"
	case 5:
		return "\u006d\u0069\u006e"
	case 6:
		return "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case 7:
		return "\u0073\u0074\u0064\u0044\u0065\u0076"
	case 8:
		return "\u0073t\u0064\u0044\u0065\u0076\u0070"
	case 9:
		return "\u0073\u0075\u006d"
	case 10:
		return "\u0076\u0061\u0072"
	case 11:
		return "\u0076\u0061\u0072\u0070"
	}
	return ""
}

func (_ecdec ST_TextVAlign) String() string {
	switch _ecdec {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0070"
	case 2:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 3:
		return "\u0062\u006f\u0074\u0074\u006f\u006d"
	case 4:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 5:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}

func (_aebffe *CT_Sets) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aebffe.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_aebffe.CountAttr)})
	}
	e.EncodeToken(start)
	_fdgfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0065\u0074"}}
	for _, _dbfff := range _aebffe.Set {
		e.EncodeElement(_dbfff, _fdgfa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_CellStyles() *CT_CellStyles { _gfbd := &CT_CellStyles{}; return _gfbd }

func (_cgfda *CT_DynamicFilter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cgfda.TypeAttr = ST_DynamicFilterType(1)
	for _, _gggbb := range start.Attr {
		if _gggbb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_cgfda.TypeAttr.UnmarshalXMLAttr(_gggbb)
			continue
		}
		if _gggbb.Name.Local == "\u0076\u0061\u006c" {
			_afggdb, _gbdce := _eb.ParseFloat(_gggbb.Value, 64)
			if _gbdce != nil {
				return _gbdce
			}
			_cgfda.ValAttr = &_afggdb
			continue
		}
		if _gggbb.Name.Local == "\u0076\u0061\u006c\u0049\u0073\u006f" {
			_ebgb, _gdfa := ParseStdlibTime(_gggbb.Value)
			if _gdfa != nil {
				return _gdfa
			}
			_cgfda.ValIsoAttr = &_ebgb
			continue
		}
		if _gggbb.Name.Local == "\u006d\u0061\u0078\u0056\u0061\u006c" {
			_cbab, _ecdgb := _eb.ParseFloat(_gggbb.Value, 64)
			if _ecdgb != nil {
				return _ecdgb
			}
			_cgfda.MaxValAttr = &_cbab
			continue
		}
		if _gggbb.Name.Local == "\u006da\u0078\u0056\u0061\u006c\u0049\u0073o" {
			_efgfeb, _efcdc := ParseStdlibTime(_gggbb.Value)
			if _efcdc != nil {
				return _efcdc
			}
			_cgfda.MaxValIsoAttr = &_efgfeb
			continue
		}
	}
	for {
		_afaa, _ffbfb := d.Token()
		if _ffbfb != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0079\u006e\u0061m\u0069c\u0046\u0069\u006c\u0074\u0065\u0072\u003a \u0025\u0073", _ffbfb)
		}
		if _cbbbeb, _cfccc := _afaa.(_b.EndElement); _cfccc && _cbbbeb.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_PageFields() *CT_PageFields { _bcfbb := &CT_PageFields{}; return _bcfbb }

type CT_RevisionMove struct {

	// Sheet Id
	SheetIdAttr uint32

	// Source
	SourceAttr string

	// Destination
	DestinationAttr string

	// Source Sheet Id
	SourceSheetIdAttr *uint32

	// Undo
	Undo []*CT_UndoInfo

	// Revision Cell Change
	Rcc []*CT_RevisionCellChange

	// Revision Format
	Rfmt    []*CT_RevisionFormatting
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}

// Validate validates the CT_PageMargins and its children
func (_bccfb *CT_PageMargins) Validate() error {
	return _bccfb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073")
}

func NewCT_RangeSet() *CT_RangeSet { _cffgcd := &CT_RangeSet{}; return _cffgcd }

func NewCT_Revisions() *CT_Revisions { _agbdd := &CT_Revisions{}; return _agbdd }

type CT_VerticalAlignFontProperty struct {

	// Value
	ValAttr _bb.ST_VerticalAlignRun
}

// ValidateWithPath validates the CT_PivotFields and its children, prefixing error messages with path
func (_gfecd *CT_PivotFields) ValidateWithPath(path string) error {
	for _aaaga, _ffegfe := range _gfecd.PivotField {
		if _dcacb := _ffegfe.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006cd\u005b\u0025\u0064\u005d", path, _aaaga)); _dcacb != nil {
			return _dcacb
		}
	}
	return nil
}

// Validate validates the Dialogsheet and its children
func (_ggcaf *Dialogsheet) Validate() error {
	return _ggcaf.ValidateWithPath("D\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074")
}

func (_bfdccf *CT_RevisionAutoFormatting) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ceccd := range start.Attr {
		if _ceccd.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_afagd, _cedcb := _eb.ParseUint(_ceccd.Value, 10, 32)
			if _cedcb != nil {
				return _cedcb
			}
			_bfdccf.SheetIdAttr = uint32(_afagd)
			continue
		}
		if _ceccd.Name.Local == "\u0072\u0065\u0066" {
			_dgebae, _fdce := _ceccd.Value, error(nil)
			if _fdce != nil {
				return _fdce
			}
			_bfdccf.RefAttr = _dgebae
			continue
		}
		if _ceccd.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_cdff, _ceage := _eb.ParseUint(_ceccd.Value, 10, 32)
			if _ceage != nil {
				return _ceage
			}
			_ededg := uint32(_cdff)
			_bfdccf.AutoFormatIdAttr = &_ededg
			continue
		}
		if _ceccd.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_dfaed, _cbegb := _eb.ParseBool(_ceccd.Value)
			if _cbegb != nil {
				return _cbegb
			}
			_bfdccf.ApplyNumberFormatsAttr = &_dfaed
			continue
		}
		if _ceccd.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_ffabb, _baaf := _eb.ParseBool(_ceccd.Value)
			if _baaf != nil {
				return _baaf
			}
			_bfdccf.ApplyBorderFormatsAttr = &_ffabb
			continue
		}
		if _ceccd.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_daaae, _dfbe := _eb.ParseBool(_ceccd.Value)
			if _dfbe != nil {
				return _dfbe
			}
			_bfdccf.ApplyFontFormatsAttr = &_daaae
			continue
		}
		if _ceccd.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cfba, _ffaga := _eb.ParseBool(_ceccd.Value)
			if _ffaga != nil {
				return _ffaga
			}
			_bfdccf.ApplyPatternFormatsAttr = &_cfba
			continue
		}
		if _ceccd.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_abcg, _fafag := _eb.ParseBool(_ceccd.Value)
			if _fafag != nil {
				return _fafag
			}
			_bfdccf.ApplyAlignmentFormatsAttr = &_abcg
			continue
		}
		if _ceccd.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gagcf, _feef := _eb.ParseBool(_ceccd.Value)
			if _feef != nil {
				return _feef
			}
			_bfdccf.ApplyWidthHeightFormatsAttr = &_gagcf
			continue
		}
	}
	for {
		_dacgg, _gdeae := d.Token()
		if _gdeae != nil {
			return _ec.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067 \u0043\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eA\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006eg\u003a\u0020\u0025\u0073", _gdeae)
		}
		if _cdde, _dfadg := _dacgg.(_b.EndElement); _dfadg && _cdde.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fceb *CT_Hyperlink) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", _fceb.RefAttr)})
	if _fceb.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_fceb.IdAttr)})
	}
	if _fceb.LocationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_fceb.LocationAttr)})
	}
	if _fceb.TooltipAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074o\u006f\u006c\u0074\u0069\u0070"}, Value: _ec.Sprintf("\u0025\u0076", *_fceb.TooltipAttr)})
	}
	if _fceb.DisplayAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064i\u0073\u0070\u006c\u0061\u0079"}, Value: _ec.Sprintf("\u0025\u0076", *_fceb.DisplayAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gfcf *CT_DeletedField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bfadee := range start.Attr {
		if _bfadee.Name.Local == "\u006e\u0061\u006d\u0065" {
			_befcd, _bfaf := _bfadee.Value, error(nil)
			if _bfaf != nil {
				return _bfaf
			}
			_gfcf.NameAttr = _befcd
			continue
		}
	}
	for {
		_fddd, _gaeca := d.Token()
		if _gaeca != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0044\u0065\u006c\u0065\u0074\u0065d\u0046\u0069\u0065l\u0064:\u0020\u0025\u0073", _gaeca)
		}
		if _fgcb, _febcf := _fddd.(_b.EndElement); _febcf && _fgcb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_acdb *CT_CustomProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_bffbd := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u0075\u0073\u0074\u006f\u006d\u0050\u0072"}}
	for _, _eaga := range _acdb.CustomPr {
		e.EncodeElement(_eaga, _bffbd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CellWatches and its children
func (_bfgc *CT_CellWatches) Validate() error {
	return _bfgc.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0057\u0061t\u0063\u0068\u0065\u0073")
}

type CT_CellSmartTag struct {

	// Smart Tag Type Index
	TypeAttr uint32

	// Deleted
	DeletedAttr *bool

	// XML Based
	XmlBasedAttr *bool

	// Smart Tag Properties
	CellSmartTagPr []*CT_CellSmartTagPr
}

func (_gabd *CT_ControlPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gabd.LockedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gabd.LockedAttr))})
	}
	if _gabd.DefaultSizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gabd.DefaultSizeAttr))})
	}
	if _gabd.PrintAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0069n\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gabd.PrintAttr))})
	}
	if _gabd.DisabledAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gabd.DisabledAttr))})
	}
	if _gabd.RecalcAlwaysAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0063a\u006c\u0063\u0041\u006c\u0077\u0061\u0079\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gabd.RecalcAlwaysAttr))})
	}
	if _gabd.UiObjectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gabd.UiObjectAttr))})
	}
	if _gabd.AutoFillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gabd.AutoFillAttr))})
	}
	if _gabd.AutoLineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gabd.AutoLineAttr))})
	}
	if _gabd.AutoPictAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gabd.AutoPictAttr))})
	}
	if _gabd.MacroAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _ec.Sprintf("\u0025\u0076", *_gabd.MacroAttr)})
	}
	if _gabd.AltTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061l\u0074\u0054\u0065\u0078\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_gabd.AltTextAttr)})
	}
	if _gabd.LinkedCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0069\u006e\u006b\u0065\u0064\u0043\u0065\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_gabd.LinkedCellAttr)})
	}
	if _gabd.ListFillRangeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0069\u0073\u0074\u0046\u0069\u006c\u006c\u0052\u0061\u006e\u0067\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_gabd.ListFillRangeAttr)})
	}
	if _gabd.CfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0066"}, Value: _ec.Sprintf("\u0025\u0076", *_gabd.CfAttr)})
	}
	if _gabd.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_gabd.IdAttr)})
	}
	e.EncodeToken(start)
	_abfgc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0061\u006e\u0063\u0068\u006fr"}}
	e.EncodeElement(_gabd.Anchor, _abfgc)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_aecca ST_VolValueType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_aecca.String(), start)
}

func (_bdfbc *CT_TableFormula) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0072\u0072a\u0079"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(_bdfbc.ArrayAttr))})
	e.EncodeElement(_bdfbc.Content, start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_dbaaff *ST_DataValidationOperator) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dbaaff = 0
	case "\u0062e\u0074\u0077\u0065\u0065\u006e":
		*_dbaaff = 1
	case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_dbaaff = 2
	case "\u0065\u0071\u0075a\u006c":
		*_dbaaff = 3
	case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_dbaaff = 4
	case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_dbaaff = 5
	case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_dbaaff = 6
	case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_dbaaff = 7
	case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
		*_dbaaff = 8
	}
	return nil
}

// ValidateWithPath validates the CT_VolTypes and its children, prefixing error messages with path
func (_aggfd *CT_VolTypes) ValidateWithPath(path string) error {
	for _bfcce, _effbcg := range _aggfd.VolType {
		if _afcfgf := _effbcg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0056\u006f\u006c\u0054\u0079\u0070e\u005b\u0025\u0064\u005d", path, _bfcce)); _afcfgf != nil {
			return _afcfgf
		}
	}
	if _aggfd.ExtLst != nil {
		if _acccd := _aggfd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acccd != nil {
			return _acccd
		}
	}
	return nil
}

func (_edefe *CT_PivotCache) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0063\u0068\u0065\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _edefe.CacheIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _edefe.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Parameter struct {

	// Parameter Name
	NameAttr *string

	// SQL Data Type
	SqlTypeAttr *int32

	// Parameter Type
	ParameterTypeAttr ST_ParameterType

	// Refresh on Change
	RefreshOnChangeAttr *bool

	// Parameter Prompt String
	PromptAttr *string

	// Boolean
	BooleanAttr *bool

	// Double
	DoubleAttr *float64

	// Integer
	IntegerAttr *int32

	// String
	StringAttr *string

	// Cell Reference
	CellAttr *string
}

func (_gceb *CT_CellSmartTags) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fdcb := range start.Attr {
		if _fdcb.Name.Local == "\u0072" {
			_fca, _bdceb := _fdcb.Value, error(nil)
			if _bdceb != nil {
				return _bdceb
			}
			_gceb.RAttr = _fca
			continue
		}
	}
_gdgda:
	for {
		_bbde, _egee := d.Token()
		if _egee != nil {
			return _egee
		}
		switch _bde := _bbde.(type) {
		case _b.StartElement:
			switch _bde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067"}:
				_efaa := NewCT_CellSmartTag()
				if _dgbe := d.DecodeElement(_efaa, &_bde); _dgbe != nil {
					return _dgbe
				}
				_gceb.CellSmartTag = append(_gceb.CellSmartTag, _efaa)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073\u0020\u0025v", _bde.Name)
				if _dbdfb := d.Skip(); _dbdfb != nil {
					return _dbdfb
				}
			}
		case _b.EndElement:
			break _gdgda
		case _b.CharData:
		}
	}
	return nil
}

type ST_Pane byte

func (_ggbgab ST_GradientType) ValidateWithPath(path string) error {
	switch _ggbgab {
	case 0, 1, 2:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ggbgab))
	}
	return nil
}

func (_cgcba ST_ShowDataAs) String() string {
	switch _cgcba {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065"
	case 3:
		return "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case 4:
		return "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066"
	case 5:
		return "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c"
	case 6:
		return "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077"
	case 7:
		return "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c"
	case 8:
		return "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c"
	case 9:
		return "\u0069\u006e\u0064e\u0078"
	}
	return ""
}

// Validate validates the CT_OutlinePr and its children
func (_eaccf *CT_OutlinePr) Validate() error {
	return _eaccf.ValidateWithPath("\u0043\u0054\u005fO\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072")
}

func (_fcebea ST_SortType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fcebea.String(), start)
}

func NewCT_QueryTableRefresh() *CT_QueryTableRefresh {
	_fccge := &CT_QueryTableRefresh{}
	_fccge.QueryTableFields = NewCT_QueryTableFields()
	return _fccge
}

func (_cafdc *CT_MeasureDimensionMap) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cafdc.MeasureGroupAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, Value: _ec.Sprintf("\u0025\u0076", *_cafdc.MeasureGroupAttr)})
	}
	if _cafdc.DimensionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, Value: _ec.Sprintf("\u0025\u0076", *_cafdc.DimensionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bcgebce ST_UnderlineValues) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dedfd := _b.Attr{}
	_dedfd.Name = name
	switch _bcgebce {
	case ST_UnderlineValuesUnset:
		_dedfd.Value = ""
	case ST_UnderlineValuesSingle:
		_dedfd.Value = "\u0073\u0069\u006e\u0067\u006c\u0065"
	case ST_UnderlineValuesDouble:
		_dedfd.Value = "\u0064\u006f\u0075\u0062\u006c\u0065"
	case ST_UnderlineValuesSingleAccounting:
		_dedfd.Value = "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case ST_UnderlineValuesDoubleAccounting:
		_dedfd.Value = "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case ST_UnderlineValuesNone:
		_dedfd.Value = "\u006e\u006f\u006e\u0065"
	}
	return _dedfd, nil
}

func (_dgf *CT_CacheHierarchies) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbb := range start.Attr {
		if _bbb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fcc, _fbdg := _eb.ParseUint(_bbb.Value, 10, 32)
			if _fbdg != nil {
				return _fbdg
			}
			_affga := uint32(_fcc)
			_dgf.CountAttr = &_affga
			continue
		}
	}
_cddg:
	for {
		_fea, _egcc := d.Token()
		if _egcc != nil {
			return _egcc
		}
		switch _aed := _fea.(type) {
		case _b.StartElement:
			switch _aed.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}:
				_cce := NewCT_CacheHierarchy()
				if _egec := d.DecodeElement(_cce, &_aed); _egec != nil {
					return _egec
				}
				_dgf.CacheHierarchy = append(_dgf.CacheHierarchy, _cce)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069er\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0020\u0025\u0076", _aed.Name)
				if _cda := d.Skip(); _cda != nil {
					return _cda
				}
			}
		case _b.EndElement:
			break _cddg
		case _b.CharData:
		}
	}
	return nil
}

func (_bgbcc *CT_XStringElement) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _ec.Sprintf("\u0025\u0076", _bgbcc.VAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_RefModeUnset ST_RefMode = 0
	ST_RefModeA1    ST_RefMode = 1
	ST_RefModeR1C1  ST_RefMode = 2
)

type CT_DateTime struct {

	// Value
	VAttr _g.Time

	// Unused Item
	UAttr *bool

	// Calculated Item Value
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Member Property Index
	X []*CT_X
}

func (_dgaeaf *CT_TableColumn) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _dgaeaf.IdAttr)})
	if _dgaeaf.UniqueNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_dgaeaf.UniqueNameAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _dgaeaf.NameAttr)})
	if _dgaeaf.TotalsRowFunctionAttr != ST_TotalsRowFunctionUnset {
		_bgage, _egfbf := _dgaeaf.TotalsRowFunctionAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u0075\u006ec\u0074\u0069\u006f\u006e"})
		if _egfbf != nil {
			return _egfbf
		}
		start.Attr = append(start.Attr, _bgage)
	}
	if _dgaeaf.TotalsRowLabelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077L\u0061\u0062\u0065\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_dgaeaf.TotalsRowLabelAttr)})
	}
	if _dgaeaf.QueryTableFieldIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069e\u006c\u0064\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_dgaeaf.QueryTableFieldIdAttr)})
	}
	if _dgaeaf.HeaderRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_dgaeaf.HeaderRowDxfIdAttr)})
	}
	if _dgaeaf.DataDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d"}, Value: _ec.Sprintf("\u0025\u0076", *_dgaeaf.DataDxfIdAttr)})
	}
	if _dgaeaf.TotalsRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_dgaeaf.TotalsRowDxfIdAttr)})
	}
	if _dgaeaf.HeaderRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_dgaeaf.HeaderRowCellStyleAttr)})
	}
	if _dgaeaf.DataCellStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_dgaeaf.DataCellStyleAttr)})
	}
	if _dgaeaf.TotalsRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_dgaeaf.TotalsRowCellStyleAttr)})
	}
	e.EncodeToken(start)
	if _dgaeaf.CalculatedColumnFormula != nil {
		_baeaa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0046\u006f\u0072m\u0075\u006c\u0061"}}
		e.EncodeElement(_dgaeaf.CalculatedColumnFormula, _baeaa)
	}
	if _dgaeaf.TotalsRowFormula != nil {
		_cgfdfc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074ot\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}}
		e.EncodeElement(_dgaeaf.TotalsRowFormula, _cgfdfc)
	}
	if _dgaeaf.XmlColumnPr != nil {
		_egcgf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078\u006d\u006c\u0043\u006f\u006cu\u006d\u006e\u0050\u0072"}}
		e.EncodeElement(_dgaeaf.XmlColumnPr, _egcgf)
	}
	if _dgaeaf.ExtLst != nil {
		_babdb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dgaeaf.ExtLst, _babdb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gddac ST_Axis) String() string {
	switch _gddac {
	case 0:
		return ""
	case 1:
		return "\u0061x\u0069\u0073\u0052\u006f\u0077"
	case 2:
		return "\u0061x\u0069\u0073\u0043\u006f\u006c"
	case 3:
		return "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065"
	case 4:
		return "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return ""
}

// ValidateWithPath validates the CT_SheetProtection and its children, prefixing error messages with path
func (_edgcf *CT_SheetProtection) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_OleLink and its children, prefixing error messages with path
func (_faagf *CT_OleLink) ValidateWithPath(path string) error {
	if _faagf.OleItems != nil {
		if _bcfbg := _faagf.OleItems.ValidateWithPath(path + "\u002fO\u006c\u0065\u0049\u0074\u0065\u006ds"); _bcfbg != nil {
			return _bcfbg
		}
	}
	return nil
}

func (_egfdfe *CT_CustomChartsheetView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _egfdfe.GuidAttr)})
	if _egfdfe.ScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0063\u0061l\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_egfdfe.ScaleAttr)})
	}
	if _egfdfe.StateAttr != ST_SheetStateUnset {
		_gfac, _aebfb := _egfdfe.StateAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _aebfb != nil {
			return _aebfb
		}
		start.Attr = append(start.Attr, _gfac)
	}
	if _egfdfe.ZoomToFitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_egfdfe.ZoomToFitAttr))})
	}
	e.EncodeToken(start)
	if _egfdfe.PageMargins != nil {
		_eggc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_egfdfe.PageMargins, _eggc)
	}
	if _egfdfe.PageSetup != nil {
		_febaa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_egfdfe.PageSetup, _febaa)
	}
	if _egfdfe.HeaderFooter != nil {
		_gbab := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_egfdfe.HeaderFooter, _gbab)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_SmartTags struct {

	// Cell Smart Tags
	CellSmartTags []*CT_CellSmartTags
}

// Validate validates the CT_VolTypes and its children
func (_abdfa *CT_VolTypes) Validate() error {
	return _abdfa.ValidateWithPath("C\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073")
}

type CT_PivotCache struct {

	// PivotCache Id
	CacheIdAttr uint32
	IdAttr      string
}

// Validate validates the CalcChain and its children
func (_afadb *CalcChain) Validate() error {
	return _afadb.ValidateWithPath("\u0043a\u006c\u0063\u0043\u0068\u0061\u0069n")
}

// Validate validates the CT_ExternalDefinedName and its children
func (_bcbbfg *CT_ExternalDefinedName) Validate() error {
	return _bcbbfg.ValidateWithPath("\u0043\u0054\u005f\u0045xt\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065")
}

func (_daecdd ST_PivotFilterType) String() string {
	switch _daecdd {
	case 0:
		return ""
	case 1:
		return "\u0075n\u006b\u006e\u006f\u0077\u006e"
	case 2:
		return "\u0063\u006f\u0075n\u0074"
	case 3:
		return "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case 4:
		return "\u0073\u0075\u006d"
	case 5:
		return "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c"
	case 6:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 7:
		return "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068"
	case 8:
		return "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068"
	case 9:
		return "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case 10:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068"
	case 11:
		return "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case 12:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073"
	case 13:
		return "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e"
	case 14:
		return "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l"
	case 15:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 16:
		return "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c"
	case 17:
		return "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e"
	case 18:
		return "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case 19:
		return "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c"
	case 20:
		return "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 21:
		return "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case 22:
		return "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 23:
		return "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 24:
		return "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case 25:
		return "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 26:
		return "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 27:
		return "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l"
	case 28:
		return "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 29:
		return "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e"
	case 30:
		return "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case 31:
		return "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e"
	case 32:
		return "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case 33:
		return "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 34:
		return "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case 35:
		return "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case 36:
		return "\u0074\u006f\u0064a\u0079"
	case 37:
		return "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case 38:
		return "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case 39:
		return "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case 40:
		return "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case 41:
		return "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case 42:
		return "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case 43:
		return "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case 44:
		return "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 45:
		return "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 46:
		return "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 47:
		return "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case 48:
		return "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case 49:
		return "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case 50:
		return "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case 51:
		return "\u0051\u0031"
	case 52:
		return "\u0051\u0032"
	case 53:
		return "\u0051\u0033"
	case 54:
		return "\u0051\u0034"
	case 55:
		return "\u004d\u0031"
	case 56:
		return "\u004d\u0032"
	case 57:
		return "\u004d\u0033"
	case 58:
		return "\u004d\u0034"
	case 59:
		return "\u004d\u0035"
	case 60:
		return "\u004d\u0036"
	case 61:
		return "\u004d\u0037"
	case 62:
		return "\u004d\u0038"
	case 63:
		return "\u004d\u0039"
	case 64:
		return "\u004d\u0031\u0030"
	case 65:
		return "\u004d\u0031\u0031"
	case 66:
		return "\u004d\u0031\u0032"
	}
	return ""
}

func (_fdffe *CT_InputCells) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgebb := range start.Attr {
		if _dgebb.Name.Local == "\u0072" {
			_feddd, _dgefe := _dgebb.Value, error(nil)
			if _dgefe != nil {
				return _dgefe
			}
			_fdffe.RAttr = _feddd
			continue
		}
		if _dgebb.Name.Local == "\u0064e\u006c\u0065\u0074\u0065\u0064" {
			_fdcgb, _bcfab := _eb.ParseBool(_dgebb.Value)
			if _bcfab != nil {
				return _bcfab
			}
			_fdffe.DeletedAttr = &_fdcgb
			continue
		}
		if _dgebb.Name.Local == "\u0075\u006e\u0064\u006f\u006e\u0065" {
			_dafgg, _aebad := _eb.ParseBool(_dgebb.Value)
			if _aebad != nil {
				return _aebad
			}
			_fdffe.UndoneAttr = &_dafgg
			continue
		}
		if _dgebb.Name.Local == "\u0076\u0061\u006c" {
			_aegcae, _bfaeg := _dgebb.Value, error(nil)
			if _bfaeg != nil {
				return _bfaeg
			}
			_fdffe.ValAttr = _aegcae
			continue
		}
		if _dgebb.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_cfadf, _daeeea := _eb.ParseUint(_dgebb.Value, 10, 32)
			if _daeeea != nil {
				return _daeeea
			}
			_dgcgd := uint32(_cfadf)
			_fdffe.NumFmtIdAttr = &_dgcgd
			continue
		}
	}
	for {
		_gfdfd, _decca := d.Token()
		if _decca != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049n\u0070u\u0074C\u0065\u006c\u006c\u0073\u003a\u0020\u0025s", _decca)
		}
		if _dgada, _bgacg := _gfdfd.(_b.EndElement); _bgacg && _dgada.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_WebPr and its children
func (_gace *CT_WebPr) Validate() error {
	return _gace.ValidateWithPath("\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072")
}

func (_agbgc *CT_Query) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcece := range start.Attr {
		if _bcece.Name.Local == "\u006d\u0064\u0078" {
			_ageff, _dcadb := _bcece.Value, error(nil)
			if _dcadb != nil {
				return _dcadb
			}
			_agbgc.MdxAttr = _ageff
			continue
		}
	}
_bcafd:
	for {
		_deccae, _ddaac := d.Token()
		if _ddaac != nil {
			return _ddaac
		}
		switch _bgecc := _deccae.(type) {
		case _b.StartElement:
			switch _bgecc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_agbgc.Tpls = NewCT_Tuples()
				if _adcbd := d.DecodeElement(_agbgc.Tpls, &_bgecc); _adcbd != nil {
					return _adcbd
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0020\u0025\u0076", _bgecc.Name)
				if _cdggd := d.Skip(); _cdggd != nil {
					return _cdggd
				}
			}
		case _b.EndElement:
			break _bcafd
		case _b.CharData:
		}
	}
	return nil
}

func (_abedge *CT_RElt) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_eeffb:
	for {
		_caagaa, _abgcf := d.Token()
		if _abgcf != nil {
			return _abgcf
		}
		switch _bdbea := _caagaa.(type) {
		case _b.StartElement:
			switch _bdbea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_abedge.RPr = NewCT_RPrElt()
				if _gfdef := d.DecodeElement(_abedge.RPr, &_bdbea); _gfdef != nil {
					return _gfdef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				if _bafb := d.DecodeElement(&_abedge.T, &_bdbea); _bafb != nil {
					return _bafb
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u0045\u006c\u0074\u0020\u0025\u0076", _bdbea.Name)
				if _ccebga := d.Skip(); _ccebga != nil {
					return _ccebga
				}
			}
		case _b.EndElement:
			break _eeffb
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_PivotHierarchies() *CT_PivotHierarchies { _aggg := &CT_PivotHierarchies{}; return _aggg }

type CT_MdxKPI struct {

	// Member Unique Name Index
	NAttr uint32

	// KPI Index
	NpAttr uint32

	// KPI Property
	PAttr ST_MdxKPIProperty
}

func (_bagbb *CT_MdxMemeberProp) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e"}, Value: _ec.Sprintf("\u0025\u0076", _bagbb.NAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0070"}, Value: _ec.Sprintf("\u0025\u0076", _bagbb.NpAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fccda *CT_ReviewedRevisions) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ggcfb := range start.Attr {
		if _ggcfb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gedef, _dgbade := _eb.ParseUint(_ggcfb.Value, 10, 32)
			if _dgbade != nil {
				return _dgbade
			}
			_gbdec := uint32(_gedef)
			_fccda.CountAttr = &_gbdec
			continue
		}
	}
_gbaded:
	for {
		_gcabd, _bgaae := d.Token()
		if _bgaae != nil {
			return _bgaae
		}
		switch _beabba := _gcabd.(type) {
		case _b.StartElement:
			switch _beabba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076\u0069\u0065\u0077\u0065\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076\u0069\u0065\u0077\u0065\u0064"}:
				_bdggg := NewCT_Reviewed()
				if _dbfbc := d.DecodeElement(_bdggg, &_beabba); _dbfbc != nil {
					return _dbfbc
				}
				_fccda.Reviewed = append(_fccda.Reviewed, _bdggg)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _beabba.Name)
				if _ffeceb := d.Skip(); _ffeceb != nil {
					return _ffeceb
				}
			}
		case _b.EndElement:
			break _gbaded
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SheetId and its children, prefixing error messages with path
func (_cddde *CT_SheetId) ValidateWithPath(path string) error { return nil }

func (_dfdcc *CT_RevisionConflict) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egacf := range start.Attr {
		if _egacf.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_afbaag, _aabcbe := _eb.ParseUint(_egacf.Value, 10, 32)
			if _aabcbe != nil {
				return _aabcbe
			}
			_cbffc := uint32(_afbaag)
			_dfdcc.SheetIdAttr = &_cbffc
			continue
		}
		if _egacf.Name.Local == "\u0072\u0049\u0064" {
			_gafed, _bfbfca := _eb.ParseUint(_egacf.Value, 10, 32)
			if _bfbfca != nil {
				return _bfbfca
			}
			_aedcg := uint32(_gafed)
			_dfdcc.RIdAttr = &_aedcg
			continue
		}
		if _egacf.Name.Local == "\u0075\u0061" {
			_dabec, _acegf := _eb.ParseBool(_egacf.Value)
			if _acegf != nil {
				return _acegf
			}
			_dfdcc.UaAttr = &_dabec
			continue
		}
		if _egacf.Name.Local == "\u0072\u0061" {
			_decbc, _fagbee := _eb.ParseBool(_egacf.Value)
			if _fagbee != nil {
				return _fagbee
			}
			_dfdcc.RaAttr = &_decbc
			continue
		}
	}
	for {
		_aeedf, _fbfga := d.Token()
		if _fbfga != nil {
			return _ec.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0052\u0065\u0076\u0069\u0073i\u006f\u006e\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u003a\u0020\u0025\u0073", _fbfga)
		}
		if _fdbcb, _baegfed := _aeedf.(_b.EndElement); _baegfed && _fdbcb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_acadbd ST_DataValidationOperator) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_acadbd.String(), start)
}

// ValidateWithPath validates the CT_Item and its children, prefixing error messages with path
func (_bagga *CT_Item) ValidateWithPath(path string) error {
	if _fgddbf := _bagga.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _fgddbf != nil {
		return _fgddbf
	}
	return nil
}

func NewCT_FontSize() *CT_FontSize { _fcdcc := &CT_FontSize{}; return _fcdcc }

// ValidateWithPath validates the CT_Control and its children, prefixing error messages with path
func (_dcff *CT_Control) ValidateWithPath(path string) error {
	if _dcff.ControlPr != nil {
		if _bcafa := _dcff.ControlPr.ValidateWithPath(path + "\u002f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072"); _bcafa != nil {
			return _bcafa
		}
	}
	return nil
}

func (_ee *AG_AutoFormat) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ad := range start.Attr {
		if _ad.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_df, _db := _eb.ParseUint(_ad.Value, 10, 32)
			if _db != nil {
				return _db
			}
			_fg := uint32(_df)
			_ee.AutoFormatIdAttr = &_fg
			continue
		}
		if _ad.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_gb, _bg := _eb.ParseBool(_ad.Value)
			if _bg != nil {
				return _bg
			}
			_ee.ApplyNumberFormatsAttr = &_gb
			continue
		}
		if _ad.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_bgb, _gc := _eb.ParseBool(_ad.Value)
			if _gc != nil {
				return _gc
			}
			_ee.ApplyBorderFormatsAttr = &_bgb
			continue
		}
		if _ad.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ae, _da := _eb.ParseBool(_ad.Value)
			if _da != nil {
				return _da
			}
			_ee.ApplyFontFormatsAttr = &_ae
			continue
		}
		if _ad.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_eg, _dg := _eb.ParseBool(_ad.Value)
			if _dg != nil {
				return _dg
			}
			_ee.ApplyPatternFormatsAttr = &_eg
			continue
		}
		if _ad.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_dbg, _aa := _eb.ParseBool(_ad.Value)
			if _aa != nil {
				return _aa
			}
			_ee.ApplyAlignmentFormatsAttr = &_dbg
			continue
		}
		if _ad.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_dd, _dc := _eb.ParseBool(_ad.Value)
			if _dc != nil {
				return _dc
			}
			_ee.ApplyWidthHeightFormatsAttr = &_dd
			continue
		}
	}
	for {
		_cd, _ef := d.Token()
		if _ef != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0041\u0047\u005f\u0041u\u0074o\u0046o\u0072\u006d\u0061\u0074\u003a\u0020\u0025s", _ef)
		}
		if _fa, _dag := _cd.(_b.EndElement); _dag && _fa.Name == start.Name {
			break
		}
	}
	return nil
}

func ParseStdlibTime(s string) (_g.Time, error) { return _g.Time{}, nil }

type CT_Field struct {

	// Field Index
	XAttr int32
}

type CT_CellWatches struct {

	// Cell Watch Item
	CellWatch []*CT_CellWatch
}

func (_fgeed *CT_TablePart) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _fgeed.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TableColumn and its children
func (_agcaf *CT_TableColumn) Validate() error {
	return _agcaf.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043o\u006c\u0075\u006d\u006e")
}

// Validate validates the CT_CustomFilters and its children
func (_affa *CT_CustomFilters) Validate() error {
	return _affa.ValidateWithPath("\u0043\u0054_\u0043\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073")
}

func (_afbda *ST_DateTimeGrouping) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_afbda = 0
	case "\u0079\u0065\u0061\u0072":
		*_afbda = 1
	case "\u006d\u006f\u006et\u0068":
		*_afbda = 2
	case "\u0064\u0061\u0079":
		*_afbda = 3
	case "\u0068\u006f\u0075\u0072":
		*_afbda = 4
	case "\u006d\u0069\u006e\u0075\u0074\u0065":
		*_afbda = 5
	case "\u0073\u0065\u0063\u006f\u006e\u0064":
		*_afbda = 6
	}
	return nil
}

// Validate validates the CT_SmartTagPr and its children
func (_bfeaf *CT_SmartTagPr) Validate() error {
	return _bfeaf.ValidateWithPath("\u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072")
}

// ValidateWithPath validates the CT_SheetData and its children, prefixing error messages with path
func (_gaadd *CT_SheetData) ValidateWithPath(path string) error {
	for _bagacc, _bgdga := range _gaadd.Row {
		if _eecgf := _bgdga.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0052\u006f\u0077\u005b\u0025\u0064\u005d", path, _bagacc)); _eecgf != nil {
			return _eecgf
		}
	}
	return nil
}

type CT_InputCells struct {

	// Reference
	RAttr string

	// Deleted
	DeletedAttr *bool

	// Undone
	UndoneAttr *bool

	// Value
	ValAttr string

	// Number Format Id
	NumFmtIdAttr *uint32
}

// ValidateWithPath validates the CT_CalculatedMembers and its children, prefixing error messages with path
func (_caagc *CT_CalculatedMembers) ValidateWithPath(path string) error {
	for _fdfg, _dbbe := range _caagc.CalculatedMember {
		if _egb := _dbbe.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002fCa\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072\u005b\u0025\u0064\u005d", path, _fdfg)); _egb != nil {
			return _egb
		}
	}
	return nil
}

type CT_RevisionCustomView struct {

	// GUID
	GuidAttr string

	// User Action
	ActionAttr ST_RevisionAction
}

// ValidateWithPath validates the CT_ProtectedRanges and its children, prefixing error messages with path
func (_ecbaac *CT_ProtectedRanges) ValidateWithPath(path string) error {
	for _ddcgdd, _acefd := range _ecbaac.ProtectedRange {
		if _ffcgf := _acefd.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0050\u0072ot\u0065c\u0074\u0065\u0064\u0052\u0061n\u0067\u0065\u005b\u0025\u0064\u005d", path, _ddcgdd)); _ffcgf != nil {
			return _ffcgf
		}
	}
	return nil
}

type CT_CustomProperty struct {

	// Custom Property Name
	NameAttr string
	IdAttr   string
}

func (_ebbgg ST_WebSourceType) String() string {
	switch _ebbgg {
	case 0:
		return ""
	case 1:
		return "\u0073\u0068\u0065e\u0074"
	case 2:
		return "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a"
	case 3:
		return "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"
	case 4:
		return "\u0072\u0061\u006eg\u0065"
	case 5:
		return "\u0063\u0068\u0061r\u0074"
	case 6:
		return "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065"
	case 7:
		return "\u0071\u0075\u0065r\u0079"
	case 8:
		return "\u006c\u0061\u0062e\u006c"
	}
	return ""
}

func (_cbfdb *CT_Members) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbfdb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_cbfdb.CountAttr)})
	}
	if _cbfdb.LevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u0076e\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_cbfdb.LevelAttr)})
	}
	e.EncodeToken(start)
	_acaaa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006d\u0065\u006d\u0062\u0065r"}}
	for _, _adcaf := range _cbfdb.Member {
		e.EncodeElement(_adcaf, _acaaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_PrintOptions() *CT_PrintOptions { _dbeeb := &CT_PrintOptions{}; return _dbeeb }

// ValidateWithPath validates the CT_ChartFormats and its children, prefixing error messages with path
func (_dbfcc *CT_ChartFormats) ValidateWithPath(path string) error {
	for _fbeag, _acag := range _dbfcc.ChartFormat {
		if _aba := _acag.ValidateWithPath(_ec.Sprintf("\u0025s\u002fC\u0068\u0061\u0072\u0074\u0046o\u0072\u006da\u0074\u005b\u0025\u0064\u005d", path, _fbeag)); _aba != nil {
			return _aba
		}
	}
	return nil
}

func (_cabbea ST_Type) ValidateWithPath(path string) error {
	switch _cabbea {
	case 0, 1, 2, 3, 4:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cabbea))
	}
	return nil
}

// Validate validates the CT_Scenarios and its children
func (_bbfaf *CT_Scenarios) Validate() error {
	return _bbfaf.ValidateWithPath("\u0043\u0054\u005fS\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073")
}

type CT_Member struct {

	// Hidden Item Name
	NameAttr string
}

// Validate validates the CT_SheetView and its children
func (_daded *CT_SheetView) Validate() error {
	return _daded.ValidateWithPath("\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077")
}

func (_gbfgb ST_RefMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cegbe := _b.Attr{}
	_cegbe.Name = name
	switch _gbfgb {
	case ST_RefModeUnset:
		_cegbe.Value = ""
	case ST_RefModeA1:
		_cegbe.Value = "\u0041\u0031"
	case ST_RefModeR1C1:
		_cegbe.Value = "\u0052\u0031\u0043\u0031"
	}
	return _cegbe, nil
}

func (_bgffc ST_CellFormulaType) ValidateWithPath(path string) error {
	switch _bgffc {
	case 0, 1, 2, 3, 4:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bgffc))
	}
	return nil
}

func (_abfacf ST_TextHAlign) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_abfacf.String(), start)
}

const (
	ST_TextVAlignUnset       ST_TextVAlign = 0
	ST_TextVAlignTop         ST_TextVAlign = 1
	ST_TextVAlignCenter      ST_TextVAlign = 2
	ST_TextVAlignBottom      ST_TextVAlign = 3
	ST_TextVAlignJustify     ST_TextVAlign = 4
	ST_TextVAlignDistributed ST_TextVAlign = 5
)

func (_dfgd *CT_CalculatedMember) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bfb := range start.Attr {
		if _bfb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ebec, _fgae := _bfb.Value, error(nil)
			if _fgae != nil {
				return _fgae
			}
			_dfgd.NameAttr = _ebec
			continue
		}
		if _bfb.Name.Local == "\u006d\u0064\u0078" {
			_gfbc, _afab := _bfb.Value, error(nil)
			if _afab != nil {
				return _afab
			}
			_dfgd.MdxAttr = _gfbc
			continue
		}
		if _bfb.Name.Local == "\u006d\u0065\u006d\u0062\u0065\u0072\u004e\u0061\u006d\u0065" {
			_dfbf, _ecfa := _bfb.Value, error(nil)
			if _ecfa != nil {
				return _ecfa
			}
			_dfgd.MemberNameAttr = &_dfbf
			continue
		}
		if _bfb.Name.Local == "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y" {
			_ccg, _gbg := _bfb.Value, error(nil)
			if _gbg != nil {
				return _gbg
			}
			_dfgd.HierarchyAttr = &_ccg
			continue
		}
		if _bfb.Name.Local == "\u0070\u0061\u0072\u0065\u006e\u0074" {
			_ecff, _gdbc := _bfb.Value, error(nil)
			if _gdbc != nil {
				return _gdbc
			}
			_dfgd.ParentAttr = &_ecff
			continue
		}
		if _bfb.Name.Local == "\u0073\u006f\u006c\u0076\u0065\u004f\u0072\u0064\u0065\u0072" {
			_aga, _cfd := _eb.ParseInt(_bfb.Value, 10, 32)
			if _cfd != nil {
				return _cfd
			}
			_ebfe := int32(_aga)
			_dfgd.SolveOrderAttr = &_ebfe
			continue
		}
		if _bfb.Name.Local == "\u0073\u0065\u0074" {
			_ecda, _bae := _eb.ParseBool(_bfb.Value)
			if _bae != nil {
				return _bae
			}
			_dfgd.SetAttr = &_ecda
			continue
		}
	}
_feeg:
	for {
		_efga, _fccd := d.Token()
		if _fccd != nil {
			return _fccd
		}
		switch _cccd := _efga.(type) {
		case _b.StartElement:
			switch _cccd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dfgd.ExtLst = NewCT_ExtensionList()
				if _gbfe := d.DecodeElement(_dfgd.ExtLst, &_cccd); _gbfe != nil {
					return _gbfe
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061te\u0064\u004d\u0065\u006d\u0062\u0065\u0072\u0020\u0025\u0076", _cccd.Name)
				if _gecd := d.Skip(); _gecd != nil {
					return _gecd
				}
			}
		case _b.EndElement:
			break _feeg
		case _b.CharData:
		}
	}
	return nil
}

func (_acdbd ST_Pane) Validate() error { return _acdbd.ValidateWithPath("") }

type CT_Tuple struct {

	// Field Index
	FldAttr *uint32

	// Hierarchy Index
	HierAttr *uint32

	// Item Index
	ItemAttr uint32
}

func (_egcbbe *CT_PivotHierarchy) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _egcbbe.OutlineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_egcbbe.OutlineAttr))})
	}
	if _egcbbe.MultipleItemSelectionAllowedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_egcbbe.MultipleItemSelectionAllowedAttr))})
	}
	if _egcbbe.SubtotalTopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_egcbbe.SubtotalTopAttr))})
	}
	if _egcbbe.ShowInFieldListAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u0049\u006e\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_egcbbe.ShowInFieldListAttr))})
	}
	if _egcbbe.DragToRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_egcbbe.DragToRowAttr))})
	}
	if _egcbbe.DragToColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_egcbbe.DragToColAttr))})
	}
	if _egcbbe.DragToPageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_egcbbe.DragToPageAttr))})
	}
	if _egcbbe.DragToDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_egcbbe.DragToDataAttr))})
	}
	if _egcbbe.DragOffAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064r\u0061\u0067\u004f\u0066\u0066"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_egcbbe.DragOffAttr))})
	}
	if _egcbbe.IncludeNewItemsInFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_egcbbe.IncludeNewItemsInFilterAttr))})
	}
	if _egcbbe.CaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_egcbbe.CaptionAttr)})
	}
	e.EncodeToken(start)
	if _egcbbe.Mps != nil {
		_ffbfe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0070\u0073"}}
		e.EncodeElement(_egcbbe.Mps, _ffbfe)
	}
	if _egcbbe.Members != nil {
		_gcgged := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0065\u006d\u0062\u0065\u0072\u0073"}}
		for _, _dageb := range _egcbbe.Members {
			e.EncodeElement(_dageb, _gcgged)
		}
	}
	if _egcbbe.ExtLst != nil {
		_gdcag := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_egcbbe.ExtLst, _gdcag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bgbda *CalcChain) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003ac\u0061\u006c\u0063\u0043\u0068\u0061\u0069\u006e"
	return _bgbda.CT_CalcChain.MarshalXML(e, start)
}

func (_cagaa *CT_MdxMetadata) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cagaa.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_cagaa.CountAttr)})
	}
	e.EncodeToken(start)
	_fcbbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0064\u0078"}}
	for _, _bcbde := range _cagaa.Mdx {
		e.EncodeElement(_bcbde, _fcbbc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Parameters and its children, prefixing error messages with path
func (_adadfe *CT_Parameters) ValidateWithPath(path string) error {
	for _gdcaef, _aecac := range _adadfe.Parameter {
		if _gedbgc := _aecac.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u0050\u0061\u0072a\u006d\u0065\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _gdcaef)); _gedbgc != nil {
			return _gedbgc
		}
	}
	return nil
}

func (_aacga *CT_Stylesheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _aacga.NumFmts != nil {
		_bgccb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e\u0075\u006d\u0046\u006d\u0074\u0073"}}
		e.EncodeElement(_aacga.NumFmts, _bgccb)
	}
	if _aacga.Fonts != nil {
		_edafc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u006e\u0074\u0073"}}
		e.EncodeElement(_aacga.Fonts, _edafc)
	}
	if _aacga.Fills != nil {
		_abcdff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u006c\u0073"}}
		e.EncodeElement(_aacga.Fills, _abcdff)
	}
	if _aacga.Borders != nil {
		_bedbb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062\u006f\u0072\u0064\u0065\u0072\u0073"}}
		e.EncodeElement(_aacga.Borders, _bedbb)
	}
	if _aacga.CellStyleXfs != nil {
		_dddbfa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}}
		e.EncodeElement(_aacga.CellStyleXfs, _dddbfa)
	}
	if _aacga.CellXfs != nil {
		_aged := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0058\u0066\u0073"}}
		e.EncodeElement(_aacga.CellXfs, _aged)
	}
	if _aacga.CellStyles != nil {
		_aabadg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}}
		e.EncodeElement(_aacga.CellStyles, _aabadg)
	}
	if _aacga.Dxfs != nil {
		_cafgad := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0064\u0078\u0066\u0073"}}
		e.EncodeElement(_aacga.Dxfs, _cafgad)
	}
	if _aacga.TableStyles != nil {
		_egddad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053t\u0079\u006c\u0065\u0073"}}
		e.EncodeElement(_aacga.TableStyles, _egddad)
	}
	if _aacga.Colors != nil {
		_gfcbgcb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u006f\u006c\u006f\u0072s"}}
		e.EncodeElement(_aacga.Colors, _gfcbgcb)
	}
	if _aacga.ExtLst != nil {
		_cegcea := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_aacga.ExtLst, _cegcea)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bgafe *CT_RevisionCustomView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bgafe.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_bgafe.ActionAttr = ST_RevisionAction(1)
	for _, _edegbab := range start.Attr {
		if _edegbab.Name.Local == "\u0067\u0075\u0069\u0064" {
			_bffcg, _cbadb := _edegbab.Value, error(nil)
			if _cbadb != nil {
				return _cbadb
			}
			_bgafe.GuidAttr = _bffcg
			continue
		}
		if _edegbab.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_bgafe.ActionAttr.UnmarshalXMLAttr(_edegbab)
			continue
		}
	}
	for {
		_aafd, _bfgcd := d.Token()
		if _bfgcd != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0043u\u0073\u0074\u006f\u006d\u0056\u0069\u0065w\u003a\u0020\u0025\u0073", _bfgcd)
		}
		if _fgcef, _gbbec := _aafd.(_b.EndElement); _gbbec && _fgcef.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dgade *CT_Hyperlinks) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_eccca:
	for {
		_daeea, _gccgc := d.Token()
		if _gccgc != nil {
			return _gccgc
		}
		switch _gaacg := _daeea.(type) {
		case _b.StartElement:
			switch _gaacg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068y\u0070\u0065\u0072\u006c\u0069\u006ek"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068y\u0070\u0065\u0072\u006c\u0069\u006ek"}:
				_bbge := NewCT_Hyperlink()
				if _ecdb := d.DecodeElement(_bbge, &_gaacg); _ecdb != nil {
					return _ecdb
				}
				_dgade.Hyperlink = append(_dgade.Hyperlink, _bbge)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048y\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073 \u0025\u0076", _gaacg.Name)
				if _ecaeg := d.Skip(); _ecaeg != nil {
					return _ecaeg
				}
			}
		case _b.EndElement:
			break _eccca
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_SmartTagType() *CT_SmartTagType { _ddadga := &CT_SmartTagType{}; return _ddadga }

func (_aefbge ST_rwColActionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_aefbge.String(), start)
}

func (_dagaa ST_TableStyleType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dagaa.String(), start)
}

func (_abcbc *CT_VolTypes) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_gffdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0076\u006f\u006c\u0054\u0079\u0070\u0065"}}
	for _, _fcceee := range _abcbc.VolType {
		e.EncodeElement(_fcceee, _gffdg)
	}
	if _abcbc.ExtLst != nil {
		_fabb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_abcbc.ExtLst, _fabb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_ccef *CT_DdeValues) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ccef.RowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0077\u0073"}, Value: _ec.Sprintf("\u0025\u0076", *_ccef.RowsAttr)})
	}
	if _ccef.ColsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006c\u0073"}, Value: _ec.Sprintf("\u0025\u0076", *_ccef.ColsAttr)})
	}
	e.EncodeToken(start)
	_fggc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0076\u0061\u006c\u0075\u0065"}}
	for _, _abggc := range _ccef.Value {
		e.EncodeElement(_abggc, _fggc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_pivotTableDefinition struct {

	// Name
	NameAttr string

	// PivotCache Definition Id
	CacheIdAttr uint32

	// Data On Rows
	DataOnRowsAttr *bool

	// Default Data Field Position
	DataPositionAttr *uint32

	// Data Field Header Name
	DataCaptionAttr string

	// Grand Totals Caption
	GrandTotalCaptionAttr *string

	// Error Caption
	ErrorCaptionAttr *string

	// Show Error
	ShowErrorAttr *bool

	// Caption for Missing Values
	MissingCaptionAttr *string

	// Show Missing
	ShowMissingAttr *bool

	// Page Header Style Name
	PageStyleAttr *string

	// Table Style Name
	PivotTableStyleAttr *string

	// Vacated Style
	VacatedStyleAttr *string

	// PivotTable Custom String
	TagAttr *string

	// PivotTable Last Updated Version
	UpdatedVersionAttr *uint8

	// Minimum Refreshable Version
	MinRefreshableVersionAttr *uint8

	// Asterisk Totals
	AsteriskTotalsAttr *bool

	// Show Item Names
	ShowItemsAttr *bool

	// Allow Edit Data
	EditDataAttr *bool

	// Disable Field List
	DisableFieldListAttr *bool

	// Show Calculated Members
	ShowCalcMbrsAttr *bool

	// Total Visual Data
	VisualTotalsAttr *bool

	// Show Multiple Labels
	ShowMultipleLabelAttr *bool

	// Show Drop Down
	ShowDataDropDownAttr *bool

	// Show Expand Collapse
	ShowDrillAttr *bool

	// Print Drill Indicators
	PrintDrillAttr *bool

	// Show Member Property ToolTips
	ShowMemberPropertyTipsAttr *bool

	// Show ToolTips on Data
	ShowDataTipsAttr *bool

	// Enable PivotTable Wizard
	EnableWizardAttr *bool

	// Enable Drill Down
	EnableDrillAttr *bool

	// Enable Field Properties
	EnableFieldPropertiesAttr *bool

	// Preserve Formatting
	PreserveFormattingAttr *bool

	// Auto Formatting
	UseAutoFormattingAttr *bool

	// Page Wrap
	PageWrapAttr *uint32

	// Page Over Then Down
	PageOverThenDownAttr *bool

	// Subtotal Hidden Items
	SubtotalHiddenItemsAttr *bool

	// Row Grand Totals
	RowGrandTotalsAttr *bool

	// Grand Totals On Columns
	ColGrandTotalsAttr *bool

	// Field Print Titles
	FieldPrintTitlesAttr *bool

	// Item Print Titles
	ItemPrintTitlesAttr *bool

	// Merge Titles
	MergeItemAttr *bool

	// Show Drop Zones
	ShowDropZonesAttr *bool

	// PivotCache Created Version
	CreatedVersionAttr *uint8

	// Indentation for Compact Axis
	IndentAttr *uint32

	// Show Empty Row
	ShowEmptyRowAttr *bool

	// Show Empty Column
	ShowEmptyColAttr *bool

	// Show Field Headers
	ShowHeadersAttr *bool

	// Compact New Fields
	CompactAttr *bool

	// Outline New Fields
	OutlineAttr *bool

	// Outline Data Fields
	OutlineDataAttr *bool

	// Compact Data
	CompactDataAttr *bool

	// Data Fields Published
	PublishedAttr *bool

	// Enable Drop Zones
	GridDropZonesAttr *bool

	// Stop Immersive UI
	ImmersiveAttr *bool

	// Multiple Field Filters
	MultipleFieldFiltersAttr *bool

	// Chart Format Id
	ChartFormatAttr *uint32

	// Row Header Caption
	RowHeaderCaptionAttr *string

	// Column Header Caption
	ColHeaderCaptionAttr *string

	// Default Sort Order
	FieldListSortAscendingAttr *bool

	// MDX Subqueries Supported
	MdxSubqueriesAttr *bool

	// Custom List AutoSort
	CustomListSortAttr *bool

	// PivotTable Location
	Location *CT_Location

	// PivotTable Fields
	PivotFields *CT_PivotFields

	// Row Fields
	RowFields *CT_RowFields

	// Row Items
	RowItems *CT_rowItems

	// Column Fields
	ColFields *CT_ColFields

	// Column Items
	ColItems *CT_colItems

	// Page Field Items
	PageFields *CT_PageFields

	// Data Fields
	DataFields *CT_DataFields

	// PivotTable Formats
	Formats *CT_Formats

	// Conditional Formats
	ConditionalFormats *CT_ConditionalFormats

	// PivotChart Formats
	ChartFormats *CT_ChartFormats

	// PivotTable OLAP Hierarchies
	PivotHierarchies *CT_PivotHierarchies

	// PivotTable Style
	PivotTableStyleInfo *CT_PivotTableStyle

	// Filters
	Filters *CT_PivotFilters

	// Row OLAP Hierarchy References
	RowHierarchiesUsage *CT_RowHierarchiesUsage

	// Column OLAP Hierarchy References
	ColHierarchiesUsage *CT_ColHierarchiesUsage

	// Future Feature Data Storage Area
	ExtLst                      *CT_ExtensionList
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

// Validate validates the CT_DataField and its children
func (_eeef *CT_DataField) Validate() error {
	return _eeef.ValidateWithPath("\u0043\u0054\u005fD\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064")
}

func (_aecde *CT_TextPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fgbdg := range start.Attr {
		if _fgbdg.Name.Local == "\u0074h\u006f\u0075\u0073\u0061\u006e\u0064s" {
			_acfeb, _ccdbb := _fgbdg.Value, error(nil)
			if _ccdbb != nil {
				return _ccdbb
			}
			_aecde.ThousandsAttr = &_acfeb
			continue
		}
		if _fgbdg.Name.Local == "\u0074\u0061\u0062" {
			_gdffgb, _dfadb := _eb.ParseBool(_fgbdg.Value)
			if _dfadb != nil {
				return _dfadb
			}
			_aecde.TabAttr = &_gdffgb
			continue
		}
		if _fgbdg.Name.Local == "\u0066\u0069\u006c\u0065\u0054\u0079\u0070\u0065" {
			_aecde.FileTypeAttr.UnmarshalXMLAttr(_fgbdg)
			continue
		}
		if _fgbdg.Name.Local == "\u0073\u0070\u0061c\u0065" {
			_cfaebf, _gfdgd := _eb.ParseBool(_fgbdg.Value)
			if _gfdgd != nil {
				return _gfdgd
			}
			_aecde.SpaceAttr = &_cfaebf
			continue
		}
		if _fgbdg.Name.Local == "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074" {
			_dgcac, _dagae := _fgbdg.Value, error(nil)
			if _dagae != nil {
				return _dagae
			}
			_aecde.CharacterSetAttr = &_dgcac
			continue
		}
		if _fgbdg.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065" {
			_aedbg, _baggdb := _fgbdg.Value, error(nil)
			if _baggdb != nil {
				return _baggdb
			}
			_aecde.SourceFileAttr = &_aedbg
			continue
		}
		if _fgbdg.Name.Local == "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065d" {
			_dfgeed, _badgg := _eb.ParseBool(_fgbdg.Value)
			if _badgg != nil {
				return _badgg
			}
			_aecde.DelimitedAttr = &_dfgeed
			continue
		}
		if _fgbdg.Name.Local == "\u0064e\u0063\u0069\u006d\u0061\u006c" {
			_gfdaf, _ffddfac := _fgbdg.Value, error(nil)
			if _ffddfac != nil {
				return _ffddfac
			}
			_aecde.DecimalAttr = &_gfdaf
			continue
		}
		if _fgbdg.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074" {
			_ggebd, _daacaa := _eb.ParseBool(_fgbdg.Value)
			if _daacaa != nil {
				return _daacaa
			}
			_aecde.PromptAttr = &_ggebd
			continue
		}
		if _fgbdg.Name.Local == "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065" {
			_defce, _dafded := _eb.ParseUint(_fgbdg.Value, 10, 32)
			if _dafded != nil {
				return _dafded
			}
			_ggfeae := uint32(_defce)
			_aecde.CodePageAttr = &_ggfeae
			continue
		}
		if _fgbdg.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077" {
			_gadag, _gafgc := _eb.ParseUint(_fgbdg.Value, 10, 32)
			if _gafgc != nil {
				return _gafgc
			}
			_bbgba := uint32(_gadag)
			_aecde.FirstRowAttr = &_bbgba
			continue
		}
		if _fgbdg.Name.Local == "\u0063\u006f\u006dm\u0061" {
			_cggfd, _efcaee := _eb.ParseBool(_fgbdg.Value)
			if _efcaee != nil {
				return _efcaee
			}
			_aecde.CommaAttr = &_cggfd
			continue
		}
		if _fgbdg.Name.Local == "\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn" {
			_ebagd, _fdbfg := _eb.ParseBool(_fgbdg.Value)
			if _fdbfg != nil {
				return _fdbfg
			}
			_aecde.SemicolonAttr = &_ebagd
			continue
		}
		if _fgbdg.Name.Local == "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065" {
			_cgcea, _eadad := _eb.ParseBool(_fgbdg.Value)
			if _eadad != nil {
				return _eadad
			}
			_aecde.ConsecutiveAttr = &_cgcea
			continue
		}
		if _fgbdg.Name.Local == "\u0071u\u0061\u006c\u0069\u0066\u0069\u0065r" {
			_aecde.QualifierAttr.UnmarshalXMLAttr(_fgbdg)
			continue
		}
		if _fgbdg.Name.Local == "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065r" {
			_egbaf, _ccfgca := _fgbdg.Value, error(nil)
			if _ccfgca != nil {
				return _ccfgca
			}
			_aecde.DelimiterAttr = &_egbaf
			continue
		}
	}
_bdgbc:
	for {
		_fagea, _edebb := d.Token()
		if _edebb != nil {
			return _edebb
		}
		switch _bcbdc := _fagea.(type) {
		case _b.StartElement:
			switch _bcbdc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_aecde.TextFields = NewCT_TextFields()
				if _accca := d.DecodeElement(_aecde.TextFields, &_bcbdc); _accca != nil {
					return _accca
				}
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0054\u0065\u0078t\u0050\u0072 \u0025\u0076", _bcbdc.Name)
				if _agfbg := d.Skip(); _agfbg != nil {
					return _agfbg
				}
			}
		case _b.EndElement:
			break _bdgbc
		case _b.CharData:
		}
	}
	return nil
}

func (_ddcac *ExternalLink) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006da\u003ae\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b"
	return _ddcac.CT_ExternalLink.MarshalXML(e, start)
}

func (_fgdged ST_GradientType) String() string {
	switch _fgdged {
	case 0:
		return ""
	case 1:
		return "\u006c\u0069\u006e\u0065\u0061\u0072"
	case 2:
		return "\u0070\u0061\u0074\u0068"
	}
	return ""
}

func (_bdafef ST_HtmlFmt) Validate() error { return _bdafef.ValidateWithPath("") }

func (_cedbd ST_VerticalAlignment) Validate() error { return _cedbd.ValidateWithPath("") }

type CT_OleItems struct {

	// Object Link Item
	OleItem []*CT_OleItem
}

type CT_NumFmt struct {

	// Number Format Id
	NumFmtIdAttr uint32

	// Number Format Code
	FormatCodeAttr string
}

func (_caefe *CT_DrawingHF) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _caefe.IdAttr)})
	if _caefe.LhoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0068\u006f"}, Value: _ec.Sprintf("\u0025\u0076", *_caefe.LhoAttr)})
	}
	if _caefe.LheAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0068\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_caefe.LheAttr)})
	}
	if _caefe.LhfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0068\u0066"}, Value: _ec.Sprintf("\u0025\u0076", *_caefe.LhfAttr)})
	}
	if _caefe.ChoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u006f"}, Value: _ec.Sprintf("\u0025\u0076", *_caefe.ChoAttr)})
	}
	if _caefe.CheAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_caefe.CheAttr)})
	}
	if _caefe.ChfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u0066"}, Value: _ec.Sprintf("\u0025\u0076", *_caefe.ChfAttr)})
	}
	if _caefe.RhoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0068\u006f"}, Value: _ec.Sprintf("\u0025\u0076", *_caefe.RhoAttr)})
	}
	if _caefe.RheAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0068\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_caefe.RheAttr)})
	}
	if _caefe.RhfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0068\u0066"}, Value: _ec.Sprintf("\u0025\u0076", *_caefe.RhfAttr)})
	}
	if _caefe.LfoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0066\u006f"}, Value: _ec.Sprintf("\u0025\u0076", *_caefe.LfoAttr)})
	}
	if _caefe.LfeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0066\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_caefe.LfeAttr)})
	}
	if _caefe.LffAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0066\u0066"}, Value: _ec.Sprintf("\u0025\u0076", *_caefe.LffAttr)})
	}
	if _caefe.CfoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0066\u006f"}, Value: _ec.Sprintf("\u0025\u0076", *_caefe.CfoAttr)})
	}
	if _caefe.CfeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0066\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_caefe.CfeAttr)})
	}
	if _caefe.CffAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0066\u0066"}, Value: _ec.Sprintf("\u0025\u0076", *_caefe.CffAttr)})
	}
	if _caefe.RfoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0066\u006f"}, Value: _ec.Sprintf("\u0025\u0076", *_caefe.RfoAttr)})
	}
	if _caefe.RfeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0066\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_caefe.RfeAttr)})
	}
	if _caefe.RffAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0066\u0066"}, Value: _ec.Sprintf("\u0025\u0076", *_caefe.RffAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bedeeb ST_CellComments) String() string {
	switch _bedeeb {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064"
	case 3:
		return "\u0061\u0074\u0045n\u0064"
	}
	return ""
}

// ValidateWithPath validates the CT_MRUColors and its children, prefixing error messages with path
func (_ceff *CT_MRUColors) ValidateWithPath(path string) error {
	for _acbe, _bcccbc := range _ceff.Color {
		if _fagbcb := _bcccbc.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002fC\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _acbe)); _fagbcb != nil {
			return _fagbcb
		}
	}
	return nil
}

func (_eaagc *CT_PageSetUpPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eaagc.AutoPageBreaksAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_eaagc.AutoPageBreaksAttr))})
	}
	if _eaagc.FitToPageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_eaagc.FitToPageAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_afcba ST_ItemType) String() string {
	switch _afcba {
	case 0:
		return ""
	case 1:
		return "\u0064\u0061\u0074\u0061"
	case 2:
		return "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case 3:
		return "\u0073\u0075\u006d"
	case 4:
		return "\u0063\u006f\u0075\u006e\u0074\u0041"
	case 5:
		return "\u0061\u0076\u0067"
	case 6:
		return "\u006d\u0061\u0078"
	case 7:
		return "\u006d\u0069\u006e"
	case 8:
		return "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case 9:
		return "\u0063\u006f\u0075n\u0074"
	case 10:
		return "\u0073\u0074\u0064\u0044\u0065\u0076"
	case 11:
		return "\u0073t\u0064\u0044\u0065\u0076\u0050"
	case 12:
		return "\u0076\u0061\u0072"
	case 13:
		return "\u0076\u0061\u0072\u0050"
	case 14:
		return "\u0067\u0072\u0061n\u0064"
	case 15:
		return "\u0062\u006c\u0061n\u006b"
	}
	return ""
}

// Validate validates the CT_CalcCell and its children
func (_feba *CT_CalcCell) Validate() error {
	return _feba.ValidateWithPath("C\u0054\u005f\u0043\u0061\u006c\u0063\u0043\u0065\u006c\u006c")
}

type CT_WebPublishObject struct {

	// Id
	IdAttr uint32

	// Div Id
	DivIdAttr string

	// Source Object
	SourceObjectAttr *string

	// Destination File
	DestinationFileAttr string

	// Title
	TitleAttr *string

	// Auto Republish
	AutoRepublishAttr *bool
}

const (
	ST_rwColActionTypeUnset     ST_rwColActionType = 0
	ST_rwColActionTypeInsertRow ST_rwColActionType = 1
	ST_rwColActionTypeDeleteRow ST_rwColActionType = 2
	ST_rwColActionTypeInsertCol ST_rwColActionType = 3
	ST_rwColActionTypeDeleteCol ST_rwColActionType = 4
)

func (_cefea *CT_FutureMetadataBlock) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gbfd:
	for {
		_ceaedc, _ddabe := d.Token()
		if _ddabe != nil {
			return _ddabe
		}
		switch _bbdadc := _ceaedc.(type) {
		case _b.StartElement:
			switch _bbdadc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cefea.ExtLst = NewCT_ExtensionList()
				if _ddaeb := d.DecodeElement(_cefea.ExtLst, &_bbdadc); _ddaeb != nil {
					return _ddaeb
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u0075\u0074\u0075r\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b\u0020\u0025\u0076", _bbdadc.Name)
				if _bbede := d.Skip(); _bbede != nil {
					return _bbede
				}
			}
		case _b.EndElement:
			break _gbfd
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CalculatedMember and its children, prefixing error messages with path
func (_bdda *CT_CalculatedMember) ValidateWithPath(path string) error {
	if _bdda.ExtLst != nil {
		if _gcae := _bdda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gcae != nil {
			return _gcae
		}
	}
	return nil
}

func (_dgddf *CT_RevisionInsertSheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _dgddf.SheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _dgddf.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0065\u0065\u0074\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", _dgddf.SheetPositionAttr)})
	if _dgddf.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_dgddf.RIdAttr)})
	}
	if _dgddf.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dgddf.UaAttr))})
	}
	if _dgddf.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dgddf.RaAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_FilterColumn and its children
func (_ccbdf *CT_FilterColumn) Validate() error {
	return _ccbdf.ValidateWithPath("\u0043T\u005fF\u0069\u006c\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e")
}

// Validate validates the CT_SheetPr and its children
func (_bebff *CT_SheetPr) Validate() error {
	return _bebff.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0050\u0072")
}

// ValidateWithPath validates the CT_DefinedNames and its children, prefixing error messages with path
func (_cdaf *CT_DefinedNames) ValidateWithPath(path string) error {
	for _cggb, _cgbdd := range _cdaf.DefinedName {
		if _dcgbb := _cgbdd.ValidateWithPath(_ec.Sprintf("\u0025s\u002fD\u0065\u0066\u0069\u006e\u0065d\u004e\u0061m\u0065\u005b\u0025\u0064\u005d", path, _cggb)); _dcgbb != nil {
			return _dcgbb
		}
	}
	return nil
}

// Validate validates the CT_ExternalLinkChoice and its children
func (_deccd *CT_ExternalLinkChoice) Validate() error {
	return _deccd.ValidateWithPath("C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u004c\u0069\u006ek\u0043\u0068\u006f\u0069\u0063\u0065")
}

func (_dabaga *CT_FunctionGroup) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dabaga.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_dabaga.NameAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_faegac *ST_SmartTagShow) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_faegac = 0
	case "\u0061\u006c\u006c":
		*_faegac = 1
	case "\u006e\u006f\u006e\u0065":
		*_faegac = 2
	case "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
		*_faegac = 3
	}
	return nil
}

// ValidateWithPath validates the CT_MdxMemeberProp and its children, prefixing error messages with path
func (_edcaf *CT_MdxMemeberProp) ValidateWithPath(path string) error { return nil }

type CT_MeasureDimensionMap struct {

	// Measure Group Id
	MeasureGroupAttr *uint32

	// Dimension Id
	DimensionAttr *uint32
}

type CT_FieldUsage struct {

	// Field Index
	XAttr int32
}

func (_cdgbd ST_CfType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cdgbd.String(), start)
}

// ValidateWithPath validates the CT_SharedUser and its children, prefixing error messages with path
func (_bfbagb *CT_SharedUser) ValidateWithPath(path string) error {
	if !_bb.ST_GuidPatternRe.MatchString(_bfbagb.GuidAttr) {
		return _ec.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _bb.ST_GuidPatternRe, _bfbagb.GuidAttr)
	}
	if _bfbagb.ExtLst != nil {
		if _ccfgc := _bfbagb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ccfgc != nil {
			return _ccfgc
		}
	}
	return nil
}

type CT_TableColumn struct {

	// Table Field Id
	IdAttr uint32

	// Unique Name
	UniqueNameAttr *string

	// Column name
	NameAttr string

	// Totals Row Function
	TotalsRowFunctionAttr ST_TotalsRowFunction

	// Totals Row Label
	TotalsRowLabelAttr *string

	// Query Table Field Id
	QueryTableFieldIdAttr *uint32

	// Header Row Cell Format Id
	HeaderRowDxfIdAttr *uint32

	// Data & Insert Row Format Id
	DataDxfIdAttr *uint32

	// Totals Row Format Id
	TotalsRowDxfIdAttr *uint32

	// Header Row Cell Style
	HeaderRowCellStyleAttr *string

	// Data Area Style Name
	DataCellStyleAttr *string

	// Totals Row Style Name
	TotalsRowCellStyleAttr *string

	// Calculated Column Formula
	CalculatedColumnFormula *CT_TableFormula

	// Totals Row Formula
	TotalsRowFormula *CT_TableFormula

	// XML Column Properties
	XmlColumnPr *CT_XmlColumnPr

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func NewCT_RElt() *CT_RElt { _cabgac := &CT_RElt{}; return _cabgac }

func (_dbeaf ST_Visibility) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dbeaf.String(), start)
}

// ValidateWithPath validates the CT_DataConsolidate and its children, prefixing error messages with path
func (_bfdg *CT_DataConsolidate) ValidateWithPath(path string) error {
	if _deccff := _bfdg.FunctionAttr.ValidateWithPath(path + "\u002f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _deccff != nil {
		return _deccff
	}
	if _bfdg.DataRefs != nil {
		if _gbaf := _bfdg.DataRefs.ValidateWithPath(path + "\u002fD\u0061\u0074\u0061\u0052\u0065\u0066s"); _gbaf != nil {
			return _gbaf
		}
	}
	return nil
}

type ST_VolDepType byte

func (_be *AG_AutoFormat) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _be.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_be.AutoFormatIdAttr)})
	}
	if _be.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_be.ApplyNumberFormatsAttr))})
	}
	if _be.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_be.ApplyBorderFormatsAttr))})
	}
	if _be.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_be.ApplyFontFormatsAttr))})
	}
	if _be.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_be.ApplyPatternFormatsAttr))})
	}
	if _be.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_be.ApplyAlignmentFormatsAttr))})
	}
	if _be.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_be.ApplyWidthHeightFormatsAttr))})
	}
	return nil
}

// Validate validates the CT_XStringElement and its children
func (_gedcgd *CT_XStringElement) Validate() error {
	return _gedcgd.ValidateWithPath("\u0043\u0054\u005f\u0058\u0053\u0074\u0072\u0069\u006e\u0067\u0045\u006ce\u006d\u0065\u006e\u0074")
}

func NewCT_SheetPr() *CT_SheetPr { _abbdb := &CT_SheetPr{}; return _abbdb }

// Validate validates the CT_SingleXmlCells and its children
func (_gcegc *CT_SingleXmlCells) Validate() error {
	return _gcegc.ValidateWithPath("\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073")
}

const (
	ST_AxisUnset      ST_Axis = 0
	ST_AxisAxisRow    ST_Axis = 1
	ST_AxisAxisCol    ST_Axis = 2
	ST_AxisAxisPage   ST_Axis = 3
	ST_AxisAxisValues ST_Axis = 4
)

func NewCT_Consolidation() *CT_Consolidation {
	_dfabg := &CT_Consolidation{}
	_dfabg.RangeSets = NewCT_RangeSets()
	return _dfabg
}

func (_dfgbb ST_CfType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fdccd := _b.Attr{}
	_fdccd.Name = name
	switch _dfgbb {
	case ST_CfTypeUnset:
		_fdccd.Value = ""
	case ST_CfTypeExpression:
		_fdccd.Value = "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e"
	case ST_CfTypeCellIs:
		_fdccd.Value = "\u0063\u0065\u006c\u006c\u0049\u0073"
	case ST_CfTypeColorScale:
		_fdccd.Value = "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"
	case ST_CfTypeDataBar:
		_fdccd.Value = "\u0064a\u0074\u0061\u0042\u0061\u0072"
	case ST_CfTypeIconSet:
		_fdccd.Value = "\u0069c\u006f\u006e\u0053\u0065\u0074"
	case ST_CfTypeTop10:
		_fdccd.Value = "\u0074\u006f\u00701\u0030"
	case ST_CfTypeUniqueValues:
		_fdccd.Value = "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case ST_CfTypeDuplicateValues:
		_fdccd.Value = "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case ST_CfTypeContainsText:
		_fdccd.Value = "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case ST_CfTypeNotContainsText:
		_fdccd.Value = "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case ST_CfTypeBeginsWith:
		_fdccd.Value = "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case ST_CfTypeEndsWith:
		_fdccd.Value = "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case ST_CfTypeContainsBlanks:
		_fdccd.Value = "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case ST_CfTypeNotContainsBlanks:
		_fdccd.Value = "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case ST_CfTypeContainsErrors:
		_fdccd.Value = "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case ST_CfTypeNotContainsErrors:
		_fdccd.Value = "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case ST_CfTypeTimePeriod:
		_fdccd.Value = "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_CfTypeAboveAverage:
		_fdccd.Value = "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	}
	return _fdccd, nil
}

func (_beabd *CT_OleObjects) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bdecg:
	for {
		_gffcgc, _dgddd := d.Token()
		if _dgddd != nil {
			return _dgddd
		}
		switch _eebcfd := _gffcgc.(type) {
		case _b.StartElement:
			switch _eebcfd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004f\u0062\u006a\u0065\u0063t"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004f\u0062\u006a\u0065\u0063t"}:
				_dfeeg := NewCT_OleObject()
				if _feeef := d.DecodeElement(_dfeeg, &_eebcfd); _feeef != nil {
					return _feeef
				}
				_beabd.OleObject = append(_beabd.OleObject, _dfeeg)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004fl\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073 \u0025\u0076", _eebcfd.Name)
				if _cbebe := d.Skip(); _cbebe != nil {
					return _cbebe
				}
			}
		case _b.EndElement:
			break _bdecg
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_TotalsRowFunctionUnset     ST_TotalsRowFunction = 0
	ST_TotalsRowFunctionNone      ST_TotalsRowFunction = 1
	ST_TotalsRowFunctionSum       ST_TotalsRowFunction = 2
	ST_TotalsRowFunctionMin       ST_TotalsRowFunction = 3
	ST_TotalsRowFunctionMax       ST_TotalsRowFunction = 4
	ST_TotalsRowFunctionAverage   ST_TotalsRowFunction = 5
	ST_TotalsRowFunctionCount     ST_TotalsRowFunction = 6
	ST_TotalsRowFunctionCountNums ST_TotalsRowFunction = 7
	ST_TotalsRowFunctionStdDev    ST_TotalsRowFunction = 8
	ST_TotalsRowFunctionVar       ST_TotalsRowFunction = 9
	ST_TotalsRowFunctionCustom    ST_TotalsRowFunction = 10
)

func (_efdbfb *CT_TupleCache) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bcade:
	for {
		_gcabe, _cegca := d.Token()
		if _cegca != nil {
			return _cegca
		}
		switch _cdddfb := _gcabe.(type) {
		case _b.StartElement:
			switch _cdddfb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065n\u0074\u0072\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065n\u0074\u0072\u0069\u0065\u0073"}:
				_efdbfb.Entries = NewCT_PCDSDTCEntries()
				if _egbbd := d.DecodeElement(_efdbfb.Entries, &_cdddfb); _egbbd != nil {
					return _egbbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074\u0073"}:
				_efdbfb.Sets = NewCT_Sets()
				if _abfbf := d.DecodeElement(_efdbfb.Sets, &_cdddfb); _abfbf != nil {
					return _abfbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"}:
				_efdbfb.QueryCache = NewCT_QueryCache()
				if _gefeed := d.DecodeElement(_efdbfb.QueryCache, &_cdddfb); _gefeed != nil {
					return _gefeed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}:
				_efdbfb.ServerFormats = NewCT_ServerFormats()
				if _dgaba := d.DecodeElement(_efdbfb.ServerFormats, &_cdddfb); _dgaba != nil {
					return _dgaba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efdbfb.ExtLst = NewCT_ExtensionList()
				if _ccaccf := d.DecodeElement(_efdbfb.ExtLst, &_cdddfb); _ccaccf != nil {
					return _ccaccf
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054u\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065 \u0025\u0076", _cdddfb.Name)
				if _fggcad := d.Skip(); _fggcad != nil {
					return _fggcad
				}
			}
		case _b.EndElement:
			break _bcade
		case _b.CharData:
		}
	}
	return nil
}

func (_gagefg ST_PrintError) ValidateWithPath(path string) error {
	switch _gagefg {
	case 0, 1, 2, 3, 4:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gagefg))
	}
	return nil
}

// ValidateWithPath validates the CT_Member and its children, prefixing error messages with path
func (_fbcbe *CT_Member) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_CalcCell and its children, prefixing error messages with path
func (_fbbc *CT_CalcCell) ValidateWithPath(path string) error { return nil }

const (
	ST_GradientTypeUnset  ST_GradientType = 0
	ST_GradientTypeLinear ST_GradientType = 1
	ST_GradientTypePath   ST_GradientType = 2
)

// ValidateWithPath validates the CT_RowFields and its children, prefixing error messages with path
func (_faacb *CT_RowFields) ValidateWithPath(path string) error {
	for _aecgg, _bgfcf := range _faacb.Field {
		if _egafc := _bgfcf.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002fF\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _aecgg)); _egafc != nil {
			return _egafc
		}
	}
	return nil
}

const (
	ST_HtmlFmtUnset ST_HtmlFmt = 0
	ST_HtmlFmtNone  ST_HtmlFmt = 1
	ST_HtmlFmtRtf   ST_HtmlFmt = 2
	ST_HtmlFmtAll   ST_HtmlFmt = 3
)

func NewCT_RevisionMove() *CT_RevisionMove { _gbecc := &CT_RevisionMove{}; return _gbecc }

func (_fcgdb *CT_ExternalLink) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gddge:
	for {
		_cefg, _gecbg := d.Token()
		if _gecbg != nil {
			return _gecbg
		}
		switch _fcdde := _cefg.(type) {
		case _b.StartElement:
			switch _fcdde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}:
				_fcgdb.Choice = NewCT_ExternalLinkChoice()
				if _dfebbd := d.DecodeElement(&_fcgdb.Choice.ExternalBook, &_fcdde); _dfebbd != nil {
					return _dfebbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}:
				_fcgdb.Choice = NewCT_ExternalLinkChoice()
				if _aaffc := d.DecodeElement(&_fcgdb.Choice.DdeLink, &_fcdde); _aaffc != nil {
					return _aaffc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}:
				_fcgdb.Choice = NewCT_ExternalLinkChoice()
				if _dfdbg := d.DecodeElement(&_fcgdb.Choice.OleLink, &_fcdde); _dfdbg != nil {
					return _dfdbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fcgdb.ExtLst = NewCT_ExtensionList()
				if _cadc := d.DecodeElement(_fcgdb.ExtLst, &_fcdde); _cadc != nil {
					return _cadc
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _fcdde.Name)
				if _bbdcg := d.Skip(); _bbdcg != nil {
					return _bbdcg
				}
			}
		case _b.EndElement:
			break _gddge
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PatternFill and its children, prefixing error messages with path
func (_fgeag *CT_PatternFill) ValidateWithPath(path string) error {
	if _ggeff := _fgeag.PatternTypeAttr.ValidateWithPath(path + "\u002f\u0050a\u0074\u0074\u0065r\u006e\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _ggeff != nil {
		return _ggeff
	}
	if _fgeag.FgColor != nil {
		if _eefac := _fgeag.FgColor.ValidateWithPath(path + "\u002f\u0046\u0067\u0043\u006f\u006c\u006f\u0072"); _eefac != nil {
			return _eefac
		}
	}
	if _fgeag.BgColor != nil {
		if _gggbf := _fgeag.BgColor.ValidateWithPath(path + "\u002f\u0042\u0067\u0043\u006f\u006c\u006f\u0072"); _gggbf != nil {
			return _gggbf
		}
	}
	return nil
}

func (_bedgb *CT_ReviewedRevisions) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bedgb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_bedgb.CountAttr)})
	}
	e.EncodeToken(start)
	_fcgfb := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0072\u0065\u0076\u0069\u0065\u0077\u0065\u0064"}}
	for _, _dcabb := range _bedgb.Reviewed {
		e.EncodeElement(_dcabb, _fcgfb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RevisionDefinedName and its children, prefixing error messages with path
func (_bfeba *CT_RevisionDefinedName) ValidateWithPath(path string) error {
	if _bfeba.ExtLst != nil {
		if _dggef := _bfeba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dggef != nil {
			return _dggef
		}
	}
	return nil
}

func NewCT_FutureMetadata() *CT_FutureMetadata { _gfacg := &CT_FutureMetadata{}; return _gfacg }

func NewQueryTable() *QueryTable {
	_gefgd := &QueryTable{}
	_gefgd.CT_QueryTable = *NewCT_QueryTable()
	return _gefgd
}

// ValidateWithPath validates the CT_ExternalReference and its children, prefixing error messages with path
func (_ecfge *CT_ExternalReference) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_PhoneticPr and its children
func (_fgdgd *CT_PhoneticPr) Validate() error {
	return _fgdgd.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072")
}

type CT_CommentList struct {

	// Comment
	Comment []*CT_Comment
}

func (_fcfec ST_Type) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cfdbe := _b.Attr{}
	_cfdbe.Name = name
	switch _fcfec {
	case ST_TypeUnset:
		_cfdbe.Value = ""
	case ST_TypeNone:
		_cfdbe.Value = "\u006e\u006f\u006e\u0065"
	case ST_TypeAll:
		_cfdbe.Value = "\u0061\u006c\u006c"
	case ST_TypeRow:
		_cfdbe.Value = "\u0072\u006f\u0077"
	case ST_TypeColumn:
		_cfdbe.Value = "\u0063\u006f\u006c\u0075\u006d\u006e"
	}
	return _cfdbe, nil
}

// Validate validates the CT_OleItems and its children
func (_cfacag *CT_OleItems) Validate() error {
	return _cfacag.ValidateWithPath("C\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u0073")
}

func NewCT_Comment() *CT_Comment { _cebd := &CT_Comment{}; _cebd.Text = NewCT_Rst(); return _cebd }

// ValidateWithPath validates the CT_SortState and its children, prefixing error messages with path
func (_dcfbac *CT_SortState) ValidateWithPath(path string) error {
	if _fdfccc := _dcfbac.SortMethodAttr.ValidateWithPath(path + "\u002fS\u006fr\u0074\u004d\u0065\u0074\u0068\u006f\u0064\u0041\u0074\u0074\u0072"); _fdfccc != nil {
		return _fdfccc
	}
	for _aagff, _dfadad := range _dcfbac.SortCondition {
		if _gffbbe := _dfadad.ValidateWithPath(_ec.Sprintf("%\u0073/\u0053\u006f\u0072\u0074\u0043\u006f\u006e\u0064i\u0074\u0069\u006f\u006e[%\u0064\u005d", path, _aagff)); _gffbbe != nil {
			return _gffbbe
		}
	}
	if _dcfbac.ExtLst != nil {
		if _ffebe := _dcfbac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffebe != nil {
			return _ffebe
		}
	}
	return nil
}

// Validate validates the CT_TextPr and its children
func (_bgbba *CT_TextPr) Validate() error {
	return _bgbba.ValidateWithPath("\u0043T\u005f\u0054\u0065\u0078\u0074\u0050r")
}

func (_cbdaf *CT_SortCondition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbdaf.DescendingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cbdaf.DescendingAttr))})
	}
	if _cbdaf.SortByAttr != ST_SortByUnset {
		_baafa, _ffcdg := _cbdaf.SortByAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u006f\u0072\u0074\u0042\u0079"})
		if _ffcdg != nil {
			return _ffcdg
		}
		start.Attr = append(start.Attr, _baafa)
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", _cbdaf.RefAttr)})
	if _cbdaf.CustomListAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_cbdaf.CustomListAttr)})
	}
	if _cbdaf.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_cbdaf.DxfIdAttr)})
	}
	if _cbdaf.IconSetAttr != ST_IconSetTypeUnset {
		_fccef, _aadce := _cbdaf.IconSetAttr.MarshalXMLAttr(_b.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"})
		if _aadce != nil {
			return _aadce
		}
		start.Attr = append(start.Attr, _fccef)
	}
	if _cbdaf.IconIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0063\u006f\u006e\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_cbdaf.IconIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_deab *CT_IconFilter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_deab.IconSetAttr = ST_IconSetType(1)
	for _, _ffdfb := range start.Attr {
		if _ffdfb.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_deab.IconSetAttr.UnmarshalXMLAttr(_ffdfb)
			continue
		}
		if _ffdfb.Name.Local == "\u0069\u0063\u006f\u006e\u0049\u0064" {
			_ccba, _bbfge := _eb.ParseUint(_ffdfb.Value, 10, 32)
			if _bbfge != nil {
				return _bbfge
			}
			_befcf := uint32(_ccba)
			_deab.IconIdAttr = &_befcf
			continue
		}
	}
	for {
		_bbaag, _dcecc := d.Token()
		if _dcecc != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049c\u006fn\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s", _dcecc)
		}
		if _eggfe, _gggc := _bbaag.(_b.EndElement); _gggc && _eggfe.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TableStyle struct {

	// Table Style Name
	NameAttr string

	// Pivot Style
	PivotAttr *bool

	// Table
	TableAttr *bool

	// Table Style Count
	CountAttr *uint32

	// Table Style
	TableStyleElement []*CT_TableStyleElement
}

func (_dfff *CT_BookViews) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fcdc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003aw\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077"}}
	for _, _efc := range _dfff.WorkbookView {
		e.EncodeElement(_efc, _fcdc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bfddgd *StyleSheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfddgd.CT_Stylesheet = *NewCT_Stylesheet()
_eeacd:
	for {
		_acddc, _fdaccf := d.Token()
		if _fdaccf != nil {
			return _fdaccf
		}
		switch _ggafbg := _acddc.(type) {
		case _b.StartElement:
			switch _ggafbg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}:
				_bfddgd.NumFmts = NewCT_NumFmts()
				if _cdfbc := d.DecodeElement(_bfddgd.NumFmts, &_ggafbg); _cdfbc != nil {
					return _cdfbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}:
				_bfddgd.Fonts = NewCT_Fonts()
				if _cafag := d.DecodeElement(_bfddgd.Fonts, &_ggafbg); _cafag != nil {
					return _cafag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}:
				_bfddgd.Fills = NewCT_Fills()
				if _cgbbgb := d.DecodeElement(_bfddgd.Fills, &_ggafbg); _cgbbgb != nil {
					return _cgbbgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}:
				_bfddgd.Borders = NewCT_Borders()
				if _bfdde := d.DecodeElement(_bfddgd.Borders, &_ggafbg); _bfdde != nil {
					return _bfdde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}:
				_bfddgd.CellStyleXfs = NewCT_CellStyleXfs()
				if _bfcga := d.DecodeElement(_bfddgd.CellStyleXfs, &_ggafbg); _bfcga != nil {
					return _bfcga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}:
				_bfddgd.CellXfs = NewCT_CellXfs()
				if _fdfcd := d.DecodeElement(_bfddgd.CellXfs, &_ggafbg); _fdfcd != nil {
					return _fdfcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_bfddgd.CellStyles = NewCT_CellStyles()
				if _ffbeg := d.DecodeElement(_bfddgd.CellStyles, &_ggafbg); _ffbeg != nil {
					return _ffbeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}:
				_bfddgd.Dxfs = NewCT_Dxfs()
				if _efaebe := d.DecodeElement(_bfddgd.Dxfs, &_ggafbg); _efaebe != nil {
					return _efaebe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_bfddgd.TableStyles = NewCT_TableStyles()
				if _dcdcc := d.DecodeElement(_bfddgd.TableStyles, &_ggafbg); _dcdcc != nil {
					return _dcdcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}:
				_bfddgd.Colors = NewCT_Colors()
				if _cfggbf := d.DecodeElement(_bfddgd.Colors, &_ggafbg); _cfggbf != nil {
					return _cfggbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bfddgd.ExtLst = NewCT_ExtensionList()
				if _cgeffg := d.DecodeElement(_bfddgd.ExtLst, &_ggafbg); _cgeffg != nil {
					return _cgeffg
				}
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0053\u0074\u0079l\u0065\u0053\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _ggafbg.Name)
				if _bedcf := d.Skip(); _bedcf != nil {
					return _bedcf
				}
			}
		case _b.EndElement:
			break _eeacd
		case _b.CharData:
		}
	}
	return nil
}

func (_cgcagb ST_TableType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bcaab := _b.Attr{}
	_bcaab.Name = name
	switch _cgcagb {
	case ST_TableTypeUnset:
		_bcaab.Value = ""
	case ST_TableTypeWorksheet:
		_bcaab.Value = "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case ST_TableTypeXml:
		_bcaab.Value = "\u0078\u006d\u006c"
	case ST_TableTypeQueryTable:
		_bcaab.Value = "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065"
	}
	return _bcaab, nil
}

func (_abfgf *CT_GroupLevels) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gagf := range start.Attr {
		if _gagf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fefc, _ggbbf := _eb.ParseUint(_gagf.Value, 10, 32)
			if _ggbbf != nil {
				return _ggbbf
			}
			_accag := uint32(_fefc)
			_abfgf.CountAttr = &_accag
			continue
		}
	}
_cgfbc:
	for {
		_ddacd, _dedad := d.Token()
		if _dedad != nil {
			return _dedad
		}
		switch _cggbcc := _ddacd.(type) {
		case _b.StartElement:
			switch _cggbcc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c"}:
				_ffedf := NewCT_GroupLevel()
				if _eeab := d.DecodeElement(_ffedf, &_cggbcc); _eeab != nil {
					return _eeab
				}
				_abfgf.GroupLevel = append(_abfgf.GroupLevel, _ffedf)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004c\u0065v\u0065l\u0073\u0020\u0025\u0076", _cggbcc.Name)
				if _bffbfb := d.Skip(); _bffbfb != nil {
					return _bffbfb
				}
			}
		case _b.EndElement:
			break _cgfbc
		case _b.CharData:
		}
	}
	return nil
}

func (_affe *CT_ConditionalFormats) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _affe.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_affe.CountAttr)})
	}
	e.EncodeToken(start)
	_fbaf := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0061\u006c\u0046\u006frm\u0061\u0074"}}
	for _, _egfdf := range _affe.ConditionalFormat {
		e.EncodeElement(_egfdf, _fbaf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CacheField and its children
func (_dcdf *CT_CacheField) Validate() error {
	return _dcdf.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064")
}

type Table struct{ CT_Table }

func NewCT_CalcChain() *CT_CalcChain { _bbgb := &CT_CalcChain{}; return _bbgb }

func NewCT_CalculatedMembers() *CT_CalculatedMembers { _ecfd := &CT_CalculatedMembers{}; return _ecfd }

func (_fadde *CT_WorkbookPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _facaac := range start.Attr {
		if _facaac.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_geegef, _aadcg := _facaac.Value, error(nil)
			if _aadcg != nil {
				return _aadcg
			}
			_fadde.CodeNameAttr = &_geegef
			continue
		}
		if _facaac.Name.Local == "\u0064\u0061\u0074\u0065\u0031\u0039\u0030\u0034" {
			_aedfb, _ebaca := _eb.ParseBool(_facaac.Value)
			if _ebaca != nil {
				return _ebaca
			}
			_fadde.Date1904Attr = &_aedfb
			continue
		}
		if _facaac.Name.Local == "\u0068i\u0064e\u0050\u0069\u0076\u006f\u0074F\u0069\u0065l\u0064\u004c\u0069\u0073\u0074" {
			_caffcc, _gbabd := _eb.ParseBool(_facaac.Value)
			if _gbabd != nil {
				return _gbabd
			}
			_fadde.HidePivotFieldListAttr = &_caffcc
			continue
		}
		if _facaac.Name.Local == "\u0073\u0068\u006f\u0077\u0042\u006f\u0072\u0064\u0065\u0072\u0055n\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064\u0054\u0061b\u006c\u0065\u0073" {
			_fedgb, _ecgda := _eb.ParseBool(_facaac.Value)
			if _ecgda != nil {
				return _ecgda
			}
			_fadde.ShowBorderUnselectedTablesAttr = &_fedgb
			continue
		}
		if _facaac.Name.Local == "s\u0068o\u0077\u0050\u0069\u0076\u006f\u0074\u0043\u0068a\u0072\u0074\u0046\u0069lt\u0065\u0072" {
			_deaaa, _gabaad := _eb.ParseBool(_facaac.Value)
			if _gabaad != nil {
				return _gabaad
			}
			_fadde.ShowPivotChartFilterAttr = &_deaaa
			continue
		}
		if _facaac.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074\u0065\u0064\u0053\u006f\u006c\u0075t\u0069\u006f\u006e\u0073" {
			_ddegf, _fecaa := _eb.ParseBool(_facaac.Value)
			if _fecaa != nil {
				return _fecaa
			}
			_fadde.PromptedSolutionsAttr = &_ddegf
			continue
		}
		if _facaac.Name.Local == "\u0062\u0061\u0063\u006b\u0075\u0070\u0046\u0069\u006c\u0065" {
			_fafafd, _fcebe := _eb.ParseBool(_facaac.Value)
			if _fcebe != nil {
				return _fcebe
			}
			_fadde.BackupFileAttr = &_fafafd
			continue
		}
		if _facaac.Name.Local == "\u0073\u0061\u0076\u0065Ex\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0056\u0061\u006c\u0075e\u0073" {
			_edebc, _cbacdd := _eb.ParseBool(_facaac.Value)
			if _cbacdd != nil {
				return _cbacdd
			}
			_fadde.SaveExternalLinkValuesAttr = &_edebc
			continue
		}
		if _facaac.Name.Local == "u\u0070\u0064\u0061\u0074\u0065\u004c\u0069\u006e\u006b\u0073" {
			_fadde.UpdateLinksAttr.UnmarshalXMLAttr(_facaac)
			continue
		}
		if _facaac.Name.Local == "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073" {
			_fadde.ShowObjectsAttr.UnmarshalXMLAttr(_facaac)
			continue
		}
		if _facaac.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072\u0050\u0072\u0069\u0076\u0061\u0063\u0079" {
			_gcggd, _aaaff := _eb.ParseBool(_facaac.Value)
			if _aaaff != nil {
				return _aaaff
			}
			_fadde.FilterPrivacyAttr = &_gcggd
			continue
		}
		if _facaac.Name.Local == "\u0073\u0068\u006f\u0077\u0049\u006e\u006b\u0041\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e" {
			_eabfd, _ggdag := _eb.ParseBool(_facaac.Value)
			if _ggdag != nil {
				return _ggdag
			}
			_fadde.ShowInkAnnotationAttr = &_eabfd
			continue
		}
		if _facaac.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0052\u0065\u0066\u0072\u0065\u0073\u0068Q\u0075\u0065\u0072\u0079" {
			_gfcfd, _beefg := _eb.ParseBool(_facaac.Value)
			if _beefg != nil {
				return _beefg
			}
			_fadde.AllowRefreshQueryAttr = &_gfcfd
			continue
		}
		if _facaac.Name.Local == "\u0070\u0075\u0062l\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073" {
			_gabfb, _dfggb := _eb.ParseBool(_facaac.Value)
			if _dfggb != nil {
				return _dfggb
			}
			_fadde.PublishItemsAttr = &_gabfb
			continue
		}
		if _facaac.Name.Local == "\u0063h\u0065c\u006b\u0043\u006f\u006d\u0070a\u0074\u0069b\u0069\u006c\u0069\u0074\u0079" {
			_acgdg, _aegcaf := _eb.ParseBool(_facaac.Value)
			if _aegcaf != nil {
				return _aegcaf
			}
			_fadde.CheckCompatibilityAttr = &_acgdg
			continue
		}
		if _facaac.Name.Local == "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073" {
			_bcbbff, _defdea := _eb.ParseBool(_facaac.Value)
			if _defdea != nil {
				return _defdea
			}
			_fadde.AutoCompressPicturesAttr = &_bcbbff
			continue
		}
		if _facaac.Name.Local == "r\u0065\u0066\u0072\u0065sh\u0041l\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u0069\u006f\u006e\u0073" {
			_bebcd, _dbddf := _eb.ParseBool(_facaac.Value)
			if _dbddf != nil {
				return _dbddf
			}
			_fadde.RefreshAllConnectionsAttr = &_bebcd
			continue
		}
		if _facaac.Name.Local == "\u0064\u0065\u0066\u0061ul\u0074\u0054\u0068\u0065\u006d\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_geffc, _edeee := _eb.ParseUint(_facaac.Value, 10, 32)
			if _edeee != nil {
				return _edeee
			}
			_gacad := uint32(_geffc)
			_fadde.DefaultThemeVersionAttr = &_gacad
			continue
		}
	}
	for {
		_bafdcd, _eaegfc := d.Token()
		if _eaegfc != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0057o\u0072k\u0062o\u006f\u006b\u0050\u0072\u003a\u0020\u0025s", _eaegfc)
		}
		if _becae, _cddea := _bafdcd.(_b.EndElement); _cddea && _becae.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gcfd *CT_Dialogsheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_aafbb:
	for {
		_gdcdd, _bcdgb := d.Token()
		if _bcdgb != nil {
			return _bcdgb
		}
		switch _dgad := _gdcdd.(type) {
		case _b.StartElement:
			switch _dgad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_gcfd.SheetPr = NewCT_SheetPr()
				if _adbf := d.DecodeElement(_gcfd.SheetPr, &_dgad); _adbf != nil {
					return _adbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_gcfd.SheetViews = NewCT_SheetViews()
				if _cedcg := d.DecodeElement(_gcfd.SheetViews, &_dgad); _cedcg != nil {
					return _cedcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_gcfd.SheetFormatPr = NewCT_SheetFormatPr()
				if _bfadb := d.DecodeElement(_gcfd.SheetFormatPr, &_dgad); _bfadb != nil {
					return _bfadb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_gcfd.SheetProtection = NewCT_SheetProtection()
				if _caff := d.DecodeElement(_gcfd.SheetProtection, &_dgad); _caff != nil {
					return _caff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_gcfd.CustomSheetViews = NewCT_CustomSheetViews()
				if _bgced := d.DecodeElement(_gcfd.CustomSheetViews, &_dgad); _bgced != nil {
					return _bgced
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_gcfd.PrintOptions = NewCT_PrintOptions()
				if _eddad := d.DecodeElement(_gcfd.PrintOptions, &_dgad); _eddad != nil {
					return _eddad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_gcfd.PageMargins = NewCT_PageMargins()
				if _gefc := d.DecodeElement(_gcfd.PageMargins, &_dgad); _gefc != nil {
					return _gefc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_gcfd.PageSetup = NewCT_PageSetup()
				if _facdg := d.DecodeElement(_gcfd.PageSetup, &_dgad); _facdg != nil {
					return _facdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_gcfd.HeaderFooter = NewCT_HeaderFooter()
				if _bddgc := d.DecodeElement(_gcfd.HeaderFooter, &_dgad); _bddgc != nil {
					return _bddgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_gcfd.Drawing = NewCT_Drawing()
				if _agce := d.DecodeElement(_gcfd.Drawing, &_dgad); _agce != nil {
					return _agce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_gcfd.LegacyDrawing = NewCT_LegacyDrawing()
				if _afge := d.DecodeElement(_gcfd.LegacyDrawing, &_dgad); _afge != nil {
					return _afge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_gcfd.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _adfc := d.DecodeElement(_gcfd.LegacyDrawingHF, &_dgad); _adfc != nil {
					return _adfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_gcfd.DrawingHF = NewCT_DrawingHF()
				if _bccbb := d.DecodeElement(_gcfd.DrawingHF, &_dgad); _bccbb != nil {
					return _bccbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_gcfd.OleObjects = NewCT_OleObjects()
				if _dbcbd := d.DecodeElement(_gcfd.OleObjects, &_dgad); _dbcbd != nil {
					return _dbcbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_gcfd.Controls = NewCT_Controls()
				if _gffd := d.DecodeElement(_gcfd.Controls, &_dgad); _gffd != nil {
					return _gffd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcfd.ExtLst = NewCT_ExtensionList()
				if _gbcfa := d.DecodeElement(_gcfd.ExtLst, &_dgad); _gbcfa != nil {
					return _gbcfa
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0069\u0061\u006c\u006f\u0067\u0073h\u0065e\u0074\u0020\u0025\u0076", _dgad.Name)
				if _fcage := d.Skip(); _fcage != nil {
					return _fcage
				}
			}
		case _b.EndElement:
			break _aafbb
		case _b.CharData:
		}
	}
	return nil
}

type CT_RElt struct {

	// Run Properties
	RPr *CT_RPrElt

	// Text
	T string
}

func (_aaba *CT_CellStyles) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfaa := range start.Attr {
		if _cfaa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gaagd, _ffgg := _eb.ParseUint(_cfaa.Value, 10, 32)
			if _ffgg != nil {
				return _ffgg
			}
			_fcdd := uint32(_gaagd)
			_aaba.CountAttr = &_fcdd
			continue
		}
	}
_agad:
	for {
		_fcgbe, _bcbe := d.Token()
		if _bcbe != nil {
			return _bcbe
		}
		switch _egfd := _fcgbe.(type) {
		case _b.StartElement:
			switch _egfd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0053\u0074\u0079\u006ce"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0053\u0074\u0079\u006ce"}:
				_egce := NewCT_CellStyle()
				if _ccce := d.DecodeElement(_egce, &_egfd); _ccce != nil {
					return _ccce
				}
				_aaba.CellStyle = append(_aaba.CellStyle, _egce)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043e\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073 \u0025\u0076", _egfd.Name)
				if _ddffe := d.Skip(); _ddffe != nil {
					return _ddffe
				}
			}
		case _b.EndElement:
			break _agad
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_VolTopicRef and its children, prefixing error messages with path
func (_fbebc *CT_VolTopicRef) ValidateWithPath(path string) error { return nil }

func NewCT_Map() *CT_Map { _dfcca := &CT_Map{}; return _dfcca }

func (_ggfd *CT_MemberProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggfd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ggfd.CountAttr)})
	}
	e.EncodeToken(start)
	_cdaab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003am\u0070"}}
	for _, _cbcba := range _ggfd.Mp {
		e.EncodeElement(_cbcba, _cdaab)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_ebbfg *CT_MeasureDimensionMaps) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebbfg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ebbfg.CountAttr)})
	}
	e.EncodeToken(start)
	if _ebbfg.Map != nil {
		_eafebc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0061\u0070"}}
		for _, _dccfb := range _ebbfg.Map {
			e.EncodeElement(_dccfb, _eafebc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gddgca *CT_VolTypes) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_egdae:
	for {
		_ffged, _adebe := d.Token()
		if _adebe != nil {
			return _adebe
		}
		switch _ffgccf := _ffged.(type) {
		case _b.StartElement:
			switch _ffgccf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}:
				_gcfbde := NewCT_VolType()
				if _eebgfg := d.DecodeElement(_gcfbde, &_ffgccf); _eebgfg != nil {
					return _eebgfg
				}
				_gddgca.VolType = append(_gddgca.VolType, _gcfbde)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gddgca.ExtLst = NewCT_ExtensionList()
				if _gbdgd := d.DecodeElement(_gddgca.ExtLst, &_ffgccf); _gbdgd != nil {
					return _gbdgd
				}
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076", _ffgccf.Name)
				if _gccde := d.Skip(); _gccde != nil {
					return _gccde
				}
			}
		case _b.EndElement:
			break _egdae
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_DataRefs() *CT_DataRefs { _aaed := &CT_DataRefs{}; return _aaed }

func (_fccf *CT_PageFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gcbe := range start.Attr {
		if _gcbe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ggbede, _daega := _eb.ParseUint(_gcbe.Value, 10, 32)
			if _daega != nil {
				return _daega
			}
			_eaffb := uint32(_ggbede)
			_fccf.CountAttr = &_eaffb
			continue
		}
	}
_dbce:
	for {
		_adbce, _adadf := d.Token()
		if _adadf != nil {
			return _adadf
		}
		switch _dcebd := _adbce.(type) {
		case _b.StartElement:
			switch _dcebd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0046\u0069\u0065\u006cd"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0046\u0069\u0065\u006cd"}:
				_eeeed := NewCT_PageField()
				if _fbgcb := d.DecodeElement(_eeeed, &_dcebd); _fbgcb != nil {
					return _fbgcb
				}
				_fccf.PageField = append(_fccf.PageField, _eeeed)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050a\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073 \u0025\u0076", _dcebd.Name)
				if _cfacf := d.Skip(); _cfacf != nil {
					return _cfacf
				}
			}
		case _b.EndElement:
			break _dbce
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_DataValidation and its children
func (_dgda *CT_DataValidation) Validate() error {
	return _dgda.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e")
}

func (_cgbdb *CT_DataField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _faag := range start.Attr {
		if _faag.Name.Local == "\u006e\u0061\u006d\u0065" {
			_feab, _cffd := _faag.Value, error(nil)
			if _cffd != nil {
				return _cffd
			}
			_cgbdb.NameAttr = &_feab
			continue
		}
		if _faag.Name.Local == "\u0066\u006c\u0064" {
			_fcag, _fdafc := _eb.ParseUint(_faag.Value, 10, 32)
			if _fdafc != nil {
				return _fdafc
			}
			_cgbdb.FldAttr = uint32(_fcag)
			continue
		}
		if _faag.Name.Local == "\u0073\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_cgbdb.SubtotalAttr.UnmarshalXMLAttr(_faag)
			continue
		}
		if _faag.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0061\u0074\u0061\u0041\u0073" {
			_cgbdb.ShowDataAsAttr.UnmarshalXMLAttr(_faag)
			continue
		}
		if _faag.Name.Local == "\u0062a\u0073\u0065\u0046\u0069\u0065\u006cd" {
			_ceeb, _dffbd := _eb.ParseInt(_faag.Value, 10, 32)
			if _dffbd != nil {
				return _dffbd
			}
			_eddbdc := int32(_ceeb)
			_cgbdb.BaseFieldAttr = &_eddbdc
			continue
		}
		if _faag.Name.Local == "\u0062\u0061\u0073\u0065\u0049\u0074\u0065\u006d" {
			_dcaeb, _cgec := _eb.ParseUint(_faag.Value, 10, 32)
			if _cgec != nil {
				return _cgec
			}
			_ffagc := uint32(_dcaeb)
			_cgbdb.BaseItemAttr = &_ffagc
			continue
		}
		if _faag.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_bdde, _abaa := _eb.ParseUint(_faag.Value, 10, 32)
			if _abaa != nil {
				return _abaa
			}
			_eead := uint32(_bdde)
			_cgbdb.NumFmtIdAttr = &_eead
			continue
		}
	}
_dbdd:
	for {
		_adfdc, _bdgb := d.Token()
		if _bdgb != nil {
			return _bdgb
		}
		switch _bgeea := _adfdc.(type) {
		case _b.StartElement:
			switch _bgeea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgbdb.ExtLst = NewCT_ExtensionList()
				if _eaggf := d.DecodeElement(_cgbdb.ExtLst, &_bgeea); _eaggf != nil {
					return _eaggf
				}
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_D\u0061\u0074a\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _bgeea.Name)
				if _dfbfe := d.Skip(); _dfbfe != nil {
					return _dfbfe
				}
			}
		case _b.EndElement:
			break _dbdd
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DynamicFilter and its children, prefixing error messages with path
func (_fccaf *CT_DynamicFilter) ValidateWithPath(path string) error {
	if _fccaf.TypeAttr == ST_DynamicFilterTypeUnset {
		return _ec.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ffdf := _fccaf.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _ffdf != nil {
		return _ffdf
	}
	return nil
}

func (_acccaf ST_ParameterType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_acccaf.String(), start)
}

func (_fcbeba *CT_TextFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcffe := range start.Attr {
		if _dcffe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_geccb, _bgfgaa := _eb.ParseUint(_dcffe.Value, 10, 32)
			if _bgfgaa != nil {
				return _bgfgaa
			}
			_ageegf := uint32(_geccb)
			_fcbeba.CountAttr = &_ageegf
			continue
		}
	}
_badaaf:
	for {
		_ageagb, _bfebgb := d.Token()
		if _bfebgb != nil {
			return _bfebgb
		}
		switch _cbgbg := _ageagb.(type) {
		case _b.StartElement:
			switch _cbgbg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074e\u0078\u0074\u0046\u0069\u0065\u006cd"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074e\u0078\u0074\u0046\u0069\u0065\u006cd"}:
				_badba := NewCT_TextField()
				if _bbdgd := d.DecodeElement(_badba, &_cbgbg); _bbdgd != nil {
					return _bbdgd
				}
				_fcbeba.TextField = append(_fcbeba.TextField, _badba)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054e\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073 \u0025\u0076", _cbgbg.Name)
				if _abacf := d.Skip(); _abacf != nil {
					return _abacf
				}
			}
		case _b.EndElement:
			break _badaaf
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextField and its children
func (_bgbc *CT_TextField) Validate() error {
	return _bgbc.ValidateWithPath("\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064")
}

type CT_Fonts struct {

	// Font Count
	CountAttr *uint32

	// Font
	Font []*CT_Font
}

const (
	ST_ParameterTypeUnset  ST_ParameterType = 0
	ST_ParameterTypePrompt ST_ParameterType = 1
	ST_ParameterTypeValue  ST_ParameterType = 2
	ST_ParameterTypeCell   ST_ParameterType = 3
)

type CT_CellXfs struct {

	// Format Count
	CountAttr *uint32

	// Format
	Xf []*CT_Xf
}

func (_aegga *CT_PatternFill) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbadb := range start.Attr {
		if _gbadb.Name.Local == "p\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065" {
			_aegga.PatternTypeAttr.UnmarshalXMLAttr(_gbadb)
			continue
		}
	}
_fegebe:
	for {
		_gdea, _efebg := d.Token()
		if _efebg != nil {
			return _efebg
		}
		switch _ggecc := _gdea.(type) {
		case _b.StartElement:
			switch _ggecc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066g\u0043\u006f\u006c\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066g\u0043\u006f\u006c\u006f\u0072"}:
				_aegga.FgColor = NewCT_Color()
				if _egaeb := d.DecodeElement(_aegga.FgColor, &_ggecc); _egaeb != nil {
					return _egaeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062g\u0043\u006f\u006c\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062g\u0043\u006f\u006c\u006f\u0072"}:
				_aegga.BgColor = NewCT_Color()
				if _agdeg := d.DecodeElement(_aegga.BgColor, &_ggecc); _agdeg != nil {
					return _agdeg
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006eF\u0069l\u006c\u0020\u0025\u0076", _ggecc.Name)
				if _adgabf := d.Skip(); _adgabf != nil {
					return _adgabf
				}
			}
		case _b.EndElement:
			break _fegebe
		case _b.CharData:
		}
	}
	return nil
}

func (_bgbfb *ST_rwColActionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_affebb, _decag := d.Token()
	if _decag != nil {
		return _decag
	}
	if _fabgcc, _dcgada := _affebb.(_b.EndElement); _dcgada && _fabgcc.Name == start.Name {
		*_bgbfb = 1
		return nil
	}
	if _abgca, _bbcge := _affebb.(_b.CharData); !_bbcge {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _affebb)
	} else {
		switch string(_abgca) {
		case "":
			*_bgbfb = 0
		case "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw":
			*_bgbfb = 1
		case "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw":
			*_bgbfb = 2
		case "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl":
			*_bgbfb = 3
		case "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl":
			*_bgbfb = 4
		}
	}
	_affebb, _decag = d.Token()
	if _decag != nil {
		return _decag
	}
	if _gfdddf, _ggbbfc := _affebb.(_b.EndElement); _ggbbfc && _gfdddf.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _affebb)
}

// Validate validates the CT_BookViews and its children
func (_edf *CT_BookViews) Validate() error {
	return _edf.ValidateWithPath("\u0043\u0054\u005fB\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073")
}

func (_gfefeg *Users) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gfefeg.CT_Users = *NewCT_Users()
	for _, _dbacc := range start.Attr {
		if _dbacc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_begcb, _cfdcg := _eb.ParseUint(_dbacc.Value, 10, 32)
			if _cfdcg != nil {
				return _cfdcg
			}
			_aebgfb := uint32(_begcb)
			_gfefeg.CountAttr = &_aebgfb
			continue
		}
	}
_cdfdcb:
	for {
		_cfegga, _aefbgc := d.Token()
		if _aefbgc != nil {
			return _aefbgc
		}
		switch _eadac := _cfegga.(type) {
		case _b.StartElement:
			switch _eadac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}:
				_aafae := NewCT_SharedUser()
				if _fdgefc := d.DecodeElement(_aafae, &_eadac); _fdgefc != nil {
					return _fdgefc
				}
				_gfefeg.UserInfo = append(_gfefeg.UserInfo, _aafae)
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0055\u0073\u0065r\u0073 \u0025\u0076", _eadac.Name)
				if _agbfe := d.Skip(); _agbfe != nil {
					return _agbfe
				}
			}
		case _b.EndElement:
			break _cdfdcb
		case _b.CharData:
		}
	}
	return nil
}

type CT_Top10 struct {

	// Top
	TopAttr *bool

	// Filter by Percent
	PercentAttr *bool

	// Top or Bottom Value
	ValAttr float64

	// Filter Value
	FilterValAttr *float64
}

type CT_OleSize struct {

	// Reference
	RefAttr string
}

func (_aagfca ST_RefMode) ValidateWithPath(path string) error {
	switch _aagfca {
	case 0, 1, 2:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aagfca))
	}
	return nil
}

type CT_CacheSource struct {

	// Cache Type
	TypeAttr ST_SourceType

	// Connection Index
	ConnectionIdAttr *uint32

	// Worksheet PivotCache Source
	WorksheetSource *CT_WorksheetSource

	// Consolidation Source
	Consolidation *CT_Consolidation

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_bbga *CT_CalcCell) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dfeg := range start.Attr {
		if _dfeg.Name.Local == "\u0072" {
			_fegg, _dbfg := _dfeg.Value, error(nil)
			if _dbfg != nil {
				return _dbfg
			}
			_bbga.RAttr = &_fegg
			continue
		}
		if _dfeg.Name.Local == "\u0072\u0065\u0066" {
			_eaeg, _efa := _dfeg.Value, error(nil)
			if _efa != nil {
				return _efa
			}
			_bbga.RefAttr = &_eaeg
			continue
		}
		if _dfeg.Name.Local == "\u0069" {
			_eafc, _cgg := _eb.ParseInt(_dfeg.Value, 10, 32)
			if _cgg != nil {
				return _cgg
			}
			_eaee := int32(_eafc)
			_bbga.IAttr = &_eaee
			continue
		}
		if _dfeg.Name.Local == "\u0073" {
			_fef, _gfgg := _eb.ParseBool(_dfeg.Value)
			if _gfgg != nil {
				return _gfgg
			}
			_bbga.SAttr = &_fef
			continue
		}
		if _dfeg.Name.Local == "\u006c" {
			_gef, _ceee := _eb.ParseBool(_dfeg.Value)
			if _ceee != nil {
				return _ceee
			}
			_bbga.LAttr = &_gef
			continue
		}
		if _dfeg.Name.Local == "\u0074" {
			_fgff, _ffb := _eb.ParseBool(_dfeg.Value)
			if _ffb != nil {
				return _ffb
			}
			_bbga.TAttr = &_fgff
			continue
		}
		if _dfeg.Name.Local == "\u0061" {
			_abdd, _ecfg := _eb.ParseBool(_dfeg.Value)
			if _ecfg != nil {
				return _ecfg
			}
			_bbga.AAttr = &_abdd
			continue
		}
	}
	for {
		_gfdg, _fffc := d.Token()
		if _fffc != nil {
			return _ec.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0043\u0065\u006c\u006c\u003a\u0020\u0025\u0073", _fffc)
		}
		if _feff, _baab := _gfdg.(_b.EndElement); _baab && _feff.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fbdaa *CT_PivotAreaReference) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _geccd := range start.Attr {
		if _geccd.Name.Local == "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_bbddg, _ebbfd := _eb.ParseBool(_geccd.Value)
			if _ebbfd != nil {
				return _ebbfd
			}
			_fbdaa.MaxSubtotalAttr = &_bbddg
			continue
		}
		if _geccd.Name.Local == "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gbfgc, _ecdba := _eb.ParseBool(_geccd.Value)
			if _ecdba != nil {
				return _ecdba
			}
			_fbdaa.MinSubtotalAttr = &_gbfgc
			continue
		}
		if _geccd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_efcdd, _eebae := _eb.ParseUint(_geccd.Value, 10, 32)
			if _eebae != nil {
				return _eebae
			}
			_afdgf := uint32(_efcdd)
			_fbdaa.CountAttr = &_afdgf
			continue
		}
		if _geccd.Name.Local == "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_effbaa, _fceef := _eb.ParseBool(_geccd.Value)
			if _fceef != nil {
				return _fceef
			}
			_fbdaa.ProductSubtotalAttr = &_effbaa
			continue
		}
		if _geccd.Name.Local == "\u0062\u0079\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_dbabbb, _fccg := _eb.ParseBool(_geccd.Value)
			if _fccg != nil {
				return _fccg
			}
			_fbdaa.ByPositionAttr = &_dbabbb
			continue
		}
		if _geccd.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_abagg, _beaaf := _eb.ParseBool(_geccd.Value)
			if _beaaf != nil {
				return _beaaf
			}
			_fbdaa.CountSubtotalAttr = &_abagg
			continue
		}
		if _geccd.Name.Local == "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gbefb, _bcegg := _eb.ParseBool(_geccd.Value)
			if _bcegg != nil {
				return _bcegg
			}
			_fbdaa.DefaultSubtotalAttr = &_gbefb
			continue
		}
		if _geccd.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_bgebe, _egbfb := _eb.ParseBool(_geccd.Value)
			if _egbfb != nil {
				return _egbfb
			}
			_fbdaa.CountASubtotalAttr = &_bgebe
			continue
		}
		if _geccd.Name.Local == "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gfgcg, _aaadac := _eb.ParseBool(_geccd.Value)
			if _aaadac != nil {
				return _aaadac
			}
			_fbdaa.AvgSubtotalAttr = &_gfgcg
			continue
		}
		if _geccd.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_gbege, _cebbea := _eb.ParseUint(_geccd.Value, 10, 32)
			if _cebbea != nil {
				return _cebbea
			}
			_ffdcg := uint32(_gbege)
			_fbdaa.FieldAttr = &_ffdcg
			continue
		}
		if _geccd.Name.Local == "\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064" {
			_fcdad, _aaffg := _eb.ParseBool(_geccd.Value)
			if _aaffg != nil {
				return _aaffg
			}
			_fbdaa.SelectedAttr = &_fcdad
			continue
		}
		if _geccd.Name.Local == "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065" {
			_bffeg, _edgge := _eb.ParseBool(_geccd.Value)
			if _edgge != nil {
				return _edgge
			}
			_fbdaa.RelativeAttr = &_bffeg
			continue
		}
		if _geccd.Name.Local == "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gegdcb, _dgcfd := _eb.ParseBool(_geccd.Value)
			if _dgcfd != nil {
				return _dgcfd
			}
			_fbdaa.SumSubtotalAttr = &_gegdcb
			continue
		}
		if _geccd.Name.Local == "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_gcafe, _gbcgfd := _eb.ParseBool(_geccd.Value)
			if _gbcgfd != nil {
				return _gbcgfd
			}
			_fbdaa.StdDevSubtotalAttr = &_gcafe
			continue
		}
		if _geccd.Name.Local == "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gbeege, _cabce := _eb.ParseBool(_geccd.Value)
			if _cabce != nil {
				return _cabce
			}
			_fbdaa.StdDevPSubtotalAttr = &_gbeege
			continue
		}
		if _geccd.Name.Local == "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gdegd, _ggfc := _eb.ParseBool(_geccd.Value)
			if _ggfc != nil {
				return _ggfc
			}
			_fbdaa.VarSubtotalAttr = &_gdegd
			continue
		}
		if _geccd.Name.Local == "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_abedc, _effbaf := _eb.ParseBool(_geccd.Value)
			if _effbaf != nil {
				return _effbaf
			}
			_fbdaa.VarPSubtotalAttr = &_abedc
			continue
		}
	}
_efdc:
	for {
		_fgbgc, _eddde := d.Token()
		if _eddde != nil {
			return _eddde
		}
		switch _cgbef := _fgbgc.(type) {
		case _b.StartElement:
			switch _cgbef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_ebafd := NewCT_Index()
				if _facfda := d.DecodeElement(_ebafd, &_cgbef); _facfda != nil {
					return _facfda
				}
				_fbdaa.X = append(_fbdaa.X, _ebafd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbdaa.ExtLst = NewCT_ExtensionList()
				if _gafeeb := d.DecodeElement(_fbdaa.ExtLst, &_cgbef); _gafeeb != nil {
					return _gafeeb
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0025\u0076", _cgbef.Name)
				if _ccffdc := d.Skip(); _ccffdc != nil {
					return _ccffdc
				}
			}
		case _b.EndElement:
			break _efdc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_RevisionAutoFormatting and its children
func (_eagfbe *CT_RevisionAutoFormatting) Validate() error {
	return _eagfbe.ValidateWithPath("\u0043T\u005f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u0041u\u0074o\u0046o\u0072\u006d\u0061\u0074\u0074\u0069\u006eg")
}

func (_gaffd ST_Type) Validate() error { return _gaffd.ValidateWithPath("") }

func (_gfbbbd ST_SourceType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gfbbbd.String(), start)
}

// ValidateWithPath validates the CT_DataBar and its children, prefixing error messages with path
func (_eabe *CT_DataBar) ValidateWithPath(path string) error {
	for _acbbc, _fgef := range _eabe.Cfvo {
		if _baae := _fgef.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0043\u0066\u0076\u006f\u005b\u0025\u0064\u005d", path, _acbbc)); _baae != nil {
			return _baae
		}
	}
	if _ddefb := _eabe.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _ddefb != nil {
		return _ddefb
	}
	return nil
}

// ValidateWithPath validates the CT_Mdx and its children, prefixing error messages with path
func (_geebb *CT_Mdx) ValidateWithPath(path string) error {
	if _geebb.FAttr == ST_MdxFunctionTypeUnset {
		return _ec.Errorf("\u0025\u0073/\u0046\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066ie\u006c\u0064", path)
	}
	if _ggbf := _geebb.FAttr.ValidateWithPath(path + "\u002f\u0046\u0041\u0074\u0074\u0072"); _ggbf != nil {
		return _ggbf
	}
	if _geebb.T != nil {
		if _bgaad := _geebb.T.ValidateWithPath(path + "\u002f\u0054"); _bgaad != nil {
			return _bgaad
		}
	}
	if _geebb.Ms != nil {
		if _efcgbg := _geebb.Ms.ValidateWithPath(path + "\u002f\u004d\u0073"); _efcgbg != nil {
			return _efcgbg
		}
	}
	if _geebb.P != nil {
		if _afgdf := _geebb.P.ValidateWithPath(path + "\u002f\u0050"); _afgdf != nil {
			return _afgdf
		}
	}
	if _geebb.K != nil {
		if _dfcfb := _geebb.K.ValidateWithPath(path + "\u002f\u004b"); _dfcfb != nil {
			return _dfcfb
		}
	}
	return nil
}

func (_agcea ST_CredMethod) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_afagdg := _b.Attr{}
	_afagdg.Name = name
	switch _agcea {
	case ST_CredMethodUnset:
		_afagdg.Value = ""
	case ST_CredMethodIntegrated:
		_afagdg.Value = "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064"
	case ST_CredMethodNone:
		_afagdg.Value = "\u006e\u006f\u006e\u0065"
	case ST_CredMethodStored:
		_afagdg.Value = "\u0073\u0074\u006f\u0072\u0065\u0064"
	case ST_CredMethodPrompt:
		_afagdg.Value = "\u0070\u0072\u006f\u006d\u0070\u0074"
	}
	return _afagdg, nil
}

// ValidateWithPath validates the CT_Missing and its children, prefixing error messages with path
func (_fceff *CT_Missing) ValidateWithPath(path string) error {
	for _deagb, _cbffa := range _fceff.Tpls {
		if _debbd := _cbffa.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _deagb)); _debbd != nil {
			return _debbd
		}
	}
	for _fabga, _ffece := range _fceff.X {
		if _baaeg := _ffece.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _fabga)); _baaeg != nil {
			return _baaeg
		}
	}
	return nil
}

// Validate validates the CT_DataRefs and its children
func (_cbfg *CT_DataRefs) Validate() error {
	return _cbfg.ValidateWithPath("C\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u0073")
}

type CT_RevisionHeader struct {

	// GUID
	GuidAttr string

	// Date Time
	DateTimeAttr _g.Time

	// Last Sheet Id
	MaxSheetIdAttr uint32

	// User Name
	UserNameAttr string
	IdAttr       string

	// Minimum Revision Id
	MinRIdAttr *uint32

	// Max Revision Id
	MaxRIdAttr *uint32

	// Sheet Id Map
	SheetIdMap *CT_SheetIdMap

	// Reviewed List
	ReviewedList *CT_ReviewedRevisions
	ExtLst       *CT_ExtensionList
}

// Validate validates the CT_PhoneticRun and its children
func (_dgfca *CT_PhoneticRun) Validate() error {
	return _dgfca.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074i\u0063\u0052\u0075\u006e")
}

func NewCT_PivotFilter() *CT_PivotFilter {
	_agfc := &CT_PivotFilter{}
	_agfc.TypeAttr = ST_PivotFilterType(1)
	_agfc.AutoFilter = NewCT_AutoFilter()
	return _agfc
}

// ValidateWithPath validates the CT_colItems and its children, prefixing error messages with path
func (_acbac *CT_colItems) ValidateWithPath(path string) error {
	for _gbfaee, _cfbaa := range _acbac.I {
		if _befabe := _cfbaa.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0049\u005b\u0025\u0064\u005d", path, _gbfaee)); _befabe != nil {
			return _befabe
		}
	}
	return nil
}

// Validate validates the CT_BookView and its children
func (_afgb *CT_BookView) Validate() error {
	return _afgb.ValidateWithPath("C\u0054\u005f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077")
}

const (
	ST_ConditionalFormattingOperatorUnset              ST_ConditionalFormattingOperator = 0
	ST_ConditionalFormattingOperatorLessThan           ST_ConditionalFormattingOperator = 1
	ST_ConditionalFormattingOperatorLessThanOrEqual    ST_ConditionalFormattingOperator = 2
	ST_ConditionalFormattingOperatorEqual              ST_ConditionalFormattingOperator = 3
	ST_ConditionalFormattingOperatorNotEqual           ST_ConditionalFormattingOperator = 4
	ST_ConditionalFormattingOperatorGreaterThanOrEqual ST_ConditionalFormattingOperator = 5
	ST_ConditionalFormattingOperatorGreaterThan        ST_ConditionalFormattingOperator = 6
	ST_ConditionalFormattingOperatorBetween            ST_ConditionalFormattingOperator = 7
	ST_ConditionalFormattingOperatorNotBetween         ST_ConditionalFormattingOperator = 8
	ST_ConditionalFormattingOperatorContainsText       ST_ConditionalFormattingOperator = 9
	ST_ConditionalFormattingOperatorNotContains        ST_ConditionalFormattingOperator = 10
	ST_ConditionalFormattingOperatorBeginsWith         ST_ConditionalFormattingOperator = 11
	ST_ConditionalFormattingOperatorEndsWith           ST_ConditionalFormattingOperator = 12
)

func NewAG_AutoFormat() *AG_AutoFormat { _d := &AG_AutoFormat{}; return _d }

type CT_Border struct {

	// Diagonal Up
	DiagonalUpAttr *bool

	// Diagonal Down
	DiagonalDownAttr *bool

	// Outline
	OutlineAttr *bool

	// Leading Edge Border
	Start *CT_BorderPr

	// Trailing Edge Border
	End *CT_BorderPr

	// Leading Edge Border
	Left *CT_BorderPr

	// Trailing Edge Border
	Right *CT_BorderPr

	// Top Border
	Top *CT_BorderPr

	// Bottom Border
	Bottom *CT_BorderPr

	// Diagonal
	Diagonal *CT_BorderPr

	// Vertical Inner Border
	Vertical *CT_BorderPr

	// Horizontal Inner Borders
	Horizontal *CT_BorderPr
}

// Validate validates the CT_Consolidation and its children
func (_dbbf *CT_Consolidation) Validate() error {
	return _dbbf.ValidateWithPath("\u0043\u0054_\u0043\u006f\u006es\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e")
}

func (_cgacgg *CT_Users) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ffdca := range start.Attr {
		if _ffdca.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gdgfgb, _bdfafe := _eb.ParseUint(_ffdca.Value, 10, 32)
			if _bdfafe != nil {
				return _bdfafe
			}
			_dccfg := uint32(_gdgfgb)
			_cgacgg.CountAttr = &_dccfg
			continue
		}
	}
_efecc:
	for {
		_gbafeg, _eeacaa := d.Token()
		if _eeacaa != nil {
			return _eeacaa
		}
		switch _faedg := _gbafeg.(type) {
		case _b.StartElement:
			switch _faedg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}:
				_ggafgd := NewCT_SharedUser()
				if _eadaf := d.DecodeElement(_ggafgd, &_faedg); _eadaf != nil {
					return _eadaf
				}
				_cgacgg.UserInfo = append(_cgacgg.UserInfo, _ggafgd)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0055\u0073\u0065\u0072\u0073\u0020\u0025\u0076", _faedg.Name)
				if _dcgeaa := d.Skip(); _dcgeaa != nil {
					return _dcgeaa
				}
			}
		case _b.EndElement:
			break _efecc
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_MergeCells() *CT_MergeCells { _bcdfe := &CT_MergeCells{}; return _bcdfe }

func (_ffgga ST_SheetState) Validate() error { return _ffgga.ValidateWithPath("") }

func (_daaad *CT_PivotCacheRecords) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _daaad.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_daaad.CountAttr)})
	}
	e.EncodeToken(start)
	if _daaad.R != nil {
		_bgacd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072"}}
		for _, _dbccac := range _daaad.R {
			e.EncodeElement(_dbccac, _bgacd)
		}
	}
	if _daaad.ExtLst != nil {
		_cbdae := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_daaad.ExtLst, _cbdae)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func ParseSliceST_CellSpans(s string) (ST_CellSpans, error) {
	return ST_CellSpans(_ea.Fields(s)), nil
}

func (_ffdee *CT_RPrElt) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ffdee.RFont != nil {
		_agdfd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0046\u006f\u006e\u0074"}}
		e.EncodeElement(_ffdee.RFont, _agdfd)
	}
	if _ffdee.Charset != nil {
		_fgdbd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0073\u0065\u0074"}}
		e.EncodeElement(_ffdee.Charset, _fgdbd)
	}
	if _ffdee.Family != nil {
		_bdbef := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u0061\u006d\u0069\u006cy"}}
		e.EncodeElement(_ffdee.Family, _bdbef)
	}
	if _ffdee.B != nil {
		_cbabb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062"}}
		e.EncodeElement(_ffdee.B, _cbabb)
	}
	if _ffdee.I != nil {
		_adffa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069"}}
		e.EncodeElement(_ffdee.I, _adffa)
	}
	if _ffdee.Strike != nil {
		_gbagf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0074\u0072\u0069\u006be"}}
		e.EncodeElement(_ffdee.Strike, _gbagf)
	}
	if _ffdee.Outline != nil {
		_fccba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u0075\u0074\u006c\u0069\u006e\u0065"}}
		e.EncodeElement(_ffdee.Outline, _fccba)
	}
	if _ffdee.Shadow != nil {
		_cfdbg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0068\u0061\u0064\u006fw"}}
		e.EncodeElement(_ffdee.Shadow, _cfdbg)
	}
	if _ffdee.Condense != nil {
		_ffbbe := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}}
		e.EncodeElement(_ffdee.Condense, _ffbbe)
	}
	if _ffdee.Extend != nil {
		_abggde := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u0065\u006ed"}}
		e.EncodeElement(_ffdee.Extend, _abggde)
	}
	if _ffdee.Color != nil {
		_edabc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_ffdee.Color, _edabc)
	}
	if _ffdee.Sz != nil {
		_fbadce := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u007a"}}
		e.EncodeElement(_ffdee.Sz, _fbadce)
	}
	if _ffdee.U != nil {
		_agdae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0075"}}
		e.EncodeElement(_ffdee.U, _agdae)
	}
	if _ffdee.VertAlign != nil {
		_fegbgf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003av\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"}}
		e.EncodeElement(_ffdee.VertAlign, _fegbgf)
	}
	if _ffdee.Scheme != nil {
		_acgg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0063\u0068\u0065\u006de"}}
		e.EncodeElement(_ffdee.Scheme, _acgg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_acedg *CT_ExternalDefinedNames) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bcbeag:
	for {
		_gbfcd, _gcaa := d.Token()
		if _gcaa != nil {
			return _gcaa
		}
		switch _fdbd := _gbfcd.(type) {
		case _b.StartElement:
			switch _fdbd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}:
				_dabeb := NewCT_ExternalDefinedName()
				if _geggb := d.DecodeElement(_dabeb, &_fdbd); _geggb != nil {
					return _geggb
				}
				_acedg.DefinedName = append(_acedg.DefinedName, _dabeb)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0044e\u0066\u0069\u006e\u0065\u0064\u004ea\u006d\u0065\u0073 \u0025\u0076", _fdbd.Name)
				if _fbbd := d.Skip(); _fbbd != nil {
					return _fbbd
				}
			}
		case _b.EndElement:
			break _bcbeag
		case _b.CharData:
		}
	}
	return nil
}

func (_cafee ST_DataValidationType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cafee.String(), start)
}

type CT_SingleXmlCell struct {

	// Table Id
	IdAttr uint32

	// Reference
	RAttr string

	// Connection ID
	ConnectionIdAttr uint32

	// Cell Properties
	XmlCellPr *CT_XmlCellPr

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_bbfgb *CT_PivotCaches) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fdfce:
	for {
		_dcabd, _cgfefa := d.Token()
		if _cgfefa != nil {
			return _cgfefa
		}
		switch _bgcbbc := _dcabd.(type) {
		case _b.StartElement:
			switch _bgcbbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065"}:
				_aafeff := NewCT_PivotCache()
				if _bdagd := d.DecodeElement(_aafeff, &_bgcbbc); _bdagd != nil {
					return _bdagd
				}
				_bbfgb.PivotCache = append(_bbfgb.PivotCache, _aafeff)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061c\u0068e\u0073\u0020\u0025\u0076", _bgcbbc.Name)
				if _facaa := d.Skip(); _facaa != nil {
					return _facaa
				}
			}
		case _b.EndElement:
			break _fdfce
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_DrawingHF() *CT_DrawingHF { _befce := &CT_DrawingHF{}; return _befce }

// Validate validates the CT_QueryTableFields and its children
func (_abegc *CT_QueryTableFields) Validate() error {
	return _abegc.ValidateWithPath("\u0043\u0054\u005f\u0051ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073")
}

type CT_WorkbookProtection struct {

	// Legacy Workbook Password
	WorkbookPasswordAttr *string

	// Workbook Password Character Set
	WorkbookPasswordCharacterSetAttr *string

	// Legacy Revisions Password
	RevisionsPasswordAttr *string

	// Revisions Password Character Set
	RevisionsPasswordCharacterSetAttr *string

	// Lock Structure
	LockStructureAttr *bool

	// Lock Windows
	LockWindowsAttr *bool

	// Lock Revisions
	LockRevisionAttr *bool

	// Cryptographic Algorithm Name
	RevisionsAlgorithmNameAttr *string

	// Password Hash Value
	RevisionsHashValueAttr *string

	// Salt Value for Password Verifier
	RevisionsSaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	RevisionsSpinCountAttr *uint32

	// Cryptographic Algorithm Name
	WorkbookAlgorithmNameAttr *string

	// Password Hash Value
	WorkbookHashValueAttr *string

	// Salt Value for Password Verifier
	WorkbookSaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	WorkbookSpinCountAttr *uint32
}

// Validate validates the CT_RevisionSheetRename and its children
func (_efbcd *CT_RevisionSheetRename) Validate() error {
	return _efbcd.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0053\u0068\u0065\u0065\u0074\u0052\u0065\u006e\u0061m\u0065")
}

func NewCT_BookViews() *CT_BookViews { _cbb := &CT_BookViews{}; return _cbb }

const (
	ST_TypeUnset  ST_Type = 0
	ST_TypeNone   ST_Type = 1
	ST_TypeAll    ST_Type = 2
	ST_TypeRow    ST_Type = 3
	ST_TypeColumn ST_Type = 4
)

func NewCT_Users() *CT_Users { _cfadbe := &CT_Users{}; return _cfadbe }

func (_ggfaf *CT_FontSize) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _babd := range start.Attr {
		if _babd.Name.Local == "\u0076\u0061\u006c" {
			_bfdcc, _cgeec := _eb.ParseFloat(_babd.Value, 64)
			if _cgeec != nil {
				return _cgeec
			}
			_ggfaf.ValAttr = _bfdcc
			continue
		}
	}
	for {
		_efaac, _agae := d.Token()
		if _agae != nil {
			return _ec.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0073", _agae)
		}
		if _aggb, _ebbde := _efaac.(_b.EndElement); _ebbde && _aggb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dbcbf ST_PivotFilterType) Validate() error { return _dbcbf.ValidateWithPath("") }

// Validate validates the CT_RevisionFormatting and its children
func (_facdfb *CT_RevisionFormatting) Validate() error {
	return _facdfb.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067")
}

type ST_Qualifier byte

func (_ggfee *CT_OleObject) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fcbbd := range start.Attr {
		if _fcbbd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fcbbd.Name.Local == "\u0069\u0064" || _fcbbd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fcbbd.Name.Local == "\u0069\u0064" {
			_bbefe, _aeed := _fcbbd.Value, error(nil)
			if _aeed != nil {
				return _aeed
			}
			_ggfee.IdAttr = &_bbefe
			continue
		}
		if _fcbbd.Name.Local == "\u0064\u0076\u0041\u0073\u0070\u0065\u0063\u0074" {
			_ggfee.DvAspectAttr.UnmarshalXMLAttr(_fcbbd)
			continue
		}
		if _fcbbd.Name.Local == "\u006c\u0069\u006e\u006b" {
			_ecaba, _bdgdc := _fcbbd.Value, error(nil)
			if _bdgdc != nil {
				return _bdgdc
			}
			_ggfee.LinkAttr = &_ecaba
			continue
		}
		if _fcbbd.Name.Local == "\u006fl\u0065\u0055\u0070\u0064\u0061\u0074e" {
			_ggfee.OleUpdateAttr.UnmarshalXMLAttr(_fcbbd)
			continue
		}
		if _fcbbd.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u006f\u0061\u0064" {
			_cafeg, _facgc := _eb.ParseBool(_fcbbd.Value)
			if _facgc != nil {
				return _facgc
			}
			_ggfee.AutoLoadAttr = &_cafeg
			continue
		}
		if _fcbbd.Name.Local == "\u0073h\u0061\u0070\u0065\u0049\u0064" {
			_afea, _bgcab := _eb.ParseUint(_fcbbd.Value, 10, 32)
			if _bgcab != nil {
				return _bgcab
			}
			_ggfee.ShapeIdAttr = uint32(_afea)
			continue
		}
		if _fcbbd.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_fgadfa, _bbddb := _fcbbd.Value, error(nil)
			if _bbddb != nil {
				return _bbddb
			}
			_ggfee.ProgIdAttr = &_fgadfa
			continue
		}
	}
_aecab:
	for {
		_agaafa, _affge := d.Token()
		if _affge != nil {
			return _affge
		}
		switch _dgffa := _agaafa.(type) {
		case _b.StartElement:
			switch _dgffa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0050\u0072"}:
				_ggfee.ObjectPr = NewCT_ObjectPr()
				if _eecfa := d.DecodeElement(_ggfee.ObjectPr, &_dgffa); _eecfa != nil {
					return _eecfa
				}
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_O\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076", _dgffa.Name)
				if _eegdd := d.Skip(); _eegdd != nil {
					return _eegdd
				}
			}
		case _b.EndElement:
			break _aecab
		case _b.CharData:
		}
	}
	return nil
}

func (_abdde *CT_ChartFormats) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aae := range start.Attr {
		if _aae.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gfbg, _ggdba := _eb.ParseUint(_aae.Value, 10, 32)
			if _ggdba != nil {
				return _ggdba
			}
			_gccbe := uint32(_gfbg)
			_abdde.CountAttr = &_gccbe
			continue
		}
	}
_daf:
	for {
		_gbcd, _gbdga := d.Token()
		if _gbdga != nil {
			return _gbdga
		}
		switch _cafe := _gbcd.(type) {
		case _b.StartElement:
			switch _cafe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}:
				_acea := NewCT_ChartFormat()
				if _abfb := d.DecodeElement(_acea, &_cafe); _abfb != nil {
					return _abfb
				}
				_abdde.ChartFormat = append(_abdde.ChartFormat, _acea)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025\u0076", _cafe.Name)
				if _eacff := d.Skip(); _eacff != nil {
					return _eacff
				}
			}
		case _b.EndElement:
			break _daf
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_Font() *CT_Font { _dfadd := &CT_Font{}; return _dfadd }

// Validate validates the CT_SortState and its children
func (_fbdcd *CT_SortState) Validate() error {
	return _fbdcd.ValidateWithPath("\u0043\u0054\u005fS\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065")
}

func (_fccfg *CT_RangeSet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aecdbe := range start.Attr {
		if _aecdbe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _aecdbe.Name.Local == "\u0069\u0064" || _aecdbe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _aecdbe.Name.Local == "\u0069\u0064" {
			_geddc, _bdefe := _aecdbe.Value, error(nil)
			if _bdefe != nil {
				return _bdefe
			}
			_fccfg.IdAttr = &_geddc
			continue
		}
		if _aecdbe.Name.Local == "\u0069\u0031" {
			_gbedg, _afaegg := _eb.ParseUint(_aecdbe.Value, 10, 32)
			if _afaegg != nil {
				return _afaegg
			}
			_abdbf := uint32(_gbedg)
			_fccfg.I1Attr = &_abdbf
			continue
		}
		if _aecdbe.Name.Local == "\u0069\u0033" {
			_ecfff, _aagag := _eb.ParseUint(_aecdbe.Value, 10, 32)
			if _aagag != nil {
				return _aagag
			}
			_gadeb := uint32(_ecfff)
			_fccfg.I3Attr = &_gadeb
			continue
		}
		if _aecdbe.Name.Local == "\u0069\u0034" {
			_agdef, _cefbg := _eb.ParseUint(_aecdbe.Value, 10, 32)
			if _cefbg != nil {
				return _cefbg
			}
			_cggcdg := uint32(_agdef)
			_fccfg.I4Attr = &_cggcdg
			continue
		}
		if _aecdbe.Name.Local == "\u0072\u0065\u0066" {
			_bcgbc, _caea := _aecdbe.Value, error(nil)
			if _caea != nil {
				return _caea
			}
			_fccfg.RefAttr = &_bcgbc
			continue
		}
		if _aecdbe.Name.Local == "\u006e\u0061\u006d\u0065" {
			_agcab, _cbbdb := _aecdbe.Value, error(nil)
			if _cbbdb != nil {
				return _cbbdb
			}
			_fccfg.NameAttr = &_agcab
			continue
		}
		if _aecdbe.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_aabab, _decab := _aecdbe.Value, error(nil)
			if _decab != nil {
				return _decab
			}
			_fccfg.SheetAttr = &_aabab
			continue
		}
		if _aecdbe.Name.Local == "\u0069\u0032" {
			_afdda, _ggabd := _eb.ParseUint(_aecdbe.Value, 10, 32)
			if _ggabd != nil {
				return _ggabd
			}
			_caecc := uint32(_afdda)
			_fccfg.I2Attr = &_caecc
			continue
		}
	}
	for {
		_eacaf, _aedef := d.Token()
		if _aedef != nil {
			return _ec.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u003a\u0020\u0025\u0073", _aedef)
		}
		if _gfdfb, _befaaf := _eacaf.(_b.EndElement); _befaaf && _gfdfb.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_X() *CT_X { _bccfa := &CT_X{}; return _bccfa }

type Workbook struct{ CT_Workbook }

type CT_WorksheetSource struct {

	// Reference
	RefAttr *string

	// Named Range
	NameAttr *string

	// Sheet Name
	SheetAttr *string
	IdAttr    *string
}

// ValidateWithPath validates the CT_Set and its children, prefixing error messages with path
func (_bfgbc *CT_Set) ValidateWithPath(path string) error {
	if _baeeg := _bfgbc.SortTypeAttr.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _baeeg != nil {
		return _baeeg
	}
	for _fdagba, _edgfb := range _bfgbc.Tpls {
		if _fgbdbb := _edgfb.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _fdagba)); _fgbdbb != nil {
			return _fgbdbb
		}
	}
	if _bfgbc.SortByTuple != nil {
		if _gaecg := _bfgbc.SortByTuple.ValidateWithPath(path + "\u002f\u0053\u006fr\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"); _gaecg != nil {
			return _gaecg
		}
	}
	return nil
}

func (_gedac ST_PivotFilterType) ValidateWithPath(path string) error {
	switch _gedac {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gedac))
	}
	return nil
}

func (_dfeef *ST_FormulaExpression) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fgbgbe, _faeaa := d.Token()
	if _faeaa != nil {
		return _faeaa
	}
	if _fbbeac, _cafef := _fgbgbe.(_b.EndElement); _cafef && _fbbeac.Name == start.Name {
		*_dfeef = 1
		return nil
	}
	if _adfbcd, _edfbc := _fgbgbe.(_b.CharData); !_edfbc {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fgbgbe)
	} else {
		switch string(_adfbcd) {
		case "":
			*_dfeef = 0
		case "\u0072\u0065\u0066":
			*_dfeef = 1
		case "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072":
			*_dfeef = 2
		case "\u0061\u0072\u0065\u0061":
			*_dfeef = 3
		case "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr":
			*_dfeef = 4
		case "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061":
			*_dfeef = 5
		}
	}
	_fgbgbe, _faeaa = d.Token()
	if _faeaa != nil {
		return _faeaa
	}
	if _bdgeea, _fcdfcb := _fgbgbe.(_b.EndElement); _fcdfcb && _bdgeea.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fgbgbe)
}

const (
	ST_VolValueTypeUnset ST_VolValueType = 0
	ST_VolValueTypeB     ST_VolValueType = 1
	ST_VolValueTypeN     ST_VolValueType = 2
	ST_VolValueTypeE     ST_VolValueType = 3
	ST_VolValueTypeS     ST_VolValueType = 4
)

// Validate validates the CT_AutoSortScope and its children
func (_ced *CT_AutoSortScope) Validate() error {
	return _ced.ValidateWithPath("\u0043\u0054_\u0041\u0075\u0074o\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065")
}

// ValidateWithPath validates the CT_ServerFormat and its children, prefixing error messages with path
func (_eaadea *CT_ServerFormat) ValidateWithPath(path string) error { return nil }

func (_gadc *CT_CalcChain) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_gce := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063"}}
	for _, _aebf := range _gadc.C {
		e.EncodeElement(_aebf, _gce)
	}
	if _gadc.ExtLst != nil {
		_ebcfe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gadc.ExtLst, _ebcfe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_eeaef ST_Objects) ValidateWithPath(path string) error {
	switch _eeaef {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eeaef))
	}
	return nil
}

func (_adddd *CT_Set) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbgfd := range start.Attr {
		if _fbgfd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gffbcc, _degde := _eb.ParseUint(_fbgfd.Value, 10, 32)
			if _degde != nil {
				return _degde
			}
			_gabbf := uint32(_gffbcc)
			_adddd.CountAttr = &_gabbf
			continue
		}
		if _fbgfd.Name.Local == "\u006da\u0078\u0052\u0061\u006e\u006b" {
			_dfebe, _fbgbcc := _eb.ParseInt(_fbgfd.Value, 10, 32)
			if _fbgbcc != nil {
				return _fbgbcc
			}
			_adddd.MaxRankAttr = int32(_dfebe)
			continue
		}
		if _fbgfd.Name.Local == "\u0073\u0065\u0074\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e" {
			_cddae, _ecfgg := _fbgfd.Value, error(nil)
			if _ecfgg != nil {
				return _ecfgg
			}
			_adddd.SetDefinitionAttr = _cddae
			continue
		}
		if _fbgfd.Name.Local == "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065" {
			_adddd.SortTypeAttr.UnmarshalXMLAttr(_fbgfd)
			continue
		}
		if _fbgfd.Name.Local == "q\u0075\u0065\u0072\u0079\u0046\u0061\u0069\u006c\u0065\u0064" {
			_bcfdb, _cdeebg := _eb.ParseBool(_fbgfd.Value)
			if _cdeebg != nil {
				return _cdeebg
			}
			_adddd.QueryFailedAttr = &_bcfdb
			continue
		}
	}
_bfaga:
	for {
		_cedde, _afefde := d.Token()
		if _afefde != nil {
			return _afefde
		}
		switch _bcfdbb := _cedde.(type) {
		case _b.StartElement:
			switch _bcfdbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_dcacf := NewCT_Tuples()
				if _dbbde := d.DecodeElement(_dcacf, &_bcfdbb); _dbbde != nil {
					return _dbbde
				}
				_adddd.Tpls = append(_adddd.Tpls, _dcacf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u006f\u0072\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006f\u0072\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"}:
				_adddd.SortByTuple = NewCT_Tuples()
				if _bbffbe := d.DecodeElement(_adddd.SortByTuple, &_bcfdbb); _bbffbe != nil {
					return _bbffbe
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0065\u0074\u0020\u0025\u0076", _bcfdbb.Name)
				if _gcdec := d.Skip(); _gcdec != nil {
					return _gcdec
				}
			}
		case _b.EndElement:
			break _bfaga
		case _b.CharData:
		}
	}
	return nil
}

func (_fefbg *CT_PivotSelection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fefbg.PaneAttr != ST_PaneUnset {
		_bbaf, _abbeb := _fefbg.PaneAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0061\u006e\u0065"})
		if _abbeb != nil {
			return _abbeb
		}
		start.Attr = append(start.Attr, _bbaf)
	}
	if _fefbg.ShowHeaderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefbg.ShowHeaderAttr))})
	}
	if _fefbg.LabelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0061\u0062e\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefbg.LabelAttr))})
	}
	if _fefbg.DataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefbg.DataAttr))})
	}
	if _fefbg.ExtendableAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0078\u0074\u0065\u006e\u0064\u0061\u0062\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fefbg.ExtendableAttr))})
	}
	if _fefbg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_fefbg.CountAttr)})
	}
	if _fefbg.AxisAttr != ST_AxisUnset {
		_eafad, _cffad := _fefbg.AxisAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0078\u0069\u0073"})
		if _cffad != nil {
			return _cffad
		}
		start.Attr = append(start.Attr, _eafad)
	}
	if _fefbg.DimensionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, Value: _ec.Sprintf("\u0025\u0076", *_fefbg.DimensionAttr)})
	}
	if _fefbg.StartAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0061r\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_fefbg.StartAttr)})
	}
	if _fefbg.MinAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_fefbg.MinAttr)})
	}
	if _fefbg.MaxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078"}, Value: _ec.Sprintf("\u0025\u0076", *_fefbg.MaxAttr)})
	}
	if _fefbg.ActiveRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061c\u0074\u0069\u0076\u0065\u0052\u006fw"}, Value: _ec.Sprintf("\u0025\u0076", *_fefbg.ActiveRowAttr)})
	}
	if _fefbg.ActiveColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061c\u0074\u0069\u0076\u0065\u0043\u006fl"}, Value: _ec.Sprintf("\u0025\u0076", *_fefbg.ActiveColAttr)})
	}
	if _fefbg.PreviousRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0052\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0076", *_fefbg.PreviousRowAttr)})
	}
	if _fefbg.PreviousColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0043\u006f\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_fefbg.PreviousColAttr)})
	}
	if _fefbg.ClickAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006c\u0069c\u006b"}, Value: _ec.Sprintf("\u0025\u0076", *_fefbg.ClickAttr)})
	}
	if _fefbg.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_fefbg.IdAttr)})
	}
	e.EncodeToken(start)
	_eagda := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_fefbg.PivotArea, _eagda)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cacfg *CT_PivotAreas) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cacfg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_cacfg.CountAttr)})
	}
	e.EncodeToken(start)
	if _cacfg.PivotArea != nil {
		_bgcaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
		for _, _bbbbc := range _cacfg.PivotArea {
			e.EncodeElement(_bbbbc, _bgcaf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cgcfgd *ST_Objects) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bedbdg, _cfaeab := d.Token()
	if _cfaeab != nil {
		return _cfaeab
	}
	if _afffcg, _abagb := _bedbdg.(_b.EndElement); _abagb && _afffcg.Name == start.Name {
		*_cgcfgd = 1
		return nil
	}
	if _feeee, _ffeabe := _bedbdg.(_b.CharData); !_ffeabe {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bedbdg)
	} else {
		switch string(_feeee) {
		case "":
			*_cgcfgd = 0
		case "\u0061\u006c\u006c":
			*_cgcfgd = 1
		case "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073":
			*_cgcfgd = 2
		case "\u006e\u006f\u006e\u0065":
			*_cgcfgd = 3
		}
	}
	_bedbdg, _cfaeab = d.Token()
	if _cfaeab != nil {
		return _cfaeab
	}
	if _egfad, _ecbbe := _bedbdg.(_b.EndElement); _ecbbe && _egfad.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bedbdg)
}

// ValidateWithPath validates the CT_ExternalSheetName and its children, prefixing error messages with path
func (_cceb *CT_ExternalSheetName) ValidateWithPath(path string) error { return nil }

func (_feceaf *ST_GroupBy) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_feceaf = 0
	case "\u0072\u0061\u006eg\u0065":
		*_feceaf = 1
	case "\u0073e\u0063\u006f\u006e\u0064\u0073":
		*_feceaf = 2
	case "\u006di\u006e\u0075\u0074\u0065\u0073":
		*_feceaf = 3
	case "\u0068\u006f\u0075r\u0073":
		*_feceaf = 4
	case "\u0064\u0061\u0079\u0073":
		*_feceaf = 5
	case "\u006d\u006f\u006e\u0074\u0068\u0073":
		*_feceaf = 6
	case "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073":
		*_feceaf = 7
	case "\u0079\u0065\u0061r\u0073":
		*_feceaf = 8
	}
	return nil
}

func NewCT_MdxTuple() *CT_MdxTuple { _bfdaf := &CT_MdxTuple{}; return _bfdaf }

// Validate validates the CT_CellSmartTag and its children
func (_fefe *CT_CellSmartTag) Validate() error {
	return _fefe.ValidateWithPath("\u0043T\u005fC\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067")
}

// Validate validates the CT_WebPublishItem and its children
func (_adfce *CT_WebPublishItem) Validate() error {
	return _adfce.ValidateWithPath("\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d")
}

func NewEG_ExtensionList() *EG_ExtensionList { _dbeeef := &EG_ExtensionList{}; return _dbeeef }

// ValidateWithPath validates the CT_Pages and its children, prefixing error messages with path
func (_eagffd *CT_Pages) ValidateWithPath(path string) error {
	for _caafb, _gfdda := range _eagffd.Page {
		if _bfeaa := _gfdda.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0050\u0061\u0067\u0065\u005b\u0025\u0064\u005d", path, _caafb)); _bfeaa != nil {
			return _bfeaa
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ChartFormat and its children, prefixing error messages with path
func (_bcae *CT_ChartFormat) ValidateWithPath(path string) error {
	if _cgba := _bcae.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _cgba != nil {
		return _cgba
	}
	return nil
}

func (_bfgege *ST_ShowDataAs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fddfg, _baafbg := d.Token()
	if _baafbg != nil {
		return _baafbg
	}
	if _baabed, _gfggdd := _fddfg.(_b.EndElement); _gfggdd && _baabed.Name == start.Name {
		*_bfgege = 1
		return nil
	}
	if _gcbfbc, _aecag := _fddfg.(_b.CharData); !_aecag {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fddfg)
	} else {
		switch string(_gcbfbc) {
		case "":
			*_bfgege = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_bfgege = 1
		case "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065":
			*_bfgege = 2
		case "\u0070e\u0072\u0063\u0065\u006e\u0074":
			*_bfgege = 3
		case "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066":
			*_bfgege = 4
		case "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c":
			*_bfgege = 5
		case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077":
			*_bfgege = 6
		case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c":
			*_bfgege = 7
		case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c":
			*_bfgege = 8
		case "\u0069\u006e\u0064e\u0078":
			*_bfgege = 9
		}
	}
	_fddfg, _baafbg = d.Token()
	if _baafbg != nil {
		return _baafbg
	}
	if _bdeecf, _ecgdde := _fddfg.(_b.EndElement); _ecgdde && _bdeecf.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fddfg)
}

func (_aeedd *MapInfo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u004d\u0061\u0070\u0049\u006e\u0066\u006f"
	return _aeedd.CT_MapInfo.MarshalXML(e, start)
}

func (_aeffb *CT_OutlinePr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dddfg := range start.Attr {
		if _dddfg.Name.Local == "a\u0070\u0070\u006c\u0079\u0053\u0074\u0079\u006c\u0065\u0073" {
			_ebdcc, _bdbcca := _eb.ParseBool(_dddfg.Value)
			if _bdbcca != nil {
				return _bdbcca
			}
			_aeffb.ApplyStylesAttr = &_ebdcc
			continue
		}
		if _dddfg.Name.Local == "\u0073\u0075\u006dm\u0061\u0072\u0079\u0042\u0065\u006c\u006f\u0077" {
			_aadff, _abcde := _eb.ParseBool(_dddfg.Value)
			if _abcde != nil {
				return _abcde
			}
			_aeffb.SummaryBelowAttr = &_aadff
			continue
		}
		if _dddfg.Name.Local == "\u0073\u0075\u006dm\u0061\u0072\u0079\u0052\u0069\u0067\u0068\u0074" {
			_ecdab, _effbfa := _eb.ParseBool(_dddfg.Value)
			if _effbfa != nil {
				return _effbfa
			}
			_aeffb.SummaryRightAttr = &_ecdab
			continue
		}
		if _dddfg.Name.Local == "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073" {
			_bfgaa, _cdgec := _eb.ParseBool(_dddfg.Value)
			if _cdgec != nil {
				return _cdgec
			}
			_aeffb.ShowOutlineSymbolsAttr = &_bfgaa
			continue
		}
	}
	for {
		_eedgbg, _dedfb := d.Token()
		if _dedfb != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0075t\u006c\u0069\u006e\u0065\u0050\u0072\u003a\u0020\u0025\u0073", _dedfb)
		}
		if _gabgf, _bace := _eedgbg.(_b.EndElement); _bace && _gabgf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_XmlColumnPr and its children
func (_abfgfb *CT_XmlColumnPr) Validate() error {
	return _abfgfb.ValidateWithPath("\u0043\u0054\u005f\u0058\u006d\u006c\u0043\u006f\u006cu\u006d\u006e\u0050\u0072")
}

func (_gdafdg ST_HorizontalAlignment) Validate() error { return _gdafdg.ValidateWithPath("") }

type CT_SheetIdMap struct {

	// Sheet Count
	CountAttr *uint32

	// Sheet Id
	SheetId []*CT_SheetId
}

// ValidateWithPath validates the CT_SheetIdMap and its children, prefixing error messages with path
func (_adgdec *CT_SheetIdMap) ValidateWithPath(path string) error {
	for _bgfdb, _gdbef := range _adgdec.SheetId {
		if _decdd := _gdbef.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0053\u0068\u0065\u0065\u0074\u0049d\u005b\u0025\u0064\u005d", path, _bgfdb)); _decdd != nil {
			return _decdd
		}
	}
	return nil
}

func (_ffgfd *CT_SheetFormatPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ccfede := range start.Attr {
		if _ccfede.Name.Local == "\u0062\u0061\u0073e\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068" {
			_edaff, _cddagf := _eb.ParseUint(_ccfede.Value, 10, 32)
			if _cddagf != nil {
				return _cddagf
			}
			_eggcf := uint32(_edaff)
			_ffgfd.BaseColWidthAttr = &_eggcf
			continue
		}
		if _ccfede.Name.Local == "\u0064e\u0066a\u0075\u006c\u0074\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068" {
			_bcfbd, _aaeff := _eb.ParseFloat(_ccfede.Value, 64)
			if _aaeff != nil {
				return _aaeff
			}
			_ffgfd.DefaultColWidthAttr = &_bcfbd
			continue
		}
		if _ccfede.Name.Local == "\u0064\u0065f\u0061\u0075\u006ct\u0052\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074" {
			_faedae, _dfcbbf := _eb.ParseFloat(_ccfede.Value, 64)
			if _dfcbbf != nil {
				return _dfcbbf
			}
			_ffgfd.DefaultRowHeightAttr = _faedae
			continue
		}
		if _ccfede.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074" {
			_aadbc, _ffcef := _eb.ParseBool(_ccfede.Value)
			if _ffcef != nil {
				return _ffcef
			}
			_ffgfd.CustomHeightAttr = &_aadbc
			continue
		}
		if _ccfede.Name.Local == "\u007a\u0065\u0072\u006f\u0048\u0065\u0069\u0067\u0068\u0074" {
			_bffecb, _fbcgf := _eb.ParseBool(_ccfede.Value)
			if _fbcgf != nil {
				return _fbcgf
			}
			_ffgfd.ZeroHeightAttr = &_bffecb
			continue
		}
		if _ccfede.Name.Local == "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070" {
			_eeffef, _aadfaa := _eb.ParseBool(_ccfede.Value)
			if _aadfaa != nil {
				return _aadfaa
			}
			_ffgfd.ThickTopAttr = &_eeffef
			continue
		}
		if _ccfede.Name.Local == "t\u0068\u0069\u0063\u006b\u0042\u006f\u0074\u0074\u006f\u006d" {
			_ecged, _feffd := _eb.ParseBool(_ccfede.Value)
			if _feffd != nil {
				return _feffd
			}
			_ffgfd.ThickBottomAttr = &_ecged
			continue
		}
		if _ccfede.Name.Local == "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0052\u006f\u0077" {
			_bfcdf, _eddbfe := _eb.ParseUint(_ccfede.Value, 10, 8)
			if _eddbfe != nil {
				return _eddbfe
			}
			_dacge := uint8(_bfcdf)
			_ffgfd.OutlineLevelRowAttr = &_dacge
			continue
		}
		if _ccfede.Name.Local == "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0043\u006f\u006c" {
			_badbg, _baced := _eb.ParseUint(_ccfede.Value, 10, 8)
			if _baced != nil {
				return _baced
			}
			_bcgge := uint8(_badbg)
			_ffgfd.OutlineLevelColAttr = &_bcgge
			continue
		}
	}
	for {
		_egfgce, _dddb := d.Token()
		if _dddb != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u0065\u0065t\u0046o\u0072\u006d\u0061\u0074\u0050\u0072\u003a \u0025\u0073", _dddb)
		}
		if _fefgc, _cdecc := _egfgce.(_b.EndElement); _cdecc && _fefgc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cfadgb *CT_SmartTagPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _affec := range start.Attr {
		if _affec.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_befceb, _bfage := _eb.ParseBool(_affec.Value)
			if _bfage != nil {
				return _bfage
			}
			_cfadgb.EmbedAttr = &_befceb
			continue
		}
		if _affec.Name.Local == "\u0073\u0068\u006f\u0077" {
			_cfadgb.ShowAttr.UnmarshalXMLAttr(_affec)
			continue
		}
	}
	for {
		_fedg, _cdfg := d.Token()
		if _cdfg != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0053m\u0061r\u0074T\u0061\u0067\u0050\u0072\u003a\u0020\u0025s", _cdfg)
		}
		if _ffcdd, _fgdbdf := _fedg.(_b.EndElement); _fgdbdf && _ffcdd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Macrosheet struct {

	// Sheet Properties
	SheetPr *CT_SheetPr

	// Macro Sheet Dimensions
	Dimension *CT_SheetDimension

	// Macro Sheet Views
	SheetViews *CT_SheetViews

	// Sheet Format Properties
	SheetFormatPr *CT_SheetFormatPr

	// Column Information
	Cols []*CT_Cols

	// Sheet Data
	SheetData *CT_SheetData

	// Sheet Protection Options
	SheetProtection *CT_SheetProtection

	// AutoFilter
	AutoFilter *CT_AutoFilter

	// Sort State
	SortState *CT_SortState

	// Data Consolidation
	DataConsolidate *CT_DataConsolidate

	// Custom Sheet Views
	CustomSheetViews *CT_CustomSheetViews

	// Phonetic Properties
	PhoneticPr *CT_PhoneticPr

	// Conditional Formatting
	ConditionalFormatting []*CT_ConditionalFormatting

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Margins
	PageMargins *CT_PageMargins

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header Footer Settings
	HeaderFooter *CT_HeaderFooter

	// Horizontal Page Breaks (Row)
	RowBreaks *CT_PageBreak

	// Vertical Page Breaks
	ColBreaks *CT_PageBreak

	// Custom Properties
	CustomProperties *CT_CustomProperties

	// Drawing
	Drawing *CT_Drawing

	// Legacy Drawing Reference
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Header Footer
	LegacyDrawingHF *CT_LegacyDrawing
	DrawingHF       *CT_DrawingHF

	// Background Image
	Picture *CT_SheetBackgroundPicture

	// Embedded Objects
	OleObjects *CT_OleObjects

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func NewCT_NumFmts() *CT_NumFmts { _acfgd := &CT_NumFmts{}; return _acfgd }

func NewCT_Record() *CT_Record { _ecfbe := &CT_Record{}; return _ecfbe }

// ValidateWithPath validates the CT_RevisionMove and its children, prefixing error messages with path
func (_dgegd *CT_RevisionMove) ValidateWithPath(path string) error {
	for _dfadab, _gbccaa := range _dgegd.Undo {
		if _ggada := _gbccaa.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0055\u006e\u0064\u006f\u005b\u0025\u0064\u005d", path, _dfadab)); _ggada != nil {
			return _ggada
		}
	}
	for _cffee, _cfccbe := range _dgegd.Rcc {
		if _deaba := _cfccbe.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0063\u005b\u0025\u0064\u005d", path, _cffee)); _deaba != nil {
			return _deaba
		}
	}
	for _agegd, _egegd := range _dgegd.Rfmt {
		if _gcbfad := _egegd.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0052\u0066\u006d\u0074\u005b\u0025\u0064\u005d", path, _agegd)); _gcbfad != nil {
			return _gcbfad
		}
	}
	return nil
}

func (_cgbefg ST_FormulaExpression) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cgbefg.String(), start)
}

type CT_CustomSheetView struct {

	// GUID
	GuidAttr string

	// Print Scale
	ScaleAttr *uint32

	// Color Id
	ColorIdAttr *uint32

	// Show Page Breaks
	ShowPageBreaksAttr *bool

	// Show Formulas
	ShowFormulasAttr *bool

	// Show Grid Lines
	ShowGridLinesAttr *bool

	// Show Headers
	ShowRowColAttr *bool

	// Show Outline Symbols
	OutlineSymbolsAttr *bool

	// Show Zero Values
	ZeroValuesAttr *bool

	// Fit To Page
	FitToPageAttr *bool

	// Print Area Defined
	PrintAreaAttr *bool

	// Filtered List
	FilterAttr *bool

	// Show AutoFitler Drop Down Controls
	ShowAutoFilterAttr *bool

	// Hidden Rows
	HiddenRowsAttr *bool

	// Hidden Columns
	HiddenColumnsAttr *bool

	// Visible State
	StateAttr ST_SheetState

	// Filter
	FilterUniqueAttr *bool

	// View Type
	ViewAttr ST_SheetViewType

	// Show Ruler
	ShowRulerAttr *bool

	// Top Left Visible Cell
	TopLeftCellAttr *string

	// Pane Split Information
	Pane *CT_Pane

	// Selection
	Selection *CT_Selection

	// Horizontal Page Breaks
	RowBreaks *CT_PageBreak

	// Vertical Page Breaks
	ColBreaks *CT_PageBreak

	// Page Margins
	PageMargins *CT_PageMargins

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header Footer Settings
	HeaderFooter *CT_HeaderFooter

	// AutoFilter Settings
	AutoFilter *CT_AutoFilter
	ExtLst     *CT_ExtensionList
}

type CT_CustomFilter struct {

	// Filter Comparison Operator
	OperatorAttr ST_FilterOperator

	// Top or Bottom Value
	ValAttr *string
}

func NewCT_Authors() *CT_Authors { _eea := &CT_Authors{}; return _eea }

func (_fbcde ST_TableStyleType) String() string {
	switch _fbcde {
	case 0:
		return ""
	case 1:
		return "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065"
	case 2:
		return "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw"
	case 3:
		return "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case 4:
		return "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case 5:
		return "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case 6:
		return "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065"
	case 7:
		return "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065"
	case 8:
		return "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065"
	case 9:
		return "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065"
	case 10:
		return "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c"
	case 11:
		return "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c"
	case 12:
		return "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c"
	case 13:
		return "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c"
	case 14:
		return "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case 15:
		return "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e"
	case 16:
		return "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case 17:
		return "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case 18:
		return "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077"
	case 19:
		return "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case 20:
		return "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077"
	case 21:
		return "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case 22:
		return "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067"
	case 23:
		return "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case 24:
		return "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case 25:
		return "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067"
	case 26:
		return "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case 27:
		return "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073"
	case 28:
		return "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return ""
}

// ValidateWithPath validates the CT_Reviewed and its children, prefixing error messages with path
func (_fbeaeb *CT_Reviewed) ValidateWithPath(path string) error { return nil }

func (_eceg *CT_CellWatch) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ffgbf := range start.Attr {
		if _ffgbf.Name.Local == "\u0072" {
			_aece, _bbcc := _ffgbf.Value, error(nil)
			if _bbcc != nil {
				return _bbcc
			}
			_eceg.RAttr = _aece
			continue
		}
	}
	for {
		_ffeef, _ccfc := d.Token()
		if _ccfc != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065l\u006c\u0057\u0061\u0074\u0063\u0068\u003a\u0020\u0025\u0073", _ccfc)
		}
		if _gggb, _aggdc := _ffeef.(_b.EndElement); _aggdc && _gggb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cbead *CT_PCDKPI) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _cbead.UniqueNameAttr)})
	if _cbead.CaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_cbead.CaptionAttr)})
	}
	if _cbead.DisplayFolderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_cbead.DisplayFolderAttr)})
	}
	if _cbead.MeasureGroupAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, Value: _ec.Sprintf("\u0025\u0076", *_cbead.MeasureGroupAttr)})
	}
	if _cbead.ParentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0072\u0065\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_cbead.ParentAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006cu\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _cbead.ValueAttr)})
	if _cbead.GoalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u006f\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_cbead.GoalAttr)})
	}
	if _cbead.StatusAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0061\u0074\u0075\u0073"}, Value: _ec.Sprintf("\u0025\u0076", *_cbead.StatusAttr)})
	}
	if _cbead.TrendAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0072\u0065n\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_cbead.TrendAttr)})
	}
	if _cbead.WeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0065\u0069\u0067\u0068\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_cbead.WeightAttr)})
	}
	if _cbead.TimeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_cbead.TimeAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TableStyles and its children, prefixing error messages with path
func (_eeegd *CT_TableStyles) ValidateWithPath(path string) error {
	for _dgecd, _ebgab := range _eeegd.TableStyle {
		if _fddbd := _ebgab.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u005b\u0025\u0064\u005d", path, _dgecd)); _fddbd != nil {
			return _fddbd
		}
	}
	return nil
}

func (_eggbc *ST_VolValueType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cfcea, _fafagd := d.Token()
	if _fafagd != nil {
		return _fafagd
	}
	if _baffb, _ddfag := _cfcea.(_b.EndElement); _ddfag && _baffb.Name == start.Name {
		*_eggbc = 1
		return nil
	}
	if _feagb, _dfbcg := _cfcea.(_b.CharData); !_dfbcg {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cfcea)
	} else {
		switch string(_feagb) {
		case "":
			*_eggbc = 0
		case "\u0062":
			*_eggbc = 1
		case "\u006e":
			*_eggbc = 2
		case "\u0065":
			*_eggbc = 3
		case "\u0073":
			*_eggbc = 4
		}
	}
	_cfcea, _fafagd = d.Token()
	if _fafagd != nil {
		return _fafagd
	}
	if _gaaba, _gggga := _cfcea.(_b.EndElement); _gggga && _gaaba.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cfcea)
}

func NewCT_ColorFilter() *CT_ColorFilter { _ebgc := &CT_ColorFilter{}; return _ebgc }

func (_gffae *ST_CellFormulaType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfedcb, _afagde := d.Token()
	if _afagde != nil {
		return _afagde
	}
	if _cgcaf, _bebdg := _bfedcb.(_b.EndElement); _bebdg && _cgcaf.Name == start.Name {
		*_gffae = 1
		return nil
	}
	if _gfbfcc, _ddfgb := _bfedcb.(_b.CharData); !_ddfgb {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfedcb)
	} else {
		switch string(_gfbfcc) {
		case "":
			*_gffae = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_gffae = 1
		case "\u0061\u0072\u0072a\u0079":
			*_gffae = 2
		case "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce":
			*_gffae = 3
		case "\u0073\u0068\u0061\u0072\u0065\u0064":
			*_gffae = 4
		}
	}
	_bfedcb, _afagde = d.Token()
	if _afagde != nil {
		return _afagde
	}
	if _efefc, _gfgcd := _bfedcb.(_b.EndElement); _gfgcd && _efefc.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfedcb)
}

func (_cdgeef ST_GroupBy) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_deeba := _b.Attr{}
	_deeba.Name = name
	switch _cdgeef {
	case ST_GroupByUnset:
		_deeba.Value = ""
	case ST_GroupByRange:
		_deeba.Value = "\u0072\u0061\u006eg\u0065"
	case ST_GroupBySeconds:
		_deeba.Value = "\u0073e\u0063\u006f\u006e\u0064\u0073"
	case ST_GroupByMinutes:
		_deeba.Value = "\u006di\u006e\u0075\u0074\u0065\u0073"
	case ST_GroupByHours:
		_deeba.Value = "\u0068\u006f\u0075r\u0073"
	case ST_GroupByDays:
		_deeba.Value = "\u0064\u0061\u0079\u0073"
	case ST_GroupByMonths:
		_deeba.Value = "\u006d\u006f\u006e\u0074\u0068\u0073"
	case ST_GroupByQuarters:
		_deeba.Value = "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073"
	case ST_GroupByYears:
		_deeba.Value = "\u0079\u0065\u0061r\u0073"
	}
	return _deeba, nil
}

func (_bdeefg ST_VolDepType) String() string {
	switch _bdeefg {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061"
	case 2:
		return "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073"
	}
	return ""
}

func (_edgdc *CT_TableStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _edgdc.NameAttr)})
	if _edgdc.PivotAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0069\u0076o\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_edgdc.PivotAttr))})
	}
	if _edgdc.TableAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0062l\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_edgdc.TableAttr))})
	}
	if _edgdc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_edgdc.CountAttr)})
	}
	e.EncodeToken(start)
	if _edgdc.TableStyleElement != nil {
		_agbb := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079l\u0065\u0045\u006c\u0065me\u006e\u0074"}}
		for _, _afbee := range _edgdc.TableStyleElement {
			e.EncodeElement(_afbee, _agbb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Connections struct {

	// Connection
	Connection []*CT_Connection
}

// Validate validates the CT_IconFilter and its children
func (_deeec *CT_IconFilter) Validate() error {
	return _deeec.ValidateWithPath("\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072")
}

// ValidateWithPath validates the CT_Users and its children, prefixing error messages with path
func (_eebfcd *CT_Users) ValidateWithPath(path string) error {
	for _eabcdg, _geddce := range _eebfcd.UserInfo {
		if _ddabf := _geddce.ValidateWithPath(_ec.Sprintf("\u0025s\u002fU\u0073\u0065\u0072\u0049\u006e\u0066\u006f\u005b\u0025\u0064\u005d", path, _eabcdg)); _ddabf != nil {
			return _ddabf
		}
	}
	return nil
}

func (_ecggee *CT_RevisionDefinedName) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ecggee.LocalSheetIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_ecggee.LocalSheetIdAttr)})
	}
	if _ecggee.CustomViewAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0056\u0069\u0065\u0077"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ecggee.CustomViewAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _ecggee.NameAttr)})
	if _ecggee.FunctionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ecggee.FunctionAttr))})
	}
	if _ecggee.OldFunctionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "o\u006c\u0064\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ecggee.OldFunctionAttr))})
	}
	if _ecggee.FunctionGroupIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_ecggee.FunctionGroupIdAttr)})
	}
	if _ecggee.OldFunctionGroupIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fl\u0064F\u0075\u006e\u0063\u0074\u0069o\u006e\u0047r\u006f\u0075\u0070\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_ecggee.OldFunctionGroupIdAttr)})
	}
	if _ecggee.ShortcutKeyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079"}, Value: _ec.Sprintf("\u0025\u0076", *_ecggee.ShortcutKeyAttr)})
	}
	if _ecggee.OldShortcutKeyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064\u0053\u0068\u006f\u0072\u0074\u0063u\u0074\u004b\u0065\u0079"}, Value: _ec.Sprintf("\u0025\u0076", *_ecggee.OldShortcutKeyAttr)})
	}
	if _ecggee.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ecggee.HiddenAttr))})
	}
	if _ecggee.OldHiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fl\u0064\u0048\u0069\u0064\u0064\u0065n"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ecggee.OldHiddenAttr))})
	}
	if _ecggee.CustomMenuAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075"}, Value: _ec.Sprintf("\u0025\u0076", *_ecggee.CustomMenuAttr)})
	}
	if _ecggee.OldCustomMenuAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064\u0043\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075"}, Value: _ec.Sprintf("\u0025\u0076", *_ecggee.OldCustomMenuAttr)})
	}
	if _ecggee.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_ecggee.DescriptionAttr)})
	}
	if _ecggee.OldDescriptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064\u0044\u0065\u0073\u0063\u0072\u0069p\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_ecggee.OldDescriptionAttr)})
	}
	if _ecggee.HelpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u006c\u0070"}, Value: _ec.Sprintf("\u0025\u0076", *_ecggee.HelpAttr)})
	}
	if _ecggee.OldHelpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fl\u0064\u0048\u0065\u006c\u0070"}, Value: _ec.Sprintf("\u0025\u0076", *_ecggee.OldHelpAttr)})
	}
	if _ecggee.StatusBarAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r"}, Value: _ec.Sprintf("\u0025\u0076", *_ecggee.StatusBarAttr)})
	}
	if _ecggee.OldStatusBarAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064S\u0074\u0061\u0074\u0075\u0073\u0042\u0061\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_ecggee.OldStatusBarAttr)})
	}
	if _ecggee.CommentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ecggee.CommentAttr)})
	}
	if _ecggee.OldCommentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064\u0043\u006f\u006d\u006d\u0065\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ecggee.OldCommentAttr)})
	}
	if _ecggee.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_ecggee.RIdAttr)})
	}
	if _ecggee.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ecggee.UaAttr))})
	}
	if _ecggee.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ecggee.RaAttr))})
	}
	e.EncodeToken(start)
	if _ecggee.Formula != nil {
		_eacag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061"}}
		_f.AddPreserveSpaceAttr(&_eacag, *_ecggee.Formula)
		e.EncodeElement(_ecggee.Formula, _eacag)
	}
	if _ecggee.OldFormula != nil {
		_afdfb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}}
		_f.AddPreserveSpaceAttr(&_afdfb, *_ecggee.OldFormula)
		e.EncodeElement(_ecggee.OldFormula, _afdfb)
	}
	if _ecggee.ExtLst != nil {
		_bcageb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ecggee.ExtLst, _bcageb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fbagd *ST_DataValidationImeMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fbagd = 0
	case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
		*_fbagd = 1
	case "\u006f\u0066\u0066":
		*_fbagd = 2
	case "\u006f\u006e":
		*_fbagd = 3
	case "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064":
		*_fbagd = 4
	case "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
		*_fbagd = 5
	case "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
		*_fbagd = 6
	case "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
		*_fbagd = 7
	case "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a":
		*_fbagd = 8
	case "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a":
		*_fbagd = 9
	case "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c":
		*_fbagd = 10
	case "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c":
		*_fbagd = 11
	}
	return nil
}

func (_gbcgfb ST_GrowShrinkType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gbcgfb.String(), start)
}

type CT_MetadataBlocks struct {

	// Metadata Block Count
	CountAttr *uint32

	// Metadata Block
	Bk []*CT_MetadataBlock
}

// ValidateWithPath validates the CT_SheetPr and its children, prefixing error messages with path
func (_dcfccc *CT_SheetPr) ValidateWithPath(path string) error {
	if _dcfccc.TabColor != nil {
		if _agbe := _dcfccc.TabColor.ValidateWithPath(path + "\u002fT\u0061\u0062\u0043\u006f\u006c\u006fr"); _agbe != nil {
			return _agbe
		}
	}
	if _dcfccc.OutlinePr != nil {
		if _dfcfc := _dcfccc.OutlinePr.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072"); _dfcfc != nil {
			return _dfcfc
		}
	}
	if _dcfccc.PageSetUpPr != nil {
		if _fdffc := _dcfccc.PageSetUpPr.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"); _fdffc != nil {
			return _fdffc
		}
	}
	return nil
}

type CT_Comment struct {

	// Cell Reference
	RefAttr string

	// Author Id
	AuthorIdAttr uint32

	// Unique Identifier for Comment
	GuidAttr *string

	// Shape ID
	ShapeIdAttr *uint32

	// Comment Text
	Text *CT_Rst

	// Comment Properties
	CommentPr *CT_CommentPr
}

func (_afeeg ST_PatternType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_afeeg.String(), start)
}

// ValidateWithPath validates the CT_PivotCache and its children, prefixing error messages with path
func (_fadaba *CT_PivotCache) ValidateWithPath(path string) error { return nil }

func NewCT_Schema() *CT_Schema { _gdfgf := &CT_Schema{}; return _gdfgf }

func (_cdgcd *CT_Rst) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fgebf:
	for {
		_dgcce, _gefad := d.Token()
		if _gefad != nil {
			return _gefad
		}
		switch _dgfbc := _dgcce.(type) {
		case _b.StartElement:
			switch _dgfbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				_cdgcd.T = new(string)
				if _dface := d.DecodeElement(_cdgcd.T, &_dgfbc); _dface != nil {
					return _dface
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_fggf := NewCT_RElt()
				if _geggbg := d.DecodeElement(_fggf, &_dgfbc); _geggbg != nil {
					return _geggbg
				}
				_cdgcd.R = append(_cdgcd.R, _fggf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0068"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0068"}:
				_dgaac := NewCT_PhoneticRun()
				if _eaeeb := d.DecodeElement(_dgaac, &_dgfbc); _eaeeb != nil {
					return _eaeeb
				}
				_cdgcd.RPh = append(_cdgcd.RPh, _dgaac)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_cdgcd.PhoneticPr = NewCT_PhoneticPr()
				if _cfaf := d.DecodeElement(_cdgcd.PhoneticPr, &_dgfbc); _cfaf != nil {
					return _cfaf
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0073\u0074\u0020\u0025\u0076", _dgfbc.Name)
				if _fbebb := d.Skip(); _fbebb != nil {
					return _fbebb
				}
			}
		case _b.EndElement:
			break _fgebf
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AutoSortScope and its children, prefixing error messages with path
func (_daa *CT_AutoSortScope) ValidateWithPath(path string) error {
	if _aad := _daa.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _aad != nil {
		return _aad
	}
	return nil
}

func (_gcaee *CT_ConditionalFormatting) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gcaee.PivotAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0069\u0076o\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gcaee.PivotAttr))})
	}
	if _gcaee.SqrefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _ec.Sprintf("\u0025\u0076", *_gcaee.SqrefAttr)})
	}
	e.EncodeToken(start)
	_faea := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u0066\u0052\u0075\u006ce"}}
	for _, _ggee := range _gcaee.CfRule {
		e.EncodeElement(_ggee, _faea)
	}
	if _gcaee.ExtLst != nil {
		_cbce := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gcaee.ExtLst, _cbce)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_PivotCaches struct {

	// PivotCache
	PivotCache []*CT_PivotCache
}

const (
	ST_MdxSetOrderUnset ST_MdxSetOrder = 0
	ST_MdxSetOrderU     ST_MdxSetOrder = 1
	ST_MdxSetOrderA     ST_MdxSetOrder = 2
	ST_MdxSetOrderD     ST_MdxSetOrder = 3
	ST_MdxSetOrderAa    ST_MdxSetOrder = 4
	ST_MdxSetOrderAd    ST_MdxSetOrder = 5
	ST_MdxSetOrderNa    ST_MdxSetOrder = 6
	ST_MdxSetOrderNd    ST_MdxSetOrder = 7
)

func (_gcbfadg ST_CfvoType) ValidateWithPath(path string) error {
	switch _gcbfadg {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcbfadg))
	}
	return nil
}

func (_gdcgce *CT_TableStyleInfo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egbeb := range start.Attr {
		if _egbeb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gdacb, _debdb := _egbeb.Value, error(nil)
			if _debdb != nil {
				return _debdb
			}
			_gdcgce.NameAttr = &_gdacb
			continue
		}
		if _egbeb.Name.Local == "\u0073h\u006fw\u0046\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e" {
			_cegga, _bgbede := _eb.ParseBool(_egbeb.Value)
			if _bgbede != nil {
				return _bgbede
			}
			_gdcgce.ShowFirstColumnAttr = &_cegga
			continue
		}
		if _egbeb.Name.Local == "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e" {
			_eafdg, _acfceg := _eb.ParseBool(_egbeb.Value)
			if _acfceg != nil {
				return _acfceg
			}
			_gdcgce.ShowLastColumnAttr = &_eafdg
			continue
		}
		if _egbeb.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_gfbaf, _edeea := _eb.ParseBool(_egbeb.Value)
			if _edeea != nil {
				return _edeea
			}
			_gdcgce.ShowRowStripesAttr = &_gfbaf
			continue
		}
		if _egbeb.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_ccdbc, _ffaaf := _eb.ParseBool(_egbeb.Value)
			if _ffaaf != nil {
				return _ffaaf
			}
			_gdcgce.ShowColumnStripesAttr = &_ccdbc
			continue
		}
	}
	for {
		_fdbfe, _bdbfff := d.Token()
		if _bdbfff != nil {
			return _ec.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f: \u0025\u0073", _bdbfff)
		}
		if _afbdbc, _bgdaa := _fdbfe.(_b.EndElement); _bgdaa && _afbdbc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_bbdfa *Sst) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0073\u0073\u0074"
	return _bbdfa.CT_Sst.MarshalXML(e, start)
}

func NewSingleXmlCells() *SingleXmlCells {
	_deaea := &SingleXmlCells{}
	_deaea.CT_SingleXmlCells = *NewCT_SingleXmlCells()
	return _deaea
}

func NewCT_CalculatedMember() *CT_CalculatedMember { _daaf := &CT_CalculatedMember{}; return _daaf }

// Validate validates the CT_ExternalDefinedNames and its children
func (_fceca *CT_ExternalDefinedNames) Validate() error {
	return _fceca.ValidateWithPath("\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073")
}

func NewCT_TableColumns() *CT_TableColumns { _ecbbf := &CT_TableColumns{}; return _ecbbf }

func NewCT_VerticalAlignFontProperty() *CT_VerticalAlignFontProperty {
	_aabdd := &CT_VerticalAlignFontProperty{}
	_aabdd.ValAttr = _bb.ST_VerticalAlignRun(1)
	return _aabdd
}

func NewCT_RowHierarchiesUsage() *CT_RowHierarchiesUsage {
	_gbbba := &CT_RowHierarchiesUsage{}
	return _gbbba
}

func NewCT_QueryCache() *CT_QueryCache { _dfgf := &CT_QueryCache{}; return _dfgf }

// Validate validates the CT_CustomSheetViews and its children
func (_caafc *CT_CustomSheetViews) Validate() error {
	return _caafc.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073")
}

func (_eadfe *CT_FieldsUsage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eadfe.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_eadfe.CountAttr)})
	}
	e.EncodeToken(start)
	if _eadfe.FieldUsage != nil {
		_bfgfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065"}}
		for _, _fgac := range _eadfe.FieldUsage {
			e.EncodeElement(_fgac, _bfgfa)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DefinedName and its children
func (_befaf *CT_DefinedName) Validate() error {
	return _befaf.ValidateWithPath("\u0043\u0054\u005f\u0044\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065")
}

func (_faecb *CT_Row) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bacea := range start.Attr {
		if _bacea.Name.Local == "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c" {
			_adbcd, _fegge := _eb.ParseUint(_bacea.Value, 10, 8)
			if _fegge != nil {
				return _fegge
			}
			_fafecg := uint8(_adbcd)
			_faecb.OutlineLevelAttr = &_fafecg
			continue
		}
		if _bacea.Name.Local == "\u0072" {
			_befbc, _baaegb := _eb.ParseUint(_bacea.Value, 10, 32)
			if _baaegb != nil {
				return _baaegb
			}
			_cfaad := uint32(_befbc)
			_faecb.RAttr = &_cfaad
			continue
		}
		if _bacea.Name.Local == "\u0073" {
			_egdab, _adbebe := _eb.ParseUint(_bacea.Value, 10, 32)
			if _adbebe != nil {
				return _adbebe
			}
			_abaaf := uint32(_egdab)
			_faecb.SAttr = &_abaaf
			continue
		}
		if _bacea.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0046\u006f\u0072\u006d\u0061\u0074" {
			_cegfcc, _dgbec := _eb.ParseBool(_bacea.Value)
			if _dgbec != nil {
				return _dgbec
			}
			_faecb.CustomFormatAttr = &_cegfcc
			continue
		}
		if _bacea.Name.Local == "\u0068\u0074" {
			_gcgae, _fcggd := _eb.ParseFloat(_bacea.Value, 64)
			if _fcggd != nil {
				return _fcggd
			}
			_faecb.HtAttr = &_gcgae
			continue
		}
		if _bacea.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_afdba, _acbda := _eb.ParseBool(_bacea.Value)
			if _acbda != nil {
				return _acbda
			}
			_faecb.HiddenAttr = &_afdba
			continue
		}
		if _bacea.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074" {
			_fdefg, _afeac := _eb.ParseBool(_bacea.Value)
			if _afeac != nil {
				return _afeac
			}
			_faecb.CustomHeightAttr = &_fdefg
			continue
		}
		if _bacea.Name.Local == "\u0073\u0070\u0061n\u0073" {
			_acbcd, _cbfcc := ParseSliceST_CellSpans(_bacea.Value)
			if _cbfcc != nil {
				return _cbfcc
			}
			_faecb.SpansAttr = &_acbcd
			continue
		}
		if _bacea.Name.Local == "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d" {
			_fafg, _ddgde := _eb.ParseBool(_bacea.Value)
			if _ddgde != nil {
				return _ddgde
			}
			_faecb.CollapsedAttr = &_fafg
			continue
		}
		if _bacea.Name.Local == "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070" {
			_adefg, _bfdec := _eb.ParseBool(_bacea.Value)
			if _bfdec != nil {
				return _bfdec
			}
			_faecb.ThickTopAttr = &_adefg
			continue
		}
		if _bacea.Name.Local == "\u0074\u0068\u0069\u0063\u006b\u0042\u006f\u0074" {
			_fgdba, _ebfcf := _eb.ParseBool(_bacea.Value)
			if _ebfcf != nil {
				return _ebfcf
			}
			_faecb.ThickBotAttr = &_fgdba
			continue
		}
		if _bacea.Name.Local == "\u0070\u0068" {
			_cffff, _cegae := _eb.ParseBool(_bacea.Value)
			if _cegae != nil {
				return _cegae
			}
			_faecb.PhAttr = &_cffff
			continue
		}
	}
_bdgde:
	for {
		_gcbce, _gcfbd := d.Token()
		if _gcfbd != nil {
			return _gcfbd
		}
		switch _gegeb := _gcbce.(type) {
		case _b.StartElement:
			switch _gegeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}:
				_ebafa := NewCT_Cell()
				if _fecfd := d.DecodeElement(_ebafa, &_gegeb); _fecfd != nil {
					return _fecfd
				}
				_faecb.C = append(_faecb.C, _ebafa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_faecb.ExtLst = NewCT_ExtensionList()
				if _ceac := d.DecodeElement(_faecb.ExtLst, &_gegeb); _ceac != nil {
					return _ceac
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u006f\u0077\u0020\u0025\u0076", _gegeb.Name)
				if _fcfgga := d.Skip(); _fcfgga != nil {
					return _fcfgga
				}
			}
		case _b.EndElement:
			break _bdgde
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_ChartsheetPr() *CT_ChartsheetPr { _gcgf := &CT_ChartsheetPr{}; return _gcgf }

func (_faeag ST_CellType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_faeag.String(), start)
}

type CT_GroupLevels struct {

	// Grouping Level Count
	CountAttr *uint32

	// OLAP Grouping Levels
	GroupLevel []*CT_GroupLevel
}

func (_feaab *CT_PageMargins) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u0066\u0074"}, Value: _ec.Sprintf("\u0025\u0076", _feaab.LeftAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0069\u0067h\u0074"}, Value: _ec.Sprintf("\u0025\u0076", _feaab.RightAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0070"}, Value: _ec.Sprintf("\u0025\u0076", _feaab.TopAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, Value: _ec.Sprintf("\u0025\u0076", _feaab.BottomAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0076", _feaab.HeaderAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u006f\u0074\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0076", _feaab.FooterAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bfedb ST_rwColActionType) ValidateWithPath(path string) error {
	switch _bfedb {
	case 0, 1, 2, 3, 4:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bfedb))
	}
	return nil
}

func NewCT_PivotDimension() *CT_PivotDimension { _cadbf := &CT_PivotDimension{}; return _cadbf }

func NewCT_Number() *CT_Number { _gcebe := &CT_Number{}; return _gcebe }

func (_gbegd ST_SmartTagShow) Validate() error { return _gbegd.ValidateWithPath("") }

// Validate validates the CT_InputCells and its children
func (_gegdcf *CT_InputCells) Validate() error {
	return _gegdcf.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073")
}

func (_gegae *CT_PCDSCPage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gegae.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_gegae.CountAttr)})
	}
	e.EncodeToken(start)
	if _gegae.PageItem != nil {
		_gafcf := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0070\u0061\u0067\u0065\u0049\u0074\u0065\u006d"}}
		for _, _gaeba := range _gegae.PageItem {
			e.EncodeElement(_gaeba, _gafcf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_dcbbb ST_FormatAction) String() string {
	switch _dcbbb {
	case 0:
		return ""
	case 1:
		return "\u0062\u006c\u0061n\u006b"
	case 2:
		return "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"
	case 3:
		return "\u0064\u0072\u0069l\u006c"
	case 4:
		return "\u0066o\u0072\u006d\u0075\u006c\u0061"
	}
	return ""
}

type CT_CalculatedMembers struct {

	// Calculated Members Count
	CountAttr *uint32

	// Calculated Member
	CalculatedMember []*CT_CalculatedMember
}

func (_bceeb ST_DateTimeGrouping) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bceeb.String(), start)
}

func (_fcggdf ST_HorizontalAlignment) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_eeeddc := _b.Attr{}
	_eeeddc.Name = name
	switch _fcggdf {
	case ST_HorizontalAlignmentUnset:
		_eeeddc.Value = ""
	case ST_HorizontalAlignmentGeneral:
		_eeeddc.Value = "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case ST_HorizontalAlignmentLeft:
		_eeeddc.Value = "\u006c\u0065\u0066\u0074"
	case ST_HorizontalAlignmentCenter:
		_eeeddc.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_HorizontalAlignmentRight:
		_eeeddc.Value = "\u0072\u0069\u0067h\u0074"
	case ST_HorizontalAlignmentFill:
		_eeeddc.Value = "\u0066\u0069\u006c\u006c"
	case ST_HorizontalAlignmentJustify:
		_eeeddc.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_HorizontalAlignmentCenterContinuous:
		_eeeddc.Value = "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073"
	case ST_HorizontalAlignmentDistributed:
		_eeeddc.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _eeeddc, nil
}

// Validate validates the CT_SheetBackgroundPicture and its children
func (_bgfae *CT_SheetBackgroundPicture) Validate() error {
	return _bgfae.ValidateWithPath("\u0043T\u005f\u0053\u0068\u0065e\u0074\u0042\u0061\u0063\u006bg\u0072o\u0075n\u0064\u0050\u0069\u0063\u0074\u0075\u0072e")
}

type Sst struct{ CT_Sst }

func (_fdbef *CT_ExternalRow) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _ec.Sprintf("\u0025\u0076", _fdbef.RAttr)})
	e.EncodeToken(start)
	if _fdbef.Cell != nil {
		_eade := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u0065\u006c\u006c"}}
		for _, _bebf := range _fdbef.Cell {
			e.EncodeElement(_bebf, _eade)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_degeg *CT_PivotTableStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eeaff := range start.Attr {
		if _eeaff.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gcdad, _gagef := _eeaff.Value, error(nil)
			if _gagef != nil {
				return _gagef
			}
			_degeg.NameAttr = &_gcdad
			continue
		}
		if _eeaff.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0048\u0065a\u0064\u0065\u0072\u0073" {
			_faeeg, _adacd := _eb.ParseBool(_eeaff.Value)
			if _adacd != nil {
				return _adacd
			}
			_degeg.ShowRowHeadersAttr = &_faeeg
			continue
		}
		if _eeaff.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073" {
			_gefa, _addfc := _eb.ParseBool(_eeaff.Value)
			if _addfc != nil {
				return _addfc
			}
			_degeg.ShowColHeadersAttr = &_gefa
			continue
		}
		if _eeaff.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_bgecg, _cdadca := _eb.ParseBool(_eeaff.Value)
			if _cdadca != nil {
				return _cdadca
			}
			_degeg.ShowRowStripesAttr = &_bgecg
			continue
		}
		if _eeaff.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_gedgac, _eabfg := _eb.ParseBool(_eeaff.Value)
			if _eabfg != nil {
				return _eabfg
			}
			_degeg.ShowColStripesAttr = &_gedgac
			continue
		}
		if _eeaff.Name.Local == "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e" {
			_eabbe, _deegcg := _eb.ParseBool(_eeaff.Value)
			if _deegcg != nil {
				return _deegcg
			}
			_degeg.ShowLastColumnAttr = &_eabbe
			continue
		}
	}
	for {
		_fcabd, _dgfcd := d.Token()
		if _dgfcd != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0050\u0069\u0076\u006f\u0074\u0054\u0061b\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u003a\u0020\u0025\u0073", _dgfcd)
		}
		if _cecgd, _fdabf := _fcabd.(_b.EndElement); _fdabf && _cecgd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_IconFilter struct {

	// Icon Set
	IconSetAttr ST_IconSetType

	// Icon Id
	IconIdAttr *uint32
}

func (_ccbede ST_CfType) Validate() error { return _ccbede.ValidateWithPath("") }

func (_cfbdfg *CT_XStringElement) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cffed := range start.Attr {
		if _cffed.Name.Local == "\u0076" {
			_bbbe, _ecbdfb := _cffed.Value, error(nil)
			if _ecbdfb != nil {
				return _ecbdfb
			}
			_cfbdfg.VAttr = _bbbe
			continue
		}
	}
	for {
		_abcbe, _acaad := d.Token()
		if _acaad != nil {
			return _ec.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0058\u0053\u0074\u0072\u0069\u006e\u0067\u0045\u006c\u0065\u006d\u0065\u006e\u0074: \u0025\u0073", _acaad)
		}
		if _cffdb, _cagbb := _abcbe.(_b.EndElement); _cagbb && _cffdb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Chartsheet and its children, prefixing error messages with path
func (_beeb *CT_Chartsheet) ValidateWithPath(path string) error {
	if _beeb.SheetPr != nil {
		if _dead := _beeb.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _dead != nil {
			return _dead
		}
	}
	if _dagd := _beeb.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _dagd != nil {
		return _dagd
	}
	if _beeb.SheetProtection != nil {
		if _faae := _beeb.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _faae != nil {
			return _faae
		}
	}
	if _beeb.CustomSheetViews != nil {
		if _gfcbc := _beeb.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _gfcbc != nil {
			return _gfcbc
		}
	}
	if _beeb.PageMargins != nil {
		if _dbfe := _beeb.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _dbfe != nil {
			return _dbfe
		}
	}
	if _beeb.PageSetup != nil {
		if _faecd := _beeb.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _faecd != nil {
			return _faecd
		}
	}
	if _beeb.HeaderFooter != nil {
		if _baac := _beeb.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _baac != nil {
			return _baac
		}
	}
	if _dcgb := _beeb.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _dcgb != nil {
		return _dcgb
	}
	if _beeb.LegacyDrawing != nil {
		if _egeec := _beeb.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _egeec != nil {
			return _egeec
		}
	}
	if _beeb.LegacyDrawingHF != nil {
		if _gfec := _beeb.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _gfec != nil {
			return _gfec
		}
	}
	if _beeb.DrawingHF != nil {
		if _gafab := _beeb.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _gafab != nil {
			return _gafab
		}
	}
	if _beeb.Picture != nil {
		if _ecde := _beeb.Picture.ValidateWithPath(path + "\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065"); _ecde != nil {
			return _ecde
		}
	}
	if _beeb.WebPublishItems != nil {
		if _agcb := _beeb.WebPublishItems.ValidateWithPath(path + "\u002f\u0057e\u0062\u0050\u0075b\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"); _agcb != nil {
			return _agcb
		}
	}
	if _beeb.ExtLst != nil {
		if _fbcac := _beeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbcac != nil {
			return _fbcac
		}
	}
	return nil
}

func (_gbggc *ST_FilterOperator) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gaedeb, _ebbeae := d.Token()
	if _ebbeae != nil {
		return _ebbeae
	}
	if _abdccc, _fbdeb := _gaedeb.(_b.EndElement); _fbdeb && _abdccc.Name == start.Name {
		*_gbggc = 1
		return nil
	}
	if _cbbcaf, _eefbdc := _gaedeb.(_b.CharData); !_eefbdc {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gaedeb)
	} else {
		switch string(_cbbcaf) {
		case "":
			*_gbggc = 0
		case "\u0065\u0071\u0075a\u006c":
			*_gbggc = 1
		case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_gbggc = 2
		case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_gbggc = 3
		case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_gbggc = 4
		case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
			*_gbggc = 5
		case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_gbggc = 6
		}
	}
	_gaedeb, _ebbeae = d.Token()
	if _ebbeae != nil {
		return _ebbeae
	}
	if _adaac, _dccbf := _gaedeb.(_b.EndElement); _dccbf && _adaac.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gaedeb)
}

func NewCT_SmartTagPr() *CT_SmartTagPr { _eadcb := &CT_SmartTagPr{}; return _eadcb }

func (_bdbec ST_TextHAlign) Validate() error { return _bdbec.ValidateWithPath("") }

func (_bdbgf ST_SheetState) ValidateWithPath(path string) error {
	switch _bdbgf {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdbgf))
	}
	return nil
}

func (_fccbg *CT_SingleXmlCell) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fccbg.XmlCellPr = NewCT_XmlCellPr()
	for _, _dgcfc := range start.Attr {
		if _dgcfc.Name.Local == "\u0069\u0064" {
			_ebadac, _cbafca := _eb.ParseUint(_dgcfc.Value, 10, 32)
			if _cbafca != nil {
				return _cbafca
			}
			_fccbg.IdAttr = uint32(_ebadac)
			continue
		}
		if _dgcfc.Name.Local == "\u0072" {
			_cefeb, _fdagg := _dgcfc.Value, error(nil)
			if _fdagg != nil {
				return _fdagg
			}
			_fccbg.RAttr = _cefeb
			continue
		}
		if _dgcfc.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_gebbd, _bcabbd := _eb.ParseUint(_dgcfc.Value, 10, 32)
			if _bcabbd != nil {
				return _bcabbd
			}
			_fccbg.ConnectionIdAttr = uint32(_gebbd)
			continue
		}
	}
_cgbgba:
	for {
		_fffbb, _ebdcf := d.Token()
		if _ebdcf != nil {
			return _ebdcf
		}
		switch _ffbed := _fffbb.(type) {
		case _b.StartElement:
			switch _ffbed.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078m\u006c\u0043\u0065\u006c\u006c\u0050r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078m\u006c\u0043\u0065\u006c\u006c\u0050r"}:
				if _fede := d.DecodeElement(_fccbg.XmlCellPr, &_ffbed); _fede != nil {
					return _fede
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fccbg.ExtLst = NewCT_ExtensionList()
				if _cdddc := d.DecodeElement(_fccbg.ExtLst, &_ffbed); _cdddc != nil {
					return _cdddc
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c\u0020\u0025v", _ffbed.Name)
				if _bedad := d.Skip(); _bedad != nil {
					return _bedad
				}
			}
		case _b.EndElement:
			break _cgbgba
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CellStyleXfs and its children
func (_cbdc *CT_CellStyleXfs) Validate() error {
	return _cbdc.ValidateWithPath("\u0043T\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073")
}

func NewMapInfo() *MapInfo {
	_dcfeef := &MapInfo{}
	_dcfeef.CT_MapInfo = *NewCT_MapInfo()
	return _dcfeef
}

// Validate validates the CT_QueryTable and its children
func (_aeagg *CT_QueryTable) Validate() error {
	return _aeagg.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065")
}

func (_ceaca ST_TotalsRowFunction) String() string {
	switch _ceaca {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u0075\u006d"
	case 3:
		return "\u006d\u0069\u006e"
	case 4:
		return "\u006d\u0061\u0078"
	case 5:
		return "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case 6:
		return "\u0063\u006f\u0075n\u0074"
	case 7:
		return "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case 8:
		return "\u0073\u0074\u0064\u0044\u0065\u0076"
	case 9:
		return "\u0076\u0061\u0072"
	case 10:
		return "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return ""
}

// ValidateWithPath validates the CT_CellSmartTag and its children, prefixing error messages with path
func (_ffag *CT_CellSmartTag) ValidateWithPath(path string) error {
	for _dcde, _gbad := range _ffag.CellSmartTagPr {
		if _ecfag := _gbad.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0043\u0065ll\u0053m\u0061\u0072\u0074\u0054\u0061g\u0050\u0072\u005b\u0025\u0064\u005d", path, _dcde)); _ecfag != nil {
			return _ecfag
		}
	}
	return nil
}

type Metadata struct{ CT_Metadata }

func (_eegd *CT_CustomSheetView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eegd.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _gfdd := range start.Attr {
		if _gfdd.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_eegd.StateAttr.UnmarshalXMLAttr(_gfdd)
			continue
		}
		if _gfdd.Name.Local == "\u0067\u0075\u0069\u0064" {
			_gdeba, _ddaca := _gfdd.Value, error(nil)
			if _ddaca != nil {
				return _ddaca
			}
			_eegd.GuidAttr = _gdeba
			continue
		}
		if _gfdd.Name.Local == "\u0066\u0069\u006ct\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065" {
			_bged, _ffca := _eb.ParseBool(_gfdd.Value)
			if _ffca != nil {
				return _ffca
			}
			_eegd.FilterUniqueAttr = &_bged
			continue
		}
		if _gfdd.Name.Local == "\u0063o\u006c\u006f\u0072\u0049\u0064" {
			_affgf, _cedbed := _eb.ParseUint(_gfdd.Value, 10, 32)
			if _cedbed != nil {
				return _cedbed
			}
			_adfd := uint32(_affgf)
			_eegd.ColorIdAttr = &_adfd
			continue
		}
		if _gfdd.Name.Local == "\u0076\u0069\u0065\u0077" {
			_eegd.ViewAttr.UnmarshalXMLAttr(_gfdd)
			continue
		}
		if _gfdd.Name.Local == "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_fcaa, _edce := _eb.ParseBool(_gfdd.Value)
			if _edce != nil {
				return _edce
			}
			_eegd.ShowFormulasAttr = &_fcaa
			continue
		}
		if _gfdd.Name.Local == "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r" {
			_fcdfgc, _becaf := _eb.ParseBool(_gfdd.Value)
			if _becaf != nil {
				return _becaf
			}
			_eegd.ShowRulerAttr = &_fcdfgc
			continue
		}
		if _gfdd.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c" {
			_fcdg, _bagda := _eb.ParseBool(_gfdd.Value)
			if _bagda != nil {
				return _bagda
			}
			_eegd.ShowRowColAttr = &_fcdg
			continue
		}
		if _gfdd.Name.Local == "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c" {
			_gbgd, _fadea := _gfdd.Value, error(nil)
			if _fadea != nil {
				return _fadea
			}
			_eegd.TopLeftCellAttr = &_gbgd
			continue
		}
		if _gfdd.Name.Local == "\u007a\u0065\u0072\u006f\u0056\u0061\u006c\u0075\u0065\u0073" {
			_addc, _abga := _eb.ParseBool(_gfdd.Value)
			if _abga != nil {
				return _abga
			}
			_eegd.ZeroValuesAttr = &_addc
			continue
		}
		if _gfdd.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_gfcde, _gbeec := _eb.ParseBool(_gfdd.Value)
			if _gbeec != nil {
				return _gbeec
			}
			_eegd.HiddenColumnsAttr = &_gfcde
			continue
		}
		if _gfdd.Name.Local == "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0053\u0079m\u0062\u006f\u006c\u0073" {
			_cbacd, _ggccg := _eb.ParseBool(_gfdd.Value)
			if _ggccg != nil {
				return _ggccg
			}
			_eegd.OutlineSymbolsAttr = &_cbacd
			continue
		}
		if _gfdd.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072" {
			_ggdbg, _gbdcf := _eb.ParseBool(_gfdd.Value)
			if _gbdcf != nil {
				return _gbdcf
			}
			_eegd.FilterAttr = &_ggdbg
			continue
		}
		if _gfdd.Name.Local == "\u0073\u0063\u0061l\u0065" {
			_abddd, _gdbca := _eb.ParseUint(_gfdd.Value, 10, 32)
			if _gdbca != nil {
				return _gdbca
			}
			_ecfc := uint32(_abddd)
			_eegd.ScaleAttr = &_ecfc
			continue
		}
		if _gfdd.Name.Local == "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073" {
			_defb, _eddg := _eb.ParseBool(_gfdd.Value)
			if _eddg != nil {
				return _eddg
			}
			_eegd.ShowGridLinesAttr = &_defb
			continue
		}
		if _gfdd.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0073" {
			_acab, _abbc := _eb.ParseBool(_gfdd.Value)
			if _abbc != nil {
				return _abbc
			}
			_eegd.HiddenRowsAttr = &_acab
			continue
		}
		if _gfdd.Name.Local == "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e" {
			_dbeae, _gdag := _eb.ParseBool(_gfdd.Value)
			if _gdag != nil {
				return _gdag
			}
			_eegd.FitToPageAttr = &_dbeae
			continue
		}
		if _gfdd.Name.Local == "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a" {
			_gaab, _bdeeg := _eb.ParseBool(_gfdd.Value)
			if _bdeeg != nil {
				return _bdeeg
			}
			_eegd.PrintAreaAttr = &_gaab
			continue
		}
		if _gfdd.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0075\u0074\u006f\u0046i\u006c\u0074\u0065\u0072" {
			_cfb, _ddebb := _eb.ParseBool(_gfdd.Value)
			if _ddebb != nil {
				return _ddebb
			}
			_eegd.ShowAutoFilterAttr = &_cfb
			continue
		}
		if _gfdd.Name.Local == "\u0073\u0068\u006f\u0077\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073" {
			_ada, _gecb := _eb.ParseBool(_gfdd.Value)
			if _gecb != nil {
				return _gecb
			}
			_eegd.ShowPageBreaksAttr = &_ada
			continue
		}
	}
_deagf:
	for {
		_eebfe, _efgac := d.Token()
		if _efgac != nil {
			return _efgac
		}
		switch _cacg := _eebfe.(type) {
		case _b.StartElement:
			switch _cacg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}:
				_eegd.Pane = NewCT_Pane()
				if _ecaed := d.DecodeElement(_eegd.Pane, &_cacg); _ecaed != nil {
					return _ecaed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}:
				_eegd.Selection = NewCT_Selection()
				if _dfgbf := d.DecodeElement(_eegd.Selection, &_cacg); _dfgbf != nil {
					return _dfgbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_eegd.RowBreaks = NewCT_PageBreak()
				if _dabbe := d.DecodeElement(_eegd.RowBreaks, &_cacg); _dabbe != nil {
					return _dabbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_eegd.ColBreaks = NewCT_PageBreak()
				if _gcdaf := d.DecodeElement(_eegd.ColBreaks, &_cacg); _gcdaf != nil {
					return _gcdaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_eegd.PageMargins = NewCT_PageMargins()
				if _ecbdf := d.DecodeElement(_eegd.PageMargins, &_cacg); _ecbdf != nil {
					return _ecbdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_eegd.PrintOptions = NewCT_PrintOptions()
				if _ffed := d.DecodeElement(_eegd.PrintOptions, &_cacg); _ffed != nil {
					return _ffed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_eegd.PageSetup = NewCT_PageSetup()
				if _bcfb := d.DecodeElement(_eegd.PageSetup, &_cacg); _bcfb != nil {
					return _bcfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_eegd.HeaderFooter = NewCT_HeaderFooter()
				if _cgbd := d.DecodeElement(_eegd.HeaderFooter, &_cacg); _cgbd != nil {
					return _cgbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_eegd.AutoFilter = NewCT_AutoFilter()
				if _ebddd := d.DecodeElement(_eegd.AutoFilter, &_cacg); _ebddd != nil {
					return _ebddd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eegd.ExtLst = NewCT_ExtensionList()
				if _fbgf := d.DecodeElement(_eegd.ExtLst, &_cacg); _fbgf != nil {
					return _fbgf
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _cacg.Name)
				if _bfgd := d.Skip(); _bfgd != nil {
					return _bfgd
				}
			}
		case _b.EndElement:
			break _deagf
		case _b.CharData:
		}
	}
	return nil
}

func (_cacgc *ST_PhoneticType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cacgc = 0
	case "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
		*_cacgc = 1
	case "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
		*_cacgc = 2
	case "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
		*_cacgc = 3
	case "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e":
		*_cacgc = 4
	}
	return nil
}

func (_edaec *CT_IconFilter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_ecgb, _ccfba := _edaec.IconSetAttr.MarshalXMLAttr(_b.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"})
	if _ccfba != nil {
		return _ccfba
	}
	start.Attr = append(start.Attr, _ecgb)
	if _edaec.IconIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0063\u006f\u006e\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_edaec.IconIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewAG_RevData() *AG_RevData { _cc := &AG_RevData{}; return _cc }

func (_effcg *CT_GroupItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _effcg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_effcg.CountAttr)})
	}
	e.EncodeToken(start)
	if _effcg.M != nil {
		_defc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _fbfc := range _effcg.M {
			e.EncodeElement(_fbfc, _defc)
		}
	}
	if _effcg.N != nil {
		_fabc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _bbbbb := range _effcg.N {
			e.EncodeElement(_bbbbb, _fabc)
		}
	}
	if _effcg.B != nil {
		_beagg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _gdaaf := range _effcg.B {
			e.EncodeElement(_gdaaf, _beagg)
		}
	}
	if _effcg.E != nil {
		_dfedg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _bgcfb := range _effcg.E {
			e.EncodeElement(_bgcfb, _dfedg)
		}
	}
	if _effcg.S != nil {
		_cagfc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _cgfaf := range _effcg.S {
			e.EncodeElement(_cgfaf, _cagfc)
		}
	}
	if _effcg.D != nil {
		_fcbbb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064"}}
		for _, _beage := range _effcg.D {
			e.EncodeElement(_beage, _fcbbb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Xf and its children
func (_edeafa *CT_Xf) Validate() error { return _edeafa.ValidateWithPath("\u0043\u0054\u005fX\u0066") }

func (_dbbdcb *Headers) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0068\u0065\u0061\u0064\u0065\u0072\u0073"
	return _dbbdcb.CT_RevisionHeaders.MarshalXML(e, start)
}

// Validate validates the CT_Fill and its children
func (_defgf *CT_Fill) Validate() error {
	return _defgf.ValidateWithPath("\u0043T\u005f\u0046\u0069\u006c\u006c")
}

func NewCT_PivotAreaReferences() *CT_PivotAreaReferences {
	_fbcge := &CT_PivotAreaReferences{}
	return _fbcge
}

func NewCT_RevisionCellChange() *CT_RevisionCellChange {
	_ebdee := &CT_RevisionCellChange{}
	_ebdee.Nc = NewCT_Cell()
	return _ebdee
}

type CT_CsPageSetup struct {

	// Paper Size
	PaperSizeAttr *uint32

	// Paper Height
	PaperHeightAttr *string

	// Paper Width
	PaperWidthAttr *string

	// First Page Number
	FirstPageNumberAttr *uint32

	// Orientation
	OrientationAttr ST_Orientation

	// Use Printer Defaults
	UsePrinterDefaultsAttr *bool

	// Black And White
	BlackAndWhiteAttr *bool

	// Draft
	DraftAttr *bool

	// Use First Page Number
	UseFirstPageNumberAttr *bool

	// Horizontal DPI
	HorizontalDpiAttr *uint32

	// Vertical DPI
	VerticalDpiAttr *uint32

	// Number Of Copies
	CopiesAttr *uint32
	IdAttr     *string
}

func (_eacdbd ST_TextHAlign) ValidateWithPath(path string) error {
	switch _eacdbd {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eacdbd))
	}
	return nil
}

func (_ebdbbc ST_OleUpdate) Validate() error { return _ebdbbc.ValidateWithPath("") }

func (_eecec *CT_DataBar) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eecec.Color = NewCT_Color()
	for _, _gccba := range start.Attr {
		if _gccba.Name.Local == "\u006di\u006e\u004c\u0065\u006e\u0067\u0074h" {
			_ebffa, _egbf := _eb.ParseUint(_gccba.Value, 10, 32)
			if _egbf != nil {
				return _egbf
			}
			_bfbe := uint32(_ebffa)
			_eecec.MinLengthAttr = &_bfbe
			continue
		}
		if _gccba.Name.Local == "\u006da\u0078\u004c\u0065\u006e\u0067\u0074h" {
			_aggf, _gacc := _eb.ParseUint(_gccba.Value, 10, 32)
			if _gacc != nil {
				return _gacc
			}
			_dfdac := uint32(_aggf)
			_eecec.MaxLengthAttr = &_dfdac
			continue
		}
		if _gccba.Name.Local == "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e" {
			_abfe, _cdcf := _eb.ParseBool(_gccba.Value)
			if _cdcf != nil {
				return _cdcf
			}
			_eecec.ShowValueAttr = &_abfe
			continue
		}
	}
_fgdb:
	for {
		_gbgcb, _agff := d.Token()
		if _agff != nil {
			return _agff
		}
		switch _abac := _gbgcb.(type) {
		case _b.StartElement:
			switch _abac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}:
				_fbgc := NewCT_Cfvo()
				if _dcge := d.DecodeElement(_fbgc, &_abac); _dcge != nil {
					return _dcge
				}
				_eecec.Cfvo = append(_eecec.Cfvo, _fbgc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				if _dgdeg := d.DecodeElement(_eecec.Color, &_abac); _dgdeg != nil {
					return _dgdeg
				}
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0061\u0074\u0061\u0042\u0061\u0072\u0020\u0025\u0076", _abac.Name)
				if _aecba := d.Skip(); _aecba != nil {
					return _aecba
				}
			}
		case _b.EndElement:
			break _fgdb
		case _b.CharData:
		}
	}
	return nil
}

func (_aggaa *ST_DataValidationErrorStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_baecc, _bfcbe := d.Token()
	if _bfcbe != nil {
		return _bfcbe
	}
	if _bfffdg, _bcbbg := _baecc.(_b.EndElement); _bcbbg && _bfffdg.Name == start.Name {
		*_aggaa = 1
		return nil
	}
	if _cbdgf, _bdebc := _baecc.(_b.CharData); !_bdebc {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _baecc)
	} else {
		switch string(_cbdgf) {
		case "":
			*_aggaa = 0
		case "\u0073\u0074\u006f\u0070":
			*_aggaa = 1
		case "\u0077a\u0072\u006e\u0069\u006e\u0067":
			*_aggaa = 2
		case "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
			*_aggaa = 3
		}
	}
	_baecc, _bfcbe = d.Token()
	if _bfcbe != nil {
		return _bfcbe
	}
	if _dgdaf, _fccad := _baecc.(_b.EndElement); _fccad && _dgdaf.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _baecc)
}

func (_aagcb ST_RevisionAction) ValidateWithPath(path string) error {
	switch _aagcb {
	case 0, 1, 2:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aagcb))
	}
	return nil
}

// ValidateWithPath validates the CT_QueryTableFields and its children, prefixing error messages with path
func (_egabd *CT_QueryTableFields) ValidateWithPath(path string) error {
	for _fgagc, _beba := range _egabd.QueryTableField {
		if _bcgee := _beba.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0051ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u005b\u0025d\u005d", path, _fgagc)); _bcgee != nil {
			return _bcgee
		}
	}
	return nil
}

func NewSst() *Sst { _cdcgae := &Sst{}; _cdcgae.CT_Sst = *NewCT_Sst(); return _cdcgae }

func (_gbcbf *CT_CellXfs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcdde := range start.Attr {
		if _dcdde.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cdgeb, _eagcf := _eb.ParseUint(_dcdde.Value, 10, 32)
			if _eagcf != nil {
				return _eagcf
			}
			_gaea := uint32(_cdgeb)
			_gbcbf.CountAttr = &_gaea
			continue
		}
	}
_bfef:
	for {
		_bcff, _gaga := d.Token()
		if _gaga != nil {
			return _gaga
		}
		switch _cgbc := _bcff.(type) {
		case _b.StartElement:
			switch _cgbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}:
				_begce := NewCT_Xf()
				if _cgbf := d.DecodeElement(_begce, &_cgbc); _cgbf != nil {
					return _cgbf
				}
				_gbcbf.Xf = append(_gbcbf.Xf, _begce)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u0065\u006c\u006c\u0058\u0066\u0073\u0020\u0025\u0076", _cgbc.Name)
				if _gecc := d.Skip(); _gecc != nil {
					return _gecc
				}
			}
		case _b.EndElement:
			break _bfef
		case _b.CharData:
		}
	}
	return nil
}

func (_bcbbfe ST_VolDepType) Validate() error { return _bcbbfe.ValidateWithPath("") }

func (_agcbd *Connections) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0063\u006f\u006e\u006e\u0065\u0063t\u0069\u006f\u006e\u0073"
	return _agcbd.CT_Connections.MarshalXML(e, start)
}

func (_cbgce ST_TextVAlign) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fgfdc := _b.Attr{}
	_fgfdc.Name = name
	switch _cbgce {
	case ST_TextVAlignUnset:
		_fgfdc.Value = ""
	case ST_TextVAlignTop:
		_fgfdc.Value = "\u0074\u006f\u0070"
	case ST_TextVAlignCenter:
		_fgfdc.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_TextVAlignBottom:
		_fgfdc.Value = "\u0062\u006f\u0074\u0074\u006f\u006d"
	case ST_TextVAlignJustify:
		_fgfdc.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_TextVAlignDistributed:
		_fgfdc.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _fgfdc, nil
}

func (_gafe *CT_CustomSheetViews) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_aafe:
	for {
		_adcee, _ecgfe := d.Token()
		if _ecgfe != nil {
			return _ecgfe
		}
		switch _dadb := _adcee.(type) {
		case _b.StartElement:
			switch _dadb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}:
				_bafe := NewCT_CustomSheetView()
				if _efda := d.DecodeElement(_bafe, &_dadb); _efda != nil {
					return _efda
				}
				_gafe.CustomSheetView = append(_gafe.CustomSheetView, _bafe)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053he\u0065\u0074\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _dadb.Name)
				if _dedd := d.Skip(); _dedd != nil {
					return _dedd
				}
			}
		case _b.EndElement:
			break _aafe
		case _b.CharData:
		}
	}
	return nil
}

func (_badfgd ST_MdxSetOrder) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_badfgd.String(), start)
}

func (_bgcf *CT_FutureMetadataBlock) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bgcf.ExtLst != nil {
		_eefb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bgcf.ExtLst, _eefb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CommentPr and its children
func (_bcbd *CT_CommentPr) Validate() error {
	return _bcbd.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072")
}

type CT_PhoneticPr struct {

	// Font Id
	FontIdAttr uint32

	// Character Type
	TypeAttr ST_PhoneticType

	// Alignment
	AlignmentAttr ST_PhoneticAlignment
}

func (_aead *CT_FileRecoveryPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _affggd := range start.Attr {
		if _affggd.Name.Local == "a\u0075\u0074\u006f\u0052\u0065\u0063\u006f\u0076\u0065\u0072" {
			_dcebbd, _dbcfe := _eb.ParseBool(_affggd.Value)
			if _dbcfe != nil {
				return _dbcfe
			}
			_aead.AutoRecoverAttr = &_dcebbd
			continue
		}
		if _affggd.Name.Local == "\u0063r\u0061\u0073\u0068\u0053\u0061\u0076e" {
			_dfbaee, _ecbfa := _eb.ParseBool(_affggd.Value)
			if _ecbfa != nil {
				return _ecbfa
			}
			_aead.CrashSaveAttr = &_dfbaee
			continue
		}
		if _affggd.Name.Local == "\u0064a\u0074a\u0045\u0078\u0074\u0072\u0061\u0063\u0074\u004c\u006f\u0061\u0064" {
			_dgdgg, _ggdbb := _eb.ParseBool(_affggd.Value)
			if _ggdbb != nil {
				return _ggdbb
			}
			_aead.DataExtractLoadAttr = &_dgdgg
			continue
		}
		if _affggd.Name.Local == "\u0072\u0065\u0070\u0061\u0069\u0072\u004c\u006f\u0061\u0064" {
			_bgca, _cgfdc := _eb.ParseBool(_affggd.Value)
			if _cgfdc != nil {
				return _cgfdc
			}
			_aead.RepairLoadAttr = &_bgca
			continue
		}
	}
	for {
		_gggbda, _cace := d.Token()
		if _cace != nil {
			return _ec.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076\u0065\u0072\u0079\u0050\u0072: \u0025\u0073", _cace)
		}
		if _bgcgc, _egdf := _gggbda.(_b.EndElement); _egdf && _bgcgc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_aeafd *CT_Groups) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aeafd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_aeafd.CountAttr)})
	}
	e.EncodeToken(start)
	_dbbab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070"}}
	for _, _afbab := range _aeafd.Group {
		e.EncodeElement(_afbab, _dbbab)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_GradientStop() *CT_GradientStop {
	_baegf := &CT_GradientStop{}
	_baegf.Color = NewCT_Color()
	return _baegf
}

type CT_PageField struct {

	// Field
	FldAttr int32

	// Item Index
	ItemAttr *uint32

	// OLAP Hierarchy Index
	HierAttr *int32

	// Hierarchy Unique Name
	NameAttr *string

	// Hierarchy Display Name
	CapAttr *string

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

type CT_ConditionalFormatting struct {

	// PivotTable Conditional Formatting
	PivotAttr *bool

	// Sequence of References
	SqrefAttr *ST_Sqref

	// Conditional Formatting Rule
	CfRule []*CT_CfRule
	ExtLst *CT_ExtensionList
}

func (_eabgb ST_PivotAreaType) Validate() error { return _eabgb.ValidateWithPath("") }

// Validate validates the CT_LegacyDrawing and its children
func (_dbeac *CT_LegacyDrawing) Validate() error {
	return _dbeac.ValidateWithPath("\u0043\u0054_\u004c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067")
}

func (_dfgad *CT_ExternalSheetNames) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_efae:
	for {
		_bdbca, _ecgfg := d.Token()
		if _ecgfg != nil {
			return _ecgfg
		}
		switch _acee := _bdbca.(type) {
		case _b.StartElement:
			switch _acee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u004e\u0061\u006de"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u004e\u0061\u006de"}:
				_facgec := NewCT_ExternalSheetName()
				if _bcegc := d.DecodeElement(_facgec, &_acee); _bcegc != nil {
					return _bcegc
				}
				_dfgad.SheetName = append(_dfgad.SheetName, _facgec)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073\u0020\u0025\u0076", _acee.Name)
				if _afcb := d.Skip(); _afcb != nil {
					return _afcb
				}
			}
		case _b.EndElement:
			break _efae
		case _b.CharData:
		}
	}
	return nil
}

func (_aeeea *CT_HeaderFooter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbfg := range start.Attr {
		if _gbfg.Name.Local == "\u0064\u0069f\u0066\u0065\u0072e\u006e\u0074\u004f\u0064\u0064\u0045\u0076\u0065\u006e" {
			_dbcgc, _bebg := _eb.ParseBool(_gbfg.Value)
			if _bebg != nil {
				return _bebg
			}
			_aeeea.DifferentOddEvenAttr = &_dbcgc
			continue
		}
		if _gbfg.Name.Local == "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074F\u0069\u0072\u0073\u0074" {
			_dcbg, _babgg := _eb.ParseBool(_gbfg.Value)
			if _babgg != nil {
				return _babgg
			}
			_aeeea.DifferentFirstAttr = &_dcbg
			continue
		}
		if _gbfg.Name.Local == "\u0073\u0063\u0061l\u0065\u0057\u0069\u0074\u0068\u0044\u006f\u0063" {
			_ecfba, _ggaa := _eb.ParseBool(_gbfg.Value)
			if _ggaa != nil {
				return _ggaa
			}
			_aeeea.ScaleWithDocAttr = &_ecfba
			continue
		}
		if _gbfg.Name.Local == "\u0061\u006ci\u0067\u006e\u0057i\u0074\u0068\u004d\u0061\u0072\u0067\u0069\u006e\u0073" {
			_ggdd, _bgfc := _eb.ParseBool(_gbfg.Value)
			if _bgfc != nil {
				return _bgfc
			}
			_aeeea.AlignWithMarginsAttr = &_ggdd
			continue
		}
	}
_eeagb:
	for {
		_efeb, _debc := d.Token()
		if _debc != nil {
			return _debc
		}
		switch _gcdac := _efeb.(type) {
		case _b.StartElement:
			switch _gcdac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0048\u0065\u0061\u0064\u0065r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0048\u0065\u0061\u0064\u0065r"}:
				_aeeea.OddHeader = new(string)
				if _bbbce := d.DecodeElement(_aeeea.OddHeader, &_gcdac); _bbbce != nil {
					return _bbbce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0046\u006f\u006f\u0074\u0065r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0046\u006f\u006f\u0074\u0065r"}:
				_aeeea.OddFooter = new(string)
				if _ecacbc := d.DecodeElement(_aeeea.OddFooter, &_gcdac); _ecacbc != nil {
					return _ecacbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0048\u0065\u0061\u0064\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0048\u0065\u0061\u0064\u0065\u0072"}:
				_aeeea.EvenHeader = new(string)
				if _cbbca := d.DecodeElement(_aeeea.EvenHeader, &_gcdac); _cbbca != nil {
					return _cbbca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_aeeea.EvenFooter = new(string)
				if _eggbg := d.DecodeElement(_aeeea.EvenFooter, &_gcdac); _eggbg != nil {
					return _eggbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064\u0065\u0072"}:
				_aeeea.FirstHeader = new(string)
				if _cfcf := d.DecodeElement(_aeeea.FirstHeader, &_gcdac); _cfcf != nil {
					return _cfcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_aeeea.FirstFooter = new(string)
				if _facbb := d.DecodeElement(_aeeea.FirstFooter, &_gcdac); _facbb != nil {
					return _facbb
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072\u0020\u0025\u0076", _gcdac.Name)
				if _cdgfc := d.Skip(); _cdgfc != nil {
					return _cdgfc
				}
			}
		case _b.EndElement:
			break _eeagb
		case _b.CharData:
		}
	}
	return nil
}

func (_bbgeed ST_Objects) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_efafd := _b.Attr{}
	_efafd.Name = name
	switch _bbgeed {
	case ST_ObjectsUnset:
		_efafd.Value = ""
	case ST_ObjectsAll:
		_efafd.Value = "\u0061\u006c\u006c"
	case ST_ObjectsPlaceholders:
		_efafd.Value = "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073"
	case ST_ObjectsNone:
		_efafd.Value = "\u006e\u006f\u006e\u0065"
	}
	return _efafd, nil
}

func (_becd *CT_MdxTuple) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _becd.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_becd.CAttr)})
	}
	if _becd.CtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_becd.CtAttr)})
	}
	if _becd.SiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0069"}, Value: _ec.Sprintf("\u0025\u0076", *_becd.SiAttr)})
	}
	if _becd.FiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069"}, Value: _ec.Sprintf("\u0025\u0076", *_becd.FiAttr)})
	}
	if _becd.BcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_becd.BcAttr)})
	}
	if _becd.FcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_becd.FcAttr)})
	}
	if _becd.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_becd.IAttr))})
	}
	if _becd.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_becd.UAttr))})
	}
	if _becd.StAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_becd.StAttr))})
	}
	if _becd.BAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_becd.BAttr))})
	}
	e.EncodeToken(start)
	if _becd.N != nil {
		_ecada := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _dgeg := range _becd.N {
			e.EncodeElement(_dgeg, _ecada)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Filters and its children, prefixing error messages with path
func (_eaaab *CT_Filters) ValidateWithPath(path string) error {
	if _egbea := _eaaab.CalendarTypeAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u006c\u0065\u006e\u0064\u0061\u0072\u0054\u0079\u0070e\u0041\u0074\u0074\u0072"); _egbea != nil {
		return _egbea
	}
	for _gddgf, _gecbd := range _eaaab.Filter {
		if _fdege := _gecbd.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _gddgf)); _fdege != nil {
			return _fdege
		}
	}
	for _eggda, _faeeb := range _eaaab.DateGroupItem {
		if _bcfcd := _faeeb.ValidateWithPath(_ec.Sprintf("%\u0073/\u0044\u0061\u0074\u0065\u0047\u0072\u006f\u0075p\u0049\u0074\u0065\u006d[%\u0064\u005d", path, _eggda)); _bcfcd != nil {
			return _bcfcd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Xf and its children, prefixing error messages with path
func (_fdedd *CT_Xf) ValidateWithPath(path string) error {
	if _fdedd.Alignment != nil {
		if _cgdcg := _fdedd.Alignment.ValidateWithPath(path + "\u002f\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"); _cgdcg != nil {
			return _cgdcg
		}
	}
	if _fdedd.Protection != nil {
		if _ccfgd := _fdedd.Protection.ValidateWithPath(path + "/\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _ccfgd != nil {
			return _ccfgd
		}
	}
	if _fdedd.ExtLst != nil {
		if _dgbdff := _fdedd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgbdff != nil {
			return _dgbdff
		}
	}
	return nil
}

func (_fddee *Chartsheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074"
	return _fddee.CT_Chartsheet.MarshalXML(e, start)
}

type CT_OlapPr struct {

	// Local Cube
	LocalAttr *bool

	// Local Cube Connection
	LocalConnectionAttr *string

	// Local Refresh
	LocalRefreshAttr *bool

	// Send Locale to OLAP
	SendLocaleAttr *bool

	// Drill Through Count
	RowDrillCountAttr *uint32

	// OLAP Fill Formatting
	ServerFillAttr *bool

	// OLAP Number Format
	ServerNumberFormatAttr *bool

	// OLAP Server Font
	ServerFontAttr *bool

	// OLAP Font Formatting
	ServerFontColorAttr *bool
}

type CT_CellProtection struct {

	// Cell Locked
	LockedAttr *bool

	// Hidden Cell
	HiddenAttr *bool
}

func (_dab *AG_RevData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ab := range start.Attr {
		if _ab.Name.Local == "\u0072\u0049\u0064" {
			_bd, _bba := _eb.ParseUint(_ab.Value, 10, 32)
			if _bba != nil {
				return _bba
			}
			_ga := uint32(_bd)
			_dab.RIdAttr = &_ga
			continue
		}
		if _ab.Name.Local == "\u0075\u0061" {
			_fae, _dbc := _eb.ParseBool(_ab.Value)
			if _dbc != nil {
				return _dbc
			}
			_dab.UaAttr = &_fae
			continue
		}
		if _ab.Name.Local == "\u0072\u0061" {
			_ge, _ag := _eb.ParseBool(_ab.Value)
			if _ag != nil {
				return _ag
			}
			_dab.RaAttr = &_ge
			continue
		}
	}
	for {
		_cdd, _dgc := d.Token()
		if _dgc != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u0052\u0065\u0076\u0044\u0061\u0074\u0061\u003a\u0020%\u0073", _dgc)
		}
		if _fb, _edc := _cdd.(_b.EndElement); _edc && _fb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cfad *CT_CustomProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_baacd:
	for {
		_cegf, _efdg := d.Token()
		if _efdg != nil {
			return _efdg
		}
		switch _fcfgg := _cegf.(type) {
		case _b.StartElement:
			switch _fcfgg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0050\u0072"}:
				_afdcee := NewCT_CustomProperty()
				if _cgbfd := d.DecodeElement(_afdcee, &_fcfgg); _cgbfd != nil {
					return _cgbfd
				}
				_cfad.CustomPr = append(_cfad.CustomPr, _afdcee)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _fcfgg.Name)
				if _cadg := d.Skip(); _cadg != nil {
					return _cadg
				}
			}
		case _b.EndElement:
			break _baacd
		case _b.CharData:
		}
	}
	return nil
}

type CT_SingleXmlCells struct {

	// Table Properties
	SingleXmlCell []*CT_SingleXmlCell
}

func (_dedg *CT_ChartFormat) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dedg.PivotArea = NewCT_PivotArea()
	for _, _ccac := range start.Attr {
		if _ccac.Name.Local == "\u0063\u0068\u0061r\u0074" {
			_afda, _bce := _eb.ParseUint(_ccac.Value, 10, 32)
			if _bce != nil {
				return _bce
			}
			_dedg.ChartAttr = uint32(_afda)
			continue
		}
		if _ccac.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074" {
			_gedbc, _bcdd := _eb.ParseUint(_ccac.Value, 10, 32)
			if _bcdd != nil {
				return _bcdd
			}
			_dedg.FormatAttr = uint32(_gedbc)
			continue
		}
		if _ccac.Name.Local == "\u0073\u0065\u0072\u0069\u0065\u0073" {
			_feac, _gcad := _eb.ParseBool(_ccac.Value)
			if _gcad != nil {
				return _gcad
			}
			_dedg.SeriesAttr = &_feac
			continue
		}
	}
_cfagc:
	for {
		_gcdg, _baad := d.Token()
		if _baad != nil {
			return _baad
		}
		switch _cgagg := _gcdg.(type) {
		case _b.StartElement:
			switch _cgagg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _cdfd := d.DecodeElement(_dedg.PivotArea, &_cgagg); _cdfd != nil {
					return _cdfd
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0046\u006fr\u006da\u0074\u0020\u0025\u0076", _cgagg.Name)
				if _fabg := d.Skip(); _fabg != nil {
					return _fabg
				}
			}
		case _b.EndElement:
			break _cfagc
		case _b.CharData:
		}
	}
	return nil
}

type CT_Hyperlinks struct {

	// Hyperlink
	Hyperlink []*CT_Hyperlink
}

type CT_SmartTagPr struct {

	// Embed SmartTags
	EmbedAttr *bool

	// Show Smart Tags
	ShowAttr ST_SmartTagShow
}

// ValidateWithPath validates the CT_SmartTagPr and its children, prefixing error messages with path
func (_fegdg *CT_SmartTagPr) ValidateWithPath(path string) error {
	if _ffbfd := _fegdg.ShowAttr.ValidateWithPath(path + "\u002fS\u0068\u006f\u0077\u0041\u0074\u0074r"); _ffbfd != nil {
		return _ffbfd
	}
	return nil
}

func (_efbad *CT_WorkbookProtection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gddca := range start.Attr {
		if _gddca.Name.Local == "\u0072\u0065\u0076\u0069si\u006f\u006e\u0073\u0041\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061m\u0065" {
			_baebac, _afcdbe := _gddca.Value, error(nil)
			if _afcdbe != nil {
				return _afcdbe
			}
			_efbad.RevisionsAlgorithmNameAttr = &_baebac
			continue
		}
		if _gddca.Name.Local == "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073H\u0061\u0073h\u0056\u0061\u006c\u0075\u0065" {
			_deadfc, _bcgfea := _gddca.Value, error(nil)
			if _bcgfea != nil {
				return _bcgfea
			}
			_efbad.RevisionsHashValueAttr = &_deadfc
			continue
		}
		if _gddca.Name.Local == "\u0077\u006f\u0072\u006bb\u006f\u006f\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072d\u0043h\u0061\u0072\u0061\u0063\u0074\u0065\u0072S\u0065\u0074" {
			_gbcffa, _edabfa := _gddca.Value, error(nil)
			if _edabfa != nil {
				return _edabfa
			}
			_efbad.WorkbookPasswordCharacterSetAttr = &_gbcffa
			continue
		}
		if _gddca.Name.Local == "\u0072\u0065v\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0043\u0068\u0061\u0072\u0061\u0063\u0074\u0065rS\u0065\u0074" {
			_cbbdbb, _bdbcg := _gddca.Value, error(nil)
			if _bdbcg != nil {
				return _bdbcg
			}
			_efbad.RevisionsPasswordCharacterSetAttr = &_cbbdbb
			continue
		}
		if _gddca.Name.Local == "\u006c\u006f\u0063\u006b\u0053\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065" {
			_fgeda, _aabdag := _eb.ParseBool(_gddca.Value)
			if _aabdag != nil {
				return _aabdag
			}
			_efbad.LockStructureAttr = &_fgeda
			continue
		}
		if _gddca.Name.Local == "l\u006f\u0063\u006b\u0057\u0069\u006e\u0064\u006f\u0077\u0073" {
			_agfae, _bbfee := _eb.ParseBool(_gddca.Value)
			if _bbfee != nil {
				return _bbfee
			}
			_efbad.LockWindowsAttr = &_agfae
			continue
		}
		if _gddca.Name.Local == "\u006c\u006f\u0063k\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e" {
			_dcbdg, _egfae := _eb.ParseBool(_gddca.Value)
			if _egfae != nil {
				return _egfae
			}
			_efbad.LockRevisionAttr = &_dcbdg
			continue
		}
		if _gddca.Name.Local == "\u0077\u006fr\u006b\u0062\u006fo\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_fbcd, _ffcbd := _gddca.Value, error(nil)
			if _ffcbd != nil {
				return _ffcbd
			}
			_efbad.WorkbookPasswordAttr = &_fbcd
			continue
		}
		if _gddca.Name.Local == "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073s\u0077\u006f\u0072\u0064" {
			_gcfdd, _bcfbgf := _gddca.Value, error(nil)
			if _bcfbgf != nil {
				return _bcfbgf
			}
			_efbad.RevisionsPasswordAttr = &_gcfdd
			continue
		}
		if _gddca.Name.Local == "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0061\u006ct\u0056\u0061\u006c\u0075\u0065" {
			_dbcga, _gefdd := _gddca.Value, error(nil)
			if _gefdd != nil {
				return _gefdd
			}
			_efbad.RevisionsSaltValueAttr = &_dbcga
			continue
		}
		if _gddca.Name.Local == "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0070\u0069n\u0043\u006f\u0075\u006e\u0074" {
			_cbcfe, _bffcc := _eb.ParseUint(_gddca.Value, 10, 32)
			if _bffcc != nil {
				return _bffcc
			}
			_afdcc := uint32(_cbcfe)
			_efbad.RevisionsSpinCountAttr = &_afdcc
			continue
		}
		if _gddca.Name.Local == "w\u006f\u0072\u006b\u0062oo\u006bA\u006c\u0067\u006f\u0072\u0069t\u0068\u006d\u004e\u0061\u006d\u0065" {
			_efcaea, _bfcgc := _gddca.Value, error(nil)
			if _bfcgc != nil {
				return _bfcgc
			}
			_efbad.WorkbookAlgorithmNameAttr = &_efcaea
			continue
		}
		if _gddca.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0048\u0061\u0073\u0068V\u0061\u006c\u0075\u0065" {
			_gdaddb, _dggfa := _gddca.Value, error(nil)
			if _dggfa != nil {
				return _dggfa
			}
			_efbad.WorkbookHashValueAttr = &_gdaddb
			continue
		}
		if _gddca.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0061\u006c\u0074V\u0061\u006c\u0075\u0065" {
			_abbbdc, _ebfbad := _gddca.Value, error(nil)
			if _ebfbad != nil {
				return _ebfbad
			}
			_efbad.WorkbookSaltValueAttr = &_abbbdc
			continue
		}
		if _gddca.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0070\u0069\u006eC\u006f\u0075\u006e\u0074" {
			_cbcaa, _aacebd := _eb.ParseUint(_gddca.Value, 10, 32)
			if _aacebd != nil {
				return _aacebd
			}
			_debcaa := uint32(_cbcaa)
			_efbad.WorkbookSpinCountAttr = &_debcaa
			continue
		}
	}
	for {
		_fecgf, _dbaff := d.Token()
		if _dbaff != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050r\u006f\u0074\u0065\u0063\u0074\u0069\u006fn\u003a\u0020\u0025\u0073", _dbaff)
		}
		if _ffabbf, _abgbd := _fecgf.(_b.EndElement); _abgbd && _ffabbf.Name == start.Name {
			break
		}
	}
	return nil
}

func (_bfgcb *CT_SheetId) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", _bfgcb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gbdgde ST_Orientation) String() string {
	switch _gbdgde {
	case 0:
		return ""
	case 1:
		return "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case 2:
		return "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074"
	case 3:
		return "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e"
	}
	return ""
}

func (_bbgde *ST_Type) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bgceg, _afacbd := d.Token()
	if _afacbd != nil {
		return _afacbd
	}
	if _bdddceg, _efaeba := _bgceg.(_b.EndElement); _efaeba && _bdddceg.Name == start.Name {
		*_bbgde = 1
		return nil
	}
	if _cgbbc, _ffceg := _bgceg.(_b.CharData); !_ffceg {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgceg)
	} else {
		switch string(_cgbbc) {
		case "":
			*_bbgde = 0
		case "\u006e\u006f\u006e\u0065":
			*_bbgde = 1
		case "\u0061\u006c\u006c":
			*_bbgde = 2
		case "\u0072\u006f\u0077":
			*_bbgde = 3
		case "\u0063\u006f\u006c\u0075\u006d\u006e":
			*_bbgde = 4
		}
	}
	_bgceg, _afacbd = d.Token()
	if _afacbd != nil {
		return _afacbd
	}
	if _bfaa, _bcagfe := _bgceg.(_b.EndElement); _bcagfe && _bfaa.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgceg)
}

// ValidateWithPath validates the CT_Fonts and its children, prefixing error messages with path
func (_bcddc *CT_Fonts) ValidateWithPath(path string) error {
	for _fbcfda, _fgfad := range _bcddc.Font {
		if _fcddg := _fgfad.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0046\u006f\u006e\u0074\u005b\u0025\u0064\u005d", path, _fbcfda)); _fcddg != nil {
			return _fcddg
		}
	}
	return nil
}

func NewCT_Border() *CT_Border { _acg := &CT_Border{}; return _acg }

func (_ggad *CT_Color) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggad.AutoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ggad.AutoAttr))})
	}
	if _ggad.IndexedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069n\u0064\u0065\u0078\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_ggad.IndexedAttr)})
	}
	if _ggad.RgbAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0067\u0062"}, Value: _ec.Sprintf("\u0025\u0076", *_ggad.RgbAttr)})
	}
	if _ggad.ThemeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0068\u0065m\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_ggad.ThemeAttr)})
	}
	if _ggad.TintAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ggad.TintAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_beabe *CT_Fonts) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbgea := range start.Attr {
		if _cbgea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bfcgd, _gafba := _eb.ParseUint(_cbgea.Value, 10, 32)
			if _gafba != nil {
				return _gafba
			}
			_ddgaac := uint32(_bfcgd)
			_beabe.CountAttr = &_ddgaac
			continue
		}
	}
_ccaea:
	for {
		_gdgge, _eegeg := d.Token()
		if _eegeg != nil {
			return _eegeg
		}
		switch _ccfcf := _gdgge.(type) {
		case _b.StartElement:
			switch _ccfcf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_gabga := NewCT_Font()
				if _afcf := d.DecodeElement(_gabga, &_ccfcf); _afcf != nil {
					return _afcf
				}
				_beabe.Font = append(_beabe.Font, _gabga)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0073\u0020\u0025\u0076", _ccfcf.Name)
				if _gegdb := d.Skip(); _gegdb != nil {
					return _gegdb
				}
			}
		case _b.EndElement:
			break _ccaea
		case _b.CharData:
		}
	}
	return nil
}

type StyleSheet struct{ CT_Stylesheet }

// Validate validates the CT_RangeSet and its children
func (_degcc *CT_RangeSet) Validate() error {
	return _degcc.ValidateWithPath("C\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074")
}

func (_daaa *CT_MetadataRecord) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eaecg := range start.Attr {
		if _eaecg.Name.Local == "\u0074" {
			_bbega, _gabba := _eb.ParseUint(_eaecg.Value, 10, 32)
			if _gabba != nil {
				return _gabba
			}
			_daaa.TAttr = uint32(_bbega)
			continue
		}
		if _eaecg.Name.Local == "\u0076" {
			_afcfb, _fbfea := _eb.ParseUint(_eaecg.Value, 10, 32)
			if _fbfea != nil {
				return _fbfea
			}
			_daaa.VAttr = uint32(_afcfb)
			continue
		}
	}
	for {
		_fggcab, _ggedf := d.Token()
		if _ggedf != nil {
			return _ec.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0052\u0065\u0063\u006f\u0072\u0064: \u0025\u0073", _ggedf)
		}
		if _ceaac, _cdbccb := _fggcab.(_b.EndElement); _cdbccb && _ceaac.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ecafga ST_PaneState) String() string {
	switch _ecafga {
	case 0:
		return ""
	case 1:
		return "\u0073\u0070\u006ci\u0074"
	case 2:
		return "\u0066\u0072\u006f\u007a\u0065\u006e"
	case 3:
		return "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074"
	}
	return ""
}

// Validate validates the CT_Top10 and its children
func (_caedb *CT_Top10) Validate() error {
	return _caedb.ValidateWithPath("\u0043\u0054\u005f\u0054\u006f\u0070\u0031\u0030")
}

func (_dgdfg *CT_ExternalLinkChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dgdfg.ExternalBook != nil {
		_bbff := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ae\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}}
		e.EncodeElement(_dgdfg.ExternalBook, _bbff)
	}
	if _dgdfg.DdeLink != nil {
		_fgdeg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0064\u0065\u004c\u0069\u006e\u006b"}}
		e.EncodeElement(_dgdfg.DdeLink, _fgdeg)
	}
	if _dgdfg.OleLink != nil {
		_ggec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004c\u0069\u006e\u006b"}}
		e.EncodeElement(_dgdfg.OleLink, _ggec)
	}
	return nil
}

// Validate validates the CT_Sst and its children
func (_caaag *CT_Sst) Validate() error {
	return _caaag.ValidateWithPath("\u0043\u0054\u005f\u0053\u0073\u0074")
}

func (_cdged *CT_X) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cdged.VAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _ec.Sprintf("\u0025\u0076", *_cdged.VAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_MdxSet() *CT_MdxSet { _cgfcdb := &CT_MdxSet{}; return _cgfcdb }

// Validate validates the CT_OleLink and its children
func (_eccgb *CT_OleLink) Validate() error {
	return _eccgb.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u004c\u0069\u006e\u006b")
}

// Validate validates the CT_SheetProtection and its children
func (_aeacg *CT_SheetProtection) Validate() error {
	return _aeacg.ValidateWithPath("\u0043T\u005fS\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_Scenario and its children, prefixing error messages with path
func (_eeggd *CT_Scenario) ValidateWithPath(path string) error {
	for _fffgc, _ffdgg := range _eeggd.InputCells {
		if _bageb := _ffdgg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0049\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006cs\u005b\u0025\u0064\u005d", path, _fffgc)); _bageb != nil {
			return _bageb
		}
	}
	return nil
}

// Validate validates the CT_SheetIdMap and its children
func (_ddcdg *CT_SheetIdMap) Validate() error {
	return _ddcdg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070")
}

func (_bbbbgfa ST_SortType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cebdab := _b.Attr{}
	_cebdab.Name = name
	switch _bbbbgfa {
	case ST_SortTypeUnset:
		_cebdab.Value = ""
	case ST_SortTypeNone:
		_cebdab.Value = "\u006e\u006f\u006e\u0065"
	case ST_SortTypeAscending:
		_cebdab.Value = "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case ST_SortTypeDescending:
		_cebdab.Value = "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	case ST_SortTypeAscendingAlpha:
		_cebdab.Value = "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061"
	case ST_SortTypeDescendingAlpha:
		_cebdab.Value = "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061"
	case ST_SortTypeAscendingNatural:
		_cebdab.Value = "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c"
	case ST_SortTypeDescendingNatural:
		_cebdab.Value = "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c"
	}
	return _cebdab, nil
}

func (_fddde ST_TableStyleType) ValidateWithPath(path string) error {
	switch _fddde {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fddde))
	}
	return nil
}

func (_gfddc *CT_FileSharing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfddc.ReadOnlyRecommendedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0061\u0064On\u006c\u0079\u0052\u0065\u0063\u006f\u006d\u006d\u0065\u006e\u0064\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfddc.ReadOnlyRecommendedAttr))})
	}
	if _gfddc.UserNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_gfddc.UserNameAttr)})
	}
	if _gfddc.ReservationPasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0073\u0065rv\u0061\u0074\u0069\u006f\u006e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_gfddc.ReservationPasswordAttr)})
	}
	if _gfddc.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_gfddc.AlgorithmNameAttr)})
	}
	if _gfddc.HashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _ec.Sprintf("\u0025\u0076", *_gfddc.HashValueAttr)})
	}
	if _gfddc.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _ec.Sprintf("\u0025\u0076", *_gfddc.SaltValueAttr)})
	}
	if _gfddc.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _ec.Sprintf("\u0025\u0076", *_gfddc.SpinCountAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fdfceb *CalcChain) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fdfceb.CT_CalcChain = *NewCT_CalcChain()
_ceebf:
	for {
		_febgbd, _bddcc := d.Token()
		if _bddcc != nil {
			return _bddcc
		}
		switch _agcdfb := _febgbd.(type) {
		case _b.StartElement:
			switch _agcdfb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}:
				_cdebf := NewCT_CalcCell()
				if _agfgee := d.DecodeElement(_cdebf, &_agcdfb); _agfgee != nil {
					return _agfgee
				}
				_fdfceb.C = append(_fdfceb.C, _cdebf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdfceb.ExtLst = NewCT_ExtensionList()
				if _dbbfa := d.DecodeElement(_fdfceb.ExtLst, &_agcdfb); _dbbfa != nil {
					return _dbbfa
				}
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0061\u006c\u0063\u0043\u0068a\u0069\u006e \u0025\u0076", _agcdfb.Name)
				if _cgacbd := d.Skip(); _cgacbd != nil {
					return _cgacbd
				}
			}
		case _b.EndElement:
			break _ceebf
		case _b.CharData:
		}
	}
	return nil
}

func (_feebd *ST_TotalsRowFunction) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aecdg, _ecedd := d.Token()
	if _ecedd != nil {
		return _ecedd
	}
	if _aeabbe, _eefdg := _aecdg.(_b.EndElement); _eefdg && _aeabbe.Name == start.Name {
		*_feebd = 1
		return nil
	}
	if _egedbce, _cfabd := _aecdg.(_b.CharData); !_cfabd {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aecdg)
	} else {
		switch string(_egedbce) {
		case "":
			*_feebd = 0
		case "\u006e\u006f\u006e\u0065":
			*_feebd = 1
		case "\u0073\u0075\u006d":
			*_feebd = 2
		case "\u006d\u0069\u006e":
			*_feebd = 3
		case "\u006d\u0061\u0078":
			*_feebd = 4
		case "\u0061v\u0065\u0072\u0061\u0067\u0065":
			*_feebd = 5
		case "\u0063\u006f\u0075n\u0074":
			*_feebd = 6
		case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
			*_feebd = 7
		case "\u0073\u0074\u0064\u0044\u0065\u0076":
			*_feebd = 8
		case "\u0076\u0061\u0072":
			*_feebd = 9
		case "\u0063\u0075\u0073\u0074\u006f\u006d":
			*_feebd = 10
		}
	}
	_aecdg, _ecedd = d.Token()
	if _ecedd != nil {
		return _ecedd
	}
	if _eeefc, _ecddcb := _aecdg.(_b.EndElement); _ecddcb && _eeefc.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aecdg)
}

func (_cddgga ST_SourceType) ValidateWithPath(path string) error {
	switch _cddgga {
	case 0, 1, 2, 3, 4:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cddgga))
	}
	return nil
}

func NewCT_RevisionHeaders() *CT_RevisionHeaders {
	_gaccb := &CT_RevisionHeaders{}
	_gaccb.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _gaccb
}

func (_cgca *CT_Col) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e"}, Value: _ec.Sprintf("\u0025\u0076", _cgca.MinAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078"}, Value: _ec.Sprintf("\u0025\u0076", _cgca.MaxAttr)})
	if _cgca.WidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0069\u0064t\u0068"}, Value: _ec.Sprintf("\u0025\u0076", *_cgca.WidthAttr)})
	}
	if _cgca.StyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0079l\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_cgca.StyleAttr)})
	}
	if _cgca.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cgca.HiddenAttr))})
	}
	if _cgca.BestFitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062e\u0073\u0074\u0046\u0069\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cgca.BestFitAttr))})
	}
	if _cgca.CustomWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u0075\u0073\u0074\u006f\u006d\u0057\u0069\u0064\u0074\u0068"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cgca.CustomWidthAttr))})
	}
	if _cgca.PhoneticAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cgca.PhoneticAttr))})
	}
	if _cgca.OutlineLevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_cgca.OutlineLevelAttr)})
	}
	if _cgca.CollapsedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cgca.CollapsedAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_edbfb *ST_MdxSetOrder) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_edbfb = 0
	case "\u0075":
		*_edbfb = 1
	case "\u0061":
		*_edbfb = 2
	case "\u0064":
		*_edbfb = 3
	case "\u0061\u0061":
		*_edbfb = 4
	case "\u0061\u0064":
		*_edbfb = 5
	case "\u006e\u0061":
		*_edbfb = 6
	case "\u006e\u0064":
		*_edbfb = 7
	}
	return nil
}

func (_gebgg ST_MdxSetOrder) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cdcgg := _b.Attr{}
	_cdcgg.Name = name
	switch _gebgg {
	case ST_MdxSetOrderUnset:
		_cdcgg.Value = ""
	case ST_MdxSetOrderU:
		_cdcgg.Value = "\u0075"
	case ST_MdxSetOrderA:
		_cdcgg.Value = "\u0061"
	case ST_MdxSetOrderD:
		_cdcgg.Value = "\u0064"
	case ST_MdxSetOrderAa:
		_cdcgg.Value = "\u0061\u0061"
	case ST_MdxSetOrderAd:
		_cdcgg.Value = "\u0061\u0064"
	case ST_MdxSetOrderNa:
		_cdcgg.Value = "\u006e\u0061"
	case ST_MdxSetOrderNd:
		_cdcgg.Value = "\u006e\u0064"
	}
	return _cdcgg, nil
}

// ValidateWithPath validates the CT_Selection and its children, prefixing error messages with path
func (_cgade *CT_Selection) ValidateWithPath(path string) error {
	if _fcdaa := _cgade.PaneAttr.ValidateWithPath(path + "\u002fP\u0061\u006e\u0065\u0041\u0074\u0074r"); _fcdaa != nil {
		return _fcdaa
	}
	return nil
}

func (_dgfbca *ST_PaneState) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bgeffc, _baabfb := d.Token()
	if _baabfb != nil {
		return _baabfb
	}
	if _dggdad, _bggfd := _bgeffc.(_b.EndElement); _bggfd && _dggdad.Name == start.Name {
		*_dgfbca = 1
		return nil
	}
	if _bbbeg, _cgdbge := _bgeffc.(_b.CharData); !_cgdbge {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgeffc)
	} else {
		switch string(_bbbeg) {
		case "":
			*_dgfbca = 0
		case "\u0073\u0070\u006ci\u0074":
			*_dgfbca = 1
		case "\u0066\u0072\u006f\u007a\u0065\u006e":
			*_dgfbca = 2
		case "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074":
			*_dgfbca = 3
		}
	}
	_bgeffc, _baabfb = d.Token()
	if _baabfb != nil {
		return _baabfb
	}
	if _gacbb, _acbaf := _bgeffc.(_b.EndElement); _acbaf && _gacbb.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgeffc)
}

// ValidateWithPath validates the CT_WebPublishObjects and its children, prefixing error messages with path
func (_afaed *CT_WebPublishObjects) ValidateWithPath(path string) error {
	for _eabgfc, _adebd := range _afaed.WebPublishObject {
		if _gfgab := _adebd.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002fWe\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074\u005b\u0025\u0064\u005d", path, _eabgfc)); _gfgab != nil {
			return _gfgab
		}
	}
	return nil
}

func (_gegda *CT_SmartTags) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_addfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0063\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}}
	for _, _bdega := range _gegda.CellSmartTags {
		e.EncodeElement(_bdega, _addfa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the Workbook and its children
func (_gaegfe *Workbook) Validate() error {
	return _gaegfe.ValidateWithPath("\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b")
}

func (_fcgbd *CT_PivotField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fagbf := range start.Attr {
		if _fagbf.Name.Local == "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u0069\u006c\u0074\u0065\u0072" {
			_gbeda, _dgecg := _eb.ParseBool(_fagbf.Value)
			if _dgecg != nil {
				return _dgecg
			}
			_fcgbd.MeasureFilterAttr = &_gbeda
			continue
		}
		if _fagbf.Name.Local == "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072" {
			_aebgd, _dcac := _eb.ParseBool(_fagbf.Value)
			if _dcac != nil {
				return _dcac
			}
			_fcgbd.IncludeNewItemsInFilterAttr = &_aebgd
			continue
		}
		if _fagbf.Name.Local == "\u0063o\u006d\u0070\u0061\u0063\u0074" {
			_dcadd, _bgacb := _eb.ParseBool(_fagbf.Value)
			if _bgacb != nil {
				return _bgacb
			}
			_fcgbd.CompactAttr = &_dcadd
			continue
		}
		if _fagbf.Name.Local == "\u0069\u0074\u0065\u006d\u0050\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074" {
			_gffefd, _eecgd := _eb.ParseUint(_fagbf.Value, 10, 32)
			if _eecgd != nil {
				return _eecgd
			}
			_edcef := uint32(_gffefd)
			_fcgbd.ItemPageCountAttr = &_edcef
			continue
		}
		if _fagbf.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_gcaef, _dedag := _eb.ParseUint(_fagbf.Value, 10, 32)
			if _dedag != nil {
				return _dedag
			}
			_cbfbfb := uint32(_gcaef)
			_fcgbd.NumFmtIdAttr = &_cbfbfb
			continue
		}
		if _fagbf.Name.Local == "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065" {
			_fcgbd.SortTypeAttr.UnmarshalXMLAttr(_fagbf)
			continue
		}
		if _fagbf.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_dece, _gbafe := _eb.ParseBool(_fagbf.Value)
			if _gbafe != nil {
				return _gbafe
			}
			_fcgbd.OutlineAttr = &_dece
			continue
		}
		if _fagbf.Name.Local == "\u0064\u0061\u0074\u0061\u0053\u006f\u0075\u0072\u0063e\u0053\u006f\u0072\u0074" {
			_fegda, _bggd := _eb.ParseBool(_fagbf.Value)
			if _bggd != nil {
				return _bggd
			}
			_fcgbd.DataSourceSortAttr = &_fegda
			continue
		}
		if _fagbf.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw" {
			_cbdbd, _fbdeef := _eb.ParseBool(_fagbf.Value)
			if _fbdeef != nil {
				return _fbdeef
			}
			_fcgbd.DragToRowAttr = &_cbdbd
			continue
		}
		if _fagbf.Name.Local == "\u006eo\u006eA\u0075\u0074\u006f\u0053\u006fr\u0074\u0044e\u0066\u0061\u0075\u006c\u0074" {
			_gegbg, _bfcdca := _eb.ParseBool(_fagbf.Value)
			if _bfcdca != nil {
				return _bfcdca
			}
			_fcgbd.NonAutoSortDefaultAttr = &_gegbg
			continue
		}
		if _fagbf.Name.Local == "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064" {
			_ddgbg, _bgdbf := _eb.ParseBool(_fagbf.Value)
			if _bgdbf != nil {
				return _bgdbf
			}
			_fcgbd.MultipleItemSelectionAllowedAttr = &_ddgbg
			continue
		}
		if _fagbf.Name.Local == "\u0072\u0061\u006e\u006b\u0042\u0079" {
			_dgccab, _cdaca := _eb.ParseUint(_fagbf.Value, 10, 32)
			if _cdaca != nil {
				return _cdaca
			}
			_bcbcg := uint32(_dgccab)
			_fcgbd.RankByAttr = &_bcbcg
			continue
		}
		if _fagbf.Name.Local == "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_eaaea, _edace := _eb.ParseBool(_fagbf.Value)
			if _edace != nil {
				return _edace
			}
			_fcgbd.StdDevSubtotalAttr = &_eaaea
			continue
		}
		if _fagbf.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_bdddce, _cffef := _eb.ParseBool(_fagbf.Value)
			if _cffef != nil {
				return _cffef
			}
			_fcgbd.CountASubtotalAttr = &_bdddce
			continue
		}
		if _fagbf.Name.Local == "\u0061\u0075\u0074\u006f\u0053\u0068\u006f\u0077" {
			_fecab, _daeaeg := _eb.ParseBool(_fagbf.Value)
			if _daeaeg != nil {
				return _daeaeg
			}
			_fcgbd.AutoShowAttr = &_fecab
			continue
		}
		if _fagbf.Name.Local == "\u0073\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0041\u0073\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_bdcac, _dbfa := _eb.ParseBool(_fagbf.Value)
			if _dbfa != nil {
				return _dbfa
			}
			_fcgbd.ShowPropAsCaptionAttr = &_bdcac
			continue
		}
		if _fagbf.Name.Local == "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_edbg, _cabcab := _eb.ParseBool(_fagbf.Value)
			if _cabcab != nil {
				return _cabcab
			}
			_fcgbd.ProductSubtotalAttr = &_edbg
			continue
		}
		if _fagbf.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065" {
			_fbfed, _cbgdae := _eb.ParseBool(_fagbf.Value)
			if _cbgdae != nil {
				return _cbgdae
			}
			_fcgbd.DragToPageAttr = &_fbfed
			continue
		}
		if _fagbf.Name.Local == "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_eagbfd, _aaddg := _eb.ParseBool(_fagbf.Value)
			if _aaddg != nil {
				return _aaddg
			}
			_fcgbd.DefaultSubtotalAttr = &_eagbfd
			continue
		}
		if _fagbf.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061" {
			_decde, _agagf := _eb.ParseBool(_fagbf.Value)
			if _agagf != nil {
				return _agagf
			}
			_fcgbd.DragToDataAttr = &_decde
			continue
		}
		if _fagbf.Name.Local == "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_cbca, _dgabe := _eb.ParseBool(_fagbf.Value)
			if _dgabe != nil {
				return _dgabe
			}
			_fcgbd.MaxSubtotalAttr = &_cbca
			continue
		}
		if _fagbf.Name.Local == "\u0068\u0069\u0064e\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073" {
			_fgbff, _bbada := _eb.ParseBool(_fagbf.Value)
			if _bbada != nil {
				return _bbada
			}
			_fcgbd.HideNewItemsAttr = &_fgbff
			continue
		}
		if _fagbf.Name.Local == "\u0073\u0068\u006fw\u0050\u0072\u006f\u0070\u0043\u0065\u006c\u006c" {
			_ffggf, _efefe := _eb.ParseBool(_fagbf.Value)
			if _efefe != nil {
				return _efefe
			}
			_fcgbd.ShowPropCellAttr = &_ffggf
			continue
		}
		if _fagbf.Name.Local == "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070" {
			_bdba, _ecdea := _eb.ParseBool(_fagbf.Value)
			if _ecdea != nil {
				return _ecdea
			}
			_fcgbd.SubtotalTopAttr = &_bdba
			continue
		}
		if _fagbf.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064" {
			_dcfde, _bfaca := _eb.ParseBool(_fagbf.Value)
			if _bfaca != nil {
				return _bfaca
			}
			_fcgbd.ServerFieldAttr = &_dcfde
			continue
		}
		if _fagbf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_agfeea, _afabb := _fagbf.Value, error(nil)
			if _afabb != nil {
				return _afabb
			}
			_fcgbd.NameAttr = &_agfeea
			continue
		}
		if _fagbf.Name.Local == "\u0069n\u0073e\u0072\u0074\u0050\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b" {
			_gcfefg, _effeg := _eb.ParseBool(_fagbf.Value)
			if _effeg != nil {
				return _effeg
			}
			_fcgbd.InsertPageBreakAttr = &_gcfefg
			continue
		}
		if _fagbf.Name.Local == "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_geded, _fecbfd := _eb.ParseBool(_fagbf.Value)
			if _fecbfd != nil {
				return _fecbfd
			}
			_fcgbd.SumSubtotalAttr = &_geded
			continue
		}
		if _fagbf.Name.Local == "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd" {
			_cfecc, _egbbe := _eb.ParseBool(_fagbf.Value)
			if _egbbe != nil {
				return _egbbe
			}
			_fcgbd.DataFieldAttr = &_cfecc
			continue
		}
		if _fagbf.Name.Local == "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_dddfgf, _fceag := _eb.ParseBool(_fagbf.Value)
			if _fceag != nil {
				return _fceag
			}
			_fcgbd.AvgSubtotalAttr = &_dddfgf
			continue
		}
		if _fagbf.Name.Local == "t\u006f\u0070\u0041\u0075\u0074\u006f\u0053\u0068\u006f\u0077" {
			_fcecd, _fccbd := _eb.ParseBool(_fagbf.Value)
			if _fccbd != nil {
				return _fccbd
			}
			_fcgbd.TopAutoShowAttr = &_fcecd
			continue
		}
		if _fagbf.Name.Local == "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_eeggg, _egdde := _eb.ParseBool(_fagbf.Value)
			if _egdde != nil {
				return _egdde
			}
			_fcgbd.MinSubtotalAttr = &_eeggg
			continue
		}
		if _fagbf.Name.Local == "\u0064r\u0061\u0067\u004f\u0066\u0066" {
			_ggcee, _ggfaff := _eb.ParseBool(_fagbf.Value)
			if _ggfaff != nil {
				return _ggfaff
			}
			_fcgbd.DragOffAttr = &_ggcee
			continue
		}
		if _fagbf.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_bfafb, _abcag := _eb.ParseBool(_fagbf.Value)
			if _abcag != nil {
				return _abcag
			}
			_fcgbd.CountSubtotalAttr = &_bfafb
			continue
		}
		if _fagbf.Name.Local == "u\u006ei\u0071\u0075\u0065\u004d\u0065\u006d\u0062\u0065r\u0050\u0072\u006f\u0070er\u0074\u0079" {
			_faged, _afeda := _fagbf.Value, error(nil)
			if _afeda != nil {
				return _afeda
			}
			_fcgbd.UniqueMemberPropertyAttr = &_faged
			continue
		}
		if _fagbf.Name.Local == "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_dabdd, _babf := _eb.ParseBool(_fagbf.Value)
			if _babf != nil {
				return _babf
			}
			_fcgbd.VarPSubtotalAttr = &_dabdd
			continue
		}
		if _fagbf.Name.Local == "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_ddadc, _deafee := _eb.ParseBool(_fagbf.Value)
			if _deafee != nil {
				return _deafee
			}
			_fcgbd.StdDevPSubtotalAttr = &_ddadc
			continue
		}
		if _fagbf.Name.Local == "\u0073u\u0062t\u006f\u0074\u0061\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_feddbb, _dgfg := _fagbf.Value, error(nil)
			if _dgfg != nil {
				return _dgfg
			}
			_fcgbd.SubtotalCaptionAttr = &_feddbb
			continue
		}
		if _fagbf.Name.Local == "s\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0054\u0069\u0070" {
			_becaa, _fefaa := _eb.ParseBool(_fagbf.Value)
			if _fefaa != nil {
				return _fefaa
			}
			_fcgbd.ShowPropTipAttr = &_becaa
			continue
		}
		if _fagbf.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0042\u006c\u0061n\u006b\u0052\u006f\u0077" {
			_aafeg, _cbdbg := _eb.ParseBool(_fagbf.Value)
			if _cbdbg != nil {
				return _cbdbg
			}
			_fcgbd.InsertBlankRowAttr = &_aafeg
			continue
		}
		if _fagbf.Name.Local == "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0041\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0044\u0072\u0069\u006c\u006c\u0053t\u0061\u0074\u0065" {
			_egca, _bbeb := _eb.ParseBool(_fagbf.Value)
			if _bbeb != nil {
				return _bbeb
			}
			_fcgbd.DefaultAttributeDrillStateAttr = &_egca
			continue
		}
		if _fagbf.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl" {
			_gcba, _gacga := _eb.ParseBool(_fagbf.Value)
			if _gacga != nil {
				return _gacga
			}
			_fcgbd.DragToColAttr = &_gcba
			continue
		}
		if _fagbf.Name.Local == "h\u0069\u0064\u0064\u0065\u006e\u004c\u0065\u0076\u0065\u006c" {
			_gfdbga, _adcbad := _eb.ParseBool(_fagbf.Value)
			if _adcbad != nil {
				return _adcbad
			}
			_fcgbd.HiddenLevelAttr = &_gfdbga
			continue
		}
		if _fagbf.Name.Local == "\u0061\u0078\u0069\u0073" {
			_fcgbd.AxisAttr.UnmarshalXMLAttr(_fagbf)
			continue
		}
		if _fagbf.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e\u0073" {
			_dccggb, _gacaa := _eb.ParseBool(_fagbf.Value)
			if _gacaa != nil {
				return _gacaa
			}
			_fcgbd.ShowDropDownsAttr = &_dccggb
			continue
		}
		if _fagbf.Name.Local == "\u0073h\u006f\u0077\u0041\u006c\u006c" {
			_caacd, _ecgge := _eb.ParseBool(_fagbf.Value)
			if _ecgge != nil {
				return _ecgge
			}
			_fcgbd.ShowAllAttr = &_caacd
			continue
		}
		if _fagbf.Name.Local == "\u0061\u006c\u006c\u0044\u0072\u0069\u006c\u006c\u0065\u0064" {
			_gddeb, _gbbga := _eb.ParseBool(_fagbf.Value)
			if _gbbga != nil {
				return _gbbga
			}
			_fcgbd.AllDrilledAttr = &_gddeb
			continue
		}
		if _fagbf.Name.Local == "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_eagdf, _cbbbb := _eb.ParseBool(_fagbf.Value)
			if _cbbbb != nil {
				return _cbbbb
			}
			_fcgbd.VarSubtotalAttr = &_eagdf
			continue
		}
	}
_bagcd:
	for {
		_efaeb, _cggbee := d.Token()
		if _cggbee != nil {
			return _cggbee
		}
		switch _gcga := _efaeb.(type) {
		case _b.StartElement:
			switch _gcga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065m\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065m\u0073"}:
				_fcgbd.Items = NewCT_Items()
				if _bcfge := d.DecodeElement(_fcgbd.Items, &_gcga); _bcfge != nil {
					return _bcfge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065"}:
				_fcgbd.AutoSortScope = NewCT_AutoSortScope()
				if _fedac := d.DecodeElement(_fcgbd.AutoSortScope, &_gcga); _fedac != nil {
					return _fedac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fcgbd.ExtLst = NewCT_ExtensionList()
				if _fcedb := d.DecodeElement(_fcgbd.ExtLst, &_gcga); _fcedb != nil {
					return _fcedb
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050i\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064 \u0025\u0076", _gcga.Name)
				if _ffbdb := d.Skip(); _ffbdb != nil {
					return _ffbdb
				}
			}
		case _b.EndElement:
			break _bagcd
		case _b.CharData:
		}
	}
	return nil
}

func (_gaead *ST_DdeValueType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gaead = 0
	case "\u006e\u0069\u006c":
		*_gaead = 1
	case "\u0062":
		*_gaead = 2
	case "\u006e":
		*_gaead = 3
	case "\u0065":
		*_gaead = 4
	case "\u0073\u0074\u0072":
		*_gaead = 5
	}
	return nil
}

// Validate validates the CT_SmartTagType and its children
func (_abfeff *CT_SmartTagType) Validate() error {
	return _abfeff.ValidateWithPath("\u0043T\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065")
}

// ValidateWithPath validates the CT_ReviewedRevisions and its children, prefixing error messages with path
func (_cedgf *CT_ReviewedRevisions) ValidateWithPath(path string) error {
	for _ebadge, _afaec := range _cedgf.Reviewed {
		if _fbbfa := _afaec.ValidateWithPath(_ec.Sprintf("\u0025s\u002fR\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u005b\u0025\u0064\u005d", path, _ebadge)); _fbbfa != nil {
			return _fbbfa
		}
	}
	return nil
}

func (_ddbd *CT_DataConsolidate) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _daeba := range start.Attr {
		if _daeba.Name.Local == "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_ddbd.FunctionAttr.UnmarshalXMLAttr(_daeba)
			continue
		}
		if _daeba.Name.Local == "s\u0074\u0061\u0072\u0074\u004c\u0061\u0062\u0065\u006c\u0073" {
			_ddbde, _bcee := _eb.ParseBool(_daeba.Value)
			if _bcee != nil {
				return _bcee
			}
			_ddbd.StartLabelsAttr = &_ddbde
			continue
		}
		if _daeba.Name.Local == "\u006c\u0065\u0066\u0074\u004c\u0061\u0062\u0065\u006c\u0073" {
			_cgdcf, _aggcb := _eb.ParseBool(_daeba.Value)
			if _aggcb != nil {
				return _aggcb
			}
			_ddbd.LeftLabelsAttr = &_cgdcf
			continue
		}
		if _daeba.Name.Local == "\u0074o\u0070\u004c\u0061\u0062\u0065\u006cs" {
			_ffggd, _fgefc := _eb.ParseBool(_daeba.Value)
			if _fgefc != nil {
				return _fgefc
			}
			_ddbd.TopLabelsAttr = &_ffggd
			continue
		}
		if _daeba.Name.Local == "\u006c\u0069\u006e\u006b" {
			_befda, _cffe := _eb.ParseBool(_daeba.Value)
			if _cffe != nil {
				return _cffe
			}
			_ddbd.LinkAttr = &_befda
			continue
		}
	}
_fafaf:
	for {
		_bbee, _bfcg := d.Token()
		if _bfcg != nil {
			return _bfcg
		}
		switch _cdcc := _bbee.(type) {
		case _b.StartElement:
			switch _cdcc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0052\u0065\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0052\u0065\u0066\u0073"}:
				_ddbd.DataRefs = NewCT_DataRefs()
				if _bbcg := d.DecodeElement(_ddbd.DataRefs, &_cdcc); _bbcg != nil {
					return _bbcg
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0043\u006fn\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065\u0020\u0025\u0076", _cdcc.Name)
				if _bagb := d.Skip(); _bagb != nil {
					return _bagb
				}
			}
		case _b.EndElement:
			break _fafaf
		case _b.CharData:
		}
	}
	return nil
}

type CT_IndexedColors struct {

	// RGB Color
	RgbColor []*CT_RgbColor
}

// ValidateWithPath validates the CT_Sets and its children, prefixing error messages with path
func (_faddg *CT_Sets) ValidateWithPath(path string) error {
	for _deecc, _acaaad := range _faddg.Set {
		if _edcga := _acaaad.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0053\u0065\u0074\u005b\u0025\u0064\u005d", path, _deecc)); _edcga != nil {
			return _edcga
		}
	}
	return nil
}

func (_degf *CT_Chartsheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _degf.SheetPr != nil {
		_afcg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_degf.SheetPr, _afcg)
	}
	_dcca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
	e.EncodeElement(_degf.SheetViews, _dcca)
	if _degf.SheetProtection != nil {
		_edfb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_degf.SheetProtection, _edfb)
	}
	if _degf.CustomSheetViews != nil {
		_eddbd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_degf.CustomSheetViews, _eddbd)
	}
	if _degf.PageMargins != nil {
		_fbec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_degf.PageMargins, _fbec)
	}
	if _degf.PageSetup != nil {
		_adfb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_degf.PageSetup, _adfb)
	}
	if _degf.HeaderFooter != nil {
		_cdfa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_degf.HeaderFooter, _cdfa)
	}
	_fabad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
	e.EncodeElement(_degf.Drawing, _fabad)
	if _degf.LegacyDrawing != nil {
		_bgcbb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_degf.LegacyDrawing, _bgcbb)
	}
	if _degf.LegacyDrawingHF != nil {
		_bgbg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_degf.LegacyDrawingHF, _bgbg)
	}
	if _degf.DrawingHF != nil {
		_ecfec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_degf.DrawingHF, _ecfec)
	}
	if _degf.Picture != nil {
		_dcfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}}
		e.EncodeElement(_degf.Picture, _dcfa)
	}
	if _degf.WebPublishItems != nil {
		_bgga := _b.StartElement{Name: _b.Name{Local: "\u006da\u003aw\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_degf.WebPublishItems, _bgga)
	}
	if _degf.ExtLst != nil {
		_cbaa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_degf.ExtLst, _cbaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bdafc *ST_PatternType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bdafc = 0
	case "\u006e\u006f\u006e\u0065":
		*_bdafc = 1
	case "\u0073\u006f\u006ci\u0064":
		*_bdafc = 2
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079":
		*_bdafc = 3
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
		*_bdafc = 4
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
		*_bdafc = 5
	case "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c":
		*_bdafc = 6
	case "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
		*_bdafc = 7
	case "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e":
		*_bdafc = 8
	case "\u0064\u0061\u0072\u006b\u0055\u0070":
		*_bdafc = 9
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064":
		*_bdafc = 10
	case "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
		*_bdafc = 11
	case "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c":
		*_bdafc = 12
	case "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
		*_bdafc = 13
	case "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n":
		*_bdafc = 14
	case "\u006ci\u0067\u0068\u0074\u0055\u0070":
		*_bdafc = 15
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d":
		*_bdafc = 16
	case "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
		*_bdafc = 17
	case "\u0067r\u0061\u0079\u0031\u0032\u0035":
		*_bdafc = 18
	case "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035":
		*_bdafc = 19
	}
	return nil
}

func (_fadgab ST_DataValidationType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gcfdg := _b.Attr{}
	_gcfdg.Name = name
	switch _fadgab {
	case ST_DataValidationTypeUnset:
		_gcfdg.Value = ""
	case ST_DataValidationTypeNone:
		_gcfdg.Value = "\u006e\u006f\u006e\u0065"
	case ST_DataValidationTypeWhole:
		_gcfdg.Value = "\u0077\u0068\u006fl\u0065"
	case ST_DataValidationTypeDecimal:
		_gcfdg.Value = "\u0064e\u0063\u0069\u006d\u0061\u006c"
	case ST_DataValidationTypeList:
		_gcfdg.Value = "\u006c\u0069\u0073\u0074"
	case ST_DataValidationTypeDate:
		_gcfdg.Value = "\u0064\u0061\u0074\u0065"
	case ST_DataValidationTypeTime:
		_gcfdg.Value = "\u0074\u0069\u006d\u0065"
	case ST_DataValidationTypeTextLength:
		_gcfdg.Value = "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068"
	case ST_DataValidationTypeCustom:
		_gcfdg.Value = "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return _gcfdg, nil
}

func (_cdcgc *CT_Xf) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cdcgc.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_cdcgc.NumFmtIdAttr)})
	}
	if _cdcgc.FontIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u006e\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_cdcgc.FontIdAttr)})
	}
	if _cdcgc.FillIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006c\u006c\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_cdcgc.FillIdAttr)})
	}
	if _cdcgc.BorderIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006f\u0072\u0064\u0065\u0072\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_cdcgc.BorderIdAttr)})
	}
	if _cdcgc.XfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0066\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_cdcgc.XfIdAttr)})
	}
	if _cdcgc.QuotePrefixAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cdcgc.QuotePrefixAttr))})
	}
	if _cdcgc.PivotButtonAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0069\u0076\u006f\u0074\u0042\u0075\u0074\u0074\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cdcgc.PivotButtonAttr))})
	}
	if _cdcgc.ApplyNumberFormatAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070\u006c\u0079\u004e\u0075\u006d\u0062\u0065\u0072\u0046o\u0072\u006d\u0061\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cdcgc.ApplyNumberFormatAttr))})
	}
	if _cdcgc.ApplyFontAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070\u006c\u0079\u0046\u006f\u006et"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cdcgc.ApplyFontAttr))})
	}
	if _cdcgc.ApplyFillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070\u006c\u0079\u0046\u0069\u006cl"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cdcgc.ApplyFillAttr))})
	}
	if _cdcgc.ApplyBorderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0070\u0070\u006c\u0079\u0042\u006f\u0072\u0064\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cdcgc.ApplyBorderAttr))})
	}
	if _cdcgc.ApplyAlignmentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070\u006c\u0079\u0041\u006c\u0069\u0067n\u006d\u0065\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cdcgc.ApplyAlignmentAttr))})
	}
	if _cdcgc.ApplyProtectionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cdcgc.ApplyProtectionAttr))})
	}
	e.EncodeToken(start)
	if _cdcgc.Alignment != nil {
		_cddec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003aa\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"}}
		e.EncodeElement(_cdcgc.Alignment, _cddec)
	}
	if _cdcgc.Protection != nil {
		_fedbca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_cdcgc.Protection, _fedbca)
	}
	if _cdcgc.ExtLst != nil {
		_eacee := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cdcgc.ExtLst, _eacee)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GroupLevel and its children, prefixing error messages with path
func (_acaae *CT_GroupLevel) ValidateWithPath(path string) error {
	if _acaae.Groups != nil {
		if _ebee := _acaae.Groups.ValidateWithPath(path + "\u002fG\u0072\u006f\u0075\u0070\u0073"); _ebee != nil {
			return _ebee
		}
	}
	if _acaae.ExtLst != nil {
		if _ddeg := _acaae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ddeg != nil {
			return _ddeg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Rst and its children, prefixing error messages with path
func (_gdgdf *CT_Rst) ValidateWithPath(path string) error {
	for _dfcce, _baefcc := range _gdgdf.R {
		if _deaga := _baefcc.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0052\u005b\u0025\u0064\u005d", path, _dfcce)); _deaga != nil {
			return _deaga
		}
	}
	for _gbffab, _fdbgfg := range _gdgdf.RPh {
		if _feadg := _fdbgfg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0052\u0050\u0068\u005b\u0025\u0064\u005d", path, _gbffab)); _feadg != nil {
			return _feadg
		}
	}
	if _gdgdf.PhoneticPr != nil {
		if _bgccfg := _gdgdf.PhoneticPr.ValidateWithPath(path + "/\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"); _bgccfg != nil {
			return _bgccfg
		}
	}
	return nil
}

// Validate validates the CT_MeasureGroup and its children
func (_aeaa *CT_MeasureGroup) Validate() error {
	return _aeaa.ValidateWithPath("\u0043T\u005fM\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070")
}

func (_gbdega *CT_PivotFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abdef := range start.Attr {
		if _abdef.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_accgd, _addgd := _eb.ParseUint(_abdef.Value, 10, 32)
			if _addgd != nil {
				return _addgd
			}
			_gfcbgc := uint32(_accgd)
			_gbdega.CountAttr = &_gfcbgc
			continue
		}
	}
_adfae:
	for {
		_eabcd, _cbacc := d.Token()
		if _cbacc != nil {
			return _cbacc
		}
		switch _gbac := _eabcd.(type) {
		case _b.StartElement:
			switch _gbac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064"}:
				_fdecc := NewCT_PivotField()
				if _dgagf := d.DecodeElement(_fdecc, &_gbac); _dgagf != nil {
					return _dgagf
				}
				_gbdega.PivotField = append(_gbdega.PivotField, _fdecc)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069e\u006cd\u0073\u0020\u0025\u0076", _gbac.Name)
				if _effbe := d.Skip(); _effbe != nil {
					return _effbe
				}
			}
		case _b.EndElement:
			break _adfae
		case _b.CharData:
		}
	}
	return nil
}

func (_aceaf *CT_DefinedNames) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _aceaf.DefinedName != nil {
		_abgba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065"}}
		for _, _ddgaa := range _aceaf.DefinedName {
			e.EncodeElement(_ddgaa, _abgba)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_eacbg *CT_XmlColumnPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfdcdc := range start.Attr {
		if _cfdcdc.Name.Local == "\u006d\u0061\u0070I\u0064" {
			_gbgad, _addaa := _eb.ParseUint(_cfdcdc.Value, 10, 32)
			if _addaa != nil {
				return _addaa
			}
			_eacbg.MapIdAttr = uint32(_gbgad)
			continue
		}
		if _cfdcdc.Name.Local == "\u0078\u0070\u0061t\u0068" {
			_ddeda, _fbdab := _cfdcdc.Value, error(nil)
			if _fbdab != nil {
				return _fbdab
			}
			_eacbg.XpathAttr = _ddeda
			continue
		}
		if _cfdcdc.Name.Local == "\u0064\u0065\u006eo\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0064" {
			_addee, _fgded := _eb.ParseBool(_cfdcdc.Value)
			if _fgded != nil {
				return _fgded
			}
			_eacbg.DenormalizedAttr = &_addee
			continue
		}
		if _cfdcdc.Name.Local == "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065" {
			_gedea, _cafcg := _cfdcdc.Value, error(nil)
			if _cafcg != nil {
				return _cafcg
			}
			_eacbg.XmlDataTypeAttr = _gedea
			continue
		}
	}
_cefae:
	for {
		_gbcgad, _fbadbd := d.Token()
		if _fbadbd != nil {
			return _fbadbd
		}
		switch _gdfdb := _gbcgad.(type) {
		case _b.StartElement:
			switch _gdfdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eacbg.ExtLst = NewCT_ExtensionList()
				if _acdagd := d.DecodeElement(_eacbg.ExtLst, &_gdfdb); _acdagd != nil {
					return _acdagd
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0058\u006d\u006c\u0043\u006f\u006c\u0075m\u006eP\u0072\u0020\u0025\u0076", _gdfdb.Name)
				if _cfeea := d.Skip(); _cfeea != nil {
					return _cfeea
				}
			}
		case _b.EndElement:
			break _cefae
		case _b.CharData:
		}
	}
	return nil
}

func (_gdfff ST_ParameterType) String() string {
	switch _gdfff {
	case 0:
		return ""
	case 1:
		return "\u0070\u0072\u006f\u006d\u0070\u0074"
	case 2:
		return "\u0076\u0061\u006cu\u0065"
	case 3:
		return "\u0063\u0065\u006c\u006c"
	}
	return ""
}

func (_ebcbe *CT_RevisionDefinedName) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbgcf := range start.Attr {
		if _cbgcf.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_fbfdd, _eedgfb := _cbgcf.Value, error(nil)
			if _eedgfb != nil {
				return _eedgfb
			}
			_ebcbe.DescriptionAttr = &_fbfdd
			continue
		}
		if _cbgcf.Name.Local == "\u006f\u006c\u0064\u0044\u0065\u0073\u0063\u0072\u0069p\u0074\u0069\u006f\u006e" {
			_dddceg, _eaebf := _cbgcf.Value, error(nil)
			if _eaebf != nil {
				return _eaebf
			}
			_ebcbe.OldDescriptionAttr = &_dddceg
			continue
		}
		if _cbgcf.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u0056\u0069\u0065\u0077" {
			_cgcge, _cbcefb := _eb.ParseBool(_cbgcf.Value)
			if _cbcefb != nil {
				return _cbcefb
			}
			_ebcbe.CustomViewAttr = &_cgcge
			continue
		}
		if _cbgcf.Name.Local == "\u0068\u0065\u006c\u0070" {
			_aaaac, _eeaag := _cbgcf.Value, error(nil)
			if _eeaag != nil {
				return _eeaag
			}
			_ebcbe.HelpAttr = &_aaaac
			continue
		}
		if _cbgcf.Name.Local == "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_aecdc, _ebdec := _eb.ParseBool(_cbgcf.Value)
			if _ebdec != nil {
				return _ebdec
			}
			_ebcbe.FunctionAttr = &_aecdc
			continue
		}
		if _cbgcf.Name.Local == "\u006fl\u0064\u0048\u0065\u006c\u0070" {
			_bgfce, _daccc := _cbgcf.Value, error(nil)
			if _daccc != nil {
				return _daccc
			}
			_ebcbe.OldHelpAttr = &_bgfce
			continue
		}
		if _cbgcf.Name.Local == "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064" {
			_gbadf, _ceeecd := _eb.ParseUint(_cbgcf.Value, 10, 8)
			if _ceeecd != nil {
				return _ceeecd
			}
			_eacaba := uint8(_gbadf)
			_ebcbe.FunctionGroupIdAttr = &_eacaba
			continue
		}
		if _cbgcf.Name.Local == "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r" {
			_cefga, _bdafd := _cbgcf.Value, error(nil)
			if _bdafd != nil {
				return _bdafd
			}
			_ebcbe.StatusBarAttr = &_cefga
			continue
		}
		if _cbgcf.Name.Local == "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079" {
			_ccgdd, _aegbg := _eb.ParseUint(_cbgcf.Value, 10, 8)
			if _aegbg != nil {
				return _aegbg
			}
			_badee := uint8(_ccgdd)
			_ebcbe.ShortcutKeyAttr = &_badee
			continue
		}
		if _cbgcf.Name.Local == "\u006f\u006c\u0064S\u0074\u0061\u0074\u0075\u0073\u0042\u0061\u0072" {
			_dgbgg, _egcfgd := _cbgcf.Value, error(nil)
			if _egcfgd != nil {
				return _egcfgd
			}
			_ebcbe.OldStatusBarAttr = &_dgbgg
			continue
		}
		if _cbgcf.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_ecddf, _dbbcd := _eb.ParseBool(_cbgcf.Value)
			if _dbbcd != nil {
				return _dbbcd
			}
			_ebcbe.HiddenAttr = &_ecddf
			continue
		}
		if _cbgcf.Name.Local == "\u006f\u006c\u0064\u0043\u006f\u006d\u006d\u0065\u006e\u0074" {
			_ffdfc, _abfea := _cbgcf.Value, error(nil)
			if _abfea != nil {
				return _abfea
			}
			_ebcbe.OldCommentAttr = &_ffdfc
			continue
		}
		if _cbgcf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dcgae, _baecf := _cbgcf.Value, error(nil)
			if _baecf != nil {
				return _baecf
			}
			_ebcbe.NameAttr = _dcgae
			continue
		}
		if _cbgcf.Name.Local == "\u0072\u0061" {
			_bbeccf, _aggcbf := _eb.ParseBool(_cbgcf.Value)
			if _aggcbf != nil {
				return _aggcbf
			}
			_ebcbe.RaAttr = &_bbeccf
			continue
		}
		if _cbgcf.Name.Local == "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_beeggc, _fddgc := _eb.ParseUint(_cbgcf.Value, 10, 32)
			if _fddgc != nil {
				return _fddgc
			}
			_ddbcg := uint32(_beeggc)
			_ebcbe.LocalSheetIdAttr = &_ddbcg
			continue
		}
		if _cbgcf.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_eafed, _dbefgb := _cbgcf.Value, error(nil)
			if _dbefgb != nil {
				return _dbefgb
			}
			_ebcbe.CommentAttr = &_eafed
			continue
		}
		if _cbgcf.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075" {
			_cbgee, _abedfg := _cbgcf.Value, error(nil)
			if _abedfg != nil {
				return _abedfg
			}
			_ebcbe.CustomMenuAttr = &_cbgee
			continue
		}
		if _cbgcf.Name.Local == "o\u006c\u0064\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_cedaa, _eagbab := _eb.ParseBool(_cbgcf.Value)
			if _eagbab != nil {
				return _eagbab
			}
			_ebcbe.OldFunctionAttr = &_cedaa
			continue
		}
		if _cbgcf.Name.Local == "\u0075\u0061" {
			_agbff, _dgfec := _eb.ParseBool(_cbgcf.Value)
			if _dgfec != nil {
				return _dgfec
			}
			_ebcbe.UaAttr = &_agbff
			continue
		}
		if _cbgcf.Name.Local == "\u006f\u006c\u0064\u0053\u0068\u006f\u0072\u0074\u0063u\u0074\u004b\u0065\u0079" {
			_bcfgb, _addbf := _eb.ParseUint(_cbgcf.Value, 10, 8)
			if _addbf != nil {
				return _addbf
			}
			_fggcgg := uint8(_bcfgb)
			_ebcbe.OldShortcutKeyAttr = &_fggcgg
			continue
		}
		if _cbgcf.Name.Local == "\u006fl\u0064\u0048\u0069\u0064\u0064\u0065n" {
			_ecaeb, _fcaccc := _eb.ParseBool(_cbgcf.Value)
			if _fcaccc != nil {
				return _fcaccc
			}
			_ebcbe.OldHiddenAttr = &_ecaeb
			continue
		}
		if _cbgcf.Name.Local == "\u006f\u006c\u0064\u0043\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075" {
			_gbgg, _dabab := _cbgcf.Value, error(nil)
			if _dabab != nil {
				return _dabab
			}
			_ebcbe.OldCustomMenuAttr = &_gbgg
			continue
		}
		if _cbgcf.Name.Local == "\u006fl\u0064F\u0075\u006e\u0063\u0074\u0069o\u006e\u0047r\u006f\u0075\u0070\u0049\u0064" {
			_ceeacg, _cdddge := _eb.ParseUint(_cbgcf.Value, 10, 8)
			if _cdddge != nil {
				return _cdddge
			}
			_ddaecd := uint8(_ceeacg)
			_ebcbe.OldFunctionGroupIdAttr = &_ddaecd
			continue
		}
		if _cbgcf.Name.Local == "\u0072\u0049\u0064" {
			_dgebf, _fbaef := _eb.ParseUint(_cbgcf.Value, 10, 32)
			if _fbaef != nil {
				return _fbaef
			}
			_feaea := uint32(_dgebf)
			_ebcbe.RIdAttr = &_feaea
			continue
		}
	}
_acabb:
	for {
		_efccea, _fefga := d.Token()
		if _fefga != nil {
			return _fefga
		}
		switch _cdgad := _efccea.(type) {
		case _b.StartElement:
			switch _cdgad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}:
				_ebcbe.Formula = new(string)
				if _cdddd := d.DecodeElement(_ebcbe.Formula, &_cdgad); _cdddd != nil {
					return _cdddd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}:
				_ebcbe.OldFormula = new(string)
				if _bcead := d.DecodeElement(_ebcbe.OldFormula, &_cdgad); _bcead != nil {
					return _bcead
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebcbe.ExtLst = NewCT_ExtensionList()
				if _ebaad := d.DecodeElement(_ebcbe.ExtLst, &_cdgad); _ebaad != nil {
					return _ebaad
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0020\u0025\u0076", _cdgad.Name)
				if _cdaaeb := d.Skip(); _cdaaeb != nil {
					return _cdaaeb
				}
			}
		case _b.EndElement:
			break _acabb
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_SheetViews() *CT_SheetViews { _ccddf := &CT_SheetViews{}; return _ccddf }

func (_ddfcge *CT_Sheets) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ccedf:
	for {
		_ebeec, _eecgc := d.Token()
		if _eecgc != nil {
			return _eecgc
		}
		switch _faddgb := _ebeec.(type) {
		case _b.StartElement:
			switch _faddgb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074"}:
				_geaec := NewCT_Sheet()
				if _facbe := d.DecodeElement(_geaec, &_faddgb); _facbe != nil {
					return _facbe
				}
				_ddfcge.Sheet = append(_ddfcge.Sheet, _geaec)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0068\u0065e\u0074\u0073 \u0025\u0076", _faddgb.Name)
				if _fdebf := d.Skip(); _fdebf != nil {
					return _fdebf
				}
			}
		case _b.EndElement:
			break _ccedf
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the Connections and its children
func (_fdcbc *Connections) Validate() error {
	return _fdcbc.ValidateWithPath("C\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073")
}

func (_aeecc *CT_MRUColors) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_bgab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	for _, _deafbd := range _aeecc.Color {
		e.EncodeElement(_deafbd, _bgab)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_CacheHierarchy() *CT_CacheHierarchy { _ggfb := &CT_CacheHierarchy{}; return _ggfb }

func NewCT_BooleanProperty() *CT_BooleanProperty { _cdcb := &CT_BooleanProperty{}; return _cdcb }

func (_bfeg *CT_Cols) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fedd:
	for {
		_gead, _bfgg := d.Token()
		if _bfgg != nil {
			return _bfgg
		}
		switch _fegca := _gead.(type) {
		case _b.StartElement:
			switch _fegca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c"}:
				_gddg := NewCT_Col()
				if _dagfd := d.DecodeElement(_gddg, &_fegca); _dagfd != nil {
					return _dagfd
				}
				_bfeg.Col = append(_bfeg.Col, _gddg)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u006f\u006c\u0073\u0020\u0025\u0076", _fegca.Name)
				if _eccge := d.Skip(); _eccge != nil {
					return _eccge
				}
			}
		case _b.EndElement:
			break _fedd
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_SingleXmlCells() *CT_SingleXmlCells { _gfeca := &CT_SingleXmlCells{}; return _gfeca }

func (_fbag *CT_CellFormula) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfcc := range start.Attr {
		if _cfcc.Name.Local == "\u0074" {
			_fbag.TAttr.UnmarshalXMLAttr(_cfcc)
			continue
		}
		if _cfcc.Name.Local == "\u0061\u0063\u0061" {
			_gdbd, _aaffe := _eb.ParseBool(_cfcc.Value)
			if _aaffe != nil {
				return _aaffe
			}
			_fbag.AcaAttr = &_gdbd
			continue
		}
		if _cfcc.Name.Local == "\u0072\u0065\u0066" {
			_egge, _aefd := _cfcc.Value, error(nil)
			if _aefd != nil {
				return _aefd
			}
			_fbag.RefAttr = &_egge
			continue
		}
		if _cfcc.Name.Local == "\u0064\u0074\u0032\u0044" {
			_deaf, _fbed := _eb.ParseBool(_cfcc.Value)
			if _fbed != nil {
				return _fbed
			}
			_fbag.Dt2DAttr = &_deaf
			continue
		}
		if _cfcc.Name.Local == "\u0064\u0074\u0072" {
			_eccfd, _eegc := _eb.ParseBool(_cfcc.Value)
			if _eegc != nil {
				return _eegc
			}
			_fbag.DtrAttr = &_eccfd
			continue
		}
		if _cfcc.Name.Local == "\u0064\u0065\u006c\u0031" {
			_cceg, _efgaa := _eb.ParseBool(_cfcc.Value)
			if _efgaa != nil {
				return _efgaa
			}
			_fbag.Del1Attr = &_cceg
			continue
		}
		if _cfcc.Name.Local == "\u0064\u0065\u006c\u0032" {
			_cgab, _bbda := _eb.ParseBool(_cfcc.Value)
			if _bbda != nil {
				return _bbda
			}
			_fbag.Del2Attr = &_cgab
			continue
		}
		if _cfcc.Name.Local == "\u0072\u0031" {
			_fadf, _bbe := _cfcc.Value, error(nil)
			if _bbe != nil {
				return _bbe
			}
			_fbag.R1Attr = &_fadf
			continue
		}
		if _cfcc.Name.Local == "\u0072\u0032" {
			_bea, _bgeee := _cfcc.Value, error(nil)
			if _bgeee != nil {
				return _bgeee
			}
			_fbag.R2Attr = &_bea
			continue
		}
		if _cfcc.Name.Local == "\u0063\u0061" {
			_eac, _bcfc := _eb.ParseBool(_cfcc.Value)
			if _bcfc != nil {
				return _bcfc
			}
			_fbag.CaAttr = &_eac
			continue
		}
		if _cfcc.Name.Local == "\u0073\u0069" {
			_bdfb, _gbgb := _eb.ParseUint(_cfcc.Value, 10, 32)
			if _gbgb != nil {
				return _gbgb
			}
			_fbeb := uint32(_bdfb)
			_fbag.SiAttr = &_fbeb
			continue
		}
		if _cfcc.Name.Local == "\u0062\u0078" {
			_fdfb, _faed := _eb.ParseBool(_cfcc.Value)
			if _faed != nil {
				return _faed
			}
			_fbag.BxAttr = &_fdfb
			continue
		}
	}
	for {
		_gfeag, _cffg := d.Token()
		if _cffg != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u0065\u006c\u006c\u0046\u006f\u0072\u006d\u0075\u006c\u0061:\u0020\u0025\u0073", _cffg)
		}
		if _eef, _gfbbg := _gfeag.(_b.CharData); _gfbbg {
			_fbag.Content = string(_eef)
		}
		if _fafa, _gadf := _gfeag.(_b.EndElement); _gadf && _fafa.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_Item() *CT_Item { _gagbf := &CT_Item{}; return _gagbf }

// ValidateWithPath validates the Chartsheet and its children, prefixing error messages with path
func (_aeegfc *Chartsheet) ValidateWithPath(path string) error {
	if _cabgd := _aeegfc.CT_Chartsheet.ValidateWithPath(path); _cabgd != nil {
		return _cabgd
	}
	return nil
}

func (_deeee ST_rwColActionType) Validate() error { return _deeee.ValidateWithPath("") }

func (_bdcbc *CT_TableMissing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_adbfd, _bbeagf := d.Token()
		if _bbeagf != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u004di\u0073\u0073\u0069n\u0067:\u0020\u0025\u0073", _bbeagf)
		}
		if _fbfgf, _gcbfb := _adbfd.(_b.EndElement); _gcbfb && _fbfgf.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_Tuple() *CT_Tuple { _dfgcc := &CT_Tuple{}; return _dfgcc }

type CT_HierarchyUsage struct {

	// Hierarchy Usage
	HierarchyUsageAttr int32
}

// Validate validates the CT_Dialogsheet and its children
func (_bgeg *CT_Dialogsheet) Validate() error {
	return _bgeg.ValidateWithPath("\u0043\u0054\u005f\u0044\u0069\u0061\u006c\u006f\u0067s\u0068\u0065\u0065\u0074")
}

func NewCT_VolTopic() *CT_VolTopic { _bdgcd := &CT_VolTopic{}; return _bdgcd }

func (_eddeg *CT_MetadataBlocks) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eddeg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_eddeg.CountAttr)})
	}
	e.EncodeToken(start)
	_eccb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ab\u006b"}}
	for _, _cfdacb := range _eddeg.Bk {
		e.EncodeElement(_cfdacb, _eccb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_WorkbookPr and its children
func (_aggec *CT_WorkbookPr) Validate() error {
	return _aggec.ValidateWithPath("\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072")
}

type CT_SortCondition struct {

	// Descending
	DescendingAttr *bool

	// Sort By
	SortByAttr ST_SortBy

	// Reference
	RefAttr string

	// Custom List
	CustomListAttr *string

	// Format Id
	DxfIdAttr *uint32

	// Icon Set
	IconSetAttr ST_IconSetType

	// Icon Id
	IconIdAttr *uint32
}

type CT_ExternalDefinedNames struct {

	// Defined Name
	DefinedName []*CT_ExternalDefinedName
}

type CT_Color struct {

	// Automatic
	AutoAttr *bool

	// Index
	IndexedAttr *uint32

	// Alpha Red Green Blue Color Value
	RgbAttr *string

	// Theme Color
	ThemeAttr *uint32

	// Tint
	TintAttr *float64
}

func (_gfaeaf *CT_TextFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfaeaf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_gfaeaf.CountAttr)})
	}
	e.EncodeToken(start)
	_gedaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003at\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064"}}
	for _, _eccdb := range _gfaeaf.TextField {
		e.EncodeElement(_eccdb, _gedaf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_ebfga ST_PatternType) Validate() error { return _ebfga.ValidateWithPath("") }

func (_efbafg ST_Orientation) ValidateWithPath(path string) error {
	switch _efbafg {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efbafg))
	}
	return nil
}

// ValidateWithPath validates the CT_Sst and its children, prefixing error messages with path
func (_aaecbd *CT_Sst) ValidateWithPath(path string) error {
	for _bgedc, _gcabff := range _aaecbd.Si {
		if _bfafcc := _gcabff.ValidateWithPath(_ec.Sprintf("\u0025s\u002f\u0053\u0069\u005b\u0025\u0064]", path, _bgedc)); _bfafcc != nil {
			return _bfafcc
		}
	}
	if _aaecbd.ExtLst != nil {
		if _dageg := _aaecbd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dageg != nil {
			return _dageg
		}
	}
	return nil
}

// ValidateWithPath validates the PivotTableDefinition and its children, prefixing error messages with path
func (_ggbea *PivotTableDefinition) ValidateWithPath(path string) error {
	if _efdag := _ggbea.CT_pivotTableDefinition.ValidateWithPath(path); _efdag != nil {
		return _efdag
	}
	return nil
}

// ValidateWithPath validates the CT_FieldsUsage and its children, prefixing error messages with path
func (_cgeeb *CT_FieldsUsage) ValidateWithPath(path string) error {
	for _adae, _agba := range _cgeeb.FieldUsage {
		if _fbgba := _agba.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0046\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067e\u005b\u0025\u0064\u005d", path, _adae)); _fbgba != nil {
			return _fbgba
		}
	}
	return nil
}

// ValidateWithPath validates the Sst and its children, prefixing error messages with path
func (_bdced *Sst) ValidateWithPath(path string) error {
	if _cggadd := _bdced.CT_Sst.ValidateWithPath(path); _cggadd != nil {
		return _cggadd
	}
	return nil
}

type ST_Type byte

const (
	ST_CellCommentsUnset       ST_CellComments = 0
	ST_CellCommentsNone        ST_CellComments = 1
	ST_CellCommentsAsDisplayed ST_CellComments = 2
	ST_CellCommentsAtEnd       ST_CellComments = 3
)

func (_bcaeb *CT_DataRef) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbdg := range start.Attr {
		if _bbdg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bbdg.Name.Local == "\u0069\u0064" || _bbdg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bbdg.Name.Local == "\u0069\u0064" {
			_aaeb, _gabg := _bbdg.Value, error(nil)
			if _gabg != nil {
				return _gabg
			}
			_bcaeb.IdAttr = &_aaeb
			continue
		}
		if _bbdg.Name.Local == "\u0072\u0065\u0066" {
			_fbgab, _aced := _bbdg.Value, error(nil)
			if _aced != nil {
				return _aced
			}
			_bcaeb.RefAttr = &_fbgab
			continue
		}
		if _bbdg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fbeec, _egdcf := _bbdg.Value, error(nil)
			if _egdcf != nil {
				return _egdcf
			}
			_bcaeb.NameAttr = &_fbeec
			continue
		}
		if _bbdg.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_aefbf, _egff := _bbdg.Value, error(nil)
			if _egff != nil {
				return _egff
			}
			_bcaeb.SheetAttr = &_aefbf
			continue
		}
	}
	for {
		_fbfad, _aaabd := d.Token()
		if _aaabd != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u003a\u0020%\u0073", _aaabd)
		}
		if _fegae, _bdec := _fbfad.(_b.EndElement); _bdec && _fegae.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_PCDKPI struct {

	// KPI Unique Name
	UniqueNameAttr string

	// KPI Display Name
	CaptionAttr *string

	// KPI Display Folder
	DisplayFolderAttr *string

	// KPI Measure Group Name
	MeasureGroupAttr *string

	// Parent KPI
	ParentAttr *string

	// KPI Value Unique Name
	ValueAttr string

	// KPI Goal Unique Name
	GoalAttr *string

	// KPI Status Unique Name
	StatusAttr *string

	// KPI Trend Unique Name
	TrendAttr *string

	// KPI Weight Unique Name
	WeightAttr *string

	// Time Member KPI Unique Name
	TimeAttr *string
}

func (_afcbed *ST_RefMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dfcacd, _abfba := d.Token()
	if _abfba != nil {
		return _abfba
	}
	if _ffbbdf, _gebfd := _dfcacd.(_b.EndElement); _gebfd && _ffbbdf.Name == start.Name {
		*_afcbed = 1
		return nil
	}
	if _feebda, _bfacee := _dfcacd.(_b.CharData); !_bfacee {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfcacd)
	} else {
		switch string(_feebda) {
		case "":
			*_afcbed = 0
		case "\u0041\u0031":
			*_afcbed = 1
		case "\u0052\u0031\u0043\u0031":
			*_afcbed = 2
		}
	}
	_dfcacd, _abfba = d.Token()
	if _abfba != nil {
		return _abfba
	}
	if _cdbaca, _bbecdb := _dfcacd.(_b.EndElement); _bbecdb && _cdbaca.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfcacd)
}

// ValidateWithPath validates the CT_FutureMetadataBlock and its children, prefixing error messages with path
func (_dccdfe *CT_FutureMetadataBlock) ValidateWithPath(path string) error {
	if _dccdfe.ExtLst != nil {
		if _ebecc := _dccdfe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ebecc != nil {
			return _ebecc
		}
	}
	return nil
}

func (_bafca *CT_DdeValues) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dfbaf := range start.Attr {
		if _dfbaf.Name.Local == "\u0072\u006f\u0077\u0073" {
			_fdde, _gffbb := _eb.ParseUint(_dfbaf.Value, 10, 32)
			if _gffbb != nil {
				return _gffbb
			}
			_cdaa := uint32(_fdde)
			_bafca.RowsAttr = &_cdaa
			continue
		}
		if _dfbaf.Name.Local == "\u0063\u006f\u006c\u0073" {
			_edec, _eagaa := _eb.ParseUint(_dfbaf.Value, 10, 32)
			if _eagaa != nil {
				return _eagaa
			}
			_bafce := uint32(_edec)
			_bafca.ColsAttr = &_bafce
			continue
		}
	}
_ccag:
	for {
		_agfb, _afbf := d.Token()
		if _afbf != nil {
			return _afbf
		}
		switch _agcd := _agfb.(type) {
		case _b.StartElement:
			switch _agcd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006cu\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006cu\u0065"}:
				_dgaf := NewCT_DdeValue()
				if _gbffg := d.DecodeElement(_dgaf, &_agcd); _gbffg != nil {
					return _gbffg
				}
				_bafca.Value = append(_bafca.Value, _dgaf)
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_D\u0064\u0065V\u0061\u006c\u0075\u0065\u0073\u0020\u0025\u0076", _agcd.Name)
				if _cegd := d.Skip(); _cegd != nil {
					return _cegd
				}
			}
		case _b.EndElement:
			break _ccag
		case _b.CharData:
		}
	}
	return nil
}

type ST_DataValidationType byte

func (_bbced *ST_SortBy) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bbced = 0
	case "\u0076\u0061\u006cu\u0065":
		*_bbced = 1
	case "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr":
		*_bbced = 2
	case "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr":
		*_bbced = 3
	case "\u0069\u0063\u006f\u006e":
		*_bbced = 4
	}
	return nil
}

// ValidateWithPath validates the CT_DdeValue and its children, prefixing error messages with path
func (_gfebbc *CT_DdeValue) ValidateWithPath(path string) error {
	if _bbfa := _gfebbc.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _bbfa != nil {
		return _bbfa
	}
	return nil
}

// ValidateWithPath validates the CT_DataValidations and its children, prefixing error messages with path
func (_abeed *CT_DataValidations) ValidateWithPath(path string) error {
	for _bgcbd, _fdfee := range _abeed.DataValidation {
		if _faadf := _fdfee.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0044\u0061ta\u0056a\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u005b\u0025\u0064\u005d", path, _bgcbd)); _faadf != nil {
			return _faadf
		}
	}
	return nil
}

type Dialogsheet struct{ CT_Dialogsheet }

// Validate validates the CT_MetadataStringIndex and its children
func (_ffdcf *CT_MetadataStringIndex) Validate() error {
	return _ffdcf.ValidateWithPath("\u0043\u0054\u005f\u004det\u0061\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0049\u006e\u0064e\u0078")
}

func (_dcfeee *ST_UnderlineValues) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dcfeee = 0
	case "\u0073\u0069\u006e\u0067\u006c\u0065":
		*_dcfeee = 1
	case "\u0064\u006f\u0075\u0062\u006c\u0065":
		*_dcfeee = 2
	case "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
		*_dcfeee = 3
	case "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
		*_dcfeee = 4
	case "\u006e\u006f\u006e\u0065":
		*_dcfeee = 5
	}
	return nil
}

// Validate validates the CT_Cell and its children
func (_fgbdb *CT_Cell) Validate() error {
	return _fgbdb.ValidateWithPath("\u0043T\u005f\u0043\u0065\u006c\u006c")
}

func NewCT_CellAlignment() *CT_CellAlignment { _cddgb := &CT_CellAlignment{}; return _cddgb }

// ValidateWithPath validates the CT_X and its children, prefixing error messages with path
func (_adedbf *CT_X) ValidateWithPath(path string) error { return nil }

func (_cadbba ST_TargetScreenSize) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cadbba.String(), start)
}

func (_adbfa *CT_DynamicFilter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_cfgb, _ccddc := _adbfa.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _ccddc != nil {
		return _ccddc
	}
	start.Attr = append(start.Attr, _cfgb)
	if _adbfa.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_adbfa.ValAttr)})
	}
	if _adbfa.ValIsoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c\u0049\u0073\u006f"}, Value: _ec.Sprintf("\u0025\u0076", *_adbfa.ValIsoAttr)})
	}
	if _adbfa.MaxValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078\u0056\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_adbfa.MaxValAttr)})
	}
	if _adbfa.MaxValIsoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006da\u0078\u0056\u0061\u006c\u0049\u0073o"}, Value: _ec.Sprintf("\u0025\u0076", *_adbfa.MaxValIsoAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_DrawingHF struct {
	IdAttr string

	// Left Header for Odd Pages
	LhoAttr *uint32

	// Left Header for Even Pages
	LheAttr *uint32

	// Left Header for First Page
	LhfAttr *uint32

	// Center Header for Odd Pages
	ChoAttr *uint32

	// Center Header for Even Pages
	CheAttr *uint32

	// Center Header for First Page
	ChfAttr *uint32

	// Right Header for Odd Pages
	RhoAttr *uint32

	// Right Header for Even Pages
	RheAttr *uint32

	// Right Header for First Page
	RhfAttr *uint32

	// Left Footer for Odd Pages
	LfoAttr *uint32

	// Left Footer for Even Pages
	LfeAttr *uint32

	// Left Footer for First Page
	LffAttr *uint32

	// Center Footer for Odd Pages
	CfoAttr *uint32

	// Center Footer for Even Pages
	CfeAttr *uint32

	// Center Footer for First Page
	CffAttr *uint32

	// Right Footer for Odd Pages
	RfoAttr *uint32

	// Right Footer for Even Pages
	RfeAttr *uint32

	// Right Footer for First Page
	RffAttr *uint32
}

// Validate validates the VolTypes and its children
func (_cfgcb *VolTypes) Validate() error {
	return _cfgcb.ValidateWithPath("\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073")
}

func (_cfecgf ST_ExternalConnectionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cfecgf.String(), start)
}

// Validate validates the CT_ExternalLink and its children
func (_bcfgc *CT_ExternalLink) Validate() error {
	return _bcfgc.ValidateWithPath("\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b")
}

func NewCT_GroupItems() *CT_GroupItems { _deedb := &CT_GroupItems{}; return _deedb }

// ValidateWithPath validates the CT_PCDKPIs and its children, prefixing error messages with path
func (_ggedg *CT_PCDKPIs) ValidateWithPath(path string) error {
	for _efcda, _bfbagf := range _ggedg.Kpi {
		if _ecaec := _bfbagf.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004b\u0070\u0069\u005b\u0025\u0064\u005d", path, _efcda)); _ecaec != nil {
			return _ecaec
		}
	}
	return nil
}

type CT_String struct {

	// Value
	VAttr string

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Item Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// Background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// Tuples
	Tpls []*CT_Tuples

	// Member Property Index
	X []*CT_X
}

func (_decee *CT_SheetBackgroundPicture) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbdac := range start.Attr {
		if _fbdac.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fbdac.Name.Local == "\u0069\u0064" || _fbdac.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fbdac.Name.Local == "\u0069\u0064" {
			_feace, _caacf := _fbdac.Value, error(nil)
			if _caacf != nil {
				return _caacf
			}
			_decee.IdAttr = _feace
			continue
		}
	}
	for {
		_eeefb, _geecdc := d.Token()
		if _geecdc != nil {
			return _ec.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067 \u0043\u0054_\u0053\u0068\u0065\u0065\u0074\u0042\u0061\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0050\u0069\u0063\u0074\u0075\u0072e\u003a\u0020\u0025\u0073", _geecdc)
		}
		if _cfbfa, _gbdfd := _eeefb.(_b.EndElement); _gbdfd && _cfbfa.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_TableStyle() *CT_TableStyle { _acbef := &CT_TableStyle{}; return _acbef }

func (_cgagf *CT_CacheFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abbf := range start.Attr {
		if _abbf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_acfg, _eaf := _eb.ParseUint(_abbf.Value, 10, 32)
			if _eaf != nil {
				return _eaf
			}
			_caac := uint32(_acfg)
			_cgagf.CountAttr = &_caac
			continue
		}
	}
_egag:
	for {
		_daac, _abeg := d.Token()
		if _abeg != nil {
			return _abeg
		}
		switch _aca := _daac.(type) {
		case _b.StartElement:
			switch _aca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064"}:
				_edcb := NewCT_CacheField()
				if _dfb := d.DecodeElement(_edcb, &_aca); _dfb != nil {
					return _dfb
				}
				_cgagf.CacheField = append(_cgagf.CacheField, _edcb)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046\u0069e\u006cd\u0073\u0020\u0025\u0076", _aca.Name)
				if _eedg := d.Skip(); _eedg != nil {
					return _eedg
				}
			}
		case _b.EndElement:
			break _egag
		case _b.CharData:
		}
	}
	return nil
}

func (_fabfa *CT_RevisionConflict) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fabfa.SheetIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_fabfa.SheetIdAttr)})
	}
	if _fabfa.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_fabfa.RIdAttr)})
	}
	if _fabfa.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fabfa.UaAttr))})
	}
	if _fabfa.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fabfa.RaAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gbbgc *CT_PivotCaches) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cddbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065"}}
	for _, _gdbea := range _gbbgc.PivotCache {
		e.EncodeElement(_gdbea, _cddbc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_faada *ST_PivotAreaType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abcgg, _eefde := d.Token()
	if _eefde != nil {
		return _eefde
	}
	if _gafad, _cddgd := _abcgg.(_b.EndElement); _cddgd && _gafad.Name == start.Name {
		*_faada = 1
		return nil
	}
	if _dgage, _bdceaea := _abcgg.(_b.CharData); !_bdceaea {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _abcgg)
	} else {
		switch string(_dgage) {
		case "":
			*_faada = 0
		case "\u006e\u006f\u006e\u0065":
			*_faada = 1
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_faada = 2
		case "\u0064\u0061\u0074\u0061":
			*_faada = 3
		case "\u0061\u006c\u006c":
			*_faada = 4
		case "\u006f\u0072\u0069\u0067\u0069\u006e":
			*_faada = 5
		case "\u0062\u0075\u0074\u0074\u006f\u006e":
			*_faada = 6
		case "\u0074\u006f\u0070\u0045\u006e\u0064":
			*_faada = 7
		case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
			*_faada = 8
		}
	}
	_abcgg, _eefde = d.Token()
	if _eefde != nil {
		return _eefde
	}
	if _baeag, _ddcfc := _abcgg.(_b.EndElement); _ddcfc && _baeag.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _abcgg)
}

// Validate validates the Headers and its children
func (_gedcf *Headers) Validate() error {
	return _gedcf.ValidateWithPath("\u0048e\u0061\u0064\u0065\u0072\u0073")
}

func (_fegee ST_VerticalAlignment) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gcabeb := _b.Attr{}
	_gcabeb.Name = name
	switch _fegee {
	case ST_VerticalAlignmentUnset:
		_gcabeb.Value = ""
	case ST_VerticalAlignmentTop:
		_gcabeb.Value = "\u0074\u006f\u0070"
	case ST_VerticalAlignmentCenter:
		_gcabeb.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_VerticalAlignmentBottom:
		_gcabeb.Value = "\u0062\u006f\u0074\u0074\u006f\u006d"
	case ST_VerticalAlignmentJustify:
		_gcabeb.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_VerticalAlignmentDistributed:
		_gcabeb.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _gcabeb, nil
}

// Validate validates the CT_FunctionGroup and its children
func (_fcaag *CT_FunctionGroup) Validate() error {
	return _fcaag.ValidateWithPath("\u0043\u0054_\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070")
}

func NewWorkbook() *Workbook {
	_feced := &Workbook{}
	_feced.CT_Workbook = *NewCT_Workbook()
	return _feced
}

func (_ceacd *ST_TextVAlign) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ceacd = 0
	case "\u0074\u006f\u0070":
		*_ceacd = 1
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_ceacd = 2
	case "\u0062\u006f\u0074\u0074\u006f\u006d":
		*_ceacd = 3
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_ceacd = 4
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_ceacd = 5
	}
	return nil
}

func NewCT_TextField() *CT_TextField { _efadb := &CT_TextField{}; return _efadb }

// ValidateWithPath validates the CT_PCDKPI and its children, prefixing error messages with path
func (_cgacba *CT_PCDKPI) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Hyperlink and its children
func (_edadg *CT_Hyperlink) Validate() error {
	return _edadg.ValidateWithPath("\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b")
}

type PivotTableDefinition struct{ CT_pivotTableDefinition }

func (_dgeffa *Metadata) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dgeffa.CT_Metadata = *NewCT_Metadata()
_gfebc:
	for {
		_ededgf, _eeebg := d.Token()
		if _eeebg != nil {
			return _eeebg
		}
		switch _ebfbb := _ededgf.(type) {
		case _b.StartElement:
			switch _ebfbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}:
				_dgeffa.MetadataTypes = NewCT_MetadataTypes()
				if _cbcfd := d.DecodeElement(_dgeffa.MetadataTypes, &_ebfbb); _cbcfd != nil {
					return _cbcfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}:
				_dgeffa.MetadataStrings = NewCT_MetadataStrings()
				if _ccffg := d.DecodeElement(_dgeffa.MetadataStrings, &_ebfbb); _ccffg != nil {
					return _ccffg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_dgeffa.MdxMetadata = NewCT_MdxMetadata()
				if _edfag := d.DecodeElement(_dgeffa.MdxMetadata, &_ebfbb); _edfag != nil {
					return _edfag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}:
				_ecaab := NewCT_FutureMetadata()
				if _cccdg := d.DecodeElement(_ecaab, &_ebfbb); _cccdg != nil {
					return _cccdg
				}
				_dgeffa.FutureMetadata = append(_dgeffa.FutureMetadata, _ecaab)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_dgeffa.CellMetadata = NewCT_MetadataBlocks()
				if _gdceb := d.DecodeElement(_dgeffa.CellMetadata, &_ebfbb); _gdceb != nil {
					return _gdceb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_dgeffa.ValueMetadata = NewCT_MetadataBlocks()
				if _bbcacd := d.DecodeElement(_dgeffa.ValueMetadata, &_ebfbb); _bbcacd != nil {
					return _bbcacd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dgeffa.ExtLst = NewCT_ExtensionList()
				if _dagee := d.DecodeElement(_dgeffa.ExtLst, &_ebfbb); _dagee != nil {
					return _dagee
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0020\u0025\u0076", _ebfbb.Name)
				if _bceda := d.Skip(); _bceda != nil {
					return _bceda
				}
			}
		case _b.EndElement:
			break _gfebc
		case _b.CharData:
		}
	}
	return nil
}

func (_bffee *CT_FontScheme) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bffee.ValAttr = ST_FontScheme(1)
	for _, _gfeff := range start.Attr {
		if _gfeff.Name.Local == "\u0076\u0061\u006c" {
			_bffee.ValAttr.UnmarshalXMLAttr(_gfeff)
			continue
		}
	}
	for {
		_ffcfd, _fbgfa := d.Token()
		if _fbgfa != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0046o\u006et\u0053c\u0068\u0065\u006d\u0065\u003a\u0020\u0025s", _fbgfa)
		}
		if _aaeged, _fbgdg := _ffcfd.(_b.EndElement); _fbgdg && _aaeged.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_PCDKPIs() *CT_PCDKPIs { _gdbdcb := &CT_PCDKPIs{}; return _gdbdcb }

func (_effefc ST_CellComments) Validate() error { return _effefc.ValidateWithPath("") }

func (_eefcd *CT_RevisionInsertSheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbdfd := range start.Attr {
		if _fbdfd.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_fcefc, _beecf := _eb.ParseUint(_fbdfd.Value, 10, 32)
			if _beecf != nil {
				return _beecf
			}
			_eefcd.SheetIdAttr = uint32(_fcefc)
			continue
		}
		if _fbdfd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bcgfa, _bbfbc := _fbdfd.Value, error(nil)
			if _bbfbc != nil {
				return _bbfbc
			}
			_eefcd.NameAttr = _bcgfa
			continue
		}
		if _fbdfd.Name.Local == "\u0073\u0068\u0065\u0065\u0074\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_cegc, _edgefd := _eb.ParseUint(_fbdfd.Value, 10, 32)
			if _edgefd != nil {
				return _edgefd
			}
			_eefcd.SheetPositionAttr = uint32(_cegc)
			continue
		}
		if _fbdfd.Name.Local == "\u0072\u0049\u0064" {
			_cdbba, _eeagc := _eb.ParseUint(_fbdfd.Value, 10, 32)
			if _eeagc != nil {
				return _eeagc
			}
			_gcdfd := uint32(_cdbba)
			_eefcd.RIdAttr = &_gcdfd
			continue
		}
		if _fbdfd.Name.Local == "\u0075\u0061" {
			_defbe, _cfgea := _eb.ParseBool(_fbdfd.Value)
			if _cfgea != nil {
				return _cfgea
			}
			_eefcd.UaAttr = &_defbe
			continue
		}
		if _fbdfd.Name.Local == "\u0072\u0061" {
			_aebgfa, _gaaed := _eb.ParseBool(_fbdfd.Value)
			if _gaaed != nil {
				return _gaaed
			}
			_eefcd.RaAttr = &_aebgfa
			continue
		}
	}
	for {
		_ddfac, _egcggb := d.Token()
		if _egcggb != nil {
			return _ec.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0065\u0076i\u0073i\u006fn\u0049n\u0073\u0065\u0072\u0074\u0053\u0068\u0065\u0065\u0074\u003a\u0020\u0025\u0073", _egcggb)
		}
		if _bdgfb, _ceecdc := _ddfac.(_b.EndElement); _ceecdc && _bdgfb.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_Break() *CT_Break { _ded := &CT_Break{}; return _ded }

func NewCT_FieldsUsage() *CT_FieldsUsage { _eafge := &CT_FieldsUsage{}; return _eafge }

// ValidateWithPath validates the PivotCacheDefinition and its children, prefixing error messages with path
func (_baecgg *PivotCacheDefinition) ValidateWithPath(path string) error {
	if _dabed := _baecgg.CT_PivotCacheDefinition.ValidateWithPath(path); _dabed != nil {
		return _dabed
	}
	return nil
}

type ST_CredMethod byte

type ST_ShowDataAs byte

// Validate validates the PivotCacheRecords and its children
func (_ecgca *PivotCacheRecords) Validate() error {
	return _ecgca.ValidateWithPath("\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065c\u006f\u0072\u0064\u0073")
}

func (_faf *CT_Authors) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _faf.Author != nil {
		_bgd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0061\u0075\u0074\u0068\u006fr"}}
		for _, _de := range _faf.Author {
			e.EncodeElement(_de, _bgd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CellStyleXfs and its children, prefixing error messages with path
func (_ccee *CT_CellStyleXfs) ValidateWithPath(path string) error {
	for _ddcb, _eacfb := range _ccee.Xf {
		if _eebe := _eacfb.ValidateWithPath(_ec.Sprintf("\u0025s\u002f\u0058\u0066\u005b\u0025\u0064]", path, _ddcb)); _eebe != nil {
			return _eebe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_WebPublishObject and its children, prefixing error messages with path
func (_dbcdf *CT_WebPublishObject) ValidateWithPath(path string) error { return nil }

func (_acdcg *CT_DdeItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _acdcg.DdeItem != nil {
		_gegg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0064\u0065\u0049\u0074\u0065\u006d"}}
		for _, _bebc := range _acdcg.DdeItem {
			e.EncodeElement(_bebc, _gegg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bbdaga ST_UnderlineValues) Validate() error { return _bbdaga.ValidateWithPath("") }

const (
	ST_GroupByUnset    ST_GroupBy = 0
	ST_GroupByRange    ST_GroupBy = 1
	ST_GroupBySeconds  ST_GroupBy = 2
	ST_GroupByMinutes  ST_GroupBy = 3
	ST_GroupByHours    ST_GroupBy = 4
	ST_GroupByDays     ST_GroupBy = 5
	ST_GroupByMonths   ST_GroupBy = 6
	ST_GroupByQuarters ST_GroupBy = 7
	ST_GroupByYears    ST_GroupBy = 8
)

func (_aegeff *CT_MemberProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aegeff.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_aegeff.NameAttr)})
	}
	if _aegeff.ShowCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u0065\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aegeff.ShowCellAttr))})
	}
	if _aegeff.ShowTipAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0054\u0069\u0070"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aegeff.ShowTipAttr))})
	}
	if _aegeff.ShowAsCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aegeff.ShowAsCaptionAttr))})
	}
	if _aegeff.NameLenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ea\u006d\u0065\u004c\u0065\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_aegeff.NameLenAttr)})
	}
	if _aegeff.PPosAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0050\u006f\u0073"}, Value: _ec.Sprintf("\u0025\u0076", *_aegeff.PPosAttr)})
	}
	if _aegeff.PLenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u004c\u0065\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_aegeff.PLenAttr)})
	}
	if _aegeff.LevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u0076e\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_aegeff.LevelAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _aegeff.FieldAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_abgag *CT_ExternalRow) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fffg := range start.Attr {
		if _fffg.Name.Local == "\u0072" {
			_gdad, _faebef := _eb.ParseUint(_fffg.Value, 10, 32)
			if _faebef != nil {
				return _faebef
			}
			_abgag.RAttr = uint32(_gdad)
			continue
		}
	}
_geaa:
	for {
		_bcggc, _gaffc := d.Token()
		if _gaffc != nil {
			return _gaffc
		}
		switch _abfa := _bcggc.(type) {
		case _b.StartElement:
			switch _abfa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c"}:
				_dcfdb := NewCT_ExternalCell()
				if _dfaba := d.DecodeElement(_dcfdb, &_abfa); _dfaba != nil {
					return _dfaba
				}
				_abgag.Cell = append(_abgag.Cell, _dcfdb)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061l\u0052o\u0077\u0020\u0025\u0076", _abfa.Name)
				if _beegg := d.Skip(); _beegg != nil {
					return _beegg
				}
			}
		case _b.EndElement:
			break _geaa
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_WorkbookPr and its children, prefixing error messages with path
func (_ggacde *CT_WorkbookPr) ValidateWithPath(path string) error {
	if _debgg := _ggacde.ShowObjectsAttr.ValidateWithPath(path + "\u002f\u0053h\u006f\u0077\u004fb\u006a\u0065\u0063\u0074\u0073\u0041\u0074\u0074\u0072"); _debgg != nil {
		return _debgg
	}
	if _ggdcge := _ggacde.UpdateLinksAttr.ValidateWithPath(path + "\u002f\u0055p\u0064\u0061\u0074e\u004c\u0069\u006e\u006b\u0073\u0041\u0074\u0074\u0072"); _ggdcge != nil {
		return _ggdcge
	}
	return nil
}

func (_egeca *CT_Pane) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aeeca := range start.Attr {
		if _aeeca.Name.Local == "\u0078\u0053\u0070\u006c\u0069\u0074" {
			_gedbg, _fbfec := _eb.ParseFloat(_aeeca.Value, 64)
			if _fbfec != nil {
				return _fbfec
			}
			_egeca.XSplitAttr = &_gedbg
			continue
		}
		if _aeeca.Name.Local == "\u0079\u0053\u0070\u006c\u0069\u0074" {
			_aaada, _cdcba := _eb.ParseFloat(_aeeca.Value, 64)
			if _cdcba != nil {
				return _cdcba
			}
			_egeca.YSplitAttr = &_aaada
			continue
		}
		if _aeeca.Name.Local == "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c" {
			_bddfbf, _eaeag := _aeeca.Value, error(nil)
			if _eaeag != nil {
				return _eaeag
			}
			_egeca.TopLeftCellAttr = &_bddfbf
			continue
		}
		if _aeeca.Name.Local == "\u0061\u0063\u0074\u0069\u0076\u0065\u0050\u0061\u006e\u0065" {
			_egeca.ActivePaneAttr.UnmarshalXMLAttr(_aeeca)
			continue
		}
		if _aeeca.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_egeca.StateAttr.UnmarshalXMLAttr(_aeeca)
			continue
		}
	}
	for {
		_baceg, _gafgb := d.Token()
		if _gafgb != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0050\u0061\u006e\u0065\u003a\u0020\u0025\u0073", _gafgb)
		}
		if _fccaa, _ffdgd := _baceg.(_b.EndElement); _ffdgd && _fccaa.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_PivotAreaReference() *CT_PivotAreaReference {
	_gafae := &CT_PivotAreaReference{}
	return _gafae
}

// ValidateWithPath validates the CT_PageSetup and its children, prefixing error messages with path
func (_fgfd *CT_PageSetup) ValidateWithPath(path string) error {
	if _fgfd.PaperHeightAttr != nil {
		if !_bb.ST_PositiveUniversalMeasurePatternRe.MatchString(*_fgfd.PaperHeightAttr) {
			return _ec.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _bb.ST_PositiveUniversalMeasurePatternRe, *_fgfd.PaperHeightAttr)
		}
	}
	if _fgfd.PaperHeightAttr != nil {
		if !_bb.ST_UniversalMeasurePatternRe.MatchString(*_fgfd.PaperHeightAttr) {
			return _ec.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _bb.ST_UniversalMeasurePatternRe, *_fgfd.PaperHeightAttr)
		}
	}
	if _fgfd.PaperWidthAttr != nil {
		if !_bb.ST_PositiveUniversalMeasurePatternRe.MatchString(*_fgfd.PaperWidthAttr) {
			return _ec.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _bb.ST_PositiveUniversalMeasurePatternRe, *_fgfd.PaperWidthAttr)
		}
	}
	if _fgfd.PaperWidthAttr != nil {
		if !_bb.ST_UniversalMeasurePatternRe.MatchString(*_fgfd.PaperWidthAttr) {
			return _ec.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _bb.ST_UniversalMeasurePatternRe, *_fgfd.PaperWidthAttr)
		}
	}
	if _fabab := _fgfd.PageOrderAttr.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u004f\u0072\u0064\u0065r\u0041\u0074\u0074\u0072"); _fabab != nil {
		return _fabab
	}
	if _eagfb := _fgfd.OrientationAttr.ValidateWithPath(path + "\u002f\u004fr\u0069\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _eagfb != nil {
		return _eagfb
	}
	if _dddd := _fgfd.CellCommentsAttr.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u0043\u006f\u006d\u006d\u0065\u006e\u0074s\u0041\u0074\u0074\u0072"); _dddd != nil {
		return _dddd
	}
	if _gdcae := _fgfd.ErrorsAttr.ValidateWithPath(path + "/\u0045\u0072\u0072\u006f\u0072\u0073\u0041\u0074\u0074\u0072"); _gdcae != nil {
		return _gdcae
	}
	return nil
}

const (
	ST_ObjectsUnset        ST_Objects = 0
	ST_ObjectsAll          ST_Objects = 1
	ST_ObjectsPlaceholders ST_Objects = 2
	ST_ObjectsNone         ST_Objects = 3
)

func NewCT_IgnoredErrors() *CT_IgnoredErrors { _fdfcc := &CT_IgnoredErrors{}; return _fdfcc }

func (_aefead *CT_DbPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfaea := range start.Attr {
		if _cfaea.Name.Local == "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e" {
			_gabcd, _bgec := _cfaea.Value, error(nil)
			if _bgec != nil {
				return _bgec
			}
			_aefead.ConnectionAttr = _gabcd
			continue
		}
		if _cfaea.Name.Local == "\u0063o\u006d\u006d\u0061\u006e\u0064" {
			_bdfcb, _gccff := _cfaea.Value, error(nil)
			if _gccff != nil {
				return _gccff
			}
			_aefead.CommandAttr = &_bdfcb
			continue
		}
		if _cfaea.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u0043\u006f\u006d\u006d\u0061\u006e\u0064" {
			_gdebd, _febd := _cfaea.Value, error(nil)
			if _febd != nil {
				return _febd
			}
			_aefead.ServerCommandAttr = &_gdebd
			continue
		}
		if _cfaea.Name.Local == "c\u006f\u006d\u006d\u0061\u006e\u0064\u0054\u0079\u0070\u0065" {
			_bdeef, _gcac := _eb.ParseUint(_cfaea.Value, 10, 32)
			if _gcac != nil {
				return _gcac
			}
			_bedg := uint32(_bdeef)
			_aefead.CommandTypeAttr = &_bedg
			continue
		}
	}
	for {
		_cegb, _fbcadc := d.Token()
		if _fbcadc != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0062\u0050\u0072\u003a\u0020\u0025\u0073", _fbcadc)
		}
		if _abgeg, _abcdf := _cegb.(_b.EndElement); _abcdf && _abgeg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_bede *CT_CalcPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bda := range start.Attr {
		if _bda.Name.Local == "\u0069\u0074\u0065r\u0061\u0074\u0065\u0044\u0065\u006c\u0074\u0061" {
			_ebac, _edd := _eb.ParseFloat(_bda.Value, 64)
			if _edd != nil {
				return _edd
			}
			_bede.IterateDeltaAttr = &_ebac
			continue
		}
		if _bda.Name.Local == "\u0063\u0061\u006c\u0063\u004d\u006f\u0064\u0065" {
			_bede.CalcModeAttr.UnmarshalXMLAttr(_bda)
			continue
		}
		if _bda.Name.Local == "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064" {
			_efab, _fbe := _eb.ParseBool(_bda.Value)
			if _fbe != nil {
				return _fbe
			}
			_bede.FullCalcOnLoadAttr = &_efab
			continue
		}
		if _bda.Name.Local == "\u0072e\u0066\u004d\u006f\u0064\u0065" {
			_bede.RefModeAttr.UnmarshalXMLAttr(_bda)
			continue
		}
		if _bda.Name.Local == "\u0069t\u0065\u0072\u0061\u0074\u0065" {
			_edef, _gbb := _eb.ParseBool(_bda.Value)
			if _gbb != nil {
				return _gbb
			}
			_bede.IterateAttr = &_edef
			continue
		}
		if _bda.Name.Local == "\u0069\u0074\u0065r\u0061\u0074\u0065\u0043\u006f\u0075\u006e\u0074" {
			_cfce, _bgdc := _eb.ParseUint(_bda.Value, 10, 32)
			if _bgdc != nil {
				return _bgdc
			}
			_aefe := uint32(_cfce)
			_bede.IterateCountAttr = &_aefe
			continue
		}
		if _bda.Name.Local == "\u0063\u0061\u006c\u0063\u0049\u0064" {
			_age, _deec := _eb.ParseUint(_bda.Value, 10, 32)
			if _deec != nil {
				return _deec
			}
			_gge := uint32(_age)
			_bede.CalcIdAttr = &_gge
			continue
		}
		if _bda.Name.Local == "\u0066\u0075\u006c\u006c\u0050\u0072\u0065\u0063\u0069\u0073\u0069\u006f\u006e" {
			_aac, _eagg := _eb.ParseBool(_bda.Value)
			if _eagg != nil {
				return _eagg
			}
			_bede.FullPrecisionAttr = &_aac
			continue
		}
		if _bda.Name.Local == "\u0063\u0061\u006c\u0063\u0043\u006f\u006d\u0070\u006c\u0065\u0074\u0065\u0064" {
			_eabc, _efdf := _eb.ParseBool(_bda.Value)
			if _efdf != nil {
				return _efdf
			}
			_bede.CalcCompletedAttr = &_eabc
			continue
		}
		if _bda.Name.Local == "\u0063\u0061\u006c\u0063\u004f\u006e\u0053\u0061\u0076\u0065" {
			_gbdd, _abed := _eb.ParseBool(_bda.Value)
			if _abed != nil {
				return _abed
			}
			_bede.CalcOnSaveAttr = &_gbdd
			continue
		}
		if _bda.Name.Local == "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006et\u0043\u0061\u006c\u0063" {
			_ggbe, _ddea := _eb.ParseBool(_bda.Value)
			if _ddea != nil {
				return _ddea
			}
			_bede.ConcurrentCalcAttr = &_ggbe
			continue
		}
		if _bda.Name.Local == "c\u006f\u006e\u0063\u0075rr\u0065n\u0074\u004d\u0061\u006e\u0075a\u006c\u0043\u006f\u0075\u006e\u0074" {
			_ggbec, _eee := _eb.ParseUint(_bda.Value, 10, 32)
			if _eee != nil {
				return _eee
			}
			_add := uint32(_ggbec)
			_bede.ConcurrentManualCountAttr = &_add
			continue
		}
		if _bda.Name.Local == "\u0066\u006f\u0072\u0063\u0065\u0046\u0075\u006c\u006c\u0043\u0061\u006c\u0063" {
			_gee, _gfa := _eb.ParseBool(_bda.Value)
			if _gfa != nil {
				return _gfa
			}
			_bede.ForceFullCalcAttr = &_gee
			continue
		}
	}
	for {
		_cgcc, _efad := d.Token()
		if _efad != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0043\u0061\u006cc\u0050\u0072\u003a\u0020\u0025\u0073", _efad)
		}
		if _dgef, _ecbc := _cgcc.(_b.EndElement); _ecbc && _dgef.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_FieldSortType byte

func (_egaf *CT_QueryTableDeletedFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gacgf := range start.Attr {
		if _gacgf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ebfdg, _dfeacf := _eb.ParseUint(_gacgf.Value, 10, 32)
			if _dfeacf != nil {
				return _dfeacf
			}
			_bgdbff := uint32(_ebfdg)
			_egaf.CountAttr = &_bgdbff
			continue
		}
	}
_agffae:
	for {
		_bbbdad, _ffefbd := d.Token()
		if _ffefbd != nil {
			return _ffefbd
		}
		switch _fegbad := _bbbdad.(type) {
		case _b.StartElement:
			switch _fegbad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u006ce\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u006ce\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064"}:
				_bacdbb := NewCT_DeletedField()
				if _afcag := d.DecodeElement(_bacdbb, &_fegbad); _afcag != nil {
					return _afcag
				}
				_egaf.DeletedField = append(_egaf.DeletedField, _bacdbb)
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0051\u0075e\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _fegbad.Name)
				if _fabfc := d.Skip(); _fabfc != nil {
					return _fabfc
				}
			}
		case _b.EndElement:
			break _agffae
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PivotFields and its children
func (_efdab *CT_PivotFields) Validate() error {
	return _efdab.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u0065\u006c\u0064\u0073")
}

type CT_ChartFormat struct {

	// Chart Index
	ChartAttr uint32

	// Pivot Format Id
	FormatAttr uint32

	// Series Format
	SeriesAttr *bool

	// Pivot Table Location Rule
	PivotArea *CT_PivotArea
}

// ValidateWithPath validates the CT_Tuples and its children, prefixing error messages with path
func (_bbcaca *CT_Tuples) ValidateWithPath(path string) error {
	for _egaba, _bbgda := range _bbcaca.Tpl {
		if _dccgce := _bbgda.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0054\u0070\u006c\u005b\u0025\u0064\u005d", path, _egaba)); _dccgce != nil {
			return _dccgce
		}
	}
	return nil
}

type CT_Schema struct {

	// Schema ID
	IDAttr string

	// Schema Reference
	SchemaRefAttr *string

	// Schema Root Namespace
	NamespaceAttr *string

	// Schema Language
	SchemaLanguageAttr *string
	Any                _f.Any
}

func (_cbabe *ST_ConditionalFormattingOperator) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cbabe = 0
	case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_cbabe = 1
	case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_cbabe = 2
	case "\u0065\u0071\u0075a\u006c":
		*_cbabe = 3
	case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_cbabe = 4
	case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
		*_cbabe = 5
	case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_cbabe = 6
	case "\u0062e\u0074\u0077\u0065\u0065\u006e":
		*_cbabe = 7
	case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_cbabe = 8
	case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
		*_cbabe = 9
	case "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
		*_cbabe = 10
	case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
		*_cbabe = 11
	case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
		*_cbabe = 12
	}
	return nil
}

func (_deaad *CT_MdxMemeberProp) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edeae := range start.Attr {
		if _edeae.Name.Local == "\u006e" {
			_cefb, _effda := _eb.ParseUint(_edeae.Value, 10, 32)
			if _effda != nil {
				return _effda
			}
			_deaad.NAttr = uint32(_cefb)
			continue
		}
		if _edeae.Name.Local == "\u006e\u0070" {
			_ebffd, _cdce := _eb.ParseUint(_edeae.Value, 10, 32)
			if _cdce != nil {
				return _cdce
			}
			_deaad.NpAttr = uint32(_ebffd)
			continue
		}
	}
	for {
		_bfgcf, _daga := d.Token()
		if _daga != nil {
			return _ec.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u006d\u0065\u0062\u0065\u0072\u0050\u0072\u006f\u0070: \u0025\u0073", _daga)
		}
		if _eceda, _edfee := _bfgcf.(_b.EndElement); _edfee && _eceda.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gbcbb ST_ParameterType) Validate() error { return _gbcbb.ValidateWithPath("") }

func (_bafcbe *ST_VerticalAlignment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ccacb, _aabga := d.Token()
	if _aabga != nil {
		return _aabga
	}
	if _cebff, _afead := _ccacb.(_b.EndElement); _afead && _cebff.Name == start.Name {
		*_bafcbe = 1
		return nil
	}
	if _addag, _geebab := _ccacb.(_b.CharData); !_geebab {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccacb)
	} else {
		switch string(_addag) {
		case "":
			*_bafcbe = 0
		case "\u0074\u006f\u0070":
			*_bafcbe = 1
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_bafcbe = 2
		case "\u0062\u006f\u0074\u0074\u006f\u006d":
			*_bafcbe = 3
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_bafcbe = 4
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_bafcbe = 5
		}
	}
	_ccacb, _aabga = d.Token()
	if _aabga != nil {
		return _aabga
	}
	if _ddgga, _bggecbe := _ccacb.(_b.EndElement); _bggecbe && _ddgga.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccacb)
}

func NewCT_TableFormula() *CT_TableFormula { _gebba := &CT_TableFormula{}; return _gebba }

func (_ecfbcf ST_FileType) ValidateWithPath(path string) error {
	switch _ecfbcf {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecfbcf))
	}
	return nil
}

func NewCT_MeasureDimensionMap() *CT_MeasureDimensionMap {
	_fgbcf := &CT_MeasureDimensionMap{}
	return _fgbcf
}

func (_acba *CT_Cell) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _acba.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_acba.RAttr)})
	}
	if _acba.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _ec.Sprintf("\u0025\u0076", *_acba.SAttr)})
	}
	if _acba.TAttr != ST_CellTypeUnset {
		_ebaa, _fada := _acba.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _fada != nil {
			return _fada
		}
		start.Attr = append(start.Attr, _ebaa)
	}
	if _acba.CmAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006d"}, Value: _ec.Sprintf("\u0025\u0076", *_acba.CmAttr)})
	}
	if _acba.VmAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u006d"}, Value: _ec.Sprintf("\u0025\u0076", *_acba.VmAttr)})
	}
	if _acba.PhAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0068"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_acba.PhAttr))})
	}
	e.EncodeToken(start)
	if _acba.F != nil {
		_befa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066"}}
		e.EncodeElement(_acba.F, _befa)
	}
	if _acba.V != nil {
		_bdge := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0076"}}
		_f.AddPreserveSpaceAttr(&_bdge, *_acba.V)
		e.EncodeElement(_acba.V, _bdge)
	}
	if _acba.Is != nil {
		_daea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ai\u0073"}}
		e.EncodeElement(_acba.Is, _daea)
	}
	if _acba.ExtLst != nil {
		_cfca := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_acba.ExtLst, _cfca)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_dged *CT_CellWatch) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _ec.Sprintf("\u0025\u0076", _dged.RAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_Query() *CT_Query { _dfdcb := &CT_Query{}; return _dfdcb }

func (_gdcea *CT_DeletedField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _gdcea.NameAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_MemberProperty and its children
func (_dacgd *CT_MemberProperty) Validate() error {
	return _dacgd.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050\u0072\u006fp\u0065\u0072\u0074\u0079")
}

func (_bgcad *CT_PivotHierarchies) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bgcad.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_bgcad.CountAttr)})
	}
	e.EncodeToken(start)
	_eccbg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}}
	for _, _dcgee := range _bgcad.PivotHierarchy {
		e.EncodeElement(_dcgee, _eccbg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewComments() *Comments {
	_aebcd := &Comments{}
	_aebcd.CT_Comments = *NewCT_Comments()
	return _aebcd
}

type ST_FileType byte

type CT_CacheFields struct {

	// Field Count
	CountAttr *uint32

	// PivotCache Field
	CacheField []*CT_CacheField
}

func (_dcdagb *ST_WebSourceType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dcdagb = 0
	case "\u0073\u0068\u0065e\u0074":
		*_dcdagb = 1
	case "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a":
		*_dcdagb = 2
	case "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072":
		*_dcdagb = 3
	case "\u0072\u0061\u006eg\u0065":
		*_dcdagb = 4
	case "\u0063\u0068\u0061r\u0074":
		*_dcdagb = 5
	case "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065":
		*_dcdagb = 6
	case "\u0071\u0075\u0065r\u0079":
		*_dcdagb = 7
	case "\u006c\u0061\u0062e\u006c":
		*_dcdagb = 8
	}
	return nil
}

func NewCT_MetadataTypes() *CT_MetadataTypes { _ebbae := &CT_MetadataTypes{}; return _ebbae }

// ValidateWithPath validates the CT_OutlinePr and its children, prefixing error messages with path
func (_abcfb *CT_OutlinePr) ValidateWithPath(path string) error { return nil }

const (
	ST_PaneStateUnset       ST_PaneState = 0
	ST_PaneStateSplit       ST_PaneState = 1
	ST_PaneStateFrozen      ST_PaneState = 2
	ST_PaneStateFrozenSplit ST_PaneState = 3
)

// Validate validates the CT_PageField and its children
func (_eebfaa *CT_PageField) Validate() error {
	return _eebfaa.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064")
}

func NewCT_TextFields() *CT_TextFields { _acfee := &CT_TextFields{}; return _acfee }

// ValidateWithPath validates the CT_Items and its children, prefixing error messages with path
func (_gbaac *CT_Items) ValidateWithPath(path string) error {
	for _daacg, _bbab := range _gbaac.Item {
		if _cgcbd := _bbab.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0049\u0074\u0065\u006d\u005b\u0025\u0064\u005d", path, _daacg)); _cgcbd != nil {
			return _cgcbd
		}
	}
	return nil
}

func (_fdbc *CT_MdxTuple) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcacfa := range start.Attr {
		if _bcacfa.Name.Local == "\u0063" {
			_ffbfa, _cfadg := _eb.ParseUint(_bcacfa.Value, 10, 32)
			if _cfadg != nil {
				return _cfadg
			}
			_gfdce := uint32(_ffbfa)
			_fdbc.CAttr = &_gfdce
			continue
		}
		if _bcacfa.Name.Local == "\u0063\u0074" {
			_bcgc, _edgaa := _bcacfa.Value, error(nil)
			if _edgaa != nil {
				return _edgaa
			}
			_fdbc.CtAttr = &_bcgc
			continue
		}
		if _bcacfa.Name.Local == "\u0073\u0069" {
			_fecbed, _afagfd := _eb.ParseUint(_bcacfa.Value, 10, 32)
			if _afagfd != nil {
				return _afagfd
			}
			_cgeege := uint32(_fecbed)
			_fdbc.SiAttr = &_cgeege
			continue
		}
		if _bcacfa.Name.Local == "\u0066\u0069" {
			_bfadd, _gdfab := _eb.ParseUint(_bcacfa.Value, 10, 32)
			if _gdfab != nil {
				return _gdfab
			}
			_eedf := uint32(_bfadd)
			_fdbc.FiAttr = &_eedf
			continue
		}
		if _bcacfa.Name.Local == "\u0062\u0063" {
			_edcec, _efbff := _bcacfa.Value, error(nil)
			if _efbff != nil {
				return _efbff
			}
			_fdbc.BcAttr = &_edcec
			continue
		}
		if _bcacfa.Name.Local == "\u0066\u0063" {
			_bfadf, _egfba := _bcacfa.Value, error(nil)
			if _egfba != nil {
				return _egfba
			}
			_fdbc.FcAttr = &_bfadf
			continue
		}
		if _bcacfa.Name.Local == "\u0069" {
			_cabge, _ggef := _eb.ParseBool(_bcacfa.Value)
			if _ggef != nil {
				return _ggef
			}
			_fdbc.IAttr = &_cabge
			continue
		}
		if _bcacfa.Name.Local == "\u0075" {
			_fbdbd, _gadfa := _eb.ParseBool(_bcacfa.Value)
			if _gadfa != nil {
				return _gadfa
			}
			_fdbc.UAttr = &_fbdbd
			continue
		}
		if _bcacfa.Name.Local == "\u0073\u0074" {
			_cade, _dcfgd := _eb.ParseBool(_bcacfa.Value)
			if _dcfgd != nil {
				return _dcfgd
			}
			_fdbc.StAttr = &_cade
			continue
		}
		if _bcacfa.Name.Local == "\u0062" {
			_gffce, _fbaeeg := _eb.ParseBool(_bcacfa.Value)
			if _fbaeeg != nil {
				return _fbaeeg
			}
			_fdbc.BAttr = &_gffce
			continue
		}
	}
_fgcf:
	for {
		_bfbfc, _bgbdf := d.Token()
		if _bgbdf != nil {
			return _bgbdf
		}
		switch _efabf := _bfbfc.(type) {
		case _b.StartElement:
			switch _efabf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_acdg := NewCT_MetadataStringIndex()
				if _aefgb := d.DecodeElement(_acdg, &_efabf); _aefgb != nil {
					return _aefgb
				}
				_fdbc.N = append(_fdbc.N, _acdg)
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u0054\u0075\u0070\u006c\u0065\u0020\u0025\u0076", _efabf.Name)
				if _cadce := d.Skip(); _cadce != nil {
					return _cadce
				}
			}
		case _b.EndElement:
			break _fgcf
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_SheetStateUnset      ST_SheetState = 0
	ST_SheetStateVisible    ST_SheetState = 1
	ST_SheetStateHidden     ST_SheetState = 2
	ST_SheetStateVeryHidden ST_SheetState = 3
)

// Validate validates the CT_SheetId and its children
func (_dbcbc *CT_SheetId) Validate() error {
	return _dbcbc.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064")
}

// ValidateWithPath validates the CT_TextFields and its children, prefixing error messages with path
func (_aafg *CT_TextFields) ValidateWithPath(path string) error {
	for _geaacba, _ddgacb := range _aafg.TextField {
		if _afdede := _ddgacb.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u0054\u0065\u0078t\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _geaacba)); _afdede != nil {
			return _afdede
		}
	}
	return nil
}

func (_feg *CT_Boolean) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(_feg.VAttr))})
	if _feg.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_feg.UAttr))})
	}
	if _feg.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_feg.FAttr))})
	}
	if _feg.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_feg.CAttr)})
	}
	if _feg.CpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0070"}, Value: _ec.Sprintf("\u0025\u0076", *_feg.CpAttr)})
	}
	e.EncodeToken(start)
	if _feg.X != nil {
		_afgg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _dbe := range _feg.X {
			e.EncodeElement(_dbe, _afgg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_beac *CT_ColorScale) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_bfcea := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u0066\u0076\u006f"}}
	for _, _baed := range _beac.Cfvo {
		e.EncodeElement(_baed, _bfcea)
	}
	_bfee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	for _, _deag := range _beac.Color {
		e.EncodeElement(_deag, _bfee)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_ExtensionList() *CT_ExtensionList { _cggad := &CT_ExtensionList{}; return _cggad }

type ST_GroupBy byte

// Validate validates the QueryTable and its children
func (_gfgae *QueryTable) Validate() error {
	return _gfgae.ValidateWithPath("\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065")
}

func (_ggebg ST_SortBy) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fbgeg := _b.Attr{}
	_fbgeg.Name = name
	switch _ggebg {
	case ST_SortByUnset:
		_fbgeg.Value = ""
	case ST_SortByValue:
		_fbgeg.Value = "\u0076\u0061\u006cu\u0065"
	case ST_SortByCellColor:
		_fbgeg.Value = "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr"
	case ST_SortByFontColor:
		_fbgeg.Value = "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr"
	case ST_SortByIcon:
		_fbgeg.Value = "\u0069\u0063\u006f\u006e"
	}
	return _fbgeg, nil
}

func (_eeacdf ST_VolDepType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_eeacdf.String(), start)
}

func (_aegbc *CT_UnderlineProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aegbc.ValAttr != ST_UnderlineValuesUnset {
		_cefgf, _aedee := _aegbc.ValAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0061\u006c"})
		if _aedee != nil {
			return _aedee
		}
		start.Attr = append(start.Attr, _cefgf)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_CellStyle() *CT_CellStyle { _gfff := &CT_CellStyle{}; return _gfff }

func (_dafe *CT_Error) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _ec.Sprintf("\u0025\u0076", _dafe.VAttr)})
	if _dafe.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dafe.UAttr))})
	}
	if _dafe.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dafe.FAttr))})
	}
	if _dafe.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_dafe.CAttr)})
	}
	if _dafe.CpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0070"}, Value: _ec.Sprintf("\u0025\u0076", *_dafe.CpAttr)})
	}
	if _dafe.InAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_dafe.InAttr)})
	}
	if _dafe.BcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_dafe.BcAttr)})
	}
	if _dafe.FcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_dafe.FcAttr)})
	}
	if _dafe.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dafe.IAttr))})
	}
	if _dafe.UnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dafe.UnAttr))})
	}
	if _dafe.StAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dafe.StAttr))})
	}
	if _dafe.BAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dafe.BAttr))})
	}
	e.EncodeToken(start)
	if _dafe.Tpls != nil {
		_bebe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		e.EncodeElement(_dafe.Tpls, _bebe)
	}
	if _dafe.X != nil {
		_deagg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _cbag := range _dafe.X {
			e.EncodeElement(_cbag, _deagg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_afeg *CT_Controls) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ecge := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c"}}
	for _, _cdbf := range _afeg.Control {
		e.EncodeElement(_cdbf, _ecge)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_WebPr struct {

	// XML Source
	XmlAttr *bool

	// Import XML Source Data
	SourceDataAttr *bool

	// Parse PRE
	ParsePreAttr *bool

	// Consecutive Delimiters
	ConsecutiveAttr *bool

	// Use First Row
	FirstRowAttr *bool

	// Created in Excel 97
	Xl97Attr *bool

	// Dates as Text
	TextDatesAttr *bool

	// Refreshed in Excel 2000
	Xl2000Attr *bool

	// URL
	UrlAttr *string

	// Web Post
	PostAttr *string

	// HTML Tables Only
	HtmlTablesAttr *bool

	// HTML Formatting Handling
	HtmlFormatAttr ST_HtmlFmt

	// Edit Query URL
	EditPageAttr *string

	// Tables
	Tables *CT_Tables
}

// Validate validates the CT_MemberProperties and its children
func (_dcgdb *CT_MemberProperties) Validate() error {
	return _dcgdb.ValidateWithPath("\u0043\u0054\u005f\u004dem\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_efggc *CT_Tuple) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fecgd := range start.Attr {
		if _fecgd.Name.Local == "\u0066\u006c\u0064" {
			_efffg, _bedcb := _eb.ParseUint(_fecgd.Value, 10, 32)
			if _bedcb != nil {
				return _bedcb
			}
			_baeba := uint32(_efffg)
			_efggc.FldAttr = &_baeba
			continue
		}
		if _fecgd.Name.Local == "\u0068\u0069\u0065\u0072" {
			_gdead, _bfgca := _eb.ParseUint(_fecgd.Value, 10, 32)
			if _bfgca != nil {
				return _bfgca
			}
			_fabdb := uint32(_gdead)
			_efggc.HierAttr = &_fabdb
			continue
		}
		if _fecgd.Name.Local == "\u0069\u0074\u0065\u006d" {
			_cbefbe, _aadace := _eb.ParseUint(_fecgd.Value, 10, 32)
			if _aadace != nil {
				return _aadace
			}
			_efggc.ItemAttr = uint32(_cbefbe)
			continue
		}
	}
	for {
		_cfbdg, _dgbfe := d.Token()
		if _dgbfe != nil {
			return _ec.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fT\u0075\u0070\u006c\u0065: \u0025\u0073", _dgbfe)
		}
		if _dfage, _ccbde := _cfbdg.(_b.EndElement); _ccbde && _dfage.Name == start.Name {
			break
		}
	}
	return nil
}

func (_efcgbe *ST_SortType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_efcgbe = 0
	case "\u006e\u006f\u006e\u0065":
		*_efcgbe = 1
	case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
		*_efcgbe = 2
	case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
		*_efcgbe = 3
	case "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061":
		*_efcgbe = 4
	case "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061":
		*_efcgbe = 5
	case "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c":
		*_efcgbe = 6
	case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c":
		*_efcgbe = 7
	}
	return nil
}

type CT_NumFmts struct {

	// Number Format Count
	CountAttr *uint32

	// Number Formats
	NumFmt []*CT_NumFmt
}

func (_dafdf *CT_SheetDimension) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", _dafdf.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_VolTypes struct {

	// Volatile Dependency Type
	VolType []*CT_VolType
	ExtLst  *CT_ExtensionList
}

func NewCT_SingleXmlCell() *CT_SingleXmlCell {
	_eaeff := &CT_SingleXmlCell{}
	_eaeff.XmlCellPr = NewCT_XmlCellPr()
	return _eaeff
}

type CT_PageFields struct {

	// Page Item Count
	CountAttr *uint32

	// Page Field
	PageField []*CT_PageField
}

// Validate validates the CT_TableStyles and its children
func (_cgdgb *CT_TableStyles) Validate() error {
	return _cgdgb.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053t\u0079\u006c\u0065\u0073")
}

func NewCT_RevisionConflict() *CT_RevisionConflict { _fcbbg := &CT_RevisionConflict{}; return _fcbbg }

type ST_MdxKPIProperty byte

// ValidateWithPath validates the CT_ControlPr and its children, prefixing error messages with path
func (_fbeg *CT_ControlPr) ValidateWithPath(path string) error {
	if _bfga := _fbeg.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _bfga != nil {
		return _bfga
	}
	return nil
}

type CT_Extension struct {

	// URI
	UriAttr *string
	Any     _f.Any
}

func (_fcbad ST_TextHAlign) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gdafdb := _b.Attr{}
	_gdafdb.Name = name
	switch _fcbad {
	case ST_TextHAlignUnset:
		_gdafdb.Value = ""
	case ST_TextHAlignLeft:
		_gdafdb.Value = "\u006c\u0065\u0066\u0074"
	case ST_TextHAlignCenter:
		_gdafdb.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_TextHAlignRight:
		_gdafdb.Value = "\u0072\u0069\u0067h\u0074"
	case ST_TextHAlignJustify:
		_gdafdb.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_TextHAlignDistributed:
		_gdafdb.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _gdafdb, nil
}

type EG_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

// Validate validates the CT_XmlPr and its children
func (_cecac *CT_XmlPr) Validate() error {
	return _cecac.ValidateWithPath("\u0043\u0054\u005f\u0058\u006d\u006c\u0050\u0072")
}

func (_bbgeee ST_Qualifier) String() string {
	switch _bbgeee {
	case 0:
		return ""
	case 1:
		return "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case 2:
		return "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

func NewCT_LegacyDrawing() *CT_LegacyDrawing { _aggcdf := &CT_LegacyDrawing{}; return _aggcdf }

// ValidateWithPath validates the CT_RgbColor and its children, prefixing error messages with path
func (_ecfdc *CT_RgbColor) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_MergeCell and its children, prefixing error messages with path
func (_ebad *CT_MergeCell) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_PivotAreas and its children, prefixing error messages with path
func (_dbcfc *CT_PivotAreas) ValidateWithPath(path string) error {
	for _beagc, _efegf := range _dbcfc.PivotArea {
		if _dccceb := _efegf.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u0050\u0069\u0076o\u0074\u0041\u0072\u0065\u0061\u005b\u0025\u0064\u005d", path, _beagc)); _dccceb != nil {
			return _dccceb
		}
	}
	return nil
}

func (_dgbad *CT_FileVersion) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dgbad.AppNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_dgbad.AppNameAttr)})
	}
	if _dgbad.LastEditedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0061\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_dgbad.LastEditedAttr)})
	}
	if _dgbad.LowestEditedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0077e\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_dgbad.LowestEditedAttr)})
	}
	if _dgbad.RupBuildAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0075\u0070\u0042\u0075\u0069\u006c\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_dgbad.RupBuildAttr)})
	}
	if _dgbad.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_dgbad.CodeNameAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_CellSmartTag() *CT_CellSmartTag { _cdgb := &CT_CellSmartTag{}; return _cdgb }

type CT_CellSmartTagPr struct {

	// Key Name
	KeyAttr string

	// Value
	ValAttr string
}

type CT_IconSet struct {

	// Icon Set
	IconSetAttr ST_IconSetType

	// Show Value
	ShowValueAttr *bool

	// Percent
	PercentAttr *bool

	// Reverse Icons
	ReverseAttr *bool

	// Conditional Formatting Object
	Cfvo []*CT_Cfvo
}

func (_aadb *CT_BorderPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aadf := range start.Attr {
		if _aadf.Name.Local == "\u0073\u0074\u0079l\u0065" {
			_aadb.StyleAttr.UnmarshalXMLAttr(_aadf)
			continue
		}
	}
_begc:
	for {
		_dgb, _ged := d.Token()
		if _ged != nil {
			return _ged
		}
		switch _gfed := _dgb.(type) {
		case _b.StartElement:
			switch _gfed.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_aadb.Color = NewCT_Color()
				if _eaa := d.DecodeElement(_aadb.Color, &_gfed); _eaa != nil {
					return _eaa
				}
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0050\u0072\u0020\u0025\u0076", _gfed.Name)
				if _gff := d.Skip(); _gff != nil {
					return _gff
				}
			}
		case _b.EndElement:
			break _begc
		case _b.CharData:
		}
	}
	return nil
}

func (_eecgdg ST_ItemType) Validate() error { return _eecgdg.ValidateWithPath("") }

func NewCT_PageBreak() *CT_PageBreak { _dbddc := &CT_PageBreak{}; return _dbddc }

// ValidateWithPath validates the CT_MeasureGroup and its children, prefixing error messages with path
func (_fgea *CT_MeasureGroup) ValidateWithPath(path string) error { return nil }

func NewCT_CellWatches() *CT_CellWatches { _agac := &CT_CellWatches{}; return _agac }

// ValidateWithPath validates the CT_XmlColumnPr and its children, prefixing error messages with path
func (_bgfdd *CT_XmlColumnPr) ValidateWithPath(path string) error {
	if _bgfdd.ExtLst != nil {
		if _gcegb := _bgfdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gcegb != nil {
			return _gcegb
		}
	}
	return nil
}

func (_abcaee *CT_MetadataBlocks) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebge := range start.Attr {
		if _ebge.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bbgbca, _afbed := _eb.ParseUint(_ebge.Value, 10, 32)
			if _afbed != nil {
				return _afbed
			}
			_ggafg := uint32(_bbgbca)
			_abcaee.CountAttr = &_ggafg
			continue
		}
	}
_ecccf:
	for {
		_dbefg, _afbbb := d.Token()
		if _afbbb != nil {
			return _afbbb
		}
		switch _dceaa := _dbefg.(type) {
		case _b.StartElement:
			switch _dceaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}:
				_ceecce := NewCT_MetadataBlock()
				if _gcbda := d.DecodeElement(_ceecce, &_dceaa); _gcbda != nil {
					return _gcbda
				}
				_abcaee.Bk = append(_abcaee.Bk, _ceecce)
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b\u0073\u0020\u0025\u0076", _dceaa.Name)
				if _gfadc := d.Skip(); _gfadc != nil {
					return _gfadc
				}
			}
		case _b.EndElement:
			break _ecccf
		case _b.CharData:
		}
	}
	return nil
}

func (_fegd *CT_OleObjects) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ffbge := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ao\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074"}}
	for _, _ddgaaa := range _fegd.OleObject {
		e.EncodeElement(_ddgaaa, _ffbge)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bdegc *ST_FormulaExpression) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bdegc = 0
	case "\u0072\u0065\u0066":
		*_bdegc = 1
	case "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072":
		*_bdegc = 2
	case "\u0061\u0072\u0065\u0061":
		*_bdegc = 3
	case "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr":
		*_bdegc = 4
	case "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061":
		*_bdegc = 5
	}
	return nil
}

// Validate validates the CT_VolType and its children
func (_aecdd *CT_VolType) Validate() error {
	return _aecdd.ValidateWithPath("\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065")
}

func NewCT_WebPublishItems() *CT_WebPublishItems { _dgddb := &CT_WebPublishItems{}; return _dgddb }

func (_feaaf *ST_SortMethod) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eecac, _dgcbc := d.Token()
	if _dgcbc != nil {
		return _dgcbc
	}
	if _ebbdf, _cdcac := _eecac.(_b.EndElement); _cdcac && _ebbdf.Name == start.Name {
		*_feaaf = 1
		return nil
	}
	if _aaeddb, _egeffd := _eecac.(_b.CharData); !_egeffd {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eecac)
	} else {
		switch string(_aaeddb) {
		case "":
			*_feaaf = 0
		case "\u0073\u0074\u0072\u006f\u006b\u0065":
			*_feaaf = 1
		case "\u0070\u0069\u006e\u0059\u0069\u006e":
			*_feaaf = 2
		case "\u006e\u006f\u006e\u0065":
			*_feaaf = 3
		}
	}
	_eecac, _dgcbc = d.Token()
	if _dgcbc != nil {
		return _dgcbc
	}
	if _fcdaf, _bccbe := _eecac.(_b.EndElement); _bccbe && _fcdaf.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eecac)
}

// ValidateWithPath validates the CT_WebPublishItems and its children, prefixing error messages with path
func (_eggfg *CT_WebPublishItems) ValidateWithPath(path string) error {
	for _eaagec, _ecbeg := range _eggfg.WebPublishItem {
		if _dbfad := _ecbeg.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0057\u0065bP\u0075b\u006c\u0069\u0073\u0068\u0049t\u0065\u006d\u005b\u0025\u0064\u005d", path, _eaagec)); _dbfad != nil {
			return _dbfad
		}
	}
	return nil
}

func (_dfaee *CT_TextPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dfaee.PromptAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dfaee.PromptAttr))})
	}
	if _dfaee.FileTypeAttr != ST_FileTypeUnset {
		_dgfdb, _gcebed := _dfaee.FileTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0066\u0069\u006c\u0065\u0054\u0079\u0070\u0065"})
		if _gcebed != nil {
			return _gcebed
		}
		start.Attr = append(start.Attr, _dgfdb)
	}
	if _dfaee.CodePageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_dfaee.CodePageAttr)})
	}
	if _dfaee.CharacterSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_dfaee.CharacterSetAttr)})
	}
	if _dfaee.FirstRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0076", *_dfaee.FirstRowAttr)})
	}
	if _dfaee.SourceFileAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_dfaee.SourceFileAttr)})
	}
	if _dfaee.DelimitedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065d"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dfaee.DelimitedAttr))})
	}
	if _dfaee.DecimalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u0063\u0069\u006d\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_dfaee.DecimalAttr)})
	}
	if _dfaee.ThousandsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074h\u006f\u0075\u0073\u0061\u006e\u0064s"}, Value: _ec.Sprintf("\u0025\u0076", *_dfaee.ThousandsAttr)})
	}
	if _dfaee.TabAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0062"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dfaee.TabAttr))})
	}
	if _dfaee.SpaceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0061c\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dfaee.SpaceAttr))})
	}
	if _dfaee.CommaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006dm\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dfaee.CommaAttr))})
	}
	if _dfaee.SemicolonAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dfaee.SemicolonAttr))})
	}
	if _dfaee.ConsecutiveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dfaee.ConsecutiveAttr))})
	}
	if _dfaee.QualifierAttr != ST_QualifierUnset {
		_bfbbd, _edafa := _dfaee.QualifierAttr.MarshalXMLAttr(_b.Name{Local: "\u0071u\u0061\u006c\u0069\u0066\u0069\u0065r"})
		if _edafa != nil {
			return _edafa
		}
		start.Attr = append(start.Attr, _bfbbd)
	}
	if _dfaee.DelimiterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065r"}, Value: _ec.Sprintf("\u0025\u0076", *_dfaee.DelimiterAttr)})
	}
	e.EncodeToken(start)
	if _dfaee.TextFields != nil {
		_bccae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_dfaee.TextFields, _bccae)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_edag *CT_CalculatedItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _edag.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_edag.CountAttr)})
	}
	e.EncodeToken(start)
	_ecfb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d"}}
	for _, _cbeb := range _edag.CalculatedItem {
		e.EncodeElement(_cbeb, _ecfb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gggbe ST_SourceType) String() string {
	switch _gggbe {
	case 0:
		return ""
	case 1:
		return "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case 2:
		return "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c"
	case 3:
		return "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"
	case 4:
		return "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"
	}
	return ""
}

// Validate validates the Table and its children
func (_gfbbf *Table) Validate() error { return _gfbbf.ValidateWithPath("\u0054\u0061\u0062l\u0065") }

func NewCT_OlapPr() *CT_OlapPr { _gacdbc := &CT_OlapPr{}; return _gacdbc }

type ST_SheetState byte

func (_fddafd ST_HorizontalAlignment) String() string {
	switch _fddafd {
	case 0:
		return ""
	case 1:
		return "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case 2:
		return "\u006c\u0065\u0066\u0074"
	case 3:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 4:
		return "\u0072\u0069\u0067h\u0074"
	case 5:
		return "\u0066\u0069\u006c\u006c"
	case 6:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 7:
		return "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073"
	case 8:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}

type CT_Consolidation struct {

	// Auto Page
	AutoPageAttr *bool

	// Page Item Values
	Pages *CT_Pages

	// Range Sets
	RangeSets *CT_RangeSets
}

type ST_Sqref []string

// ValidateWithPath validates the CT_Borders and its children, prefixing error messages with path
func (_dfg *CT_Borders) ValidateWithPath(path string) error {
	for _fba, _dfee := range _dfg.Border {
		if _dffg := _dfee.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0042\u006f\u0072\u0064\u0065\u0072\u005b\u0025\u0064\u005d", path, _fba)); _dffg != nil {
			return _dffg
		}
	}
	return nil
}

func (_eacbf ST_RefMode) String() string {
	switch _eacbf {
	case 0:
		return ""
	case 1:
		return "\u0041\u0031"
	case 2:
		return "\u0052\u0031\u0043\u0031"
	}
	return ""
}

func (_fdcaag ST_DataValidationType) String() string {
	switch _fdcaag {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0077\u0068\u006fl\u0065"
	case 3:
		return "\u0064e\u0063\u0069\u006d\u0061\u006c"
	case 4:
		return "\u006c\u0069\u0073\u0074"
	case 5:
		return "\u0064\u0061\u0074\u0065"
	case 6:
		return "\u0074\u0069\u006d\u0065"
	case 7:
		return "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068"
	case 8:
		return "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return ""
}

type ST_PatternType byte

const (
	ST_WebSourceTypeUnset      ST_WebSourceType = 0
	ST_WebSourceTypeSheet      ST_WebSourceType = 1
	ST_WebSourceTypePrintArea  ST_WebSourceType = 2
	ST_WebSourceTypeAutoFilter ST_WebSourceType = 3
	ST_WebSourceTypeRange      ST_WebSourceType = 4
	ST_WebSourceTypeChart      ST_WebSourceType = 5
	ST_WebSourceTypePivotTable ST_WebSourceType = 6
	ST_WebSourceTypeQuery      ST_WebSourceType = 7
	ST_WebSourceTypeLabel      ST_WebSourceType = 8
)

func NewCT_Parameter() *CT_Parameter { _bffbc := &CT_Parameter{}; return _bffbc }

// ValidateWithPath validates the CT_MetadataBlocks and its children, prefixing error messages with path
func (_acebf *CT_MetadataBlocks) ValidateWithPath(path string) error {
	for _gfadb, _egaeg := range _acebf.Bk {
		if _gfbfd := _egaeg.ValidateWithPath(_ec.Sprintf("\u0025s\u002f\u0042\u006b\u005b\u0025\u0064]", path, _gfadb)); _gfbfd != nil {
			return _gfbfd
		}
	}
	return nil
}

type CT_PivotCacheDefinition struct {
	IdAttr *string

	// Invalid Cache
	InvalidAttr *bool

	// Save Pivot Records
	SaveDataAttr *bool

	// Refresh On Load
	RefreshOnLoadAttr *bool

	// Optimize Cache for Memory
	OptimizeMemoryAttr *bool

	// Enable PivotCache Refresh
	EnableRefreshAttr *bool

	// Last Refreshed By
	RefreshedByAttr *string

	// PivotCache Last Refreshed Date
	RefreshedDateAttr *float64

	// PivotCache Last Refreshed Date ISO
	RefreshedDateIsoAttr *_g.Time

	// Background Query
	BackgroundQueryAttr *bool

	// Missing Items Limit
	MissingItemsLimitAttr *uint32

	// PivotCache Created Version
	CreatedVersionAttr *uint8

	// PivotCache Last Refreshed Version
	RefreshedVersionAttr *uint8

	// Minimum Version Required for Refresh
	MinRefreshableVersionAttr *uint8

	// PivotCache Record Count
	RecordCountAttr *uint32

	// Upgrade PivotCache on Refresh
	UpgradeOnRefreshAttr *bool

	// Tuple Cache
	TupleCacheAttr *bool

	// Supports Subqueries
	SupportSubqueryAttr *bool

	// Supports Attribute Drilldown
	SupportAdvancedDrillAttr *bool

	// PivotCache Source Description
	CacheSource *CT_CacheSource

	// PivotCache Fields
	CacheFields *CT_CacheFields

	// PivotCache Hierarchies
	CacheHierarchies *CT_CacheHierarchies

	// OLAP KPIs
	Kpis *CT_PCDKPIs

	// Tuple Cache
	TupleCache *CT_TupleCache

	// Calculated Items
	CalculatedItems *CT_CalculatedItems

	// Calculated Members
	CalculatedMembers *CT_CalculatedMembers

	// OLAP Dimensions
	Dimensions *CT_Dimensions

	// OLAP Measure Groups
	MeasureGroups *CT_MeasureGroups

	// OLAP Measure Group
	Maps *CT_MeasureDimensionMaps

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_cfgeg *CT_Record) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cfcbd:
	for {
		_gbcfg, _cafab := d.Token()
		if _cafab != nil {
			return _cafab
		}
		switch _eadbd := _gbcfg.(type) {
		case _b.StartElement:
			switch _eadbd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_dccga := NewCT_Missing()
				if _befcg := d.DecodeElement(_dccga, &_eadbd); _befcg != nil {
					return _befcg
				}
				_cfgeg.M = append(_cfgeg.M, _dccga)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_efece := NewCT_Number()
				if _afdgg := d.DecodeElement(_efece, &_eadbd); _afdgg != nil {
					return _afdgg
				}
				_cfgeg.N = append(_cfgeg.N, _efece)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_ccfdbd := NewCT_Boolean()
				if _fbbac := d.DecodeElement(_ccfdbd, &_eadbd); _fbbac != nil {
					return _fbbac
				}
				_cfgeg.B = append(_cfgeg.B, _ccfdbd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_gadecg := NewCT_Error()
				if _edddb := d.DecodeElement(_gadecg, &_eadbd); _edddb != nil {
					return _edddb
				}
				_cfgeg.E = append(_cfgeg.E, _gadecg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_ebabd := NewCT_String()
				if _abfac := d.DecodeElement(_ebabd, &_eadbd); _abfac != nil {
					return _abfac
				}
				_cfgeg.S = append(_cfgeg.S, _ebabd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
				_dfgecb := NewCT_DateTime()
				if _dcdgd := d.DecodeElement(_dfgecb, &_eadbd); _dcdgd != nil {
					return _dcdgd
				}
				_cfgeg.D = append(_cfgeg.D, _dfgecb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_eceag := NewCT_Index()
				if _ffbfbg := d.DecodeElement(_eceag, &_eadbd); _ffbfbg != nil {
					return _ffbfbg
				}
				_cfgeg.X = append(_cfgeg.X, _eceag)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0052\u0065\u0063o\u0072\u0064 \u0025\u0076", _eadbd.Name)
				if _fgaaee := d.Skip(); _fgaaee != nil {
					return _fgaaee
				}
			}
		case _b.EndElement:
			break _cfcbd
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_PageOrderUnset        ST_PageOrder = 0
	ST_PageOrderDownThenOver ST_PageOrder = 1
	ST_PageOrderOverThenDown ST_PageOrder = 2
)

func (_afebd *ST_PivotFilterType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_afebd = 0
	case "\u0075n\u006b\u006e\u006f\u0077\u006e":
		*_afebd = 1
	case "\u0063\u006f\u0075n\u0074":
		*_afebd = 2
	case "\u0070e\u0072\u0063\u0065\u006e\u0074":
		*_afebd = 3
	case "\u0073\u0075\u006d":
		*_afebd = 4
	case "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c":
		*_afebd = 5
	case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_afebd = 6
	case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068":
		*_afebd = 7
	case "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068":
		*_afebd = 8
	case "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
		*_afebd = 9
	case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068":
		*_afebd = 10
	case "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
		*_afebd = 11
	case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073":
		*_afebd = 12
	case "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e":
		*_afebd = 13
	case "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l":
		*_afebd = 14
	case "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_afebd = 15
	case "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c":
		*_afebd = 16
	case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e":
		*_afebd = 17
	case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
		*_afebd = 18
	case "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c":
		*_afebd = 19
	case "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_afebd = 20
	case "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_afebd = 21
	case "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_afebd = 22
	case "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_afebd = 23
	case "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
		*_afebd = 24
	case "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_afebd = 25
	case "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_afebd = 26
	case "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l":
		*_afebd = 27
	case "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_afebd = 28
	case "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e":
		*_afebd = 29
	case "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
		*_afebd = 30
	case "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e":
		*_afebd = 31
	case "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
		*_afebd = 32
	case "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_afebd = 33
	case "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
		*_afebd = 34
	case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
		*_afebd = 35
	case "\u0074\u006f\u0064a\u0079":
		*_afebd = 36
	case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
		*_afebd = 37
	case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
		*_afebd = 38
	case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
		*_afebd = 39
	case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
		*_afebd = 40
	case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
		*_afebd = 41
	case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
		*_afebd = 42
	case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
		*_afebd = 43
	case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_afebd = 44
	case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_afebd = 45
	case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_afebd = 46
	case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
		*_afebd = 47
	case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
		*_afebd = 48
	case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
		*_afebd = 49
	case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
		*_afebd = 50
	case "\u0051\u0031":
		*_afebd = 51
	case "\u0051\u0032":
		*_afebd = 52
	case "\u0051\u0033":
		*_afebd = 53
	case "\u0051\u0034":
		*_afebd = 54
	case "\u004d\u0031":
		*_afebd = 55
	case "\u004d\u0032":
		*_afebd = 56
	case "\u004d\u0033":
		*_afebd = 57
	case "\u004d\u0034":
		*_afebd = 58
	case "\u004d\u0035":
		*_afebd = 59
	case "\u004d\u0036":
		*_afebd = 60
	case "\u004d\u0037":
		*_afebd = 61
	case "\u004d\u0038":
		*_afebd = 62
	case "\u004d\u0039":
		*_afebd = 63
	case "\u004d\u0031\u0030":
		*_afebd = 64
	case "\u004d\u0031\u0031":
		*_afebd = 65
	case "\u004d\u0031\u0032":
		*_afebd = 66
	}
	return nil
}

func (_cbeged *Headers) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cbeged.CT_RevisionHeaders = *NewCT_RevisionHeaders()
	for _, _accgdg := range start.Attr {
		if _accgdg.Name.Local == "\u0065x\u0063\u006c\u0075\u0073\u0069\u0076e" {
			_daggg, _aacgdg := _eb.ParseBool(_accgdg.Value)
			if _aacgdg != nil {
				return _aacgdg
			}
			_cbeged.ExclusiveAttr = &_daggg
			continue
		}
		if _accgdg.Name.Local == "\u006c\u0061\u0073\u0074\u0047\u0075\u0069\u0064" {
			_ffbcc, _fcedc := _accgdg.Value, error(nil)
			if _fcedc != nil {
				return _fcedc
			}
			_cbeged.LastGuidAttr = &_ffbcc
			continue
		}
		if _accgdg.Name.Local == "\u0073\u0068\u0061\u0072\u0065\u0064" {
			_efgaca, _efdece := _eb.ParseBool(_accgdg.Value)
			if _efdece != nil {
				return _efdece
			}
			_cbeged.SharedAttr = &_efgaca
			continue
		}
		if _accgdg.Name.Local == "\u0064\u0069\u0073\u006b\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073" {
			_afgfg, _accadb := _eb.ParseBool(_accgdg.Value)
			if _accadb != nil {
				return _accadb
			}
			_cbeged.DiskRevisionsAttr = &_afgfg
			continue
		}
		if _accgdg.Name.Local == "\u0068i\u0073\u0074\u006f\u0072\u0079" {
			_dagdbb, _fbffd := _eb.ParseBool(_accgdg.Value)
			if _fbffd != nil {
				return _fbffd
			}
			_cbeged.HistoryAttr = &_dagdbb
			continue
		}
		if _accgdg.Name.Local == "\u0074\u0072\u0061\u0063\u006b\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0073" {
			_dceef, _cfaeg := _eb.ParseBool(_accgdg.Value)
			if _cfaeg != nil {
				return _cfaeg
			}
			_cbeged.TrackRevisionsAttr = &_dceef
			continue
		}
		if _accgdg.Name.Local == "\u0067\u0075\u0069\u0064" {
			_ggegg, _cgcgb := _accgdg.Value, error(nil)
			if _cgcgb != nil {
				return _cgcgb
			}
			_cbeged.GuidAttr = _ggegg
			continue
		}
		if _accgdg.Name.Local == "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0049\u0064" {
			_gegec, _gbebc := _eb.ParseUint(_accgdg.Value, 10, 32)
			if _gbebc != nil {
				return _gbebc
			}
			_dgdaad := uint32(_gegec)
			_cbeged.RevisionIdAttr = &_dgdaad
			continue
		}
		if _accgdg.Name.Local == "\u0076e\u0072\u0073\u0069\u006f\u006e" {
			_efadc, _adgeb := _eb.ParseInt(_accgdg.Value, 10, 32)
			if _adgeb != nil {
				return _adgeb
			}
			_ffega := int32(_efadc)
			_cbeged.VersionAttr = &_ffega
			continue
		}
		if _accgdg.Name.Local == "\u006b\u0065\u0065\u0070\u0043\u0068\u0061\u006e\u0067\u0065\u0048\u0069s\u0074\u006f\u0072\u0079" {
			_bfgcge, _dcacd := _eb.ParseBool(_accgdg.Value)
			if _dcacd != nil {
				return _dcacd
			}
			_cbeged.KeepChangeHistoryAttr = &_bfgcge
			continue
		}
		if _accgdg.Name.Local == "\u0070r\u006f\u0074\u0065\u0063\u0074\u0065d" {
			_geef, _ccbec := _eb.ParseBool(_accgdg.Value)
			if _ccbec != nil {
				return _ccbec
			}
			_cbeged.ProtectedAttr = &_geef
			continue
		}
		if _accgdg.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0048\u0069\u0073\u0074\u006f\u0072\u0079" {
			_caafag, _faffe := _eb.ParseUint(_accgdg.Value, 10, 32)
			if _faffe != nil {
				return _faffe
			}
			_bggda := uint32(_caafag)
			_cbeged.PreserveHistoryAttr = &_bggda
			continue
		}
	}
_gbaeda:
	for {
		_egeaef, _dbec := d.Token()
		if _dbec != nil {
			return _dbec
		}
		switch _gbdaed := _egeaef.(type) {
		case _b.StartElement:
			switch _gbdaed.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}:
				_bgaaf := NewCT_RevisionHeader()
				if _efbeg := d.DecodeElement(_bgaaf, &_gbdaed); _efbeg != nil {
					return _efbeg
				}
				_cbeged.Header = append(_cbeged.Header, _bgaaf)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0048e\u0061\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _gbdaed.Name)
				if _aeabb := d.Skip(); _aeabb != nil {
					return _aeabb
				}
			}
		case _b.EndElement:
			break _gbaeda
		case _b.CharData:
		}
	}
	return nil
}

type CT_ExternalSheetData struct {

	// Sheet Id
	SheetIdAttr uint32

	// Last Refresh Resulted in Error
	RefreshErrorAttr *bool

	// Row
	Row []*CT_ExternalRow
}

func (_gcegd *ST_TableStyleType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gcegd = 0
	case "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065":
		*_gcegd = 1
	case "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw":
		*_gcegd = 2
	case "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
		*_gcegd = 3
	case "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
		*_gcegd = 4
	case "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
		*_gcegd = 5
	case "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065":
		*_gcegd = 6
	case "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065":
		*_gcegd = 7
	case "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065":
		*_gcegd = 8
	case "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065":
		*_gcegd = 9
	case "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c":
		*_gcegd = 10
	case "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c":
		*_gcegd = 11
	case "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c":
		*_gcegd = 12
	case "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c":
		*_gcegd = 13
	case "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
		*_gcegd = 14
	case "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e":
		*_gcegd = 15
	case "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
		*_gcegd = 16
	case "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
		*_gcegd = 17
	case "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077":
		*_gcegd = 18
	case "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
		*_gcegd = 19
	case "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077":
		*_gcegd = 20
	case "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
		*_gcegd = 21
	case "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067":
		*_gcegd = 22
	case "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
		*_gcegd = 23
	case "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
		*_gcegd = 24
	case "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067":
		*_gcegd = 25
	case "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
		*_gcegd = 26
	case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073":
		*_gcegd = 27
	case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073":
		*_gcegd = 28
	}
	return nil
}

func (_efede *ST_CfType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_febag, _ggfgad := d.Token()
	if _ggfgad != nil {
		return _ggfgad
	}
	if _aabfa, _bacbeb := _febag.(_b.EndElement); _bacbeb && _aabfa.Name == start.Name {
		*_efede = 1
		return nil
	}
	if _feeeg, _cgdbec := _febag.(_b.CharData); !_cgdbec {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _febag)
	} else {
		switch string(_feeeg) {
		case "":
			*_efede = 0
		case "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e":
			*_efede = 1
		case "\u0063\u0065\u006c\u006c\u0049\u0073":
			*_efede = 2
		case "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065":
			*_efede = 3
		case "\u0064a\u0074\u0061\u0042\u0061\u0072":
			*_efede = 4
		case "\u0069c\u006f\u006e\u0053\u0065\u0074":
			*_efede = 5
		case "\u0074\u006f\u00701\u0030":
			*_efede = 6
		case "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
			*_efede = 7
		case "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
			*_efede = 8
		case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
			*_efede = 9
		case "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
			*_efede = 10
		case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
			*_efede = 11
		case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
			*_efede = 12
		case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
			*_efede = 13
		case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
			*_efede = 14
		case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
			*_efede = 15
		case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
			*_efede = 16
		case "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064":
			*_efede = 17
		case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
			*_efede = 18
		}
	}
	_febag, _ggfgad = d.Token()
	if _ggfgad != nil {
		return _ggfgad
	}
	if _feebcg, _decdc := _febag.(_b.EndElement); _decdc && _feebcg.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _febag)
}

type CalcChain struct{ CT_CalcChain }

// ValidateWithPath validates the CT_PCDSDTCEntries and its children, prefixing error messages with path
func (_gebbc *CT_PCDSDTCEntries) ValidateWithPath(path string) error {
	for _cfddg, _gfeed := range _gebbc.M {
		if _bfcbg := _gfeed.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _cfddg)); _bfcbg != nil {
			return _bfcbg
		}
	}
	for _cbefb, _bgbed := range _gebbc.N {
		if _cfffe := _bgbed.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _cbefb)); _cfffe != nil {
			return _cfffe
		}
	}
	for _cggfb, _cfbga := range _gebbc.E {
		if _ddfdf := _cfbga.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _cggfb)); _ddfdf != nil {
			return _ddfdf
		}
	}
	for _geecd, _fbbbc := range _gebbc.S {
		if _dggeb := _fbbbc.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _geecd)); _dggeb != nil {
			return _dggeb
		}
	}
	return nil
}

type CT_ControlPr struct {

	// Locked Flag
	LockedAttr *bool

	// Default Size Flag
	DefaultSizeAttr *bool

	// Print Flag
	PrintAttr *bool

	// Disabled Flag
	DisabledAttr *bool

	// Recalculation Flag
	RecalcAlwaysAttr *bool

	// UI Object Flag
	UiObjectAttr *bool

	// Automatic Fill Flag
	AutoFillAttr *bool

	// Automatic Line Flag
	AutoLineAttr *bool

	// Automatic Size Flag
	AutoPictAttr *bool

	// Custom Function
	MacroAttr *string

	// Alternative Text
	AltTextAttr *string

	// Linked Formula
	LinkedCellAttr *string

	// List Items Source Range
	ListFillRangeAttr *string

	// Image Format
	CfAttr *string
	IdAttr *string

	// Object Cell Anchor
	Anchor *CT_ObjectAnchor
}

func (_bgff *CT_FontName) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efdaf := range start.Attr {
		if _efdaf.Name.Local == "\u0076\u0061\u006c" {
			_ddcec, _effc := _efdaf.Value, error(nil)
			if _effc != nil {
				return _effc
			}
			_bgff.ValAttr = _ddcec
			continue
		}
	}
	for {
		_dbfb, _eagec := d.Token()
		if _eagec != nil {
			return _ec.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065\u003a\u0020\u0025\u0073", _eagec)
		}
		if _fgacg, _beed := _dbfb.(_b.EndElement); _beed && _fgacg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cfbadd ST_ConditionalFormattingOperator) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dceaec := _b.Attr{}
	_dceaec.Name = name
	switch _cfbadd {
	case ST_ConditionalFormattingOperatorUnset:
		_dceaec.Value = ""
	case ST_ConditionalFormattingOperatorLessThan:
		_dceaec.Value = "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_ConditionalFormattingOperatorLessThanOrEqual:
		_dceaec.Value = "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_ConditionalFormattingOperatorEqual:
		_dceaec.Value = "\u0065\u0071\u0075a\u006c"
	case ST_ConditionalFormattingOperatorNotEqual:
		_dceaec.Value = "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_ConditionalFormattingOperatorGreaterThanOrEqual:
		_dceaec.Value = "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case ST_ConditionalFormattingOperatorGreaterThan:
		_dceaec.Value = "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_ConditionalFormattingOperatorBetween:
		_dceaec.Value = "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case ST_ConditionalFormattingOperatorNotBetween:
		_dceaec.Value = "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_ConditionalFormattingOperatorContainsText:
		_dceaec.Value = "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case ST_ConditionalFormattingOperatorNotContains:
		_dceaec.Value = "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case ST_ConditionalFormattingOperatorBeginsWith:
		_dceaec.Value = "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case ST_ConditionalFormattingOperatorEndsWith:
		_dceaec.Value = "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	}
	return _dceaec, nil
}

// Validate validates the CT_PageSetup and its children
func (_ageeg *CT_PageSetup) Validate() error {
	return _ageeg.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070")
}

type CT_RangeSets struct {

	// Reference and Page Item Count
	CountAttr *uint32

	// Range Set
	RangeSet []*CT_RangeSet
}

func (_ffcfdc *CT_RangeSets) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fedbc := range start.Attr {
		if _fedbc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cdeebb, _ceebdc := _eb.ParseUint(_fedbc.Value, 10, 32)
			if _ceebdc != nil {
				return _ceebdc
			}
			_eggea := uint32(_cdeebb)
			_ffcfdc.CountAttr = &_eggea
			continue
		}
	}
_cbcga:
	for {
		_ffcb, _ecag := d.Token()
		if _ecag != nil {
			return _ecag
		}
		switch _cebccg := _ffcb.(type) {
		case _b.StartElement:
			switch _cebccg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074"}:
				_ecbab := NewCT_RangeSet()
				if _baabe := d.DecodeElement(_ecbab, &_cebccg); _baabe != nil {
					return _baabe
				}
				_ffcfdc.RangeSet = append(_ffcfdc.RangeSet, _ecbab)
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u0061\u006eg\u0065\u0053\u0065\u0074\u0073\u0020\u0025\u0076", _cebccg.Name)
				if _gbdcb := d.Skip(); _gbdcb != nil {
					return _gbdcb
				}
			}
		case _b.EndElement:
			break _cbcga
		case _b.CharData:
		}
	}
	return nil
}

func (_bcegf ST_SmartTagShow) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bcegf.String(), start)
}

type ST_TotalsRowFunction byte

func (_dgcg *CT_CacheSource) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dgcg.TypeAttr = ST_SourceType(1)
	for _, _ceag := range start.Attr {
		if _ceag.Name.Local == "\u0074\u0079\u0070\u0065" {
			_dgcg.TypeAttr.UnmarshalXMLAttr(_ceag)
			continue
		}
		if _ceag.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_gafd, _cac := _eb.ParseUint(_ceag.Value, 10, 32)
			if _cac != nil {
				return _cac
			}
			_gdbb := uint32(_gafd)
			_dgcg.ConnectionIdAttr = &_gdbb
			continue
		}
	}
_bab:
	for {
		_edgd, _ffgb := d.Token()
		if _ffgb != nil {
			return _ffgb
		}
		switch _ecf := _edgd.(type) {
		case _b.StartElement:
			switch _ecf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0073\u0068\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0073\u0068\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"}:
				_dgcg.WorksheetSource = NewCT_WorksheetSource()
				if _faa := d.DecodeElement(_dgcg.WorksheetSource, &_ecf); _faa != nil {
					return _faa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}:
				_dgcg.Consolidation = NewCT_Consolidation()
				if _adeg := d.DecodeElement(_dgcg.Consolidation, &_ecf); _adeg != nil {
					return _adeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dgcg.ExtLst = NewCT_ExtensionList()
				if _cdag := d.DecodeElement(_dgcg.ExtLst, &_ecf); _cdag != nil {
					return _cdag
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053\u006fu\u0072c\u0065\u0020\u0025\u0076", _ecf.Name)
				if _facf := d.Skip(); _facf != nil {
					return _facf
				}
			}
		case _b.EndElement:
			break _bab
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_DbPr() *CT_DbPr { _dgffc := &CT_DbPr{}; return _dgffc }

func NewCT_PhoneticPr() *CT_PhoneticPr { _gfegg := &CT_PhoneticPr{}; return _gfegg }

func (_cfccfd *CT_DateGroupItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cfccfd.DateTimeGroupingAttr = ST_DateTimeGrouping(1)
	for _, _cffeg := range start.Attr {
		if _cffeg.Name.Local == "\u0079\u0065\u0061\u0072" {
			_baeac, _debe := _eb.ParseUint(_cffeg.Value, 10, 16)
			if _debe != nil {
				return _debe
			}
			_cfccfd.YearAttr = uint16(_baeac)
			continue
		}
		if _cffeg.Name.Local == "\u006d\u006f\u006et\u0068" {
			_dafad, _gacd := _eb.ParseUint(_cffeg.Value, 10, 16)
			if _gacd != nil {
				return _gacd
			}
			_dbbc := uint16(_dafad)
			_cfccfd.MonthAttr = &_dbbc
			continue
		}
		if _cffeg.Name.Local == "\u0064\u0061\u0079" {
			_gccfb, _gfdfc := _eb.ParseUint(_cffeg.Value, 10, 16)
			if _gfdfc != nil {
				return _gfdfc
			}
			_faebe := uint16(_gccfb)
			_cfccfd.DayAttr = &_faebe
			continue
		}
		if _cffeg.Name.Local == "\u0068\u006f\u0075\u0072" {
			_edde, _cgffb := _eb.ParseUint(_cffeg.Value, 10, 16)
			if _cgffb != nil {
				return _cgffb
			}
			_bccc := uint16(_edde)
			_cfccfd.HourAttr = &_bccc
			continue
		}
		if _cffeg.Name.Local == "\u006d\u0069\u006e\u0075\u0074\u0065" {
			_ffegb, _dgbfd := _eb.ParseUint(_cffeg.Value, 10, 16)
			if _dgbfd != nil {
				return _dgbfd
			}
			_dced := uint16(_ffegb)
			_cfccfd.MinuteAttr = &_dced
			continue
		}
		if _cffeg.Name.Local == "\u0073\u0065\u0063\u006f\u006e\u0064" {
			_gebec, _gfde := _eb.ParseUint(_cffeg.Value, 10, 16)
			if _gfde != nil {
				return _gfde
			}
			_ddeac := uint16(_gebec)
			_cfccfd.SecondAttr = &_ddeac
			continue
		}
		if _cffeg.Name.Local == "\u0064\u0061t\u0065\u0054\u0069m\u0065\u0047\u0072\u006f\u0075\u0070\u0069\u006e\u0067" {
			_cfccfd.DateTimeGroupingAttr.UnmarshalXMLAttr(_cffeg)
			continue
		}
	}
	for {
		_gacdb, _bcfg := d.Token()
		if _bcfg != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0065G\u0072o\u0075\u0070\u0049\u0074\u0065\u006d\u003a \u0025\u0073", _bcfg)
		}
		if _dbefe, _egbeg := _gacdb.(_b.EndElement); _egbeg && _dbefe.Name == start.Name {
			break
		}
	}
	return nil
}

func (_afbcc ST_ItemType) ValidateWithPath(path string) error {
	switch _afbcc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_afbcc))
	}
	return nil
}

func NewCT_RevisionInsertSheet() *CT_RevisionInsertSheet {
	_gcaeff := &CT_RevisionInsertSheet{}
	return _gcaeff
}

func (_deebc *CT_Fill) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fgcbe:
	for {
		_fafec, _fdfff := d.Token()
		if _fdfff != nil {
			return _fdfff
		}
		switch _bfda := _fafec.(type) {
		case _b.StartElement:
			switch _bfda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"}:
				_deebc.PatternFill = NewCT_PatternFill()
				if _aebbe := d.DecodeElement(_deebc.PatternFill, &_bfda); _aebbe != nil {
					return _aebbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}:
				_deebc.GradientFill = NewCT_GradientFill()
				if _fdcga := d.DecodeElement(_deebc.GradientFill, &_bfda); _fdcga != nil {
					return _fdcga
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u0069\u006c\u006c\u0020\u0025\u0076", _bfda.Name)
				if _afded := d.Skip(); _afded != nil {
					return _afded
				}
			}
		case _b.EndElement:
			break _fgcbe
		case _b.CharData:
		}
	}
	return nil
}

func (_gadcgdb *CT_VolType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gadcgdb.TypeAttr = ST_VolDepType(1)
	for _, _eadgc := range start.Attr {
		if _eadgc.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gadcgdb.TypeAttr.UnmarshalXMLAttr(_eadgc)
			continue
		}
	}
_faeca:
	for {
		_dcaca, _gbgcce := d.Token()
		if _gbgcce != nil {
			return _gbgcce
		}
		switch _aagfc := _dcaca.(type) {
		case _b.StartElement:
			switch _aagfc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0069\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0069\u006e"}:
				_bfdgc := NewCT_VolMain()
				if _daadbd := d.DecodeElement(_bfdgc, &_aagfc); _daadbd != nil {
					return _daadbd
				}
				_gadcgdb.Main = append(_gadcgdb.Main, _bfdgc)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fV\u006f\u006c\u0054\u0079\u0070\u0065\u0020\u0025\u0076", _aagfc.Name)
				if _efbdbe := d.Skip(); _efbdbe != nil {
					return _efbdbe
				}
			}
		case _b.EndElement:
			break _faeca
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_WebPublishObject and its children
func (_bbebag *CT_WebPublishObject) Validate() error {
	return _bbebag.ValidateWithPath("\u0043\u0054\u005f\u0057eb\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074")
}

const (
	ST_DateTimeGroupingUnset  ST_DateTimeGrouping = 0
	ST_DateTimeGroupingYear   ST_DateTimeGrouping = 1
	ST_DateTimeGroupingMonth  ST_DateTimeGrouping = 2
	ST_DateTimeGroupingDay    ST_DateTimeGrouping = 3
	ST_DateTimeGroupingHour   ST_DateTimeGrouping = 4
	ST_DateTimeGroupingMinute ST_DateTimeGrouping = 5
	ST_DateTimeGroupingSecond ST_DateTimeGrouping = 6
)

func (_ebfbg ST_RefMode) Validate() error { return _ebfbg.ValidateWithPath("") }

func (_ebcf *CT_Borders) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fdgd := range start.Attr {
		if _fdgd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ddfg, _gccb := _eb.ParseUint(_fdgd.Value, 10, 32)
			if _gccb != nil {
				return _gccb
			}
			_cga := uint32(_ddfg)
			_ebcf.CountAttr = &_cga
			continue
		}
	}
_fad:
	for {
		_ffdd, _fade := d.Token()
		if _fade != nil {
			return _fade
		}
		switch _dgbg := _ffdd.(type) {
		case _b.StartElement:
			switch _dgbg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}:
				_gfca := NewCT_Border()
				if _dabe := d.DecodeElement(_gfca, &_dgbg); _dabe != nil {
					return _dabe
				}
				_ebcf.Border = append(_ebcf.Border, _gfca)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fB\u006f\u0072\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _dgbg.Name)
				if _fcde := d.Skip(); _fcde != nil {
					return _fcde
				}
			}
		case _b.EndElement:
			break _fad
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_WorkbookProtection() *CT_WorkbookProtection {
	_gecge := &CT_WorkbookProtection{}
	return _gecge
}

func (_aega *CT_PrintOptions) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aega.HorizontalCenteredAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068o\u0072i\u007a\u006f\u006e\u0074\u0061l\u0043\u0065n\u0074\u0065\u0072\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aega.HorizontalCenteredAttr))})
	}
	if _aega.VerticalCenteredAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0065r\u0074\u0069\u0063a\u006c\u0043\u0065\u006e\u0074\u0065\u0072\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aega.VerticalCenteredAttr))})
	}
	if _aega.HeadingsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u0061\u0064\u0069\u006e\u0067\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aega.HeadingsAttr))})
	}
	if _aega.GridLinesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067r\u0069\u0064\u004c\u0069\u006e\u0065s"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aega.GridLinesAttr))})
	}
	if _aega.GridLinesSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0069d\u004c\u0069\u006e\u0065\u0073\u0053\u0065\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aega.GridLinesSetAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OleObjects and its children
func (_facbf *CT_OleObjects) Validate() error {
	return _facbf.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073")
}

// Validate validates the CT_CalcPr and its children
func (_ecbd *CT_CalcPr) Validate() error {
	return _ecbd.ValidateWithPath("\u0043T\u005f\u0043\u0061\u006c\u0063\u0050r")
}

func (_afcgd ST_DataValidationType) Validate() error { return _afcgd.ValidateWithPath("") }

func (_ccgbc ST_SheetViewType) Validate() error { return _ccgbc.ValidateWithPath("") }

func (_gfdb *CT_GradientStop) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", _gfdb.PositionAttr)})
	e.EncodeToken(start)
	_geffag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	e.EncodeElement(_gfdb.Color, _geffag)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ExternalSheetNames struct {

	// Sheet Name
	SheetName []*CT_ExternalSheetName
}

func (_dacda *CT_Sheets) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cecde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074"}}
	for _, _fbecbf := range _dacda.Sheet {
		e.EncodeElement(_fbecbf, _cecde)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_OleItem() *CT_OleItem { _agbg := &CT_OleItem{}; return _agbg }

func (_bbged ST_VolValueType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_caeab := _b.Attr{}
	_caeab.Name = name
	switch _bbged {
	case ST_VolValueTypeUnset:
		_caeab.Value = ""
	case ST_VolValueTypeB:
		_caeab.Value = "\u0062"
	case ST_VolValueTypeN:
		_caeab.Value = "\u006e"
	case ST_VolValueTypeE:
		_caeab.Value = "\u0065"
	case ST_VolValueTypeS:
		_caeab.Value = "\u0073"
	}
	return _caeab, nil
}

func NewCT_Pane() *CT_Pane { _dadbe := &CT_Pane{}; return _dadbe }

func NewCT_Fill() *CT_Fill { _deea := &CT_Fill{}; return _deea }

func (_efef *CT_CacheHierarchy) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ecgf := range start.Attr {
		if _ecgf.Name.Local == "\u0064\u0069\u006d\u0065ns\u0069\u006f\u006e\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_dfag, _gfcb := _ecgf.Value, error(nil)
			if _gfcb != nil {
				return _gfcb
			}
			_efef.DimensionUniqueNameAttr = &_dfag
			continue
		}
		if _ecgf.Name.Local == "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072" {
			_gedg, _fdgf := _ecgf.Value, error(nil)
			if _fdgf != nil {
				return _fdgf
			}
			_efef.DisplayFolderAttr = &_gedg
			continue
		}
		if _ecgf.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_fdee, _caeb := _ecgf.Value, error(nil)
			if _caeb != nil {
				return _caeb
			}
			_efef.CaptionAttr = &_fdee
			continue
		}
		if _ecgf.Name.Local == "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070" {
			_bcgb, _adb := _ecgf.Value, error(nil)
			if _adb != nil {
				return _adb
			}
			_efef.MeasureGroupAttr = &_bcgb
			continue
		}
		if _ecgf.Name.Local == "\u0073\u0065\u0074" {
			_eafe, _dgdg := _eb.ParseBool(_ecgf.Value)
			if _dgdg != nil {
				return _dgdg
			}
			_efef.SetAttr = &_eafe
			continue
		}
		if _ecgf.Name.Local == "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0073" {
			_efgf, _ebed := _eb.ParseBool(_ecgf.Value)
			if _ebed != nil {
				return _ebed
			}
			_efef.MeasuresAttr = &_efgf
			continue
		}
		if _ecgf.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_cfcd, _daeb := _eb.ParseInt(_ecgf.Value, 10, 32)
			if _daeb != nil {
				return _daeb
			}
			_fga := int32(_cfcd)
			_efef.IconSetAttr = &_fga
			continue
		}
		if _ecgf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_efb, _fbdf := _eb.ParseUint(_ecgf.Value, 10, 32)
			if _fbdf != nil {
				return _fbdf
			}
			_efef.CountAttr = uint32(_efb)
			continue
		}
		if _ecgf.Name.Local == "\u0074\u0069\u006d\u0065" {
			_agf, _feaa := _eb.ParseBool(_ecgf.Value)
			if _feaa != nil {
				return _feaa
			}
			_efef.TimeAttr = &_agf
			continue
		}
		if _ecgf.Name.Local == "\u006f\u006e\u0065\u0046\u0069\u0065\u006c\u0064" {
			_dbb, _ccb := _eb.ParseBool(_ecgf.Value)
			if _ccb != nil {
				return _ccb
			}
			_efef.OneFieldAttr = &_dbb
			continue
		}
		if _ecgf.Name.Local == "\u006d\u0065\u006d\u0062er\u0056\u0061\u006c\u0075\u0065\u0044\u0061\u0074\u0061\u0074\u0079\u0070\u0065" {
			_agfe, _cgcf := _eb.ParseUint(_ecgf.Value, 10, 16)
			if _cgcf != nil {
				return _cgcf
			}
			_ffee := uint16(_agfe)
			_efef.MemberValueDatatypeAttr = &_ffee
			continue
		}
		if _ecgf.Name.Local == "\u0075n\u0062a\u006c\u0061\u006e\u0063\u0065\u0064\u0047\u0072\u006f\u0075\u0070" {
			_gfgb, _bdca := _eb.ParseBool(_ecgf.Value)
			if _bdca != nil {
				return _bdca
			}
			_efef.UnbalancedGroupAttr = &_gfgb
			continue
		}
		if _ecgf.Name.Local == "\u0070a\u0072\u0065\u006e\u0074\u0053\u0065t" {
			_defe, _egde := _eb.ParseUint(_ecgf.Value, 10, 32)
			if _egde != nil {
				return _egde
			}
			_egdc := uint32(_defe)
			_efef.ParentSetAttr = &_egdc
			continue
		}
		if _ecgf.Name.Local == "\u0064\u0065\u0066au\u006c\u0074\u004d\u0065\u006d\u0062\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_faba, _bbg := _ecgf.Value, error(nil)
			if _bbg != nil {
				return _bbg
			}
			_efef.DefaultMemberUniqueNameAttr = &_faba
			continue
		}
		if _ecgf.Name.Local == "\u006de\u0061\u0073\u0075\u0072\u0065" {
			_dbeb, _eaed := _eb.ParseBool(_ecgf.Value)
			if _eaed != nil {
				return _eaed
			}
			_efef.MeasureAttr = &_dbeb
			continue
		}
		if _ecgf.Name.Local == "\u0075\u006e\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064" {
			_aefb, _gaac := _eb.ParseBool(_ecgf.Value)
			if _gaac != nil {
				return _gaac
			}
			_efef.UnbalancedAttr = &_aefb
			continue
		}
		if _ecgf.Name.Local == "\u0061\u006c\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_fggg, _dgca := _ecgf.Value, error(nil)
			if _dgca != nil {
				return _dgca
			}
			_efef.AllCaptionAttr = &_fggg
			continue
		}
		if _ecgf.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_gfea, _bdd := _eb.ParseBool(_ecgf.Value)
			if _bdd != nil {
				return _bdd
			}
			_efef.HiddenAttr = &_gfea
			continue
		}
		if _ecgf.Name.Local == "\u0061t\u0074\u0072\u0069\u0062\u0075\u0074e" {
			_dbd, _gcd := _eb.ParseBool(_ecgf.Value)
			if _gcd != nil {
				return _gcd
			}
			_efef.AttributeAttr = &_dbd
			continue
		}
		if _ecgf.Name.Local == "\u0061\u006c\u006c\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_dce, _adcd := _ecgf.Value, error(nil)
			if _adcd != nil {
				return _adcd
			}
			_efef.AllUniqueNameAttr = &_dce
			continue
		}
		if _ecgf.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_acbd, _cgaab := _ecgf.Value, error(nil)
			if _cgaab != nil {
				return _cgaab
			}
			_efef.UniqueNameAttr = _acbd
			continue
		}
		if _ecgf.Name.Local == "\u006b\u0065\u0079A\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065" {
			_aec, _dcgf := _eb.ParseBool(_ecgf.Value)
			if _dcgf != nil {
				return _dcgf
			}
			_efef.KeyAttributeAttr = &_aec
			continue
		}
	}
_dcdc:
	for {
		_abf, _ead := d.Token()
		if _ead != nil {
			return _ead
		}
		switch _ffff := _abf.(type) {
		case _b.StartElement:
			switch _ffff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0065\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0065\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_efef.FieldsUsage = NewCT_FieldsUsage()
				if _ccbc := d.DecodeElement(_efef.FieldsUsage, &_ffff); _ccbc != nil {
					return _ccbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"}:
				_efef.GroupLevels = NewCT_GroupLevels()
				if _caag := d.DecodeElement(_efef.GroupLevels, &_ffff); _caag != nil {
					return _caag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efef.ExtLst = NewCT_ExtensionList()
				if _ccdc := d.DecodeElement(_efef.ExtLst, &_ffff); _ccdc != nil {
					return _ccdc
				}
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079\u0020\u0025\u0076", _ffff.Name)
				if _gdcf := d.Skip(); _gdcf != nil {
					return _gdcf
				}
			}
		case _b.EndElement:
			break _dcdc
		case _b.CharData:
		}
	}
	return nil
}

type CT_WebPublishing struct {

	// Use CSS
	CssAttr *bool

	// Thicket
	ThicketAttr *bool

	// Enable Long File Names
	LongFileNamesAttr *bool

	// VML in Browsers
	VmlAttr *bool

	// Allow PNG
	AllowPngAttr *bool

	// Target Screen Size
	TargetScreenSizeAttr ST_TargetScreenSize

	// DPI
	DpiAttr *uint32

	// Code Page
	CodePageAttr *uint32

	// Character Set
	CharacterSetAttr *string
}

func (_dgffb *ST_Type) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dgffb = 0
	case "\u006e\u006f\u006e\u0065":
		*_dgffb = 1
	case "\u0061\u006c\u006c":
		*_dgffb = 2
	case "\u0072\u006f\u0077":
		*_dgffb = 3
	case "\u0063\u006f\u006c\u0075\u006d\u006e":
		*_dgffb = 4
	}
	return nil
}

func NewCT_Table() *CT_Table {
	_cabfg := &CT_Table{}
	_cabfg.TableColumns = NewCT_TableColumns()
	return _cabfg
}

func NewCT_DataValidation() *CT_DataValidation { _beab := &CT_DataValidation{}; return _beab }

func (_dgdbec *CT_Tuple) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dgdbec.FldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006c\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_dgdbec.FldAttr)})
	}
	if _dgdbec.HierAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_dgdbec.HierAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0074\u0065\u006d"}, Value: _ec.Sprintf("\u0025\u0076", _dgdbec.ItemAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_badac ST_HorizontalAlignment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_badac.String(), start)
}

func (_gcgdg *CT_FontFamily) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", _gcgdg.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_MdxMetadata and its children
func (_abfgd *CT_MdxMetadata) Validate() error {
	return _abfgd.ValidateWithPath("\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u0074a\u0064\u0061\u0074\u0061")
}

type CT_RevisionQueryTableField struct {

	// Sheet Id
	SheetIdAttr uint32

	// QueryTable Reference
	RefAttr string

	// Field Id
	FieldIdAttr uint32
}

type ST_FilterOperator byte

func (_gffbef ST_DataValidationOperator) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bfdeae := _b.Attr{}
	_bfdeae.Name = name
	switch _gffbef {
	case ST_DataValidationOperatorUnset:
		_bfdeae.Value = ""
	case ST_DataValidationOperatorBetween:
		_bfdeae.Value = "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case ST_DataValidationOperatorNotBetween:
		_bfdeae.Value = "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_DataValidationOperatorEqual:
		_bfdeae.Value = "\u0065\u0071\u0075a\u006c"
	case ST_DataValidationOperatorNotEqual:
		_bfdeae.Value = "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_DataValidationOperatorLessThan:
		_bfdeae.Value = "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_DataValidationOperatorLessThanOrEqual:
		_bfdeae.Value = "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_DataValidationOperatorGreaterThan:
		_bfdeae.Value = "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_DataValidationOperatorGreaterThanOrEqual:
		_bfdeae.Value = "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	}
	return _bfdeae, nil
}

type CT_Error struct {

	// Value
	VAttr string

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Item Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// Tuples
	Tpls *CT_Tuples

	// Member Property Indexes
	X []*CT_X
}

type CT_I struct {

	// Item Type
	TAttr ST_ItemType

	// Repeated Items Count
	RAttr *uint32

	// Data Field Index
	IAttr *uint32

	// Row / Column Item Index
	X []*CT_X
}

// Validate validates the Revisions and its children
func (_gffcb *Revisions) Validate() error {
	return _gffcb.ValidateWithPath("\u0052e\u0076\u0069\u0073\u0069\u006f\u006es")
}

type CT_CustomSheetViews struct {

	// Custom Sheet View
	CustomSheetView []*CT_CustomSheetView
}

func (_bcefc ST_CfType) String() string {
	switch _bcefc {
	case 0:
		return ""
	case 1:
		return "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e"
	case 2:
		return "\u0063\u0065\u006c\u006c\u0049\u0073"
	case 3:
		return "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"
	case 4:
		return "\u0064a\u0074\u0061\u0042\u0061\u0072"
	case 5:
		return "\u0069c\u006f\u006e\u0053\u0065\u0074"
	case 6:
		return "\u0074\u006f\u00701\u0030"
	case 7:
		return "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case 8:
		return "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case 9:
		return "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case 10:
		return "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case 11:
		return "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case 12:
		return "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case 13:
		return "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case 14:
		return "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case 15:
		return "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case 16:
		return "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case 17:
		return "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064"
	case 18:
		return "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	}
	return ""
}

func (_fbafca *ST_CfvoType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fbafca = 0
	case "\u006e\u0075\u006d":
		*_fbafca = 1
	case "\u0070e\u0072\u0063\u0065\u006e\u0074":
		*_fbafca = 2
	case "\u006d\u0061\u0078":
		*_fbafca = 3
	case "\u006d\u0069\u006e":
		*_fbafca = 4
	case "\u0066o\u0072\u006d\u0075\u006c\u0061":
		*_fbafca = 5
	case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065":
		*_fbafca = 6
	}
	return nil
}

func (_gcebg *StyleSheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0073\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074"
	return _gcebg.CT_Stylesheet.MarshalXML(e, start)
}

// Validate validates the CT_MergeCell and its children
func (_ebeaf *CT_MergeCell) Validate() error {
	return _ebeaf.ValidateWithPath("\u0043\u0054\u005fM\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c")
}

func (_bgddf *CT_MergeCells) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bgddf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_bgddf.CountAttr)})
	}
	e.EncodeToken(start)
	_gbbfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003am\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c"}}
	for _, _fdgfd := range _bgddf.MergeCell {
		e.EncodeElement(_fdgfd, _gbbfa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TextField struct {

	// Field Type
	TypeAttr ST_ExternalConnectionType

	// Position
	PositionAttr *uint32
}

const (
	ST_PrintErrorUnset     ST_PrintError = 0
	ST_PrintErrorDisplayed ST_PrintError = 1
	ST_PrintErrorBlank     ST_PrintError = 2
	ST_PrintErrorDash      ST_PrintError = 3
	ST_PrintErrorNA        ST_PrintError = 4
)

// ValidateWithPath validates the CT_Formats and its children, prefixing error messages with path
func (_bface *CT_Formats) ValidateWithPath(path string) error {
	for _fgdfg, _cabcf := range _bface.Format {
		if _dcagf := _cabcf.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0046\u006f\u0072\u006d\u0061\u0074\u005b\u0025\u0064\u005d", path, _fgdfg)); _dcagf != nil {
			return _dcagf
		}
	}
	return nil
}

func (_ccgde *CT_PCDKPIs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eagff := range start.Attr {
		if _eagff.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ecega, _abdec := _eb.ParseUint(_eagff.Value, 10, 32)
			if _abdec != nil {
				return _abdec
			}
			_cacff := uint32(_ecega)
			_ccgde.CountAttr = &_cacff
			continue
		}
	}
_ccgcbg:
	for {
		_cdbbd, _eddbb := d.Token()
		if _eddbb != nil {
			return _eddbb
		}
		switch _bcgfcg := _cdbbd.(type) {
		case _b.StartElement:
			switch _bcgfcg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069"}:
				_eddgbc := NewCT_PCDKPI()
				if _gagec := d.DecodeElement(_eddgbc, &_bcgfcg); _gagec != nil {
					return _gagec
				}
				_ccgde.Kpi = append(_ccgde.Kpi, _eddgbc)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0043\u0044\u004b\u0050\u0049\u0073\u0020\u0025\u0076", _bcgfcg.Name)
				if _gcfef := d.Skip(); _gcfef != nil {
					return _gcfef
				}
			}
		case _b.EndElement:
			break _ccgcbg
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_Dxfs() *CT_Dxfs { _gbfeg := &CT_Dxfs{}; return _gbfeg }

// ValidateWithPath validates the CT_RPrElt and its children, prefixing error messages with path
func (_aggdce *CT_RPrElt) ValidateWithPath(path string) error {
	if _aggdce.RFont != nil {
		if _debaa := _aggdce.RFont.ValidateWithPath(path + "\u002f\u0052\u0046\u006f\u006e\u0074"); _debaa != nil {
			return _debaa
		}
	}
	if _aggdce.Charset != nil {
		if _bbade := _aggdce.Charset.ValidateWithPath(path + "\u002f\u0043\u0068\u0061\u0072\u0073\u0065\u0074"); _bbade != nil {
			return _bbade
		}
	}
	if _aggdce.Family != nil {
		if _afedc := _aggdce.Family.ValidateWithPath(path + "\u002fF\u0061\u006d\u0069\u006c\u0079"); _afedc != nil {
			return _afedc
		}
	}
	if _aggdce.B != nil {
		if _efcegf := _aggdce.B.ValidateWithPath(path + "\u002f\u0042"); _efcegf != nil {
			return _efcegf
		}
	}
	if _aggdce.I != nil {
		if _edddc := _aggdce.I.ValidateWithPath(path + "\u002f\u0049"); _edddc != nil {
			return _edddc
		}
	}
	if _aggdce.Strike != nil {
		if _aeebd := _aggdce.Strike.ValidateWithPath(path + "\u002fS\u0074\u0072\u0069\u006b\u0065"); _aeebd != nil {
			return _aeebd
		}
	}
	if _aggdce.Outline != nil {
		if _abaada := _aggdce.Outline.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065"); _abaada != nil {
			return _abaada
		}
	}
	if _aggdce.Shadow != nil {
		if _ccbg := _aggdce.Shadow.ValidateWithPath(path + "\u002fS\u0068\u0061\u0064\u006f\u0077"); _ccbg != nil {
			return _ccbg
		}
	}
	if _aggdce.Condense != nil {
		if _fcdda := _aggdce.Condense.ValidateWithPath(path + "\u002fC\u006f\u006e\u0064\u0065\u006e\u0073e"); _fcdda != nil {
			return _fcdda
		}
	}
	if _aggdce.Extend != nil {
		if _gaggg := _aggdce.Extend.ValidateWithPath(path + "\u002fE\u0078\u0074\u0065\u006e\u0064"); _gaggg != nil {
			return _gaggg
		}
	}
	if _aggdce.Color != nil {
		if _dgfda := _aggdce.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _dgfda != nil {
			return _dgfda
		}
	}
	if _aggdce.Sz != nil {
		if _bcfbc := _aggdce.Sz.ValidateWithPath(path + "\u002f\u0053\u007a"); _bcfbc != nil {
			return _bcfbc
		}
	}
	if _aggdce.U != nil {
		if _fffbc := _aggdce.U.ValidateWithPath(path + "\u002f\u0055"); _fffbc != nil {
			return _fffbc
		}
	}
	if _aggdce.VertAlign != nil {
		if _aeadd := _aggdce.VertAlign.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"); _aeadd != nil {
			return _aeadd
		}
	}
	if _aggdce.Scheme != nil {
		if _agebe := _aggdce.Scheme.ValidateWithPath(path + "\u002fS\u0063\u0068\u0065\u006d\u0065"); _agebe != nil {
			return _agebe
		}
	}
	return nil
}

func (_bfafa *ST_DataValidationType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_debfb, _geagc := d.Token()
	if _geagc != nil {
		return _geagc
	}
	if _bagdf, _dbccg := _debfb.(_b.EndElement); _dbccg && _bagdf.Name == start.Name {
		*_bfafa = 1
		return nil
	}
	if _efbbg, _gbbdf := _debfb.(_b.CharData); !_gbbdf {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _debfb)
	} else {
		switch string(_efbbg) {
		case "":
			*_bfafa = 0
		case "\u006e\u006f\u006e\u0065":
			*_bfafa = 1
		case "\u0077\u0068\u006fl\u0065":
			*_bfafa = 2
		case "\u0064e\u0063\u0069\u006d\u0061\u006c":
			*_bfafa = 3
		case "\u006c\u0069\u0073\u0074":
			*_bfafa = 4
		case "\u0064\u0061\u0074\u0065":
			*_bfafa = 5
		case "\u0074\u0069\u006d\u0065":
			*_bfafa = 6
		case "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068":
			*_bfafa = 7
		case "\u0063\u0075\u0073\u0074\u006f\u006d":
			*_bfafa = 8
		}
	}
	_debfb, _geagc = d.Token()
	if _geagc != nil {
		return _geagc
	}
	if _gagbee, _bfgdaaee := _debfb.(_b.EndElement); _bfgdaaee && _gagbee.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _debfb)
}

type CT_WebPublishItem struct {

	// Id
	IdAttr uint32

	// Destination Bookmark
	DivIdAttr string

	// Web Source Type
	SourceTypeAttr ST_WebSourceType

	// Source Id
	SourceRefAttr *string

	// Source Object Name
	SourceObjectAttr *string

	// Destination File Name
	DestinationFileAttr string

	// Title
	TitleAttr *string

	// Automatically Publish
	AutoRepublishAttr *bool
}

func (_aeeg *CT_CustomChartsheetView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aeeg.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _dafd := range start.Attr {
		if _dafd.Name.Local == "\u0067\u0075\u0069\u0064" {
			_aagd, _adgaf := _dafd.Value, error(nil)
			if _adgaf != nil {
				return _adgaf
			}
			_aeeg.GuidAttr = _aagd
			continue
		}
		if _dafd.Name.Local == "\u0073\u0063\u0061l\u0065" {
			_facde, _ggfba := _eb.ParseUint(_dafd.Value, 10, 32)
			if _ggfba != nil {
				return _ggfba
			}
			_daff := uint32(_facde)
			_aeeg.ScaleAttr = &_daff
			continue
		}
		if _dafd.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_aeeg.StateAttr.UnmarshalXMLAttr(_dafd)
			continue
		}
		if _dafd.Name.Local == "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t" {
			_ggac, _fdede := _eb.ParseBool(_dafd.Value)
			if _fdede != nil {
				return _fdede
			}
			_aeeg.ZoomToFitAttr = &_ggac
			continue
		}
	}
_fbbb:
	for {
		_fggbf, _dage := d.Token()
		if _dage != nil {
			return _dage
		}
		switch _cfega := _fggbf.(type) {
		case _b.StartElement:
			switch _cfega.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_aeeg.PageMargins = NewCT_PageMargins()
				if _gfdf := d.DecodeElement(_aeeg.PageMargins, &_cfega); _gfdf != nil {
					return _gfdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_aeeg.PageSetup = NewCT_CsPageSetup()
				if _cedc := d.DecodeElement(_aeeg.PageSetup, &_cfega); _cedc != nil {
					return _cedc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_aeeg.HeaderFooter = NewCT_HeaderFooter()
				if _cffa := d.DecodeElement(_aeeg.HeaderFooter, &_cfega); _cffa != nil {
					return _cffa
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074V\u0069\u0065\u0077 \u0025\u0076", _cfega.Name)
				if _acdcf := d.Skip(); _acdcf != nil {
					return _acdcf
				}
			}
		case _b.EndElement:
			break _fbbb
		case _b.CharData:
		}
	}
	return nil
}

type CT_SheetProtection struct {

	// Legacy Password
	PasswordAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Sheet Locked
	SheetAttr *bool

	// Objects Locked
	ObjectsAttr *bool

	// Scenarios Locked
	ScenariosAttr *bool

	// Format Cells Locked
	FormatCellsAttr *bool

	// Format Columns Locked
	FormatColumnsAttr *bool

	// Format Rows Locked
	FormatRowsAttr *bool

	// Insert Columns Locked
	InsertColumnsAttr *bool

	// Insert Rows Locked
	InsertRowsAttr *bool

	// Insert Hyperlinks Locked
	InsertHyperlinksAttr *bool

	// Delete Columns Locked
	DeleteColumnsAttr *bool

	// Delete Rows Locked
	DeleteRowsAttr *bool

	// Select Locked Cells Locked
	SelectLockedCellsAttr *bool

	// Sort Locked
	SortAttr *bool

	// AutoFilter Locked
	AutoFilterAttr *bool

	// Pivot Tables Locked
	PivotTablesAttr *bool

	// Select Unlocked Cells Locked
	SelectUnlockedCellsAttr *bool
}

func (_aabbgb *CT_DataFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcgbe := range start.Attr {
		if _dcgbe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ccgcb, _gcfc := _eb.ParseUint(_dcgbe.Value, 10, 32)
			if _gcfc != nil {
				return _gcfc
			}
			_gccg := uint32(_ccgcb)
			_aabbgb.CountAttr = &_gccg
			continue
		}
	}
_dcfad:
	for {
		_gggg, _abcb := d.Token()
		if _abcb != nil {
			return _abcb
		}
		switch _adaa := _gggg.(type) {
		case _b.StartElement:
			switch _adaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd"}:
				_bcbb := NewCT_DataField()
				if _daec := d.DecodeElement(_bcbb, &_adaa); _daec != nil {
					return _daec
				}
				_aabbgb.DataField = append(_aabbgb.DataField, _bcbb)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044a\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073 \u0025\u0076", _adaa.Name)
				if _afdf := d.Skip(); _afdf != nil {
					return _afdf
				}
			}
		case _b.EndElement:
			break _dcfad
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_Sets() *CT_Sets { _gaegf := &CT_Sets{}; return _gaegf }

// ValidateWithPath validates the Headers and its children, prefixing error messages with path
func (_acgbb *Headers) ValidateWithPath(path string) error {
	if _cccde := _acgbb.CT_RevisionHeaders.ValidateWithPath(path); _cccde != nil {
		return _cccde
	}
	return nil
}

// ValidateWithPath validates the CT_Groups and its children, prefixing error messages with path
func (_gadge *CT_Groups) ValidateWithPath(path string) error {
	for _gfadd, _abfae := range _gadge.Group {
		if _eegee := _abfae.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002fG\u0072\u006f\u0075\u0070\u005b\u0025\u0064\u005d", path, _gfadd)); _eegee != nil {
			return _eegee
		}
	}
	return nil
}

func (_ggabg *ST_UnderlineValues) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eccgbf, _edgbd := d.Token()
	if _edgbd != nil {
		return _edgbd
	}
	if _acgef, _fcabda := _eccgbf.(_b.EndElement); _fcabda && _acgef.Name == start.Name {
		*_ggabg = 1
		return nil
	}
	if _cggbdf, _bebbd := _eccgbf.(_b.CharData); !_bebbd {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eccgbf)
	} else {
		switch string(_cggbdf) {
		case "":
			*_ggabg = 0
		case "\u0073\u0069\u006e\u0067\u006c\u0065":
			*_ggabg = 1
		case "\u0064\u006f\u0075\u0062\u006c\u0065":
			*_ggabg = 2
		case "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
			*_ggabg = 3
		case "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
			*_ggabg = 4
		case "\u006e\u006f\u006e\u0065":
			*_ggabg = 5
		}
	}
	_eccgbf, _edgbd = d.Token()
	if _edgbd != nil {
		return _edgbd
	}
	if _cgbbd, _gebac := _eccgbf.(_b.EndElement); _gebac && _cgbbd.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eccgbf)
}

func (_fbgga *CT_ChartsheetViews) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ffcf:
	for {
		_fcbaa, _eadd := d.Token()
		if _eadd != nil {
			return _eadd
		}
		switch _ffcd := _fcbaa.(type) {
		case _b.StartElement:
			switch _ffcd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}:
				_ddef := NewCT_ChartsheetView()
				if _bbce := d.DecodeElement(_ddef, &_ffcd); _bbce != nil {
					return _bbce
				}
				_fbgga.SheetView = append(_fbgga.SheetView, _ddef)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbgga.ExtLst = NewCT_ExtensionList()
				if _bedb := d.DecodeElement(_fbgga.ExtLst, &_ffcd); _bedb != nil {
					return _bedb
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073h\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _ffcd.Name)
				if _cacd := d.Skip(); _cacd != nil {
					return _cacd
				}
			}
		case _b.EndElement:
			break _ffcf
		case _b.CharData:
		}
	}
	return nil
}

func (_cefbff *ST_PhoneticAlignment) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cefbff = 0
	case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
		*_cefbff = 1
	case "\u006c\u0065\u0066\u0074":
		*_cefbff = 2
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_cefbff = 3
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_cefbff = 4
	}
	return nil
}

func (_dbgaf ST_CalcMode) Validate() error { return _dbgaf.ValidateWithPath("") }

func (_eagd *CT_ColFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbgd := range start.Attr {
		if _dbgd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dggg, _egeda := _eb.ParseUint(_dbgd.Value, 10, 32)
			if _egeda != nil {
				return _egeda
			}
			_bfdc := uint32(_dggg)
			_eagd.CountAttr = &_bfdc
			continue
		}
	}
_geacb:
	for {
		_fbfa, _dcdce := d.Token()
		if _dcdce != nil {
			return _dcdce
		}
		switch _faab := _fbfa.(type) {
		case _b.StartElement:
			switch _faab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}:
				_ddgd := NewCT_Field()
				if _eedcdg := d.DecodeElement(_ddgd, &_faab); _eedcdg != nil {
					return _eedcdg
				}
				_eagd.Field = append(_eagd.Field, _ddgd)
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006cF\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _faab.Name)
				if _abdab := d.Skip(); _abdab != nil {
					return _abdab
				}
			}
		case _b.EndElement:
			break _geacb
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_FieldUsage() *CT_FieldUsage { _begcg := &CT_FieldUsage{}; return _begcg }

type CT_Colors struct {

	// Color Indexes
	IndexedColors *CT_IndexedColors

	// MRU Colors
	MruColors *CT_MRUColors
}

func (_dedbeg *ST_TimePeriod) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cbebb, _fgggac := d.Token()
	if _fgggac != nil {
		return _fgggac
	}
	if _degfbb, _bcefd := _cbebb.(_b.EndElement); _bcefd && _degfbb.Name == start.Name {
		*_dedbeg = 1
		return nil
	}
	if _dggbd, _gbgac := _cbebb.(_b.CharData); !_gbgac {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbebb)
	} else {
		switch string(_dggbd) {
		case "":
			*_dedbeg = 0
		case "\u0074\u006f\u0064a\u0079":
			*_dedbeg = 1
		case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
			*_dedbeg = 2
		case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
			*_dedbeg = 3
		case "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s":
			*_dedbeg = 4
		case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
			*_dedbeg = 5
		case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
			*_dedbeg = 6
		case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
			*_dedbeg = 7
		case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
			*_dedbeg = 8
		case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
			*_dedbeg = 9
		case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
			*_dedbeg = 10
		}
	}
	_cbebb, _fgggac = d.Token()
	if _fgggac != nil {
		return _fgggac
	}
	if _gddcag, _aaaffd := _cbebb.(_b.EndElement); _aaaffd && _gddcag.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbebb)
}

func (_fdfbc ST_SortMethod) Validate() error { return _fdfbc.ValidateWithPath("") }

type CT_Formats struct {

	// Formats Count
	CountAttr *uint32

	// PivotTable Format
	Format []*CT_Format
}

// ValidateWithPath validates the CT_Index and its children, prefixing error messages with path
func (_aaggf *CT_Index) ValidateWithPath(path string) error { return nil }

type ST_PaneState byte

// ValidateWithPath validates the CT_CfRule and its children, prefixing error messages with path
func (_gbca *CT_CfRule) ValidateWithPath(path string) error {
	if _faac := _gbca.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _faac != nil {
		return _faac
	}
	if _fggb := _gbca.OperatorAttr.ValidateWithPath(path + "\u002f\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072\u0041\u0074\u0074\u0072"); _fggb != nil {
		return _fggb
	}
	if _beec := _gbca.TimePeriodAttr.ValidateWithPath(path + "\u002fT\u0069m\u0065\u0050\u0065\u0072\u0069\u006f\u0064\u0041\u0074\u0074\u0072"); _beec != nil {
		return _beec
	}
	if _gbca.ColorScale != nil {
		if _gbae := _gbca.ColorScale.ValidateWithPath(path + "/\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"); _gbae != nil {
			return _gbae
		}
	}
	if _gbca.DataBar != nil {
		if _bdaaf := _gbca.DataBar.ValidateWithPath(path + "\u002f\u0044\u0061\u0074\u0061\u0042\u0061\u0072"); _bdaaf != nil {
			return _bdaaf
		}
	}
	if _gbca.IconSet != nil {
		if _acgb := _gbca.IconSet.ValidateWithPath(path + "\u002f\u0049\u0063\u006f\u006e\u0053\u0065\u0074"); _acgb != nil {
			return _acgb
		}
	}
	if _gbca.ExtLst != nil {
		if _fccdf := _gbca.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fccdf != nil {
			return _fccdf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Filter and its children, prefixing error messages with path
func (_ddeff *CT_Filter) ValidateWithPath(path string) error { return nil }

func (_acgfga ST_RefMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_acgfga.String(), start)
}

func (_fefdd ST_Objects) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fefdd.String(), start)
}

// ValidateWithPath validates the CT_Comments and its children, prefixing error messages with path
func (_bcef *CT_Comments) ValidateWithPath(path string) error {
	if _efcac := _bcef.Authors.ValidateWithPath(path + "\u002f\u0041\u0075\u0074\u0068\u006f\u0072\u0073"); _efcac != nil {
		return _efcac
	}
	if _egbb := _bcef.CommentList.ValidateWithPath(path + "\u002f\u0043\u006fm\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"); _egbb != nil {
		return _egbb
	}
	if _bcef.ExtLst != nil {
		if _gbdca := _bcef.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbdca != nil {
			return _gbdca
		}
	}
	return nil
}

func (_agcde *CT_SortState) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _affgcc := range start.Attr {
		if _affgcc.Name.Local == "\u0063\u006f\u006c\u0075\u006d\u006e\u0053\u006f\u0072\u0074" {
			_afgbf, _fbafdd := _eb.ParseBool(_affgcc.Value)
			if _fbafdd != nil {
				return _fbafdd
			}
			_agcde.ColumnSortAttr = &_afgbf
			continue
		}
		if _affgcc.Name.Local == "\u0063\u0061\u0073\u0065\u0053\u0065\u006e\u0073\u0069\u0074\u0069\u0076\u0065" {
			_dbbgfd, _ddfdeb := _eb.ParseBool(_affgcc.Value)
			if _ddfdeb != nil {
				return _ddfdeb
			}
			_agcde.CaseSensitiveAttr = &_dbbgfd
			continue
		}
		if _affgcc.Name.Local == "\u0073\u006f\u0072\u0074\u004d\u0065\u0074\u0068\u006f\u0064" {
			_agcde.SortMethodAttr.UnmarshalXMLAttr(_affgcc)
			continue
		}
		if _affgcc.Name.Local == "\u0072\u0065\u0066" {
			_fgbdeb, _egddc := _affgcc.Value, error(nil)
			if _egddc != nil {
				return _egddc
			}
			_agcde.RefAttr = _fgbdeb
			continue
		}
	}
_bfgbcb:
	for {
		_geaacc, _fdeeb := d.Token()
		if _fdeeb != nil {
			return _fdeeb
		}
		switch _cfbfd := _geaacc.(type) {
		case _b.StartElement:
			switch _cfbfd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e"}:
				_fgbgad := NewCT_SortCondition()
				if _cgeed := d.DecodeElement(_fgbgad, &_cfbfd); _cgeed != nil {
					return _cgeed
				}
				_agcde.SortCondition = append(_agcde.SortCondition, _fgbgad)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agcde.ExtLst = NewCT_ExtensionList()
				if _cdddee := d.DecodeElement(_agcde.ExtLst, &_cfbfd); _cdddee != nil {
					return _cdddee
				}
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u006f\u0072t\u0053\u0074\u0061\u0074\u0065\u0020\u0025\u0076", _cfbfd.Name)
				if _fcbce := d.Skip(); _fcbce != nil {
					return _fcbce
				}
			}
		case _b.EndElement:
			break _bfgbcb
		case _b.CharData:
		}
	}
	return nil
}

type CT_RevisionDefinedName struct {

	// Local Name Sheet Id
	LocalSheetIdAttr *uint32

	// Custom View
	CustomViewAttr *bool

	// Name
	NameAttr string

	// Function
	FunctionAttr *bool

	// Old Function
	OldFunctionAttr *bool

	// Function Group Id
	FunctionGroupIdAttr *uint8

	// Old Function Group Id
	OldFunctionGroupIdAttr *uint8

	// Shortcut Key
	ShortcutKeyAttr *uint8

	// Old Short Cut Key
	OldShortcutKeyAttr *uint8

	// Named Range Hidden
	HiddenAttr *bool

	// Old Hidden
	OldHiddenAttr *bool

	// New Custom Menu
	CustomMenuAttr *string

	// Old Custom Menu Text
	OldCustomMenuAttr *string

	// Description
	DescriptionAttr *string

	// Old Description
	OldDescriptionAttr *string

	// New Help Topic
	HelpAttr *string

	// Old Help Topic
	OldHelpAttr *string

	// Status Bar
	StatusBarAttr *string

	// Old Status Bar
	OldStatusBarAttr *string

	// Name Comment
	CommentAttr *string

	// Old Name Comment
	OldCommentAttr *string

	// Formula
	Formula *string

	// Old Formula
	OldFormula *string
	ExtLst     *CT_ExtensionList
	RIdAttr    *uint32
	UaAttr     *bool
	RaAttr     *bool
}

// Validate validates the CT_RangeSets and its children
func (_agfbf *CT_RangeSets) Validate() error {
	return _agfbf.ValidateWithPath("\u0043\u0054\u005fR\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073")
}

// Validate validates the CT_FieldUsage and its children
func (_afebc *CT_FieldUsage) Validate() error {
	return _afebc.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065")
}

// Validate validates the CT_RowFields and its children
func (_fgabf *CT_RowFields) Validate() error {
	return _fgabf.ValidateWithPath("\u0043\u0054\u005fR\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073")
}

const (
	ST_DdeValueTypeUnset ST_DdeValueType = 0
	ST_DdeValueTypeNil   ST_DdeValueType = 1
	ST_DdeValueTypeB     ST_DdeValueType = 2
	ST_DdeValueTypeN     ST_DdeValueType = 3
	ST_DdeValueTypeE     ST_DdeValueType = 4
	ST_DdeValueTypeStr   ST_DdeValueType = 5
)

// Validate validates the CT_WebPublishObjects and its children
func (_eefga *CT_WebPublishObjects) Validate() error {
	return _eefga.ValidateWithPath("C\u0054_\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u004f\u0062\u006aec\u0074\u0073")
}

// Validate validates the CT_DefinedNames and its children
func (_ggae *CT_DefinedNames) Validate() error {
	return _ggae.ValidateWithPath("\u0043T\u005fD\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073")
}

func (_bfbde ST_SortMethod) String() string {
	switch _bfbde {
	case 0:
		return ""
	case 1:
		return "\u0073\u0074\u0072\u006f\u006b\u0065"
	case 2:
		return "\u0070\u0069\u006e\u0059\u0069\u006e"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

func (_bfag *CT_Colors) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bfag.IndexedColors != nil {
		_befc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0069\u006e\u0064e\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073"}}
		e.EncodeElement(_bfag.IndexedColors, _befc)
	}
	if _bfag.MruColors != nil {
		_abfgb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003am\u0072\u0075\u0043\u006f\u006c\u006f\u0072\u0073"}}
		e.EncodeElement(_bfag.MruColors, _abfgb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CustomWorkbookView and its children, prefixing error messages with path
func (_gecda *CT_CustomWorkbookView) ValidateWithPath(path string) error {
	if !_bb.ST_GuidPatternRe.MatchString(_gecda.GuidAttr) {
		return _ec.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _bb.ST_GuidPatternRe, _gecda.GuidAttr)
	}
	if _caegd := _gecda.ShowCommentsAttr.ValidateWithPath(path + "\u002f\u0053\u0068\u006f\u0077\u0043\u006f\u006d\u006d\u0065\u006e\u0074s\u0041\u0074\u0074\u0072"); _caegd != nil {
		return _caegd
	}
	if _gecg := _gecda.ShowObjectsAttr.ValidateWithPath(path + "\u002f\u0053h\u006f\u0077\u004fb\u006a\u0065\u0063\u0074\u0073\u0041\u0074\u0074\u0072"); _gecg != nil {
		return _gecg
	}
	if _gecda.ExtLst != nil {
		if _gbcf := _gecda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbcf != nil {
			return _gbcf
		}
	}
	return nil
}

// Validate validates the Chartsheet and its children
func (_afaae *Chartsheet) Validate() error {
	return _afaae.ValidateWithPath("\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074")
}

// ValidateWithPath validates the CT_GroupLevels and its children, prefixing error messages with path
func (_bdef *CT_GroupLevels) ValidateWithPath(path string) error {
	for _ffgbb, _fdeb := range _bdef.GroupLevel {
		if _bdfedb := _fdeb.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0047\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065l\u005b\u0025\u0064\u005d", path, _ffgbb)); _bdfedb != nil {
			return _bdfedb
		}
	}
	return nil
}

func NewCT_ExternalDefinedName() *CT_ExternalDefinedName {
	_ggcb := &CT_ExternalDefinedName{}
	return _ggcb
}

func (_cgcce *ST_TableType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cgcce = 0
	case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
		*_cgcce = 1
	case "\u0078\u006d\u006c":
		*_cgcce = 2
	case "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065":
		*_cgcce = 3
	}
	return nil
}

// ValidateWithPath validates the CT_WebPublishing and its children, prefixing error messages with path
func (_fedbe *CT_WebPublishing) ValidateWithPath(path string) error {
	if _caedcf := _fedbe.TargetScreenSizeAttr.ValidateWithPath(path + "/\u0054\u0061\u0072\u0067et\u0053c\u0072\u0065\u0065\u006e\u0053i\u007a\u0065\u0041\u0074\u0074\u0072"); _caedcf != nil {
		return _caedcf
	}
	return nil
}

func NewCT_MapInfo() *CT_MapInfo { _feec := &CT_MapInfo{}; return _feec }

type ST_SmartTagShow byte

type ST_CellComments byte

type ST_PhoneticType byte

// ValidateWithPath validates the ExternalLink and its children, prefixing error messages with path
func (_cbdfgc *ExternalLink) ValidateWithPath(path string) error {
	if _gaace := _cbdfgc.CT_ExternalLink.ValidateWithPath(path); _gaace != nil {
		return _gaace
	}
	return nil
}

func (_fgbd *CT_CalculatedItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _febf := range start.Attr {
		if _febf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ebg, _ceb := _eb.ParseUint(_febf.Value, 10, 32)
			if _ceb != nil {
				return _ceb
			}
			_afe := uint32(_ebg)
			_fgbd.CountAttr = &_afe
			continue
		}
	}
_aecf:
	for {
		_ece, _dacbc := d.Token()
		if _dacbc != nil {
			return _dacbc
		}
		switch _gcb := _ece.(type) {
		case _b.StartElement:
			switch _gcb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d"}:
				_gdaf := NewCT_CalculatedItem()
				if _faec := d.DecodeElement(_gdaf, &_gcb); _faec != nil {
					return _faec
				}
				_fgbd.CalculatedItem = append(_fgbd.CalculatedItem, _gdaf)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006ca\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _gcb.Name)
				if _eeec := d.Skip(); _eeec != nil {
					return _eeec
				}
			}
		case _b.EndElement:
			break _aecf
		case _b.CharData:
		}
	}
	return nil
}

type CT_SheetPr struct {

	// Synch Horizontal
	SyncHorizontalAttr *bool

	// Synch Vertical
	SyncVerticalAttr *bool

	// Synch Reference
	SyncRefAttr *string

	// Transition Formula Evaluation
	TransitionEvaluationAttr *bool

	// Transition Formula Entry
	TransitionEntryAttr *bool

	// Published
	PublishedAttr *bool

	// Code Name
	CodeNameAttr *string

	// Filter Mode
	FilterModeAttr *bool

	// Enable Conditional Formatting Calculations
	EnableFormatConditionsCalculationAttr *bool

	// Sheet Tab Color
	TabColor *CT_Color

	// Outline Properties
	OutlinePr *CT_OutlinePr

	// Page Setup Properties
	PageSetUpPr *CT_PageSetUpPr
}

// ValidateWithPath validates the CT_PivotHierarchies and its children, prefixing error messages with path
func (_eabab *CT_PivotHierarchies) ValidateWithPath(path string) error {
	for _gaffa, _dbgcdf := range _eabab.PivotHierarchy {
		if _bfbcc := _dbgcdf.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0050\u0069vo\u0074H\u0069\u0065\u0072\u0061\u0072c\u0068\u0079\u005b\u0025\u0064\u005d", path, _gaffa)); _bfbcc != nil {
			return _bfbcc
		}
	}
	return nil
}

type ST_DataValidationImeMode byte

func (_dcgefg *CT_IgnoredError) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abfce := range start.Attr {
		if _abfce.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_cffdd, _bcccc := ParseSliceST_Sqref(_abfce.Value)
			if _bcccc != nil {
				return _bcccc
			}
			_dcgefg.SqrefAttr = _cffdd
			continue
		}
		if _abfce.Name.Local == "\u0065v\u0061\u006c\u0045\u0072\u0072\u006fr" {
			_bccbg, _gaecac := _eb.ParseBool(_abfce.Value)
			if _gaecac != nil {
				return _gaecac
			}
			_dcgefg.EvalErrorAttr = &_bccbg
			continue
		}
		if _abfce.Name.Local == "\u0074\u0077o\u0044\u0069\u0067i\u0074\u0054\u0065\u0078\u0074\u0059\u0065\u0061\u0072" {
			_eacdd, _dfcf := _eb.ParseBool(_abfce.Value)
			if _dfcf != nil {
				return _dfcf
			}
			_dcgefg.TwoDigitTextYearAttr = &_eacdd
			continue
		}
		if _abfce.Name.Local == "\u006eu\u006db\u0065\u0072\u0053\u0074\u006fr\u0065\u0064A\u0073\u0054\u0065\u0078\u0074" {
			_cbede, _gcbfa := _eb.ParseBool(_abfce.Value)
			if _gcbfa != nil {
				return _gcbfa
			}
			_dcgefg.NumberStoredAsTextAttr = &_cbede
			continue
		}
		if _abfce.Name.Local == "\u0066o\u0072\u006d\u0075\u006c\u0061" {
			_gagbc, _ddffd := _eb.ParseBool(_abfce.Value)
			if _ddffd != nil {
				return _ddffd
			}
			_dcgefg.FormulaAttr = &_gagbc
			continue
		}
		if _abfce.Name.Local == "\u0066\u006f\u0072m\u0075\u006c\u0061\u0052\u0061\u006e\u0067\u0065" {
			_efgd, _bbagg := _eb.ParseBool(_abfce.Value)
			if _bbagg != nil {
				return _bbagg
			}
			_dcgefg.FormulaRangeAttr = &_efgd
			continue
		}
		if _abfce.Name.Local == "\u0075n\u006co\u0063\u006b\u0065\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061" {
			_aaeec, _eggg := _eb.ParseBool(_abfce.Value)
			if _eggg != nil {
				return _eggg
			}
			_dcgefg.UnlockedFormulaAttr = &_aaeec
			continue
		}
		if _abfce.Name.Local == "\u0065m\u0070t\u0079\u0043\u0065\u006c\u006cR\u0065\u0066e\u0072\u0065\u006e\u0063\u0065" {
			_aegef, _bfbgc := _eb.ParseBool(_abfce.Value)
			if _bfbgc != nil {
				return _bfbgc
			}
			_dcgefg.EmptyCellReferenceAttr = &_aegef
			continue
		}
		if _abfce.Name.Local == "\u006ci\u0073t\u0044\u0061\u0074\u0061\u0056a\u006c\u0069d\u0061\u0074\u0069\u006f\u006e" {
			_cafaf, _bffbgg := _eb.ParseBool(_abfce.Value)
			if _bffbgg != nil {
				return _bffbgg
			}
			_dcgefg.ListDataValidationAttr = &_cafaf
			continue
		}
		if _abfce.Name.Local == "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e" {
			_gegdc, _fcafe := _eb.ParseBool(_abfce.Value)
			if _fcafe != nil {
				return _fcafe
			}
			_dcgefg.CalculatedColumnAttr = &_gegdc
			continue
		}
	}
	for {
		_gafdd, _dcgea := d.Token()
		if _dcgea != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0049\u0067\u006e\u006f\u0072\u0065d\u0045\u0072\u0072o\u0072:\u0020\u0025\u0073", _dcgea)
		}
		if _afceff, _cbafcb := _gafdd.(_b.EndElement); _cbafcb && _afceff.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cedfd *CT_ExternalDefinedName) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _cedfd.NameAttr)})
	if _cedfd.RefersToAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066\u0065\u0072\u0073\u0054\u006f"}, Value: _ec.Sprintf("\u0025\u0076", *_cedfd.RefersToAttr)})
	}
	if _cedfd.SheetIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_cedfd.SheetIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_FilterColumn() *CT_FilterColumn { _gafccg := &CT_FilterColumn{}; return _gafccg }

func (_bbffec ST_SortMethod) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bbffec.String(), start)
}

// Validate validates the CT_RevisionQueryTableField and its children
func (_ebgdge *CT_RevisionQueryTableField) Validate() error {
	return _ebgdge.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eQ\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046i\u0065\u006c\u0064")
}

func (_caeg *CT_CalculatedMembers) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _caeg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_caeg.CountAttr)})
	}
	e.EncodeToken(start)
	_fbfe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063al\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072"}}
	for _, _fgad := range _caeg.CalculatedMember {
		e.EncodeElement(_fgad, _fbfe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PivotAreas and its children
func (_bfed *CT_PivotAreas) Validate() error {
	return _bfed.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073")
}

func (_dfceg *CT_ExternalSheetDataSet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ebacd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"}}
	for _, _bffaa := range _dfceg.SheetData {
		e.EncodeElement(_bffaa, _ebacd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gfdedc ST_rwColActionType) String() string {
	switch _gfdedc {
	case 0:
		return ""
	case 1:
		return "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw"
	case 2:
		return "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw"
	case 3:
		return "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl"
	case 4:
		return "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl"
	}
	return ""
}

func (_ggfbbb *CT_SingleXmlCells) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ddegd:
	for {
		_bfddde, _eagecc := d.Token()
		if _eagecc != nil {
			return _eagecc
		}
		switch _fdbfaa := _bfddde.(type) {
		case _b.StartElement:
			switch _fdbfaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}:
				_bfeab := NewCT_SingleXmlCell()
				if _fdfdc := d.DecodeElement(_bfeab, &_fdbfaa); _fdfdc != nil {
					return _fdfdc
				}
				_ggfbbb.SingleXmlCell = append(_ggfbbb.SingleXmlCell, _bfeab)
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c\u0073\u0020\u0025\u0076", _fdbfaa.Name)
				if _ecadg := d.Skip(); _ecadg != nil {
					return _ecadg
				}
			}
		case _b.EndElement:
			break _ddegd
		case _b.CharData:
		}
	}
	return nil
}

func (_ggfeb *CT_RevisionFormatting) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _ggfeb.SheetIdAttr)})
	if _ggfeb.XfDxfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0066\u0044x\u0066"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ggfeb.XfDxfAttr))})
	}
	if _ggfeb.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ggfeb.SAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _ec.Sprintf("\u0025\u0076", _ggfeb.SqrefAttr)})
	if _ggfeb.StartAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0061r\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ggfeb.StartAttr)})
	}
	if _ggfeb.LengthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u006e\u0067\u0074\u0068"}, Value: _ec.Sprintf("\u0025\u0076", *_ggfeb.LengthAttr)})
	}
	e.EncodeToken(start)
	if _ggfeb.Dxf != nil {
		_decec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0078\u0066"}}
		e.EncodeElement(_ggfeb.Dxf, _decec)
	}
	if _ggfeb.ExtLst != nil {
		_fcdabb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ggfeb.ExtLst, _fcdabb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Format and its children
func (_agfdb *CT_Format) Validate() error {
	return _agfdb.ValidateWithPath("\u0043T\u005f\u0046\u006f\u0072\u006d\u0061t")
}

func (_gffgg ST_ExternalConnectionType) ValidateWithPath(path string) error {
	switch _gffgg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gffgg))
	}
	return nil
}

func (_dde *CT_AutoFilter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dde.RefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", *_dde.RefAttr)})
	}
	e.EncodeToken(start)
	if _dde.FilterColumn != nil {
		_aaf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003af\u0069\u006c\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e"}}
		for _, _bed := range _dde.FilterColumn {
			e.EncodeElement(_bed, _aaf)
		}
	}
	if _dde.SortState != nil {
		_gcg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_dde.SortState, _gcg)
	}
	if _dde.ExtLst != nil {
		_gga := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dde.ExtLst, _gga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Connections and its children, prefixing error messages with path
func (_gaffg *CT_Connections) ValidateWithPath(path string) error {
	for _ceab, _dadd := range _gaffg.Connection {
		if _ccbe := _dadd.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006fn\u005b\u0025\u0064\u005d", path, _ceab)); _ccbe != nil {
			return _ccbe
		}
	}
	return nil
}

func (_agcad *CT_RangePr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _agcad.AutoStartAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061u\u0074\u006f\u0053\u0074\u0061\u0072t"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_agcad.AutoStartAttr))})
	}
	if _agcad.AutoEndAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061u\u0074\u006f\u0045\u006e\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_agcad.AutoEndAttr))})
	}
	if _agcad.GroupByAttr != ST_GroupByUnset {
		_ecdfac, _fgegb := _agcad.GroupByAttr.MarshalXMLAttr(_b.Name{Local: "\u0067r\u006f\u0075\u0070\u0042\u0079"})
		if _fgegb != nil {
			return _fgegb
		}
		start.Attr = append(start.Attr, _ecdfac)
	}
	if _agcad.StartNumAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0061\u0072\u0074\u004e\u0075\u006d"}, Value: _ec.Sprintf("\u0025\u0076", *_agcad.StartNumAttr)})
	}
	if _agcad.EndNumAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0064\u004e\u0075\u006d"}, Value: _ec.Sprintf("\u0025\u0076", *_agcad.EndNumAttr)})
	}
	if _agcad.StartDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073t\u0061\u0072\u0074\u0044\u0061\u0074e"}, Value: _ec.Sprintf("\u0025\u0076", *_agcad.StartDateAttr)})
	}
	if _agcad.EndDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065n\u0064\u0044\u0061\u0074\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_agcad.EndDateAttr)})
	}
	if _agcad.GroupIntervalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u006f\u0075\u0070\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_agcad.GroupIntervalAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_RangePr() *CT_RangePr { _ebagf := &CT_RangePr{}; return _ebagf }

func (_ecdag ST_DdeValueType) ValidateWithPath(path string) error {
	switch _ecdag {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecdag))
	}
	return nil
}

func (_eagaaf ST_MdxFunctionType) String() string {
	switch _eagaaf {
	case 0:
		return ""
	case 1:
		return "\u006d"
	case 2:
		return "\u0076"
	case 3:
		return "\u0073"
	case 4:
		return "\u0063"
	case 5:
		return "\u0072"
	case 6:
		return "\u0070"
	case 7:
		return "\u006b"
	}
	return ""
}

func (_fgccd *CT_Mdx) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fgccd.FAttr = ST_MdxFunctionType(1)
	for _, _geddd := range start.Attr {
		if _geddd.Name.Local == "\u006e" {
			_abdabe, _edcee := _eb.ParseUint(_geddd.Value, 10, 32)
			if _edcee != nil {
				return _edcee
			}
			_fgccd.NAttr = uint32(_abdabe)
			continue
		}
		if _geddd.Name.Local == "\u0066" {
			_fgccd.FAttr.UnmarshalXMLAttr(_geddd)
			continue
		}
	}
_adcefc:
	for {
		_ddcca, _egefeg := d.Token()
		if _egefeg != nil {
			return _egefeg
		}
		switch _fbagb := _ddcca.(type) {
		case _b.StartElement:
			switch _fbagb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				_fgccd.T = NewCT_MdxTuple()
				if _cafb := d.DecodeElement(_fgccd.T, &_fbagb); _cafb != nil {
					return _cafb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0073"}:
				_fgccd.Ms = NewCT_MdxSet()
				if _ffeb := d.DecodeElement(_fgccd.Ms, &_fbagb); _ffeb != nil {
					return _ffeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}:
				_fgccd.P = NewCT_MdxMemeberProp()
				if _addbd := d.DecodeElement(_fgccd.P, &_fbagb); _addbd != nil {
					return _addbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b"}:
				_fgccd.K = NewCT_MdxKPI()
				if _bggcg := d.DecodeElement(_fgccd.K, &_fbagb); _bggcg != nil {
					return _bggcg
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u0020\u0025\u0076", _fbagb.Name)
				if _cebbe := d.Skip(); _cebbe != nil {
					return _cebbe
				}
			}
		case _b.EndElement:
			break _adcefc
		case _b.CharData:
		}
	}
	return nil
}

func (_cddbe *ST_PrintError) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cddbe = 0
	case "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d":
		*_cddbe = 1
	case "\u0062\u006c\u0061n\u006b":
		*_cddbe = 2
	case "\u0064\u0061\u0073\u0068":
		*_cddbe = 3
	case "\u004e\u0041":
		*_cddbe = 4
	}
	return nil
}

// Validate validates the CT_ObjectAnchor and its children
func (_ffgeef *CT_ObjectAnchor) Validate() error {
	return _ffgeef.ValidateWithPath("\u0043T\u005fO\u0062\u006a\u0065\u0063\u0074\u0041\u006e\u0063\u0068\u006f\u0072")
}

func (_gbccgc *CT_QueryCache) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcfddf := range start.Attr {
		if _dcfddf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bcggf, _bbeab := _eb.ParseUint(_dcfddf.Value, 10, 32)
			if _bbeab != nil {
				return _bbeab
			}
			_dfeafc := uint32(_bcggf)
			_gbccgc.CountAttr = &_dfeafc
			continue
		}
	}
_fcfgcc:
	for {
		_efdca, _eaegeg := d.Token()
		if _eaegeg != nil {
			return _eaegeg
		}
		switch _gagece := _efdca.(type) {
		case _b.StartElement:
			switch _gagece.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065r\u0079"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065r\u0079"}:
				_bbgcb := NewCT_Query()
				if _eedgba := d.DecodeElement(_bbgcb, &_gagece); _eedgba != nil {
					return _eedgba
				}
				_gbccgc.Query = append(_gbccgc.Query, _bbgcb)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051u\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065 \u0025\u0076", _gagece.Name)
				if _bfdcf := d.Skip(); _bfdcf != nil {
					return _bfdcf
				}
			}
		case _b.EndElement:
			break _fcfgcc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalBook and its children, prefixing error messages with path
func (_bfdcd *CT_ExternalBook) ValidateWithPath(path string) error {
	if _bfdcd.SheetNames != nil {
		if _gfedd := _bfdcd.SheetNames.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"); _gfedd != nil {
			return _gfedd
		}
	}
	if _bfdcd.DefinedNames != nil {
		if _dgcec := _bfdcd.DefinedNames.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"); _dgcec != nil {
			return _dgcec
		}
	}
	if _bfdcd.SheetDataSet != nil {
		if _becbc := _bfdcd.SheetDataSet.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"); _becbc != nil {
			return _becbc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableStyleInfo and its children, prefixing error messages with path
func (_dbfcb *CT_TableStyleInfo) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_Hyperlink and its children, prefixing error messages with path
func (_ecfca *CT_Hyperlink) ValidateWithPath(path string) error { return nil }

func (_dcfac *CT_CustomWorkbookView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dcfac.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _cbgd := range start.Attr {
		if _cbgd.Name.Local == "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c" {
			_agdb, _fcgd := _eb.ParseBool(_cbgd.Value)
			if _fcgd != nil {
				return _fcgd
			}
			_dcfac.ShowVerticalScrollAttr = &_agdb
			continue
		}
		if _cbgd.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073" {
			_gdaea, _bfbff := _eb.ParseBool(_cbgd.Value)
			if _bfbff != nil {
				return _bfbff
			}
			_dcfac.ShowSheetTabsAttr = &_gdaea
			continue
		}
		if _cbgd.Name.Local == "\u0067\u0075\u0069\u0064" {
			_cdfe, _ddbfa := _cbgd.Value, error(nil)
			if _ddbfa != nil {
				return _ddbfa
			}
			_dcfac.GuidAttr = _cdfe
			continue
		}
		if _cbgd.Name.Local == "\u0078W\u0069\u006e\u0064\u006f\u0077" {
			_bcgfc, _bcddb := _eb.ParseInt(_cbgd.Value, 10, 32)
			if _bcddb != nil {
				return _bcddb
			}
			_ddgc := int32(_bcgfc)
			_dcfac.XWindowAttr = &_ddgc
			continue
		}
		if _cbgd.Name.Local == "\u006d\u0065\u0072\u0067\u0065\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c" {
			_fbcad, _cdda := _eb.ParseUint(_cbgd.Value, 10, 32)
			if _cdda != nil {
				return _cdda
			}
			_egcb := uint32(_fbcad)
			_dcfac.MergeIntervalAttr = &_egcb
			continue
		}
		if _cbgd.Name.Local == "\u0079W\u0069\u006e\u0064\u006f\u0077" {
			_bfegb, _agdc := _eb.ParseInt(_cbgd.Value, 10, 32)
			if _agdc != nil {
				return _agdc
			}
			_bfade := int32(_bfegb)
			_dcfac.YWindowAttr = &_bfade
			continue
		}
		if _cbgd.Name.Local == "\u006f\u006e\u006c\u0079\u0053\u0079\u006e\u0063" {
			_beb, _gfbbd := _eb.ParseBool(_cbgd.Value)
			if _gfbbd != nil {
				return _gfbbd
			}
			_dcfac.OnlySyncAttr = &_beb
			continue
		}
		if _cbgd.Name.Local == "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068" {
			_dafg, _caed := _eb.ParseUint(_cbgd.Value, 10, 32)
			if _caed != nil {
				return _caed
			}
			_dcfac.WindowWidthAttr = uint32(_dafg)
			continue
		}
		if _cbgd.Name.Local == "i\u006ec\u006c\u0075\u0064\u0065\u0050\u0072\u0069\u006et\u0053\u0065\u0074\u0074in\u0067\u0073" {
			_ddab, _effb := _eb.ParseBool(_cbgd.Value)
			if _effb != nil {
				return _effb
			}
			_dcfac.IncludePrintSettingsAttr = &_ddab
			continue
		}
		if _cbgd.Name.Local == "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074" {
			_fefb, _gfbfa := _eb.ParseUint(_cbgd.Value, 10, 32)
			if _gfbfa != nil {
				return _gfbfa
			}
			_dcfac.WindowHeightAttr = uint32(_fefb)
			continue
		}
		if _cbgd.Name.Local == "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f" {
			_adfg, _bcdf := _eb.ParseUint(_cbgd.Value, 10, 32)
			if _bcdf != nil {
				return _bcdf
			}
			_abaf := uint32(_adfg)
			_dcfac.TabRatioAttr = &_abaf
			continue
		}
		if _cbgd.Name.Local == "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0075l\u0061\u0042\u0061\u0072" {
			_cedaf, _gcbf := _eb.ParseBool(_cbgd.Value)
			if _gcbf != nil {
				return _gcbf
			}
			_dcfac.ShowFormulaBarAttr = &_cedaf
			continue
		}
		if _cbgd.Name.Local == "\u0063h\u0061n\u0067\u0065\u0073\u0053\u0061\u0076\u0065\u0064\u0057\u0069\u006e" {
			_bggb, _efdd := _eb.ParseBool(_cbgd.Value)
			if _efdd != nil {
				return _efdd
			}
			_dcfac.ChangesSavedWinAttr = &_bggb
			continue
		}
		if _cbgd.Name.Local == "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d" {
			_agecg, _abab := _eb.ParseBool(_cbgd.Value)
			if _abab != nil {
				return _abab
			}
			_dcfac.MaximizedAttr = &_agecg
			continue
		}
		if _cbgd.Name.Local == "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_dcfac.ShowCommentsAttr.UnmarshalXMLAttr(_cbgd)
			continue
		}
		if _cbgd.Name.Local == "\u0061\u0075\u0074\u006f\u0055\u0070\u0064\u0061\u0074\u0065" {
			_bbad, _dbbgf := _eb.ParseBool(_cbgd.Value)
			if _dbbgf != nil {
				return _dbbgf
			}
			_dcfac.AutoUpdateAttr = &_bbad
			continue
		}
		if _cbgd.Name.Local == "\u0061\u0063\u0074\u0069\u0076\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_ffdc, _eagbc := _eb.ParseUint(_cbgd.Value, 10, 32)
			if _eagbc != nil {
				return _eagbc
			}
			_dcfac.ActiveSheetIdAttr = uint32(_ffdc)
			continue
		}
		if _cbgd.Name.Local == "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c" {
			_ddfcg, _dgec := _eb.ParseBool(_cbgd.Value)
			if _dgec != nil {
				return _dgec
			}
			_dcfac.ShowHorizontalScrollAttr = &_ddfcg
			continue
		}
		if _cbgd.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0074\u0061\u0074\u0075\u0073\u0062\u0061\u0072" {
			_ddae, _acde := _eb.ParseBool(_cbgd.Value)
			if _acde != nil {
				return _acde
			}
			_dcfac.ShowStatusbarAttr = &_ddae
			continue
		}
		if _cbgd.Name.Local == "\u0070\u0065\u0072s\u006f\u006e\u0061\u006c\u0056\u0069\u0065\u0077" {
			_cfdb, _gbgf := _eb.ParseBool(_cbgd.Value)
			if _gbgf != nil {
				return _gbgf
			}
			_dcfac.PersonalViewAttr = &_cfdb
			continue
		}
		if _cbgd.Name.Local == "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d" {
			_ebfge, _gdgdd := _eb.ParseBool(_cbgd.Value)
			if _gdgdd != nil {
				return _gdgdd
			}
			_dcfac.MinimizedAttr = &_ebfge
			continue
		}
		if _cbgd.Name.Local == "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073" {
			_dcfac.ShowObjectsAttr.UnmarshalXMLAttr(_cbgd)
			continue
		}
		if _cbgd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_badeb, _dcdead := _cbgd.Value, error(nil)
			if _dcdead != nil {
				return _dcdead
			}
			_dcfac.NameAttr = _badeb
			continue
		}
		if _cbgd.Name.Local == "\u0069\u006e\u0063\u006cud\u0065\u0048\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0043\u006f\u006c" {
			_gfgcb, _febbe := _eb.ParseBool(_cbgd.Value)
			if _febbe != nil {
				return _febbe
			}
			_dcfac.IncludeHiddenRowColAttr = &_gfgcb
			continue
		}
	}
_ddfb:
	for {
		_baea, _abebe := d.Token()
		if _abebe != nil {
			return _abebe
		}
		switch _cgbgc := _baea.(type) {
		case _b.StartElement:
			switch _cgbgc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcfac.ExtLst = NewCT_ExtensionList()
				if _ffcg := d.DecodeElement(_dcfac.ExtLst, &_cgbgc); _ffcg != nil {
					return _ffcg
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _cgbgc.Name)
				if _agbf := d.Skip(); _agbf != nil {
					return _agbf
				}
			}
		case _b.EndElement:
			break _ddfb
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Col and its children
func (_aeba *CT_Col) Validate() error {
	return _aeba.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c")
}

// Validate validates the CT_FontScheme and its children
func (_bfacf *CT_FontScheme) Validate() error {
	return _bfacf.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065")
}

func (_fffcb *CT_TextField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efegeg := range start.Attr {
		if _efegeg.Name.Local == "\u0074\u0079\u0070\u0065" {
			_fffcb.TypeAttr.UnmarshalXMLAttr(_efegeg)
			continue
		}
		if _efegeg.Name.Local == "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_fcdccf, _ddaae := _eb.ParseUint(_efegeg.Value, 10, 32)
			if _ddaae != nil {
				return _ddaae
			}
			_agfbfa := uint32(_fcdccf)
			_fffcb.PositionAttr = &_agfbfa
			continue
		}
	}
	for {
		_fbgca, _bceag := d.Token()
		if _bceag != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065x\u0074\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0073", _bceag)
		}
		if _fceab, _ddabeg := _fbgca.(_b.EndElement); _ddabeg && _fceab.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_PivotField struct {

	// Field Name
	NameAttr *string

	// Axis
	AxisAttr ST_Axis

	// Data Field
	DataFieldAttr *bool

	// Custom Subtotal Caption
	SubtotalCaptionAttr *string

	// Show PivotField Header Drop Downs
	ShowDropDownsAttr *bool

	// Hidden Level
	HiddenLevelAttr *bool

	// Unique Member Property
	UniqueMemberPropertyAttr *string

	// Compact
	CompactAttr *bool

	// All Items Expanded
	AllDrilledAttr *bool

	// Number Format Id
	NumFmtIdAttr *uint32

	// Outline Items
	OutlineAttr *bool

	// Subtotals At Top
	SubtotalTopAttr *bool

	// Drag To Row
	DragToRowAttr *bool

	// Drag To Column
	DragToColAttr *bool

	// Multiple Field Filters
	MultipleItemSelectionAllowedAttr *bool

	// Drag Field to Page
	DragToPageAttr *bool

	// Field Can Drag to Data
	DragToDataAttr *bool

	// Drag Off
	DragOffAttr *bool

	// Show All Items
	ShowAllAttr *bool

	// Insert Blank Row
	InsertBlankRowAttr *bool

	// Server-based Page Field
	ServerFieldAttr *bool

	// Insert Item Page Break
	InsertPageBreakAttr *bool

	// Auto Show
	AutoShowAttr *bool

	// Top Auto Show
	TopAutoShowAttr *bool

	// Hide New Items
	HideNewItemsAttr *bool

	// Measure Filter
	MeasureFilterAttr *bool

	// Inclusive Manual Filter
	IncludeNewItemsInFilterAttr *bool

	// Items Per Page Count
	ItemPageCountAttr *uint32

	// Auto Sort Type
	SortTypeAttr ST_FieldSortType

	// Data Source Sort
	DataSourceSortAttr *bool

	// Auto Sort
	NonAutoSortDefaultAttr *bool

	// Auto Show Rank By
	RankByAttr *uint32

	// Show Default Subtotal
	DefaultSubtotalAttr *bool

	// Sum Subtotal
	SumSubtotalAttr *bool

	// CountA
	CountASubtotalAttr *bool

	// Average
	AvgSubtotalAttr *bool

	// Max Subtotal
	MaxSubtotalAttr *bool

	// Min Subtotal
	MinSubtotalAttr *bool

	// Product Subtotal
	ProductSubtotalAttr *bool

	// Count
	CountSubtotalAttr *bool

	// StdDev Subtotal
	StdDevSubtotalAttr *bool

	// StdDevP Subtotal
	StdDevPSubtotalAttr *bool

	// Variance Subtotal
	VarSubtotalAttr *bool

	// VarP Subtotal
	VarPSubtotalAttr *bool

	// Show Member Property in Cell
	ShowPropCellAttr *bool

	// Show Member Property ToolTip
	ShowPropTipAttr *bool

	// Show As Caption
	ShowPropAsCaptionAttr *bool

	// Drill State
	DefaultAttributeDrillStateAttr *bool

	// Field Items
	Items *CT_Items

	// AutoSort Scope
	AutoSortScope *CT_AutoSortScope

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_DataFields and its children, prefixing error messages with path
func (_cdac *CT_DataFields) ValidateWithPath(path string) error {
	for _efcf, _cgefe := range _cdac.DataField {
		if _ggbd := _cgefe.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u0044\u0061\u0074a\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _efcf)); _ggbd != nil {
			return _ggbd
		}
	}
	return nil
}

func (_bdfed *CT_Controls) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bdaac:
	for {
		_fddc, _gdgf := d.Token()
		if _gdgf != nil {
			return _gdgf
		}
		switch _efcee := _fddc.(type) {
		case _b.StartElement:
			switch _efcee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}:
				_fcdae := NewCT_Control()
				if _eagcg := d.DecodeElement(_fcdae, &_efcee); _eagcg != nil {
					return _eagcg
				}
				_bdfed.Control = append(_bdfed.Control, _fcdae)
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0073\u0020\u0025\u0076", _efcee.Name)
				if _cgadb := d.Skip(); _cgadb != nil {
					return _cgadb
				}
			}
		case _b.EndElement:
			break _bdaac
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_RgbColor and its children
func (_dacfa *CT_RgbColor) Validate() error {
	return _dacfa.ValidateWithPath("C\u0054\u005f\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072")
}

type ST_SourceType byte

func NewCT_GroupMembers() *CT_GroupMembers { _adcde := &CT_GroupMembers{}; return _adcde }

// ValidateWithPath validates the CT_CustomFilters and its children, prefixing error messages with path
func (_bdafe *CT_CustomFilters) ValidateWithPath(path string) error {
	for _aeeade, _efde := range _bdafe.CustomFilter {
		if _fdcbe := _efde.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0043us\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _aeeade)); _fdcbe != nil {
			return _fdcbe
		}
	}
	return nil
}

func (_afdeaf *CT_XmlPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0070I\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _afdeaf.MapIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0070\u0061t\u0068"}, Value: _ec.Sprintf("\u0025\u0076", _afdeaf.XpathAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _afdeaf.XmlDataTypeAttr)})
	e.EncodeToken(start)
	if _afdeaf.ExtLst != nil {
		_abgbc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_afdeaf.ExtLst, _abgbc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RevisionCustomView and its children, prefixing error messages with path
func (_eccbf *CT_RevisionCustomView) ValidateWithPath(path string) error {
	if !_bb.ST_GuidPatternRe.MatchString(_eccbf.GuidAttr) {
		return _ec.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _bb.ST_GuidPatternRe, _eccbf.GuidAttr)
	}
	if _eccbf.ActionAttr == ST_RevisionActionUnset {
		return _ec.Errorf("\u0025\u0073\u002fAc\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072\u0020i\u0073 \u0061 \u006da\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ecfffg := _eccbf.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _ecfffg != nil {
		return _ecfffg
	}
	return nil
}

func (_cbfb *CT_CustomFilters) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _geeg := range start.Attr {
		if _geeg.Name.Local == "\u0061\u006e\u0064" {
			_daeab, _dfeaf := _eb.ParseBool(_geeg.Value)
			if _dfeaf != nil {
				return _dfeaf
			}
			_cbfb.AndAttr = &_daeab
			continue
		}
	}
_gccbed:
	for {
		_gfgc, _cgdaf := d.Token()
		if _cgdaf != nil {
			return _cgdaf
		}
		switch _gfage := _gfgc.(type) {
		case _b.StartElement:
			switch _gfage.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_deda := NewCT_CustomFilter()
				if _ccadf := d.DecodeElement(_deda, &_gfage); _ccadf != nil {
					return _ccadf
				}
				_cbfb.CustomFilter = append(_cbfb.CustomFilter, _deda)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073\u0020\u0025v", _gfage.Name)
				if _ecgcg := d.Skip(); _ecgcg != nil {
					return _ecgcg
				}
			}
		case _b.EndElement:
			break _gccbed
		case _b.CharData:
		}
	}
	return nil
}

func (_dcagc *CT_MapInfo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0053\u0065\u006c\u0065ct\u0069\u006f\u006e\u004e\u0061\u006d\u0065\u0073\u0070\u0061\u0063\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0076", _dcagc.SelectionNamespacesAttr)})
	e.EncodeToken(start)
	_bbgaae := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0053\u0063\u0068\u0065\u006da"}}
	for _, _gdbfaf := range _dcagc.Schema {
		e.EncodeElement(_gdbfaf, _bbgaae)
	}
	_ffagde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u004d\u0061\u0070"}}
	for _, _ebfgg := range _dcagc.Map {
		e.EncodeElement(_ebfgg, _ffagde)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bbcedg ST_FormatAction) Validate() error { return _bbcedg.ValidateWithPath("") }

func (_fdbg *CT_ColorScale) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dbaa:
	for {
		_fgeb, _aadbd := d.Token()
		if _aadbd != nil {
			return _aadbd
		}
		switch _abedg := _fgeb.(type) {
		case _b.StartElement:
			switch _abedg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}:
				_dcbd := NewCT_Cfvo()
				if _gfcd := d.DecodeElement(_dcbd, &_abedg); _gfcd != nil {
					return _gfcd
				}
				_fdbg.Cfvo = append(_fdbg.Cfvo, _dcbd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_dfda := NewCT_Color()
				if _acage := d.DecodeElement(_dfda, &_abedg); _acage != nil {
					return _acage
				}
				_fdbg.Color = append(_fdbg.Color, _dfda)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043o\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065 \u0025\u0076", _abedg.Name)
				if _bdag := d.Skip(); _bdag != nil {
					return _bdag
				}
			}
		case _b.EndElement:
			break _dbaa
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextFields and its children
func (_bacec *CT_TextFields) Validate() error {
	return _bacec.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073")
}

func (_ceeac *CT_NumFmts) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bebd := range start.Attr {
		if _bebd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fcdcgg, _ggba := _eb.ParseUint(_bebd.Value, 10, 32)
			if _ggba != nil {
				return _ggba
			}
			_gcged := uint32(_fcdcgg)
			_ceeac.CountAttr = &_gcged
			continue
		}
	}
_fgbfb:
	for {
		_cagcg, _efcacf := d.Token()
		if _efcacf != nil {
			return _efcacf
		}
		switch _acaf := _cagcg.(type) {
		case _b.StartElement:
			switch _acaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}:
				_dfegf := NewCT_NumFmt()
				if _eagba := d.DecodeElement(_dfegf, &_acaf); _eagba != nil {
					return _eagba
				}
				_ceeac.NumFmt = append(_ceeac.NumFmt, _dfegf)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fN\u0075\u006d\u0046\u006d\u0074\u0073\u0020\u0025\u0076", _acaf.Name)
				if _ffegd := d.Skip(); _ffegd != nil {
					return _ffegd
				}
			}
		case _b.EndElement:
			break _fgbfb
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CellXfs and its children
func (_agee *CT_CellXfs) Validate() error {
	return _agee.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0058\u0066\u0073")
}

func (_fdfebb *CT_Item) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fdfebb.NAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_fdfebb.NAttr)})
	}
	if _fdfebb.TAttr != ST_ItemTypeUnset {
		_gdcgc, _gafef := _fdfebb.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _gafef != nil {
			return _gafef
		}
		start.Attr = append(start.Attr, _gdcgc)
	}
	if _fdfebb.HAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fdfebb.HAttr))})
	}
	if _fdfebb.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fdfebb.SAttr))})
	}
	if _fdfebb.SdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fdfebb.SdAttr))})
	}
	if _fdfebb.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fdfebb.FAttr))})
	}
	if _fdfebb.MAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fdfebb.MAttr))})
	}
	if _fdfebb.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fdfebb.CAttr))})
	}
	if _fdfebb.XAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078"}, Value: _ec.Sprintf("\u0025\u0076", *_fdfebb.XAttr)})
	}
	if _fdfebb.DAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fdfebb.DAttr))})
	}
	if _fdfebb.EAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fdfebb.EAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_DdeItem() *CT_DdeItem { _defaa := &CT_DdeItem{}; return _defaa }

func NewCT_QueryTableField() *CT_QueryTableField { _efbac := &CT_QueryTableField{}; return _efbac }

func (_befgce ST_TextVAlign) ValidateWithPath(path string) error {
	switch _befgce {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_befgce))
	}
	return nil
}

func (_feged *CT_FieldUsage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078"}, Value: _ec.Sprintf("\u0025\u0076", _feged.XAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_dcccbe ST_DateTimeGrouping) String() string {
	switch _dcccbe {
	case 0:
		return ""
	case 1:
		return "\u0079\u0065\u0061\u0072"
	case 2:
		return "\u006d\u006f\u006et\u0068"
	case 3:
		return "\u0064\u0061\u0079"
	case 4:
		return "\u0068\u006f\u0075\u0072"
	case 5:
		return "\u006d\u0069\u006e\u0075\u0074\u0065"
	case 6:
		return "\u0073\u0065\u0063\u006f\u006e\u0064"
	}
	return ""
}

// Validate validates the CT_FontSize and its children
func (_gffdc *CT_FontSize) Validate() error {
	return _gffdc.ValidateWithPath("C\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0069\u007a\u0065")
}

func (_agaagd *CT_SheetViews) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dceda := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}}
	for _, _addgf := range _agaagd.SheetView {
		e.EncodeElement(_addgf, _dceda)
	}
	if _agaagd.ExtLst != nil {
		_fagae := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_agaagd.ExtLst, _fagae)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_AutoFilter and its children, prefixing error messages with path
func (_ffe *CT_AutoFilter) ValidateWithPath(path string) error {
	for _ce, _fge := range _ffe.FilterColumn {
		if _dba := _fge.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0046il\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e\u005b\u0025\u0064\u005d", path, _ce)); _dba != nil {
			return _dba
		}
	}
	if _ffe.SortState != nil {
		if _ccc := _ffe.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _ccc != nil {
			return _ccc
		}
	}
	if _ffe.ExtLst != nil {
		if _fbg := _ffe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbg != nil {
			return _fbg
		}
	}
	return nil
}

func (_aacgf *CT_Member) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eeacf := range start.Attr {
		if _eeacf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_edeaa, _bgacf := _eeacf.Value, error(nil)
			if _bgacf != nil {
				return _bgacf
			}
			_aacgf.NameAttr = _edeaa
			continue
		}
	}
	for {
		_dadcb, _fgffd := d.Token()
		if _fgffd != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004d\u0065\u006db\u0065\u0072\u003a\u0020\u0025\u0073", _fgffd)
		}
		if _beeaf, _cdfdc := _dadcb.(_b.EndElement); _cdfdc && _beeaf.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_Members() *CT_Members { _agfde := &CT_Members{}; return _agfde }

func NewCT_ExternalReferences() *CT_ExternalReferences {
	_efgbg := &CT_ExternalReferences{}
	return _efgbg
}

func (_acecd ST_FieldSortType) String() string {
	switch _acecd {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u006e\u0075\u0061\u006c"
	case 2:
		return "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case 3:
		return "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	}
	return ""
}

const (
	ST_QualifierUnset       ST_Qualifier = 0
	ST_QualifierDoubleQuote ST_Qualifier = 1
	ST_QualifierSingleQuote ST_Qualifier = 2
	ST_QualifierNone        ST_Qualifier = 3
)

// Validate validates the CT_MetadataTypes and its children
func (_abbfd *CT_MetadataTypes) Validate() error {
	return _abbfd.ValidateWithPath("\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073")
}

const (
	ST_OleUpdateUnset            ST_OleUpdate = 0
	ST_OleUpdateOLEUPDATE_ALWAYS ST_OleUpdate = 1
	ST_OleUpdateOLEUPDATE_ONCALL ST_OleUpdate = 2
)

func (_cggag ST_ConditionalFormattingOperator) ValidateWithPath(path string) error {
	switch _cggag {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cggag))
	}
	return nil
}

func (_dffcg ST_RevisionAction) String() string {
	switch _dffcg {
	case 0:
		return ""
	case 1:
		return "\u0061\u0064\u0064"
	case 2:
		return "\u0064\u0065\u006c\u0065\u0074\u0065"
	}
	return ""
}

type CT_DdeItem struct {

	// DDE Name
	NameAttr *string

	// Object Linking TechnologyE
	OleAttr *bool

	// Advise
	AdviseAttr *bool

	// Data is an Image
	PreferPicAttr *bool

	// DDE Name Values
	Values *CT_DdeValues
}

func NewCT_ExternalSheetName() *CT_ExternalSheetName {
	_bcdgc := &CT_ExternalSheetName{}
	return _bcdgc
}

// Validate validates the CT_FutureMetadataBlock and its children
func (_cfdcb *CT_FutureMetadataBlock) Validate() error {
	return _cfdcb.ValidateWithPath("\u0043\u0054\u005f\u0046ut\u0075\u0072\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006fc\u006b")
}

func (_dababb *CT_Sheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _dababb.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _dababb.SheetIdAttr)})
	if _dababb.StateAttr != ST_SheetStateUnset {
		_gebcdf, _dccaed := _dababb.StateAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _dccaed != nil {
			return _dccaed
		}
		start.Attr = append(start.Attr, _gebcdf)
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _dababb.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PageItem and its children, prefixing error messages with path
func (_dadaa *CT_PageItem) ValidateWithPath(path string) error { return nil }

func NewCT_Format() *CT_Format {
	_fabebb := &CT_Format{}
	_fabebb.PivotArea = NewCT_PivotArea()
	return _fabebb
}

type Users struct{ CT_Users }

func (_ecb *CT_BorderPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ecb.StyleAttr != ST_BorderStyleUnset {
		_cdeg, _fcb := _ecb.StyleAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0074\u0079l\u0065"})
		if _fcb != nil {
			return _fcb
		}
		start.Attr = append(start.Attr, _cdeg)
	}
	e.EncodeToken(start)
	if _ecb.Color != nil {
		_gac := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_ecb.Color, _gac)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Index struct {

	// Shared Items Index
	VAttr uint32
}

func (_cgdbd ST_TimePeriod) String() string {
	switch _cgdbd {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0064a\u0079"
	case 2:
		return "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case 3:
		return "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case 4:
		return "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s"
	case 5:
		return "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case 6:
		return "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case 7:
		return "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case 8:
		return "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case 9:
		return "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case 10:
		return "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	}
	return ""
}

// ValidateWithPath validates the CT_DataBinding and its children, prefixing error messages with path
func (_dadc *CT_DataBinding) ValidateWithPath(path string) error { return nil }

func (_gcbbc *CT_ConditionalFormat) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gcbbc.ScopeAttr != ST_ScopeUnset {
		_cabg, _dbcba := _gcbbc.ScopeAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0063\u006fp\u0065"})
		if _dbcba != nil {
			return _dbcba
		}
		start.Attr = append(start.Attr, _cabg)
	}
	if _gcbbc.TypeAttr != ST_TypeUnset {
		_dcddc, _aadfa := _gcbbc.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _aadfa != nil {
			return _aadfa
		}
		start.Attr = append(start.Attr, _dcddc)
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079"}, Value: _ec.Sprintf("\u0025\u0076", _gcbbc.PriorityAttr)})
	e.EncodeToken(start)
	_degfb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"}}
	e.EncodeElement(_gcbbc.PivotAreas, _degfb)
	if _gcbbc.ExtLst != nil {
		_eadb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gcbbc.ExtLst, _eadb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_DataRefs and its children, prefixing error messages with path
func (_adac *CT_DataRefs) ValidateWithPath(path string) error {
	for _afcc, _bcgec := range _adac.DataRef {
		if _effec := _bcgec.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0044\u0061\u0074\u0061\u0052\u0065f\u005b\u0025\u0064\u005d", path, _afcc)); _effec != nil {
			return _effec
		}
	}
	return nil
}

// ValidateWithPath validates the CalcChain and its children, prefixing error messages with path
func (_bdbge *CalcChain) ValidateWithPath(path string) error {
	if _abgef := _bdbge.CT_CalcChain.ValidateWithPath(path); _abgef != nil {
		return _abgef
	}
	return nil
}

func NewCT_CsPageSetup() *CT_CsPageSetup { _edaeg := &CT_CsPageSetup{}; return _edaeg }

// Validate validates the CT_DateTime and its children
func (_effbc *CT_DateTime) Validate() error {
	return _effbc.ValidateWithPath("C\u0054\u005f\u0044\u0061\u0074\u0065\u0054\u0069\u006d\u0065")
}

type Comments struct{ CT_Comments }

func (_baggea ST_FilterOperator) ValidateWithPath(path string) error {
	switch _baggea {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_baggea))
	}
	return nil
}

// Validate validates the CT_Record and its children
func (_bdebf *CT_Record) Validate() error {
	return _bdebf.ValidateWithPath("\u0043T\u005f\u0052\u0065\u0063\u006f\u0072d")
}

func (_eedd *CT_ChartFormat) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u0061r\u0074"}, Value: _ec.Sprintf("\u0025\u0076", _eedd.ChartAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}, Value: _ec.Sprintf("\u0025\u0076", _eedd.FormatAttr)})
	if _eedd.SeriesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0072\u0069\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_eedd.SeriesAttr))})
	}
	e.EncodeToken(start)
	_ffef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_eedd.PivotArea, _ffef)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Mdx and its children
func (_caffd *CT_Mdx) Validate() error {
	return _caffd.ValidateWithPath("\u0043\u0054\u005f\u004d\u0064\u0078")
}

const (
	ST_ExternalConnectionTypeUnset   ST_ExternalConnectionType = 0
	ST_ExternalConnectionTypeGeneral ST_ExternalConnectionType = 1
	ST_ExternalConnectionTypeText    ST_ExternalConnectionType = 2
	ST_ExternalConnectionTypeMDY     ST_ExternalConnectionType = 3
	ST_ExternalConnectionTypeDMY     ST_ExternalConnectionType = 4
	ST_ExternalConnectionTypeYMD     ST_ExternalConnectionType = 5
	ST_ExternalConnectionTypeMYD     ST_ExternalConnectionType = 6
	ST_ExternalConnectionTypeDYM     ST_ExternalConnectionType = 7
	ST_ExternalConnectionTypeYDM     ST_ExternalConnectionType = 8
	ST_ExternalConnectionTypeSkip    ST_ExternalConnectionType = 9
	ST_ExternalConnectionTypeEMD     ST_ExternalConnectionType = 10
)

func NewCT_PCDSCPage() *CT_PCDSCPage { _eaade := &CT_PCDSCPage{}; return _eaade }

func (_fabba ST_DvAspect) String() string {
	switch _fabba {
	case 0:
		return ""
	case 1:
		return "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054"
	case 2:
		return "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e"
	}
	return ""
}

// Validate validates the CT_DdeItems and its children
func (_dfcb *CT_DdeItems) Validate() error {
	return _dfcb.ValidateWithPath("C\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d\u0073")
}

func (_efaff *PivotCacheRecords) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_efaff.CT_PivotCacheRecords = *NewCT_PivotCacheRecords()
	for _, _dbgfec := range start.Attr {
		if _dbgfec.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fadfb, _ffdaed := _eb.ParseUint(_dbgfec.Value, 10, 32)
			if _ffdaed != nil {
				return _ffdaed
			}
			_gcacba := uint32(_fadfb)
			_efaff.CountAttr = &_gcacba
			continue
		}
	}
_aeabe:
	for {
		_gfegf, _gcdfdb := d.Token()
		if _gcdfdb != nil {
			return _gcdfdb
		}
		switch _ebfdb := _gfegf.(type) {
		case _b.StartElement:
			switch _ebfdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_cfbad := NewCT_Record()
				if _eedad := d.DecodeElement(_cfbad, &_ebfdb); _eedad != nil {
					return _eedad
				}
				_efaff.R = append(_efaff.R, _cfbad)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efaff.ExtLst = NewCT_ExtensionList()
				if _adffaa := d.DecodeElement(_efaff.ExtLst, &_ebfdb); _adffaa != nil {
					return _adffaa
				}
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065\u0063\u006f\u0072\u0064\u0073\u0020\u0025\u0076", _ebfdb.Name)
				if _ebgde := d.Skip(); _ebgde != nil {
					return _ebgde
				}
			}
		case _b.EndElement:
			break _aeabe
		case _b.CharData:
		}
	}
	return nil
}

type ST_PhoneticAlignment byte

func (_accfg *CT_Hyperlinks) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ffded := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ah\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b"}}
	for _, _ggbgf := range _accfg.Hyperlink {
		e.EncodeElement(_ggbgf, _ffded)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ExternalCell and its children, prefixing error messages with path
func (_afef *CT_ExternalCell) ValidateWithPath(path string) error {
	if _dabba := _afef.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _dabba != nil {
		return _dabba
	}
	return nil
}

// Validate validates the CT_TableStyleInfo and its children
func (_ebcaca *CT_TableStyleInfo) Validate() error {
	return _ebcaca.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f")
}

// Validate validates the CT_CalculatedMembers and its children
func (_fbee *CT_CalculatedMembers) Validate() error {
	return _fbee.ValidateWithPath("C\u0054_\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u004d\u0065\u006dbe\u0072\u0073")
}

// ValidateWithPath validates the CT_CustomFilter and its children, prefixing error messages with path
func (_ggbb *CT_CustomFilter) ValidateWithPath(path string) error {
	if _bdaeb := _ggbb.OperatorAttr.ValidateWithPath(path + "\u002f\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072\u0041\u0074\u0074\u0072"); _bdaeb != nil {
		return _bdaeb
	}
	return nil
}

type ST_UnderlineValues byte

func (_fdeaf *EG_ExtensionList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bgdbg:
	for {
		_gfgbe, _gbbcc := d.Token()
		if _gbbcc != nil {
			return _gbbcc
		}
		switch _gfbgg := _gfgbe.(type) {
		case _b.StartElement:
			switch _gfbgg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_ebdcg := NewCT_Extension()
				if _aaagdf := d.DecodeElement(_ebdcg, &_gfbgg); _aaagdf != nil {
					return _aaagdf
				}
				_fdeaf.Ext = append(_fdeaf.Ext, _ebdcg)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _gfbgg.Name)
				if _adgbg := d.Skip(); _adgbg != nil {
					return _adgbg
				}
			}
		case _b.EndElement:
			break _bgdbg
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MetadataStringIndex and its children, prefixing error messages with path
func (_ceaab *CT_MetadataStringIndex) ValidateWithPath(path string) error { return nil }

func (_dcefd *CT_LegacyDrawing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _debb := range start.Attr {
		if _debb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _debb.Name.Local == "\u0069\u0064" || _debb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _debb.Name.Local == "\u0069\u0064" {
			_eaeca, _cccgg := _debb.Value, error(nil)
			if _cccgg != nil {
				return _cccgg
			}
			_dcefd.IdAttr = _eaeca
			continue
		}
	}
	for {
		_badcd, _dbgfg := d.Token()
		if _dbgfg != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0065\u0067\u0061c\u0079D\u0072\u0061\u0077\u0069\u006e\u0067\u003a \u0025\u0073", _dbgfg)
		}
		if _efbec, _bfdd := _badcd.(_b.EndElement); _bfdd && _efbec.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_colItems struct {

	// Column Item Count
	CountAttr *uint32

	// Column Items
	I []*CT_I
}

type CT_PivotArea struct {

	// Field Index
	FieldAttr *int32

	// Rule Type
	TypeAttr ST_PivotAreaType

	// Data Only
	DataOnlyAttr *bool

	// Labels Only
	LabelOnlyAttr *bool

	// Include Row Grand Total
	GrandRowAttr *bool

	// Include Column Grand Total
	GrandColAttr *bool

	// Cache Index
	CacheIndexAttr *bool

	// Outline
	OutlineAttr *bool

	// Offset Reference
	OffsetAttr *string

	// Collapsed Levels Are Subtotals
	CollapsedLevelsAreSubtotalsAttr *bool

	// Axis
	AxisAttr ST_Axis

	// Field Position
	FieldPositionAttr *uint32

	// References
	References *CT_PivotAreaReferences

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_PCDKPI and its children
func (_aagf *CT_PCDKPI) Validate() error {
	return _aagf.ValidateWithPath("\u0043T\u005f\u0050\u0043\u0044\u004b\u0050I")
}

func (_aaffbc *CT_PageSetUpPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cdadc := range start.Attr {
		if _cdadc.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073" {
			_fggcg, _dfagc := _eb.ParseBool(_cdadc.Value)
			if _dfagc != nil {
				return _dfagc
			}
			_aaffbc.AutoPageBreaksAttr = &_fggcg
			continue
		}
		if _cdadc.Name.Local == "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e" {
			_ffeedd, _eaege := _eb.ParseBool(_cdadc.Value)
			if _eaege != nil {
				return _eaege
			}
			_aaffbc.FitToPageAttr = &_ffeedd
			continue
		}
	}
	for {
		_cagcgd, _ebcce := d.Token()
		if _ebcce != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072:\u0020\u0025\u0073", _ebcce)
		}
		if _bdaaa, _fgbbe := _cagcgd.(_b.EndElement); _fgbbe && _bdaaa.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_MetadataStrings and its children
func (_fcbbac *CT_MetadataStrings) Validate() error {
	return _fcbbac.ValidateWithPath("\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061t\u0061\u0053t\u0072\u0069\u006e\u0067\u0073")
}

type CT_ExternalDefinedName struct {

	// Defined Name
	NameAttr string

	// Refers To
	RefersToAttr *string

	// Sheet Id
	SheetIdAttr *uint32
}

func (_fgcc *CT_DefinedNames) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_aebc:
	for {
		_eaac, _fbafb := d.Token()
		if _fbafb != nil {
			return _fbafb
		}
		switch _egga := _eaac.(type) {
		case _b.StartElement:
			switch _egga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}:
				_acbbb := NewCT_DefinedName()
				if _gdbgf := d.DecodeElement(_acbbb, &_egga); _gdbgf != nil {
					return _gdbgf
				}
				_fgcc.DefinedName = append(_fgcc.DefinedName, _acbbb)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073\u0020\u0025\u0076", _egga.Name)
				if _fedc := d.Skip(); _fedc != nil {
					return _fedc
				}
			}
		case _b.EndElement:
			break _aebc
		case _b.CharData:
		}
	}
	return nil
}

func (_cedg *CT_PatternFill) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cedg.PatternTypeAttr != ST_PatternTypeUnset {
		_ecgba, _ecfddf := _cedg.PatternTypeAttr.MarshalXMLAttr(_b.Name{Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065"})
		if _ecfddf != nil {
			return _ecfddf
		}
		start.Attr = append(start.Attr, _ecgba)
	}
	e.EncodeToken(start)
	if _cedg.FgColor != nil {
		_gbcbg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0067\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_cedg.FgColor, _gbcbg)
	}
	if _cedg.BgColor != nil {
		_eeded := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062\u0067\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_cedg.BgColor, _eeded)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_dgffce *ST_DateTimeGrouping) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ggdcbc, _gebae := d.Token()
	if _gebae != nil {
		return _gebae
	}
	if _gdbbd, _accga := _ggdcbc.(_b.EndElement); _accga && _gdbbd.Name == start.Name {
		*_dgffce = 1
		return nil
	}
	if _cffge, _ecdgfe := _ggdcbc.(_b.CharData); !_ecdgfe {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ggdcbc)
	} else {
		switch string(_cffge) {
		case "":
			*_dgffce = 0
		case "\u0079\u0065\u0061\u0072":
			*_dgffce = 1
		case "\u006d\u006f\u006et\u0068":
			*_dgffce = 2
		case "\u0064\u0061\u0079":
			*_dgffce = 3
		case "\u0068\u006f\u0075\u0072":
			*_dgffce = 4
		case "\u006d\u0069\u006e\u0075\u0074\u0065":
			*_dgffce = 5
		case "\u0073\u0065\u0063\u006f\u006e\u0064":
			*_dgffce = 6
		}
	}
	_ggdcbc, _gebae = d.Token()
	if _gebae != nil {
		return _gebae
	}
	if _acdbfa, _dabfa := _ggdcbc.(_b.EndElement); _dabfa && _acdbfa.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ggdcbc)
}

func (_ccbacd *ST_VolDepType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fbgfc, _geefe := d.Token()
	if _geefe != nil {
		return _geefe
	}
	if _dffcb, _cdeabd := _fbgfc.(_b.EndElement); _cdeabd && _dffcb.Name == start.Name {
		*_ccbacd = 1
		return nil
	}
	if _bfege, _accec := _fbgfc.(_b.CharData); !_accec {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbgfc)
	} else {
		switch string(_bfege) {
		case "":
			*_ccbacd = 0
		case "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061":
			*_ccbacd = 1
		case "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073":
			*_ccbacd = 2
		}
	}
	_fbgfc, _geefe = d.Token()
	if _geefe != nil {
		return _geefe
	}
	if _efgffc, _faabg := _fbgfc.(_b.EndElement); _faabg && _efgffc.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbgfc)
}

func (_cggba *CT_PivotDimension) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cggba.MeasureAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006de\u0061\u0073\u0075\u0072\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cggba.MeasureAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _cggba.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _cggba.UniqueNameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", _cggba.CaptionAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Connections and its children, prefixing error messages with path
func (_fgfgca *Connections) ValidateWithPath(path string) error {
	if _bdfedg := _fgfgca.CT_Connections.ValidateWithPath(path); _bdfedg != nil {
		return _bdfedg
	}
	return nil
}

// ValidateWithPath validates the CT_QueryTableDeletedFields and its children, prefixing error messages with path
func (_fbagg *CT_QueryTableDeletedFields) ValidateWithPath(path string) error {
	for _dcgbcc, _cffcce := range _fbagg.DeletedField {
		if _cdbaf := _cffcce.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0044el\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _dcgbcc)); _cdbaf != nil {
			return _cdbaf
		}
	}
	return nil
}

func (_agdd *CT_GroupLevel) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _agdd.UniqueNameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", _agdd.CaptionAttr)})
	if _agdd.UserAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_agdd.UserAttr))})
	}
	if _agdd.CustomRollUpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0052\u006f\u006c\u006c\u0055\u0070"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_agdd.CustomRollUpAttr))})
	}
	e.EncodeToken(start)
	if _agdd.Groups != nil {
		_acefca := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0067\u0072\u006f\u0075\u0070s"}}
		e.EncodeElement(_agdd.Groups, _acefca)
	}
	if _agdd.ExtLst != nil {
		_gdbfa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_agdd.ExtLst, _gdbfa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bgdefc ST_ParameterType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_egcagb := _b.Attr{}
	_egcagb.Name = name
	switch _bgdefc {
	case ST_ParameterTypeUnset:
		_egcagb.Value = ""
	case ST_ParameterTypePrompt:
		_egcagb.Value = "\u0070\u0072\u006f\u006d\u0070\u0074"
	case ST_ParameterTypeValue:
		_egcagb.Value = "\u0076\u0061\u006cu\u0065"
	case ST_ParameterTypeCell:
		_egcagb.Value = "\u0063\u0065\u006c\u006c"
	}
	return _egcagb, nil
}

func NewCT_Controls() *CT_Controls { _gcbc := &CT_Controls{}; return _gcbc }

func (_badae *CT_SheetFormatPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _badae.BaseColWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0073e\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068"}, Value: _ec.Sprintf("\u0025\u0076", *_badae.BaseColWidthAttr)})
	}
	if _badae.DefaultColWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u0066a\u0075\u006c\u0074\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068"}, Value: _ec.Sprintf("\u0025\u0076", *_badae.DefaultColWidthAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065f\u0061\u0075\u006ct\u0052\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _ec.Sprintf("\u0025\u0076", _badae.DefaultRowHeightAttr)})
	if _badae.CustomHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_badae.CustomHeightAttr))})
	}
	if _badae.ZeroHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007a\u0065\u0072\u006f\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_badae.ZeroHeightAttr))})
	}
	if _badae.ThickTopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_badae.ThickTopAttr))})
	}
	if _badae.ThickBottomAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u0068\u0069\u0063\u006b\u0042\u006f\u0074\u0074\u006f\u006d"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_badae.ThickBottomAttr))})
	}
	if _badae.OutlineLevelRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0052\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0076", *_badae.OutlineLevelRowAttr)})
	}
	if _badae.OutlineLevelColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0043\u006f\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_badae.OutlineLevelColAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_aaacc ST_TotalsRowFunction) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_aaacc.String(), start)
}

func (_daabbf ST_CellComments) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_daabbf.String(), start)
}

// ValidateWithPath validates the CT_Connection and its children, prefixing error messages with path
func (_ebcdb *CT_Connection) ValidateWithPath(path string) error {
	if _aabbf := _ebcdb.CredentialsAttr.ValidateWithPath(path + "\u002f\u0043r\u0065\u0064\u0065n\u0074\u0069\u0061\u006c\u0073\u0041\u0074\u0074\u0072"); _aabbf != nil {
		return _aabbf
	}
	if _ebcdb.DbPr != nil {
		if _effa := _ebcdb.DbPr.ValidateWithPath(path + "\u002f\u0044\u0062P\u0072"); _effa != nil {
			return _effa
		}
	}
	if _ebcdb.OlapPr != nil {
		if _egdb := _ebcdb.OlapPr.ValidateWithPath(path + "\u002fO\u006c\u0061\u0070\u0050\u0072"); _egdb != nil {
			return _egdb
		}
	}
	if _ebcdb.WebPr != nil {
		if _gcbbd := _ebcdb.WebPr.ValidateWithPath(path + "\u002f\u0057\u0065\u0062\u0050\u0072"); _gcbbd != nil {
			return _gcbbd
		}
	}
	if _ebcdb.TextPr != nil {
		if _dgde := _ebcdb.TextPr.ValidateWithPath(path + "\u002fT\u0065\u0078\u0074\u0050\u0072"); _dgde != nil {
			return _dgde
		}
	}
	if _ebcdb.Parameters != nil {
		if _adggg := _ebcdb.Parameters.ValidateWithPath(path + "/\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"); _adggg != nil {
			return _adggg
		}
	}
	if _ebcdb.ExtLst != nil {
		if _eafca := _ebcdb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eafca != nil {
			return _eafca
		}
	}
	return nil
}

// ValidateWithPath validates the CT_IndexedColors and its children, prefixing error messages with path
func (_fggba *CT_IndexedColors) ValidateWithPath(path string) error {
	for _abdcf, _cgcb := range _fggba.RgbColor {
		if _gfddb := _cgcb.ValidateWithPath(_ec.Sprintf("\u0025s\u002fR\u0067\u0062\u0043\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _abdcf)); _gfddb != nil {
			return _gfddb
		}
	}
	return nil
}

type ST_WebSourceType byte

func (_gaabg *ST_Pane) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gbfccf, _ffefe := d.Token()
	if _ffefe != nil {
		return _ffefe
	}
	if _gebgee, _dgfea := _gbfccf.(_b.EndElement); _dgfea && _gebgee.Name == start.Name {
		*_gaabg = 1
		return nil
	}
	if _abbac, _gfgaeg := _gbfccf.(_b.CharData); !_gfgaeg {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gbfccf)
	} else {
		switch string(_abbac) {
		case "":
			*_gaabg = 0
		case "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
			*_gaabg = 1
		case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
			*_gaabg = 2
		case "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
			*_gaabg = 3
		case "\u0074o\u0070\u004c\u0065\u0066\u0074":
			*_gaabg = 4
		}
	}
	_gbfccf, _ffefe = d.Token()
	if _ffefe != nil {
		return _ffefe
	}
	if _fddfb, _gdede := _gbfccf.(_b.EndElement); _gdede && _fddfb.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gbfccf)
}

func (_fbde *CT_CellSmartTagPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcce := range start.Attr {
		if _dcce.Name.Local == "\u006b\u0065\u0079" {
			_adegb, _aeg := _dcce.Value, error(nil)
			if _aeg != nil {
				return _aeg
			}
			_fbde.KeyAttr = _adegb
			continue
		}
		if _dcce.Name.Local == "\u0076\u0061\u006c" {
			_fcec, _ceae := _dcce.Value, error(nil)
			if _ceae != nil {
				return _ceae
			}
			_fbde.ValAttr = _fcec
			continue
		}
	}
	for {
		_cbedd, _afgdd := d.Token()
		if _afgdd != nil {
			return _ec.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072: \u0025\u0073", _afgdd)
		}
		if _acbf, _dbdf := _cbedd.(_b.EndElement); _dbdf && _acbf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_CellAlignment and its children
func (_baag *CT_CellAlignment) Validate() error {
	return _baag.ValidateWithPath("\u0043\u0054_\u0043\u0065\u006cl\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074")
}

func (_fefab *CT_IntProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cecc := range start.Attr {
		if _cecc.Name.Local == "\u0076\u0061\u006c" {
			_egcef, _bdeg := _eb.ParseInt(_cecc.Value, 10, 32)
			if _bdeg != nil {
				return _bdeg
			}
			_fefab.ValAttr = int32(_egcef)
			continue
		}
	}
	for {
		_aeeb, _adeaf := d.Token()
		if _adeaf != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fI\u006e\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079:\u0020\u0025\u0073", _adeaf)
		}
		if _abgegf, _aagcde := _aeeb.(_b.EndElement); _aagcde && _abgegf.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gacgg *CT_CacheHierarchies) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gacgg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_gacgg.CountAttr)})
	}
	e.EncodeToken(start)
	if _gacgg.CacheHierarchy != nil {
		_dcb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}}
		for _, _ggf := range _gacgg.CacheHierarchy {
			e.EncodeElement(_ggf, _dcb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_DynamicFilter() *CT_DynamicFilter {
	_fdgda := &CT_DynamicFilter{}
	_fdgda.TypeAttr = ST_DynamicFilterType(1)
	return _fdgda
}

func (_eagebe *ST_Qualifier) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_adbee, _ebdgbf := d.Token()
	if _ebdgbf != nil {
		return _ebdgbf
	}
	if _bcbeaa, _cdffbg := _adbee.(_b.EndElement); _cdffbg && _bcbeaa.Name == start.Name {
		*_eagebe = 1
		return nil
	}
	if _ggffbf, _aaede := _adbee.(_b.CharData); !_aaede {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _adbee)
	} else {
		switch string(_ggffbf) {
		case "":
			*_eagebe = 0
		case "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
			*_eagebe = 1
		case "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
			*_eagebe = 2
		case "\u006e\u006f\u006e\u0065":
			*_eagebe = 3
		}
	}
	_adbee, _ebdgbf = d.Token()
	if _ebdgbf != nil {
		return _ebdgbf
	}
	if _fgbdbf, _aaecc := _adbee.(_b.EndElement); _aaecc && _fgbdbf.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _adbee)
}

func NewCT_PivotArea() *CT_PivotArea { _cbgcg := &CT_PivotArea{}; return _cbgcg }

type CT_PageMargins struct {

	// Left Page Margin
	LeftAttr float64

	// Right Page Margin
	RightAttr float64

	// Top Page Margin
	TopAttr float64

	// Bottom Page Margin
	BottomAttr float64

	// Header Page Margin
	HeaderAttr float64

	// Footer Page Margin
	FooterAttr float64
}

func (_febff ST_ShowDataAs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_febff.String(), start)
}

// Validate validates the CT_CellFormula and its children
func (_aecfe *CT_CellFormula) Validate() error {
	return _aecfe.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0046\u006fr\u006d\u0075\u006c\u0061")
}

// ValidateWithPath validates the AG_RevData and its children, prefixing error messages with path
func (_gf *AG_RevData) ValidateWithPath(path string) error { return nil }

func (_dgfgc ST_SortMethod) ValidateWithPath(path string) error {
	switch _dgfgc {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgfgc))
	}
	return nil
}

func (_affc *CT_CommentPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _affc.LockedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_affc.LockedAttr))})
	}
	if _affc.DefaultSizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_affc.DefaultSizeAttr))})
	}
	if _affc.PrintAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0069n\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_affc.PrintAttr))})
	}
	if _affc.DisabledAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_affc.DisabledAttr))})
	}
	if _affc.AutoFillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_affc.AutoFillAttr))})
	}
	if _affc.AutoLineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_affc.AutoLineAttr))})
	}
	if _affc.AltTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061l\u0074\u0054\u0065\u0078\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_affc.AltTextAttr)})
	}
	if _affc.TextHAlignAttr != ST_TextHAlignUnset {
		_fdgg, _gcbd := _affc.TextHAlignAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0065\u0078\u0074\u0048\u0041\u006c\u0069\u0067\u006e"})
		if _gcbd != nil {
			return _gcbd
		}
		start.Attr = append(start.Attr, _fdgg)
	}
	if _affc.TextVAlignAttr != ST_TextVAlignUnset {
		_gcffd, _fcdeg := _affc.TextVAlignAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0065\u0078\u0074\u0056\u0041\u006c\u0069\u0067\u006e"})
		if _fcdeg != nil {
			return _fcdeg
		}
		start.Attr = append(start.Attr, _gcffd)
	}
	if _affc.LockTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0054\u0065\u0078\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_affc.LockTextAttr))})
	}
	if _affc.JustLastXAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006au\u0073\u0074\u004c\u0061\u0073\u0074X"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_affc.JustLastXAttr))})
	}
	if _affc.AutoScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061u\u0074\u006f\u0053\u0063\u0061\u006ce"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_affc.AutoScaleAttr))})
	}
	e.EncodeToken(start)
	_ebca := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0061\u006e\u0063\u0068\u006fr"}}
	e.EncodeElement(_affc.Anchor, _ebca)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_CellSmartTagPr() *CT_CellSmartTagPr { _abcd := &CT_CellSmartTagPr{}; return _abcd }

func (_ccgeb ST_CredMethod) String() string {
	switch _ccgeb {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064"
	case 2:
		return "\u006e\u006f\u006e\u0065"
	case 3:
		return "\u0073\u0074\u006f\u0072\u0065\u0064"
	case 4:
		return "\u0070\u0072\u006f\u006d\u0070\u0074"
	}
	return ""
}

// Validate validates the CT_FieldGroup and its children
func (_acdfb *CT_FieldGroup) Validate() error {
	return _acdfb.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070")
}

// Validate validates the CT_RevisionCellChange and its children
func (_fefec *CT_RevisionCellChange) Validate() error {
	return _fefec.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0065\u006cl\u0043\u0068\u0061\u006e\u0067\u0065")
}

func (_cdaff *CT_RPrElt) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ebfad:
	for {
		_ebacf, _ggded := d.Token()
		if _ggded != nil {
			return _ggded
		}
		switch _gedcd := _ebacf.(type) {
		case _b.StartElement:
			switch _gedcd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0046\u006fn\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0046\u006fn\u0074"}:
				_cdaff.RFont = NewCT_FontName()
				if _bddca := d.DecodeElement(_cdaff.RFont, &_gedcd); _bddca != nil {
					return _bddca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}:
				_cdaff.Charset = NewCT_IntProperty()
				if _effdeb := d.DecodeElement(_cdaff.Charset, &_gedcd); _effdeb != nil {
					return _effdeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}:
				_cdaff.Family = NewCT_IntProperty()
				if _affega := d.DecodeElement(_cdaff.Family, &_gedcd); _affega != nil {
					return _affega
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_cdaff.B = NewCT_BooleanProperty()
				if _cdaga := d.DecodeElement(_cdaff.B, &_gedcd); _cdaga != nil {
					return _cdaga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_cdaff.I = NewCT_BooleanProperty()
				if _dbdcg := d.DecodeElement(_cdaff.I, &_gedcd); _dbdcg != nil {
					return _dbdcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}:
				_cdaff.Strike = NewCT_BooleanProperty()
				if _gbdcfb := d.DecodeElement(_cdaff.Strike, &_gedcd); _gbdcfb != nil {
					return _gbdcfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}:
				_cdaff.Outline = NewCT_BooleanProperty()
				if _eebdb := d.DecodeElement(_cdaff.Outline, &_gedcd); _eebdb != nil {
					return _eebdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}:
				_cdaff.Shadow = NewCT_BooleanProperty()
				if _agdgg := d.DecodeElement(_cdaff.Shadow, &_gedcd); _agdgg != nil {
					return _agdgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}:
				_cdaff.Condense = NewCT_BooleanProperty()
				if _fcdfb := d.DecodeElement(_cdaff.Condense, &_gedcd); _fcdfb != nil {
					return _fcdfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}:
				_cdaff.Extend = NewCT_BooleanProperty()
				if _facaf := d.DecodeElement(_cdaff.Extend, &_gedcd); _facaf != nil {
					return _facaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_cdaff.Color = NewCT_Color()
				if _efacf := d.DecodeElement(_cdaff.Color, &_gedcd); _efacf != nil {
					return _efacf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}:
				_cdaff.Sz = NewCT_FontSize()
				if _dbfbd := d.DecodeElement(_cdaff.Sz, &_gedcd); _dbfbd != nil {
					return _dbfbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}:
				_cdaff.U = NewCT_UnderlineProperty()
				if _cacab := d.DecodeElement(_cdaff.U, &_gedcd); _cacab != nil {
					return _cacab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}:
				_cdaff.VertAlign = NewCT_VerticalAlignFontProperty()
				if _gfaea := d.DecodeElement(_cdaff.VertAlign, &_gedcd); _gfaea != nil {
					return _gfaea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}:
				_cdaff.Scheme = NewCT_FontScheme()
				if _bebb := d.DecodeElement(_cdaff.Scheme, &_gedcd); _bebb != nil {
					return _bebb
				}
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0052\u0050\u0072E\u006c\u0074 \u0025\u0076", _gedcd.Name)
				if _cadgd := d.Skip(); _cadgd != nil {
					return _cadgd
				}
			}
		case _b.EndElement:
			break _ebfad
		case _b.CharData:
		}
	}
	return nil
}

func (_gaggb *ST_TotalsRowFunction) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gaggb = 0
	case "\u006e\u006f\u006e\u0065":
		*_gaggb = 1
	case "\u0073\u0075\u006d":
		*_gaggb = 2
	case "\u006d\u0069\u006e":
		*_gaggb = 3
	case "\u006d\u0061\u0078":
		*_gaggb = 4
	case "\u0061v\u0065\u0072\u0061\u0067\u0065":
		*_gaggb = 5
	case "\u0063\u006f\u0075n\u0074":
		*_gaggb = 6
	case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
		*_gaggb = 7
	case "\u0073\u0074\u0064\u0044\u0065\u0076":
		*_gaggb = 8
	case "\u0076\u0061\u0072":
		*_gaggb = 9
	case "\u0063\u0075\u0073\u0074\u006f\u006d":
		*_gaggb = 10
	}
	return nil
}

// Validate validates the CT_ExternalReference and its children
func (_fggbg *CT_ExternalReference) Validate() error {
	return _fggbg.ValidateWithPath("C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cR\u0065\u0066\u0065\u0072en\u0063\u0065")
}

func NewCT_FileSharing() *CT_FileSharing { _ddfcf := &CT_FileSharing{}; return _ddfcf }

func (_afa *CT_Borders) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _afa.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_afa.CountAttr)})
	}
	e.EncodeToken(start)
	if _afa.Border != nil {
		_fcgcg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0062\u006f\u0072\u0064\u0065r"}}
		for _, _ecgd := range _afa.Border {
			e.EncodeElement(_ecgd, _fcgcg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_acfce *CT_PageBreak) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbbbg := range start.Attr {
		if _bbbbg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bbecc, _bbcaf := _eb.ParseUint(_bbbbg.Value, 10, 32)
			if _bbcaf != nil {
				return _bbcaf
			}
			_fegba := uint32(_bbecc)
			_acfce.CountAttr = &_fegba
			continue
		}
		if _bbbbg.Name.Local == "\u006d\u0061n\u0075\u0061\u006cB\u0072\u0065\u0061\u006b\u0043\u006f\u0075\u006e\u0074" {
			_bbcdg, _babgb := _eb.ParseUint(_bbbbg.Value, 10, 32)
			if _babgb != nil {
				return _babgb
			}
			_fcgad := uint32(_bbcdg)
			_acfce.ManualBreakCountAttr = &_fcgad
			continue
		}
	}
_decae:
	for {
		_afdedf, _fead := d.Token()
		if _fead != nil {
			return _fead
		}
		switch _adafe := _afdedf.(type) {
		case _b.StartElement:
			switch _adafe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006b"}:
				_cfga := NewCT_Break()
				if _cbdfg := d.DecodeElement(_cfga, &_adafe); _cbdfg != nil {
					return _cbdfg
				}
				_acfce.Brk = append(_acfce.Brk, _cfga)
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0061\u0067e\u0042\u0072\u0065\u0061\u006b\u0020\u0025\u0076", _adafe.Name)
				if _cddf := d.Skip(); _cddf != nil {
					return _cddf
				}
			}
		case _b.EndElement:
			break _decae
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_IconSet and its children
func (_ccfbf *CT_IconSet) Validate() error {
	return _ccfbf.ValidateWithPath("\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0053\u0065\u0074")
}

func (_gfeaee ST_VolDepType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gbgdf := _b.Attr{}
	_gbgdf.Name = name
	switch _gfeaee {
	case ST_VolDepTypeUnset:
		_gbgdf.Value = ""
	case ST_VolDepTypeRealTimeData:
		_gbgdf.Value = "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061"
	case ST_VolDepTypeOlapFunctions:
		_gbgdf.Value = "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073"
	}
	return _gbgdf, nil
}

// Validate validates the CT_Schema and its children
func (_gagfc *CT_Schema) Validate() error {
	return _gagfc.ValidateWithPath("\u0043T\u005f\u0053\u0063\u0068\u0065\u006da")
}

// Validate validates the CT_XmlCellPr and its children
func (_agafag *CT_XmlCellPr) Validate() error {
	return _agafag.ValidateWithPath("\u0043\u0054\u005fX\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072")
}

// Validate validates the CT_BooleanProperty and its children
func (_cgd *CT_BooleanProperty) Validate() error {
	return _cgd.ValidateWithPath("\u0043T\u005fB\u006f\u006f\u006c\u0065\u0061n\u0050\u0072o\u0070\u0065\u0072\u0074\u0079")
}

// ValidateWithPath validates the CT_FontFamily and its children, prefixing error messages with path
func (_adde *CT_FontFamily) ValidateWithPath(path string) error {
	if _adde.ValAttr < 0 {
		return _ec.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _adde.ValAttr)
	}
	if _adde.ValAttr > 14 {
		return _ec.Errorf("\u0025\u0073/m\u002e\u0056\u0061l\u0041\u0074\u0074\u0072 mu\u0073t \u0062\u0065\u0020\u003c\u003d\u0020\u00314 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _adde.ValAttr)
	}
	return nil
}

func NewCT_Filters() *CT_Filters { _fbeef := &CT_Filters{}; return _fbeef }

// Validate validates the CT_Color and its children
func (_aaceb *CT_Color) Validate() error {
	return _aaceb.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072")
}

func (_abeec *Sst) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abeec.CT_Sst = *NewCT_Sst()
	for _, _abcfga := range start.Attr {
		if _abcfga.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ceeab, _debbef := _eb.ParseUint(_abcfga.Value, 10, 32)
			if _debbef != nil {
				return _debbef
			}
			_facfef := uint32(_ceeab)
			_abeec.CountAttr = &_facfef
			continue
		}
		if _abcfga.Name.Local == "u\u006e\u0069\u0071\u0075\u0065\u0043\u006f\u0075\u006e\u0074" {
			_debcc, _dgaacg := _eb.ParseUint(_abcfga.Value, 10, 32)
			if _dgaacg != nil {
				return _dgaacg
			}
			_dgdac := uint32(_debcc)
			_abeec.UniqueCountAttr = &_dgdac
			continue
		}
	}
_debcd:
	for {
		_cbaabb, _abfdd := d.Token()
		if _abfdd != nil {
			return _abfdd
		}
		switch _fdada := _cbaabb.(type) {
		case _b.StartElement:
			switch _fdada.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}:
				_gcccb := NewCT_Rst()
				if _dcfgg := d.DecodeElement(_gcccb, &_fdada); _dcfgg != nil {
					return _dcfgg
				}
				_abeec.Si = append(_abeec.Si, _gcccb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abeec.ExtLst = NewCT_ExtensionList()
				if _afebfb := d.DecodeElement(_abeec.ExtLst, &_fdada); _afebfb != nil {
					return _afebfb
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0053s\u0074\u0020\u0025\u0076", _fdada.Name)
				if _gcgfdf := d.Skip(); _gcgfdf != nil {
					return _gcgfdf
				}
			}
		case _b.EndElement:
			break _debcd
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_DataBinding() *CT_DataBinding { _aafef := &CT_DataBinding{}; return _aafef }

func (_adeba *CT_Missing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _adeba.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adeba.UAttr))})
	}
	if _adeba.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adeba.FAttr))})
	}
	if _adeba.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_adeba.CAttr)})
	}
	if _adeba.CpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0070"}, Value: _ec.Sprintf("\u0025\u0076", *_adeba.CpAttr)})
	}
	if _adeba.InAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_adeba.InAttr)})
	}
	if _adeba.BcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_adeba.BcAttr)})
	}
	if _adeba.FcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_adeba.FcAttr)})
	}
	if _adeba.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adeba.IAttr))})
	}
	if _adeba.UnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adeba.UnAttr))})
	}
	if _adeba.StAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adeba.StAttr))})
	}
	if _adeba.BAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adeba.BAttr))})
	}
	e.EncodeToken(start)
	if _adeba.Tpls != nil {
		_bfdgd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _fgfaa := range _adeba.Tpls {
			e.EncodeElement(_fgfaa, _bfdgd)
		}
	}
	if _adeba.X != nil {
		_gcedc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _bdfad := range _adeba.X {
			e.EncodeElement(_bdfad, _gcedc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_CfRule struct {

	// Type
	TypeAttr ST_CfType

	// Differential Formatting Id
	DxfIdAttr *uint32

	// Priority
	PriorityAttr int32

	// Stop If True
	StopIfTrueAttr *bool

	// Above Or Below Average
	AboveAverageAttr *bool

	// Top 10 Percent
	PercentAttr *bool

	// Bottom N
	BottomAttr *bool

	// Operator
	OperatorAttr ST_ConditionalFormattingOperator

	// Text
	TextAttr *string

	// Time Period
	TimePeriodAttr ST_TimePeriod

	// Rank
	RankAttr *uint32

	// StdDev
	StdDevAttr *int32

	// Equal Average
	EqualAverageAttr *bool

	// Formula
	Formula []string

	// Color Scale
	ColorScale *CT_ColorScale

	// Data Bar
	DataBar *CT_DataBar

	// Icon Set
	IconSet *CT_IconSet
	ExtLst  *CT_ExtensionList
}

// Validate validates the CT_WebPublishItems and its children
func (_ebaeee *CT_WebPublishItems) Validate() error {
	return _ebaeee.ValidateWithPath("\u0043T\u005fW\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073")
}

func (_eccab *CT_GroupItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eefbd := range start.Attr {
		if _eefbd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cdfeb, _cfge := _eb.ParseUint(_eefbd.Value, 10, 32)
			if _cfge != nil {
				return _cfge
			}
			_fadbd := uint32(_cdfeb)
			_eccab.CountAttr = &_fadbd
			continue
		}
	}
_dbdc:
	for {
		_gedab, _eabbg := d.Token()
		if _eabbg != nil {
			return _eabbg
		}
		switch _cgeff := _gedab.(type) {
		case _b.StartElement:
			switch _cgeff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_abbde := NewCT_Missing()
				if _dgfc := d.DecodeElement(_abbde, &_cgeff); _dgfc != nil {
					return _dgfc
				}
				_eccab.M = append(_eccab.M, _abbde)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_faega := NewCT_Number()
				if _fbdge := d.DecodeElement(_faega, &_cgeff); _fbdge != nil {
					return _fbdge
				}
				_eccab.N = append(_eccab.N, _faega)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_adbe := NewCT_Boolean()
				if _eaebc := d.DecodeElement(_adbe, &_cgeff); _eaebc != nil {
					return _eaebc
				}
				_eccab.B = append(_eccab.B, _adbe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_cccbe := NewCT_Error()
				if _adcec := d.DecodeElement(_cccbe, &_cgeff); _adcec != nil {
					return _adcec
				}
				_eccab.E = append(_eccab.E, _cccbe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_dgeee := NewCT_String()
				if _bbeag := d.DecodeElement(_dgeee, &_cgeff); _bbeag != nil {
					return _bbeag
				}
				_eccab.S = append(_eccab.S, _dgeee)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
				_bccde := NewCT_DateTime()
				if _bafda := d.DecodeElement(_bccde, &_cgeff); _bafda != nil {
					return _bafda
				}
				_eccab.D = append(_eccab.D, _bccde)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073 \u0025\u0076", _cgeff.Name)
				if _gabebd := d.Skip(); _gabebd != nil {
					return _gabebd
				}
			}
		case _b.EndElement:
			break _dbdc
		case _b.CharData:
		}
	}
	return nil
}

func (_agbca ST_Comments) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_agbca.String(), start)
}

func NewCT_QueryTableDeletedFields() *CT_QueryTableDeletedFields {
	_dfbcd := &CT_QueryTableDeletedFields{}
	return _dfbcd
}

type CT_TupleCache struct {

	// Entries
	Entries *CT_PCDSDTCEntries

	// Sets
	Sets *CT_Sets

	// OLAP Query Cache
	QueryCache *CT_QueryCache

	// Server Formats
	ServerFormats *CT_ServerFormats

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_gccf *CT_DateGroupItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079\u0065\u0061\u0072"}, Value: _ec.Sprintf("\u0025\u0076", _gccf.YearAttr)})
	if _gccf.MonthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u006f\u006et\u0068"}, Value: _ec.Sprintf("\u0025\u0076", *_gccf.MonthAttr)})
	}
	if _gccf.DayAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0079"}, Value: _ec.Sprintf("\u0025\u0076", *_gccf.DayAttr)})
	}
	if _gccf.HourAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u006f\u0075\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_gccf.HourAttr)})
	}
	if _gccf.MinuteAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0075\u0074\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_gccf.MinuteAttr)})
	}
	if _gccf.SecondAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0063\u006f\u006e\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_gccf.SecondAttr)})
	}
	_bbfe, _edgf := _gccf.DateTimeGroupingAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0061t\u0065\u0054\u0069m\u0065\u0047\u0072\u006f\u0075\u0070\u0069\u006e\u0067"})
	if _edgf != nil {
		return _edgf
	}
	start.Attr = append(start.Attr, _bbfe)
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TextHAlignUnset       ST_TextHAlign = 0
	ST_TextHAlignLeft        ST_TextHAlign = 1
	ST_TextHAlignCenter      ST_TextHAlign = 2
	ST_TextHAlignRight       ST_TextHAlign = 3
	ST_TextHAlignJustify     ST_TextHAlign = 4
	ST_TextHAlignDistributed ST_TextHAlign = 5
)

func (_dbcde *ST_HtmlFmt) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_edcgd, _gdbbda := d.Token()
	if _gdbbda != nil {
		return _gdbbda
	}
	if _aggfgc, _ddbbgg := _edcgd.(_b.EndElement); _ddbbgg && _aggfgc.Name == start.Name {
		*_dbcde = 1
		return nil
	}
	if _efeagd, _gafdb := _edcgd.(_b.CharData); !_gafdb {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edcgd)
	} else {
		switch string(_efeagd) {
		case "":
			*_dbcde = 0
		case "\u006e\u006f\u006e\u0065":
			*_dbcde = 1
		case "\u0072\u0074\u0066":
			*_dbcde = 2
		case "\u0061\u006c\u006c":
			*_dbcde = 3
		}
	}
	_edcgd, _gdbbda = d.Token()
	if _gdbbda != nil {
		return _gdbbda
	}
	if _afbagdc, _ccacde := _edcgd.(_b.EndElement); _ccacde && _afbagdc.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edcgd)
}

type ST_Axis byte

type CT_MeasureGroup struct {

	// Measure Group Name
	NameAttr string

	// Measure Group Display Name
	CaptionAttr string
}

// Validate validates the CT_FontName and its children
func (_cdbgd *CT_FontName) Validate() error {
	return _cdbgd.ValidateWithPath("C\u0054\u005f\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065")
}

func (_ebae *CT_PivotCache) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eaeaa := range start.Attr {
		if _eaeaa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _eaeaa.Name.Local == "\u0069\u0064" || _eaeaa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _eaeaa.Name.Local == "\u0069\u0064" {
			_gdcfbg, _gaddaa := _eaeaa.Value, error(nil)
			if _gaddaa != nil {
				return _gaddaa
			}
			_ebae.IdAttr = _gdcfbg
			continue
		}
		if _eaeaa.Name.Local == "\u0063a\u0063\u0068\u0065\u0049\u0064" {
			_cbddfc, _bgece := _eb.ParseUint(_eaeaa.Value, 10, 32)
			if _bgece != nil {
				return _bgece
			}
			_ebae.CacheIdAttr = uint32(_cbddfc)
			continue
		}
	}
	for {
		_bccac, _beafe := d.Token()
		if _beafe != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050i\u0076o\u0074C\u0061\u0063\u0068\u0065\u003a\u0020\u0025s", _beafe)
		}
		if _effde, _febace := _bccac.(_b.EndElement); _febace && _effde.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gcgaed ST_Pane) String() string {
	switch _gcgaed {
	case 0:
		return ""
	case 1:
		return "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case 2:
		return "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case 3:
		return "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case 4:
		return "\u0074o\u0070\u004c\u0065\u0066\u0074"
	}
	return ""
}

func (_ffeec *CT_VolTopicRef) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _ec.Sprintf("\u0025\u0076", _ffeec.RAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _ec.Sprintf("\u0025\u0076", _ffeec.SAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_NumFmt and its children
func (_egeeg *CT_NumFmt) Validate() error {
	return _egeeg.ValidateWithPath("\u0043T\u005f\u004e\u0075\u006d\u0046\u006dt")
}

func (_gcfgb *CT_Macrosheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Name.Local = "\u006d\u0061:\u0043\u0054\u005fM\u0061\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074"
	e.EncodeToken(start)
	if _gcfgb.SheetPr != nil {
		_eddfd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_gcfgb.SheetPr, _eddfd)
	}
	if _gcfgb.Dimension != nil {
		_eebdf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"}}
		e.EncodeElement(_gcfgb.Dimension, _eebdf)
	}
	if _gcfgb.SheetViews != nil {
		_cbef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_gcfgb.SheetViews, _cbef)
	}
	if _gcfgb.SheetFormatPr != nil {
		_deadf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}}
		e.EncodeElement(_gcfgb.SheetFormatPr, _deadf)
	}
	if _gcfgb.Cols != nil {
		_eafgc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u006f\u006c\u0073"}}
		for _, _aecad := range _gcfgb.Cols {
			e.EncodeElement(_aecad, _eafgc)
		}
	}
	_ebfd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_gcfgb.SheetData, _ebfd)
	if _gcfgb.SheetProtection != nil {
		_ceecc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_gcfgb.SheetProtection, _ceecc)
	}
	if _gcfgb.AutoFilter != nil {
		_agfdf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_gcfgb.AutoFilter, _agfdf)
	}
	if _gcfgb.SortState != nil {
		_eeabc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_gcfgb.SortState, _eeabc)
	}
	if _gcfgb.DataConsolidate != nil {
		_bbffb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ad\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065"}}
		e.EncodeElement(_gcfgb.DataConsolidate, _bbffb)
	}
	if _gcfgb.CustomSheetViews != nil {
		_egaae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_gcfgb.CustomSheetViews, _egaae)
	}
	if _gcfgb.PhoneticPr != nil {
		_geaba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}}
		e.EncodeElement(_gcfgb.PhoneticPr, _geaba)
	}
	if _gcfgb.ConditionalFormatting != nil {
		_fgdbc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"}}
		for _, _bdabe := range _gcfgb.ConditionalFormatting {
			e.EncodeElement(_bdabe, _fgdbc)
		}
	}
	if _gcfgb.PrintOptions != nil {
		_fcedf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_gcfgb.PrintOptions, _fcedf)
	}
	if _gcfgb.PageMargins != nil {
		_eegga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_gcfgb.PageMargins, _eegga)
	}
	if _gcfgb.PageSetup != nil {
		_dfgg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_gcfgb.PageSetup, _dfgg)
	}
	if _gcfgb.HeaderFooter != nil {
		_fddea := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_gcfgb.HeaderFooter, _fddea)
	}
	if _gcfgb.RowBreaks != nil {
		_gfaa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_gcfgb.RowBreaks, _gfaa)
	}
	if _gcfgb.ColBreaks != nil {
		_aagdf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_gcfgb.ColBreaks, _aagdf)
	}
	if _gcfgb.CustomProperties != nil {
		_fcbeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}}
		e.EncodeElement(_gcfgb.CustomProperties, _fcbeb)
	}
	if _gcfgb.Drawing != nil {
		_cgdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_gcfgb.Drawing, _cgdg)
	}
	if _gcfgb.LegacyDrawing != nil {
		_aadaeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_gcfgb.LegacyDrawing, _aadaeb)
	}
	if _gcfgb.LegacyDrawingHF != nil {
		_eafa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_gcfgb.LegacyDrawingHF, _eafa)
	}
	if _gcfgb.DrawingHF != nil {
		_dcbdd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_gcfgb.DrawingHF, _dcbdd)
	}
	if _gcfgb.Picture != nil {
		_gacag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}}
		e.EncodeElement(_gcfgb.Picture, _gacag)
	}
	if _gcfgb.OleObjects != nil {
		_dcage := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_gcfgb.OleObjects, _dcage)
	}
	if _gcfgb.ExtLst != nil {
		_bfcbd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gcfgb.ExtLst, _bfcbd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_aebga *CT_DataConsolidate) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aebga.FunctionAttr != ST_DataConsolidateFunctionUnset {
		_fgee, _egdd := _aebga.FunctionAttr.MarshalXMLAttr(_b.Name{Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e"})
		if _egdd != nil {
			return _egdd
		}
		start.Attr = append(start.Attr, _fgee)
	}
	if _aebga.StartLabelsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0074\u0061\u0072\u0074\u004c\u0061\u0062\u0065\u006c\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aebga.StartLabelsAttr))})
	}
	if _aebga.LeftLabelsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u0066\u0074\u004c\u0061\u0062\u0065\u006c\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aebga.LeftLabelsAttr))})
	}
	if _aebga.TopLabelsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074o\u0070\u004c\u0061\u0062\u0065\u006cs"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aebga.TopLabelsAttr))})
	}
	if _aebga.LinkAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0069\u006e\u006b"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aebga.LinkAttr))})
	}
	e.EncodeToken(start)
	if _aebga.DataRefs != nil {
		_ababc := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0064\u0061\u0074\u0061\u0052\u0065\u0066\u0073"}}
		e.EncodeElement(_aebga.DataRefs, _ababc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cgace *CT_CustomWorkbookViews) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bcdea:
	for {
		_cagf, _beda := d.Token()
		if _beda != nil {
			return _beda
		}
		switch _gaffb := _cagf.(type) {
		case _b.StartElement:
			switch _gaffb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0057\u006f\u0072k\u0062\u006fo\u006b\u0056\u0069\u0065\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0057\u006f\u0072k\u0062\u006fo\u006b\u0056\u0069\u0065\u0077"}:
				_cfbf := NewCT_CustomWorkbookView()
				if _dabg := d.DecodeElement(_cfbf, &_gaffb); _dabg != nil {
					return _dabg
				}
				_cgace.CustomWorkbookView = append(_cgace.CustomWorkbookView, _cfbf)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u0075\u0073\u0074o\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _gaffb.Name)
				if _dbcd := d.Skip(); _dbcd != nil {
					return _dbcd
				}
			}
		case _b.EndElement:
			break _bcdea
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_XmlPr() *CT_XmlPr { _gfded := &CT_XmlPr{}; return _gfded }

func (_eebcf *CT_Fonts) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eebcf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_eebcf.CountAttr)})
	}
	e.EncodeToken(start)
	if _eebcf.Font != nil {
		_gdeg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u006f\u006e\u0074"}}
		for _, _egdef := range _eebcf.Font {
			e.EncodeElement(_egdef, _gdeg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_MetadataRecord() *CT_MetadataRecord { _gagc := &CT_MetadataRecord{}; return _gagc }

func (_bbbdb *CT_ExternalSheetDataSet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bfebd:
	for {
		_fagff, _befafe := d.Token()
		if _befafe != nil {
			return _befafe
		}
		switch _bdea := _fagff.(type) {
		case _b.StartElement:
			switch _bdea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				_afadcc := NewCT_ExternalSheetData()
				if _gecae := d.DecodeElement(_afadcc, &_bdea); _gecae != nil {
					return _gecae
				}
				_bbbdb.SheetData = append(_bbbdb.SheetData, _afadcc)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0053h\u0065\u0065\u0074\u0044\u0061\u0074a\u0053\u0065\u0074 \u0025\u0076", _bdea.Name)
				if _gegd := d.Skip(); _gegd != nil {
					return _gegd
				}
			}
		case _b.EndElement:
			break _bfebd
		case _b.CharData:
		}
	}
	return nil
}

func (_bagace *CT_SmartTagType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bgagf := range start.Attr {
		if _bgagf.Name.Local == "\u006e\u0061\u006de\u0073\u0070\u0061\u0063\u0065\u0055\u0072\u0069" {
			_cdcca, _fbcff := _bgagf.Value, error(nil)
			if _fbcff != nil {
				return _fbcff
			}
			_bagace.NamespaceUriAttr = &_cdcca
			continue
		}
		if _bgagf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gdfae, _bbacg := _bgagf.Value, error(nil)
			if _bbacg != nil {
				return _bbacg
			}
			_bagace.NameAttr = &_gdfae
			continue
		}
		if _bgagf.Name.Local == "\u0075\u0072\u006c" {
			_debdda, _addff := _bgagf.Value, error(nil)
			if _addff != nil {
				return _addff
			}
			_bagace.UrlAttr = &_debdda
			continue
		}
	}
	for {
		_ceafg, _dcgfcg := d.Token()
		if _dcgfcg != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054a\u0067\u0054\u0079p\u0065:\u0020\u0025\u0073", _dcgfcg)
		}
		if _bdfcd, _ecbcf := _ceafg.(_b.EndElement); _ecbcf && _bdfcd.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ColorFilter and its children
func (_cgaf *CT_ColorFilter) Validate() error {
	return _cgaf.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0046i\u006c\u0074\u0065\u0072")
}

type CT_CellStyle struct {

	// User Defined Cell Style
	NameAttr *string

	// Format Id
	XfIdAttr uint32

	// Built-In Style Id
	BuiltinIdAttr *uint32

	// Outline Style
	ILevelAttr *uint32

	// Hidden Style
	HiddenAttr *bool

	// Custom Built In
	CustomBuiltinAttr *bool

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_Authors and its children, prefixing error messages with path
func (_bgc *CT_Authors) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_PivotTableStyle and its children
func (_cfegg *CT_PivotTableStyle) Validate() error {
	return _cfegg.ValidateWithPath("\u0043T\u005fP\u0069\u0076\u006f\u0074\u0054a\u0062\u006ce\u0053\u0074\u0079\u006c\u0065")
}

func (_fccbc *CT_Color) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cafg := range start.Attr {
		if _cafg.Name.Local == "\u0061\u0075\u0074\u006f" {
			_aaab, _bcdda := _eb.ParseBool(_cafg.Value)
			if _bcdda != nil {
				return _bcdda
			}
			_fccbc.AutoAttr = &_aaab
			continue
		}
		if _cafg.Name.Local == "\u0069n\u0064\u0065\u0078\u0065\u0064" {
			_cgee, _gfece := _eb.ParseUint(_cafg.Value, 10, 32)
			if _gfece != nil {
				return _gfece
			}
			_aefa := uint32(_cgee)
			_fccbc.IndexedAttr = &_aefa
			continue
		}
		if _cafg.Name.Local == "\u0072\u0067\u0062" {
			_fecd, _bcec := _cafg.Value, error(nil)
			if _bcec != nil {
				return _bcec
			}
			_fccbc.RgbAttr = &_fecd
			continue
		}
		if _cafg.Name.Local == "\u0074\u0068\u0065m\u0065" {
			_geedf, _deb := _eb.ParseUint(_cafg.Value, 10, 32)
			if _deb != nil {
				return _deb
			}
			_decc := uint32(_geedf)
			_fccbc.ThemeAttr = &_decc
			continue
		}
		if _cafg.Name.Local == "\u0074\u0069\u006e\u0074" {
			_affgb, _ceed := _eb.ParseFloat(_cafg.Value, 64)
			if _ceed != nil {
				return _ceed
			}
			_fccbc.TintAttr = &_affgb
			continue
		}
	}
	for {
		_egba, _bgae := d.Token()
		if _bgae != nil {
			return _ec.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u006f\u006c\u006f\u0072: \u0025\u0073", _bgae)
		}
		if _fbad, _ddac := _egba.(_b.EndElement); _ddac && _fbad.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_ItemType byte

// Validate validates the CT_X and its children
func (_bfgfb *CT_X) Validate() error { return _bfgfb.ValidateWithPath("\u0043\u0054\u005f\u0058") }

// Validate validates the CT_AutoFilter and its children
func (_gcge *CT_AutoFilter) Validate() error {
	return _gcge.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072")
}

type CT_Scenario struct {

	// Scenario Name
	NameAttr string

	// Scenario Locked
	LockedAttr *bool

	// Hidden Scenario
	HiddenAttr *bool

	// Changing Cell Count
	CountAttr *uint32

	// User Name
	UserAttr *string

	// Scenario Comment
	CommentAttr *string

	// Input Cells
	InputCells []*CT_InputCells
}

// Validate validates the CT_QueryTableRefresh and its children
func (_geeba *CT_QueryTableRefresh) Validate() error {
	return _geeba.ValidateWithPath("C\u0054_\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0052\u0065\u0066re\u0073\u0068")
}

func NewPivotTableDefinition() *PivotTableDefinition {
	_gbfeb := &PivotTableDefinition{}
	_gbfeb.CT_pivotTableDefinition = *NewCT_pivotTableDefinition()
	return _gbfeb
}

func NewCT_DataConsolidate() *CT_DataConsolidate { _gbbfe := &CT_DataConsolidate{}; return _gbbfe }

type CT_XmlColumnPr struct {

	// XML Map Id
	MapIdAttr uint32

	// XPath
	XpathAttr string

	// Denormalized
	DenormalizedAttr *bool

	// XML Data Type
	XmlDataTypeAttr string

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_ecce *CT_DefinedName) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edecg := range start.Attr {
		if _edecg.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_cfec, _ddfda := _eb.ParseBool(_edecg.Value)
			if _ddfda != nil {
				return _ddfda
			}
			_ecce.HiddenAttr = &_cfec
			continue
		}
		if _edecg.Name.Local == "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_cbcbb, _cabdb := _eb.ParseBool(_edecg.Value)
			if _cabdb != nil {
				return _cabdb
			}
			_ecce.FunctionAttr = &_cbcbb
			continue
		}
		if _edecg.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_ccdf, _ddag := _edecg.Value, error(nil)
			if _ddag != nil {
				return _ddag
			}
			_ecce.CommentAttr = &_ccdf
			continue
		}
		if _edecg.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_gebcd, _bbcfb := _edecg.Value, error(nil)
			if _bbcfb != nil {
				return _bbcfb
			}
			_ecce.DescriptionAttr = &_gebcd
			continue
		}
		if _edecg.Name.Local == "\u0068\u0065\u006c\u0070" {
			_ggeg, _cgbb := _edecg.Value, error(nil)
			if _cgbb != nil {
				return _cgbb
			}
			_ecce.HelpAttr = &_ggeg
			continue
		}
		if _edecg.Name.Local == "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r" {
			_bcdgg, _aefce := _edecg.Value, error(nil)
			if _aefce != nil {
				return _aefce
			}
			_ecce.StatusBarAttr = &_bcdgg
			continue
		}
		if _edecg.Name.Local == "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_gbce, _fbcg := _eb.ParseUint(_edecg.Value, 10, 32)
			if _fbcg != nil {
				return _fbcg
			}
			_fggga := uint32(_gbce)
			_ecce.LocalSheetIdAttr = &_fggga
			continue
		}
		if _edecg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cedbec, _beegb := _edecg.Value, error(nil)
			if _beegb != nil {
				return _beegb
			}
			_ecce.NameAttr = _cedbec
			continue
		}
		if _edecg.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075" {
			_deed, _eeggc := _edecg.Value, error(nil)
			if _eeggc != nil {
				return _eeggc
			}
			_ecce.CustomMenuAttr = &_deed
			continue
		}
		if _edecg.Name.Local == "v\u0062\u0050\u0072\u006f\u0063\u0065\u0064\u0075\u0072\u0065" {
			_dacd, _bddfe := _eb.ParseBool(_edecg.Value)
			if _bddfe != nil {
				return _bddfe
			}
			_ecce.VbProcedureAttr = &_dacd
			continue
		}
		if _edecg.Name.Local == "\u0078\u006c\u006d" {
			_daddc, _fdcdb := _eb.ParseBool(_edecg.Value)
			if _fdcdb != nil {
				return _fdcdb
			}
			_ecce.XlmAttr = &_daddc
			continue
		}
		if _edecg.Name.Local == "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064" {
			_baefb, _accc := _eb.ParseUint(_edecg.Value, 10, 32)
			if _accc != nil {
				return _accc
			}
			_baff := uint32(_baefb)
			_ecce.FunctionGroupIdAttr = &_baff
			continue
		}
		if _edecg.Name.Local == "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079" {
			_aebe, _fbgae := _edecg.Value, error(nil)
			if _fbgae != nil {
				return _fbgae
			}
			_ecce.ShortcutKeyAttr = &_aebe
			continue
		}
		if _edecg.Name.Local == "\u0070u\u0062l\u0069\u0073\u0068\u0054\u006f\u0053\u0065\u0072\u0076\u0065\u0072" {
			_caece, _ggceg := _eb.ParseBool(_edecg.Value)
			if _ggceg != nil {
				return _ggceg
			}
			_ecce.PublishToServerAttr = &_caece
			continue
		}
		if _edecg.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0061\u0072\u0061m\u0065\u0074\u0065\u0072" {
			_abccb, _gafb := _eb.ParseBool(_edecg.Value)
			if _gafb != nil {
				return _gafb
			}
			_ecce.WorkbookParameterAttr = &_abccb
			continue
		}
	}
	for {
		_cagbe, _adcdg := d.Token()
		if _adcdg != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fD\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065:\u0020\u0025\u0073", _adcdg)
		}
		if _gebg, _gafcg := _cagbe.(_b.CharData); _gafcg {
			_ecce.Content = string(_gebg)
		}
		if _fddg, _febfd := _cagbe.(_b.EndElement); _febfd && _fddg.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_RevisionDefinedName() *CT_RevisionDefinedName {
	_bcagf := &CT_RevisionDefinedName{}
	return _bcagf
}

func (_bagbgg *ST_TextVAlign) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cfaae, _bceeed := d.Token()
	if _bceeed != nil {
		return _bceeed
	}
	if _cggcgf, _cdded := _cfaae.(_b.EndElement); _cdded && _cggcgf.Name == start.Name {
		*_bagbgg = 1
		return nil
	}
	if _cdcgcb, _bcaae := _cfaae.(_b.CharData); !_bcaae {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cfaae)
	} else {
		switch string(_cdcgcb) {
		case "":
			*_bagbgg = 0
		case "\u0074\u006f\u0070":
			*_bagbgg = 1
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_bagbgg = 2
		case "\u0062\u006f\u0074\u0074\u006f\u006d":
			*_bagbgg = 3
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_bagbgg = 4
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_bagbgg = 5
		}
	}
	_cfaae, _bceeed = d.Token()
	if _bceeed != nil {
		return _bceeed
	}
	if _bebbe, _efdga := _cfaae.(_b.EndElement); _efdga && _bebbe.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cfaae)
}

type CT_TextPr struct {

	// Prompt for File Name
	PromptAttr *bool

	// File Type
	FileTypeAttr ST_FileType

	// Code Page
	CodePageAttr *uint32

	// Character Set
	CharacterSetAttr *string

	// First Row
	FirstRowAttr *uint32

	// Source File Name
	SourceFileAttr *string

	// Delimited File
	DelimitedAttr *bool

	// Decimal Separator
	DecimalAttr *string

	// Thousands Separator
	ThousandsAttr *string

	// Tab as Delimiter
	TabAttr *bool

	// Space is Delimiter
	SpaceAttr *bool

	// Comma is Delimiter
	CommaAttr *bool

	// Semicolon is Delimiter
	SemicolonAttr *bool

	// Consecutive Delimiters
	ConsecutiveAttr *bool

	// Qualifier
	QualifierAttr ST_Qualifier

	// Custom Delimiter
	DelimiterAttr *string

	// Fields
	TextFields *CT_TextFields
}

func (_cacbcd *ST_ParameterType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_caaeef, _dedge := d.Token()
	if _dedge != nil {
		return _dedge
	}
	if _fbaec, _eeebb := _caaeef.(_b.EndElement); _eeebb && _fbaec.Name == start.Name {
		*_cacbcd = 1
		return nil
	}
	if _cgfecd, _ddbed := _caaeef.(_b.CharData); !_ddbed {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _caaeef)
	} else {
		switch string(_cgfecd) {
		case "":
			*_cacbcd = 0
		case "\u0070\u0072\u006f\u006d\u0070\u0074":
			*_cacbcd = 1
		case "\u0076\u0061\u006cu\u0065":
			*_cacbcd = 2
		case "\u0063\u0065\u006c\u006c":
			*_cacbcd = 3
		}
	}
	_caaeef, _dedge = d.Token()
	if _dedge != nil {
		return _dedge
	}
	if _acfbdf, _dadbf := _caaeef.(_b.EndElement); _dadbf && _acfbdf.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _caaeef)
}

// ValidateWithPath validates the CT_FilterColumn and its children, prefixing error messages with path
func (_fagce *CT_FilterColumn) ValidateWithPath(path string) error {
	if _fagce.Filters != nil {
		if _gagaa := _fagce.Filters.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u0073"); _gagaa != nil {
			return _gagaa
		}
	}
	if _fagce.Top10 != nil {
		if _baaca := _fagce.Top10.ValidateWithPath(path + "\u002f\u0054\u006f\u0070\u0031\u0030"); _baaca != nil {
			return _baaca
		}
	}
	if _fagce.CustomFilters != nil {
		if _abag := _fagce.CustomFilters.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0046\u0069l\u0074\u0065\u0072\u0073"); _abag != nil {
			return _abag
		}
	}
	if _fagce.DynamicFilter != nil {
		if _deafa := _fagce.DynamicFilter.ValidateWithPath(path + "\u002f\u0044\u0079\u006e\u0061\u006d\u0069\u0063\u0046i\u006c\u0074\u0065\u0072"); _deafa != nil {
			return _deafa
		}
	}
	if _fagce.ColorFilter != nil {
		if _bagbf := _fagce.ColorFilter.ValidateWithPath(path + "\u002f\u0043\u006fl\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"); _bagbf != nil {
			return _bagbf
		}
	}
	if _fagce.IconFilter != nil {
		if _cccea := _fagce.IconFilter.ValidateWithPath(path + "/\u0049\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"); _cccea != nil {
			return _cccea
		}
	}
	if _fagce.ExtLst != nil {
		if _fefa := _fagce.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fefa != nil {
			return _fefa
		}
	}
	return nil
}

// Validate validates the CT_SheetFormatPr and its children
func (_dcecg *CT_SheetFormatPr) Validate() error {
	return _dcecg.ValidateWithPath("\u0043\u0054_\u0053\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072")
}

type CT_PivotHierarchies struct {

	// OLAP Hierarchy Count
	CountAttr *uint32

	// OLAP Hierarchy
	PivotHierarchy []*CT_PivotHierarchy
}

func (_gabed *CT_MetadataTypes) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gabed.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_gabed.CountAttr)})
	}
	e.EncodeToken(start)
	_fcad := _b.StartElement{Name: _b.Name{Local: "\u006da\u003am\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}}
	for _, _cbbga := range _gabed.MetadataType {
		e.EncodeElement(_cbbga, _fcad)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_CellType byte

type CT_CacheHierarchies struct {

	// Hierarchy Count
	CountAttr *uint32

	// PivotCache Hierarchy
	CacheHierarchy []*CT_CacheHierarchy
}

func (_dadbc *ST_CalcMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dadbc = 0
	case "\u006d\u0061\u006e\u0075\u0061\u006c":
		*_dadbc = 1
	case "\u0061\u0075\u0074\u006f":
		*_dadbc = 2
	case "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065":
		*_dadbc = 3
	}
	return nil
}

func (_degee ST_CellType) Validate() error { return _degee.ValidateWithPath("") }

func (_bdebbc *CT_FilterColumn) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006cI\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _bdebbc.ColIdAttr)})
	if _bdebbc.HiddenButtonAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064d\u0065\u006e\u0042\u0075\u0074\u0074\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bdebbc.HiddenButtonAttr))})
	}
	if _bdebbc.ShowButtonAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0042\u0075\u0074\u0074\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bdebbc.ShowButtonAttr))})
	}
	e.EncodeToken(start)
	if _bdebbc.Filters != nil {
		_eaff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_bdebbc.Filters, _eaff)
	}
	if _bdebbc.Top10 != nil {
		_cece := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u006f\u0070\u0031\u0030"}}
		e.EncodeElement(_bdebbc.Top10, _cece)
	}
	if _bdebbc.CustomFilters != nil {
		_ccacg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0063\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_bdebbc.CustomFilters, _ccacg)
	}
	if _bdebbc.DynamicFilter != nil {
		_adgff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0064\u0079\u006ea\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_bdebbc.DynamicFilter, _adgff)
	}
	if _bdebbc.ColorFilter != nil {
		_gcgd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072\u0046i\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_bdebbc.ColorFilter, _gcgd)
	}
	if _bdebbc.IconFilter != nil {
		_bcccb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_bdebbc.IconFilter, _bcccb)
	}
	if _bdebbc.ExtLst != nil {
		_feebc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bdebbc.ExtLst, _feebc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_edfcg *CT_ColHierarchiesUsage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _edfcg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_edfcg.CountAttr)})
	}
	e.EncodeToken(start)
	_bdafb := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0063\u006f\u006c\u0048\u0069\u0065\u0072\u0061r\u0063\u0068\u0079\u0055sa\u0067\u0065"}}
	for _, _faaf := range _edfcg.ColHierarchyUsage {
		e.EncodeElement(_faaf, _bdafb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fcbed *CT_DefinedName) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _fcbed.NameAttr)})
	if _fcbed.CommentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_fcbed.CommentAttr)})
	}
	if _fcbed.CustomMenuAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075"}, Value: _ec.Sprintf("\u0025\u0076", *_fcbed.CustomMenuAttr)})
	}
	if _fcbed.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_fcbed.DescriptionAttr)})
	}
	if _fcbed.HelpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u006c\u0070"}, Value: _ec.Sprintf("\u0025\u0076", *_fcbed.HelpAttr)})
	}
	if _fcbed.StatusBarAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r"}, Value: _ec.Sprintf("\u0025\u0076", *_fcbed.StatusBarAttr)})
	}
	if _fcbed.LocalSheetIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_fcbed.LocalSheetIdAttr)})
	}
	if _fcbed.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fcbed.HiddenAttr))})
	}
	if _fcbed.FunctionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fcbed.FunctionAttr))})
	}
	if _fcbed.VbProcedureAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "v\u0062\u0050\u0072\u006f\u0063\u0065\u0064\u0075\u0072\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fcbed.VbProcedureAttr))})
	}
	if _fcbed.XlmAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006c\u006d"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fcbed.XlmAttr))})
	}
	if _fcbed.FunctionGroupIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_fcbed.FunctionGroupIdAttr)})
	}
	if _fcbed.ShortcutKeyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079"}, Value: _ec.Sprintf("\u0025\u0076", *_fcbed.ShortcutKeyAttr)})
	}
	if _fcbed.PublishToServerAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070u\u0062l\u0069\u0073\u0068\u0054\u006f\u0053\u0065\u0072\u0076\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fcbed.PublishToServerAttr))})
	}
	if _fcbed.WorkbookParameterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0061\u0072\u0061m\u0065\u0074\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fcbed.WorkbookParameterAttr))})
	}
	e.EncodeElement(_fcbed.Content, start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Number and its children, prefixing error messages with path
func (_addgg *CT_Number) ValidateWithPath(path string) error {
	for _egaaeg, _caffc := range _addgg.Tpls {
		if _cabda := _caffc.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _egaaeg)); _cabda != nil {
			return _cabda
		}
	}
	for _befcb, _cgceg := range _addgg.X {
		if _cebaa := _cgceg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _befcb)); _cebaa != nil {
			return _cebaa
		}
	}
	return nil
}

func (_egede *CT_Fills) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ggcca := range start.Attr {
		if _ggcca.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ffefgc, _cafc := _eb.ParseUint(_ggcca.Value, 10, 32)
			if _cafc != nil {
				return _cafc
			}
			_gabdg := uint32(_ffefgc)
			_egede.CountAttr = &_gabdg
			continue
		}
	}
_aebge:
	for {
		_ebdbb, _gefce := d.Token()
		if _gefce != nil {
			return _gefce
		}
		switch _cbdeg := _ebdbb.(type) {
		case _b.StartElement:
			switch _cbdeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_efbdf := NewCT_Fill()
				if _bfcge := d.DecodeElement(_efbdf, &_cbdeg); _bfcge != nil {
					return _bfcge
				}
				_egede.Fill = append(_egede.Fill, _efbdf)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0073\u0020\u0025\u0076", _cbdeg.Name)
				if _daebg := d.Skip(); _daebg != nil {
					return _daebg
				}
			}
		case _b.EndElement:
			break _aebge
		case _b.CharData:
		}
	}
	return nil
}

type ST_ExternalConnectionType byte

func (_gabad *CT_MetadataStrings) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bfbgcc := range start.Attr {
		if _bfbgcc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_agfee, _gfccg := _eb.ParseUint(_bfbgcc.Value, 10, 32)
			if _gfccg != nil {
				return _gfccg
			}
			_cfbbd := uint32(_agfee)
			_gabad.CountAttr = &_cfbbd
			continue
		}
	}
_aagcg:
	for {
		_beedg, _adcba := d.Token()
		if _adcba != nil {
			return _adcba
		}
		switch _aebfd := _beedg.(type) {
		case _b.StartElement:
			switch _aebfd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_addda := NewCT_XStringElement()
				if _fgdfgf := d.DecodeElement(_addda, &_aebfd); _fgdfgf != nil {
					return _fgdfgf
				}
				_gabad.S = append(_gabad.S, _addda)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073\u0020\u0025\u0076", _aebfd.Name)
				if _adeef := d.Skip(); _adeef != nil {
					return _adeef
				}
			}
		case _b.EndElement:
			break _aagcg
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Cell and its children, prefixing error messages with path
func (_aebb *CT_Cell) ValidateWithPath(path string) error {
	if _fgbb := _aebb.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _fgbb != nil {
		return _fgbb
	}
	if _aebb.F != nil {
		if _gbed := _aebb.F.ValidateWithPath(path + "\u002f\u0046"); _gbed != nil {
			return _gbed
		}
	}
	if _aebb.Is != nil {
		if _cebc := _aebb.Is.ValidateWithPath(path + "\u002f\u0049\u0073"); _cebc != nil {
			return _cebc
		}
	}
	if _aebb.ExtLst != nil {
		if _bdb := _aebb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bdb != nil {
			return _bdb
		}
	}
	return nil
}

// Validate validates the CT_PivotFilters and its children
func (_fdfea *CT_PivotFilters) Validate() error {
	return _fdfea.ValidateWithPath("\u0043T\u005fP\u0069\u0076\u006f\u0074\u0046\u0069\u006c\u0074\u0065\u0072\u0073")
}

func (_beeg *CT_DateTime) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ffcee := range start.Attr {
		if _ffcee.Name.Local == "\u0076" {
			_fbgd, _gffb := ParseStdlibTime(_ffcee.Value)
			if _gffb != nil {
				return _gffb
			}
			_beeg.VAttr = _fbgd
			continue
		}
		if _ffcee.Name.Local == "\u0075" {
			_fdefa, _bcdeg := _eb.ParseBool(_ffcee.Value)
			if _bcdeg != nil {
				return _bcdeg
			}
			_beeg.UAttr = &_fdefa
			continue
		}
		if _ffcee.Name.Local == "\u0066" {
			_gcffc, _cfde := _eb.ParseBool(_ffcee.Value)
			if _cfde != nil {
				return _cfde
			}
			_beeg.FAttr = &_gcffc
			continue
		}
		if _ffcee.Name.Local == "\u0063" {
			_cadb, _gaacf := _ffcee.Value, error(nil)
			if _gaacf != nil {
				return _gaacf
			}
			_beeg.CAttr = &_cadb
			continue
		}
		if _ffcee.Name.Local == "\u0063\u0070" {
			_acae, _bbef := _eb.ParseUint(_ffcee.Value, 10, 32)
			if _bbef != nil {
				return _bbef
			}
			_gdcc := uint32(_acae)
			_beeg.CpAttr = &_gdcc
			continue
		}
	}
_defa:
	for {
		_ccbeg, _ffcge := d.Token()
		if _ffcge != nil {
			return _ffcge
		}
		switch _cdgeg := _ccbeg.(type) {
		case _b.StartElement:
			switch _cdgeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_fbeeg := NewCT_X()
				if _cbdd := d.DecodeElement(_fbeeg, &_cdgeg); _cbdd != nil {
					return _cbdd
				}
				_beeg.X = append(_beeg.X, _fbeeg)
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0065\u0054\u0069\u006d\u0065\u0020\u0025\u0076", _cdgeg.Name)
				if _gcafd := d.Skip(); _gcafd != nil {
					return _gcafd
				}
			}
		case _b.EndElement:
			break _defa
		case _b.CharData:
		}
	}
	return nil
}

func (_dbbaf *CT_PageFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dbbaf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_dbbaf.CountAttr)})
	}
	e.EncodeToken(start)
	_cbdcbg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064"}}
	for _, _efdaa := range _dbbaf.PageField {
		e.EncodeElement(_efdaa, _cbdcbg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_DataConsolidateFunctionUnset     ST_DataConsolidateFunction = 0
	ST_DataConsolidateFunctionAverage   ST_DataConsolidateFunction = 1
	ST_DataConsolidateFunctionCount     ST_DataConsolidateFunction = 2
	ST_DataConsolidateFunctionCountNums ST_DataConsolidateFunction = 3
	ST_DataConsolidateFunctionMax       ST_DataConsolidateFunction = 4
	ST_DataConsolidateFunctionMin       ST_DataConsolidateFunction = 5
	ST_DataConsolidateFunctionProduct   ST_DataConsolidateFunction = 6
	ST_DataConsolidateFunctionStdDev    ST_DataConsolidateFunction = 7
	ST_DataConsolidateFunctionStdDevp   ST_DataConsolidateFunction = 8
	ST_DataConsolidateFunctionSum       ST_DataConsolidateFunction = 9
	ST_DataConsolidateFunctionVar       ST_DataConsolidateFunction = 10
	ST_DataConsolidateFunctionVarp      ST_DataConsolidateFunction = 11
)

func (_aebd *ST_TargetScreenSize) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dcfgdd, _fedfa := d.Token()
	if _fedfa != nil {
		return _fedfa
	}
	if _fdfcg, _ggafa := _dcfgdd.(_b.EndElement); _ggafa && _fdfcg.Name == start.Name {
		*_aebd = 1
		return nil
	}
	if _ddbba, _abbaca := _dcfgdd.(_b.CharData); !_abbaca {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dcfgdd)
	} else {
		switch string(_ddbba) {
		case "":
			*_aebd = 0
		case "\u00354\u0034\u0078\u0033\u0037\u0036":
			*_aebd = 1
		case "\u00364\u0030\u0078\u0034\u0038\u0030":
			*_aebd = 2
		case "\u00372\u0030\u0078\u0035\u0031\u0032":
			*_aebd = 3
		case "\u00380\u0030\u0078\u0036\u0030\u0030":
			*_aebd = 4
		case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
			*_aebd = 5
		case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
			*_aebd = 6
		case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
			*_aebd = 7
		case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
			*_aebd = 8
		case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
			*_aebd = 9
		case "\u00318\u0030\u0030\u0078\u0031\u0034\u00340":
			*_aebd = 10
		case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
			*_aebd = 11
		}
	}
	_dcfgdd, _fedfa = d.Token()
	if _fedfa != nil {
		return _fedfa
	}
	if _bgeaa, _cagff := _dcfgdd.(_b.EndElement); _cagff && _bgeaa.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dcfgdd)
}

func NewCT_ExternalBook() *CT_ExternalBook { _gfcef := &CT_ExternalBook{}; return _gfcef }

func (_addab ST_PrintError) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_egebg := _b.Attr{}
	_egebg.Name = name
	switch _addab {
	case ST_PrintErrorUnset:
		_egebg.Value = ""
	case ST_PrintErrorDisplayed:
		_egebg.Value = "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d"
	case ST_PrintErrorBlank:
		_egebg.Value = "\u0062\u006c\u0061n\u006b"
	case ST_PrintErrorDash:
		_egebg.Value = "\u0064\u0061\u0073\u0068"
	case ST_PrintErrorNA:
		_egebg.Value = "\u004e\u0041"
	}
	return _egebg, nil
}

// ValidateWithPath validates the CT_HierarchyUsage and its children, prefixing error messages with path
func (_fffa *CT_HierarchyUsage) ValidateWithPath(path string) error { return nil }

type ST_TextHAlign byte

func (_beaac ST_SheetViewType) String() string {
	switch _beaac {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077"
	case 3:
		return "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074"
	}
	return ""
}

func (_ccdda *CT_VolTopic) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ccdda.TAttr != ST_VolValueTypeUnset {
		_cgcdc, _fggef := _ccdda.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _fggef != nil {
			return _fggef
		}
		start.Attr = append(start.Attr, _cgcdc)
	}
	e.EncodeToken(start)
	_bdbbf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0076"}}
	_f.AddPreserveSpaceAttr(&_bdbbf, _ccdda.V)
	e.EncodeElement(_ccdda.V, _bdbbf)
	if _ccdda.Stp != nil {
		_gecfge := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0074\u0070"}}
		for _, _bfede := range _ccdda.Stp {
			e.EncodeElement(_bfede, _gecfge)
		}
	}
	_cgabba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003at\u0072"}}
	for _, _cdbac := range _ccdda.Tr {
		e.EncodeElement(_cdbac, _cgabba)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_MeasureDimensionMaps struct {

	// Measure Group Count
	CountAttr *uint32

	// OLAP Measure Group
	Map []*CT_MeasureDimensionMap
}

type CT_SheetId struct {

	// Sheet Id
	ValAttr uint32
}

func (_fbbfc ST_GrowShrinkType) ValidateWithPath(path string) error {
	switch _fbbfc {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fbbfc))
	}
	return nil
}

type ST_BorderStyle byte

func (_agegg *CT_DiscretePr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _agegg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_agegg.CountAttr)})
	}
	e.EncodeToken(start)
	_gfcc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
	for _, _ecafd := range _agegg.X {
		e.EncodeElement(_ecafd, _gfcc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_ebggfd *ST_MdxFunctionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfdbd, _bdgeee := d.Token()
	if _bdgeee != nil {
		return _bdgeee
	}
	if _acbbcf, _ebcfdf := _bfdbd.(_b.EndElement); _ebcfdf && _acbbcf.Name == start.Name {
		*_ebggfd = 1
		return nil
	}
	if _ddbaa, _dcdbba := _bfdbd.(_b.CharData); !_dcdbba {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfdbd)
	} else {
		switch string(_ddbaa) {
		case "":
			*_ebggfd = 0
		case "\u006d":
			*_ebggfd = 1
		case "\u0076":
			*_ebggfd = 2
		case "\u0073":
			*_ebggfd = 3
		case "\u0063":
			*_ebggfd = 4
		case "\u0072":
			*_ebggfd = 5
		case "\u0070":
			*_ebggfd = 6
		case "\u006b":
			*_ebggfd = 7
		}
	}
	_bfdbd, _bdgeee = d.Token()
	if _bdgeee != nil {
		return _bdgeee
	}
	if _ebede, _bgccac := _bfdbd.(_b.EndElement); _bgccac && _ebede.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfdbd)
}

func (_gfdfde ST_FontScheme) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gfdfde.String(), start)
}

func (_fbfdec ST_FormulaExpression) Validate() error { return _fbfdec.ValidateWithPath("") }

func (_cfagb *ST_BorderStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gbedff, _dacebc := d.Token()
	if _dacebc != nil {
		return _dacebc
	}
	if _eefgb, _bfgfdd := _gbedff.(_b.EndElement); _bfgfdd && _eefgb.Name == start.Name {
		*_cfagb = 1
		return nil
	}
	if _gbbdfg, _geaff := _gbedff.(_b.CharData); !_geaff {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gbedff)
	} else {
		switch string(_gbbdfg) {
		case "":
			*_cfagb = 0
		case "\u006e\u006f\u006e\u0065":
			*_cfagb = 1
		case "\u0074\u0068\u0069\u006e":
			*_cfagb = 2
		case "\u006d\u0065\u0064\u0069\u0075\u006d":
			*_cfagb = 3
		case "\u0064\u0061\u0073\u0068\u0065\u0064":
			*_cfagb = 4
		case "\u0064\u006f\u0074\u0074\u0065\u0064":
			*_cfagb = 5
		case "\u0074\u0068\u0069c\u006b":
			*_cfagb = 6
		case "\u0064\u006f\u0075\u0062\u006c\u0065":
			*_cfagb = 7
		case "\u0068\u0061\u0069\u0072":
			*_cfagb = 8
		case "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064":
			*_cfagb = 9
		case "\u0064a\u0073\u0068\u0044\u006f\u0074":
			*_cfagb = 10
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
			*_cfagb = 11
		case "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_cfagb = 12
		case "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_cfagb = 13
		case "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
			*_cfagb = 14
		}
	}
	_gbedff, _dacebc = d.Token()
	if _dacebc != nil {
		return _dacebc
	}
	if _bgdeaa, _bbbbfdc := _gbedff.(_b.EndElement); _bbbbfdc && _bgdeaa.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gbedff)
}

// ValidateWithPath validates the CT_Controls and its children, prefixing error messages with path
func (_deaa *CT_Controls) ValidateWithPath(path string) error {
	for _dcbc, _cgfce := range _deaa.Control {
		if _efff := _cgfce.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006e\u0074\u0072\u006fl\u005b\u0025\u0064\u005d", path, _dcbc)); _efff != nil {
			return _efff
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DeletedField and its children, prefixing error messages with path
func (_edcac *CT_DeletedField) ValidateWithPath(path string) error { return nil }

func (_bbbed *Revisions) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bbbed.CT_Revisions = *NewCT_Revisions()
_adabff:
	for {
		_eacgc, _dcgad := d.Token()
		if _dcgad != nil {
			return _dcgad
		}
		switch _decgb := _eacgc.(type) {
		case _b.StartElement:
			switch _decgb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}:
				_dcadbc := NewCT_RevisionRowColumn()
				if _fcceb := d.DecodeElement(_dcadbc, &_decgb); _fcceb != nil {
					return _fcceb
				}
				_bbbed.Rrc = append(_bbbed.Rrc, _dcadbc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}:
				_fddcaa := NewCT_RevisionMove()
				if _dccgafb := d.DecodeElement(_fddcaa, &_decgb); _dccgafb != nil {
					return _dccgafb
				}
				_bbbed.Rm = append(_bbbed.Rm, _fddcaa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}:
				_agaec := NewCT_RevisionCustomView()
				if _gcfgba := d.DecodeElement(_agaec, &_decgb); _gcfgba != nil {
					return _gcfgba
				}
				_bbbed.Rcv = append(_bbbed.Rcv, _agaec)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}:
				_gfbfdd := NewCT_RevisionSheetRename()
				if _eddge := d.DecodeElement(_gfbfdd, &_decgb); _eddge != nil {
					return _eddge
				}
				_bbbed.Rsnm = append(_bbbed.Rsnm, _gfbfdd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}:
				_afdacc := NewCT_RevisionInsertSheet()
				if _edaac := d.DecodeElement(_afdacc, &_decgb); _edaac != nil {
					return _edaac
				}
				_bbbed.Ris = append(_bbbed.Ris, _afdacc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_edbdg := NewCT_RevisionCellChange()
				if _badce := d.DecodeElement(_edbdg, &_decgb); _badce != nil {
					return _badce
				}
				_bbbed.Rcc = append(_bbbed.Rcc, _edbdg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_efddgea := NewCT_RevisionFormatting()
				if _bcbba := d.DecodeElement(_efddgea, &_decgb); _bcbba != nil {
					return _bcbba
				}
				_bbbed.Rfmt = append(_bbbed.Rfmt, _efddgea)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}:
				_gaced := NewCT_RevisionAutoFormatting()
				if _agaecf := d.DecodeElement(_gaced, &_decgb); _agaecf != nil {
					return _agaecf
				}
				_bbbed.Raf = append(_bbbed.Raf, _gaced)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}:
				_ddcecc := NewCT_RevisionDefinedName()
				if _edggd := d.DecodeElement(_ddcecc, &_decgb); _edggd != nil {
					return _edggd
				}
				_bbbed.Rdn = append(_bbbed.Rdn, _ddcecc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}:
				_fbcdd := NewCT_RevisionComment()
				if _aeedc := d.DecodeElement(_fbcdd, &_decgb); _aeedc != nil {
					return _aeedc
				}
				_bbbed.Rcmt = append(_bbbed.Rcmt, _fbcdd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}:
				_bgdcbb := NewCT_RevisionQueryTableField()
				if _bebbc := d.DecodeElement(_bgdcbb, &_decgb); _bebbc != nil {
					return _bebbc
				}
				_bbbed.Rqt = append(_bbbed.Rqt, _bgdcbb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}:
				_gfeaef := NewCT_RevisionConflict()
				if _aegag := d.DecodeElement(_gfeaef, &_decgb); _aegag != nil {
					return _aegag
				}
				_bbbed.Rcft = append(_bbbed.Rcft, _gfeaef)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0052\u0065\u0076\u0069\u0073\u0069o\u006e\u0073 \u0025\u0076", _decgb.Name)
				if _gaagee := d.Skip(); _gaagee != nil {
					return _gaagee
				}
			}
		case _b.EndElement:
			break _adabff
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the SingleXmlCells and its children, prefixing error messages with path
func (_fgcgca *SingleXmlCells) ValidateWithPath(path string) error {
	if _afbeb := _fgcgca.CT_SingleXmlCells.ValidateWithPath(path); _afbeb != nil {
		return _afbeb
	}
	return nil
}

func (_ccced *CT_FontSize) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", _ccced.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_CellSpans []string

type CT_GroupMembers struct {

	// Group Member Count
	CountAttr *uint32

	// OLAP Group Member
	GroupMember []*CT_GroupMember
}

func NewCT_SortState() *CT_SortState { _facfa := &CT_SortState{}; return _facfa }

// ValidateWithPath validates the CT_ExternalDefinedNames and its children, prefixing error messages with path
func (_defga *CT_ExternalDefinedNames) ValidateWithPath(path string) error {
	for _cbaga, _facad := range _defga.DefinedName {
		if _agdcb := _facad.ValidateWithPath(_ec.Sprintf("\u0025s\u002fD\u0065\u0066\u0069\u006e\u0065d\u004e\u0061m\u0065\u005b\u0025\u0064\u005d", path, _cbaga)); _agdcb != nil {
			return _agdcb
		}
	}
	return nil
}

func (_adadd *CT_RevisionCellChange) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _adadd.SIdAttr)})
	if _adadd.OdxfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0064\u0078\u0066"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adadd.OdxfAttr))})
	}
	if _adadd.XfDxfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0066\u0044x\u0066"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adadd.XfDxfAttr))})
	}
	if _adadd.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adadd.SAttr))})
	}
	if _adadd.DxfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078\u0066"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adadd.DxfAttr))})
	}
	if _adadd.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_adadd.NumFmtIdAttr)})
	}
	if _adadd.QuotePrefixAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adadd.QuotePrefixAttr))})
	}
	if _adadd.OldQuotePrefixAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064\u0051\u0075\u006f\u0074\u0065\u0050r\u0065\u0066\u0069\u0078"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adadd.OldQuotePrefixAttr))})
	}
	if _adadd.PhAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0068"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adadd.PhAttr))})
	}
	if _adadd.OldPhAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064P\u0068"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adadd.OldPhAttr))})
	}
	if _adadd.EndOfListFormulaUpdateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0064\u004ffL\u0069\u0073\u0074\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0055\u0070\u0064\u0061t\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adadd.EndOfListFormulaUpdateAttr))})
	}
	if _adadd.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_adadd.RIdAttr)})
	}
	if _adadd.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adadd.UaAttr))})
	}
	if _adadd.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adadd.RaAttr))})
	}
	e.EncodeToken(start)
	if _adadd.Oc != nil {
		_afcdf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ao\u0063"}}
		e.EncodeElement(_adadd.Oc, _afcdf)
	}
	_eegegg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003an\u0063"}}
	e.EncodeElement(_adadd.Nc, _eegegg)
	if _adadd.Odxf != nil {
		_gcaaec := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006f\u0064\u0078\u0066"}}
		e.EncodeElement(_adadd.Odxf, _gcaaec)
	}
	if _adadd.Ndxf != nil {
		_bgfeb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006e\u0064\u0078\u0066"}}
		e.EncodeElement(_adadd.Ndxf, _bgfeb)
	}
	if _adadd.ExtLst != nil {
		_geebg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_adadd.ExtLst, _geebg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_DvAspect byte

func NewCT_DataField() *CT_DataField { _ccgc := &CT_DataField{}; return _ccgc }

func (_gabeb *CT_FunctionGroups) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcabf := range start.Attr {
		if _dcabf.Name.Local == "\u0062\u0075\u0069\u006c\u0074\u0049\u006e\u0047\u0072\u006f\u0075\u0070C\u006f\u0075\u006e\u0074" {
			_cgfef, _bgeffa := _eb.ParseUint(_dcabf.Value, 10, 32)
			if _bgeffa != nil {
				return _bgeffa
			}
			_fgaa := uint32(_cgfef)
			_gabeb.BuiltInGroupCountAttr = &_fgaa
			continue
		}
	}
_afcga:
	for {
		_gccd, _fbbbf := d.Token()
		if _fbbbf != nil {
			return _fbbbf
		}
		switch _dccdfc := _gccd.(type) {
		case _b.StartElement:
			switch _dccdfc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070"}:
				_ccbege := NewCT_FunctionGroup()
				if _accd := d.DecodeElement(_ccbege, &_dccdfc); _accd != nil {
					return _accd
				}
				_gabeb.FunctionGroup = append(_gabeb.FunctionGroup, _ccbege)
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0073\u0020\u0025\u0076", _dccdfc.Name)
				if _begdb := d.Skip(); _begdb != nil {
					return _begdb
				}
			}
		case _b.EndElement:
			break _afcga
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_Index() *CT_Index { _bfdb := &CT_Index{}; return _bfdb }

type CT_rowItems struct {

	// Items in a Row Count
	CountAttr *uint32

	// Row Items
	I []*CT_I
}

type CT_Table struct {

	// Table Id
	IdAttr uint32

	// Name
	NameAttr *string

	// Table Name
	DisplayNameAttr string

	// Table Comment
	CommentAttr *string

	// Reference
	RefAttr string

	// Table Type
	TableTypeAttr ST_TableType

	// Header Row Count
	HeaderRowCountAttr *uint32

	// Insert Row Showing
	InsertRowAttr *bool

	// Insert Row Shift
	InsertRowShiftAttr *bool

	// Totals Row Count
	TotalsRowCountAttr *uint32

	// Totals Row Shown
	TotalsRowShownAttr *bool

	// Published
	PublishedAttr *bool

	// Header Row Format Id
	HeaderRowDxfIdAttr *uint32

	// Data Area Format Id
	DataDxfIdAttr *uint32

	// Totals Row Format Id
	TotalsRowDxfIdAttr *uint32

	// Header Row Border Format Id
	HeaderRowBorderDxfIdAttr *uint32

	// Table Border Format Id
	TableBorderDxfIdAttr *uint32

	// Totals Row Border Format Id
	TotalsRowBorderDxfIdAttr *uint32

	// Header Row Style
	HeaderRowCellStyleAttr *string

	// Data Style Name
	DataCellStyleAttr *string

	// Totals Row Style
	TotalsRowCellStyleAttr *string

	// Connection ID
	ConnectionIdAttr *uint32

	// Table AutoFilter
	AutoFilter *CT_AutoFilter

	// Sort State
	SortState *CT_SortState

	// Table Columns
	TableColumns *CT_TableColumns

	// Table Style
	TableStyleInfo *CT_TableStyleInfo

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_gbffe ST_PageOrder) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_geeabg := _b.Attr{}
	_geeabg.Name = name
	switch _gbffe {
	case ST_PageOrderUnset:
		_geeabg.Value = ""
	case ST_PageOrderDownThenOver:
		_geeabg.Value = "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072"
	case ST_PageOrderOverThenDown:
		_geeabg.Value = "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e"
	}
	return _geeabg, nil
}

func (_cfccba *ST_TextHAlign) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_egefb, _efbge := d.Token()
	if _efbge != nil {
		return _efbge
	}
	if _fgdca, _aecgc := _egefb.(_b.EndElement); _aecgc && _fgdca.Name == start.Name {
		*_cfccba = 1
		return nil
	}
	if _cabde, _fbbbgd := _egefb.(_b.CharData); !_fbbbgd {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _egefb)
	} else {
		switch string(_cabde) {
		case "":
			*_cfccba = 0
		case "\u006c\u0065\u0066\u0074":
			*_cfccba = 1
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_cfccba = 2
		case "\u0072\u0069\u0067h\u0074":
			*_cfccba = 3
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_cfccba = 4
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_cfccba = 5
		}
	}
	_egefb, _efbge = d.Token()
	if _efbge != nil {
		return _efbge
	}
	if _acfff, _cdbcce := _egefb.(_b.EndElement); _cdbcce && _acfff.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _egefb)
}

func (_gfgaf *ST_DataValidationType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gfgaf = 0
	case "\u006e\u006f\u006e\u0065":
		*_gfgaf = 1
	case "\u0077\u0068\u006fl\u0065":
		*_gfgaf = 2
	case "\u0064e\u0063\u0069\u006d\u0061\u006c":
		*_gfgaf = 3
	case "\u006c\u0069\u0073\u0074":
		*_gfgaf = 4
	case "\u0064\u0061\u0074\u0065":
		*_gfgaf = 5
	case "\u0074\u0069\u006d\u0065":
		*_gfgaf = 6
	case "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068":
		*_gfgaf = 7
	case "\u0063\u0075\u0073\u0074\u006f\u006d":
		*_gfgaf = 8
	}
	return nil
}

func (_gbcffb ST_FilterOperator) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_deedf := _b.Attr{}
	_deedf.Name = name
	switch _gbcffb {
	case ST_FilterOperatorUnset:
		_deedf.Value = ""
	case ST_FilterOperatorEqual:
		_deedf.Value = "\u0065\u0071\u0075a\u006c"
	case ST_FilterOperatorLessThan:
		_deedf.Value = "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_FilterOperatorLessThanOrEqual:
		_deedf.Value = "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_FilterOperatorNotEqual:
		_deedf.Value = "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_FilterOperatorGreaterThanOrEqual:
		_deedf.Value = "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case ST_FilterOperatorGreaterThan:
		_deedf.Value = "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	}
	return _deedf, nil
}

type CT_PivotAreas struct {

	// Pivot Area Count
	CountAttr *uint32

	// Pivot Area
	PivotArea []*CT_PivotArea
}

func NewCT_CacheField() *CT_CacheField { _ddb := &CT_CacheField{}; return _ddb }

type CT_DataRefs struct {

	// Data Consolidation Reference Count
	CountAttr *uint32

	// Data Consolidation Reference
	DataRef []*CT_DataRef
}

// ValidateWithPath validates the CT_MeasureDimensionMaps and its children, prefixing error messages with path
func (_bfaea *CT_MeasureDimensionMaps) ValidateWithPath(path string) error {
	for _eabeg, _gdde := range _bfaea.Map {
		if _caab := _gdde.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004d\u0061\u0070\u005b\u0025\u0064\u005d", path, _eabeg)); _caab != nil {
			return _caab
		}
	}
	return nil
}

// ValidateWithPath validates the CT_WorksheetSource and its children, prefixing error messages with path
func (_gbcbd *CT_WorksheetSource) ValidateWithPath(path string) error { return nil }

func (_befdge ST_Visibility) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dddff := _b.Attr{}
	_dddff.Name = name
	switch _befdge {
	case ST_VisibilityUnset:
		_dddff.Value = ""
	case ST_VisibilityVisible:
		_dddff.Value = "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case ST_VisibilityHidden:
		_dddff.Value = "\u0068\u0069\u0064\u0064\u0065\u006e"
	case ST_VisibilityVeryHidden:
		_dddff.Value = "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return _dddff, nil
}

func (_facfd *CT_CfRule) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dfeb := range start.Attr {
		if _dfeb.Name.Local == "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064" {
			_facfd.TimePeriodAttr.UnmarshalXMLAttr(_dfeb)
			continue
		}
		if _dfeb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_facfd.TypeAttr.UnmarshalXMLAttr(_dfeb)
			continue
		}
		if _dfeb.Name.Local == "\u0072\u0061\u006e\u006b" {
			_bfad, _eagb := _eb.ParseUint(_dfeb.Value, 10, 32)
			if _eagb != nil {
				return _eagb
			}
			_ddga := uint32(_bfad)
			_facfd.RankAttr = &_ddga
			continue
		}
		if _dfeb.Name.Local == "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079" {
			_begad, _eedgf := _eb.ParseInt(_dfeb.Value, 10, 32)
			if _eedgf != nil {
				return _eedgf
			}
			_facfd.PriorityAttr = int32(_begad)
			continue
		}
		if _dfeb.Name.Local == "\u0073\u0074\u0064\u0044\u0065\u0076" {
			_eebd, _aebg := _eb.ParseInt(_dfeb.Value, 10, 32)
			if _aebg != nil {
				return _aebg
			}
			_fcda := int32(_eebd)
			_facfd.StdDevAttr = &_fcda
			continue
		}
		if _dfeb.Name.Local == "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065" {
			_acbb, _aace := _eb.ParseBool(_dfeb.Value)
			if _aace != nil {
				return _aace
			}
			_facfd.AboveAverageAttr = &_acbb
			continue
		}
		if _dfeb.Name.Local == "\u0062\u006f\u0074\u0074\u006f\u006d" {
			_gdfe, _caae := _eb.ParseBool(_dfeb.Value)
			if _caae != nil {
				return _caae
			}
			_facfd.BottomAttr = &_gdfe
			continue
		}
		if _dfeb.Name.Local == "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072" {
			_facfd.OperatorAttr.UnmarshalXMLAttr(_dfeb)
			continue
		}
		if _dfeb.Name.Local == "\u0074\u0065\u0078\u0074" {
			_fbbed, _afdgd := _dfeb.Value, error(nil)
			if _afdgd != nil {
				return _afdgd
			}
			_facfd.TextAttr = &_fbbed
			continue
		}
		if _dfeb.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_dbgce, _fdba := _eb.ParseUint(_dfeb.Value, 10, 32)
			if _fdba != nil {
				return _fdba
			}
			_cabc := uint32(_dbgce)
			_facfd.DxfIdAttr = &_cabc
			continue
		}
		if _dfeb.Name.Local == "\u0073\u0074\u006f\u0070\u0049\u0066\u0054\u0072\u0075\u0065" {
			_fege, _bdaa := _eb.ParseBool(_dfeb.Value)
			if _bdaa != nil {
				return _bdaa
			}
			_facfd.StopIfTrueAttr = &_fege
			continue
		}
		if _dfeb.Name.Local == "\u0070e\u0072\u0063\u0065\u006e\u0074" {
			_ccdac, _gced := _eb.ParseBool(_dfeb.Value)
			if _gced != nil {
				return _gced
			}
			_facfd.PercentAttr = &_ccdac
			continue
		}
		if _dfeb.Name.Local == "\u0065\u0071\u0075a\u006c\u0041\u0076\u0065\u0072\u0061\u0067\u0065" {
			_bgad, _egedc := _eb.ParseBool(_dfeb.Value)
			if _egedc != nil {
				return _egedc
			}
			_facfd.EqualAverageAttr = &_bgad
			continue
		}
	}
_agcf:
	for {
		_fbdb, _cffc := d.Token()
		if _cffc != nil {
			return _cffc
		}
		switch _cdbb := _fbdb.(type) {
		case _b.StartElement:
			switch _cdbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}:
				var _badd string
				if _gabc := d.DecodeElement(&_badd, &_cdbb); _gabc != nil {
					return _gabc
				}
				_facfd.Formula = append(_facfd.Formula, _badd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"}:
				_facfd.ColorScale = NewCT_ColorScale()
				if _cfda := d.DecodeElement(_facfd.ColorScale, &_cdbb); _cfda != nil {
					return _cfda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0042\u0061\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0042\u0061\u0072"}:
				_facfd.DataBar = NewCT_DataBar()
				if _dgfe := d.DecodeElement(_facfd.DataBar, &_cdbb); _dgfe != nil {
					return _dgfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"}:
				_facfd.IconSet = NewCT_IconSet()
				if _dcbe := d.DecodeElement(_facfd.IconSet, &_cdbb); _dcbe != nil {
					return _dcbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_facfd.ExtLst = NewCT_ExtensionList()
				if _baabc := d.DecodeElement(_facfd.ExtLst, &_cdbb); _baabc != nil {
					return _baabc
				}
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u0066\u0052u\u006c\u0065 \u0025\u0076", _cdbb.Name)
				if _befg := d.Skip(); _befg != nil {
					return _befg
				}
			}
		case _b.EndElement:
			break _agcf
		case _b.CharData:
		}
	}
	return nil
}

func (_abgaa ST_TargetScreenSize) Validate() error { return _abgaa.ValidateWithPath("") }

func (_bggad ST_DvAspect) ValidateWithPath(path string) error {
	switch _bggad {
	case 0, 1, 2:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bggad))
	}
	return nil
}

func (_bcba *CT_CustomSheetViews) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ffdg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077"}}
	for _, _cagb := range _bcba.CustomSheetView {
		e.EncodeElement(_cagb, _ffdg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_HtmlFmt byte

type CT_Items struct {

	// Field Count
	CountAttr *uint32

	// PivotTable Field Item
	Item []*CT_Item
}

func NewCT_ColHierarchiesUsage() *CT_ColHierarchiesUsage {
	_accfa := &CT_ColHierarchiesUsage{}
	return _accfa
}

func (_adcfda *CT_TableStyles) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _adcfda.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_adcfda.CountAttr)})
	}
	if _adcfda.DefaultTableStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0054\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_adcfda.DefaultTableStyleAttr)})
	}
	if _adcfda.DefaultPivotStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0050\u0069\u0076\u006f\u0074S\u0074\u0079\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_adcfda.DefaultPivotStyleAttr)})
	}
	e.EncodeToken(start)
	if _adcfda.TableStyle != nil {
		_fbdbed := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}}
		for _, _caadb := range _adcfda.TableStyle {
			e.EncodeElement(_caadb, _fbdbed)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RevisionQueryTableField and its children, prefixing error messages with path
func (_bagdd *CT_RevisionQueryTableField) ValidateWithPath(path string) error { return nil }

func (_cbdg *CT_Cfvo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_adgg, _gbdcc := _cbdg.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _gbdcc != nil {
		return _gbdcc
	}
	start.Attr = append(start.Attr, _adgg)
	if _cbdg.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_cbdg.ValAttr)})
	}
	if _cbdg.GteAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0074\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cbdg.GteAttr))})
	}
	e.EncodeToken(start)
	if _cbdg.ExtLst != nil {
		_cdeef := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cbdg.ExtLst, _cdeef)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_MetadataStringIndex() *CT_MetadataStringIndex {
	_beffb := &CT_MetadataStringIndex{}
	return _beffb
}

type CT_Xf struct {

	// Number Format Id
	NumFmtIdAttr *uint32

	// Font Id
	FontIdAttr *uint32

	// Fill Id
	FillIdAttr *uint32

	// Border Id
	BorderIdAttr *uint32

	// Format Id
	XfIdAttr *uint32

	// Quote Prefix
	QuotePrefixAttr *bool

	// Pivot Button
	PivotButtonAttr *bool

	// Apply Number Format
	ApplyNumberFormatAttr *bool

	// Apply Font
	ApplyFontAttr *bool

	// Apply Fill
	ApplyFillAttr *bool

	// Apply Border
	ApplyBorderAttr *bool

	// Apply Alignment
	ApplyAlignmentAttr *bool

	// Apply Protection
	ApplyProtectionAttr *bool

	// Alignment
	Alignment *CT_CellAlignment

	// Protection
	Protection *CT_CellProtection

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

const (
	ST_UpdateLinksUnset   ST_UpdateLinks = 0
	ST_UpdateLinksUserSet ST_UpdateLinks = 1
	ST_UpdateLinksNever   ST_UpdateLinks = 2
	ST_UpdateLinksAlways  ST_UpdateLinks = 3
)

type CT_RevisionAutoFormatting struct {

	// Sheet Id
	SheetIdAttr uint32

	// Reference
	RefAttr                     string
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

type ST_Visibility byte

func (_dbefgc *CT_PCDKPI) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _geeaba := range start.Attr {
		if _geeaba.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_egdcb, _bddag := _geeaba.Value, error(nil)
			if _bddag != nil {
				return _bddag
			}
			_dbefgc.UniqueNameAttr = _egdcb
			continue
		}
		if _geeaba.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_adece, _bfabd := _geeaba.Value, error(nil)
			if _bfabd != nil {
				return _bfabd
			}
			_dbefgc.CaptionAttr = &_adece
			continue
		}
		if _geeaba.Name.Local == "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072" {
			_bacg, _eeaa := _geeaba.Value, error(nil)
			if _eeaa != nil {
				return _eeaa
			}
			_dbefgc.DisplayFolderAttr = &_bacg
			continue
		}
		if _geeaba.Name.Local == "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070" {
			_dcbgb, _fgdcd := _geeaba.Value, error(nil)
			if _fgdcd != nil {
				return _fgdcd
			}
			_dbefgc.MeasureGroupAttr = &_dcbgb
			continue
		}
		if _geeaba.Name.Local == "\u0070\u0061\u0072\u0065\u006e\u0074" {
			_bcbgd, _egedbc := _geeaba.Value, error(nil)
			if _egedbc != nil {
				return _egedbc
			}
			_dbefgc.ParentAttr = &_bcbgd
			continue
		}
		if _geeaba.Name.Local == "\u0076\u0061\u006cu\u0065" {
			_cccdf, _cfbg := _geeaba.Value, error(nil)
			if _cfbg != nil {
				return _cfbg
			}
			_dbefgc.ValueAttr = _cccdf
			continue
		}
		if _geeaba.Name.Local == "\u0067\u006f\u0061\u006c" {
			_afbbc, _cfcde := _geeaba.Value, error(nil)
			if _cfcde != nil {
				return _cfcde
			}
			_dbefgc.GoalAttr = &_afbbc
			continue
		}
		if _geeaba.Name.Local == "\u0073\u0074\u0061\u0074\u0075\u0073" {
			_degff, _abfgfa := _geeaba.Value, error(nil)
			if _abfgfa != nil {
				return _abfgfa
			}
			_dbefgc.StatusAttr = &_degff
			continue
		}
		if _geeaba.Name.Local == "\u0074\u0072\u0065n\u0064" {
			_eaebd, _agcdfa := _geeaba.Value, error(nil)
			if _agcdfa != nil {
				return _agcdfa
			}
			_dbefgc.TrendAttr = &_eaebd
			continue
		}
		if _geeaba.Name.Local == "\u0077\u0065\u0069\u0067\u0068\u0074" {
			_egbfge, _befff := _geeaba.Value, error(nil)
			if _befff != nil {
				return _befff
			}
			_dbefgc.WeightAttr = &_egbfge
			continue
		}
		if _geeaba.Name.Local == "\u0074\u0069\u006d\u0065" {
			_fbbea, _gefeb := _geeaba.Value, error(nil)
			if _gefeb != nil {
				return _gefeb
			}
			_dbefgc.TimeAttr = &_fbbea
			continue
		}
	}
	for {
		_cgccd, _fdded := d.Token()
		if _fdded != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0050\u0043\u0044K\u0050\u0049\u003a\u0020\u0025\u0073", _fdded)
		}
		if _dagg, _efbcgc := _cgccd.(_b.EndElement); _efbcgc && _dagg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fagdb ST_HtmlFmt) String() string {
	switch _fagdb {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0072\u0074\u0066"
	case 3:
		return "\u0061\u006c\u006c"
	}
	return ""
}

func (_egddf *CT_OleItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _egddf.NameAttr)})
	if _egddf.IconAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0063\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_egddf.IconAttr))})
	}
	if _egddf.AdviseAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0064\u0076\u0069\u0073\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_egddf.AdviseAttr))})
	}
	if _egddf.PreferPicAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_egddf.PreferPicAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Col and its children, prefixing error messages with path
func (_cbbbe *CT_Col) ValidateWithPath(path string) error { return nil }

type CT_FileVersion struct {

	// Application Name
	AppNameAttr *string

	// Last Edited Version
	LastEditedAttr *string

	// Lowest Edited Version
	LowestEditedAttr *string

	// Build Version
	RupBuildAttr *string

	// Code Name
	CodeNameAttr *string
}

func NewCT_RevisionSheetRename() *CT_RevisionSheetRename {
	_dagcbe := &CT_RevisionSheetRename{}
	return _dagcbe
}

type CT_RevisionHeaders struct {

	// Last Revision GUID
	GuidAttr string

	// Last GUID
	LastGuidAttr *string

	// Shared Workbook
	SharedAttr *bool

	// Disk Revisions
	DiskRevisionsAttr *bool

	// History
	HistoryAttr *bool

	// Track Revisions
	TrackRevisionsAttr *bool

	// Exclusive Mode
	ExclusiveAttr *bool

	// Revision Id
	RevisionIdAttr *uint32

	// Version
	VersionAttr *int32

	// Keep Change History
	KeepChangeHistoryAttr *bool

	// Protected
	ProtectedAttr *bool

	// Preserve History
	PreserveHistoryAttr *uint32

	// Header
	Header []*CT_RevisionHeader
}

func (_bfbga ST_FormatAction) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bfbga.String(), start)
}

// Validate validates the CT_Tuple and its children
func (_eccda *CT_Tuple) Validate() error {
	return _eccda.ValidateWithPath("\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065")
}

// Validate validates the CT_Selection and its children
func (_abbgg *CT_Selection) Validate() error {
	return _abbgg.ValidateWithPath("\u0043\u0054\u005fS\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e")
}

func (_cbcb *CT_Comments) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cbcb.Authors = NewCT_Authors()
	_cbcb.CommentList = NewCT_CommentList()
_baf:
	for {
		_daeg, _ecae := d.Token()
		if _ecae != nil {
			return _ecae
		}
		switch _edfbb := _daeg.(type) {
		case _b.StartElement:
			switch _edfbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}:
				if _fecbe := d.DecodeElement(_cbcb.Authors, &_edfbb); _fecbe != nil {
					return _fecbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}:
				if _gegc := d.DecodeElement(_cbcb.CommentList, &_edfbb); _gegc != nil {
					return _gegc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbcb.ExtLst = NewCT_ExtensionList()
				if _aeead := d.DecodeElement(_cbcb.ExtLst, &_edfbb); _aeead != nil {
					return _aeead
				}
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0020\u0025\u0076", _edfbb.Name)
				if _bgbd := d.Skip(); _bgbd != nil {
					return _bgbd
				}
			}
		case _b.EndElement:
			break _baf
		case _b.CharData:
		}
	}
	return nil
}

func (_ecbfc ST_GroupBy) String() string {
	switch _ecbfc {
	case 0:
		return ""
	case 1:
		return "\u0072\u0061\u006eg\u0065"
	case 2:
		return "\u0073e\u0063\u006f\u006e\u0064\u0073"
	case 3:
		return "\u006di\u006e\u0075\u0074\u0065\u0073"
	case 4:
		return "\u0068\u006f\u0075r\u0073"
	case 5:
		return "\u0064\u0061\u0079\u0073"
	case 6:
		return "\u006d\u006f\u006e\u0074\u0068\u0073"
	case 7:
		return "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073"
	case 8:
		return "\u0079\u0065\u0061r\u0073"
	}
	return ""
}

func (_bbacec *ST_MdxKPIProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_edgfag, _fgdfe := d.Token()
	if _fgdfe != nil {
		return _fgdfe
	}
	if _fefeee, _gagcc := _edgfag.(_b.EndElement); _gagcc && _fefeee.Name == start.Name {
		*_bbacec = 1
		return nil
	}
	if _bafff, _ffecf := _edgfag.(_b.CharData); !_ffecf {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edgfag)
	} else {
		switch string(_bafff) {
		case "":
			*_bbacec = 0
		case "\u0076":
			*_bbacec = 1
		case "\u0067":
			*_bbacec = 2
		case "\u0073":
			*_bbacec = 3
		case "\u0074":
			*_bbacec = 4
		case "\u0077":
			*_bbacec = 5
		case "\u006d":
			*_bbacec = 6
		}
	}
	_edgfag, _fgdfe = d.Token()
	if _fgdfe != nil {
		return _fgdfe
	}
	if _eadfa, _egccg := _edgfag.(_b.EndElement); _egccg && _eadfa.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edgfag)
}

type CT_Filters struct {

	// Filter by Blank
	BlankAttr *bool

	// Calendar Type
	CalendarTypeAttr _bb.ST_CalendarType

	// Filter
	Filter []*CT_Filter

	// Date Grouping
	DateGroupItem []*CT_DateGroupItem
}

func (_ebacg *CT_SheetView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cdfag := range start.Attr {
		if _cdfag.Name.Local == "\u0076\u0069\u0065\u0077" {
			_ebacg.ViewAttr.UnmarshalXMLAttr(_cdfag)
			continue
		}
		if _cdfag.Name.Local == "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c" {
			_bgeeae, _cgdbe := _cdfag.Value, error(nil)
			if _cgdbe != nil {
				return _cgdbe
			}
			_ebacg.TopLeftCellAttr = &_bgeeae
			continue
		}
		if _cdfag.Name.Local == "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_dbfbe, _abacgc := _eb.ParseBool(_cdfag.Value)
			if _abacgc != nil {
				return _abacgc
			}
			_ebacg.ShowFormulasAttr = &_dbfbe
			continue
		}
		if _cdfag.Name.Local == "\u0063o\u006c\u006f\u0072\u0049\u0064" {
			_cggdf, _bbcacg := _eb.ParseUint(_cdfag.Value, 10, 32)
			if _bbcacg != nil {
				return _bbcacg
			}
			_edageg := uint32(_cggdf)
			_ebacg.ColorIdAttr = &_edageg
			continue
		}
		if _cdfag.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073" {
			_afgaf, _adgabd := _eb.ParseBool(_cdfag.Value)
			if _adgabd != nil {
				return _adgabd
			}
			_ebacg.ShowRowColHeadersAttr = &_afgaf
			continue
		}
		if _cdfag.Name.Local == "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce" {
			_deged, _gbfag := _eb.ParseUint(_cdfag.Value, 10, 32)
			if _gbfag != nil {
				return _gbfag
			}
			_defbf := uint32(_deged)
			_ebacg.ZoomScaleAttr = &_defbf
			continue
		}
		if _cdfag.Name.Local == "r\u0069\u0067\u0068\u0074\u0054\u006f\u004c\u0065\u0066\u0074" {
			_ageab, _bcaa := _eb.ParseBool(_cdfag.Value)
			if _bcaa != nil {
				return _bcaa
			}
			_ebacg.RightToLeftAttr = &_ageab
			continue
		}
		if _cdfag.Name.Local == "\u007ao\u006fm\u0053\u0063\u0061\u006c\u0065\u004e\u006f\u0072\u006d\u0061\u006c" {
			_gdaab, _aeegg := _eb.ParseUint(_cdfag.Value, 10, 32)
			if _aeegg != nil {
				return _aeegg
			}
			_dddbf := uint32(_gdaab)
			_ebacg.ZoomScaleNormalAttr = &_dddbf
			continue
		}
		if _cdfag.Name.Local == "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r" {
			_afdea, _fggcggd := _eb.ParseBool(_cdfag.Value)
			if _fggcggd != nil {
				return _fggcggd
			}
			_ebacg.ShowRulerAttr = &_afdea
			continue
		}
		if _cdfag.Name.Local == "\u007ao\u006f\u006d\u0053\u0063\u0061\u006c\u0065\u0053\u0068\u0065\u0065t\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077" {
			_dccdgf, _cdaceg := _eb.ParseUint(_cdfag.Value, 10, 32)
			if _cdaceg != nil {
				return _cdaceg
			}
			_eeeab := uint32(_dccdgf)
			_ebacg.ZoomScaleSheetLayoutViewAttr = &_eeeab
			continue
		}
		if _cdfag.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064" {
			_fgbeaf, _gcbfc := _eb.ParseUint(_cdfag.Value, 10, 32)
			if _gcbfc != nil {
				return _gcbfc
			}
			_ebacg.WorkbookViewIdAttr = uint32(_fgbeaf)
			continue
		}
		if _cdfag.Name.Local == "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064" {
			_geecdb, _cebdf := _eb.ParseBool(_cdfag.Value)
			if _cebdf != nil {
				return _cebdf
			}
			_ebacg.TabSelectedAttr = &_geecdb
			continue
		}
		if _cdfag.Name.Local == "\u007a\u006f\u006fmS\u0063\u0061\u006c\u0065\u0050\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077" {
			_ebfba, _degbcd := _eb.ParseUint(_cdfag.Value, 10, 32)
			if _degbcd != nil {
				return _degbcd
			}
			_bdffg := uint32(_ebfba)
			_ebacg.ZoomScalePageLayoutViewAttr = &_bdffg
			continue
		}
		if _cdfag.Name.Local == "\u0073h\u006f\u0077\u005a\u0065\u0072\u006fs" {
			_eefee, _daebd := _eb.ParseBool(_cdfag.Value)
			if _daebd != nil {
				return _daebd
			}
			_ebacg.ShowZerosAttr = &_eefee
			continue
		}
		if _cdfag.Name.Local == "\u0077\u0069n\u0064\u006f\u0077P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e" {
			_gdedb, _geadc := _eb.ParseBool(_cdfag.Value)
			if _geadc != nil {
				return _geadc
			}
			_ebacg.WindowProtectionAttr = &_gdedb
			continue
		}
		if _cdfag.Name.Local == "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073" {
			_fdebe, _cdbgac := _eb.ParseBool(_cdfag.Value)
			if _cdbgac != nil {
				return _cdbgac
			}
			_ebacg.ShowOutlineSymbolsAttr = &_fdebe
			continue
		}
		if _cdfag.Name.Local == "\u0073\u0068\u006f\u0077\u0057\u0068\u0069\u0074\u0065S\u0070\u0061\u0063\u0065" {
			_bdaafff, _edcgc := _eb.ParseBool(_cdfag.Value)
			if _edcgc != nil {
				return _edcgc
			}
			_ebacg.ShowWhiteSpaceAttr = &_bdaafff
			continue
		}
		if _cdfag.Name.Local == "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073" {
			_effbg, _fddabd := _eb.ParseBool(_cdfag.Value)
			if _fddabd != nil {
				return _fddabd
			}
			_ebacg.ShowGridLinesAttr = &_effbg
			continue
		}
		if _cdfag.Name.Local == "\u0064\u0065f\u0061\u0075\u006ct\u0047\u0072\u0069\u0064\u0043\u006f\u006c\u006f\u0072" {
			_ffggc, _cdead := _eb.ParseBool(_cdfag.Value)
			if _cdead != nil {
				return _cdead
			}
			_ebacg.DefaultGridColorAttr = &_ffggc
			continue
		}
	}
_gfggd:
	for {
		_dfcae, _cced := d.Token()
		if _cced != nil {
			return _cced
		}
		switch _cceae := _dfcae.(type) {
		case _b.StartElement:
			switch _cceae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}:
				_ebacg.Pane = NewCT_Pane()
				if _abbgc := d.DecodeElement(_ebacg.Pane, &_cceae); _abbgc != nil {
					return _abbgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}:
				_eccfb := NewCT_Selection()
				if _cafbg := d.DecodeElement(_eccfb, &_cceae); _cafbg != nil {
					return _cafbg
				}
				_ebacg.Selection = append(_ebacg.Selection, _eccfb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e"}:
				_baeec := NewCT_PivotSelection()
				if _aadfb := d.DecodeElement(_baeec, &_cceae); _aadfb != nil {
					return _aadfb
				}
				_ebacg.PivotSelection = append(_ebacg.PivotSelection, _baeec)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebacg.ExtLst = NewCT_ExtensionList()
				if _aadbb := d.DecodeElement(_ebacg.ExtLst, &_cceae); _aadbb != nil {
					return _aadbb
				}
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0068\u0065e\u0074\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _cceae.Name)
				if _abcfg := d.Skip(); _abcfg != nil {
					return _abcfg
				}
			}
		case _b.EndElement:
			break _gfggd
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ExternalRow and its children
func (_eebgf *CT_ExternalRow) Validate() error {
	return _eebgf.ValidateWithPath("\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006ea\u006c\u0052\u006f\u0077")
}

type CT_BorderPr struct {

	// Line Style
	StyleAttr ST_BorderStyle

	// Color
	Color *CT_Color
}

type CT_ObjectAnchor struct {

	// Move With Cells
	MoveWithCellsAttr *bool

	// Size With Cells
	SizeWithCellsAttr *bool
	From              *_c.From
	To                *_c.To
}

func (_dfbge *CT_Extension) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbgga := range start.Attr {
		if _bbgga.Name.Local == "\u0075\u0072\u0069" {
			_baaccd, _dfefb := _bbgga.Value, error(nil)
			if _dfefb != nil {
				return _dfefb
			}
			_dfbge.UriAttr = &_baaccd
			continue
		}
	}
_aceag:
	for {
		_bcaga, _dgea := d.Token()
		if _dgea != nil {
			return _dgea
		}
		switch _cgfcd := _bcaga.(type) {
		case _b.StartElement:
			switch _cgfcd.Name {
			default:
				if _faagb, _efed := _f.CreateElement(_cgfcd); _efed != nil {
					return _efed
				} else {
					if _caagb := d.DecodeElement(_faagb, &_cgfcd); _caagb != nil {
						return _caagb
					}
					_dfbge.Any = _faagb
				}
			}
		case _b.EndElement:
			break _aceag
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SharedItems and its children
func (_gbaee *CT_SharedItems) Validate() error {
	return _gbaee.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064I\u0074\u0065\u006d\u0073")
}

func NewCT_ExternalLinkChoice() *CT_ExternalLinkChoice {
	_bgcca := &CT_ExternalLinkChoice{}
	return _bgcca
}

func (_edcgg ST_TotalsRowFunction) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cdgfbc := _b.Attr{}
	_cdgfbc.Name = name
	switch _edcgg {
	case ST_TotalsRowFunctionUnset:
		_cdgfbc.Value = ""
	case ST_TotalsRowFunctionNone:
		_cdgfbc.Value = "\u006e\u006f\u006e\u0065"
	case ST_TotalsRowFunctionSum:
		_cdgfbc.Value = "\u0073\u0075\u006d"
	case ST_TotalsRowFunctionMin:
		_cdgfbc.Value = "\u006d\u0069\u006e"
	case ST_TotalsRowFunctionMax:
		_cdgfbc.Value = "\u006d\u0061\u0078"
	case ST_TotalsRowFunctionAverage:
		_cdgfbc.Value = "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case ST_TotalsRowFunctionCount:
		_cdgfbc.Value = "\u0063\u006f\u0075n\u0074"
	case ST_TotalsRowFunctionCountNums:
		_cdgfbc.Value = "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case ST_TotalsRowFunctionStdDev:
		_cdgfbc.Value = "\u0073\u0074\u0064\u0044\u0065\u0076"
	case ST_TotalsRowFunctionVar:
		_cdgfbc.Value = "\u0076\u0061\u0072"
	case ST_TotalsRowFunctionCustom:
		_cdgfbc.Value = "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return _cdgfbc, nil
}

func (_fgdcdd ST_TimePeriod) ValidateWithPath(path string) error {
	switch _fgdcdd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgdcdd))
	}
	return nil
}

func NewCT_PageItem() *CT_PageItem { _eefae := &CT_PageItem{}; return _eefae }

func (_ccgcbe *CT_FieldUsage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bgfde := range start.Attr {
		if _bgfde.Name.Local == "\u0078" {
			_dfbbd, _feabfd := _eb.ParseInt(_bgfde.Value, 10, 32)
			if _feabfd != nil {
				return _feabfd
			}
			_ccgcbe.XAttr = int32(_dfbbd)
			continue
		}
	}
	for {
		_eege, _ecgfa := d.Token()
		if _ecgfa != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0046i\u0065l\u0064U\u0073\u0061\u0067\u0065\u003a\u0020\u0025s", _ecgfa)
		}
		if _cbage, _dfabb := _eege.(_b.EndElement); _dfabb && _cbage.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_CustomWorkbookView struct {

	// Custom View Name
	NameAttr string

	// Custom View GUID
	GuidAttr string

	// Auto Update
	AutoUpdateAttr *bool

	// Merge Interval
	MergeIntervalAttr *uint32

	// Changes Saved Win
	ChangesSavedWinAttr *bool

	// Only Synch
	OnlySyncAttr *bool

	// Personal View
	PersonalViewAttr *bool

	// Include Print Settings
	IncludePrintSettingsAttr *bool

	// Include Hidden Rows & Columns
	IncludeHiddenRowColAttr *bool

	// Maximized
	MaximizedAttr *bool

	// Minimized
	MinimizedAttr *bool

	// Show Horizontal Scroll
	ShowHorizontalScrollAttr *bool

	// Show Vertical Scroll
	ShowVerticalScrollAttr *bool

	// Show Sheet Tabs
	ShowSheetTabsAttr *bool

	// Top Left Corner (X Coordinate)
	XWindowAttr *int32

	// Top Left Corner (Y Coordinate)
	YWindowAttr *int32

	// Window Width
	WindowWidthAttr uint32

	// Window Height
	WindowHeightAttr uint32

	// Sheet Tab Ratio
	TabRatioAttr *uint32

	// Active Sheet in Book View
	ActiveSheetIdAttr uint32

	// Show Formula Bar
	ShowFormulaBarAttr *bool

	// Show Status Bar
	ShowStatusbarAttr *bool

	// Show Comments
	ShowCommentsAttr ST_Comments

	// Show Objects
	ShowObjectsAttr ST_Objects
	ExtLst          *CT_ExtensionList
}

type CT_OleObject struct {

	// Embedded Object ProgId
	ProgIdAttr *string

	// Data or View Aspect
	DvAspectAttr ST_DvAspect

	// Embedded Object's Link Moniker
	LinkAttr *string

	// Linked Embedded Object Update
	OleUpdateAttr ST_OleUpdate

	// Auto Load
	AutoLoadAttr *bool

	// Shape Id
	ShapeIdAttr uint32
	IdAttr      *string

	// Embedded Object Properties
	ObjectPr *CT_ObjectPr
}

// Validate validates the CT_MdxSet and its children
func (_fdefd *CT_MdxSet) Validate() error {
	return _fdefd.ValidateWithPath("\u0043T\u005f\u004d\u0064\u0078\u0053\u0065t")
}

func NewCT_FontFamily() *CT_FontFamily { _cgeef := &CT_FontFamily{}; _cgeef.ValAttr = 0; return _cgeef }

func (_bdgcfc *Comments) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0073"
	return _bdgcfc.CT_Comments.MarshalXML(e, start)
}

func (_aedgf ST_SmartTagShow) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_aefebd := _b.Attr{}
	_aefebd.Name = name
	switch _aedgf {
	case ST_SmartTagShowUnset:
		_aefebd.Value = ""
	case ST_SmartTagShowAll:
		_aefebd.Value = "\u0061\u006c\u006c"
	case ST_SmartTagShowNone:
		_aefebd.Value = "\u006e\u006f\u006e\u0065"
	case ST_SmartTagShowNoIndicator:
		_aefebd.Value = "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	}
	return _aefebd, nil
}

func (_gbbg *CT_PhoneticPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fddgf := range start.Attr {
		if _fddgf.Name.Local == "\u0066\u006f\u006e\u0074\u0049\u0064" {
			_acfgdg, _bbacd := _eb.ParseUint(_fddgf.Value, 10, 32)
			if _bbacd != nil {
				return _bbacd
			}
			_gbbg.FontIdAttr = uint32(_acfgdg)
			continue
		}
		if _fddgf.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gbbg.TypeAttr.UnmarshalXMLAttr(_fddgf)
			continue
		}
		if _fddgf.Name.Local == "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et" {
			_gbbg.AlignmentAttr.UnmarshalXMLAttr(_fddgf)
			continue
		}
	}
	for {
		_bgcbg, _gcffce := d.Token()
		if _gcffce != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050h\u006fn\u0065t\u0069\u0063\u0050\u0072\u003a\u0020\u0025s", _gcffce)
		}
		if _ecdfa, _efccg := _bgcbg.(_b.EndElement); _efccg && _ecdfa.Name == start.Name {
			break
		}
	}
	return nil
}

func (_adabg ST_CellFormulaType) String() string {
	switch _adabg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0061\u0072\u0072a\u0079"
	case 3:
		return "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce"
	case 4:
		return "\u0073\u0068\u0061\u0072\u0065\u0064"
	}
	return ""
}

func (_abcbg ST_VolDepType) ValidateWithPath(path string) error {
	switch _abcbg {
	case 0, 1, 2:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abcbg))
	}
	return nil
}

// ValidateWithPath validates the CT_Boolean and its children, prefixing error messages with path
func (_fdcg *CT_Boolean) ValidateWithPath(path string) error {
	for _fdfa, _caa := range _fdcg.X {
		if _dge := _caa.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _fdfa)); _dge != nil {
			return _dge
		}
	}
	return nil
}

func (_cefdf *CT_VolMain) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072s\u0074"}, Value: _ec.Sprintf("\u0025\u0076", _cefdf.FirstAttr)})
	e.EncodeToken(start)
	_daggb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003at\u0070"}}
	for _, _cdggf := range _cefdf.Tp {
		e.EncodeElement(_cdggf, _daggb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cggbeg *Metadata) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"
	return _cggbeg.CT_Metadata.MarshalXML(e, start)
}

func (_dbefa ST_Axis) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_aadegf := _b.Attr{}
	_aadegf.Name = name
	switch _dbefa {
	case ST_AxisUnset:
		_aadegf.Value = ""
	case ST_AxisAxisRow:
		_aadegf.Value = "\u0061x\u0069\u0073\u0052\u006f\u0077"
	case ST_AxisAxisCol:
		_aadegf.Value = "\u0061x\u0069\u0073\u0043\u006f\u006c"
	case ST_AxisAxisPage:
		_aadegf.Value = "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065"
	case ST_AxisAxisValues:
		_aadegf.Value = "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return _aadegf, nil
}

func (_fgcdf *CT_SheetBackgroundPicture) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _fgcdf.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_MeasureDimensionMaps and its children
func (_beaab *CT_MeasureDimensionMaps) Validate() error {
	return _beaab.ValidateWithPath("\u0043\u0054\u005fMe\u0061\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004d\u0061\u0070\u0073")
}

type ST_TableStyleType byte

func (_efdfe ST_TableType) Validate() error { return _efdfe.ValidateWithPath("") }

// Validate validates the CT_Pane and its children
func (_aecee *CT_Pane) Validate() error {
	return _aecee.ValidateWithPath("\u0043T\u005f\u0050\u0061\u006e\u0065")
}

func (_fcdgcg ST_ExternalConnectionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cabbc := _b.Attr{}
	_cabbc.Name = name
	switch _fcdgcg {
	case ST_ExternalConnectionTypeUnset:
		_cabbc.Value = ""
	case ST_ExternalConnectionTypeGeneral:
		_cabbc.Value = "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case ST_ExternalConnectionTypeText:
		_cabbc.Value = "\u0074\u0065\u0078\u0074"
	case ST_ExternalConnectionTypeMDY:
		_cabbc.Value = "\u004d\u0044\u0059"
	case ST_ExternalConnectionTypeDMY:
		_cabbc.Value = "\u0044\u004d\u0059"
	case ST_ExternalConnectionTypeYMD:
		_cabbc.Value = "\u0059\u004d\u0044"
	case ST_ExternalConnectionTypeMYD:
		_cabbc.Value = "\u004d\u0059\u0044"
	case ST_ExternalConnectionTypeDYM:
		_cabbc.Value = "\u0044\u0059\u004d"
	case ST_ExternalConnectionTypeYDM:
		_cabbc.Value = "\u0059\u0044\u004d"
	case ST_ExternalConnectionTypeSkip:
		_cabbc.Value = "\u0073\u006b\u0069\u0070"
	case ST_ExternalConnectionTypeEMD:
		_cabbc.Value = "\u0045\u004d\u0044"
	}
	return _cabbc, nil
}

// Validate validates the CT_CustomSheetView and its children
func (_egfcd *CT_CustomSheetView) Validate() error {
	return _egfcd.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077")
}

func (_ggbgcb *CT_Worksheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ggbgcb.SheetPr != nil {
		_fgbgaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_ggbgcb.SheetPr, _fgbgaf)
	}
	if _ggbgcb.Dimension != nil {
		_fffea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"}}
		e.EncodeElement(_ggbgcb.Dimension, _fffea)
	}
	if _ggbgcb.SheetViews != nil {
		_cecdeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_ggbgcb.SheetViews, _cecdeb)
	}
	if _ggbgcb.SheetFormatPr != nil {
		_cdbdb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}}
		e.EncodeElement(_ggbgcb.SheetFormatPr, _cdbdb)
	}
	if _ggbgcb.Cols != nil {
		_cebged := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u006f\u006c\u0073"}}
		for _, _ddaag := range _ggbgcb.Cols {
			e.EncodeElement(_ddaag, _cebged)
		}
	}
	_gbdcfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_ggbgcb.SheetData, _gbdcfa)
	if _ggbgcb.SheetCalcPr != nil {
		_dggcab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0043a\u006c\u0063\u0050\u0072"}}
		e.EncodeElement(_ggbgcb.SheetCalcPr, _dggcab)
	}
	if _ggbgcb.SheetProtection != nil {
		_eacdc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_ggbgcb.SheetProtection, _eacdc)
	}
	if _ggbgcb.ProtectedRanges != nil {
		_egace := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ap\u0072\u006f\u0074\u0065\u0063t\u0065\u0064R\u0061\u006e\u0067\u0065\u0073"}}
		e.EncodeElement(_ggbgcb.ProtectedRanges, _egace)
	}
	if _ggbgcb.Scenarios != nil {
		_bgbae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073"}}
		e.EncodeElement(_ggbgcb.Scenarios, _bgbae)
	}
	if _ggbgcb.AutoFilter != nil {
		_edggc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_ggbgcb.AutoFilter, _edggc)
	}
	if _ggbgcb.SortState != nil {
		_dbadf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_ggbgcb.SortState, _dbadf)
	}
	if _ggbgcb.DataConsolidate != nil {
		_aebfge := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ad\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065"}}
		e.EncodeElement(_ggbgcb.DataConsolidate, _aebfge)
	}
	if _ggbgcb.CustomSheetViews != nil {
		_fgbee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_ggbgcb.CustomSheetViews, _fgbee)
	}
	if _ggbgcb.MergeCells != nil {
		_effadd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}}
		e.EncodeElement(_ggbgcb.MergeCells, _effadd)
	}
	if _ggbgcb.PhoneticPr != nil {
		_ebccf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}}
		e.EncodeElement(_ggbgcb.PhoneticPr, _ebccf)
	}
	if _ggbgcb.ConditionalFormatting != nil {
		_gbacb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"}}
		for _, _fbcdf := range _ggbgcb.ConditionalFormatting {
			e.EncodeElement(_fbcdf, _gbacb)
		}
	}
	if _ggbgcb.DataValidations != nil {
		_gfggbd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ad\u0061\u0074\u0061\u0056\u0061l\u0069\u0064a\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_ggbgcb.DataValidations, _gfggbd)
	}
	if _ggbgcb.Hyperlinks != nil {
		_ebagca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}}
		e.EncodeElement(_ggbgcb.Hyperlinks, _ebagca)
	}
	if _ggbgcb.PrintOptions != nil {
		_gcedg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_ggbgcb.PrintOptions, _gcedg)
	}
	if _ggbgcb.PageMargins != nil {
		_beebe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_ggbgcb.PageMargins, _beebe)
	}
	if _ggbgcb.PageSetup != nil {
		_gfedga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_ggbgcb.PageSetup, _gfedga)
	}
	if _ggbgcb.HeaderFooter != nil {
		_gafdc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_ggbgcb.HeaderFooter, _gafdc)
	}
	if _ggbgcb.RowBreaks != nil {
		_dfeda := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_ggbgcb.RowBreaks, _dfeda)
	}
	if _ggbgcb.ColBreaks != nil {
		_cecag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_ggbgcb.ColBreaks, _cecag)
	}
	if _ggbgcb.CustomProperties != nil {
		_gfgbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}}
		e.EncodeElement(_ggbgcb.CustomProperties, _gfgbc)
	}
	if _ggbgcb.CellWatches != nil {
		_affcd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0057\u0061t\u0063\u0068\u0065\u0073"}}
		e.EncodeElement(_ggbgcb.CellWatches, _affcd)
	}
	if _ggbgcb.IgnoredErrors != nil {
		_ffddd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0069\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}}
		e.EncodeElement(_ggbgcb.IgnoredErrors, _ffddd)
	}
	if _ggbgcb.SmartTags != nil {
		_gfaceb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}}
		e.EncodeElement(_ggbgcb.SmartTags, _gfaceb)
	}
	if _ggbgcb.Drawing != nil {
		_caeed := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_ggbgcb.Drawing, _caeed)
	}
	if _ggbgcb.LegacyDrawing != nil {
		_egdba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_ggbgcb.LegacyDrawing, _egdba)
	}
	if _ggbgcb.LegacyDrawingHF != nil {
		_dccag := _b.StartElement{Name: _b.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_ggbgcb.LegacyDrawingHF, _dccag)
	}
	if _ggbgcb.DrawingHF != nil {
		_bcgbgaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_ggbgcb.DrawingHF, _bcgbgaf)
	}
	if _ggbgcb.Picture != nil {
		_eedea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}}
		e.EncodeElement(_ggbgcb.Picture, _eedea)
	}
	if _ggbgcb.OleObjects != nil {
		_bfceg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_ggbgcb.OleObjects, _bfceg)
	}
	if _ggbgcb.Controls != nil {
		_adbbb := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}}
		e.EncodeElement(_ggbgcb.Controls, _adbbb)
	}
	if _ggbgcb.WebPublishItems != nil {
		_gegbe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003aw\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_ggbgcb.WebPublishItems, _gegbe)
	}
	if _ggbgcb.TableParts != nil {
		_bggeae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}}
		e.EncodeElement(_ggbgcb.TableParts, _bggeae)
	}
	if _ggbgcb.ExtLst != nil {
		_ccbbf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ggbgcb.ExtLst, _ccbbf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CommentPr and its children, prefixing error messages with path
func (_dcdbb *CT_CommentPr) ValidateWithPath(path string) error {
	if _ceafc := _dcdbb.TextHAlignAttr.ValidateWithPath(path + "\u002fT\u0065x\u0074\u0048\u0041\u006c\u0069\u0067\u006e\u0041\u0074\u0074\u0072"); _ceafc != nil {
		return _ceafc
	}
	if _efacd := _dcdbb.TextVAlignAttr.ValidateWithPath(path + "\u002fT\u0065x\u0074\u0056\u0041\u006c\u0069\u0067\u006e\u0041\u0074\u0074\u0072"); _efacd != nil {
		return _efacd
	}
	if _eaecb := _dcdbb.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _eaecb != nil {
		return _eaecb
	}
	return nil
}

// Validate validates the CT_Items and its children
func (_egcd *CT_Items) Validate() error {
	return _egcd.ValidateWithPath("\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u0073")
}

func (_gccag ST_UnderlineValues) String() string {
	switch _gccag {
	case 0:
		return ""
	case 1:
		return "\u0073\u0069\u006e\u0067\u006c\u0065"
	case 2:
		return "\u0064\u006f\u0075\u0062\u006c\u0065"
	case 3:
		return "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case 4:
		return "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case 5:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

func (_aagfda ST_BorderStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_aagfda.String(), start)
}

func (_fbeagg *CT_PivotAreas) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dfdbgb := range start.Attr {
		if _dfdbgb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fbbbcb, _ffgca := _eb.ParseUint(_dfdbgb.Value, 10, 32)
			if _ffgca != nil {
				return _ffgca
			}
			_cdecf := uint32(_fbbbcb)
			_fbeagg.CountAttr = &_cdecf
			continue
		}
	}
_gabaa:
	for {
		_fdabe, _fdgcc := d.Token()
		if _fdgcc != nil {
			return _fdgcc
		}
		switch _dddfa := _fdabe.(type) {
		case _b.StartElement:
			switch _dddfa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				_afga := NewCT_PivotArea()
				if _gdeca := d.DecodeElement(_afga, &_dddfa); _gdeca != nil {
					return _gdeca
				}
				_fbeagg.PivotArea = append(_fbeagg.PivotArea, _afga)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050i\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073 \u0025\u0076", _dddfa.Name)
				if _beafa := d.Skip(); _beafa != nil {
					return _beafa
				}
			}
		case _b.EndElement:
			break _gabaa
		case _b.CharData:
		}
	}
	return nil
}

func (_afedb ST_FieldSortType) Validate() error { return _afedb.ValidateWithPath("") }

func (_cfeadd *CT_XmlColumnPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0070I\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _cfeadd.MapIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0070\u0061t\u0068"}, Value: _ec.Sprintf("\u0025\u0076", _cfeadd.XpathAttr)})
	if _cfeadd.DenormalizedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006eo\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cfeadd.DenormalizedAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _cfeadd.XmlDataTypeAttr)})
	e.EncodeToken(start)
	if _cfeadd.ExtLst != nil {
		_bgdcg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cfeadd.ExtLst, _bgdcg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Controls struct {

	// Embedded Control
	Control []*CT_Control
}

type CT_Mdx struct {

	// Connection Name Index
	NAttr uint32

	// Cube Function Tag
	FAttr ST_MdxFunctionType

	// Tuple MDX Metadata
	T *CT_MdxTuple

	// Set MDX Metadata
	Ms *CT_MdxSet

	// Member Property MDX Metadata
	P *CT_MdxMemeberProp

	// KPI MDX Metadata
	K *CT_MdxKPI
}

func NewCT_Cfvo() *CT_Cfvo { _afbb := &CT_Cfvo{}; _afbb.TypeAttr = ST_CfvoType(1); return _afbb }

type CT_Filter struct {

	// Filter Value
	ValAttr *string
}

func (_cegfa ST_CellSpans) String() string { return _ea.Join(_cegfa, "\u0020") }

func (_fdfceg *ST_MdxKPIProperty) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fdfceg = 0
	case "\u0076":
		*_fdfceg = 1
	case "\u0067":
		*_fdfceg = 2
	case "\u0073":
		*_fdfceg = 3
	case "\u0074":
		*_fdfceg = 4
	case "\u0077":
		*_fdfceg = 5
	case "\u006d":
		*_fdfceg = 6
	}
	return nil
}

func (_bafde ST_PrintError) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bafde.String(), start)
}

func (_abgce ST_TableType) ValidateWithPath(path string) error {
	switch _abgce {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abgce))
	}
	return nil
}

func (_gfae *CT_DiscretePr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aggcd := range start.Attr {
		if _aggcd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ccga, _gebed := _eb.ParseUint(_aggcd.Value, 10, 32)
			if _gebed != nil {
				return _gebed
			}
			_ccgf := uint32(_ccga)
			_gfae.CountAttr = &_ccgf
			continue
		}
	}
_aaaa:
	for {
		_adcff, _gedgg := d.Token()
		if _gedgg != nil {
			return _gedgg
		}
		switch _eebb := _adcff.(type) {
		case _b.StartElement:
			switch _eebb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_bcgfb := NewCT_Index()
				if _gagac := d.DecodeElement(_bcgfb, &_eebb); _gagac != nil {
					return _gagac
				}
				_gfae.X = append(_gfae.X, _bcgfb)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044i\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072 \u0025\u0076", _eebb.Name)
				if _abdcc := d.Skip(); _abdcc != nil {
					return _abdcc
				}
			}
		case _b.EndElement:
			break _aaaa
		case _b.CharData:
		}
	}
	return nil
}

func (_ebdgc *ST_OleUpdate) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ebdgc = 0
	case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053":
		*_ebdgc = 1
	case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c":
		*_ebdgc = 2
	}
	return nil
}

func (_cdbdf ST_VerticalAlignment) String() string {
	switch _cdbdf {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0070"
	case 2:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 3:
		return "\u0062\u006f\u0074\u0074\u006f\u006d"
	case 4:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 5:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}

func NewCT_FontScheme() *CT_FontScheme {
	_bcabbe := &CT_FontScheme{}
	_bcabbe.ValAttr = ST_FontScheme(1)
	return _bcabbe
}

// ValidateWithPath validates the CT_ConditionalFormat and its children, prefixing error messages with path
func (_fbdcb *CT_ConditionalFormat) ValidateWithPath(path string) error {
	if _bbed := _fbdcb.ScopeAttr.ValidateWithPath(path + "\u002f\u0053\u0063\u006f\u0070\u0065\u0041\u0074\u0074\u0072"); _bbed != nil {
		return _bbed
	}
	if _dabb := _fbdcb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _dabb != nil {
		return _dabb
	}
	if _bdbcb := _fbdcb.PivotAreas.ValidateWithPath(path + "/\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"); _bdbcb != nil {
		return _bdbcb
	}
	if _fbdcb.ExtLst != nil {
		if _bfccb := _fbdcb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfccb != nil {
			return _bfccb
		}
	}
	return nil
}

func (_bfgcee *ST_CredMethod) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bfgcee = 0
	case "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064":
		*_bfgcee = 1
	case "\u006e\u006f\u006e\u0065":
		*_bfgcee = 2
	case "\u0073\u0074\u006f\u0072\u0065\u0064":
		*_bfgcee = 3
	case "\u0070\u0072\u006f\u006d\u0070\u0074":
		*_bfgcee = 4
	}
	return nil
}

func (_dafdg ST_DataValidationErrorStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dafdg.String(), start)
}

func (_fgdgc *CT_String) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _ec.Sprintf("\u0025\u0076", _fgdgc.VAttr)})
	if _fgdgc.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgdgc.UAttr))})
	}
	if _fgdgc.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgdgc.FAttr))})
	}
	if _fgdgc.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_fgdgc.CAttr)})
	}
	if _fgdgc.CpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0070"}, Value: _ec.Sprintf("\u0025\u0076", *_fgdgc.CpAttr)})
	}
	if _fgdgc.InAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_fgdgc.InAttr)})
	}
	if _fgdgc.BcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_fgdgc.BcAttr)})
	}
	if _fgdgc.FcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_fgdgc.FcAttr)})
	}
	if _fgdgc.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgdgc.IAttr))})
	}
	if _fgdgc.UnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgdgc.UnAttr))})
	}
	if _fgdgc.StAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgdgc.StAttr))})
	}
	if _fgdgc.BAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgdgc.BAttr))})
	}
	e.EncodeToken(start)
	if _fgdgc.Tpls != nil {
		_badbd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _ecefgb := range _fgdgc.Tpls {
			e.EncodeElement(_ecefgb, _badbd)
		}
	}
	if _fgdgc.X != nil {
		_cdcag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _fgega := range _fgdgc.X {
			e.EncodeElement(_fgega, _cdcag)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_CustomWorkbookViews struct {

	// Custom Workbook View
	CustomWorkbookView []*CT_CustomWorkbookView
}

const (
	ST_HorizontalAlignmentUnset            ST_HorizontalAlignment = 0
	ST_HorizontalAlignmentGeneral          ST_HorizontalAlignment = 1
	ST_HorizontalAlignmentLeft             ST_HorizontalAlignment = 2
	ST_HorizontalAlignmentCenter           ST_HorizontalAlignment = 3
	ST_HorizontalAlignmentRight            ST_HorizontalAlignment = 4
	ST_HorizontalAlignmentFill             ST_HorizontalAlignment = 5
	ST_HorizontalAlignmentJustify          ST_HorizontalAlignment = 6
	ST_HorizontalAlignmentCenterContinuous ST_HorizontalAlignment = 7
	ST_HorizontalAlignmentDistributed      ST_HorizontalAlignment = 8
)

func (_affcc ST_VerticalAlignment) ValidateWithPath(path string) error {
	switch _affcc {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_affcc))
	}
	return nil
}

func (_aebfff ST_DynamicFilterType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_eaedbd := _b.Attr{}
	_eaedbd.Name = name
	switch _aebfff {
	case ST_DynamicFilterTypeUnset:
		_eaedbd.Value = ""
	case ST_DynamicFilterTypeNull:
		_eaedbd.Value = "\u006e\u0075\u006c\u006c"
	case ST_DynamicFilterTypeAboveAverage:
		_eaedbd.Value = "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case ST_DynamicFilterTypeBelowAverage:
		_eaedbd.Value = "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case ST_DynamicFilterTypeTomorrow:
		_eaedbd.Value = "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case ST_DynamicFilterTypeToday:
		_eaedbd.Value = "\u0074\u006f\u0064a\u0079"
	case ST_DynamicFilterTypeYesterday:
		_eaedbd.Value = "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case ST_DynamicFilterTypeNextWeek:
		_eaedbd.Value = "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case ST_DynamicFilterTypeThisWeek:
		_eaedbd.Value = "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case ST_DynamicFilterTypeLastWeek:
		_eaedbd.Value = "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case ST_DynamicFilterTypeNextMonth:
		_eaedbd.Value = "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case ST_DynamicFilterTypeThisMonth:
		_eaedbd.Value = "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case ST_DynamicFilterTypeLastMonth:
		_eaedbd.Value = "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case ST_DynamicFilterTypeNextQuarter:
		_eaedbd.Value = "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_DynamicFilterTypeThisQuarter:
		_eaedbd.Value = "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_DynamicFilterTypeLastQuarter:
		_eaedbd.Value = "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_DynamicFilterTypeNextYear:
		_eaedbd.Value = "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case ST_DynamicFilterTypeThisYear:
		_eaedbd.Value = "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case ST_DynamicFilterTypeLastYear:
		_eaedbd.Value = "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case ST_DynamicFilterTypeYearToDate:
		_eaedbd.Value = "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case ST_DynamicFilterTypeQ1:
		_eaedbd.Value = "\u0051\u0031"
	case ST_DynamicFilterTypeQ2:
		_eaedbd.Value = "\u0051\u0032"
	case ST_DynamicFilterTypeQ3:
		_eaedbd.Value = "\u0051\u0033"
	case ST_DynamicFilterTypeQ4:
		_eaedbd.Value = "\u0051\u0034"
	case ST_DynamicFilterTypeM1:
		_eaedbd.Value = "\u004d\u0031"
	case ST_DynamicFilterTypeM2:
		_eaedbd.Value = "\u004d\u0032"
	case ST_DynamicFilterTypeM3:
		_eaedbd.Value = "\u004d\u0033"
	case ST_DynamicFilterTypeM4:
		_eaedbd.Value = "\u004d\u0034"
	case ST_DynamicFilterTypeM5:
		_eaedbd.Value = "\u004d\u0035"
	case ST_DynamicFilterTypeM6:
		_eaedbd.Value = "\u004d\u0036"
	case ST_DynamicFilterTypeM7:
		_eaedbd.Value = "\u004d\u0037"
	case ST_DynamicFilterTypeM8:
		_eaedbd.Value = "\u004d\u0038"
	case ST_DynamicFilterTypeM9:
		_eaedbd.Value = "\u004d\u0039"
	case ST_DynamicFilterTypeM10:
		_eaedbd.Value = "\u004d\u0031\u0030"
	case ST_DynamicFilterTypeM11:
		_eaedbd.Value = "\u004d\u0031\u0031"
	case ST_DynamicFilterTypeM12:
		_eaedbd.Value = "\u004d\u0031\u0032"
	}
	return _eaedbd, nil
}

func (_gcacbg *ST_FontScheme) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gcacbg = 0
	case "\u006e\u006f\u006e\u0065":
		*_gcacbg = 1
	case "\u006d\u0061\u006ao\u0072":
		*_gcacbg = 2
	case "\u006d\u0069\u006eo\u0072":
		*_gcacbg = 3
	}
	return nil
}

// Validate validates the CT_IntProperty and its children
func (_efdafe *CT_IntProperty) Validate() error {
	return _efdafe.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0074\u0050\u0072\u006fp\u0065\u0072\u0074\u0079")
}

type CT_XmlPr struct {

	// XML Map Id
	MapIdAttr uint32

	// XPath
	XpathAttr string

	// XML Data Type
	XmlDataTypeAttr string

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_fdebd ST_DataValidationImeMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fdebd.String(), start)
}

// ValidateWithPath validates the CT_Location and its children, prefixing error messages with path
func (_afdbf *CT_Location) ValidateWithPath(path string) error { return nil }

type CT_Members struct {

	// Item Count
	CountAttr *uint32

	// Hierarchy Level
	LevelAttr *uint32

	// Member
	Member []*CT_Member
}

func (_cdef *CT_MeasureDimensionMaps) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _agaad := range start.Attr {
		if _agaad.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bbeg, _ffdaa := _eb.ParseUint(_agaad.Value, 10, 32)
			if _ffdaa != nil {
				return _ffdaa
			}
			_dcfaf := uint32(_bbeg)
			_cdef.CountAttr = &_dcfaf
			continue
		}
	}
_fgdg:
	for {
		_edeb, _cegfc := d.Token()
		if _cegfc != nil {
			return _cegfc
		}
		switch _ebcc := _edeb.(type) {
		case _b.StartElement:
			switch _ebcc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070"}:
				_gbdeg := NewCT_MeasureDimensionMap()
				if _egda := d.DecodeElement(_gbdeg, &_ebcc); _egda != nil {
					return _egda
				}
				_cdef.Map = append(_cdef.Map, _gbdeg)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0044\u0069m\u0065\u006e\u0073\u0069\u006f\u006eM\u0061\u0070\u0073 \u0025\u0076", _ebcc.Name)
				if _daegb := d.Skip(); _daegb != nil {
					return _daegb
				}
			}
		case _b.EndElement:
			break _fgdg
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_DataValidationErrorStyleUnset       ST_DataValidationErrorStyle = 0
	ST_DataValidationErrorStyleStop        ST_DataValidationErrorStyle = 1
	ST_DataValidationErrorStyleWarning     ST_DataValidationErrorStyle = 2
	ST_DataValidationErrorStyleInformation ST_DataValidationErrorStyle = 3
)

// Validate validates the CT_MeasureDimensionMap and its children
func (_cfcge *CT_MeasureDimensionMap) Validate() error {
	return _cfcge.ValidateWithPath("\u0043\u0054\u005f\u004dea\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004da\u0070")
}

func (_efeac *CT_RevisionFormatting) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _accgc := range start.Attr {
		if _accgc.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_efdbg, _gdcfg := _eb.ParseUint(_accgc.Value, 10, 32)
			if _gdcfg != nil {
				return _gdcfg
			}
			_efeac.SheetIdAttr = uint32(_efdbg)
			continue
		}
		if _accgc.Name.Local == "\u0078\u0066\u0044x\u0066" {
			_babcf, _gafcb := _eb.ParseBool(_accgc.Value)
			if _gafcb != nil {
				return _gafcb
			}
			_efeac.XfDxfAttr = &_babcf
			continue
		}
		if _accgc.Name.Local == "\u0073" {
			_gfbdc, _aabea := _eb.ParseBool(_accgc.Value)
			if _aabea != nil {
				return _aabea
			}
			_efeac.SAttr = &_gfbdc
			continue
		}
		if _accgc.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_bfggf, _gcfcd := ParseSliceST_Sqref(_accgc.Value)
			if _gcfcd != nil {
				return _gcfcd
			}
			_efeac.SqrefAttr = _bfggf
			continue
		}
		if _accgc.Name.Local == "\u0073\u0074\u0061r\u0074" {
			_aaaad, _debgf := _eb.ParseUint(_accgc.Value, 10, 32)
			if _debgf != nil {
				return _debgf
			}
			_gedae := uint32(_aaaad)
			_efeac.StartAttr = &_gedae
			continue
		}
		if _accgc.Name.Local == "\u006c\u0065\u006e\u0067\u0074\u0068" {
			_adbeg, _gbeecg := _eb.ParseUint(_accgc.Value, 10, 32)
			if _gbeecg != nil {
				return _gbeecg
			}
			_cbbdd := uint32(_adbeg)
			_efeac.LengthAttr = &_cbbdd
			continue
		}
	}
_baged:
	for {
		_fcgcf, _adfba := d.Token()
		if _adfba != nil {
			return _adfba
		}
		switch _dbfdf := _fcgcf.(type) {
		case _b.StartElement:
			switch _dbfdf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}:
				_efeac.Dxf = NewCT_Dxf()
				if _gagbg := d.DecodeElement(_efeac.Dxf, &_dbfdf); _gagbg != nil {
					return _gagbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efeac.ExtLst = NewCT_ExtensionList()
				if _eebfc := d.DecodeElement(_efeac.ExtLst, &_dbfdf); _eebfc != nil {
					return _eebfc
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067\u0020\u0025\u0076", _dbfdf.Name)
				if _gbadd := d.Skip(); _gbadd != nil {
					return _gbadd
				}
			}
		case _b.EndElement:
			break _baged
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ExternalSheetName and its children
func (_gaccf *CT_ExternalSheetName) Validate() error {
	return _gaccf.ValidateWithPath("C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Na\u006d\u0065")
}

func NewMetadata() *Metadata {
	_defgfd := &Metadata{}
	_defgfd.CT_Metadata = *NewCT_Metadata()
	return _defgfd
}

type CT_UndoInfo struct {

	// Index
	IndexAttr uint32

	// Expression
	ExpAttr ST_FormulaExpression

	// Reference 3D
	Ref3DAttr *bool

	// Array Formula
	ArrayAttr *bool

	// Value Needed
	VAttr *bool

	// Defined Name Formula
	NfAttr *bool

	// Cross Sheet Move
	CsAttr *bool

	// Range
	DrAttr string

	// Defined Name
	DnAttr *string

	// Cell Reference
	RAttr *string

	// Sheet Id
	SIdAttr *uint32
}

func (_fdfgb *ST_PrintError) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ffgcae, _efefcf := d.Token()
	if _efefcf != nil {
		return _efefcf
	}
	if _cfbag, _dfggg := _ffgcae.(_b.EndElement); _dfggg && _cfbag.Name == start.Name {
		*_fdfgb = 1
		return nil
	}
	if _bgaec, _eeefbb := _ffgcae.(_b.CharData); !_eeefbb {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffgcae)
	} else {
		switch string(_bgaec) {
		case "":
			*_fdfgb = 0
		case "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d":
			*_fdfgb = 1
		case "\u0062\u006c\u0061n\u006b":
			*_fdfgb = 2
		case "\u0064\u0061\u0073\u0068":
			*_fdfgb = 3
		case "\u004e\u0041":
			*_fdfgb = 4
		}
	}
	_ffgcae, _efefcf = d.Token()
	if _efefcf != nil {
		return _efefcf
	}
	if _afgdb, _bbefcb := _ffgcae.(_b.EndElement); _bbefcb && _afgdb.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffgcae)
}

func (_bgeffd *CT_RevisionRowColumn) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _bgeffd.SIdAttr)})
	if _bgeffd.EolAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006f\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bgeffd.EolAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", _bgeffd.RefAttr)})
	_egbfbf, _ebbdb := _bgeffd.ActionAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
	if _ebbdb != nil {
		return _ebbdb
	}
	start.Attr = append(start.Attr, _egbfbf)
	if _bgeffd.EdgeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0064\u0067\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bgeffd.EdgeAttr))})
	}
	if _bgeffd.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_bgeffd.RIdAttr)})
	}
	if _bgeffd.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bgeffd.UaAttr))})
	}
	if _bgeffd.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bgeffd.RaAttr))})
	}
	e.EncodeToken(start)
	if _bgeffd.Undo != nil {
		_fgbdd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0075\u006e\u0064\u006f"}}
		for _, _afagff := range _bgeffd.Undo {
			e.EncodeElement(_afagff, _fgbdd)
		}
	}
	if _bgeffd.Rcc != nil {
		_debab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0063"}}
		for _, _ddccag := range _bgeffd.Rcc {
			e.EncodeElement(_ddccag, _debab)
		}
	}
	if _bgeffd.Rfmt != nil {
		_ddadg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0072\u0066\u006d\u0074"}}
		for _, _bfddd := range _bgeffd.Rfmt {
			e.EncodeElement(_bfddd, _ddadg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_MetadataRecord and its children
func (_dfdfe *CT_MetadataRecord) Validate() error {
	return _dfdfe.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0052e\u0063\u006f\u0072\u0064")
}

func (_febb *CT_CalcPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _febb.CalcIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061\u006c\u0063\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_febb.CalcIdAttr)})
	}
	if _febb.CalcModeAttr != ST_CalcModeUnset {
		_edgbf, _abgf := _febb.CalcModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u0061\u006c\u0063\u004d\u006f\u0064\u0065"})
		if _abgf != nil {
			return _abgf
		}
		start.Attr = append(start.Attr, _edgbf)
	}
	if _febb.FullCalcOnLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_febb.FullCalcOnLoadAttr))})
	}
	if _febb.RefModeAttr != ST_RefModeUnset {
		_ccca, _dade := _febb.RefModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0072e\u0066\u004d\u006f\u0064\u0065"})
		if _dade != nil {
			return _dade
		}
		start.Attr = append(start.Attr, _ccca)
	}
	if _febb.IterateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069t\u0065\u0072\u0061\u0074\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_febb.IterateAttr))})
	}
	if _febb.IterateCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0074\u0065r\u0061\u0074\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_febb.IterateCountAttr)})
	}
	if _febb.IterateDeltaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0074\u0065r\u0061\u0074\u0065\u0044\u0065\u006c\u0074\u0061"}, Value: _ec.Sprintf("\u0025\u0076", *_febb.IterateDeltaAttr)})
	}
	if _febb.FullPrecisionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0075\u006c\u006c\u0050\u0072\u0065\u0063\u0069\u0073\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_febb.FullPrecisionAttr))})
	}
	if _febb.CalcCompletedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061\u006c\u0063\u0043\u006f\u006d\u0070\u006c\u0065\u0074\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_febb.CalcCompletedAttr))})
	}
	if _febb.CalcOnSaveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061\u006c\u0063\u004f\u006e\u0053\u0061\u0076\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_febb.CalcOnSaveAttr))})
	}
	if _febb.ConcurrentCalcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006et\u0043\u0061\u006c\u0063"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_febb.ConcurrentCalcAttr))})
	}
	if _febb.ConcurrentManualCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006e\u0063\u0075rr\u0065n\u0074\u004d\u0061\u006e\u0075a\u006c\u0043\u006f\u0075\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_febb.ConcurrentManualCountAttr)})
	}
	if _febb.ForceFullCalcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072\u0063\u0065\u0046\u0075\u006c\u006c\u0043\u0061\u006c\u0063"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_febb.ForceFullCalcAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Authors struct {

	// Author
	Author []string
}

func (_bcbcga ST_PatternType) ValidateWithPath(path string) error {
	switch _bcbcga {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bcbcga))
	}
	return nil
}

func (_aadaa ST_TableType) String() string {
	switch _aadaa {
	case 0:
		return ""
	case 1:
		return "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case 2:
		return "\u0078\u006d\u006c"
	case 3:
		return "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065"
	}
	return ""
}

// ValidateWithPath validates the CT_Comment and its children, prefixing error messages with path
func (_cdcg *CT_Comment) ValidateWithPath(path string) error {
	if _cdcg.GuidAttr != nil {
		if !_bb.ST_GuidPatternRe.MatchString(*_cdcg.GuidAttr) {
			return _ec.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _bb.ST_GuidPatternRe, *_cdcg.GuidAttr)
		}
	}
	if _dbbd := _cdcg.Text.ValidateWithPath(path + "\u002f\u0054\u0065x\u0074"); _dbbd != nil {
		return _dbbd
	}
	if _cdcg.CommentPr != nil {
		if _dfcd := _cdcg.CommentPr.ValidateWithPath(path + "\u002f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072"); _dfcd != nil {
			return _dfcd
		}
	}
	return nil
}

func NewCT_VolMain() *CT_VolMain { _agab := &CT_VolMain{}; return _agab }

type CT_QueryTableField struct {

	// Field Id
	IdAttr uint32

	// Name
	NameAttr *string

	// Data Bound Column
	DataBoundAttr *bool

	// Row Numbers
	RowNumbersAttr *bool

	// Fill This Formula On Refresh
	FillFormulasAttr *bool

	// Clipped Column
	ClippedAttr *bool

	// Table Column Id
	TableColumnIdAttr *uint32

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_RowHierarchiesUsage and its children
func (_deef *CT_RowHierarchiesUsage) Validate() error {
	return _deef.ValidateWithPath("\u0043\u0054\u005f\u0052ow\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065")
}

func (_afdd *CT_Formats) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _afdd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_afdd.CountAttr)})
	}
	e.EncodeToken(start)
	_fffcg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u006f\u0072\u006d\u0061t"}}
	for _, _egagc := range _afdd.Format {
		e.EncodeElement(_egagc, _fffcg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_CfTypeUnset             ST_CfType = 0
	ST_CfTypeExpression        ST_CfType = 1
	ST_CfTypeCellIs            ST_CfType = 2
	ST_CfTypeColorScale        ST_CfType = 3
	ST_CfTypeDataBar           ST_CfType = 4
	ST_CfTypeIconSet           ST_CfType = 5
	ST_CfTypeTop10             ST_CfType = 6
	ST_CfTypeUniqueValues      ST_CfType = 7
	ST_CfTypeDuplicateValues   ST_CfType = 8
	ST_CfTypeContainsText      ST_CfType = 9
	ST_CfTypeNotContainsText   ST_CfType = 10
	ST_CfTypeBeginsWith        ST_CfType = 11
	ST_CfTypeEndsWith          ST_CfType = 12
	ST_CfTypeContainsBlanks    ST_CfType = 13
	ST_CfTypeNotContainsBlanks ST_CfType = 14
	ST_CfTypeContainsErrors    ST_CfType = 15
	ST_CfTypeNotContainsErrors ST_CfType = 16
	ST_CfTypeTimePeriod        ST_CfType = 17
	ST_CfTypeAboveAverage      ST_CfType = 18
)

func (_dcafd *CT_UndoInfo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0064e\u0078"}, Value: _ec.Sprintf("\u0025\u0076", _dcafd.IndexAttr)})
	_badcb, _ecdge := _dcafd.ExpAttr.MarshalXMLAttr(_b.Name{Local: "\u0065\u0078\u0070"})
	if _ecdge != nil {
		return _ecdge
	}
	start.Attr = append(start.Attr, _badcb)
	if _dcafd.Ref3DAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u00663\u0044"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dcafd.Ref3DAttr))})
	}
	if _dcafd.ArrayAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0072\u0072a\u0079"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dcafd.ArrayAttr))})
	}
	if _dcafd.VAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dcafd.VAttr))})
	}
	if _dcafd.NfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0066"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dcafd.NfAttr))})
	}
	if _dcafd.CsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dcafd.CsAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072"}, Value: _ec.Sprintf("\u0025\u0076", _dcafd.DrAttr)})
	if _dcafd.DnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_dcafd.DnAttr)})
	}
	if _dcafd.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_dcafd.RAttr)})
	}
	if _dcafd.SIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_dcafd.SIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cdgac ST_TargetScreenSize) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dgcagb := _b.Attr{}
	_dgcagb.Name = name
	switch _cdgac {
	case ST_TargetScreenSizeUnset:
		_dgcagb.Value = ""
	case ST_TargetScreenSize544x376:
		_dgcagb.Value = "\u00354\u0034\u0078\u0033\u0037\u0036"
	case ST_TargetScreenSize640x480:
		_dgcagb.Value = "\u00364\u0030\u0078\u0034\u0038\u0030"
	case ST_TargetScreenSize720x512:
		_dgcagb.Value = "\u00372\u0030\u0078\u0035\u0031\u0032"
	case ST_TargetScreenSize800x600:
		_dgcagb.Value = "\u00380\u0030\u0078\u0036\u0030\u0030"
	case ST_TargetScreenSize1024x768:
		_dgcagb.Value = "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case ST_TargetScreenSize1152x882:
		_dgcagb.Value = "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case ST_TargetScreenSize1152x900:
		_dgcagb.Value = "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case ST_TargetScreenSize1280x1024:
		_dgcagb.Value = "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case ST_TargetScreenSize1600x1200:
		_dgcagb.Value = "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case ST_TargetScreenSize1800x1440:
		_dgcagb.Value = "\u00318\u0030\u0030\u0078\u0031\u0034\u00340"
	case ST_TargetScreenSize1920x1200:
		_dgcagb.Value = "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return _dgcagb, nil
}

func (_geabbd *ST_SortType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dgcdc, _befec := d.Token()
	if _befec != nil {
		return _befec
	}
	if _ddgdeaa, _fdbed := _dgcdc.(_b.EndElement); _fdbed && _ddgdeaa.Name == start.Name {
		*_geabbd = 1
		return nil
	}
	if _ceggf, _agbbc := _dgcdc.(_b.CharData); !_agbbc {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgcdc)
	} else {
		switch string(_ceggf) {
		case "":
			*_geabbd = 0
		case "\u006e\u006f\u006e\u0065":
			*_geabbd = 1
		case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
			*_geabbd = 2
		case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
			*_geabbd = 3
		case "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061":
			*_geabbd = 4
		case "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061":
			*_geabbd = 5
		case "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c":
			*_geabbd = 6
		case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c":
			*_geabbd = 7
		}
	}
	_dgcdc, _befec = d.Token()
	if _befec != nil {
		return _befec
	}
	if _cdfde, _acdce := _dgcdc.(_b.EndElement); _acdce && _cdfde.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgcdc)
}

// ValidateWithPath validates the CT_RevisionHeader and its children, prefixing error messages with path
func (_dadaga *CT_RevisionHeader) ValidateWithPath(path string) error {
	if !_bb.ST_GuidPatternRe.MatchString(_dadaga.GuidAttr) {
		return _ec.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _bb.ST_GuidPatternRe, _dadaga.GuidAttr)
	}
	if _bfafea := _dadaga.SheetIdMap.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"); _bfafea != nil {
		return _bfafea
	}
	if _dadaga.ReviewedList != nil {
		if _egcbg := _dadaga.ReviewedList.ValidateWithPath(path + "\u002f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"); _egcbg != nil {
			return _egcbg
		}
	}
	if _dadaga.ExtLst != nil {
		if _fdega := _dadaga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fdega != nil {
			return _fdega
		}
	}
	return nil
}

type MapInfo struct{ CT_MapInfo }

func (_afgga *ST_TableStyleType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aeadf, _efgbega := d.Token()
	if _efgbega != nil {
		return _efgbega
	}
	if _dffbg, _bcfebf := _aeadf.(_b.EndElement); _bcfebf && _dffbg.Name == start.Name {
		*_afgga = 1
		return nil
	}
	if _bdgdee, _cefcc := _aeadf.(_b.CharData); !_cefcc {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aeadf)
	} else {
		switch string(_bdgdee) {
		case "":
			*_afgga = 0
		case "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065":
			*_afgga = 1
		case "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw":
			*_afgga = 2
		case "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
			*_afgga = 3
		case "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
			*_afgga = 4
		case "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
			*_afgga = 5
		case "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065":
			*_afgga = 6
		case "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065":
			*_afgga = 7
		case "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065":
			*_afgga = 8
		case "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065":
			*_afgga = 9
		case "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c":
			*_afgga = 10
		case "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c":
			*_afgga = 11
		case "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c":
			*_afgga = 12
		case "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c":
			*_afgga = 13
		case "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
			*_afgga = 14
		case "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e":
			*_afgga = 15
		case "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
			*_afgga = 16
		case "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
			*_afgga = 17
		case "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077":
			*_afgga = 18
		case "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
			*_afgga = 19
		case "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077":
			*_afgga = 20
		case "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
			*_afgga = 21
		case "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067":
			*_afgga = 22
		case "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
			*_afgga = 23
		case "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
			*_afgga = 24
		case "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067":
			*_afgga = 25
		case "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
			*_afgga = 26
		case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073":
			*_afgga = 27
		case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073":
			*_afgga = 28
		}
	}
	_aeadf, _efgbega = d.Token()
	if _efgbega != nil {
		return _efgbega
	}
	if _gggcec, _cadab := _aeadf.(_b.EndElement); _cadab && _gggcec.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aeadf)
}

// Validate validates the CT_CellStyles and its children
func (_fgfb *CT_CellStyles) Validate() error {
	return _fgfb.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073")
}

func (_dfdec ST_DataValidationErrorStyle) ValidateWithPath(path string) error {
	switch _dfdec {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dfdec))
	}
	return nil
}

func (_abcef *ST_rwColActionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_abcef = 0
	case "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw":
		*_abcef = 1
	case "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw":
		*_abcef = 2
	case "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl":
		*_abcef = 3
	case "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl":
		*_abcef = 4
	}
	return nil
}

// Validate validates the CT_CustomProperty and its children
func (_aafff *CT_CustomProperty) Validate() error {
	return _aafff.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006fp\u0065\u0072\u0074\u0079")
}

// Validate validates the CT_Cols and its children
func (_gdbdc *CT_Cols) Validate() error {
	return _gdbdc.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006c\u0073")
}

func (_bbgcc ST_SheetViewType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bbgcc.String(), start)
}

func NewCT_Sst() *CT_Sst { _defac := &CT_Sst{}; return _defac }

func (_ffadg *ST_SourceType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gcaeg, _gfdfbg := d.Token()
	if _gfdfbg != nil {
		return _gfdfbg
	}
	if _febbg, _cdgga := _gcaeg.(_b.EndElement); _cdgga && _febbg.Name == start.Name {
		*_ffadg = 1
		return nil
	}
	if _gcbfe, _bcegca := _gcaeg.(_b.CharData); !_bcegca {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcaeg)
	} else {
		switch string(_gcbfe) {
		case "":
			*_ffadg = 0
		case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
			*_ffadg = 1
		case "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c":
			*_ffadg = 2
		case "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e":
			*_ffadg = 3
		case "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f":
			*_ffadg = 4
		}
	}
	_gcaeg, _gfdfbg = d.Token()
	if _gfdfbg != nil {
		return _gfdfbg
	}
	if _bgdcf, _eacaa := _gcaeg.(_b.EndElement); _eacaa && _bgdcf.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcaeg)
}

func (_fddab *CT_Font) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fddab.Name != nil {
		_dfagf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006e\u0061\u006d\u0065"}}
		for _, _bbcca := range _fddab.Name {
			e.EncodeElement(_bbcca, _dfagf)
		}
	}
	if _fddab.Charset != nil {
		_fbcfd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0073\u0065\u0074"}}
		for _, _dgeda := range _fddab.Charset {
			e.EncodeElement(_dgeda, _fbcfd)
		}
	}
	if _fddab.Family != nil {
		_gfcfg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u0061\u006d\u0069\u006cy"}}
		for _, _bfceag := range _fddab.Family {
			e.EncodeElement(_bfceag, _gfcfg)
		}
	}
	if _fddab.B != nil {
		_edfg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _bbdaa := range _fddab.B {
			e.EncodeElement(_bbdaa, _edfg)
		}
	}
	if _fddab.I != nil {
		_ecac := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069"}}
		for _, _bdaec := range _fddab.I {
			e.EncodeElement(_bdaec, _ecac)
		}
	}
	if _fddab.Strike != nil {
		_gaafd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0074\u0072\u0069\u006be"}}
		for _, _adecd := range _fddab.Strike {
			e.EncodeElement(_adecd, _gaafd)
		}
	}
	if _fddab.Outline != nil {
		_bdab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u0075\u0074\u006c\u0069\u006e\u0065"}}
		for _, _cddb := range _fddab.Outline {
			e.EncodeElement(_cddb, _bdab)
		}
	}
	if _fddab.Shadow != nil {
		_dcec := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0068\u0061\u0064\u006fw"}}
		for _, _dgbdf := range _fddab.Shadow {
			e.EncodeElement(_dgbdf, _dcec)
		}
	}
	if _fddab.Condense != nil {
		_fgag := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}}
		for _, _ebedd := range _fddab.Condense {
			e.EncodeElement(_ebedd, _fgag)
		}
	}
	if _fddab.Extend != nil {
		_dfac := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u0065\u006ed"}}
		for _, _fgbac := range _fddab.Extend {
			e.EncodeElement(_fgbac, _dfac)
		}
	}
	if _fddab.Color != nil {
		_ffedg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
		for _, _gfcca := range _fddab.Color {
			e.EncodeElement(_gfcca, _ffedg)
		}
	}
	if _fddab.Sz != nil {
		_efcgd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u007a"}}
		for _, _dcee := range _fddab.Sz {
			e.EncodeElement(_dcee, _efcgd)
		}
	}
	if _fddab.U != nil {
		_affgc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0075"}}
		for _, _bgaca := range _fddab.U {
			e.EncodeElement(_bgaca, _affgc)
		}
	}
	if _fddab.VertAlign != nil {
		_ggcbb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003av\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"}}
		for _, _fcdbc := range _fddab.VertAlign {
			e.EncodeElement(_fcdbc, _ggcbb)
		}
	}
	if _fddab.Scheme != nil {
		_aacgbg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0063\u0068\u0065\u006de"}}
		for _, _cefaa := range _fddab.Scheme {
			e.EncodeElement(_cefaa, _aacgbg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_efce *CT_CacheFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _efce.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_efce.CountAttr)})
	}
	e.EncodeToken(start)
	if _efce.CacheField != nil {
		_becc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064"}}
		for _, _ddfd := range _efce.CacheField {
			e.EncodeElement(_ddfd, _becc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SheetView and its children, prefixing error messages with path
func (_ggdddd *CT_SheetView) ValidateWithPath(path string) error {
	if _cbdfc := _ggdddd.ViewAttr.ValidateWithPath(path + "\u002fV\u0069\u0065\u0077\u0041\u0074\u0074r"); _cbdfc != nil {
		return _cbdfc
	}
	if _ggdddd.Pane != nil {
		if _gabadd := _ggdddd.Pane.ValidateWithPath(path + "\u002f\u0050\u0061n\u0065"); _gabadd != nil {
			return _gabadd
		}
	}
	for _fdacdc, _eadgf := range _ggdddd.Selection {
		if _efbdfc := _eadgf.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u0053\u0065\u006ce\u0063\u0074\u0069\u006f\u006e\u005b\u0025\u0064\u005d", path, _fdacdc)); _efbdfc != nil {
			return _efbdfc
		}
	}
	for _cedfbg, _efgbde := range _ggdddd.PivotSelection {
		if _cbdee := _efgbde.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0050\u0069vo\u0074S\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u005b\u0025\u0064\u005d", path, _cedfbg)); _cbdee != nil {
			return _cbdee
		}
	}
	if _ggdddd.ExtLst != nil {
		if _afcda := _ggdddd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _afcda != nil {
			return _afcda
		}
	}
	return nil
}

func (_agfdeg ST_PivotAreaType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_agfdeg.String(), start)
}

type CT_DataBar struct {

	// Minimum Length
	MinLengthAttr *uint32

	// Maximum Length
	MaxLengthAttr *uint32

	// Show Values
	ShowValueAttr *bool

	// Conditional Format Value Object
	Cfvo []*CT_Cfvo

	// Data Bar Color
	Color *CT_Color
}

func (_fgcgce ST_Qualifier) Validate() error { return _fgcgce.ValidateWithPath("") }

func (_dbfgc ST_CalcMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dbfgc.String(), start)
}

func (_fdadg *CT_pivotTableDefinition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fdadg.Location = NewCT_Location()
	for _, _gebecb := range start.Attr {
		if _gebecb.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_gdafbc, _eceea := _eb.ParseUint(_gebecb.Value, 10, 8)
			if _eceea != nil {
				return _eceea
			}
			_aaeecg := uint8(_gdafbc)
			_fdadg.CreatedVersionAttr = &_aaeecg
			continue
		}
		if _gebecb.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_ebdgb, _acggcg := _eb.ParseUint(_gebecb.Value, 10, 32)
			if _acggcg != nil {
				return _acggcg
			}
			_eeagba := uint32(_ebdgb)
			_fdadg.IndentAttr = &_eeagba
			continue
		}
		if _gebecb.Name.Local == "\u0070i\u0076o\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065" {
			_efdgeb, _eagfbf := _gebecb.Value, error(nil)
			if _eagfbf != nil {
				return _eagfbf
			}
			_fdadg.PivotTableStyleAttr = &_efdgeb
			continue
		}
		if _gebecb.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0052\u006f\u0077" {
			_afabd, _ggegf := _eb.ParseBool(_gebecb.Value)
			if _ggegf != nil {
				return _ggegf
			}
			_fdadg.ShowEmptyRowAttr = &_afabd
			continue
		}
		if _gebecb.Name.Local == "\u0074\u0061\u0067" {
			_dfbad, _gggfdc := _gebecb.Value, error(nil)
			if _gggfdc != nil {
				return _gggfdc
			}
			_fdadg.TagAttr = &_dfbad
			continue
		}
		if _gebecb.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0043\u006f\u006c" {
			_fdebea, _abcfe := _eb.ParseBool(_gebecb.Value)
			if _abcfe != nil {
				return _abcfe
			}
			_fdadg.ShowEmptyColAttr = &_fdebea
			continue
		}
		if _gebecb.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_agaeeb, _gggcd := _eb.ParseUint(_gebecb.Value, 10, 8)
			if _gggcd != nil {
				return _gggcd
			}
			_gbaca := uint8(_agaeeb)
			_fdadg.MinRefreshableVersionAttr = &_gbaca
			continue
		}
		if _gebecb.Name.Local == "s\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072\u0073" {
			_abbdd, _befgea := _eb.ParseBool(_gebecb.Value)
			if _befgea != nil {
				return _befgea
			}
			_fdadg.ShowHeadersAttr = &_abbdd
			continue
		}
		if _gebecb.Name.Local == "\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b\u0054o\u0074\u0061\u006c\u0073" {
			_efeaad, _abdfc := _eb.ParseBool(_gebecb.Value)
			if _abdfc != nil {
				return _abdfc
			}
			_fdadg.AsteriskTotalsAttr = &_efeaad
			continue
		}
		if _gebecb.Name.Local == "\u0063o\u006d\u0070\u0061\u0063\u0074" {
			_ecdbb, _dcccb := _eb.ParseBool(_gebecb.Value)
			if _dcccb != nil {
				return _dcccb
			}
			_fdadg.CompactAttr = &_ecdbb
			continue
		}
		if _gebecb.Name.Local == "\u0065\u0064\u0069\u0074\u0044\u0061\u0074\u0061" {
			_gcfbe, _fedfc := _eb.ParseBool(_gebecb.Value)
			if _fedfc != nil {
				return _fedfc
			}
			_fdadg.EditDataAttr = &_gcfbe
			continue
		}
		if _gebecb.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_dcdab, _gebfe := _eb.ParseBool(_gebecb.Value)
			if _gebfe != nil {
				return _gebfe
			}
			_fdadg.OutlineAttr = &_dcdab
			continue
		}
		if _gebecb.Name.Local == "\u0073\u0068\u006fw\u0043\u0061\u006c\u0063\u004d\u0062\u0072\u0073" {
			_eeabb, _faddeg := _eb.ParseBool(_gebecb.Value)
			if _faddeg != nil {
				return _faddeg
			}
			_fdadg.ShowCalcMbrsAttr = &_eeabb
			continue
		}
		if _gebecb.Name.Local == "o\u0075\u0074\u006c\u0069\u006e\u0065\u0044\u0061\u0074\u0061" {
			_ceabf, _ggfaa := _eb.ParseBool(_gebecb.Value)
			if _ggfaa != nil {
				return _ggfaa
			}
			_fdadg.OutlineDataAttr = &_ceabf
			continue
		}
		if _gebecb.Name.Local == "\u0067\u0072\u0069\u0064\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_cceecf, _gdabg := _eb.ParseBool(_gebecb.Value)
			if _gdabg != nil {
				return _gdabg
			}
			_fdadg.GridDropZonesAttr = &_cceecf
			continue
		}
		if _gebecb.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073t\u0053\u006f\u0072\u0074" {
			_gbagef, _ageae := _eb.ParseBool(_gebecb.Value)
			if _ageae != nil {
				return _ageae
			}
			_fdadg.CustomListSortAttr = &_gbagef
			continue
		}
		if _gebecb.Name.Local == "\u0072\u006f\u0077\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_dfggd, _afceb := _eb.ParseBool(_gebecb.Value)
			if _afceb != nil {
				return _afceb
			}
			_fdadg.RowGrandTotalsAttr = &_dfggd
			continue
		}
		if _gebecb.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_dgfce, _dcbce := _eb.ParseBool(_gebecb.Value)
			if _dcbce != nil {
				return _dcbce
			}
			_fdadg.ApplyWidthHeightFormatsAttr = &_dgfce
			continue
		}
		if _gebecb.Name.Local == "\u0075\u0073\u0065\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067" {
			_ebefc, _fgbfc := _eb.ParseBool(_gebecb.Value)
			if _fgbfc != nil {
				return _fgbfc
			}
			_fdadg.UseAutoFormattingAttr = &_ebefc
			continue
		}
		if _gebecb.Name.Local == "\u0072\u006fw\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_cgedd, _ccafe := _gebecb.Value, error(nil)
			if _ccafe != nil {
				return _ccafe
			}
			_fdadg.RowHeaderCaptionAttr = &_cgedd
			continue
		}
		if _gebecb.Name.Local == "\u0073h\u006f\u0077\u0044\u0072\u0069\u006cl" {
			_adbed, _adbddc := _eb.ParseBool(_gebecb.Value)
			if _adbddc != nil {
				return _adbddc
			}
			_fdadg.ShowDrillAttr = &_adbed
			continue
		}
		if _gebecb.Name.Local == "\u006de\u0072\u0067\u0065\u0049\u0074\u0065m" {
			_edgbaf, _deadea := _eb.ParseBool(_gebecb.Value)
			if _deadea != nil {
				return _deadea
			}
			_fdadg.MergeItemAttr = &_edgbaf
			continue
		}
		if _gebecb.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_daadeg, _cgfdgc := _eb.ParseBool(_gebecb.Value)
			if _cgfdgc != nil {
				return _cgfdgc
			}
			_fdadg.ApplyBorderFormatsAttr = &_daadeg
			continue
		}
		if _gebecb.Name.Local == "\u0076\u0069\u0073u\u0061\u006c\u0054\u006f\u0074\u0061\u006c\u0073" {
			_acggcc, _gccgdf := _eb.ParseBool(_gebecb.Value)
			if _gccgdf != nil {
				return _gccgdf
			}
			_fdadg.VisualTotalsAttr = &_acggcc
			continue
		}
		if _gebecb.Name.Local == "c\u006f\u006d\u0070\u0061\u0063\u0074\u0044\u0061\u0074\u0061" {
			_aagceg, _efdce := _eb.ParseBool(_gebecb.Value)
			if _efdce != nil {
				return _efdce
			}
			_fdadg.CompactDataAttr = &_aagceg
			continue
		}
		if _gebecb.Name.Local == "\u0064\u0061\u0074a\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_faeaec, _ffeaf := _eb.ParseUint(_gebecb.Value, 10, 32)
			if _ffeaf != nil {
				return _ffeaf
			}
			_bgacba := uint32(_faeaec)
			_fdadg.DataPositionAttr = &_bgacba
			continue
		}
		if _gebecb.Name.Local == "m\u0075l\u0074\u0069\u0070\u006c\u0065\u0046\u0069\u0065l\u0064\u0046\u0069\u006cte\u0072\u0073" {
			_efbcf, _ebgbf := _eb.ParseBool(_gebecb.Value)
			if _ebgbf != nil {
				return _ebgbf
			}
			_fdadg.MultipleFieldFiltersAttr = &_efbcf
			continue
		}
		if _gebecb.Name.Local == "\u0070\u0061g\u0065\u004f\u0076e\u0072\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e" {
			_bbace, _gebabg := _eb.ParseBool(_gebecb.Value)
			if _gebabg != nil {
				return _gebabg
			}
			_fdadg.PageOverThenDownAttr = &_bbace
			continue
		}
		if _gebecb.Name.Local == "\u0066\u0069\u0065\u006cdL\u0069\u0073\u0074\u0053\u006f\u0072\u0074\u0041\u0073\u0063\u0065\u006e\u0064\u0069n\u0067" {
			_cfaaf, _cbebc := _eb.ParseBool(_gebecb.Value)
			if _cbebc != nil {
				return _cbebc
			}
			_fdadg.FieldListSortAscendingAttr = &_cfaaf
			continue
		}
		if _gebecb.Name.Local == "s\u0068\u006f\u0077\u004d\u0069\u0073\u0073\u0069\u006e\u0067" {
			_debcf, _fddgca := _eb.ParseBool(_gebecb.Value)
			if _fddgca != nil {
				return _fddgca
			}
			_fdadg.ShowMissingAttr = &_debcf
			continue
		}
		if _gebecb.Name.Local == "\u0066\u0069e\u006c\u0064\u0050r\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_bcddcb, _cfgebg := _eb.ParseBool(_gebecb.Value)
			if _cfgebg != nil {
				return _cfgebg
			}
			_fdadg.FieldPrintTitlesAttr = &_bcddcb
			continue
		}
		if _gebecb.Name.Local == "\u0073\u0068\u006f\u0077Me\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0054\u0069p\u0073" {
			_degbe, _dfebd := _eb.ParseBool(_gebecb.Value)
			if _dfebd != nil {
				return _dfebd
			}
			_fdadg.ShowMemberPropertyTipsAttr = &_degbe
			continue
		}
		if _gebecb.Name.Local == "\u0070a\u0067\u0065\u0053\u0074\u0079\u006ce" {
			_ggged, _aebeag := _gebecb.Value, error(nil)
			if _aebeag != nil {
				return _aebeag
			}
			_fdadg.PageStyleAttr = &_ggged
			continue
		}
		if _gebecb.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_fffdf, _acabbg := _eb.ParseUint(_gebecb.Value, 10, 32)
			if _acabbg != nil {
				return _acabbg
			}
			_abbbdg := uint32(_fffdf)
			_fdadg.AutoFormatIdAttr = &_abbbdg
			continue
		}
		if _gebecb.Name.Local == "\u0073h\u006f\u0077\u0049\u0074\u0065\u006ds" {
			_cebee, _cdedfd := _eb.ParseBool(_gebecb.Value)
			if _cdedfd != nil {
				return _cdedfd
			}
			_fdadg.ShowItemsAttr = &_cebee
			continue
		}
		if _gebecb.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cdbccf, _gfgdg := _eb.ParseBool(_gebecb.Value)
			if _gfgdg != nil {
				return _gfgdg
			}
			_fdadg.ApplyPatternFormatsAttr = &_cdbccf
			continue
		}
		if _gebecb.Name.Local == "e\u006e\u0061\u0062\u006ceF\u0069e\u006c\u0064\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073" {
			_fgdeb, _bgaag := _eb.ParseBool(_gebecb.Value)
			if _bgaag != nil {
				return _bgaag
			}
			_fdadg.EnableFieldPropertiesAttr = &_fgdeb
			continue
		}
		if _gebecb.Name.Local == "\u0073\u0068\u006f\u0077\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0065L\u0061\u0062\u0065\u006c" {
			_gggba, _fdeag := _eb.ParseBool(_gebecb.Value)
			if _fdeag != nil {
				return _fdeag
			}
			_fdadg.ShowMultipleLabelAttr = &_gggba
			continue
		}
		if _gebecb.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_cacce, _baadcf := _eb.ParseBool(_gebecb.Value)
			if _baadcf != nil {
				return _baadcf
			}
			_fdadg.PreserveFormattingAttr = &_cacce
			continue
		}
		if _gebecb.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_eddecc, _bceaee := _eb.ParseBool(_gebecb.Value)
			if _bceaee != nil {
				return _bceaee
			}
			_fdadg.PublishedAttr = &_eddecc
			continue
		}
		if _gebecb.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_dceac, _ffgcfc := _gebecb.Value, error(nil)
			if _ffgcfc != nil {
				return _ffgcfc
			}
			_fdadg.MissingCaptionAttr = &_dceac
			continue
		}
		if _gebecb.Name.Local == "\u0069m\u006d\u0065\u0072\u0073\u0069\u0076e" {
			_cfecg, _gcfde := _eb.ParseBool(_gebecb.Value)
			if _gcfde != nil {
				return _gcfde
			}
			_fdadg.ImmersiveAttr = &_cfecg
			continue
		}
		if _gebecb.Name.Local == "\u0070\u0061\u0067\u0065\u0057\u0072\u0061\u0070" {
			_ddbdde, _ddggfe := _eb.ParseUint(_gebecb.Value, 10, 32)
			if _ddggfe != nil {
				return _ddggfe
			}
			_ggced := uint32(_ddbdde)
			_fdadg.PageWrapAttr = &_ggced
			continue
		}
		if _gebecb.Name.Local == "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074" {
			_eecab, _bfbfbd := _eb.ParseUint(_gebecb.Value, 10, 32)
			if _bfbfbd != nil {
				return _bfbfbd
			}
			_bfacaa := uint32(_eecab)
			_fdadg.ChartFormatAttr = &_bfacaa
			continue
		}
		if _gebecb.Name.Local == "\u0073\u0068o\u0077\u0044\u0061t\u0061\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e" {
			_bgabd, _bbbfg := _eb.ParseBool(_gebecb.Value)
			if _bbbfg != nil {
				return _bbbfg
			}
			_fdadg.ShowDataDropDownAttr = &_bgabd
			continue
		}
		if _gebecb.Name.Local == "\u0063\u006fl\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_aafbf, _eecfb := _gebecb.Value, error(nil)
			if _eecfb != nil {
				return _eecfb
			}
			_fdadg.ColHeaderCaptionAttr = &_aafbf
			continue
		}
		if _gebecb.Name.Local == "\u0073\u0075\u0062\u0074ot\u0061\u006c\u0048\u0069\u0064\u0064\u0065\u006e\u0049\u0074\u0065\u006d\u0073" {
			_gcdbc, _babgbgd := _eb.ParseBool(_gebecb.Value)
			if _babgbgd != nil {
				return _babgbgd
			}
			_fdadg.SubtotalHiddenItemsAttr = &_gcdbc
			continue
		}
		if _gebecb.Name.Local == "\u006d\u0064\u0078\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0069\u0065\u0073" {
			_cfdfd, _dcabdd := _eb.ParseBool(_gebecb.Value)
			if _dcabdd != nil {
				return _dcabdd
			}
			_fdadg.MdxSubqueriesAttr = &_cfdfd
			continue
		}
		if _gebecb.Name.Local == "\u0065\u0072\u0072o\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_dbedd, _bcgfg := _gebecb.Value, error(nil)
			if _bcgfg != nil {
				return _bcgfg
			}
			_fdadg.ErrorCaptionAttr = &_dbedd
			continue
		}
		if _gebecb.Name.Local == "\u0063\u006f\u006c\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_dddad, _aagfb := _eb.ParseBool(_gebecb.Value)
			if _aagfb != nil {
				return _aagfb
			}
			_fdadg.ColGrandTotalsAttr = &_dddad
			continue
		}
		if _gebecb.Name.Local == "\u0070\u0072\u0069\u006e\u0074\u0044\u0072\u0069\u006c\u006c" {
			_aabfe, _gfdca := _eb.ParseBool(_gebecb.Value)
			if _gfdca != nil {
				return _gfdca
			}
			_fdadg.PrintDrillAttr = &_aabfe
			continue
		}
		if _gebecb.Name.Local == "\u0069t\u0065m\u0050\u0072\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_eaacf, _dgabc := _eb.ParseBool(_gebecb.Value)
			if _dgabc != nil {
				return _dgabc
			}
			_fdadg.ItemPrintTitlesAttr = &_eaacf
			continue
		}
		if _gebecb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cefad, _eaaafc := _gebecb.Value, error(nil)
			if _eaaafc != nil {
				return _eaaafc
			}
			_fdadg.NameAttr = _cefad
			continue
		}
		if _gebecb.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_fbbcg, _abcage := _eb.ParseBool(_gebecb.Value)
			if _abcage != nil {
				return _abcage
			}
			_fdadg.ShowDropZonesAttr = &_fbbcg
			continue
		}
		if _gebecb.Name.Local == "\u0073\u0068\u006fw\u0044\u0061\u0074\u0061\u0054\u0069\u0070\u0073" {
			_gfbfb, _gddaad := _eb.ParseBool(_gebecb.Value)
			if _gddaad != nil {
				return _gddaad
			}
			_fdadg.ShowDataTipsAttr = &_gfbfb
			continue
		}
		if _gebecb.Name.Local == "\u0076\u0061\u0063a\u0074\u0065\u0064\u0053\u0074\u0079\u006c\u0065" {
			_eafbb, _ebccd := _gebecb.Value, error(nil)
			if _ebccd != nil {
				return _ebccd
			}
			_fdadg.VacatedStyleAttr = &_eafbb
			continue
		}
		if _gebecb.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0054\u006f\u0074\u0061\u006c\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_dacgba, _bdeac := _gebecb.Value, error(nil)
			if _bdeac != nil {
				return _bdeac
			}
			_fdadg.GrandTotalCaptionAttr = &_dacgba
			continue
		}
		if _gebecb.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_fcbgeg, _egbeda := _eb.ParseBool(_gebecb.Value)
			if _egbeda != nil {
				return _egbeda
			}
			_fdadg.ApplyNumberFormatsAttr = &_fcbgeg
			continue
		}
		if _gebecb.Name.Local == "e\u006e\u0061\u0062\u006c\u0065\u0044\u0072\u0069\u006c\u006c" {
			_cbffce, _ageffa := _eb.ParseBool(_gebecb.Value)
			if _ageffa != nil {
				return _ageffa
			}
			_fdadg.EnableDrillAttr = &_cbffce
			continue
		}
		if _gebecb.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_dabbcb, _gadgeb := _eb.ParseBool(_gebecb.Value)
			if _gadgeb != nil {
				return _gadgeb
			}
			_fdadg.ApplyFontFormatsAttr = &_dabbcb
			continue
		}
		if _gebecb.Name.Local == "\u0064\u0069s\u0061\u0062\u006ce\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074" {
			_agdfc, _ecagb := _eb.ParseBool(_gebecb.Value)
			if _ecagb != nil {
				return _ecagb
			}
			_fdadg.DisableFieldListAttr = &_agdfc
			continue
		}
		if _gebecb.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ceabg, _cbeab := _eb.ParseBool(_gebecb.Value)
			if _cbeab != nil {
				return _cbeab
			}
			_fdadg.ApplyAlignmentFormatsAttr = &_ceabg
			continue
		}
		if _gebecb.Name.Local == "\u0064\u0061\u0074\u0061\u004f\u006e\u0052\u006f\u0077\u0073" {
			_gcdca, _afadac := _eb.ParseBool(_gebecb.Value)
			if _afadac != nil {
				return _afadac
			}
			_fdadg.DataOnRowsAttr = &_gcdca
			continue
		}
		if _gebecb.Name.Local == "d\u0061\u0074\u0061\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_gbabga, _cdefa := _gebecb.Value, error(nil)
			if _cdefa != nil {
				return _cdefa
			}
			_fdadg.DataCaptionAttr = _gbabga
			continue
		}
		if _gebecb.Name.Local == "\u0073h\u006f\u0077\u0045\u0072\u0072\u006fr" {
			_dddgfd, _cfdce := _eb.ParseBool(_gebecb.Value)
			if _cfdce != nil {
				return _cfdce
			}
			_fdadg.ShowErrorAttr = &_dddgfd
			continue
		}
		if _gebecb.Name.Local == "\u0063a\u0063\u0068\u0065\u0049\u0064" {
			_fbefgd, _acaab := _eb.ParseUint(_gebecb.Value, 10, 32)
			if _acaab != nil {
				return _acaab
			}
			_fdadg.CacheIdAttr = uint32(_fbefgd)
			continue
		}
		if _gebecb.Name.Local == "\u0065\u006e\u0061b\u006c\u0065\u0057\u0069\u007a\u0061\u0072\u0064" {
			_fcdcd, _bdbfa := _eb.ParseBool(_gebecb.Value)
			if _bdbfa != nil {
				return _bdbfa
			}
			_fdadg.EnableWizardAttr = &_fcdcd
			continue
		}
		if _gebecb.Name.Local == "\u0075\u0070\u0064\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_fgbeb, _dbcge := _eb.ParseUint(_gebecb.Value, 10, 8)
			if _dbcge != nil {
				return _dbcge
			}
			_eddfg := uint8(_fgbeb)
			_fdadg.UpdatedVersionAttr = &_eddfg
			continue
		}
	}
_gedec:
	for {
		_adeegg, _ecfagc := d.Token()
		if _ecfagc != nil {
			return _ecfagc
		}
		switch _gdddae := _adeegg.(type) {
		case _b.StartElement:
			switch _gdddae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}:
				if _eggbd := d.DecodeElement(_fdadg.Location, &_gdddae); _eggbd != nil {
					return _eggbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_fdadg.PivotFields = NewCT_PivotFields()
				if _geabg := d.DecodeElement(_fdadg.PivotFields, &_gdddae); _geabg != nil {
					return _geabg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}:
				_fdadg.RowFields = NewCT_RowFields()
				if _ebcdce := d.DecodeElement(_fdadg.RowFields, &_gdddae); _ebcdce != nil {
					return _ebcdce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}:
				_fdadg.RowItems = NewCT_rowItems()
				if _afegg := d.DecodeElement(_fdadg.RowItems, &_gdddae); _afegg != nil {
					return _afegg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}:
				_fdadg.ColFields = NewCT_ColFields()
				if _efeffb := d.DecodeElement(_fdadg.ColFields, &_gdddae); _efeffb != nil {
					return _efeffb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}:
				_fdadg.ColItems = NewCT_colItems()
				if _effge := d.DecodeElement(_fdadg.ColItems, &_gdddae); _effge != nil {
					return _effge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_fdadg.PageFields = NewCT_PageFields()
				if _acfbe := d.DecodeElement(_fdadg.PageFields, &_gdddae); _acfbe != nil {
					return _acfbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_fdadg.DataFields = NewCT_DataFields()
				if _ccaga := d.DecodeElement(_fdadg.DataFields, &_gdddae); _ccaga != nil {
					return _ccaga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}:
				_fdadg.Formats = NewCT_Formats()
				if _cfef := d.DecodeElement(_fdadg.Formats, &_gdddae); _cfef != nil {
					return _cfef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}:
				_fdadg.ConditionalFormats = NewCT_ConditionalFormats()
				if _fbdgad := d.DecodeElement(_fdadg.ConditionalFormats, &_gdddae); _fbdgad != nil {
					return _fbdgad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}:
				_fdadg.ChartFormats = NewCT_ChartFormats()
				if _eegbe := d.DecodeElement(_fdadg.ChartFormats, &_gdddae); _eegbe != nil {
					return _eegbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_fdadg.PivotHierarchies = NewCT_PivotHierarchies()
				if _eaaba := d.DecodeElement(_fdadg.PivotHierarchies, &_gdddae); _eaaba != nil {
					return _eaaba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}:
				_fdadg.PivotTableStyleInfo = NewCT_PivotTableStyle()
				if _deddc := d.DecodeElement(_fdadg.PivotTableStyleInfo, &_gdddae); _deddc != nil {
					return _deddc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
				_fdadg.Filters = NewCT_PivotFilters()
				if _dedbe := d.DecodeElement(_fdadg.Filters, &_gdddae); _dedbe != nil {
					return _dedbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_fdadg.RowHierarchiesUsage = NewCT_RowHierarchiesUsage()
				if _ecbeba := d.DecodeElement(_fdadg.RowHierarchiesUsage, &_gdddae); _ecbeba != nil {
					return _ecbeba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_fdadg.ColHierarchiesUsage = NewCT_ColHierarchiesUsage()
				if _decfg := d.DecodeElement(_fdadg.ColHierarchiesUsage, &_gdddae); _decfg != nil {
					return _decfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdadg.ExtLst = NewCT_ExtensionList()
				if _gffcgg := d.DecodeElement(_fdadg.ExtLst, &_gdddae); _gffcgg != nil {
					return _gffcgg
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006ce\u0044\u0065\u0066\u0069\u006e\u0069t\u0069\u006f\u006e \u0025\u0076", _gdddae.Name)
				if _fcaaee := d.Skip(); _fcaaee != nil {
					return _fcaaee
				}
			}
		case _b.EndElement:
			break _gedec
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_PivotFilterTypeUnset                     ST_PivotFilterType = 0
	ST_PivotFilterTypeUnknown                   ST_PivotFilterType = 1
	ST_PivotFilterTypeCount                     ST_PivotFilterType = 2
	ST_PivotFilterTypePercent                   ST_PivotFilterType = 3
	ST_PivotFilterTypeSum                       ST_PivotFilterType = 4
	ST_PivotFilterTypeCaptionEqual              ST_PivotFilterType = 5
	ST_PivotFilterTypeCaptionNotEqual           ST_PivotFilterType = 6
	ST_PivotFilterTypeCaptionBeginsWith         ST_PivotFilterType = 7
	ST_PivotFilterTypeCaptionNotBeginsWith      ST_PivotFilterType = 8
	ST_PivotFilterTypeCaptionEndsWith           ST_PivotFilterType = 9
	ST_PivotFilterTypeCaptionNotEndsWith        ST_PivotFilterType = 10
	ST_PivotFilterTypeCaptionContains           ST_PivotFilterType = 11
	ST_PivotFilterTypeCaptionNotContains        ST_PivotFilterType = 12
	ST_PivotFilterTypeCaptionGreaterThan        ST_PivotFilterType = 13
	ST_PivotFilterTypeCaptionGreaterThanOrEqual ST_PivotFilterType = 14
	ST_PivotFilterTypeCaptionLessThan           ST_PivotFilterType = 15
	ST_PivotFilterTypeCaptionLessThanOrEqual    ST_PivotFilterType = 16
	ST_PivotFilterTypeCaptionBetween            ST_PivotFilterType = 17
	ST_PivotFilterTypeCaptionNotBetween         ST_PivotFilterType = 18
	ST_PivotFilterTypeValueEqual                ST_PivotFilterType = 19
	ST_PivotFilterTypeValueNotEqual             ST_PivotFilterType = 20
	ST_PivotFilterTypeValueGreaterThan          ST_PivotFilterType = 21
	ST_PivotFilterTypeValueGreaterThanOrEqual   ST_PivotFilterType = 22
	ST_PivotFilterTypeValueLessThan             ST_PivotFilterType = 23
	ST_PivotFilterTypeValueLessThanOrEqual      ST_PivotFilterType = 24
	ST_PivotFilterTypeValueBetween              ST_PivotFilterType = 25
	ST_PivotFilterTypeValueNotBetween           ST_PivotFilterType = 26
	ST_PivotFilterTypeDateEqual                 ST_PivotFilterType = 27
	ST_PivotFilterTypeDateNotEqual              ST_PivotFilterType = 28
	ST_PivotFilterTypeDateOlderThan             ST_PivotFilterType = 29
	ST_PivotFilterTypeDateOlderThanOrEqual      ST_PivotFilterType = 30
	ST_PivotFilterTypeDateNewerThan             ST_PivotFilterType = 31
	ST_PivotFilterTypeDateNewerThanOrEqual      ST_PivotFilterType = 32
	ST_PivotFilterTypeDateBetween               ST_PivotFilterType = 33
	ST_PivotFilterTypeDateNotBetween            ST_PivotFilterType = 34
	ST_PivotFilterTypeTomorrow                  ST_PivotFilterType = 35
	ST_PivotFilterTypeToday                     ST_PivotFilterType = 36
	ST_PivotFilterTypeYesterday                 ST_PivotFilterType = 37
	ST_PivotFilterTypeNextWeek                  ST_PivotFilterType = 38
	ST_PivotFilterTypeThisWeek                  ST_PivotFilterType = 39
	ST_PivotFilterTypeLastWeek                  ST_PivotFilterType = 40
	ST_PivotFilterTypeNextMonth                 ST_PivotFilterType = 41
	ST_PivotFilterTypeThisMonth                 ST_PivotFilterType = 42
	ST_PivotFilterTypeLastMonth                 ST_PivotFilterType = 43
	ST_PivotFilterTypeNextQuarter               ST_PivotFilterType = 44
	ST_PivotFilterTypeThisQuarter               ST_PivotFilterType = 45
	ST_PivotFilterTypeLastQuarter               ST_PivotFilterType = 46
	ST_PivotFilterTypeNextYear                  ST_PivotFilterType = 47
	ST_PivotFilterTypeThisYear                  ST_PivotFilterType = 48
	ST_PivotFilterTypeLastYear                  ST_PivotFilterType = 49
	ST_PivotFilterTypeYearToDate                ST_PivotFilterType = 50
	ST_PivotFilterTypeQ1                        ST_PivotFilterType = 51
	ST_PivotFilterTypeQ2                        ST_PivotFilterType = 52
	ST_PivotFilterTypeQ3                        ST_PivotFilterType = 53
	ST_PivotFilterTypeQ4                        ST_PivotFilterType = 54
	ST_PivotFilterTypeM1                        ST_PivotFilterType = 55
	ST_PivotFilterTypeM2                        ST_PivotFilterType = 56
	ST_PivotFilterTypeM3                        ST_PivotFilterType = 57
	ST_PivotFilterTypeM4                        ST_PivotFilterType = 58
	ST_PivotFilterTypeM5                        ST_PivotFilterType = 59
	ST_PivotFilterTypeM6                        ST_PivotFilterType = 60
	ST_PivotFilterTypeM7                        ST_PivotFilterType = 61
	ST_PivotFilterTypeM8                        ST_PivotFilterType = 62
	ST_PivotFilterTypeM9                        ST_PivotFilterType = 63
	ST_PivotFilterTypeM10                       ST_PivotFilterType = 64
	ST_PivotFilterTypeM11                       ST_PivotFilterType = 65
	ST_PivotFilterTypeM12                       ST_PivotFilterType = 66
)

// ValidateWithPath validates the CT_ChartsheetView and its children, prefixing error messages with path
func (_edgc *CT_ChartsheetView) ValidateWithPath(path string) error {
	if _edgc.ExtLst != nil {
		if _dafa := _edgc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dafa != nil {
			return _dafa
		}
	}
	return nil
}

func (_fedbde *ST_CellComments) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fedbde = 0
	case "\u006e\u006f\u006e\u0065":
		*_fedbde = 1
	case "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064":
		*_fedbde = 2
	case "\u0061\u0074\u0045n\u0064":
		*_fedbde = 3
	}
	return nil
}

func (_ddgag *EG_ExtensionList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ddgag.Ext != nil {
		_efdabe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065\u0078\u0074"}}
		for _, _fbeacc := range _ddgag.Ext {
			e.EncodeElement(_fbeacc, _efdabe)
		}
	}
	return nil
}

type CT_Drawing struct{ IdAttr string }

type CT_MdxMetadata struct {

	// MDX Metadata Record Count
	CountAttr *uint32

	// MDX Metadata Record
	Mdx []*CT_Mdx
}

func (_bcdfgga *ST_PhoneticType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fabca, _efbdg := d.Token()
	if _efbdg != nil {
		return _efbdg
	}
	if _accceg, _dgdfe := _fabca.(_b.EndElement); _dgdfe && _accceg.Name == start.Name {
		*_bcdfgga = 1
		return nil
	}
	if _cbgdc, _ccgce := _fabca.(_b.CharData); !_ccgce {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fabca)
	} else {
		switch string(_cbgdc) {
		case "":
			*_bcdfgga = 0
		case "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
			*_bcdfgga = 1
		case "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
			*_bcdfgga = 2
		case "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
			*_bcdfgga = 3
		case "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e":
			*_bcdfgga = 4
		}
	}
	_fabca, _efbdg = d.Token()
	if _efbdg != nil {
		return _efbdg
	}
	if _fdfed, _afdcce := _fabca.(_b.EndElement); _afdcce && _fdfed.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fabca)
}

func (_cbcef *CT_MetadataStrings) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbcef.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_cbcef.CountAttr)})
	}
	e.EncodeToken(start)
	_gbeeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073"}}
	for _, _gcbg := range _cbcef.S {
		e.EncodeElement(_gcbg, _gbeeb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Rst and its children
func (_bbbbgc *CT_Rst) Validate() error {
	return _bbbbgc.ValidateWithPath("\u0043\u0054\u005f\u0052\u0073\u0074")
}

func (_bfgdc *ST_PaneState) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bfgdc = 0
	case "\u0073\u0070\u006ci\u0074":
		*_bfgdc = 1
	case "\u0066\u0072\u006f\u007a\u0065\u006e":
		*_bfgdc = 2
	case "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074":
		*_bfgdc = 3
	}
	return nil
}

func (_gfbeg *CT_PCDKPIs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfbeg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_gfbeg.CountAttr)})
	}
	e.EncodeToken(start)
	if _gfbeg.Kpi != nil {
		_ccgg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006b\u0070\u0069"}}
		for _, _gafga := range _gfbeg.Kpi {
			e.EncodeElement(_gafga, _ccgg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bfdeb ST_RevisionAction) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_badfg := _b.Attr{}
	_badfg.Name = name
	switch _bfdeb {
	case ST_RevisionActionUnset:
		_badfg.Value = ""
	case ST_RevisionActionAdd:
		_badfg.Value = "\u0061\u0064\u0064"
	case ST_RevisionActionDelete:
		_badfg.Value = "\u0064\u0065\u006c\u0065\u0074\u0065"
	}
	return _badfg, nil
}

// ValidateWithPath validates the CT_TableStyleElement and its children, prefixing error messages with path
func (_eecdg *CT_TableStyleElement) ValidateWithPath(path string) error {
	if _eecdg.TypeAttr == ST_TableStyleTypeUnset {
		return _ec.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _afbdg := _eecdg.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _afbdg != nil {
		return _afbdg
	}
	return nil
}

func (_bgacgd *CT_SmartTagTypes) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bgbee:
	for {
		_ggccd, _geged := d.Token()
		if _geged != nil {
			return _geged
		}
		switch _gafeb := _ggccd.(type) {
		case _b.StartElement:
			switch _gafeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065"}:
				_daaaf := NewCT_SmartTagType()
				if _dfgee := d.DecodeElement(_daaaf, &_gafeb); _dfgee != nil {
					return _dfgee
				}
				_bgacgd.SmartTagType = append(_bgacgd.SmartTagType, _daaaf)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073\u0020\u0025v", _gafeb.Name)
				if _dbgfbf := d.Skip(); _dbgfbf != nil {
					return _dbgfbf
				}
			}
		case _b.EndElement:
			break _bgbee
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_IgnoredError and its children
func (_gfbfg *CT_IgnoredError) Validate() error {
	return _gfbfg.ValidateWithPath("\u0043T\u005fI\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072")
}

// ValidateWithPath validates the CT_CustomChartsheetViews and its children, prefixing error messages with path
func (_fcbaf *CT_CustomChartsheetViews) ValidateWithPath(path string) error {
	for _baga, _aaege := range _fcbaf.CustomSheetView {
		if _cgeeg := _aaege.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u005b\u0025d\u005d", path, _baga)); _cgeeg != nil {
			return _cgeeg
		}
	}
	return nil
}

func NewCT_PivotHierarchy() *CT_PivotHierarchy { _adcbb := &CT_PivotHierarchy{}; return _adcbb }

func (_becf *CT_XmlPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fecc := range start.Attr {
		if _fecc.Name.Local == "\u006d\u0061\u0070I\u0064" {
			_faefaf, _gfgfbf := _eb.ParseUint(_fecc.Value, 10, 32)
			if _gfgfbf != nil {
				return _gfgfbf
			}
			_becf.MapIdAttr = uint32(_faefaf)
			continue
		}
		if _fecc.Name.Local == "\u0078\u0070\u0061t\u0068" {
			_afgaa, _gaebb := _fecc.Value, error(nil)
			if _gaebb != nil {
				return _gaebb
			}
			_becf.XpathAttr = _afgaa
			continue
		}
		if _fecc.Name.Local == "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065" {
			_ddaab, _bbcaa := _fecc.Value, error(nil)
			if _bbcaa != nil {
				return _bbcaa
			}
			_becf.XmlDataTypeAttr = _ddaab
			continue
		}
	}
_adbfc:
	for {
		_dbceb, _dadedg := d.Token()
		if _dadedg != nil {
			return _dadedg
		}
		switch _eeffcc := _dbceb.(type) {
		case _b.StartElement:
			switch _eeffcc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_becf.ExtLst = NewCT_ExtensionList()
				if _aeaca := d.DecodeElement(_becf.ExtLst, &_eeffcc); _aeaca != nil {
					return _aeaca
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0058\u006d\u006c\u0050\u0072\u0020\u0025\u0076", _eeffcc.Name)
				if _bcffd := d.Skip(); _bcffd != nil {
					return _bcffd
				}
			}
		case _b.EndElement:
			break _adbfc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Members and its children, prefixing error messages with path
func (_gbga *CT_Members) ValidateWithPath(path string) error {
	for _eggga, _gdcfb := range _gbga.Member {
		if _abdfe := _gdcfb.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004d\u0065\u006d\u0062\u0065\u0072\u005b\u0025\u0064\u005d", path, _eggga)); _abdfe != nil {
			return _abdfe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColHierarchiesUsage and its children, prefixing error messages with path
func (_cgdaba *CT_ColHierarchiesUsage) ValidateWithPath(path string) error {
	for _afdac, _ffeab := range _cgdaba.ColHierarchyUsage {
		if _bddf := _ffeab.ValidateWithPath(_ec.Sprintf("\u0025s\u002f\u0043\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0079\u0055\u0073\u0061\u0067\u0065\u005b\u0025\u0064\u005d", path, _afdac)); _bddf != nil {
			return _bddf
		}
	}
	return nil
}

func NewCT_ColorScale() *CT_ColorScale { _ebbe := &CT_ColorScale{}; return _ebbe }

func (_gbfdc *CT_MetadataStringIndex) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbegb := range start.Attr {
		if _fbegb.Name.Local == "\u0078" {
			_dgcb, _befafa := _eb.ParseUint(_fbegb.Value, 10, 32)
			if _befafa != nil {
				return _befafa
			}
			_gbfdc.XAttr = uint32(_dgcb)
			continue
		}
		if _fbegb.Name.Local == "\u0073" {
			_cbdeb, _geegg := _eb.ParseBool(_fbegb.Value)
			if _geegg != nil {
				return _geegg
			}
			_gbfdc.SAttr = &_cbdeb
			continue
		}
	}
	for {
		_dbegb, _bagge := d.Token()
		if _bagge != nil {
			return _ec.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u0074a\u0064a\u0074a\u0053t\u0072\u0069\u006e\u0067\u0049\u006e\u0064\u0065\u0078\u003a\u0020\u0025\u0073", _bagge)
		}
		if _babag, _gefd := _dbegb.(_b.EndElement); _gefd && _babag.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dcdee *CT_Metadata) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dcdee.MetadataTypes != nil {
		_fdeeed := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u006d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}}
		e.EncodeElement(_dcdee.MetadataTypes, _fdeeed)
	}
	if _dcdee.MetadataStrings != nil {
		_adbc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003am\u0065\u0074\u0061\u0064\u0061t\u0061\u0053t\u0072\u0069\u006e\u0067\u0073"}}
		e.EncodeElement(_dcdee.MetadataStrings, _adbc)
	}
	if _dcdee.MdxMetadata != nil {
		_cffde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0064\u0078\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}}
		e.EncodeElement(_dcdee.MdxMetadata, _cffde)
	}
	if _dcdee.FutureMetadata != nil {
		_bbeae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}}
		for _, _fccdd := range _dcdee.FutureMetadata {
			e.EncodeElement(_fccdd, _bbeae)
		}
	}
	if _dcdee.CellMetadata != nil {
		_aggce := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0065\u006c\u006c\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}}
		e.EncodeElement(_dcdee.CellMetadata, _aggce)
	}
	if _dcdee.ValueMetadata != nil {
		_dagfdd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0076\u0061\u006cu\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}}
		e.EncodeElement(_dcdee.ValueMetadata, _dagfdd)
	}
	if _dcdee.ExtLst != nil {
		_cgbabf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dcdee.ExtLst, _cgbabf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_eefag ST_ItemType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_eefag.String(), start)
}

type ST_VolValueType byte

func (_cb *CT_Authors) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gdb:
	for {
		_gaa, _fd := d.Token()
		if _fd != nil {
			return _fd
		}
		switch _bdf := _gaa.(type) {
		case _b.StartElement:
			switch _bdf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u0068\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u0068\u006f\u0072"}:
				var _dfa string
				if _gg := d.DecodeElement(&_dfa, &_bdf); _gg != nil {
					return _gg
				}
				_cb.Author = append(_cb.Author, _dfa)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fA\u0075\u0074\u0068\u006f\u0072\u0073\u0020\u0025\u0076", _bdf.Name)
				if _fc := d.Skip(); _fc != nil {
					return _fc
				}
			}
		case _b.EndElement:
			break _gdb
		case _b.CharData:
		}
	}
	return nil
}

type CT_Fill struct {

	// Pattern
	PatternFill *CT_PatternFill

	// Gradient
	GradientFill *CT_GradientFill
}

func (_agcced ST_Scope) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_agcced.String(), start)
}

// Validate validates the CT_CalculatedItem and its children
func (_fce *CT_CalculatedItem) Validate() error {
	return _fce.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d")
}

// Validate validates the CT_Stylesheet and its children
func (_aeaggf *CT_Stylesheet) Validate() error {
	return _aeaggf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u0073\u0068\u0065\u0065\u0074")
}

// Validate validates the CT_HierarchyUsage and its children
func (_ccgcc *CT_HierarchyUsage) Validate() error {
	return _ccgcc.ValidateWithPath("\u0043\u0054\u005f\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065")
}

func NewCT_MetadataBlock() *CT_MetadataBlock { _adebf := &CT_MetadataBlock{}; return _adebf }

func (_ffgdd *CT_Format) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ffgdd.ActionAttr != ST_FormatActionUnset {
		_cbbae, _gceae := _ffgdd.ActionAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
		if _gceae != nil {
			return _gceae
		}
		start.Attr = append(start.Attr, _cbbae)
	}
	if _ffgdd.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_ffgdd.DxfIdAttr)})
	}
	e.EncodeToken(start)
	_bgfdf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_ffgdd.PivotArea, _bgfdf)
	if _ffgdd.ExtLst != nil {
		_cddag := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ffgdd.ExtLst, _cddag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_efbeb *CT_LegacyDrawing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _efbeb.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cagae *CT_Set) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cagae.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_cagae.CountAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006da\u0078\u0052\u0061\u006e\u006b"}, Value: _ec.Sprintf("\u0025\u0076", _cagae.MaxRankAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0074\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", _cagae.SetDefinitionAttr)})
	if _cagae.SortTypeAttr != ST_SortTypeUnset {
		_dbggef, _dacgb := _cagae.SortTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065"})
		if _dacgb != nil {
			return _dacgb
		}
		start.Attr = append(start.Attr, _dbggef)
	}
	if _cagae.QueryFailedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "q\u0075\u0065\u0072\u0079\u0046\u0061\u0069\u006c\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cagae.QueryFailedAttr))})
	}
	e.EncodeToken(start)
	if _cagae.Tpls != nil {
		_dceea := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _bcfac := range _cagae.Tpls {
			e.EncodeElement(_bcfac, _dceea)
		}
	}
	if _cagae.SortByTuple != nil {
		_gaabcg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u006f\u0072\u0074\u0042\u0079T\u0075\u0070\u006c\u0065"}}
		e.EncodeElement(_cagae.SortByTuple, _gaabcg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_RPrElt() *CT_RPrElt { _cacba := &CT_RPrElt{}; return _cacba }

type CT_Parameters struct {

	// Parameter Count
	CountAttr *uint32

	// Parameter Properties
	Parameter []*CT_Parameter
}

const (
	ST_FormulaExpressionUnset        ST_FormulaExpression = 0
	ST_FormulaExpressionRef          ST_FormulaExpression = 1
	ST_FormulaExpressionRefError     ST_FormulaExpression = 2
	ST_FormulaExpressionArea         ST_FormulaExpression = 3
	ST_FormulaExpressionAreaError    ST_FormulaExpression = 4
	ST_FormulaExpressionComputedArea ST_FormulaExpression = 5
)

func (_afcgf *CT_GroupMembers) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bfcgeg := range start.Attr {
		if _bfcgeg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bdga, _eaaac := _eb.ParseUint(_bfcgeg.Value, 10, 32)
			if _eaaac != nil {
				return _eaaac
			}
			_bbeff := uint32(_bdga)
			_afcgf.CountAttr = &_bbeff
			continue
		}
	}
_eecdf:
	for {
		_adbeb, _geaab := d.Token()
		if _geaab != nil {
			return _geaab
		}
		switch _dgeb := _adbeb.(type) {
		case _b.StartElement:
			switch _dgeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072"}:
				_agefg := NewCT_GroupMember()
				if _dbaaf := d.DecodeElement(_agefg, &_dgeb); _dbaaf != nil {
					return _dbaaf
				}
				_afcgf.GroupMember = append(_afcgf.GroupMember, _agefg)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006fu\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073\u0020\u0025\u0076", _dgeb.Name)
				if _baffef := d.Skip(); _baffef != nil {
					return _baffef
				}
			}
		case _b.EndElement:
			break _eecdf
		case _b.CharData:
		}
	}
	return nil
}

func (_ceaaa *CT_FunctionGroups) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ceaaa.BuiltInGroupCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0075\u0069\u006c\u0074\u0049\u006e\u0047\u0072\u006f\u0075\u0070C\u006f\u0075\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ceaaa.BuiltInGroupCountAttr)})
	}
	e.EncodeToken(start)
	if _ceaaa.FunctionGroup != nil {
		_eegag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0066\u0075\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070"}}
		for _, _ccaaf := range _ceaaa.FunctionGroup {
			e.EncodeElement(_ccaaf, _eegag)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_dda *CT_CfRule) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dda.TypeAttr != ST_CfTypeUnset {
		_bdbg, _fbgb := _dda.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _fbgb != nil {
			return _fbgb
		}
		start.Attr = append(start.Attr, _bdbg)
	}
	if _dda.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_dda.DxfIdAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079"}, Value: _ec.Sprintf("\u0025\u0076", _dda.PriorityAttr)})
	if _dda.StopIfTrueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u006f\u0070\u0049\u0066\u0054\u0072\u0075\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dda.StopIfTrueAttr))})
	}
	if _dda.AboveAverageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dda.AboveAverageAttr))})
	}
	if _dda.PercentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070e\u0072\u0063\u0065\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dda.PercentAttr))})
	}
	if _dda.BottomAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dda.BottomAttr))})
	}
	if _dda.OperatorAttr != ST_ConditionalFormattingOperatorUnset {
		_ddd, _egae := _dda.OperatorAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072"})
		if _egae != nil {
			return _egae
		}
		start.Attr = append(start.Attr, _ddd)
	}
	if _dda.TextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0065\u0078\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_dda.TextAttr)})
	}
	if _dda.TimePeriodAttr != ST_TimePeriodUnset {
		_faegb, _cgfg := _dda.TimePeriodAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064"})
		if _cgfg != nil {
			return _cgfg
		}
		start.Attr = append(start.Attr, _faegb)
	}
	if _dda.RankAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061\u006e\u006b"}, Value: _ec.Sprintf("\u0025\u0076", *_dda.RankAttr)})
	}
	if _dda.StdDevAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0064\u0044\u0065\u0076"}, Value: _ec.Sprintf("\u0025\u0076", *_dda.StdDevAttr)})
	}
	if _dda.EqualAverageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0071\u0075a\u006c\u0041\u0076\u0065\u0072\u0061\u0067\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dda.EqualAverageAttr))})
	}
	e.EncodeToken(start)
	if _dda.Formula != nil {
		_eacg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061"}}
		for _, _geab := range _dda.Formula {
			e.EncodeElement(_geab, _eacg)
		}
	}
	if _dda.ColorScale != nil {
		_cdee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"}}
		e.EncodeElement(_dda.ColorScale, _cdee)
	}
	if _dda.DataBar != nil {
		_dbfc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0042\u0061\u0072"}}
		e.EncodeElement(_dda.DataBar, _dbfc)
	}
	if _dda.IconSet != nil {
		_fega := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069\u0063\u006f\u006e\u0053\u0065\u0074"}}
		e.EncodeElement(_dda.IconSet, _fega)
	}
	if _dda.ExtLst != nil {
		_bbac := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dda.ExtLst, _bbac)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_IconSetTypeUnset           ST_IconSetType = 0
	ST_IconSetType3Arrows         ST_IconSetType = 1
	ST_IconSetType3ArrowsGray     ST_IconSetType = 2
	ST_IconSetType3Flags          ST_IconSetType = 3
	ST_IconSetType3TrafficLights1 ST_IconSetType = 4
	ST_IconSetType3TrafficLights2 ST_IconSetType = 5
	ST_IconSetType3Signs          ST_IconSetType = 6
	ST_IconSetType3Symbols        ST_IconSetType = 7
	ST_IconSetType3Symbols2       ST_IconSetType = 8
	ST_IconSetType4Arrows         ST_IconSetType = 9
	ST_IconSetType4ArrowsGray     ST_IconSetType = 10
	ST_IconSetType4RedToBlack     ST_IconSetType = 11
	ST_IconSetType4Rating         ST_IconSetType = 12
	ST_IconSetType4TrafficLights  ST_IconSetType = 13
	ST_IconSetType5Arrows         ST_IconSetType = 14
	ST_IconSetType5ArrowsGray     ST_IconSetType = 15
	ST_IconSetType5Rating         ST_IconSetType = 16
	ST_IconSetType5Quarters       ST_IconSetType = 17
)

func (_dagdg *CT_VolMain) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _facbfe := range start.Attr {
		if _facbfe.Name.Local == "\u0066\u0069\u0072s\u0074" {
			_ecdgfa, _bdffb := _facbfe.Value, error(nil)
			if _bdffb != nil {
				return _bdffb
			}
			_dagdg.FirstAttr = _ecdgfa
			continue
		}
	}
_eaced:
	for {
		_aecbad, _eecce := d.Token()
		if _eecce != nil {
			return _eecce
		}
		switch _bfadcg := _aecbad.(type) {
		case _b.StartElement:
			switch _bfadcg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070"}:
				_bbdbg := NewCT_VolTopic()
				if _abcce := d.DecodeElement(_bbdbg, &_bfadcg); _abcce != nil {
					return _abcce
				}
				_dagdg.Tp = append(_dagdg.Tp, _bbdbg)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fV\u006f\u006c\u004d\u0061\u0069\u006e\u0020\u0025\u0076", _bfadcg.Name)
				if _cffba := d.Skip(); _cffba != nil {
					return _cffba
				}
			}
		case _b.EndElement:
			break _eaced
		case _b.CharData:
		}
	}
	return nil
}

type CT_DefinedNames struct {

	// Defined Name
	DefinedName []*CT_DefinedName
}

func (_abgefb ST_MdxKPIProperty) String() string {
	switch _abgefb {
	case 0:
		return ""
	case 1:
		return "\u0076"
	case 2:
		return "\u0067"
	case 3:
		return "\u0073"
	case 4:
		return "\u0074"
	case 5:
		return "\u0077"
	case 6:
		return "\u006d"
	}
	return ""
}

func (_bbgfd ST_Scope) String() string {
	switch _bbgfd {
	case 0:
		return ""
	case 1:
		return "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"
	case 2:
		return "\u0064\u0061\u0074\u0061"
	case 3:
		return "\u0066\u0069\u0065l\u0064"
	}
	return ""
}

type CT_TextFields struct {

	// Count of Fields
	CountAttr *uint32

	// Text Import Field Settings
	TextField []*CT_TextField
}

func (_gaaage ST_Orientation) Validate() error { return _gaaage.ValidateWithPath("") }

func (_eabde *Chartsheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eabde.CT_Chartsheet = *NewCT_Chartsheet()
_gfcacf:
	for {
		_gfggad, _agbea := d.Token()
		if _agbea != nil {
			return _agbea
		}
		switch _bcabac := _gfggad.(type) {
		case _b.StartElement:
			switch _bcabac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_eabde.SheetPr = NewCT_ChartsheetPr()
				if _bagdg := d.DecodeElement(_eabde.SheetPr, &_bcabac); _bagdg != nil {
					return _bagdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				if _fadcc := d.DecodeElement(_eabde.SheetViews, &_bcabac); _fadcc != nil {
					return _fadcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_eabde.SheetProtection = NewCT_ChartsheetProtection()
				if _aebae := d.DecodeElement(_eabde.SheetProtection, &_bcabac); _aebae != nil {
					return _aebae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_eabde.CustomSheetViews = NewCT_CustomChartsheetViews()
				if _eccabe := d.DecodeElement(_eabde.CustomSheetViews, &_bcabac); _eccabe != nil {
					return _eccabe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_eabde.PageMargins = NewCT_PageMargins()
				if _fafabg := d.DecodeElement(_eabde.PageMargins, &_bcabac); _fafabg != nil {
					return _fafabg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_eabde.PageSetup = NewCT_CsPageSetup()
				if _cabceg := d.DecodeElement(_eabde.PageSetup, &_bcabac); _cabceg != nil {
					return _cabceg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_eabde.HeaderFooter = NewCT_HeaderFooter()
				if _deaaad := d.DecodeElement(_eabde.HeaderFooter, &_bcabac); _deaaad != nil {
					return _deaaad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				if _fbgce := d.DecodeElement(_eabde.Drawing, &_bcabac); _fbgce != nil {
					return _fbgce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_eabde.LegacyDrawing = NewCT_LegacyDrawing()
				if _dbaefb := d.DecodeElement(_eabde.LegacyDrawing, &_bcabac); _dbaefb != nil {
					return _dbaefb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_eabde.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _adfdfg := d.DecodeElement(_eabde.LegacyDrawingHF, &_bcabac); _adfdfg != nil {
					return _adfdfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_eabde.DrawingHF = NewCT_DrawingHF()
				if _gccee := d.DecodeElement(_eabde.DrawingHF, &_bcabac); _gccee != nil {
					return _gccee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_eabde.Picture = NewCT_SheetBackgroundPicture()
				if _ggdbcc := d.DecodeElement(_eabde.Picture, &_bcabac); _ggdbcc != nil {
					return _ggdbcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_eabde.WebPublishItems = NewCT_WebPublishItems()
				if _bbeeee := d.DecodeElement(_eabde.WebPublishItems, &_bcabac); _bbeeee != nil {
					return _bbeeee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eabde.ExtLst = NewCT_ExtensionList()
				if _fccab := d.DecodeElement(_eabde.ExtLst, &_bcabac); _fccab != nil {
					return _fccab
				}
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _bcabac.Name)
				if _eddcb := d.Skip(); _eddcb != nil {
					return _eddcb
				}
			}
		case _b.EndElement:
			break _gfcacf
		case _b.CharData:
		}
	}
	return nil
}

func (_bafcf *ST_DataValidationImeMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cbdgca, _dfaef := d.Token()
	if _dfaef != nil {
		return _dfaef
	}
	if _bfedd, _ggacb := _cbdgca.(_b.EndElement); _ggacb && _bfedd.Name == start.Name {
		*_bafcf = 1
		return nil
	}
	if _acbgac, _bfffge := _cbdgca.(_b.CharData); !_bfffge {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbdgca)
	} else {
		switch string(_acbgac) {
		case "":
			*_bafcf = 0
		case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
			*_bafcf = 1
		case "\u006f\u0066\u0066":
			*_bafcf = 2
		case "\u006f\u006e":
			*_bafcf = 3
		case "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064":
			*_bafcf = 4
		case "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
			*_bafcf = 5
		case "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
			*_bafcf = 6
		case "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
			*_bafcf = 7
		case "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a":
			*_bafcf = 8
		case "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a":
			*_bafcf = 9
		case "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c":
			*_bafcf = 10
		case "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c":
			*_bafcf = 11
		}
	}
	_cbdgca, _dfaef = d.Token()
	if _dfaef != nil {
		return _dfaef
	}
	if _dbefd, _cbecg := _cbdgca.(_b.EndElement); _cbecg && _dbefd.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbdgca)
}

// Validate validates the CT_DataBinding and its children
func (_beea *CT_DataBinding) Validate() error {
	return _beea.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0069n\u0064\u0069\u006e\u0067")
}

func (_eebeb ST_ShowDataAs) Validate() error { return _eebeb.ValidateWithPath("") }

func (_abegcc *ST_CellType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_abegcc = 0
	case "\u0062":
		*_abegcc = 1
	case "\u006e":
		*_abegcc = 2
	case "\u0065":
		*_abegcc = 3
	case "\u0073":
		*_abegcc = 4
	case "\u0073\u0074\u0072":
		*_abegcc = 5
	case "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r":
		*_abegcc = 6
	}
	return nil
}

func (_ffeedg ST_CellType) String() string {
	switch _ffeedg {
	case 0:
		return ""
	case 1:
		return "\u0062"
	case 2:
		return "\u006e"
	case 3:
		return "\u0065"
	case 4:
		return "\u0073"
	case 5:
		return "\u0073\u0074\u0072"
	case 6:
		return "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r"
	}
	return ""
}

func (_ccgaa *CT_FunctionGroup) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _acega := range start.Attr {
		if _acega.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dbcgg, _cdegf := _acega.Value, error(nil)
			if _cdegf != nil {
				return _cdegf
			}
			_ccgaa.NameAttr = &_dbcgg
			continue
		}
	}
	for {
		_cbaffa, _ebfc := d.Token()
		if _ebfc != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u0075\u006e\u0063t\u0069o\u006e\u0047\u0072\u006f\u0075\u0070\u003a \u0025\u0073", _ebfc)
		}
		if _geegd, _aaaag := _cbaffa.(_b.EndElement); _aaaag && _geegd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_eegea *CT_Table) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _eegea.IdAttr)})
	if _eegea.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_eegea.NameAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0069\u0073\u0070\u006c\u0061\u0079\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _eegea.DisplayNameAttr)})
	if _eegea.CommentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_eegea.CommentAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", _eegea.RefAttr)})
	if _eegea.TableTypeAttr != ST_TableTypeUnset {
		_accbe, _fbbbgf := _eegea.TableTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074a\u0062\u006c\u0065\u0054\u0079\u0070e"})
		if _fbbbgf != nil {
			return _fbbbgf
		}
		start.Attr = append(start.Attr, _accbe)
	}
	if _eegea.HeaderRowCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077C\u006f\u0075\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_eegea.HeaderRowCountAttr)})
	}
	if _eegea.InsertRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_eegea.InsertRowAttr))})
	}
	if _eegea.InsertRowShiftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077S\u0068\u0069\u0066\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_eegea.InsertRowShiftAttr))})
	}
	if _eegea.TotalsRowCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077C\u006f\u0075\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_eegea.TotalsRowCountAttr)})
	}
	if _eegea.TotalsRowShownAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077S\u0068\u006f\u0077\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_eegea.TotalsRowShownAttr))})
	}
	if _eegea.PublishedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_eegea.PublishedAttr))})
	}
	if _eegea.HeaderRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_eegea.HeaderRowDxfIdAttr)})
	}
	if _eegea.DataDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d"}, Value: _ec.Sprintf("\u0025\u0076", *_eegea.DataDxfIdAttr)})
	}
	if _eegea.TotalsRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_eegea.TotalsRowDxfIdAttr)})
	}
	if _eegea.HeaderRowBorderDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "h\u0065a\u0064\u0065\u0072\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_eegea.HeaderRowBorderDxfIdAttr)})
	}
	if _eegea.TableBorderDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061b\u006c\u0065\u0042o\u0072\u0064\u0065\u0072\u0044\u0078\u0066\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_eegea.TableBorderDxfIdAttr)})
	}
	if _eegea.TotalsRowBorderDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u006ft\u0061\u006c\u0073\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_eegea.TotalsRowBorderDxfIdAttr)})
	}
	if _eegea.HeaderRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_eegea.HeaderRowCellStyleAttr)})
	}
	if _eegea.DataCellStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_eegea.DataCellStyleAttr)})
	}
	if _eegea.TotalsRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_eegea.TotalsRowCellStyleAttr)})
	}
	if _eegea.ConnectionIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_eegea.ConnectionIdAttr)})
	}
	e.EncodeToken(start)
	if _eegea.AutoFilter != nil {
		_afgfbf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_eegea.AutoFilter, _afgfbf)
	}
	if _eegea.SortState != nil {
		_cfcdb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_eegea.SortState, _cfcdb)
	}
	_gbfbf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003at\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}}
	e.EncodeElement(_eegea.TableColumns, _gbfbf)
	if _eegea.TableStyleInfo != nil {
		_egedcb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}}
		e.EncodeElement(_eegea.TableStyleInfo, _egedcb)
	}
	if _eegea.ExtLst != nil {
		_fgdea := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_eegea.ExtLst, _fgdea)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SingleXmlCell and its children
func (_ebfcd *CT_SingleXmlCell) Validate() error {
	return _ebfcd.ValidateWithPath("\u0043\u0054_\u0053\u0069\u006eg\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c")
}

// Validate validates the CT_PivotAreaReference and its children
func (_cdcbd *CT_PivotAreaReference) Validate() error {
	return _cdcbd.ValidateWithPath("C\u0054\u005f\u0050\u0069vo\u0074A\u0072\u0065\u0061\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065")
}

func (_bdecf ST_PivotAreaType) ValidateWithPath(path string) error {
	switch _bdecf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdecf))
	}
	return nil
}

func (_ecbb *CT_ExternalCell) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bgaa := range start.Attr {
		if _bgaa.Name.Local == "\u0072" {
			_efcgb, _ccfdg := _bgaa.Value, error(nil)
			if _ccfdg != nil {
				return _ccfdg
			}
			_ecbb.RAttr = &_efcgb
			continue
		}
		if _bgaa.Name.Local == "\u0074" {
			_ecbb.TAttr.UnmarshalXMLAttr(_bgaa)
			continue
		}
		if _bgaa.Name.Local == "\u0076\u006d" {
			_bfgda, _ceafd := _eb.ParseUint(_bgaa.Value, 10, 32)
			if _ceafd != nil {
				return _ceafd
			}
			_fcce := uint32(_bfgda)
			_ecbb.VmAttr = &_fcce
			continue
		}
	}
_abefb:
	for {
		_abdf, _feffea := d.Token()
		if _feffea != nil {
			return _feffea
		}
		switch _cfdfc := _abdf.(type) {
		case _b.StartElement:
			switch _cfdfc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}:
				_ecbb.V = new(string)
				if _bdbb := d.DecodeElement(_ecbb.V, &_cfdfc); _bdbb != nil {
					return _bdbb
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u0043\u0065\u006c\u006c\u0020\u0025\u0076", _cfdfc.Name)
				if _efbd := d.Skip(); _efbd != nil {
					return _efbd
				}
			}
		case _b.EndElement:
			break _abefb
		case _b.CharData:
		}
	}
	return nil
}

func (_afaegf ST_MdxKPIProperty) ValidateWithPath(path string) error {
	switch _afaegf {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_afaegf))
	}
	return nil
}

func NewCT_WebPublishObject() *CT_WebPublishObject { _gdcac := &CT_WebPublishObject{}; return _gdcac }

func NewCT_DataValidations() *CT_DataValidations { _fddbb := &CT_DataValidations{}; return _fddbb }

type CT_CacheField struct {

	// PivotCache Field Name
	NameAttr string

	// PivotCache Field Caption
	CaptionAttr *string

	// Property Name
	PropertyNameAttr *string

	// Server-based Field
	ServerFieldAttr *bool

	// Unique List Retrieved
	UniqueListAttr *bool

	// Number Format Id
	NumFmtIdAttr *uint32

	// Calculated Field Formula
	FormulaAttr *string

	// SQL Data Type
	SqlTypeAttr *int32

	// Hierarchy
	HierarchyAttr *int32

	// Hierarchy Level
	LevelAttr *uint32

	// Database Field
	DatabaseFieldAttr *bool

	// Member Property Count
	MappingCountAttr *uint32

	// Member Property Field
	MemberPropertyFieldAttr *bool

	// Shared Items
	SharedItems *CT_SharedItems

	// Field Group Properties
	FieldGroup *CT_FieldGroup

	// Member Properties Map
	MpMap []*CT_X

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

const (
	ST_CredMethodUnset      ST_CredMethod = 0
	ST_CredMethodIntegrated ST_CredMethod = 1
	ST_CredMethodNone       ST_CredMethod = 2
	ST_CredMethodStored     ST_CredMethod = 3
	ST_CredMethodPrompt     ST_CredMethod = 4
)

// Validate validates the CT_WorkbookProtection and its children
func (_gbfbd *CT_WorkbookProtection) Validate() error {
	return _gbfbd.ValidateWithPath("C\u0054\u005f\u0057\u006frk\u0062o\u006f\u006b\u0050\u0072\u006ft\u0065\u0063\u0074\u0069\u006f\u006e")
}

func (_abbcb *CT_PivotDimension) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgecc := range start.Attr {
		if _dgecc.Name.Local == "\u006de\u0061\u0073\u0075\u0072\u0065" {
			_ddace, _ddccaf := _eb.ParseBool(_dgecc.Value)
			if _ddccaf != nil {
				return _ddccaf
			}
			_abbcb.MeasureAttr = &_ddace
			continue
		}
		if _dgecc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fccae, _bbcde := _dgecc.Value, error(nil)
			if _bbcde != nil {
				return _bbcde
			}
			_abbcb.NameAttr = _fccae
			continue
		}
		if _dgecc.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_bcccg, _fadfe := _dgecc.Value, error(nil)
			if _fadfe != nil {
				return _fadfe
			}
			_abbcb.UniqueNameAttr = _bcccg
			continue
		}
		if _dgecc.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_faacc, _ecbeb := _dgecc.Value, error(nil)
			if _ecbeb != nil {
				return _ecbeb
			}
			_abbcb.CaptionAttr = _faacc
			continue
		}
	}
	for {
		_gfgda, _cbfbg := d.Token()
		if _cbfbg != nil {
			return _ec.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e: \u0025\u0073", _cbfbg)
		}
		if _cabcaa, _cfccb := _gfgda.(_b.EndElement); _cfccb && _cabcaa.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_GroupLevel and its children
func (_gdab *CT_GroupLevel) Validate() error {
	return _gdab.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c")
}

// ValidateWithPath validates the CT_Hyperlinks and its children, prefixing error messages with path
func (_bdgg *CT_Hyperlinks) ValidateWithPath(path string) error {
	for _gfdec, _fcbde := range _bdgg.Hyperlink {
		if _dcdbc := _fcbde.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u0048\u0079\u0070e\u0072\u006c\u0069\u006e\u006b\u005b\u0025\u0064\u005d", path, _gfdec)); _dcdbc != nil {
			return _dcdbc
		}
	}
	return nil
}

type CT_RevisionCellChange struct {

	// Sheet Id
	SIdAttr uint32

	// Old Formatting Information
	OdxfAttr *bool

	// Row Column Formatting Change
	XfDxfAttr *bool

	// Style Revision
	SAttr *bool

	// Formatting
	DxfAttr *bool

	// Number Format Id
	NumFmtIdAttr *uint32

	// Quote Prefix
	QuotePrefixAttr *bool

	// Old Quote Prefix
	OldQuotePrefixAttr *bool

	// Phonetic Text
	PhAttr *bool

	// Old Phonetic Text
	OldPhAttr *bool

	// End of List Formula Update
	EndOfListFormulaUpdateAttr *bool

	// Old Cell Data
	Oc *CT_Cell

	// New Cell Data
	Nc *CT_Cell

	// Old Formatting Information
	Odxf *CT_Dxf

	// New Formatting Information
	Ndxf    *CT_Dxf
	ExtLst  *CT_ExtensionList
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}

func NewCT_MeasureGroup() *CT_MeasureGroup { _debec := &CT_MeasureGroup{}; return _debec }

// ValidateWithPath validates the CT_Dimensions and its children, prefixing error messages with path
func (_dafda *CT_Dimensions) ValidateWithPath(path string) error {
	for _ddcba, _afagf := range _dafda.Dimension {
		if _adad := _afagf.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u0044\u0069\u006de\u006e\u0073\u0069\u006f\u006e\u005b\u0025\u0064\u005d", path, _ddcba)); _adad != nil {
			return _adad
		}
	}
	return nil
}

type CT_Users struct {

	// Active User Count
	CountAttr *uint32

	// User Information
	UserInfo []*CT_SharedUser
}

type ST_CellFormulaType byte

const (
	ST_PhoneticAlignmentUnset       ST_PhoneticAlignment = 0
	ST_PhoneticAlignmentNoControl   ST_PhoneticAlignment = 1
	ST_PhoneticAlignmentLeft        ST_PhoneticAlignment = 2
	ST_PhoneticAlignmentCenter      ST_PhoneticAlignment = 3
	ST_PhoneticAlignmentDistributed ST_PhoneticAlignment = 4
)

// ValidateWithPath validates the CT_Scenarios and its children, prefixing error messages with path
func (_bbafb *CT_Scenarios) ValidateWithPath(path string) error {
	for _ecdeac, _bfcac := range _bbafb.Scenario {
		if _cgbgg := _bfcac.ValidateWithPath(_ec.Sprintf("\u0025s\u002fS\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u005b\u0025\u0064\u005d", path, _ecdeac)); _cgbgg != nil {
			return _cgbgg
		}
	}
	return nil
}

type CT_SheetFormatPr struct {

	// Base Column Width
	BaseColWidthAttr *uint32

	// Default Column Width
	DefaultColWidthAttr *float64

	// Default Row Height
	DefaultRowHeightAttr float64

	// Custom Height
	CustomHeightAttr *bool

	// Hidden By Default
	ZeroHeightAttr *bool

	// Thick Top Border
	ThickTopAttr *bool

	// Thick Bottom Border
	ThickBottomAttr *bool

	// Maximum Outline Row
	OutlineLevelRowAttr *uint8

	// Column Outline Level
	OutlineLevelColAttr *uint8
}

func (_bgfe *CT_Hyperlink) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edeeg := range start.Attr {
		if _edeeg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _edeeg.Name.Local == "\u0069\u0064" || _edeeg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _edeeg.Name.Local == "\u0069\u0064" {
			_degdd, _bacbe := _edeeg.Value, error(nil)
			if _bacbe != nil {
				return _bacbe
			}
			_bgfe.IdAttr = &_degdd
			continue
		}
		if _edeeg.Name.Local == "\u0072\u0065\u0066" {
			_fgeg, _eagbb := _edeeg.Value, error(nil)
			if _eagbb != nil {
				return _eagbb
			}
			_bgfe.RefAttr = _fgeg
			continue
		}
		if _edeeg.Name.Local == "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e" {
			_gacda, _aebgf := _edeeg.Value, error(nil)
			if _aebgf != nil {
				return _aebgf
			}
			_bgfe.LocationAttr = &_gacda
			continue
		}
		if _edeeg.Name.Local == "\u0074o\u006f\u006c\u0074\u0069\u0070" {
			_bgbb, _cbea := _edeeg.Value, error(nil)
			if _cbea != nil {
				return _cbea
			}
			_bgfe.TooltipAttr = &_bgbb
			continue
		}
		if _edeeg.Name.Local == "\u0064i\u0073\u0070\u006c\u0061\u0079" {
			_cgbce, _cbfag := _edeeg.Value, error(nil)
			if _cbfag != nil {
				return _cbfag
			}
			_bgfe.DisplayAttr = &_cgbce
			continue
		}
	}
	for {
		_eebfa, _gebd := d.Token()
		if _gebd != nil {
			return _ec.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0048\u0079p\u0065\u0072\u006c\u0069\u006e\u006b\u003a\u0020\u0025\u0073", _gebd)
		}
		if _dbaaa, _gaede := _eebfa.(_b.EndElement); _gaede && _dbaaa.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ffcgfg *ST_DvAspect) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ffcgfg = 0
	case "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054":
		*_ffcgfg = 1
	case "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e":
		*_ffcgfg = 2
	}
	return nil
}

// Validate validates the CT_FileRecoveryPr and its children
func (_egeed *CT_FileRecoveryPr) Validate() error {
	return _egeed.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072")
}

func (_ff *AG_RevData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ff.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_ff.RIdAttr)})
	}
	if _ff.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ff.UaAttr))})
	}
	if _ff.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ff.RaAttr))})
	}
	return nil
}

func (_cgcbb ST_CellFormulaType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_agfgb := _b.Attr{}
	_agfgb.Name = name
	switch _cgcbb {
	case ST_CellFormulaTypeUnset:
		_agfgb.Value = ""
	case ST_CellFormulaTypeNormal:
		_agfgb.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_CellFormulaTypeArray:
		_agfgb.Value = "\u0061\u0072\u0072a\u0079"
	case ST_CellFormulaTypeDataTable:
		_agfgb.Value = "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce"
	case ST_CellFormulaTypeShared:
		_agfgb.Value = "\u0073\u0068\u0061\u0072\u0065\u0064"
	}
	return _agfgb, nil
}

func (_daggd *CT_RangeSets) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _daggd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_daggd.CountAttr)})
	}
	e.EncodeToken(start)
	_fbbbbe := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074"}}
	for _, _dcdeeb := range _daggd.RangeSet {
		e.EncodeElement(_dcdeeb, _fbbbbe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_OutlinePr() *CT_OutlinePr { _ffabe := &CT_OutlinePr{}; return _ffabe }

type CT_PatternFill struct {

	// Pattern Type
	PatternTypeAttr ST_PatternType

	// Foreground Color
	FgColor *CT_Color

	// Background Color
	BgColor *CT_Color
}

func (_eaecbd *ST_FontScheme) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbabfe, _defegf := d.Token()
	if _defegf != nil {
		return _defegf
	}
	if _dbcec, _ccfcd := _dbabfe.(_b.EndElement); _ccfcd && _dbcec.Name == start.Name {
		*_eaecbd = 1
		return nil
	}
	if _ddgaga, _agecf := _dbabfe.(_b.CharData); !_agecf {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbabfe)
	} else {
		switch string(_ddgaga) {
		case "":
			*_eaecbd = 0
		case "\u006e\u006f\u006e\u0065":
			*_eaecbd = 1
		case "\u006d\u0061\u006ao\u0072":
			*_eaecbd = 2
		case "\u006d\u0069\u006eo\u0072":
			*_eaecbd = 3
		}
	}
	_dbabfe, _defegf = d.Token()
	if _defegf != nil {
		return _defegf
	}
	if _fgabcd, _fgfab := _dbabfe.(_b.EndElement); _fgfab && _fgabcd.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbabfe)
}

func NewCT_Metadata() *CT_Metadata { _agda := &CT_Metadata{}; return _agda }

// ValidateWithPath validates the CT_CustomSheetView and its children, prefixing error messages with path
func (_edcg *CT_CustomSheetView) ValidateWithPath(path string) error {
	if !_bb.ST_GuidPatternRe.MatchString(_edcg.GuidAttr) {
		return _ec.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _bb.ST_GuidPatternRe, _edcg.GuidAttr)
	}
	if _cadd := _edcg.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _cadd != nil {
		return _cadd
	}
	if _decg := _edcg.ViewAttr.ValidateWithPath(path + "\u002fV\u0069\u0065\u0077\u0041\u0074\u0074r"); _decg != nil {
		return _decg
	}
	if _edcg.Pane != nil {
		if _aacfa := _edcg.Pane.ValidateWithPath(path + "\u002f\u0050\u0061n\u0065"); _aacfa != nil {
			return _aacfa
		}
	}
	if _edcg.Selection != nil {
		if _fdgfb := _edcg.Selection.ValidateWithPath(path + "\u002f\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _fdgfb != nil {
			return _fdgfb
		}
	}
	if _edcg.RowBreaks != nil {
		if _bbba := _edcg.RowBreaks.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"); _bbba != nil {
			return _bbba
		}
	}
	if _edcg.ColBreaks != nil {
		if _gbgdg := _edcg.ColBreaks.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"); _gbgdg != nil {
			return _gbgdg
		}
	}
	if _edcg.PageMargins != nil {
		if _aegca := _edcg.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _aegca != nil {
			return _aegca
		}
	}
	if _edcg.PrintOptions != nil {
		if _agef := _edcg.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _agef != nil {
			return _agef
		}
	}
	if _edcg.PageSetup != nil {
		if _egebf := _edcg.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _egebf != nil {
			return _egebf
		}
	}
	if _edcg.HeaderFooter != nil {
		if _dgff := _edcg.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _dgff != nil {
			return _dgff
		}
	}
	if _edcg.AutoFilter != nil {
		if _fecea := _edcg.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _fecea != nil {
			return _fecea
		}
	}
	if _edcg.ExtLst != nil {
		if _ebbef := _edcg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ebbef != nil {
			return _ebbef
		}
	}
	return nil
}

func (_cfeeca *SingleXmlCells) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073"
	return _cfeeca.CT_SingleXmlCells.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_SingleXmlCell and its children, prefixing error messages with path
func (_eababc *CT_SingleXmlCell) ValidateWithPath(path string) error {
	if _ddfee := _eababc.XmlCellPr.ValidateWithPath(path + "\u002f\u0058\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072"); _ddfee != nil {
		return _ddfee
	}
	if _eababc.ExtLst != nil {
		if _abbgcg := _eababc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abbgcg != nil {
			return _abbgcg
		}
	}
	return nil
}

func (_geeee *CT_OutlinePr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _geeee.ApplyStylesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0070\u0070\u006c\u0079\u0053\u0074\u0079\u006c\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_geeee.ApplyStylesAttr))})
	}
	if _geeee.SummaryBelowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0075\u006dm\u0061\u0072\u0079\u0042\u0065\u006c\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_geeee.SummaryBelowAttr))})
	}
	if _geeee.SummaryRightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0075\u006dm\u0061\u0072\u0079\u0052\u0069\u0067\u0068\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_geeee.SummaryRightAttr))})
	}
	if _geeee.ShowOutlineSymbolsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_geeee.ShowOutlineSymbolsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bggbf *CT_DataRefs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ggabc := range start.Attr {
		if _ggabc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gfdc, _aefc := _eb.ParseUint(_ggabc.Value, 10, 32)
			if _aefc != nil {
				return _aefc
			}
			_bgbga := uint32(_gfdc)
			_bggbf.CountAttr = &_bgbga
			continue
		}
	}
_efgc:
	for {
		_fafd, _gggf := d.Token()
		if _gggf != nil {
			return _gggf
		}
		switch _ffad := _fafd.(type) {
		case _b.StartElement:
			switch _ffad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0052\u0065\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0052\u0065\u0066"}:
				_ffac := NewCT_DataRef()
				if _bgcbf := d.DecodeElement(_ffac, &_ffad); _bgcbf != nil {
					return _bgcbf
				}
				_bggbf.DataRef = append(_bggbf.DataRef, _ffac)
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u0073\u0020\u0025\u0076", _ffad.Name)
				if _dddga := d.Skip(); _dddga != nil {
					return _dddga
				}
			}
		case _b.EndElement:
			break _efgc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CsPageSetup and its children, prefixing error messages with path
func (_cbga *CT_CsPageSetup) ValidateWithPath(path string) error {
	if _cbga.PaperHeightAttr != nil {
		if !_bb.ST_PositiveUniversalMeasurePatternRe.MatchString(*_cbga.PaperHeightAttr) {
			return _ec.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _bb.ST_PositiveUniversalMeasurePatternRe, *_cbga.PaperHeightAttr)
		}
	}
	if _cbga.PaperHeightAttr != nil {
		if !_bb.ST_UniversalMeasurePatternRe.MatchString(*_cbga.PaperHeightAttr) {
			return _ec.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _bb.ST_UniversalMeasurePatternRe, *_cbga.PaperHeightAttr)
		}
	}
	if _cbga.PaperWidthAttr != nil {
		if !_bb.ST_PositiveUniversalMeasurePatternRe.MatchString(*_cbga.PaperWidthAttr) {
			return _ec.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _bb.ST_PositiveUniversalMeasurePatternRe, *_cbga.PaperWidthAttr)
		}
	}
	if _cbga.PaperWidthAttr != nil {
		if !_bb.ST_UniversalMeasurePatternRe.MatchString(*_cbga.PaperWidthAttr) {
			return _ec.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _bb.ST_UniversalMeasurePatternRe, *_cbga.PaperWidthAttr)
		}
	}
	if _ebab := _cbga.OrientationAttr.ValidateWithPath(path + "\u002f\u004fr\u0069\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _ebab != nil {
		return _ebab
	}
	return nil
}

// ValidateWithPath validates the CT_TextPr and its children, prefixing error messages with path
func (_gfbfdf *CT_TextPr) ValidateWithPath(path string) error {
	if _degdg := _gfbfdf.FileTypeAttr.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _degdg != nil {
		return _degdg
	}
	if _cddgbf := _gfbfdf.QualifierAttr.ValidateWithPath(path + "\u002f\u0051\u0075\u0061\u006c\u0069\u0066\u0069\u0065r\u0041\u0074\u0074\u0072"); _cddgbf != nil {
		return _cddgbf
	}
	if _gfbfdf.TextFields != nil {
		if _fdcgd := _gfbfdf.TextFields.ValidateWithPath(path + "/\u0054\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"); _fdcgd != nil {
			return _fdcgd
		}
	}
	return nil
}

func (_ffbcb ST_DataValidationImeMode) Validate() error { return _ffbcb.ValidateWithPath("") }

const (
	ST_VerticalAlignmentUnset       ST_VerticalAlignment = 0
	ST_VerticalAlignmentTop         ST_VerticalAlignment = 1
	ST_VerticalAlignmentCenter      ST_VerticalAlignment = 2
	ST_VerticalAlignmentBottom      ST_VerticalAlignment = 3
	ST_VerticalAlignmentJustify     ST_VerticalAlignment = 4
	ST_VerticalAlignmentDistributed ST_VerticalAlignment = 5
)

type ST_FormulaExpression byte

func NewCT_ExternalLink() *CT_ExternalLink { _gdfg := &CT_ExternalLink{}; return _gdfg }

func NewCT_Fills() *CT_Fills { _dbgf := &CT_Fills{}; return _dbgf }

func (_gafcbc *CT_colItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eageaa := range start.Attr {
		if _eageaa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gggab, _dbbcdg := _eb.ParseUint(_eageaa.Value, 10, 32)
			if _dbbcdg != nil {
				return _dbbcdg
			}
			_ebbba := uint32(_gggab)
			_gafcbc.CountAttr = &_ebbba
			continue
		}
	}
_dceae:
	for {
		_dadga, _cbeacg := d.Token()
		if _cbeacg != nil {
			return _cbeacg
		}
		switch _bggdf := _dadga.(type) {
		case _b.StartElement:
			switch _bggdf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_fgffg := NewCT_I()
				if _ccdgf := d.DecodeElement(_fgffg, &_bggdf); _ccdgf != nil {
					return _ccdgf
				}
				_gafcbc.I = append(_gafcbc.I, _fgffg)
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _bggdf.Name)
				if _gdaga := d.Skip(); _gdaga != nil {
					return _gdaga
				}
			}
		case _b.EndElement:
			break _dceae
		case _b.CharData:
		}
	}
	return nil
}

func (_feddf ST_ConditionalFormattingOperator) Validate() error { return _feddf.ValidateWithPath("") }

type CT_Reviewed struct {

	// revision Id
	RIdAttr uint32
}

type ST_PrintError byte

// Validate validates the CT_Worksheet and its children
func (_fcccf *CT_Worksheet) Validate() error {
	return _fcccf.ValidateWithPath("\u0043\u0054\u005fW\u006f\u0072\u006b\u0073\u0068\u0065\u0065\u0074")
}

// Validate validates the CT_Authors and its children
func (_efd *CT_Authors) Validate() error {
	return _efd.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0074\u0068\u006f\u0072\u0073")
}

func NewCT_ConditionalFormatting() *CT_ConditionalFormatting {
	_fbagc := &CT_ConditionalFormatting{}
	return _fbagc
}

func (_ffbfab ST_ConditionalFormattingOperator) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ffbfab.String(), start)
}

func (_eaegae *ST_Objects) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eaegae = 0
	case "\u0061\u006c\u006c":
		*_eaegae = 1
	case "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073":
		*_eaegae = 2
	case "\u006e\u006f\u006e\u0065":
		*_eaegae = 3
	}
	return nil
}

func (_ffdbe ST_FileType) Validate() error { return _ffdbe.ValidateWithPath("") }

type CT_Connection struct {

	// Connection Id
	IdAttr uint32

	// Source Database File
	SourceFileAttr *string

	// Connection File
	OdcFileAttr *string

	// Keep Connection Open
	KeepAliveAttr *bool

	// Automatic Refresh Interval
	IntervalAttr *uint32

	// Connection Name
	NameAttr *string

	// Connection Description
	DescriptionAttr *string

	// Database Source Type
	TypeAttr *uint32

	// Reconnection Method
	ReconnectionMethodAttr *uint32

	// Last Refresh Version
	RefreshedVersionAttr uint8

	// Minimum Version Required for Refresh
	MinRefreshableVersionAttr *uint8

	// Save Password
	SavePasswordAttr *bool

	// New Connection
	NewAttr *bool

	// Deleted Connection
	DeletedAttr *bool

	// Only Use Connection File
	OnlyUseConnectionFileAttr *bool

	// Background Refresh
	BackgroundAttr *bool

	// Refresh on Open
	RefreshOnLoadAttr *bool

	// Save Data
	SaveDataAttr *bool

	// Reconnection Method
	CredentialsAttr ST_CredMethod

	// SSO Id
	SingleSignOnIdAttr *string

	// Database Properties
	DbPr *CT_DbPr

	// OLAP Properties
	OlapPr *CT_OlapPr

	// Web Query Properties
	WebPr *CT_WebPr

	// Text Import Settings
	TextPr *CT_TextPr

	// Query Parameters
	Parameters *CT_Parameters

	// Future Feature Data Storage
	ExtLst *CT_ExtensionList
}

type CT_RevisionConflict struct {

	// Sheet Id
	SheetIdAttr *uint32
	RIdAttr     *uint32
	UaAttr      *bool
	RaAttr      *bool
}

func NewCT_Xf() *CT_Xf { _agdabf := &CT_Xf{}; return _agdabf }

func (_fcadb ST_CellComments) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_aebef := _b.Attr{}
	_aebef.Name = name
	switch _fcadb {
	case ST_CellCommentsUnset:
		_aebef.Value = ""
	case ST_CellCommentsNone:
		_aebef.Value = "\u006e\u006f\u006e\u0065"
	case ST_CellCommentsAsDisplayed:
		_aebef.Value = "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064"
	case ST_CellCommentsAtEnd:
		_aebef.Value = "\u0061\u0074\u0045n\u0064"
	}
	return _aebef, nil
}

func NewCT_PatternFill() *CT_PatternFill { _ceabce := &CT_PatternFill{}; return _ceabce }

const (
	ST_DataValidationTypeUnset      ST_DataValidationType = 0
	ST_DataValidationTypeNone       ST_DataValidationType = 1
	ST_DataValidationTypeWhole      ST_DataValidationType = 2
	ST_DataValidationTypeDecimal    ST_DataValidationType = 3
	ST_DataValidationTypeList       ST_DataValidationType = 4
	ST_DataValidationTypeDate       ST_DataValidationType = 5
	ST_DataValidationTypeTime       ST_DataValidationType = 6
	ST_DataValidationTypeTextLength ST_DataValidationType = 7
	ST_DataValidationTypeCustom     ST_DataValidationType = 8
)

// ValidateWithPath validates the CT_ObjectAnchor and its children, prefixing error messages with path
func (_cdcec *CT_ObjectAnchor) ValidateWithPath(path string) error {
	if _ecadc := _cdcec.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _ecadc != nil {
		return _ecadc
	}
	if _gbcee := _cdcec.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _gbcee != nil {
		return _gbcee
	}
	return nil
}

func (_dggbfe ST_PhoneticAlignment) Validate() error { return _dggbfe.ValidateWithPath("") }

func (_aceg *CT_Control) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0061\u0070\u0065\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _aceg.ShapeIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _aceg.IdAttr)})
	if _aceg.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_aceg.NameAttr)})
	}
	e.EncodeToken(start)
	if _aceg.ControlPr != nil {
		_eggfd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072"}}
		e.EncodeElement(_aceg.ControlPr, _eggfd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fbgg *CT_CalculatedMember) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _fbgg.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0064\u0078"}, Value: _ec.Sprintf("\u0025\u0076", _fbgg.MdxAttr)})
	if _fbgg.MemberNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u006d\u0062\u0065\u0072\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_fbgg.MemberNameAttr)})
	}
	if _fbgg.HierarchyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y"}, Value: _ec.Sprintf("\u0025\u0076", *_fbgg.HierarchyAttr)})
	}
	if _fbgg.ParentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0072\u0065\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_fbgg.ParentAttr)})
	}
	if _fbgg.SolveOrderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u006c\u0076\u0065\u004f\u0072\u0064\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_fbgg.SolveOrderAttr)})
	}
	if _fbgg.SetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fbgg.SetAttr))})
	}
	e.EncodeToken(start)
	if _fbgg.ExtLst != nil {
		_eccg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fbgg.ExtLst, _eccg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_abccc *CT_Format) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abccc.PivotArea = NewCT_PivotArea()
	for _, _eedbaa := range start.Attr {
		if _eedbaa.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_abccc.ActionAttr.UnmarshalXMLAttr(_eedbaa)
			continue
		}
		if _eedbaa.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_dggfc, _baccd := _eb.ParseUint(_eedbaa.Value, 10, 32)
			if _baccd != nil {
				return _baccd
			}
			_ebcda := uint32(_dggfc)
			_abccc.DxfIdAttr = &_ebcda
			continue
		}
	}
_egecc:
	for {
		_ggdbaf, _gdfeb := d.Token()
		if _gdfeb != nil {
			return _gdfeb
		}
		switch _adegf := _ggdbaf.(type) {
		case _b.StartElement:
			switch _adegf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _aaaf := d.DecodeElement(_abccc.PivotArea, &_adegf); _aaaf != nil {
					return _aaaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abccc.ExtLst = NewCT_ExtensionList()
				if _affce := d.DecodeElement(_abccc.ExtLst, &_adegf); _affce != nil {
					return _affce
				}
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0046\u006f\u0072m\u0061\u0074 \u0025\u0076", _adegf.Name)
				if _bcbdd := d.Skip(); _bcbdd != nil {
					return _bcbdd
				}
			}
		case _b.EndElement:
			break _egecc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CustomWorkbookView and its children
func (_bfgdb *CT_CustomWorkbookView) Validate() error {
	return _bfgdb.ValidateWithPath("C\u0054\u005f\u0043\u0075st\u006fm\u0057\u006f\u0072\u006b\u0062o\u006f\u006b\u0056\u0069\u0065\u0077")
}

func (_dfde *CT_ExternalDefinedNames) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dfde.DefinedName != nil {
		_cgggb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065"}}
		for _, _gaaae := range _dfde.DefinedName {
			e.EncodeElement(_gaaae, _cgggb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CalculatedMember and its children
func (_gfbfc *CT_CalculatedMember) Validate() error {
	return _gfbfc.ValidateWithPath("\u0043\u0054\u005f\u0043al\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072")
}

// ValidateWithPath validates the CT_Table and its children, prefixing error messages with path
func (_acdcdc *CT_Table) ValidateWithPath(path string) error {
	if _fbfbf := _acdcdc.TableTypeAttr.ValidateWithPath(path + "\u002f\u0054\u0061\u0062\u006c\u0065\u0054\u0079\u0070e\u0041\u0074\u0074\u0072"); _fbfbf != nil {
		return _fbfbf
	}
	if _acdcdc.AutoFilter != nil {
		if _acfgf := _acdcdc.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _acfgf != nil {
			return _acfgf
		}
	}
	if _acdcdc.SortState != nil {
		if _adgce := _acdcdc.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _adgce != nil {
			return _adgce
		}
	}
	if _gfdbb := _acdcdc.TableColumns.ValidateWithPath(path + "\u002f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"); _gfdbb != nil {
		return _gfdbb
	}
	if _acdcdc.TableStyleInfo != nil {
		if _bfdbb := _acdcdc.TableStyleInfo.ValidateWithPath(path + "\u002fT\u0061b\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"); _bfdbb != nil {
			return _bfdbb
		}
	}
	if _acdcdc.ExtLst != nil {
		if _agdffd := _acdcdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _agdffd != nil {
			return _agdffd
		}
	}
	return nil
}

type CT_ProtectedRange struct {

	// Legacy Password
	PasswordAttr *string

	// Sequence of References
	SqrefAttr ST_Sqref

	// Name
	NameAttr string

	// Security Descriptor
	SecurityDescriptorAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Security Descriptor
	SecurityDescriptor []string
}

func (_ccefb *CT_OlapPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _geaabe := range start.Attr {
		if _geaabe.Name.Local == "\u006c\u006f\u0063a\u006c" {
			_ccdfb, _febec := _eb.ParseBool(_geaabe.Value)
			if _febec != nil {
				return _febec
			}
			_ccefb.LocalAttr = &_ccdfb
			continue
		}
		if _geaabe.Name.Local == "\u006co\u0063a\u006c\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e" {
			_bdbcc, _accea := _geaabe.Value, error(nil)
			if _accea != nil {
				return _accea
			}
			_ccefb.LocalConnectionAttr = &_bdbcc
			continue
		}
		if _geaabe.Name.Local == "\u006c\u006f\u0063a\u006c\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_babbf, _ddfba := _eb.ParseBool(_geaabe.Value)
			if _ddfba != nil {
				return _ddfba
			}
			_ccefb.LocalRefreshAttr = &_babbf
			continue
		}
		if _geaabe.Name.Local == "\u0073\u0065\u006e\u0064\u004c\u006f\u0063\u0061\u006c\u0065" {
			_cdgc, _gbgdgf := _eb.ParseBool(_geaabe.Value)
			if _gbgdgf != nil {
				return _gbgdgf
			}
			_ccefb.SendLocaleAttr = &_cdgc
			continue
		}
		if _geaabe.Name.Local == "\u0072\u006f\u0077\u0044\u0072\u0069\u006c\u006c\u0043\u006f\u0075\u006e\u0074" {
			_agaea, _eadab := _eb.ParseUint(_geaabe.Value, 10, 32)
			if _eadab != nil {
				return _eadab
			}
			_dedea := uint32(_agaea)
			_ccefb.RowDrillCountAttr = &_dedea
			continue
		}
		if _geaabe.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u006c\u006c" {
			_bfcec, _gffca := _eb.ParseBool(_geaabe.Value)
			if _gffca != nil {
				return _gffca
			}
			_ccefb.ServerFillAttr = &_bfcec
			continue
		}
		if _geaabe.Name.Local == "\u0073e\u0072v\u0065\u0072\u004e\u0075\u006db\u0065\u0072F\u006f\u0072\u006d\u0061\u0074" {
			_gedbad, _fbafe := _eb.ParseBool(_geaabe.Value)
			if _fbafe != nil {
				return _fbafe
			}
			_ccefb.ServerNumberFormatAttr = &_gedbad
			continue
		}
		if _geaabe.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u006e\u0074" {
			_dfaf, _dcedc := _eb.ParseBool(_geaabe.Value)
			if _dcedc != nil {
				return _dcedc
			}
			_ccefb.ServerFontAttr = &_dfaf
			continue
		}
		if _geaabe.Name.Local == "\u0073e\u0072v\u0065\u0072\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006f\u0072" {
			_eaaaf, _egffg := _eb.ParseBool(_geaabe.Value)
			if _egffg != nil {
				return _egffg
			}
			_ccefb.ServerFontColorAttr = &_eaaaf
			continue
		}
	}
	for {
		_bbcdf, _cdaad := d.Token()
		if _cdaad != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004f\u006c\u0061p\u0050\u0072\u003a\u0020\u0025\u0073", _cdaad)
		}
		if _eddcc, _eddcd := _bbcdf.(_b.EndElement); _eddcd && _eddcc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the Users and its children
func (_adgabe *Users) Validate() error { return _adgabe.ValidateWithPath("\u0055\u0073\u0065r\u0073") }

func NewCT_RevisionAutoFormatting() *CT_RevisionAutoFormatting {
	_effca := &CT_RevisionAutoFormatting{}
	return _effca
}

func NewCT_ProtectedRanges() *CT_ProtectedRanges { _bdfbf := &CT_ProtectedRanges{}; return _bdfbf }

// ValidateWithPath validates the CT_CellSmartTags and its children, prefixing error messages with path
func (_degd *CT_CellSmartTags) ValidateWithPath(path string) error {
	for _ebbf, _ddbfe := range _degd.CellSmartTag {
		if _bcfd := _ddbfe.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0043el\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u005b\u0025\u0064\u005d", path, _ebbf)); _bcfd != nil {
			return _bcfd
		}
	}
	return nil
}

func (_afcfg *CT_SheetData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _afcfg.Row != nil {
		_gfabf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u006f\u0077"}}
		for _, _dfcaa := range _afcfg.Row {
			e.EncodeElement(_dfcaa, _gfabf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the AG_AutoFormat and its children
func (_cg *AG_AutoFormat) Validate() error {
	return _cg.ValidateWithPath("\u0041\u0047\u005f\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061\u0074")
}

// ValidateWithPath validates the CT_GroupMember and its children, prefixing error messages with path
func (_dgdbg *CT_GroupMember) ValidateWithPath(path string) error { return nil }

func (_bega *CT_CellSmartTag) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0079\u0070\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _bega.TypeAttr)})
	if _bega.DeletedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u006c\u0065\u0074\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bega.DeletedAttr))})
	}
	if _bega.XmlBasedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u0042\u0061\u0073\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bega.XmlBasedAttr))})
	}
	e.EncodeToken(start)
	if _bega.CellSmartTagPr != nil {
		_aab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072"}}
		for _, _cdfc := range _bega.CellSmartTagPr {
			e.EncodeElement(_cdfc, _aab)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_DataValidationErrorStyle byte

func (_ebabg ST_ExternalConnectionType) Validate() error { return _ebabg.ValidateWithPath("") }

// ValidateWithPath validates the CT_RangeSet and its children, prefixing error messages with path
func (_dcfadf *CT_RangeSet) ValidateWithPath(path string) error { return nil }

func NewCT_RowFields() *CT_RowFields { _ggcba := &CT_RowFields{}; return _ggcba }

// ValidateWithPath validates the CT_RevisionConflict and its children, prefixing error messages with path
func (_eagdac *CT_RevisionConflict) ValidateWithPath(path string) error { return nil }

func (_bcgbga *CT_PageItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _bcgbga.NameAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_baedbe ST_SmartTagShow) ValidateWithPath(path string) error {
	switch _baedbe {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_baedbe))
	}
	return nil
}

type CT_ChartFormats struct {

	// Format Count
	CountAttr *uint32

	// PivotChart Format
	ChartFormat []*CT_ChartFormat
}

func (_gcab *CT_CellAlignment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fcgb := range start.Attr {
		if _fcgb.Name.Local == "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c" {
			_gcab.HorizontalAttr.UnmarshalXMLAttr(_fcgb)
			continue
		}
		if _fcgb.Name.Local == "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c" {
			_gcab.VerticalAttr.UnmarshalXMLAttr(_fcgb)
			continue
		}
		if _fcgb.Name.Local == "\u0074\u0065\u0078t\u0052\u006f\u0074\u0061\u0074\u0069\u006f\u006e" {
			_fadd, _fddfe := _eb.ParseUint(_fcgb.Value, 10, 8)
			if _fddfe != nil {
				return _fddfe
			}
			_fbea := uint8(_fadd)
			_gcab.TextRotationAttr = &_fbea
			continue
		}
		if _fcgb.Name.Local == "\u0077\u0072\u0061\u0070\u0054\u0065\u0078\u0074" {
			_gdd, _bacc := _eb.ParseBool(_fcgb.Value)
			if _bacc != nil {
				return _bacc
			}
			_gcab.WrapTextAttr = &_gdd
			continue
		}
		if _fcgb.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_gedbe, _dga := _eb.ParseUint(_fcgb.Value, 10, 32)
			if _dga != nil {
				return _dga
			}
			_efca := uint32(_gedbe)
			_gcab.IndentAttr = &_efca
			continue
		}
		if _fcgb.Name.Local == "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0049n\u0064\u0065\u006e\u0074" {
			_fafea, _fdge := _eb.ParseInt(_fcgb.Value, 10, 32)
			if _fdge != nil {
				return _fdge
			}
			_eeb := int32(_fafea)
			_gcab.RelativeIndentAttr = &_eeb
			continue
		}
		if _fcgb.Name.Local == "\u006au\u0073t\u0069\u0066\u0079\u004c\u0061\u0073\u0074\u004c\u0069\u006e\u0065" {
			_fcgf, _cgbg := _eb.ParseBool(_fcgb.Value)
			if _cgbg != nil {
				return _cgbg
			}
			_gcab.JustifyLastLineAttr = &_fcgf
			continue
		}
		if _fcgb.Name.Local == "s\u0068\u0072\u0069\u006e\u006b\u0054\u006f\u0046\u0069\u0074" {
			_deg, _ebeg := _eb.ParseBool(_fcgb.Value)
			if _ebeg != nil {
				return _ebeg
			}
			_gcab.ShrinkToFitAttr = &_deg
			continue
		}
		if _fcgb.Name.Local == "\u0072\u0065\u0061d\u0069\u006e\u0067\u004f\u0072\u0064\u0065\u0072" {
			_cefa, _dfba := _eb.ParseUint(_fcgb.Value, 10, 32)
			if _dfba != nil {
				return _dfba
			}
			_ebcd := uint32(_cefa)
			_gcab.ReadingOrderAttr = &_ebcd
			continue
		}
	}
	for {
		_bgcb, _eaag := d.Token()
		if _eaag != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006cA\u006ci\u0067\u006e\u006d\u0065\u006e\u0074\u003a \u0025\u0073", _eaag)
		}
		if _cbfc, _gde := _bgcb.(_b.EndElement); _gde && _cbfc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ecabe ST_BorderStyle) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_acbab := _b.Attr{}
	_acbab.Name = name
	switch _ecabe {
	case ST_BorderStyleUnset:
		_acbab.Value = ""
	case ST_BorderStyleNone:
		_acbab.Value = "\u006e\u006f\u006e\u0065"
	case ST_BorderStyleThin:
		_acbab.Value = "\u0074\u0068\u0069\u006e"
	case ST_BorderStyleMedium:
		_acbab.Value = "\u006d\u0065\u0064\u0069\u0075\u006d"
	case ST_BorderStyleDashed:
		_acbab.Value = "\u0064\u0061\u0073\u0068\u0065\u0064"
	case ST_BorderStyleDotted:
		_acbab.Value = "\u0064\u006f\u0074\u0074\u0065\u0064"
	case ST_BorderStyleThick:
		_acbab.Value = "\u0074\u0068\u0069c\u006b"
	case ST_BorderStyleDouble:
		_acbab.Value = "\u0064\u006f\u0075\u0062\u006c\u0065"
	case ST_BorderStyleHair:
		_acbab.Value = "\u0068\u0061\u0069\u0072"
	case ST_BorderStyleMediumDashed:
		_acbab.Value = "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064"
	case ST_BorderStyleDashDot:
		_acbab.Value = "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case ST_BorderStyleMediumDashDot:
		_acbab.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case ST_BorderStyleDashDotDot:
		_acbab.Value = "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case ST_BorderStyleMediumDashDotDot:
		_acbab.Value = "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case ST_BorderStyleSlantDashDot:
		_acbab.Value = "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	}
	return _acbab, nil
}

func (_feee *CT_Comment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", _feee.RefAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _feee.AuthorIdAttr)})
	if _feee.GuidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_feee.GuidAttr)})
	}
	if _feee.ShapeIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0061\u0070\u0065\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_feee.ShapeIdAttr)})
	}
	e.EncodeToken(start)
	_bacf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0065\u0078\u0074"}}
	e.EncodeElement(_feee.Text, _bacf)
	if _feee.CommentPr != nil {
		_geabb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072"}}
		e.EncodeElement(_feee.CommentPr, _geabb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_X struct {

	// Shared Items Index
	VAttr *int32
}

func NewCT_SheetDimension() *CT_SheetDimension { _faacd := &CT_SheetDimension{}; return _faacd }

type CT_Format struct {

	// Format Action
	ActionAttr ST_FormatAction

	// Format Id
	DxfIdAttr *uint32

	// Pivot Table Location
	PivotArea *CT_PivotArea

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

type ST_Objects byte

func (_egdbae ST_PhoneticType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_egdbae.String(), start)
}

// Validate validates the CT_Number and its children
func (_gbdbg *CT_Number) Validate() error {
	return _gbdbg.ValidateWithPath("\u0043T\u005f\u004e\u0075\u006d\u0062\u0065r")
}

func (_adcefcg *CT_UnderlineProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbedde := range start.Attr {
		if _gbedde.Name.Local == "\u0076\u0061\u006c" {
			_adcefcg.ValAttr.UnmarshalXMLAttr(_gbedde)
			continue
		}
	}
	for {
		_fbbff, _eddgd := d.Token()
		if _eddgd != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0055\u006e\u0064\u0065r\u006ci\u006e\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u003a\u0020\u0025\u0073", _eddgd)
		}
		if _bbefcd, _cbbgf := _fbbff.(_b.EndElement); _cbbgf && _bbefcd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gfbea *CT_PivotCacheDefinition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfbea.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_gfbea.IdAttr)})
	}
	if _gfbea.InvalidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069n\u0076\u0061\u006c\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfbea.InvalidAttr))})
	}
	if _gfbea.SaveDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfbea.SaveDataAttr))})
	}
	if _gfbea.RefreshOnLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfbea.RefreshOnLoadAttr))})
	}
	if _gfbea.OptimizeMemoryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0070\u0074\u0069\u006d\u0069\u007a\u0065\u004de\u006d\u006f\u0072\u0079"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfbea.OptimizeMemoryAttr))})
	}
	if _gfbea.EnableRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfbea.EnableRefreshAttr))})
	}
	if _gfbea.RefreshedByAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "r\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0042\u0079"}, Value: _ec.Sprintf("\u0025\u0076", *_gfbea.RefreshedByAttr)})
	}
	if _gfbea.RefreshedDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0044\u0061\u0074\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_gfbea.RefreshedDateAttr)})
	}
	if _gfbea.RefreshedDateIsoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0044\u0061\u0074\u0065\u0049\u0073\u006f"}, Value: _ec.Sprintf("\u0025\u0076", *_gfbea.RefreshedDateIsoAttr)})
	}
	if _gfbea.BackgroundQueryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062a\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0051\u0075\u0065\u0072\u0079"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfbea.BackgroundQueryAttr))})
	}
	if _gfbea.MissingItemsLimitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0049\u0074\u0065\u006d\u0073L\u0069\u006d\u0069\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_gfbea.MissingItemsLimitAttr)})
	}
	if _gfbea.CreatedVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_gfbea.CreatedVersionAttr)})
	}
	if _gfbea.RefreshedVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_gfbea.RefreshedVersionAttr)})
	}
	if _gfbea.MinRefreshableVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_gfbea.MinRefreshableVersionAttr)})
	}
	if _gfbea.RecordCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "r\u0065\u0063\u006f\u0072\u0064\u0043\u006f\u0075\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_gfbea.RecordCountAttr)})
	}
	if _gfbea.UpgradeOnRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0070g\u0072\u0061\u0064e\u004f\u006e\u0052\u0065\u0066\u0072\u0065\u0073\u0068"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfbea.UpgradeOnRefreshAttr))})
	}
	if _gfbea.TupleCacheAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfbea.TupleCacheAttr))})
	}
	if _gfbea.SupportSubqueryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073u\u0070p\u006f\u0072\u0074\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0079"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfbea.SupportSubqueryAttr))})
	}
	if _gfbea.SupportAdvancedDrillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0075p\u0070\u006f\u0072\u0074\u0041\u0064\u0076\u0061n\u0063\u0065\u0064\u0044ri\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfbea.SupportAdvancedDrillAttr))})
	}
	e.EncodeToken(start)
	_dedga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0053o\u0075\u0072\u0063\u0065"}}
	e.EncodeElement(_gfbea.CacheSource, _dedga)
	_fbeaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0046i\u0065\u006c\u0064\u0073"}}
	e.EncodeElement(_gfbea.CacheFields, _fbeaf)
	if _gfbea.CacheHierarchies != nil {
		_ecaecg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063ac\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}}
		e.EncodeElement(_gfbea.CacheHierarchies, _ecaecg)
	}
	if _gfbea.Kpis != nil {
		_bafdaf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006b\u0070\u0069\u0073"}}
		e.EncodeElement(_gfbea.Kpis, _bafdaf)
	}
	if _gfbea.TupleCache != nil {
		_aafc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}}
		e.EncodeElement(_gfbea.TupleCache, _aafc)
	}
	if _gfbea.CalculatedItems != nil {
		_ceefc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0061\u006c\u0063\u0075\u006ca\u0074\u0065d\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_gfbea.CalculatedItems, _ceefc)
	}
	if _gfbea.CalculatedMembers != nil {
		_bfged := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u004d\u0065\u006dbe\u0072\u0073"}}
		e.EncodeElement(_gfbea.CalculatedMembers, _bfged)
	}
	if _gfbea.Dimensions != nil {
		_ggbde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_gfbea.Dimensions, _ggbde)
	}
	if _gfbea.MeasureGroups != nil {
		_dabde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}}
		e.EncodeElement(_gfbea.MeasureGroups, _dabde)
	}
	if _gfbea.Maps != nil {
		_adeec := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006d\u0061\u0070\u0073"}}
		e.EncodeElement(_gfbea.Maps, _adeec)
	}
	if _gfbea.ExtLst != nil {
		_ffgfce := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gfbea.ExtLst, _ffgfce)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cggbc *CT_ExternalSheetName) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbbda := range start.Attr {
		if _cbbda.Name.Local == "\u0076\u0061\u006c" {
			_cggcf, _faafg := _cbbda.Value, error(nil)
			if _faafg != nil {
				return _faafg
			}
			_cggbc.ValAttr = &_cggcf
			continue
		}
	}
	for {
		_abgdf, _fbbg := d.Token()
		if _fbbg != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065r\u006ea\u006c\u0053\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u003a\u0020\u0025\u0073", _fbbg)
		}
		if _bdaebf, _ggde := _abgdf.(_b.EndElement); _ggde && _bdaebf.Name == start.Name {
			break
		}
	}
	return nil
}

func (_adce *CT_CellFormula) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _adce.TAttr != ST_CellFormulaTypeUnset {
		_gddb, _eeg := _adce.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _eeg != nil {
			return _eeg
		}
		start.Attr = append(start.Attr, _gddb)
	}
	if _adce.AcaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0063\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adce.AcaAttr))})
	}
	if _adce.RefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", *_adce.RefAttr)})
	}
	if _adce.Dt2DAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0074\u0032\u0044"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adce.Dt2DAttr))})
	}
	if _adce.DtrAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0074\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adce.DtrAttr))})
	}
	if _adce.Del1Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006c\u0031"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adce.Del1Attr))})
	}
	if _adce.Del2Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006c\u0032"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adce.Del2Attr))})
	}
	if _adce.R1Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0031"}, Value: _ec.Sprintf("\u0025\u0076", *_adce.R1Attr)})
	}
	if _adce.R2Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0032"}, Value: _ec.Sprintf("\u0025\u0076", *_adce.R2Attr)})
	}
	if _adce.CaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adce.CaAttr))})
	}
	if _adce.SiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0069"}, Value: _ec.Sprintf("\u0025\u0076", *_adce.SiAttr)})
	}
	if _adce.BxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0078"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adce.BxAttr))})
	}
	e.EncodeElement(_adce.Content, start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the Comments and its children
func (_becbcg *Comments) Validate() error {
	return _becbcg.ValidateWithPath("\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073")
}

type CT_CacheHierarchy struct {

	// Hierarchy Unique Name
	UniqueNameAttr string

	// Hierarchy Display Name
	CaptionAttr *string

	// Measure Hierarchy
	MeasureAttr *bool

	// Set
	SetAttr *bool

	// Parent Set
	ParentSetAttr *uint32

	// KPI Icon Set
	IconSetAttr *int32

	// Attribute Hierarchy
	AttributeAttr *bool

	// Time
	TimeAttr *bool

	// Key Attribute Hierarchy
	KeyAttributeAttr *bool

	// Default Member Unique Name
	DefaultMemberUniqueNameAttr *string

	// Unique Name of 'All'
	AllUniqueNameAttr *string

	// Display Name of 'All'
	AllCaptionAttr *string

	// Dimension Unique Name
	DimensionUniqueNameAttr *string

	// Display Folder
	DisplayFolderAttr *string

	// Measure Group Name
	MeasureGroupAttr *string

	// Measures
	MeasuresAttr *bool

	// Levels Count
	CountAttr uint32

	// One Field
	OneFieldAttr *bool

	// Member Value Data Type
	MemberValueDatatypeAttr *uint16

	// Unbalanced
	UnbalancedAttr *bool

	// Unbalanced Group
	UnbalancedGroupAttr *bool

	// Hidden
	HiddenAttr *bool

	// Fields Usage
	FieldsUsage *CT_FieldsUsage

	// OLAP Grouping Levels
	GroupLevels *CT_GroupLevels

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

type CT_GroupLevel struct {

	// Unique Name
	UniqueNameAttr string

	// Grouping Level Display Name
	CaptionAttr string

	// User-Defined Group Level
	UserAttr *bool

	// Custom Roll Up
	CustomRollUpAttr *bool

	// OLAP Level Groups
	Groups *CT_Groups

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_bbdag *CT_Number) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _agdbcd := range start.Attr {
		if _agdbcd.Name.Local == "\u0066\u0063" {
			_fefcd, _cdfddg := _agdbcd.Value, error(nil)
			if _cdfddg != nil {
				return _cdfddg
			}
			_bbdag.FcAttr = &_fefcd
			continue
		}
		if _agdbcd.Name.Local == "\u0076" {
			_gcfbg, _eada := _eb.ParseFloat(_agdbcd.Value, 64)
			if _eada != nil {
				return _eada
			}
			_bbdag.VAttr = _gcfbg
			continue
		}
		if _agdbcd.Name.Local == "\u0066" {
			_dabee, _gfdbf := _eb.ParseBool(_agdbcd.Value)
			if _gfdbf != nil {
				return _gfdbf
			}
			_bbdag.FAttr = &_dabee
			continue
		}
		if _agdbcd.Name.Local == "\u0063" {
			_agcfb, _bcgdc := _agdbcd.Value, error(nil)
			if _bcgdc != nil {
				return _bcgdc
			}
			_bbdag.CAttr = &_agcfb
			continue
		}
		if _agdbcd.Name.Local == "\u0063\u0070" {
			_faaeg, _gaae := _eb.ParseUint(_agdbcd.Value, 10, 32)
			if _gaae != nil {
				return _gaae
			}
			_adaeg := uint32(_faaeg)
			_bbdag.CpAttr = &_adaeg
			continue
		}
		if _agdbcd.Name.Local == "\u0069\u006e" {
			_dcfdd, _fddbc := _eb.ParseUint(_agdbcd.Value, 10, 32)
			if _fddbc != nil {
				return _fddbc
			}
			_cfeeb := uint32(_dcfdd)
			_bbdag.InAttr = &_cfeeb
			continue
		}
		if _agdbcd.Name.Local == "\u0062\u0063" {
			_dcede, _gedaa := _agdbcd.Value, error(nil)
			if _gedaa != nil {
				return _gedaa
			}
			_bbdag.BcAttr = &_dcede
			continue
		}
		if _agdbcd.Name.Local == "\u0075" {
			_cfcbf, _bgdcb := _eb.ParseBool(_agdbcd.Value)
			if _bgdcb != nil {
				return _bgdcb
			}
			_bbdag.UAttr = &_cfcbf
			continue
		}
		if _agdbcd.Name.Local == "\u0069" {
			_cedd, _dceg := _eb.ParseBool(_agdbcd.Value)
			if _dceg != nil {
				return _dceg
			}
			_bbdag.IAttr = &_cedd
			continue
		}
		if _agdbcd.Name.Local == "\u0075\u006e" {
			_gdade, _bdfcg := _eb.ParseBool(_agdbcd.Value)
			if _bdfcg != nil {
				return _bdfcg
			}
			_bbdag.UnAttr = &_gdade
			continue
		}
		if _agdbcd.Name.Local == "\u0073\u0074" {
			_gbcgf, _dagb := _eb.ParseBool(_agdbcd.Value)
			if _dagb != nil {
				return _dagb
			}
			_bbdag.StAttr = &_gbcgf
			continue
		}
		if _agdbcd.Name.Local == "\u0062" {
			_dbbgc, _bedgd := _eb.ParseBool(_agdbcd.Value)
			if _bedgd != nil {
				return _bedgd
			}
			_bbdag.BAttr = &_dbbgc
			continue
		}
	}
_cgcagd:
	for {
		_aebea, _ffdb := d.Token()
		if _ffdb != nil {
			return _ffdb
		}
		switch _ebcca := _aebea.(type) {
		case _b.StartElement:
			switch _ebcca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_bdgbd := NewCT_Tuples()
				if _bafa := d.DecodeElement(_bdgbd, &_ebcca); _bafa != nil {
					return _bafa
				}
				_bbdag.Tpls = append(_bbdag.Tpls, _bdgbd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_bbfae := NewCT_X()
				if _eedgc := d.DecodeElement(_bbfae, &_ebcca); _eedgc != nil {
					return _eedgc
				}
				_bbdag.X = append(_bbdag.X, _bbfae)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004e\u0075\u006db\u0065\u0072 \u0025\u0076", _ebcca.Name)
				if _ffede := d.Skip(); _ffede != nil {
					return _ffede
				}
			}
		case _b.EndElement:
			break _cgcagd
		case _b.CharData:
		}
	}
	return nil
}

type CT_Query struct {

	// MDX Query String
	MdxAttr string

	// Tuples
	Tpls *CT_Tuples
}

func (_ecdgg *CT_Tables) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ecdgg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ecdgg.CountAttr)})
	}
	e.EncodeToken(start)
	if _ecdgg.M != nil {
		_ddade := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _bgfdg := range _ecdgg.M {
			e.EncodeElement(_bgfdg, _ddade)
		}
	}
	if _ecdgg.S != nil {
		_ecgdd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _fgfgcc := range _ecdgg.S {
			e.EncodeElement(_fgfgcc, _ecgdd)
		}
	}
	if _ecdgg.X != nil {
		_cbbedd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _agcff := range _ecdgg.X {
			e.EncodeElement(_agcff, _cbbedd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_BorderPr and its children, prefixing error messages with path
func (_gdg *CT_BorderPr) ValidateWithPath(path string) error {
	if _caee := _gdg.StyleAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065\u0041\u0074\u0074\u0072"); _caee != nil {
		return _caee
	}
	if _gdg.Color != nil {
		if _adgf := _gdg.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _adgf != nil {
			return _adgf
		}
	}
	return nil
}

func (_efacda *CT_PivotHierarchy) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _agdbe := range start.Attr {
		if _agdbe.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061" {
			_gafbg, _gbage := _eb.ParseBool(_agdbe.Value)
			if _gbage != nil {
				return _gbage
			}
			_efacda.DragToDataAttr = &_gafbg
			continue
		}
		if _agdbe.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_dagcc, _adgfg := _eb.ParseBool(_agdbe.Value)
			if _adgfg != nil {
				return _adgfg
			}
			_efacda.OutlineAttr = &_dagcc
			continue
		}
		if _agdbe.Name.Local == "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070" {
			_fgaf, _cecdf := _eb.ParseBool(_agdbe.Value)
			if _cecdf != nil {
				return _cecdf
			}
			_efacda.SubtotalTopAttr = &_fgaf
			continue
		}
		if _agdbe.Name.Local == "\u0073h\u006fw\u0049\u006e\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074" {
			_aabff, _efcgf := _eb.ParseBool(_agdbe.Value)
			if _efcgf != nil {
				return _efcgf
			}
			_efacda.ShowInFieldListAttr = &_aabff
			continue
		}
		if _agdbe.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw" {
			_cedec, _bgada := _eb.ParseBool(_agdbe.Value)
			if _bgada != nil {
				return _bgada
			}
			_efacda.DragToRowAttr = &_cedec
			continue
		}
		if _agdbe.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl" {
			_bfacea, _fbdfa := _eb.ParseBool(_agdbe.Value)
			if _fbdfa != nil {
				return _fbdfa
			}
			_efacda.DragToColAttr = &_bfacea
			continue
		}
		if _agdbe.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065" {
			_ggggf, _ddde := _eb.ParseBool(_agdbe.Value)
			if _ddde != nil {
				return _ddde
			}
			_efacda.DragToPageAttr = &_ggggf
			continue
		}
		if _agdbe.Name.Local == "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064" {
			_aggfg, _cgdbg := _eb.ParseBool(_agdbe.Value)
			if _cgdbg != nil {
				return _cgdbg
			}
			_efacda.MultipleItemSelectionAllowedAttr = &_aggfg
			continue
		}
		if _agdbe.Name.Local == "\u0064r\u0061\u0067\u004f\u0066\u0066" {
			_bdadf, _ffffe := _eb.ParseBool(_agdbe.Value)
			if _ffffe != nil {
				return _ffffe
			}
			_efacda.DragOffAttr = &_bdadf
			continue
		}
		if _agdbe.Name.Local == "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072" {
			_dcdbbb, _bgcd := _eb.ParseBool(_agdbe.Value)
			if _bgcd != nil {
				return _bgcd
			}
			_efacda.IncludeNewItemsInFilterAttr = &_dcdbbb
			continue
		}
		if _agdbe.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_aggfgg, _dffgc := _agdbe.Value, error(nil)
			if _dffgc != nil {
				return _dffgc
			}
			_efacda.CaptionAttr = &_aggfgg
			continue
		}
	}
_eaeaca:
	for {
		_gceea, _bggafe := d.Token()
		if _bggafe != nil {
			return _bggafe
		}
		switch _ggcda := _gceea.(type) {
		case _b.StartElement:
			switch _ggcda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u0073"}:
				_efacda.Mps = NewCT_MemberProperties()
				if _faebd := d.DecodeElement(_efacda.Mps, &_ggcda); _faebd != nil {
					return _faebd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u006d\u0062\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u006d\u0062\u0065\u0072\u0073"}:
				_aacgfc := NewCT_Members()
				if _acffc := d.DecodeElement(_aacgfc, &_ggcda); _acffc != nil {
					return _acffc
				}
				_efacda.Members = append(_efacda.Members, _aacgfc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efacda.ExtLst = NewCT_ExtensionList()
				if _eeebf := d.DecodeElement(_efacda.ExtLst, &_ggcda); _eeebf != nil {
					return _eeebf
				}
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079\u0020\u0025\u0076", _ggcda.Name)
				if _fbeagf := d.Skip(); _fbeagf != nil {
					return _fbeagf
				}
			}
		case _b.EndElement:
			break _eaeaca
		case _b.CharData:
		}
	}
	return nil
}

type CT_PCDSCPage struct {

	// Page Item String Count
	CountAttr *uint32

	// Page Item
	PageItem []*CT_PageItem
}

func (_cbge *CT_DataValidations) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _daecc := range start.Attr {
		if _daecc.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0050\u0072o\u006d\u0070\u0074\u0073" {
			_cbgaf, _gaba := _eb.ParseBool(_daecc.Value)
			if _gaba != nil {
				return _gaba
			}
			_cbge.DisablePromptsAttr = &_cbgaf
			continue
		}
		if _daecc.Name.Local == "\u0078W\u0069\u006e\u0064\u006f\u0077" {
			_adfgc, _agfg := _eb.ParseUint(_daecc.Value, 10, 32)
			if _agfg != nil {
				return _agfg
			}
			_cgagd := uint32(_adfgc)
			_cbge.XWindowAttr = &_cgagd
			continue
		}
		if _daecc.Name.Local == "\u0079W\u0069\u006e\u0064\u006f\u0077" {
			_bggafb, _gdac := _eb.ParseUint(_daecc.Value, 10, 32)
			if _gdac != nil {
				return _gdac
			}
			_befad := uint32(_bggafb)
			_cbge.YWindowAttr = &_befad
			continue
		}
		if _daecc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eddae, _degb := _eb.ParseUint(_daecc.Value, 10, 32)
			if _degb != nil {
				return _degb
			}
			_gcdga := uint32(_eddae)
			_cbge.CountAttr = &_gcdga
			continue
		}
	}
_fgbg:
	for {
		_fgfcg, _eagcfg := d.Token()
		if _eagcfg != nil {
			return _eagcfg
		}
		switch _gcgee := _fgfcg.(type) {
		case _b.StartElement:
			switch _gcgee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"}:
				_eeeb := NewCT_DataValidation()
				if _adcef := d.DecodeElement(_eeeb, &_gcgee); _adcef != nil {
					return _adcef
				}
				_cbge.DataValidation = append(_cbge.DataValidation, _eeeb)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061l\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _gcgee.Name)
				if _abfd := d.Skip(); _abfd != nil {
					return _abfd
				}
			}
		case _b.EndElement:
			break _fgbg
		case _b.CharData:
		}
	}
	return nil
}

type PivotCacheDefinition struct{ CT_PivotCacheDefinition }

func (_gcbdc *CT_DdeValue) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gcbdc.TAttr != ST_DdeValueTypeUnset {
		_egfce, _fegeb := _gcbdc.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _fegeb != nil {
			return _fegeb
		}
		start.Attr = append(start.Attr, _egfce)
	}
	e.EncodeToken(start)
	_bgacc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0076\u0061\u006c"}}
	_f.AddPreserveSpaceAttr(&_bgacc, _gcbdc.Val)
	e.EncodeElement(_gcbdc.Val, _bgacc)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_PivotField() *CT_PivotField { _aabcb := &CT_PivotField{}; return _aabcb }

func (_gcbb *CT_ChartsheetPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfg := range start.Attr {
		if _cfg.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_ffda, _eeafg := _eb.ParseBool(_cfg.Value)
			if _eeafg != nil {
				return _eeafg
			}
			_gcbb.PublishedAttr = &_ffda
			continue
		}
		if _cfg.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_efbf, _cfcg := _cfg.Value, error(nil)
			if _cfcg != nil {
				return _cfcg
			}
			_gcbb.CodeNameAttr = &_efbf
			continue
		}
	}
_bgebb:
	for {
		_aaeg, _ebff := d.Token()
		if _ebff != nil {
			return _ebff
		}
		switch _aacfd := _aaeg.(type) {
		case _b.StartElement:
			switch _aacfd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}:
				_gcbb.TabColor = NewCT_Color()
				if _gegb := d.DecodeElement(_gcbb.TabColor, &_aacfd); _gegb != nil {
					return _gegb
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072\u0020\u0025\u0076", _aacfd.Name)
				if _ddbgc := d.Skip(); _ddbgc != nil {
					return _ddbgc
				}
			}
		case _b.EndElement:
			break _bgebb
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_DeletedField() *CT_DeletedField { _cdfddc := &CT_DeletedField{}; return _cdfddc }

// ValidateWithPath validates the CT_CustomProperty and its children, prefixing error messages with path
func (_gbcdc *CT_CustomProperty) ValidateWithPath(path string) error { return nil }

func (_eaecgd *PivotTableDefinition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003api\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e"
	return _eaecgd.CT_pivotTableDefinition.MarshalXML(e, start)
}

func (_bfeaae ST_GroupBy) ValidateWithPath(path string) error {
	switch _bfeaae {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bfeaae))
	}
	return nil
}

func NewCT_CommentList() *CT_CommentList { _abbb := &CT_CommentList{}; return _abbb }

type CT_ExternalLinkChoice struct {
	ExternalBook *CT_ExternalBook
	DdeLink      *CT_DdeLink
	OleLink      *CT_OleLink
}

// ValidateWithPath validates the CT_Extension and its children, prefixing error messages with path
func (_abba *CT_Extension) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_CalculatedItems and its children
func (_fbbe *CT_CalculatedItems) Validate() error {
	return _fbbe.ValidateWithPath("\u0043T\u005fC\u0061\u006c\u0063\u0075\u006ca\u0074\u0065d\u0049\u0074\u0065\u006d\u0073")
}

func (_ggfce *ST_SheetState) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ggfce = 0
	case "\u0076i\u0073\u0069\u0062\u006c\u0065":
		*_ggfce = 1
	case "\u0068\u0069\u0064\u0064\u0065\u006e":
		*_ggfce = 2
	case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
		*_ggfce = 3
	}
	return nil
}

func NewCT_PivotCacheDefinition() *CT_PivotCacheDefinition {
	_dgbb := &CT_PivotCacheDefinition{}
	_dgbb.CacheSource = NewCT_CacheSource()
	_dgbb.CacheFields = NewCT_CacheFields()
	return _dgbb
}

func (_ddgbe ST_Comments) String() string {
	switch _ddgbe {
	case 0:
		return ""
	case 1:
		return "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065"
	case 2:
		return "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	case 3:
		return "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074"
	}
	return ""
}

func (_cccb *CT_FilterColumn) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dabf := range start.Attr {
		if _dabf.Name.Local == "\u0063\u006f\u006cI\u0064" {
			_caaa, _egaa := _eb.ParseUint(_dabf.Value, 10, 32)
			if _egaa != nil {
				return _egaa
			}
			_cccb.ColIdAttr = uint32(_caaa)
			continue
		}
		if _dabf.Name.Local == "\u0068\u0069\u0064d\u0065\u006e\u0042\u0075\u0074\u0074\u006f\u006e" {
			_fgdfc, _ceea := _eb.ParseBool(_dabf.Value)
			if _ceea != nil {
				return _ceea
			}
			_cccb.HiddenButtonAttr = &_fgdfc
			continue
		}
		if _dabf.Name.Local == "\u0073\u0068\u006f\u0077\u0042\u0075\u0074\u0074\u006f\u006e" {
			_dadg, _bgeff := _eb.ParseBool(_dabf.Value)
			if _bgeff != nil {
				return _bgeff
			}
			_cccb.ShowButtonAttr = &_dadg
			continue
		}
	}
_fced:
	for {
		_ggebc, _bdeaa := d.Token()
		if _bdeaa != nil {
			return _bdeaa
		}
		switch _ggadg := _ggebc.(type) {
		case _b.StartElement:
			switch _ggadg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
				_cccb.Filters = NewCT_Filters()
				if _bacbg := d.DecodeElement(_cccb.Filters, &_ggadg); _bacbg != nil {
					return _bacbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u00701\u0030"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u00701\u0030"}:
				_cccb.Top10 = NewCT_Top10()
				if _dafca := d.DecodeElement(_cccb.Top10, &_ggadg); _dafca != nil {
					return _dafca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}:
				_cccb.CustomFilters = NewCT_CustomFilters()
				if _dbgcf := d.DecodeElement(_cccb.CustomFilters, &_ggadg); _dbgcf != nil {
					return _dbgcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0079\u006e\u0061\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0079\u006e\u0061\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_cccb.DynamicFilter = NewCT_DynamicFilter()
				if _fcaaa := d.DecodeElement(_cccb.DynamicFilter, &_ggadg); _fcaaa != nil {
					return _fcaaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_cccb.ColorFilter = NewCT_ColorFilter()
				if _ebbca := d.DecodeElement(_cccb.ColorFilter, &_ggadg); _ebbca != nil {
					return _ebbca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_cccb.IconFilter = NewCT_IconFilter()
				if _bcgfee := d.DecodeElement(_cccb.IconFilter, &_ggadg); _bcgfee != nil {
					return _bcgfee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cccb.ExtLst = NewCT_ExtensionList()
				if _abdac := d.DecodeElement(_cccb.ExtLst, &_ggadg); _abdac != nil {
					return _abdac
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006ct\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e\u0020\u0025\u0076", _ggadg.Name)
				if _efceg := d.Skip(); _efceg != nil {
					return _efceg
				}
			}
		case _b.EndElement:
			break _fced
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Table and its children
func (_dfafd *CT_Table) Validate() error {
	return _dfafd.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065")
}

// ValidateWithPath validates the CT_CacheHierarchies and its children, prefixing error messages with path
func (_eged *CT_CacheHierarchies) ValidateWithPath(path string) error {
	for _fcga, _eggf := range _eged.CacheHierarchy {
		if _eagc := _eggf.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0043\u0061ch\u0065H\u0069\u0065\u0072\u0061\u0072c\u0068\u0079\u005b\u0025\u0064\u005d", path, _fcga)); _eagc != nil {
			return _eagc
		}
	}
	return nil
}

func (_abbdad ST_DataValidationErrorStyle) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_eecbb := _b.Attr{}
	_eecbb.Name = name
	switch _abbdad {
	case ST_DataValidationErrorStyleUnset:
		_eecbb.Value = ""
	case ST_DataValidationErrorStyleStop:
		_eecbb.Value = "\u0073\u0074\u006f\u0070"
	case ST_DataValidationErrorStyleWarning:
		_eecbb.Value = "\u0077a\u0072\u006e\u0069\u006e\u0067"
	case ST_DataValidationErrorStyleInformation:
		_eecbb.Value = "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	}
	return _eecbb, nil
}

func NewCT_WorkbookPr() *CT_WorkbookPr { _ffgbbc := &CT_WorkbookPr{}; return _ffgbbc }

// Validate validates the CT_PivotArea and its children
func (_bgfee *CT_PivotArea) Validate() error {
	return _bgfee.ValidateWithPath("\u0043\u0054\u005fP\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061")
}

// Validate validates the CT_Member and its children
func (_fbbbfg *CT_Member) Validate() error {
	return _fbbbfg.ValidateWithPath("\u0043T\u005f\u004d\u0065\u006d\u0062\u0065r")
}

// ValidateWithPath validates the CT_LevelGroup and its children, prefixing error messages with path
func (_egea *CT_LevelGroup) ValidateWithPath(path string) error {
	if _aceaa := _egea.GroupMembers.ValidateWithPath(path + "\u002f\u0047\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"); _aceaa != nil {
		return _aceaa
	}
	return nil
}

func NewCT_XmlColumnPr() *CT_XmlColumnPr { _cgfbcf := &CT_XmlColumnPr{}; return _cgfbcf }

const (
	ST_TimePeriodUnset     ST_TimePeriod = 0
	ST_TimePeriodToday     ST_TimePeriod = 1
	ST_TimePeriodYesterday ST_TimePeriod = 2
	ST_TimePeriodTomorrow  ST_TimePeriod = 3
	ST_TimePeriodLast7Days ST_TimePeriod = 4
	ST_TimePeriodThisMonth ST_TimePeriod = 5
	ST_TimePeriodLastMonth ST_TimePeriod = 6
	ST_TimePeriodNextMonth ST_TimePeriod = 7
	ST_TimePeriodThisWeek  ST_TimePeriod = 8
	ST_TimePeriodLastWeek  ST_TimePeriod = 9
	ST_TimePeriodNextWeek  ST_TimePeriod = 10
)

func NewDialogsheet() *Dialogsheet {
	_ggagcc := &Dialogsheet{}
	_ggagcc.CT_Dialogsheet = *NewCT_Dialogsheet()
	return _ggagcc
}

func (_ceeef ST_MdxFunctionType) ValidateWithPath(path string) error {
	switch _ceeef {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ceeef))
	}
	return nil
}

func (_agagfc *CT_WorkbookPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _agagfc.Date1904Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0065\u0031\u0039\u0030\u0034"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_agagfc.Date1904Attr))})
	}
	if _agagfc.ShowObjectsAttr != ST_ObjectsUnset {
		_gfbag, _bfgce := _agagfc.ShowObjectsAttr.MarshalXMLAttr(_b.Name{Local: "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073"})
		if _bfgce != nil {
			return _bfgce
		}
		start.Attr = append(start.Attr, _gfbag)
	}
	if _agagfc.ShowBorderUnselectedTablesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0042\u006f\u0072\u0064\u0065\u0072\u0055n\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064\u0054\u0061b\u006c\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_agagfc.ShowBorderUnselectedTablesAttr))})
	}
	if _agagfc.FilterPrivacyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072\u0050\u0072\u0069\u0076\u0061\u0063\u0079"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_agagfc.FilterPrivacyAttr))})
	}
	if _agagfc.PromptedSolutionsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074\u0065\u0064\u0053\u006f\u006c\u0075t\u0069\u006f\u006e\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_agagfc.PromptedSolutionsAttr))})
	}
	if _agagfc.ShowInkAnnotationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0049\u006e\u006b\u0041\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_agagfc.ShowInkAnnotationAttr))})
	}
	if _agagfc.BackupFileAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0063\u006b\u0075\u0070\u0046\u0069\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_agagfc.BackupFileAttr))})
	}
	if _agagfc.SaveExternalLinkValuesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0061\u0076\u0065Ex\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0056\u0061\u006c\u0075e\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_agagfc.SaveExternalLinkValuesAttr))})
	}
	if _agagfc.UpdateLinksAttr != ST_UpdateLinksUnset {
		_dccgaf, _fefbf := _agagfc.UpdateLinksAttr.MarshalXMLAttr(_b.Name{Local: "u\u0070\u0064\u0061\u0074\u0065\u004c\u0069\u006e\u006b\u0073"})
		if _fefbf != nil {
			return _fefbf
		}
		start.Attr = append(start.Attr, _dccgaf)
	}
	if _agagfc.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_agagfc.CodeNameAttr)})
	}
	if _agagfc.HidePivotFieldListAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068i\u0064e\u0050\u0069\u0076\u006f\u0074F\u0069\u0065l\u0064\u004c\u0069\u0073\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_agagfc.HidePivotFieldListAttr))})
	}
	if _agagfc.ShowPivotChartFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068o\u0077\u0050\u0069\u0076\u006f\u0074\u0043\u0068a\u0072\u0074\u0046\u0069lt\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_agagfc.ShowPivotChartFilterAttr))})
	}
	if _agagfc.AllowRefreshQueryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0052\u0065\u0066\u0072\u0065\u0073\u0068Q\u0075\u0065\u0072\u0079"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_agagfc.AllowRefreshQueryAttr))})
	}
	if _agagfc.PublishItemsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0075\u0062l\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_agagfc.PublishItemsAttr))})
	}
	if _agagfc.CheckCompatibilityAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063h\u0065c\u006b\u0043\u006f\u006d\u0070a\u0074\u0069b\u0069\u006c\u0069\u0074\u0079"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_agagfc.CheckCompatibilityAttr))})
	}
	if _agagfc.AutoCompressPicturesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_agagfc.AutoCompressPicturesAttr))})
	}
	if _agagfc.RefreshAllConnectionsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "r\u0065\u0066\u0072\u0065sh\u0041l\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u0069\u006f\u006e\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_agagfc.RefreshAllConnectionsAttr))})
	}
	if _agagfc.DefaultThemeVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0066\u0061ul\u0074\u0054\u0068\u0065\u006d\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_agagfc.DefaultThemeVersionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cedbag ST_DataValidationOperator) Validate() error { return _cedbag.ValidateWithPath("") }

// Validate validates the CT_Index and its children
func (_bddfb *CT_Index) Validate() error {
	return _bddfb.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078")
}

func (_ddgb *CT_ExternalReferences) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_aegcg := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006cR\u0065\u0066\u0065\u0072en\u0063\u0065"}}
	for _, _ccacc := range _ddgb.ExternalReference {
		e.EncodeElement(_ccacc, _aegcg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_aeacc *Table) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aeacc.CT_Table = *NewCT_Table()
	for _, _dabeg := range start.Attr {
		if _dabeg.Name.Local == "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d" {
			_adcab, _bcede := _eb.ParseUint(_dabeg.Value, 10, 32)
			if _bcede != nil {
				return _bcede
			}
			_ebdge := uint32(_adcab)
			_aeacc.DataDxfIdAttr = &_ebdge
			continue
		}
		if _dabeg.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_cacgb, _ggdfc := _eb.ParseUint(_dabeg.Value, 10, 32)
			if _ggdfc != nil {
				return _ggdfc
			}
			_efeacb := uint32(_cacgb)
			_aeacc.TotalsRowDxfIdAttr = &_efeacb
			continue
		}
		if _dabeg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cddca, _ebbefg := _dabeg.Value, error(nil)
			if _ebbefg != nil {
				return _ebbefg
			}
			_aeacc.NameAttr = &_cddca
			continue
		}
		if _dabeg.Name.Local == "h\u0065a\u0064\u0065\u0072\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_bcdae, _afbdfg := _eb.ParseUint(_dabeg.Value, 10, 32)
			if _afbdfg != nil {
				return _afbdfg
			}
			_ccgdc := uint32(_bcdae)
			_aeacc.HeaderRowBorderDxfIdAttr = &_ccgdc
			continue
		}
		if _dabeg.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_eeeeg, _fdddd := _dabeg.Value, error(nil)
			if _fdddd != nil {
				return _fdddd
			}
			_aeacc.CommentAttr = &_eeeeg
			continue
		}
		if _dabeg.Name.Local == "\u0074\u0061b\u006c\u0065\u0042o\u0072\u0064\u0065\u0072\u0044\u0078\u0066\u0049\u0064" {
			_cbcbea, _cgcda := _eb.ParseUint(_dabeg.Value, 10, 32)
			if _cgcda != nil {
				return _cgcda
			}
			_cbccb := uint32(_cbcbea)
			_aeacc.TableBorderDxfIdAttr = &_cbccb
			continue
		}
		if _dabeg.Name.Local == "\u0074a\u0062\u006c\u0065\u0054\u0079\u0070e" {
			_aeacc.TableTypeAttr.UnmarshalXMLAttr(_dabeg)
			continue
		}
		if _dabeg.Name.Local == "t\u006ft\u0061\u006c\u0073\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_acace, _dcecca := _eb.ParseUint(_dabeg.Value, 10, 32)
			if _dcecca != nil {
				return _dcecca
			}
			_cagad := uint32(_acace)
			_aeacc.TotalsRowBorderDxfIdAttr = &_cagad
			continue
		}
		if _dabeg.Name.Local == "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw" {
			_gfbeag, _ggcbe := _eb.ParseBool(_dabeg.Value)
			if _ggcbe != nil {
				return _ggcbe
			}
			_aeacc.InsertRowAttr = &_gfbeag
			continue
		}
		if _dabeg.Name.Local == "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_cdbgeb, _ecgcef := _dabeg.Value, error(nil)
			if _ecgcef != nil {
				return _ecgcef
			}
			_aeacc.HeaderRowCellStyleAttr = &_cdbgeb
			continue
		}
		if _dabeg.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_ccecd, _fegcc := _eb.ParseUint(_dabeg.Value, 10, 32)
			if _fegcc != nil {
				return _fegcc
			}
			_cebfd := uint32(_ccecd)
			_aeacc.TotalsRowCountAttr = &_cebfd
			continue
		}
		if _dabeg.Name.Local == "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_bffae, _acegd := _dabeg.Value, error(nil)
			if _acegd != nil {
				return _acegd
			}
			_aeacc.TotalsRowCellStyleAttr = &_bffae
			continue
		}
		if _dabeg.Name.Local == "d\u0069\u0073\u0070\u006c\u0061\u0079\u004e\u0061\u006d\u0065" {
			_bfgcfc, _gefed := _dabeg.Value, error(nil)
			if _gefed != nil {
				return _gefed
			}
			_aeacc.DisplayNameAttr = _bfgcfc
			continue
		}
		if _dabeg.Name.Local == "\u0069\u0064" {
			_edaca, _cccgdb := _eb.ParseUint(_dabeg.Value, 10, 32)
			if _cccgdb != nil {
				return _cccgdb
			}
			_aeacc.IdAttr = uint32(_edaca)
			continue
		}
		if _dabeg.Name.Local == "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065" {
			_badaf, _bbdac := _dabeg.Value, error(nil)
			if _bbdac != nil {
				return _bbdac
			}
			_aeacc.DataCellStyleAttr = &_badaf
			continue
		}
		if _dabeg.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_afbdfga, _bfbgbb := _eb.ParseBool(_dabeg.Value)
			if _bfbgbb != nil {
				return _bfbgbb
			}
			_aeacc.PublishedAttr = &_afbdfga
			continue
		}
		if _dabeg.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_fdfec, _decabee := _eb.ParseUint(_dabeg.Value, 10, 32)
			if _decabee != nil {
				return _decabee
			}
			_bacae := uint32(_fdfec)
			_aeacc.ConnectionIdAttr = &_bacae
			continue
		}
		if _dabeg.Name.Local == "\u0072\u0065\u0066" {
			_fggfe, _cdfgbf := _dabeg.Value, error(nil)
			if _cdfgbf != nil {
				return _cdfgbf
			}
			_aeacc.RefAttr = _fggfe
			continue
		}
		if _dabeg.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077S\u0068\u0069\u0066\u0074" {
			_aaggg, _gbaeed := _eb.ParseBool(_dabeg.Value)
			if _gbaeed != nil {
				return _gbaeed
			}
			_aeacc.InsertRowShiftAttr = &_aaggg
			continue
		}
		if _dabeg.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077S\u0068\u006f\u0077\u006e" {
			_ffbdcg, _fbfbd := _eb.ParseBool(_dabeg.Value)
			if _fbfbd != nil {
				return _fbfbd
			}
			_aeacc.TotalsRowShownAttr = &_ffbdcg
			continue
		}
		if _dabeg.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_cgfdbe, _eebgg := _eb.ParseUint(_dabeg.Value, 10, 32)
			if _eebgg != nil {
				return _eebgg
			}
			_bcbbe := uint32(_cgfdbe)
			_aeacc.HeaderRowDxfIdAttr = &_bcbbe
			continue
		}
		if _dabeg.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_cfcec, _bbgge := _eb.ParseUint(_dabeg.Value, 10, 32)
			if _bbgge != nil {
				return _bbgge
			}
			_gcdcd := uint32(_cfcec)
			_aeacc.HeaderRowCountAttr = &_gcdcd
			continue
		}
	}
_adebcg:
	for {
		_bfgfafb, _gabgc := d.Token()
		if _gabgc != nil {
			return _gabgc
		}
		switch _agddf := _bfgfafb.(type) {
		case _b.StartElement:
			switch _agddf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_aeacc.AutoFilter = NewCT_AutoFilter()
				if _abacfd := d.DecodeElement(_aeacc.AutoFilter, &_agddf); _abacfd != nil {
					return _abacfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_aeacc.SortState = NewCT_SortState()
				if _cgffcb := d.DecodeElement(_aeacc.SortState, &_agddf); _cgffcb != nil {
					return _cgffcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}:
				if _agdcg := d.DecodeElement(_aeacc.TableColumns, &_agddf); _agdcg != nil {
					return _agdcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}:
				_aeacc.TableStyleInfo = NewCT_TableStyleInfo()
				if _bgbbf := d.DecodeElement(_aeacc.TableStyleInfo, &_agddf); _bgbbf != nil {
					return _bgbbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aeacc.ExtLst = NewCT_ExtensionList()
				if _cffdgf := d.DecodeElement(_aeacc.ExtLst, &_agddf); _cffdgf != nil {
					return _cffdgf
				}
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0061\u0062l\u0065 \u0025\u0076", _agddf.Name)
				if _bagag := d.Skip(); _bagag != nil {
					return _bagag
				}
			}
		case _b.EndElement:
			break _adebcg
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_RevisionQueryTableField() *CT_RevisionQueryTableField {
	_dfaeda := &CT_RevisionQueryTableField{}
	return _dfaeda
}

// ValidateWithPath validates the CT_SheetFormatPr and its children, prefixing error messages with path
func (_fefbecf *CT_SheetFormatPr) ValidateWithPath(path string) error { return nil }

func (_efbdb *CT_Revisions) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_aacff:
	for {
		_dfacf, _abgde := d.Token()
		if _abgde != nil {
			return _abgde
		}
		switch _dfegc := _dfacf.(type) {
		case _b.StartElement:
			switch _dfegc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}:
				_fdage := NewCT_RevisionRowColumn()
				if _fffeb := d.DecodeElement(_fdage, &_dfegc); _fffeb != nil {
					return _fffeb
				}
				_efbdb.Rrc = append(_efbdb.Rrc, _fdage)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}:
				_fbgbb := NewCT_RevisionMove()
				if _fddaf := d.DecodeElement(_fbgbb, &_dfegc); _fddaf != nil {
					return _fddaf
				}
				_efbdb.Rm = append(_efbdb.Rm, _fbgbb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}:
				_dgead := NewCT_RevisionCustomView()
				if _eafga := d.DecodeElement(_dgead, &_dfegc); _eafga != nil {
					return _eafga
				}
				_efbdb.Rcv = append(_efbdb.Rcv, _dgead)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}:
				_aaac := NewCT_RevisionSheetRename()
				if _fecdcb := d.DecodeElement(_aaac, &_dfegc); _fecdcb != nil {
					return _fecdcb
				}
				_efbdb.Rsnm = append(_efbdb.Rsnm, _aaac)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}:
				_gbecb := NewCT_RevisionInsertSheet()
				if _deagc := d.DecodeElement(_gbecb, &_dfegc); _deagc != nil {
					return _deagc
				}
				_efbdb.Ris = append(_efbdb.Ris, _gbecb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_fdae := NewCT_RevisionCellChange()
				if _cfeed := d.DecodeElement(_fdae, &_dfegc); _cfeed != nil {
					return _cfeed
				}
				_efbdb.Rcc = append(_efbdb.Rcc, _fdae)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_dcddg := NewCT_RevisionFormatting()
				if _cfdda := d.DecodeElement(_dcddg, &_dfegc); _cfdda != nil {
					return _cfdda
				}
				_efbdb.Rfmt = append(_efbdb.Rfmt, _dcddg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}:
				_fcgag := NewCT_RevisionAutoFormatting()
				if _dfbbb := d.DecodeElement(_fcgag, &_dfegc); _dfbbb != nil {
					return _dfbbb
				}
				_efbdb.Raf = append(_efbdb.Raf, _fcgag)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}:
				_gedadb := NewCT_RevisionDefinedName()
				if _dccae := d.DecodeElement(_gedadb, &_dfegc); _dccae != nil {
					return _dccae
				}
				_efbdb.Rdn = append(_efbdb.Rdn, _gedadb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}:
				_adgffa := NewCT_RevisionComment()
				if _addef := d.DecodeElement(_adgffa, &_dfegc); _addef != nil {
					return _addef
				}
				_efbdb.Rcmt = append(_efbdb.Rcmt, _adgffa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}:
				_gggae := NewCT_RevisionQueryTableField()
				if _babggd := d.DecodeElement(_gggae, &_dfegc); _babggd != nil {
					return _babggd
				}
				_efbdb.Rqt = append(_efbdb.Rqt, _gggae)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}:
				_ceafdb := NewCT_RevisionConflict()
				if _dgbca := d.DecodeElement(_ceafdb, &_dfegc); _dgbca != nil {
					return _dgbca
				}
				_efbdb.Rcft = append(_efbdb.Rcft, _ceafdb)
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u0065\u0076i\u0073\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _dfegc.Name)
				if _eegddb := d.Skip(); _eegddb != nil {
					return _eegddb
				}
			}
		case _b.EndElement:
			break _aacff
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_FieldSortTypeUnset      ST_FieldSortType = 0
	ST_FieldSortTypeManual     ST_FieldSortType = 1
	ST_FieldSortTypeAscending  ST_FieldSortType = 2
	ST_FieldSortTypeDescending ST_FieldSortType = 3
)

type CT_Pages struct {

	// Page Item String Count
	CountAttr *uint32

	// Page Items
	Page []*CT_PCDSCPage
}

type CT_OutlinePr struct {

	// Apply Styles in Outline
	ApplyStylesAttr *bool

	// Summary Below
	SummaryBelowAttr *bool

	// Summary Right
	SummaryRightAttr *bool

	// Show Outline Symbols
	ShowOutlineSymbolsAttr *bool
}

func NewCT_OleSize() *CT_OleSize { _egdeg := &CT_OleSize{}; return _egdeg }

func (_cbegd ST_UnderlineValues) ValidateWithPath(path string) error {
	switch _cbegd {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbegd))
	}
	return nil
}

func NewCT_CustomProperties() *CT_CustomProperties { _eceee := &CT_CustomProperties{}; return _eceee }

func (_dfgag *CT_Location) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", _dfgag.RefAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064e\u0072\u0052\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0076", _dfgag.FirstHeaderRowAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0052\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0076", _dfgag.FirstDataRowAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0043\u006f\u006c"}, Value: _ec.Sprintf("\u0025\u0076", _dfgag.FirstDataColAttr)})
	if _dfgag.RowPageCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0077P\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_dfgag.RowPageCountAttr)})
	}
	if _dfgag.ColPageCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006cP\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_dfgag.ColPageCountAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewConnections() *Connections {
	_bgeab := &Connections{}
	_bgeab.CT_Connections = *NewCT_Connections()
	return _bgeab
}

const (
	ST_SortTypeUnset             ST_SortType = 0
	ST_SortTypeNone              ST_SortType = 1
	ST_SortTypeAscending         ST_SortType = 2
	ST_SortTypeDescending        ST_SortType = 3
	ST_SortTypeAscendingAlpha    ST_SortType = 4
	ST_SortTypeDescendingAlpha   ST_SortType = 5
	ST_SortTypeAscendingNatural  ST_SortType = 6
	ST_SortTypeDescendingNatural ST_SortType = 7
)

func (_ecdd *CT_DbPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", _ecdd.ConnectionAttr)})
	if _ecdd.CommandAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u006d\u0061\u006e\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_ecdd.CommandAttr)})
	}
	if _ecdd.ServerCommandAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0043\u006f\u006d\u006d\u0061\u006e\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_ecdd.ServerCommandAttr)})
	}
	if _ecdd.CommandTypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006d\u006d\u0061\u006e\u0064\u0054\u0079\u0070\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_ecdd.CommandTypeAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ChartsheetViews and its children, prefixing error messages with path
func (_dceb *CT_ChartsheetViews) ValidateWithPath(path string) error {
	for _bcaf, _geec := range _dceb.SheetView {
		if _bbaa := _geec.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u0056\u0069\u0065\u0077\u005b\u0025\u0064\u005d", path, _bcaf)); _bbaa != nil {
			return _bbaa
		}
	}
	if _dceb.ExtLst != nil {
		if _gfbdf := _dceb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfbdf != nil {
			return _gfbdf
		}
	}
	return nil
}

// Validate validates the CT_GroupMembers and its children
func (_eadg *CT_GroupMembers) Validate() error {
	return _eadg.ValidateWithPath("\u0043T\u005fG\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073")
}

func (_bdaafe *ST_RevisionAction) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bdaafe = 0
	case "\u0061\u0064\u0064":
		*_bdaafe = 1
	case "\u0064\u0065\u006c\u0065\u0074\u0065":
		*_bdaafe = 2
	}
	return nil
}

type CT_TableStyleElement struct {

	// Table Style Type
	TypeAttr ST_TableStyleType

	// Band Size
	SizeAttr *uint32

	// Formatting Id
	DxfIdAttr *uint32
}

func NewCT_Field() *CT_Field { _gece := &CT_Field{}; return _gece }

type CT_SheetCalcPr struct {

	// Full Calculation On Load
	FullCalcOnLoadAttr *bool
}

// Validate validates the CT_VolMain and its children
func (_acfbd *CT_VolMain) Validate() error {
	return _acfbd.ValidateWithPath("\u0043\u0054\u005f\u0056\u006f\u006c\u004d\u0061\u0069\u006e")
}

// ValidateWithPath validates the CT_XStringElement and its children, prefixing error messages with path
func (_efcaf *CT_XStringElement) ValidateWithPath(path string) error { return nil }

type CT_IntProperty struct {

	// Value
	ValAttr int32
}

type CT_RowFields struct {

	// Repeated Items Count
	CountAttr *uint32

	// Row Items
	Field []*CT_Field
}

func (_gffcd ST_TextVAlign) Validate() error { return _gffcd.ValidateWithPath("") }

func (_bcggdg ST_SortBy) String() string {
	switch _bcggdg {
	case 0:
		return ""
	case 1:
		return "\u0076\u0061\u006cu\u0065"
	case 2:
		return "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr"
	case 3:
		return "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr"
	case 4:
		return "\u0069\u0063\u006f\u006e"
	}
	return ""
}

func (_fdeg *CT_Chartsheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fdeg.SheetViews = NewCT_ChartsheetViews()
	_fdeg.Drawing = NewCT_Drawing()
_eebf:
	for {
		_cddd, _abee := d.Token()
		if _abee != nil {
			return _abee
		}
		switch _bcac := _cddd.(type) {
		case _b.StartElement:
			switch _bcac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_fdeg.SheetPr = NewCT_ChartsheetPr()
				if _fdfc := d.DecodeElement(_fdeg.SheetPr, &_bcac); _fdfc != nil {
					return _fdfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				if _bcga := d.DecodeElement(_fdeg.SheetViews, &_bcac); _bcga != nil {
					return _bcga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_fdeg.SheetProtection = NewCT_ChartsheetProtection()
				if _aabb := d.DecodeElement(_fdeg.SheetProtection, &_bcac); _aabb != nil {
					return _aabb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_fdeg.CustomSheetViews = NewCT_CustomChartsheetViews()
				if _dgcc := d.DecodeElement(_fdeg.CustomSheetViews, &_bcac); _dgcc != nil {
					return _dgcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_fdeg.PageMargins = NewCT_PageMargins()
				if _gbaed := d.DecodeElement(_fdeg.PageMargins, &_bcac); _gbaed != nil {
					return _gbaed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_fdeg.PageSetup = NewCT_CsPageSetup()
				if _gggd := d.DecodeElement(_fdeg.PageSetup, &_bcac); _gggd != nil {
					return _gggd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_fdeg.HeaderFooter = NewCT_HeaderFooter()
				if _abgfe := d.DecodeElement(_fdeg.HeaderFooter, &_bcac); _abgfe != nil {
					return _abgfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				if _daad := d.DecodeElement(_fdeg.Drawing, &_bcac); _daad != nil {
					return _daad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_fdeg.LegacyDrawing = NewCT_LegacyDrawing()
				if _bgcbe := d.DecodeElement(_fdeg.LegacyDrawing, &_bcac); _bgcbe != nil {
					return _bgcbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_fdeg.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _bdbf := d.DecodeElement(_fdeg.LegacyDrawingHF, &_bcac); _bdbf != nil {
					return _bdbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_fdeg.DrawingHF = NewCT_DrawingHF()
				if _bbcf := d.DecodeElement(_fdeg.DrawingHF, &_bcac); _bbcf != nil {
					return _bbcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_fdeg.Picture = NewCT_SheetBackgroundPicture()
				if _effe := d.DecodeElement(_fdeg.Picture, &_bcac); _effe != nil {
					return _effe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_fdeg.WebPublishItems = NewCT_WebPublishItems()
				if _eeff := d.DecodeElement(_fdeg.WebPublishItems, &_bcac); _eeff != nil {
					return _eeff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdeg.ExtLst = NewCT_ExtensionList()
				if _dggc := d.DecodeElement(_fdeg.ExtLst, &_bcac); _dggc != nil {
					return _dggc
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043h\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074 \u0025\u0076", _bcac.Name)
				if _ebbcc := d.Skip(); _ebbcc != nil {
					return _ebbcc
				}
			}
		case _b.EndElement:
			break _eebf
		case _b.CharData:
		}
	}
	return nil
}

type CT_ExternalRow struct {

	// Row
	RAttr uint32

	// External Cell Data
	Cell []*CT_ExternalCell
}

// ValidateWithPath validates the CT_QueryTableField and its children, prefixing error messages with path
func (_edccb *CT_QueryTableField) ValidateWithPath(path string) error {
	if _edccb.ExtLst != nil {
		if _gfcag := _edccb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfcag != nil {
			return _gfcag
		}
	}
	return nil
}

func (_fcdgd *CT_WebPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbcbf := range start.Attr {
		if _cbcbf.Name.Local == "\u0078\u006c\u0032\u0030\u0030\u0030" {
			_eaddaf, _ceabcg := _eb.ParseBool(_cbcbf.Value)
			if _ceabcg != nil {
				return _ceabcg
			}
			_fcdgd.Xl2000Attr = &_eaddaf
			continue
		}
		if _cbcbf.Name.Local == "\u0078\u006d\u006c" {
			_dadacb, _eccdd := _eb.ParseBool(_cbcbf.Value)
			if _eccdd != nil {
				return _eccdd
			}
			_fcdgd.XmlAttr = &_dadacb
			continue
		}
		if _cbcbf.Name.Local == "\u0070\u0061\u0072\u0073\u0065\u0050\u0072\u0065" {
			_fcaca, _bcbabc := _eb.ParseBool(_cbcbf.Value)
			if _bcbabc != nil {
				return _bcbabc
			}
			_fcdgd.ParsePreAttr = &_fcaca
			continue
		}
		if _cbcbf.Name.Local == "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065" {
			_gccgb, _gdccb := _eb.ParseBool(_cbcbf.Value)
			if _gdccb != nil {
				return _gdccb
			}
			_fcdgd.ConsecutiveAttr = &_gccgb
			continue
		}
		if _cbcbf.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077" {
			_ggaaa, _fbefe := _eb.ParseBool(_cbcbf.Value)
			if _fbefe != nil {
				return _fbefe
			}
			_fcdgd.FirstRowAttr = &_ggaaa
			continue
		}
		if _cbcbf.Name.Local == "\u0078\u006c\u0039\u0037" {
			_eeafbb, _aggga := _eb.ParseBool(_cbcbf.Value)
			if _aggga != nil {
				return _aggga
			}
			_fcdgd.Xl97Attr = &_eeafbb
			continue
		}
		if _cbcbf.Name.Local == "\u0074e\u0078\u0074\u0044\u0061\u0074\u0065s" {
			_ggaad, _befffb := _eb.ParseBool(_cbcbf.Value)
			if _befffb != nil {
				return _befffb
			}
			_fcdgd.TextDatesAttr = &_ggaad
			continue
		}
		if _cbcbf.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0044\u0061\u0074\u0061" {
			_gfdbca, _gabeg := _eb.ParseBool(_cbcbf.Value)
			if _gabeg != nil {
				return _gabeg
			}
			_fcdgd.SourceDataAttr = &_gfdbca
			continue
		}
		if _cbcbf.Name.Local == "\u0075\u0072\u006c" {
			_eeaaf, _febbd := _cbcbf.Value, error(nil)
			if _febbd != nil {
				return _febbd
			}
			_fcdgd.UrlAttr = &_eeaaf
			continue
		}
		if _cbcbf.Name.Local == "\u0070\u006f\u0073\u0074" {
			_eaccff, _aegdb := _cbcbf.Value, error(nil)
			if _aegdb != nil {
				return _aegdb
			}
			_fcdgd.PostAttr = &_eaccff
			continue
		}
		if _cbcbf.Name.Local == "\u0068\u0074\u006d\u006c\u0054\u0061\u0062\u006c\u0065\u0073" {
			_aaegea, _cfaee := _eb.ParseBool(_cbcbf.Value)
			if _cfaee != nil {
				return _cfaee
			}
			_fcdgd.HtmlTablesAttr = &_aaegea
			continue
		}
		if _cbcbf.Name.Local == "\u0068\u0074\u006d\u006c\u0046\u006f\u0072\u006d\u0061\u0074" {
			_fcdgd.HtmlFormatAttr.UnmarshalXMLAttr(_cbcbf)
			continue
		}
		if _cbcbf.Name.Local == "\u0065\u0064\u0069\u0074\u0050\u0061\u0067\u0065" {
			_caaad, _dcffa := _cbcbf.Value, error(nil)
			if _dcffa != nil {
				return _dcffa
			}
			_fcdgd.EditPageAttr = &_caaad
			continue
		}
	}
_gcacd:
	for {
		_dcdge, _deebcg := d.Token()
		if _deebcg != nil {
			return _deebcg
		}
		switch _acgce := _dcdge.(type) {
		case _b.StartElement:
			switch _acgce.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0073"}:
				_fcdgd.Tables = NewCT_Tables()
				if _adbd := d.DecodeElement(_fcdgd.Tables, &_acgce); _adbd != nil {
					return _adbd
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072\u0020\u0025\u0076", _acgce.Name)
				if _bdggeg := d.Skip(); _bdggeg != nil {
					return _bdggeg
				}
			}
		case _b.EndElement:
			break _gcacd
		case _b.CharData:
		}
	}
	return nil
}

func (_fgdbca ST_FieldSortType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cccaeg := _b.Attr{}
	_cccaeg.Name = name
	switch _fgdbca {
	case ST_FieldSortTypeUnset:
		_cccaeg.Value = ""
	case ST_FieldSortTypeManual:
		_cccaeg.Value = "\u006d\u0061\u006e\u0075\u0061\u006c"
	case ST_FieldSortTypeAscending:
		_cccaeg.Value = "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case ST_FieldSortTypeDescending:
		_cccaeg.Value = "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	}
	return _cccaeg, nil
}

func NewCT_MeasureGroups() *CT_MeasureGroups { _gdcff := &CT_MeasureGroups{}; return _gdcff }

// Validate validates the CT_PivotCaches and its children
func (_bbgee *CT_PivotCaches) Validate() error {
	return _bbgee.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043a\u0063\u0068\u0065\u0073")
}

type CT_ServerFormat struct {

	// Culture
	CultureAttr *string

	// Format
	FormatAttr *string
}

func (_bgcdga *Workbook) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bgcdga.CT_Workbook = *NewCT_Workbook()
	for _, _cfggf := range start.Attr {
		if _cfggf.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_bgcdga.ConformanceAttr.UnmarshalXMLAttr(_cfggf)
			continue
		}
	}
_cdagb:
	for {
		_bgfea, _ebaff := d.Token()
		if _ebaff != nil {
			return _ebaff
		}
		switch _dbfca := _bgfea.(type) {
		case _b.StartElement:
			switch _dbfca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}:
				_bgcdga.FileVersion = NewCT_FileVersion()
				if _gbbgd := d.DecodeElement(_bgcdga.FileVersion, &_dbfca); _gbbgd != nil {
					return _gbbgd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}:
				_bgcdga.FileSharing = NewCT_FileSharing()
				if _gdcfge := d.DecodeElement(_bgcdga.FileSharing, &_dbfca); _gdcfge != nil {
					return _gdcfge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}:
				_bgcdga.WorkbookPr = NewCT_WorkbookPr()
				if _ecbcb := d.DecodeElement(_bgcdga.WorkbookPr, &_dbfca); _ecbcb != nil {
					return _ecbcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}:
				_bgcdga.WorkbookProtection = NewCT_WorkbookProtection()
				if _dacgbaf := d.DecodeElement(_bgcdga.WorkbookProtection, &_dbfca); _dacgbaf != nil {
					return _dacgbaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}:
				_bgcdga.BookViews = NewCT_BookViews()
				if _dabced := d.DecodeElement(_bgcdga.BookViews, &_dbfca); _dabced != nil {
					return _dabced
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}:
				if _cbedg := d.DecodeElement(_bgcdga.Sheets, &_dbfca); _cbedg != nil {
					return _cbedg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}:
				_bgcdga.FunctionGroups = NewCT_FunctionGroups()
				if _caefg := d.DecodeElement(_bgcdga.FunctionGroups, &_dbfca); _caefg != nil {
					return _caefg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}:
				_bgcdga.ExternalReferences = NewCT_ExternalReferences()
				if _bfdbc := d.DecodeElement(_bgcdga.ExternalReferences, &_dbfca); _bfdbc != nil {
					return _bfdbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}:
				_bgcdga.DefinedNames = NewCT_DefinedNames()
				if _bgabf := d.DecodeElement(_bgcdga.DefinedNames, &_dbfca); _bgabf != nil {
					return _bgabf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}:
				_bgcdga.CalcPr = NewCT_CalcPr()
				if _abfaa := d.DecodeElement(_bgcdga.CalcPr, &_dbfca); _abfaa != nil {
					return _abfaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}:
				_bgcdga.OleSize = NewCT_OleSize()
				if _gffed := d.DecodeElement(_bgcdga.OleSize, &_dbfca); _gffed != nil {
					return _gffed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}:
				_bgcdga.CustomWorkbookViews = NewCT_CustomWorkbookViews()
				if _ebbad := d.DecodeElement(_bgcdga.CustomWorkbookViews, &_dbfca); _ebbad != nil {
					return _ebbad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}:
				_bgcdga.PivotCaches = NewCT_PivotCaches()
				if _eddeb := d.DecodeElement(_bgcdga.PivotCaches, &_dbfca); _eddeb != nil {
					return _eddeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}:
				_bgcdga.SmartTagPr = NewCT_SmartTagPr()
				if _feeba := d.DecodeElement(_bgcdga.SmartTagPr, &_dbfca); _feeba != nil {
					return _feeba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}:
				_bgcdga.SmartTagTypes = NewCT_SmartTagTypes()
				if _daedb := d.DecodeElement(_bgcdga.SmartTagTypes, &_dbfca); _daedb != nil {
					return _daedb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}:
				_bgcdga.WebPublishing = NewCT_WebPublishing()
				if _ccbacb := d.DecodeElement(_bgcdga.WebPublishing, &_dbfca); _ccbacb != nil {
					return _ccbacb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}:
				_dggff := NewCT_FileRecoveryPr()
				if _eefbc := d.DecodeElement(_dggff, &_dbfca); _eefbc != nil {
					return _eefbc
				}
				_bgcdga.FileRecoveryPr = append(_bgcdga.FileRecoveryPr, _dggff)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}:
				_bgcdga.WebPublishObjects = NewCT_WebPublishObjects()
				if _agdfe := d.DecodeElement(_bgcdga.WebPublishObjects, &_dbfca); _agdfe != nil {
					return _agdfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgcdga.ExtLst = NewCT_ExtensionList()
				if _ebcecb := d.DecodeElement(_bgcdga.ExtLst, &_dbfca); _ebcecb != nil {
					return _ebcecb
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0020\u0025\u0076", _dbfca.Name)
				if _bbbcgb := d.Skip(); _bbbcgb != nil {
					return _bbbcgb
				}
			}
		case _b.EndElement:
			break _cdagb
		case _b.CharData:
		}
	}
	return nil
}

func (_ccgcg *ST_PivotFilterType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_beecg, _cdbfea := d.Token()
	if _cdbfea != nil {
		return _cdbfea
	}
	if _gdabed, _begac := _beecg.(_b.EndElement); _begac && _gdabed.Name == start.Name {
		*_ccgcg = 1
		return nil
	}
	if _dcfgge, _faabec := _beecg.(_b.CharData); !_faabec {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _beecg)
	} else {
		switch string(_dcfgge) {
		case "":
			*_ccgcg = 0
		case "\u0075n\u006b\u006e\u006f\u0077\u006e":
			*_ccgcg = 1
		case "\u0063\u006f\u0075n\u0074":
			*_ccgcg = 2
		case "\u0070e\u0072\u0063\u0065\u006e\u0074":
			*_ccgcg = 3
		case "\u0073\u0075\u006d":
			*_ccgcg = 4
		case "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c":
			*_ccgcg = 5
		case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_ccgcg = 6
		case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068":
			*_ccgcg = 7
		case "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068":
			*_ccgcg = 8
		case "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
			*_ccgcg = 9
		case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068":
			*_ccgcg = 10
		case "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
			*_ccgcg = 11
		case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073":
			*_ccgcg = 12
		case "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e":
			*_ccgcg = 13
		case "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l":
			*_ccgcg = 14
		case "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_ccgcg = 15
		case "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c":
			*_ccgcg = 16
		case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e":
			*_ccgcg = 17
		case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
			*_ccgcg = 18
		case "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c":
			*_ccgcg = 19
		case "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_ccgcg = 20
		case "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_ccgcg = 21
		case "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_ccgcg = 22
		case "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_ccgcg = 23
		case "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
			*_ccgcg = 24
		case "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_ccgcg = 25
		case "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_ccgcg = 26
		case "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l":
			*_ccgcg = 27
		case "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_ccgcg = 28
		case "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e":
			*_ccgcg = 29
		case "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
			*_ccgcg = 30
		case "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e":
			*_ccgcg = 31
		case "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
			*_ccgcg = 32
		case "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_ccgcg = 33
		case "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
			*_ccgcg = 34
		case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
			*_ccgcg = 35
		case "\u0074\u006f\u0064a\u0079":
			*_ccgcg = 36
		case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
			*_ccgcg = 37
		case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
			*_ccgcg = 38
		case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
			*_ccgcg = 39
		case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
			*_ccgcg = 40
		case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
			*_ccgcg = 41
		case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
			*_ccgcg = 42
		case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
			*_ccgcg = 43
		case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_ccgcg = 44
		case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_ccgcg = 45
		case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_ccgcg = 46
		case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
			*_ccgcg = 47
		case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
			*_ccgcg = 48
		case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
			*_ccgcg = 49
		case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
			*_ccgcg = 50
		case "\u0051\u0031":
			*_ccgcg = 51
		case "\u0051\u0032":
			*_ccgcg = 52
		case "\u0051\u0033":
			*_ccgcg = 53
		case "\u0051\u0034":
			*_ccgcg = 54
		case "\u004d\u0031":
			*_ccgcg = 55
		case "\u004d\u0032":
			*_ccgcg = 56
		case "\u004d\u0033":
			*_ccgcg = 57
		case "\u004d\u0034":
			*_ccgcg = 58
		case "\u004d\u0035":
			*_ccgcg = 59
		case "\u004d\u0036":
			*_ccgcg = 60
		case "\u004d\u0037":
			*_ccgcg = 61
		case "\u004d\u0038":
			*_ccgcg = 62
		case "\u004d\u0039":
			*_ccgcg = 63
		case "\u004d\u0031\u0030":
			*_ccgcg = 64
		case "\u004d\u0031\u0031":
			*_ccgcg = 65
		case "\u004d\u0031\u0032":
			*_ccgcg = 66
		}
	}
	_beecg, _cdbfea = d.Token()
	if _cdbfea != nil {
		return _cdbfea
	}
	if _ebccgf, _feefc := _beecg.(_b.EndElement); _feefc && _ebccgf.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _beecg)
}

func (_aacge ST_OleUpdate) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_aacge.String(), start)
}

func (_afdcg *CT_FontScheme) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_cfddf, _fffb := _afdcg.ValAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0061\u006c"})
	if _fffb != nil {
		return _fffb
	}
	start.Attr = append(start.Attr, _cfddf)
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_Row() *CT_Row { _ceegb := &CT_Row{}; return _ceegb }

// Validate validates the CT_DiscretePr and its children
func (_bcdec *CT_DiscretePr) Validate() error {
	return _bcdec.ValidateWithPath("\u0043\u0054\u005f\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072")
}

func NewCT_UnderlineProperty() *CT_UnderlineProperty {
	_ebefe := &CT_UnderlineProperty{}
	return _ebefe
}

func NewCT_TableStyleInfo() *CT_TableStyleInfo { _fgcdg := &CT_TableStyleInfo{}; return _fgcdg }

type ST_Comments byte

type CT_FontSize struct {

	// Value
	ValAttr float64
}

// Validate validates the CT_TableStyle and its children
func (_gcdfde *CT_TableStyle) Validate() error {
	return _gcdfde.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065")
}

// ValidateWithPath validates the CT_ConditionalFormatting and its children, prefixing error messages with path
func (_fbfb *CT_ConditionalFormatting) ValidateWithPath(path string) error {
	for _egfg, _aabbg := range _fbfb.CfRule {
		if _eabb := _aabbg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0043\u0066\u0052\u0075\u006c\u0065\u005b\u0025\u0064\u005d", path, _egfg)); _eabb != nil {
			return _eabb
		}
	}
	if _fbfb.ExtLst != nil {
		if _cgdc := _fbfb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cgdc != nil {
			return _cgdc
		}
	}
	return nil
}

type CT_CellSmartTags struct {

	// Reference
	RAttr string

	// Cell Smart Tag
	CellSmartTag []*CT_CellSmartTag
}

func (_cfegaa *QueryTable) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065"
	return _cfegaa.CT_QueryTable.MarshalXML(e, start)
}

// Validate validates the CT_CustomFilter and its children
func (_cbdcf *CT_CustomFilter) Validate() error {
	return _cbdcf.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072")
}

func (_dgabbb ST_TargetScreenSize) String() string {
	switch _dgabbb {
	case 0:
		return ""
	case 1:
		return "\u00354\u0034\u0078\u0033\u0037\u0036"
	case 2:
		return "\u00364\u0030\u0078\u0034\u0038\u0030"
	case 3:
		return "\u00372\u0030\u0078\u0035\u0031\u0032"
	case 4:
		return "\u00380\u0030\u0078\u0036\u0030\u0030"
	case 5:
		return "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case 6:
		return "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case 7:
		return "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case 8:
		return "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case 9:
		return "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case 10:
		return "\u00318\u0030\u0030\u0078\u0031\u0034\u00340"
	case 11:
		return "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return ""
}

func (_cbade *CT_PhoneticPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u006e\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _cbade.FontIdAttr)})
	if _cbade.TypeAttr != ST_PhoneticTypeUnset {
		_bacbgd, _egcfc := _cbade.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _egcfc != nil {
			return _egcfc
		}
		start.Attr = append(start.Attr, _bacbgd)
	}
	if _cbade.AlignmentAttr != ST_PhoneticAlignmentUnset {
		_cbgeb, _egabgg := _cbade.AlignmentAttr.MarshalXMLAttr(_b.Name{Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"})
		if _egabgg != nil {
			return _egabgg
		}
		start.Attr = append(start.Attr, _cbgeb)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SharedUser and its children
func (_fffbca *CT_SharedUser) Validate() error {
	return _fffbca.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0055\u0073\u0065\u0072")
}

func (_ffaaca *ST_RefMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ffaaca = 0
	case "\u0041\u0031":
		*_ffaaca = 1
	case "\u0052\u0031\u0043\u0031":
		*_ffaaca = 2
	}
	return nil
}

type CT_DiscretePr struct {

	// Mapping Index Count
	CountAttr *uint32

	// Element Group
	X []*CT_Index
}

type CT_DataValidation struct {

	// Data Validation Type
	TypeAttr ST_DataValidationType

	// Data Validation Error Style
	ErrorStyleAttr ST_DataValidationErrorStyle

	// IME Mode Enforced
	ImeModeAttr ST_DataValidationImeMode

	// Operator
	OperatorAttr ST_DataValidationOperator

	// Allow Blank
	AllowBlankAttr *bool

	// Show Drop Down
	ShowDropDownAttr *bool

	// Show Input Message
	ShowInputMessageAttr *bool

	// Show Error Message
	ShowErrorMessageAttr *bool

	// Error Alert Text
	ErrorTitleAttr *string

	// Error Message
	ErrorAttr *string

	// Prompt Title
	PromptTitleAttr *string

	// Input Prompt
	PromptAttr *string

	// Sequence of References
	SqrefAttr ST_Sqref

	// Formula 1
	Formula1 *string

	// Formula 2
	Formula2 *string
}

const (
	ST_FormatActionUnset      ST_FormatAction = 0
	ST_FormatActionBlank      ST_FormatAction = 1
	ST_FormatActionFormatting ST_FormatAction = 2
	ST_FormatActionDrill      ST_FormatAction = 3
	ST_FormatActionFormula    ST_FormatAction = 4
)

func (_ffgfea *ST_TextHAlign) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ffgfea = 0
	case "\u006c\u0065\u0066\u0074":
		*_ffgfea = 1
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_ffgfea = 2
	case "\u0072\u0069\u0067h\u0074":
		*_ffgfea = 3
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_ffgfea = 4
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_ffgfea = 5
	}
	return nil
}

type CT_MRUColors struct {

	// Color
	Color []*CT_Color
}

func (_ggcae *CT_MdxSet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dfgec := range start.Attr {
		if _dfgec.Name.Local == "\u006e\u0073" {
			_dcga, _acedb := _eb.ParseUint(_dfgec.Value, 10, 32)
			if _acedb != nil {
				return _acedb
			}
			_ggcae.NsAttr = uint32(_dcga)
			continue
		}
		if _dfgec.Name.Local == "\u0063" {
			_gaeg, _fbddd := _eb.ParseUint(_dfgec.Value, 10, 32)
			if _fbddd != nil {
				return _fbddd
			}
			_bgbeb := uint32(_gaeg)
			_ggcae.CAttr = &_bgbeb
			continue
		}
		if _dfgec.Name.Local == "\u006f" {
			_ggcae.OAttr.UnmarshalXMLAttr(_dfgec)
			continue
		}
	}
_ebgaa:
	for {
		_bgbgb, _gfbee := d.Token()
		if _gfbee != nil {
			return _gfbee
		}
		switch _aeebc := _bgbgb.(type) {
		case _b.StartElement:
			switch _aeebc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_geabf := NewCT_MetadataStringIndex()
				if _ggafb := d.DecodeElement(_geabf, &_aeebc); _ggafb != nil {
					return _ggafb
				}
				_ggcae.N = append(_ggcae.N, _geabf)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004d\u0064\u0078S\u0065\u0074 \u0025\u0076", _aeebc.Name)
				if _gfcbg := d.Skip(); _gfcbg != nil {
					return _gfcbg
				}
			}
		case _b.EndElement:
			break _ebgaa
		case _b.CharData:
		}
	}
	return nil
}

func (_fabef *ST_OleUpdate) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dgffg, _eadgb := d.Token()
	if _eadgb != nil {
		return _eadgb
	}
	if _dbdgdd, _gegbb := _dgffg.(_b.EndElement); _gegbb && _dbdgdd.Name == start.Name {
		*_fabef = 1
		return nil
	}
	if _feggf, _dbdcdf := _dgffg.(_b.CharData); !_dbdcdf {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgffg)
	} else {
		switch string(_feggf) {
		case "":
			*_fabef = 0
		case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053":
			*_fabef = 1
		case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c":
			*_fabef = 2
		}
	}
	_dgffg, _eadgb = d.Token()
	if _eadgb != nil {
		return _eadgb
	}
	if _bfbcg, _aaced := _dgffg.(_b.EndElement); _aaced && _bfbcg.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgffg)
}

// Validate validates the CT_TableFormula and its children
func (_cfeggc *CT_TableFormula) Validate() error {
	return _cfeggc.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061")
}

func (_fdca *CT_DdeItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gcdba := range start.Attr {
		if _gcdba.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gabda, _beabb := _gcdba.Value, error(nil)
			if _beabb != nil {
				return _beabb
			}
			_fdca.NameAttr = &_gabda
			continue
		}
		if _gcdba.Name.Local == "\u006f\u006c\u0065" {
			_dcedd, _bgcc := _eb.ParseBool(_gcdba.Value)
			if _bgcc != nil {
				return _bgcc
			}
			_fdca.OleAttr = &_dcedd
			continue
		}
		if _gcdba.Name.Local == "\u0061\u0064\u0076\u0069\u0073\u0065" {
			_bfba, _efgae := _eb.ParseBool(_gcdba.Value)
			if _efgae != nil {
				return _efgae
			}
			_fdca.AdviseAttr = &_bfba
			continue
		}
		if _gcdba.Name.Local == "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c" {
			_gffe, _egeg := _eb.ParseBool(_gcdba.Value)
			if _egeg != nil {
				return _egeg
			}
			_fdca.PreferPicAttr = &_gffe
			continue
		}
	}
_adea:
	for {
		_eggd, _addd := d.Token()
		if _addd != nil {
			return _addd
		}
		switch _dbege := _eggd.(type) {
		case _b.StartElement:
			switch _dbege.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u0073"}:
				_fdca.Values = NewCT_DdeValues()
				if _bcbac := d.DecodeElement(_fdca.Values, &_dbege); _bcbac != nil {
					return _bcbac
				}
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0064\u0065\u0049\u0074\u0065\u006d\u0020\u0025\u0076", _dbege.Name)
				if _dacce := d.Skip(); _dacce != nil {
					return _dacce
				}
			}
		case _b.EndElement:
			break _adea
		case _b.CharData:
		}
	}
	return nil
}

func NewCT_TupleCache() *CT_TupleCache { _dcege := &CT_TupleCache{}; return _dcege }

func (_gaef *CT_ExternalSheetData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adca := range start.Attr {
		if _adca.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_fegf, _aecga := _eb.ParseUint(_adca.Value, 10, 32)
			if _aecga != nil {
				return _aecga
			}
			_gaef.SheetIdAttr = uint32(_fegf)
			continue
		}
		if _adca.Name.Local == "\u0072\u0065\u0066r\u0065\u0073\u0068\u0045\u0072\u0072\u006f\u0072" {
			_cfacb, _abeaa := _eb.ParseBool(_adca.Value)
			if _abeaa != nil {
				return _abeaa
			}
			_gaef.RefreshErrorAttr = &_cfacb
			continue
		}
	}
_eeeca:
	for {
		_cdeb, _defega := d.Token()
		if _defega != nil {
			return _defega
		}
		switch _afbac := _cdeb.(type) {
		case _b.StartElement:
			switch _afbac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}:
				_ebgg := NewCT_ExternalRow()
				if _effd := d.DecodeElement(_ebgg, &_afbac); _effd != nil {
					return _effd
				}
				_gaef.Row = append(_gaef.Row, _ebgg)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0020\u0025\u0076", _afbac.Name)
				if _fbadc := d.Skip(); _fbadc != nil {
					return _fbadc
				}
			}
		case _b.EndElement:
			break _eeeca
		case _b.CharData:
		}
	}
	return nil
}

type Revisions struct{ CT_Revisions }

type ST_CalcMode byte

func (_ffaab *CT_Revisions) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ffaab.Rrc != nil {
		_cfddd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0072\u0063"}}
		for _, _bfddb := range _ffaab.Rrc {
			e.EncodeElement(_bfddb, _cfddd)
		}
	}
	if _ffaab.Rm != nil {
		_aebacg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u006d"}}
		for _, _bdeed := range _ffaab.Rm {
			e.EncodeElement(_bdeed, _aebacg)
		}
	}
	if _ffaab.Rcv != nil {
		_cdadb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0076"}}
		for _, _daecd := range _ffaab.Rcv {
			e.EncodeElement(_daecd, _cdadb)
		}
	}
	if _ffaab.Rsnm != nil {
		_geagfe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0072\u0073\u006e\u006d"}}
		for _, _aabfb := range _ffaab.Rsnm {
			e.EncodeElement(_aabfb, _geagfe)
		}
	}
	if _ffaab.Ris != nil {
		_ebegg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0069\u0073"}}
		for _, _eaaecc := range _ffaab.Ris {
			e.EncodeElement(_eaaecc, _ebegg)
		}
	}
	if _ffaab.Rcc != nil {
		_ddfdb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0063"}}
		for _, _agegb := range _ffaab.Rcc {
			e.EncodeElement(_agegb, _ddfdb)
		}
	}
	if _ffaab.Rfmt != nil {
		_ccbba := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0072\u0066\u006d\u0074"}}
		for _, _cabcgf := range _ffaab.Rfmt {
			e.EncodeElement(_cabcgf, _ccbba)
		}
	}
	if _ffaab.Raf != nil {
		_dcfcd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0061\u0066"}}
		for _, _fbge := range _ffaab.Raf {
			e.EncodeElement(_fbge, _dcfcd)
		}
	}
	if _ffaab.Rdn != nil {
		_dgafb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0064\u006e"}}
		for _, _beaae := range _ffaab.Rdn {
			e.EncodeElement(_beaae, _dgafb)
		}
	}
	if _ffaab.Rcmt != nil {
		_adgfbf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0072\u0063\u006d\u0074"}}
		for _, _afebb := range _ffaab.Rcmt {
			e.EncodeElement(_afebb, _adgfbf)
		}
	}
	if _ffaab.Rqt != nil {
		_acedfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0071\u0074"}}
		for _, _fbcbd := range _ffaab.Rqt {
			e.EncodeElement(_fbcbd, _acedfa)
		}
	}
	if _ffaab.Rcft != nil {
		_eagdg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0072\u0063\u0066\u0074"}}
		for _, _fedff := range _ffaab.Rcft {
			e.EncodeElement(_fedff, _eagdg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gbffc ST_FormulaExpression) ValidateWithPath(path string) error {
	switch _gbffc {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbffc))
	}
	return nil
}

func NewCT_OleLink() *CT_OleLink { _bddfd := &CT_OleLink{}; return _bddfd }

// Validate validates the CT_CacheSource and its children
func (_eece *CT_CacheSource) Validate() error {
	return _eece.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053o\u0075\u0072\u0063\u0065")
}

type CT_MapInfo struct {

	// Prefix Mappings for XPath Expressions
	SelectionNamespacesAttr string

	// XML Schema
	Schema []*CT_Schema

	// XML Mapping Properties
	Map []*CT_Map
}

func (_faffb ST_VerticalAlignment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_faffb.String(), start)
}

func (_deecb ST_IconSetType) ValidateWithPath(path string) error {
	switch _deecb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_deecb))
	}
	return nil
}

type ST_SortType byte

// Validate validates the ExternalLink and its children
func (_fgdge *ExternalLink) Validate() error {
	return _fgdge.ValidateWithPath("\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b")
}

func (_efbdfb ST_DataValidationErrorStyle) String() string {
	switch _efbdfb {
	case 0:
		return ""
	case 1:
		return "\u0073\u0074\u006f\u0070"
	case 2:
		return "\u0077a\u0072\u006e\u0069\u006e\u0067"
	case 3:
		return "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	}
	return ""
}

// ValidateWithPath validates the CT_MetadataRecord and its children, prefixing error messages with path
func (_eeca *CT_MetadataRecord) ValidateWithPath(path string) error { return nil }

func (_ffagg *CT_WorkbookProtection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ffagg.WorkbookPasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006fr\u006b\u0062\u006fo\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_ffagg.WorkbookPasswordAttr)})
	}
	if _ffagg.WorkbookPasswordCharacterSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006bb\u006f\u006f\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072d\u0043h\u0061\u0072\u0061\u0063\u0074\u0065\u0072S\u0065\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ffagg.WorkbookPasswordCharacterSetAttr)})
	}
	if _ffagg.RevisionsPasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073s\u0077\u006f\u0072\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_ffagg.RevisionsPasswordAttr)})
	}
	if _ffagg.RevisionsPasswordCharacterSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065v\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0043\u0068\u0061\u0072\u0061\u0063\u0074\u0065rS\u0065\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ffagg.RevisionsPasswordCharacterSetAttr)})
	}
	if _ffagg.LockStructureAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0053\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ffagg.LockStructureAttr))})
	}
	if _ffagg.LockWindowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "l\u006f\u0063\u006b\u0057\u0069\u006e\u0064\u006f\u0077\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ffagg.LockWindowsAttr))})
	}
	if _ffagg.LockRevisionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063k\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ffagg.LockRevisionAttr))})
	}
	if _ffagg.RevisionsAlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0076\u0069si\u006f\u006e\u0073\u0041\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061m\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_ffagg.RevisionsAlgorithmNameAttr)})
	}
	if _ffagg.RevisionsHashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073H\u0061\u0073h\u0056\u0061\u006c\u0075\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_ffagg.RevisionsHashValueAttr)})
	}
	if _ffagg.RevisionsSaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0061\u006ct\u0056\u0061\u006c\u0075\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_ffagg.RevisionsSaltValueAttr)})
	}
	if _ffagg.RevisionsSpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0070\u0069n\u0043\u006f\u0075\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ffagg.RevisionsSpinCountAttr)})
	}
	if _ffagg.WorkbookAlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "w\u006f\u0072\u006b\u0062oo\u006bA\u006c\u0067\u006f\u0072\u0069t\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_ffagg.WorkbookAlgorithmNameAttr)})
	}
	if _ffagg.WorkbookHashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0048\u0061\u0073\u0068V\u0061\u006c\u0075\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_ffagg.WorkbookHashValueAttr)})
	}
	if _ffagg.WorkbookSaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0061\u006c\u0074V\u0061\u006c\u0075\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_ffagg.WorkbookSaltValueAttr)})
	}
	if _ffagg.WorkbookSpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0070\u0069\u006eC\u006f\u0075\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ffagg.WorkbookSpinCountAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_abbee ST_Visibility) String() string {
	switch _abbee {
	case 0:
		return ""
	case 1:
		return "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case 2:
		return "\u0068\u0069\u0064\u0064\u0065\u006e"
	case 3:
		return "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return ""
}

func (_ebaeb *ST_SourceType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ebaeb = 0
	case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
		*_ebaeb = 1
	case "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c":
		*_ebaeb = 2
	case "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e":
		*_ebaeb = 3
	case "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f":
		*_ebaeb = 4
	}
	return nil
}

// ValidateWithPath validates the CT_GroupItems and its children, prefixing error messages with path
func (_dfeea *CT_GroupItems) ValidateWithPath(path string) error {
	for _acbgc, _bagad := range _dfeea.M {
		if _dbggc := _bagad.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _acbgc)); _dbggc != nil {
			return _dbggc
		}
	}
	for _acgbc, _cbaffe := range _dfeea.N {
		if _efefa := _cbaffe.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _acgbc)); _efefa != nil {
			return _efefa
		}
	}
	for _ebdf, _bfcgdd := range _dfeea.B {
		if _eabed := _bfcgdd.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _ebdf)); _eabed != nil {
			return _eabed
		}
	}
	for _gdcb, _bgfb := range _dfeea.E {
		if _aeff := _bgfb.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _gdcb)); _aeff != nil {
			return _aeff
		}
	}
	for _fgabc, _egfdc := range _dfeea.S {
		if _dfec := _egfdc.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _fgabc)); _dfec != nil {
			return _dfec
		}
	}
	for _egabg, _cgefb := range _dfeea.D {
		if _eagcfca := _cgefb.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0044\u005b\u0025\u0064\u005d", path, _egabg)); _eagcfca != nil {
			return _eagcfca
		}
	}
	return nil
}

func (_gfgde ST_DataValidationOperator) ValidateWithPath(path string) error {
	switch _gfgde {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gfgde))
	}
	return nil
}

// ValidateWithPath validates the CT_FontName and its children, prefixing error messages with path
func (_dfcbd *CT_FontName) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_ExternalRow and its children, prefixing error messages with path
func (_edad *CT_ExternalRow) ValidateWithPath(path string) error {
	for _cbfbf, _dfeac := range _edad.Cell {
		if _cfea := _dfeac.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u0043\u0065\u006c\u006c\u005b\u0025\u0064\u005d", path, _cbfbf)); _cfea != nil {
			return _cfea
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalSheetNames and its children, prefixing error messages with path
func (_afged *CT_ExternalSheetNames) ValidateWithPath(path string) error {
	for _aabc, _gebf := range _afged.SheetName {
		if _gagag := _gebf.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u004e\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _aabc)); _gagag != nil {
			return _gagag
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CacheSource and its children, prefixing error messages with path
func (_afag *CT_CacheSource) ValidateWithPath(path string) error {
	if _afag.TypeAttr == ST_SourceTypeUnset {
		return _ec.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gebc := _afag.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _gebc != nil {
		return _gebc
	}
	if _afag.WorksheetSource != nil {
		if _edff := _afag.WorksheetSource.ValidateWithPath(path + "\u002f\u0057o\u0072\u006b\u0073h\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"); _edff != nil {
			return _edff
		}
	}
	if _afag.Consolidation != nil {
		if _ddbg := _afag.Consolidation.ValidateWithPath(path + "\u002f\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"); _ddbg != nil {
			return _ddbg
		}
	}
	if _afag.ExtLst != nil {
		if _fbf := _afag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbf != nil {
			return _fbf
		}
	}
	return nil
}

func (_bddfdd ST_SmartTagShow) String() string {
	switch _bddfdd {
	case 0:
		return ""
	case 1:
		return "\u0061\u006c\u006c"
	case 2:
		return "\u006e\u006f\u006e\u0065"
	case 3:
		return "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	}
	return ""
}

type Connections struct{ CT_Connections }

const (
	ST_GrowShrinkTypeUnset          ST_GrowShrinkType = 0
	ST_GrowShrinkTypeInsertDelete   ST_GrowShrinkType = 1
	ST_GrowShrinkTypeInsertClear    ST_GrowShrinkType = 2
	ST_GrowShrinkTypeOverwriteClear ST_GrowShrinkType = 3
)

func (_fccee *CT_Field) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078"}, Value: _ec.Sprintf("\u0025\u0076", _fccee.XAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_CalculatedItem struct {

	// Field Index
	FieldAttr *uint32

	// Calculated Item Formula
	FormulaAttr *string

	// Calculated Item Location
	PivotArea *CT_PivotArea

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_geeaeb ST_FormulaExpression) String() string {
	switch _geeaeb {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u0066"
	case 2:
		return "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072"
	case 3:
		return "\u0061\u0072\u0065\u0061"
	case 4:
		return "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr"
	case 5:
		return "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061"
	}
	return ""
}

func (_ebccc *CT_PivotArea) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebccc.FieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_ebccc.FieldAttr)})
	}
	if _ebccc.TypeAttr != ST_PivotAreaTypeUnset {
		_febaab, _geaefd := _ebccc.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _geaefd != nil {
			return _geaefd
		}
		start.Attr = append(start.Attr, _febaab)
	}
	if _ebccc.DataOnlyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061\u004f\u006e\u006c\u0079"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ebccc.DataOnlyAttr))})
	}
	if _ebccc.LabelOnlyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ca\u0062\u0065\u006c\u004f\u006e\u006cy"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ebccc.LabelOnlyAttr))})
	}
	if _ebccc.GrandRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0061\u006e\u0064\u0052\u006f\u0077"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ebccc.GrandRowAttr))})
	}
	if _ebccc.GrandColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0061\u006e\u0064\u0043\u006f\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ebccc.GrandColAttr))})
	}
	if _ebccc.CacheIndexAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061\u0063\u0068\u0065\u0049\u006e\u0064\u0065\u0078"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ebccc.CacheIndexAttr))})
	}
	if _ebccc.OutlineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ebccc.OutlineAttr))})
	}
	if _ebccc.OffsetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0066\u0066\u0073\u0065\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_ebccc.OffsetAttr)})
	}
	if _ebccc.CollapsedLevelsAreSubtotalsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006c\u006c\u0061\u0070\u0073e\u0064\u004c\u0065\u0076\u0065\u006c\u0073\u0041\u0072e\u0053\u0075\u0062t\u006ft\u0061\u006c\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ebccc.CollapsedLevelsAreSubtotalsAttr))})
	}
	if _ebccc.AxisAttr != ST_AxisUnset {
		_acgbcf, _ffgfc := _ebccc.AxisAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0078\u0069\u0073"})
		if _ffgfc != nil {
			return _ffgfc
		}
		start.Attr = append(start.Attr, _acgbcf)
	}
	if _ebccc.FieldPositionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065\u006c\u0064\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_ebccc.FieldPositionAttr)})
	}
	e.EncodeToken(start)
	if _ebccc.References != nil {
		_afee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"}}
		e.EncodeElement(_ebccc.References, _afee)
	}
	if _ebccc.ExtLst != nil {
		_eefaea := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ebccc.ExtLst, _eefaea)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RevisionHeaders and its children, prefixing error messages with path
func (_ddca *CT_RevisionHeaders) ValidateWithPath(path string) error {
	if !_bb.ST_GuidPatternRe.MatchString(_ddca.GuidAttr) {
		return _ec.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _bb.ST_GuidPatternRe, _ddca.GuidAttr)
	}
	if _ddca.LastGuidAttr != nil {
		if !_bb.ST_GuidPatternRe.MatchString(*_ddca.LastGuidAttr) {
			return _ec.Errorf("\u0025\u0073\u002f\u006d\u002e\u004c\u0061s\u0074\u0047\u0075i\u0064\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _bb.ST_GuidPatternRe, *_ddca.LastGuidAttr)
		}
	}
	for _degdbg, _dabaa := range _ddca.Header {
		if _bbdff := _dabaa.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u005b\u0025\u0064\u005d", path, _degdbg)); _bbdff != nil {
			return _bbdff
		}
	}
	return nil
}

func (_gegdag *ST_SmartTagShow) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdgbfc, _gdbaa := d.Token()
	if _gdbaa != nil {
		return _gdbaa
	}
	if _gcbeb, _cgeffe := _bdgbfc.(_b.EndElement); _cgeffe && _gcbeb.Name == start.Name {
		*_gegdag = 1
		return nil
	}
	if _fbdgf, _cbdegf := _bdgbfc.(_b.CharData); !_cbdegf {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdgbfc)
	} else {
		switch string(_fbdgf) {
		case "":
			*_gegdag = 0
		case "\u0061\u006c\u006c":
			*_gegdag = 1
		case "\u006e\u006f\u006e\u0065":
			*_gegdag = 2
		case "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
			*_gegdag = 3
		}
	}
	_bdgbfc, _gdbaa = d.Token()
	if _gdbaa != nil {
		return _gdbaa
	}
	if _eaccc, _acddf := _bdgbfc.(_b.EndElement); _acddf && _eaccc.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdgbfc)
}

func (_efdfc ST_WebSourceType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_efdfc.String(), start)
}

func NewCT_MeasureDimensionMaps() *CT_MeasureDimensionMaps {
	_ccaae := &CT_MeasureDimensionMaps{}
	return _ccaae
}

func (_ggbbbc *CT_Number) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _ec.Sprintf("\u0025\u0076", _ggbbbc.VAttr)})
	if _ggbbbc.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ggbbbc.UAttr))})
	}
	if _ggbbbc.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ggbbbc.FAttr))})
	}
	if _ggbbbc.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_ggbbbc.CAttr)})
	}
	if _ggbbbc.CpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0070"}, Value: _ec.Sprintf("\u0025\u0076", *_ggbbbc.CpAttr)})
	}
	if _ggbbbc.InAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_ggbbbc.InAttr)})
	}
	if _ggbbbc.BcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_ggbbbc.BcAttr)})
	}
	if _ggbbbc.FcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_ggbbbc.FcAttr)})
	}
	if _ggbbbc.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ggbbbc.IAttr))})
	}
	if _ggbbbc.UnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ggbbbc.UnAttr))})
	}
	if _ggbbbc.StAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ggbbbc.StAttr))})
	}
	if _ggbbbc.BAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ggbbbc.BAttr))})
	}
	e.EncodeToken(start)
	if _ggbbbc.Tpls != nil {
		_gbfaa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _gdgcb := range _ggbbbc.Tpls {
			e.EncodeElement(_gdgcb, _gbfaa)
		}
	}
	if _ggbbbc.X != nil {
		_aegf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _aabca := range _ggbbbc.X {
			e.EncodeElement(_aabca, _aegf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cbgag *CT_DdeItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbgag.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_cbgag.NameAttr)})
	}
	if _cbgag.OleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cbgag.OleAttr))})
	}
	if _cbgag.AdviseAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0064\u0076\u0069\u0073\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cbgag.AdviseAttr))})
	}
	if _cbgag.PreferPicAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cbgag.PreferPicAttr))})
	}
	e.EncodeToken(start)
	if _cbgag.Values != nil {
		_dabag := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0076\u0061\u006c\u0075\u0065s"}}
		e.EncodeElement(_cbgag.Values, _dabag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fegaa *CT_Row) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fegaa.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_fegaa.RAttr)})
	}
	if _fegaa.SpansAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0061n\u0073"}, Value: _ec.Sprintf("\u0025\u0076", *_fegaa.SpansAttr)})
	}
	if _fegaa.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _ec.Sprintf("\u0025\u0076", *_fegaa.SAttr)})
	}
	if _fegaa.CustomFormatAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0046\u006f\u0072\u006d\u0061\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fegaa.CustomFormatAttr))})
	}
	if _fegaa.HtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_fegaa.HtAttr)})
	}
	if _fegaa.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fegaa.HiddenAttr))})
	}
	if _fegaa.CustomHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fegaa.CustomHeightAttr))})
	}
	if _fegaa.OutlineLevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_fegaa.OutlineLevelAttr)})
	}
	if _fegaa.CollapsedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fegaa.CollapsedAttr))})
	}
	if _fegaa.ThickTopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fegaa.ThickTopAttr))})
	}
	if _fegaa.ThickBotAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0068\u0069\u0063\u006b\u0042\u006f\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fegaa.ThickBotAttr))})
	}
	if _fegaa.PhAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0068"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fegaa.PhAttr))})
	}
	e.EncodeToken(start)
	if _fegaa.C != nil {
		_fdcae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063"}}
		for _, _gdee := range _fegaa.C {
			e.EncodeElement(_gdee, _fdcae)
		}
	}
	if _fegaa.ExtLst != nil {
		_aadfg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fegaa.ExtLst, _aadfg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cebeg ST_Orientation) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cebeg.String(), start)
}

func (_eegde ST_DataValidationErrorStyle) Validate() error { return _eegde.ValidateWithPath("") }

func (_afadc *CT_CsPageSetup) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cdfdd := range start.Attr {
		if _cdfdd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cdfdd.Name.Local == "\u0069\u0064" || _cdfdd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cdfdd.Name.Local == "\u0069\u0064" {
			_fbdbb, _beca := _cdfdd.Value, error(nil)
			if _beca != nil {
				return _beca
			}
			_afadc.IdAttr = &_fbdbb
			continue
		}
		if _cdfdd.Name.Local == "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae" {
			_gggbd, _ffbbf := _eb.ParseUint(_cdfdd.Value, 10, 32)
			if _ffbbf != nil {
				return _ffbbf
			}
			_bagf := uint32(_gggbd)
			_afadc.PaperSizeAttr = &_bagf
			continue
		}
		if _cdfdd.Name.Local == "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068" {
			_ccfe, _cgccc := _cdfdd.Value, error(nil)
			if _cgccc != nil {
				return _cgccc
			}
			_afadc.PaperWidthAttr = &_ccfe
			continue
		}
		if _cdfdd.Name.Local == "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072" {
			_cgced, _dcbf := _eb.ParseUint(_cdfdd.Value, 10, 32)
			if _dcbf != nil {
				return _dcbf
			}
			_beagb := uint32(_cgced)
			_afadc.FirstPageNumberAttr = &_beagb
			continue
		}
		if _cdfdd.Name.Local == "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e" {
			_afadc.OrientationAttr.UnmarshalXMLAttr(_cdfdd)
			continue
		}
		if _cdfdd.Name.Local == "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073" {
			_agcc, _fgfca := _eb.ParseBool(_cdfdd.Value)
			if _fgfca != nil {
				return _fgfca
			}
			_afadc.UsePrinterDefaultsAttr = &_agcc
			continue
		}
		if _cdfdd.Name.Local == "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074" {
			_cddc, _gdfdg := _cdfdd.Value, error(nil)
			if _gdfdg != nil {
				return _gdfdg
			}
			_afadc.PaperHeightAttr = &_cddc
			continue
		}
		if _cdfdd.Name.Local == "\u0064\u0072\u0061f\u0074" {
			_gcebd, _ffde := _eb.ParseBool(_cdfdd.Value)
			if _ffde != nil {
				return _ffde
			}
			_afadc.DraftAttr = &_gcebd
			continue
		}
		if _cdfdd.Name.Local == "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072" {
			_cgffg, _accad := _eb.ParseBool(_cdfdd.Value)
			if _accad != nil {
				return _accad
			}
			_afadc.UseFirstPageNumberAttr = &_cgffg
			continue
		}
		if _cdfdd.Name.Local == "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069" {
			_ffgce, _bcbc := _eb.ParseUint(_cdfdd.Value, 10, 32)
			if _bcbc != nil {
				return _bcbc
			}
			_ffeedf := uint32(_ffgce)
			_afadc.HorizontalDpiAttr = &_ffeedf
			continue
		}
		if _cdfdd.Name.Local == "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069" {
			_efeeb, _eedba := _eb.ParseUint(_cdfdd.Value, 10, 32)
			if _eedba != nil {
				return _eedba
			}
			_bfegg := uint32(_efeeb)
			_afadc.VerticalDpiAttr = &_bfegg
			continue
		}
		if _cdfdd.Name.Local == "\u0063\u006f\u0070\u0069\u0065\u0073" {
			_gbbf, _gcgg := _eb.ParseUint(_cdfdd.Value, 10, 32)
			if _gcgg != nil {
				return _gcgg
			}
			_geabc := uint32(_gbbf)
			_afadc.CopiesAttr = &_geabc
			continue
		}
		if _cdfdd.Name.Local == "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065" {
			_gaec, _edda := _eb.ParseBool(_cdfdd.Value)
			if _edda != nil {
				return _edda
			}
			_afadc.BlackAndWhiteAttr = &_gaec
			continue
		}
	}
	for {
		_cbcec, _bcdc := d.Token()
		if _bcdc != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u0073\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070:\u0020\u0025\u0073", _bcdc)
		}
		if _ccbf, _dcag := _cbcec.(_b.EndElement); _dcag && _ccbf.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_UpdateLinks byte

func (_gedc *CT_DataBinding) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gedc.DataBindingNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0044a\u0074a\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_gedc.DataBindingNameAttr)})
	}
	if _gedc.FileBindingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "F\u0069\u006c\u0065\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gedc.FileBindingAttr))})
	}
	if _gedc.ConnectionIDAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0043\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0044"}, Value: _ec.Sprintf("\u0025\u0076", *_gedc.ConnectionIDAttr)})
	}
	if _gedc.FileBindingNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0046i\u006ce\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_gedc.FileBindingNameAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0044\u0061\u0074\u0061Bi\u006e\u0064\u0069\u006e\u0067\u004c\u006f\u0061\u0064\u004d\u006f\u0064\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _gedc.DataBindingLoadModeAttr)})
	e.EncodeToken(start)
	if _gedc.Any != nil {
		_gedc.Any.MarshalXML(e, _b.StartElement{})
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PivotAreaReferences and its children, prefixing error messages with path
func (_ddaec *CT_PivotAreaReferences) ValidateWithPath(path string) error {
	for _bgeecb, _dgadbg := range _ddaec.Reference {
		if _bcgeb := _dgadbg.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u005b\u0025\u0064\u005d", path, _bgeecb)); _bcgeb != nil {
			return _bcgeb
		}
	}
	return nil
}

type CT_PivotFilter struct {

	// Field Index
	FldAttr uint32

	// Member Property Field Id
	MpFldAttr *uint32

	// Pivot Filter Type
	TypeAttr ST_PivotFilterType

	// Evaluation Order
	EvalOrderAttr *int32

	// Pivot Filter Id
	IdAttr uint32

	// Measure Index
	IMeasureHierAttr *uint32

	// Measure Field Index
	IMeasureFldAttr *uint32

	// Pivot Filter Name
	NameAttr *string

	// Pivot Filter Description
	DescriptionAttr *string

	// Label Pivot
	StringValue1Attr *string

	// Label Pivot Filter String Value 2
	StringValue2Attr *string

	// Auto Filter
	AutoFilter *CT_AutoFilter
	ExtLst     *CT_ExtensionList
}

func NewCT_CalcCell() *CT_CalcCell { _afae := &CT_CalcCell{}; return _afae }

func NewCT_MRUColors() *CT_MRUColors { _dfbd := &CT_MRUColors{}; return _dfbd }

func (_bcgf *CT_CellSmartTagPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006b\u0065\u0079"}, Value: _ec.Sprintf("\u0025\u0076", _bcgf.KeyAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", _bcgf.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_MRUColors and its children
func (_agdbc *CT_MRUColors) Validate() error {
	return _agdbc.ValidateWithPath("\u0043\u0054\u005fM\u0052\u0055\u0043\u006f\u006c\u006f\u0072\u0073")
}

func NewPivotCacheRecords() *PivotCacheRecords {
	_adgggg := &PivotCacheRecords{}
	_adgggg.CT_PivotCacheRecords = *NewCT_PivotCacheRecords()
	return _adgggg
}

func (_dagegb ST_CalcMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fgccc := _b.Attr{}
	_fgccc.Name = name
	switch _dagegb {
	case ST_CalcModeUnset:
		_fgccc.Value = ""
	case ST_CalcModeManual:
		_fgccc.Value = "\u006d\u0061\u006e\u0075\u0061\u006c"
	case ST_CalcModeAuto:
		_fgccc.Value = "\u0061\u0075\u0074\u006f"
	case ST_CalcModeAutoNoTable:
		_fgccc.Value = "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065"
	}
	return _fgccc, nil
}

func NewStyleSheet() *StyleSheet {
	_caabb := &StyleSheet{}
	_caabb.CT_Stylesheet = *NewCT_Stylesheet()
	return _caabb
}

func (_fbgad *CT_Parameters) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fbgad.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_fbgad.CountAttr)})
	}
	e.EncodeToken(start)
	_bbcba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072"}}
	for _, _egfe := range _fbgad.Parameter {
		e.EncodeElement(_egfe, _bbcba)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DataRef and its children
func (_facb *CT_DataRef) Validate() error {
	return _facb.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066")
}

func NewCT_Groups() *CT_Groups { _fafdb := &CT_Groups{}; return _fafdb }

// Validate validates the CT_ExternalBook and its children
func (_ecdgc *CT_ExternalBook) Validate() error {
	return _ecdgc.ValidateWithPath("\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b")
}

func NewCalcChain() *CalcChain {
	_bfgae := &CalcChain{}
	_bfgae.CT_CalcChain = *NewCT_CalcChain()
	return _bfgae
}

type CT_WorkbookPr struct {

	// Date 1904
	Date1904Attr *bool

	// Show Objects
	ShowObjectsAttr ST_Objects

	// Show Border Unselected Table
	ShowBorderUnselectedTablesAttr *bool

	// Filter Privacy
	FilterPrivacyAttr *bool

	// Prompted Solutions
	PromptedSolutionsAttr *bool

	// Show Ink Annotations
	ShowInkAnnotationAttr *bool

	// Create Backup File
	BackupFileAttr *bool

	// Save External Link Values
	SaveExternalLinkValuesAttr *bool

	// Update Links Behavior
	UpdateLinksAttr ST_UpdateLinks

	// Code Name
	CodeNameAttr *string

	// Hide Pivot Field List
	HidePivotFieldListAttr *bool

	// Show Pivot Chart Filter
	ShowPivotChartFilterAttr *bool

	// Allow Refresh Query
	AllowRefreshQueryAttr *bool

	// Publish Items
	PublishItemsAttr *bool

	// Check Compatibility On Save
	CheckCompatibilityAttr *bool

	// Auto Compress Pictures
	AutoCompressPicturesAttr *bool

	// Refresh all Connections on Open
	RefreshAllConnectionsAttr *bool

	// Default Theme Version
	DefaultThemeVersionAttr *uint32
}

func (_fgdbe ST_BorderStyle) ValidateWithPath(path string) error {
	switch _fgdbe {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgdbe))
	}
	return nil
}

// Validate validates the CT_ChartsheetPr and its children
func (_fece *CT_ChartsheetPr) Validate() error {
	return _fece.ValidateWithPath("\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072")
}

func NewCT_PageMargins() *CT_PageMargins { _dbdcd := &CT_PageMargins{}; return _dbdcd }

// Validate validates the CT_MetadataBlock and its children
func (_gdggf *CT_MetadataBlock) Validate() error {
	return _gdggf.ValidateWithPath("\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b")
}

func (_cfaca *CT_Drawing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _cfaca.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextField and its children, prefixing error messages with path
func (_bfebde *CT_TextField) ValidateWithPath(path string) error {
	if _cefda := _bfebde.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cefda != nil {
		return _cefda
	}
	return nil
}

func NewCT_PivotCacheRecords() *CT_PivotCacheRecords { _edbd := &CT_PivotCacheRecords{}; return _edbd }

// Validate validates the CT_ColHierarchiesUsage and its children
func (_fdgb *CT_ColHierarchiesUsage) Validate() error {
	return _fdgb.ValidateWithPath("\u0043\u0054\u005f\u0043ol\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065")
}

func (_gfcfeg *CT_ObjectPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfcfeg.LockedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfcfeg.LockedAttr))})
	}
	if _gfcfeg.DefaultSizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfcfeg.DefaultSizeAttr))})
	}
	if _gfcfeg.PrintAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0069n\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfcfeg.PrintAttr))})
	}
	if _gfcfeg.DisabledAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfcfeg.DisabledAttr))})
	}
	if _gfcfeg.UiObjectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfcfeg.UiObjectAttr))})
	}
	if _gfcfeg.AutoFillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfcfeg.AutoFillAttr))})
	}
	if _gfcfeg.AutoLineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfcfeg.AutoLineAttr))})
	}
	if _gfcfeg.AutoPictAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfcfeg.AutoPictAttr))})
	}
	if _gfcfeg.MacroAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _ec.Sprintf("\u0025\u0076", *_gfcfeg.MacroAttr)})
	}
	if _gfcfeg.AltTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061l\u0074\u0054\u0065\u0078\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_gfcfeg.AltTextAttr)})
	}
	if _gfcfeg.DdeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0064\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_gfcfeg.DdeAttr))})
	}
	if _gfcfeg.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_gfcfeg.IdAttr)})
	}
	e.EncodeToken(start)
	_dadfe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0061\u006e\u0063\u0068\u006fr"}}
	e.EncodeElement(_gfcfeg.Anchor, _dadfe)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_ecg *CT_AutoSortScope) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ecg.PivotArea = NewCT_PivotArea()
_afg:
	for {
		_ede, _bef := d.Token()
		if _bef != nil {
			return _bef
		}
		switch _eag := _ede.(type) {
		case _b.StartElement:
			switch _eag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _ebc := d.DecodeElement(_ecg.PivotArea, &_eag); _ebc != nil {
					return _ebc
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u0075\u0074\u006f\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065\u0020\u0025v", _eag.Name)
				if _fcd := d.Skip(); _fcd != nil {
					return _fcd
				}
			}
		case _b.EndElement:
			break _afg
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the PivotTableDefinition and its children
func (_caddf *PivotTableDefinition) Validate() error {
	return _caddf.ValidateWithPath("P\u0069v\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e")
}

func (_gdba *CT_IconSet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfbgd := range start.Attr {
		if _gfbgd.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_gdba.IconSetAttr.UnmarshalXMLAttr(_gfbgd)
			continue
		}
		if _gfbgd.Name.Local == "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e" {
			_eaage, _cbfbfc := _eb.ParseBool(_gfbgd.Value)
			if _cbfbfc != nil {
				return _cbfbfc
			}
			_gdba.ShowValueAttr = &_eaage
			continue
		}
		if _gfbgd.Name.Local == "\u0070e\u0072\u0063\u0065\u006e\u0074" {
			_dfcbg, _gecec := _eb.ParseBool(_gfbgd.Value)
			if _gecec != nil {
				return _gecec
			}
			_gdba.PercentAttr = &_dfcbg
			continue
		}
		if _gfbgd.Name.Local == "\u0072e\u0076\u0065\u0072\u0073\u0065" {
			_gffde, _begbe := _eb.ParseBool(_gfbgd.Value)
			if _begbe != nil {
				return _begbe
			}
			_gdba.ReverseAttr = &_gffde
			continue
		}
	}
_fcdcf:
	for {
		_afdcb, _ccbcd := d.Token()
		if _ccbcd != nil {
			return _ccbcd
		}
		switch _aadg := _afdcb.(type) {
		case _b.StartElement:
			switch _aadg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}:
				_edacc := NewCT_Cfvo()
				if _gegf := d.DecodeElement(_edacc, &_aadg); _gegf != nil {
					return _gegf
				}
				_gdba.Cfvo = append(_gdba.Cfvo, _edacc)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fI\u0063\u006f\u006e\u0053\u0065\u0074\u0020\u0025\u0076", _aadg.Name)
				if _eagbg := d.Skip(); _eagbg != nil {
					return _eagbg
				}
			}
		case _b.EndElement:
			break _fcdcf
		case _b.CharData:
		}
	}
	return nil
}

func (_ccbed *CT_PivotFilter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ccbed.TypeAttr = ST_PivotFilterType(1)
	_ccbed.AutoFilter = NewCT_AutoFilter()
	for _, _bgdg := range start.Attr {
		if _bgdg.Name.Local == "i\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u006c\u0064" {
			_dgcgdc, _gbced := _eb.ParseUint(_bgdg.Value, 10, 32)
			if _gbced != nil {
				return _gbced
			}
			_agbd := uint32(_dgcgdc)
			_ccbed.IMeasureFldAttr = &_agbd
			continue
		}
		if _bgdg.Name.Local == "\u006d\u0070\u0046l\u0064" {
			_gfge, _dabcgd := _eb.ParseUint(_bgdg.Value, 10, 32)
			if _dabcgd != nil {
				return _dabcgd
			}
			_gedad := uint32(_gfge)
			_ccbed.MpFldAttr = &_gedad
			continue
		}
		if _bgdg.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ccbed.TypeAttr.UnmarshalXMLAttr(_bgdg)
			continue
		}
		if _bgdg.Name.Local == "\u0065v\u0061\u006c\u004f\u0072\u0064\u0065r" {
			_fecf, _bbegf := _eb.ParseInt(_bgdg.Value, 10, 32)
			if _bbegf != nil {
				return _bbegf
			}
			_edaeca := int32(_fecf)
			_ccbed.EvalOrderAttr = &_edaeca
			continue
		}
		if _bgdg.Name.Local == "\u0069\u0064" {
			_cdbgg, _cdbggg := _eb.ParseUint(_bgdg.Value, 10, 32)
			if _cdbggg != nil {
				return _cdbggg
			}
			_ccbed.IdAttr = uint32(_cdbgg)
			continue
		}
		if _bgdg.Name.Local == "\u0069\u004d\u0065a\u0073\u0075\u0072\u0065\u0048\u0069\u0065\u0072" {
			_gfaed, _ddaeg := _eb.ParseUint(_bgdg.Value, 10, 32)
			if _ddaeg != nil {
				return _ddaeg
			}
			_ecbg := uint32(_gfaed)
			_ccbed.IMeasureHierAttr = &_ecbg
			continue
		}
		if _bgdg.Name.Local == "\u0066\u006c\u0064" {
			_egaec, _accbd := _eb.ParseUint(_bgdg.Value, 10, 32)
			if _accbd != nil {
				return _accbd
			}
			_ccbed.FldAttr = uint32(_egaec)
			continue
		}
		if _bgdg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cggcd, _fbceg := _bgdg.Value, error(nil)
			if _fbceg != nil {
				return _fbceg
			}
			_ccbed.NameAttr = &_cggcd
			continue
		}
		if _bgdg.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_egagf, _gaadgc := _bgdg.Value, error(nil)
			if _gaadgc != nil {
				return _gaadgc
			}
			_ccbed.DescriptionAttr = &_egagf
			continue
		}
		if _bgdg.Name.Local == "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0031" {
			_ccgff, _efgfb := _bgdg.Value, error(nil)
			if _efgfb != nil {
				return _efgfb
			}
			_ccbed.StringValue1Attr = &_ccgff
			continue
		}
		if _bgdg.Name.Local == "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0032" {
			_cbdgc, _gbeb := _bgdg.Value, error(nil)
			if _gbeb != nil {
				return _gbeb
			}
			_ccbed.StringValue2Attr = &_cbdgc
			continue
		}
	}
_ddcgd:
	for {
		_effga, _aagae := d.Token()
		if _aagae != nil {
			return _aagae
		}
		switch _bgfga := _effga.(type) {
		case _b.StartElement:
			switch _bgfga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				if _eabebc := d.DecodeElement(_ccbed.AutoFilter, &_bgfga); _eabebc != nil {
					return _eabebc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccbed.ExtLst = NewCT_ExtensionList()
				if _agdff := d.DecodeElement(_ccbed.ExtLst, &_bgfga); _agdff != nil {
					return _agdff
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069l\u0074e\u0072\u0020\u0025\u0076", _bgfga.Name)
				if _bbcgb := d.Skip(); _bbcgb != nil {
					return _bbcgb
				}
			}
		case _b.EndElement:
			break _ddcgd
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_UnderlineProperty and its children, prefixing error messages with path
func (_fefee *CT_UnderlineProperty) ValidateWithPath(path string) error {
	if _ccccg := _fefee.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ccccg != nil {
		return _ccccg
	}
	return nil
}

func NewCT_MdxMemeberProp() *CT_MdxMemeberProp { _fcacc := &CT_MdxMemeberProp{}; return _fcacc }

func (_cbggd *ST_Comments) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cgbfcc, _defef := d.Token()
	if _defef != nil {
		return _defef
	}
	if _ggeaf, _bbfad := _cgbfcc.(_b.EndElement); _bbfad && _ggeaf.Name == start.Name {
		*_cbggd = 1
		return nil
	}
	if _gcegdf, _bfacg := _cgbfcc.(_b.CharData); !_bfacg {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgbfcc)
	} else {
		switch string(_gcegdf) {
		case "":
			*_cbggd = 0
		case "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065":
			*_cbggd = 1
		case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
			*_cbggd = 2
		case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074":
			*_cbggd = 3
		}
	}
	_cgbfcc, _defef = d.Token()
	if _defef != nil {
		return _defef
	}
	if _bafded, _ffgfdd := _cgbfcc.(_b.EndElement); _ffgfdd && _bafded.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgbfcc)
}

const (
	ST_SheetViewTypeUnset            ST_SheetViewType = 0
	ST_SheetViewTypeNormal           ST_SheetViewType = 1
	ST_SheetViewTypePageBreakPreview ST_SheetViewType = 2
	ST_SheetViewTypePageLayout       ST_SheetViewType = 3
)

type CT_PivotAreaReferences struct {

	// Pivot Filter Count
	CountAttr *uint32

	// Reference
	Reference []*CT_PivotAreaReference
}

func NewCT_MemberProperty() *CT_MemberProperty { _ggffa := &CT_MemberProperty{}; return _ggffa }

func NewCT_TableStyles() *CT_TableStyles { _edcecb := &CT_TableStyles{}; return _edcecb }

func (_dcegea ST_Type) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dcegea.String(), start)
}

func (_edaab *ST_Scope) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_daedc, _degedd := d.Token()
	if _degedd != nil {
		return _degedd
	}
	if _eabdc, _edbab := _daedc.(_b.EndElement); _edbab && _eabdc.Name == start.Name {
		*_edaab = 1
		return nil
	}
	if _fbeeac, _fddef := _daedc.(_b.CharData); !_fddef {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _daedc)
	} else {
		switch string(_fbeeac) {
		case "":
			*_edaab = 0
		case "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn":
			*_edaab = 1
		case "\u0064\u0061\u0074\u0061":
			*_edaab = 2
		case "\u0066\u0069\u0065l\u0064":
			*_edaab = 3
		}
	}
	_daedc, _degedd = d.Token()
	if _degedd != nil {
		return _degedd
	}
	if _eccaba, _egbafe := _daedc.(_b.EndElement); _egbafe && _eccaba.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _daedc)
}

func NewCT_SmartTagTypes() *CT_SmartTagTypes { _ccabb := &CT_SmartTagTypes{}; return _ccabb }

// Validate validates the CT_ConditionalFormats and its children
func (_fgc *CT_ConditionalFormats) Validate() error {
	return _fgc.ValidateWithPath("C\u0054\u005f\u0043\u006fnd\u0069t\u0069\u006f\u006e\u0061\u006cF\u006f\u0072\u006d\u0061\u0074\u0073")
}

func NewCT_MergeCell() *CT_MergeCell { _gbfae := &CT_MergeCell{}; return _gbfae }

func (_efeea *CT_WebPublishItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_efeea.SourceTypeAttr = ST_WebSourceType(1)
	for _, _cggdff := range start.Attr {
		if _cggdff.Name.Local == "\u0069\u0064" {
			_ggdbgg, _cdedb := _eb.ParseUint(_cggdff.Value, 10, 32)
			if _cdedb != nil {
				return _cdedb
			}
			_efeea.IdAttr = uint32(_ggdbgg)
			continue
		}
		if _cggdff.Name.Local == "\u0064\u0069\u0076I\u0064" {
			_fcdea, _gcbcee := _cggdff.Value, error(nil)
			if _gcbcee != nil {
				return _gcbcee
			}
			_efeea.DivIdAttr = _fcdea
			continue
		}
		if _cggdff.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0054\u0079\u0070\u0065" {
			_efeea.SourceTypeAttr.UnmarshalXMLAttr(_cggdff)
			continue
		}
		if _cggdff.Name.Local == "\u0073o\u0075\u0072\u0063\u0065\u0052\u0065f" {
			_efcefe, _dffbe := _cggdff.Value, error(nil)
			if _dffbe != nil {
				return _dffbe
			}
			_efeea.SourceRefAttr = &_efcefe
			continue
		}
		if _cggdff.Name.Local == "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074" {
			_ebcbee, _cdffbd := _cggdff.Value, error(nil)
			if _cdffbd != nil {
				return _cdffbd
			}
			_efeea.SourceObjectAttr = &_ebcbee
			continue
		}
		if _cggdff.Name.Local == "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065" {
			_bcccdc, _cecabd := _cggdff.Value, error(nil)
			if _cecabd != nil {
				return _cecabd
			}
			_efeea.DestinationFileAttr = _bcccdc
			continue
		}
		if _cggdff.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_bfacbf, _dfcfca := _cggdff.Value, error(nil)
			if _dfcfca != nil {
				return _dfcfca
			}
			_efeea.TitleAttr = &_bfacbf
			continue
		}
		if _cggdff.Name.Local == "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068" {
			_bbbbca, _ggdgg := _eb.ParseBool(_cggdff.Value)
			if _ggdgg != nil {
				return _ggdgg
			}
			_efeea.AutoRepublishAttr = &_bbbbca
			continue
		}
	}
	for {
		_adedcc, _edgga := d.Token()
		if _edgga != nil {
			return _ec.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d: \u0025\u0073", _edgga)
		}
		if _ceaeaf, _bccgef := _adedcc.(_b.EndElement); _bccgef && _ceaeaf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Set and its children
func (_dddee *CT_Set) Validate() error {
	return _dddee.ValidateWithPath("\u0043\u0054\u005f\u0053\u0065\u0074")
}

// Validate validates the CT_ColorScale and its children
func (_dbfd *CT_ColorScale) Validate() error {
	return _dbfd.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065")
}

func NewWorksheet() *Worksheet {
	_cbcbfc := &Worksheet{}
	_cbcbfc.CT_Worksheet = *NewCT_Worksheet()
	return _cbcbfc
}

func (_eaaae *CT_Fill) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _eaaae.PatternFill != nil {
		_affgbb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0074\u0074\u0065\u0072n\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eaaae.PatternFill, _affgbb)
	}
	if _eaaae.GradientFill != nil {
		_ceec := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ag\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eaaae.GradientFill, _ceec)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fgggaf *CT_PivotTableStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fgggaf.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_fgggaf.NameAttr)})
	}
	if _fgggaf.ShowRowHeadersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0048\u0065a\u0064\u0065\u0072\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgggaf.ShowRowHeadersAttr))})
	}
	if _fgggaf.ShowColHeadersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgggaf.ShowColHeadersAttr))})
	}
	if _fgggaf.ShowRowStripesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgggaf.ShowRowStripesAttr))})
	}
	if _fgggaf.ShowColStripesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgggaf.ShowColStripesAttr))})
	}
	if _fgggaf.ShowLastColumnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_fgggaf.ShowLastColumnAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_DbPr struct {

	// Connection String
	ConnectionAttr string

	// Command Text
	CommandAttr *string

	// Command Text
	ServerCommandAttr *string

	// OLE DB Command Type
	CommandTypeAttr *uint32
}

type ST_RevisionAction byte

func (_dgcag *CT_TableStyleInfo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dgcag.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_dgcag.NameAttr)})
	}
	if _dgcag.ShowFirstColumnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u0046\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dgcag.ShowFirstColumnAttr))})
	}
	if _dgcag.ShowLastColumnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dgcag.ShowLastColumnAttr))})
	}
	if _dgcag.ShowRowStripesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dgcag.ShowRowStripesAttr))})
	}
	if _dgcag.ShowColumnStripesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dgcag.ShowColumnStripesAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_egfdb ST_MdxKPIProperty) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fddcc := _b.Attr{}
	_fddcc.Name = name
	switch _egfdb {
	case ST_MdxKPIPropertyUnset:
		_fddcc.Value = ""
	case ST_MdxKPIPropertyV:
		_fddcc.Value = "\u0076"
	case ST_MdxKPIPropertyG:
		_fddcc.Value = "\u0067"
	case ST_MdxKPIPropertyS:
		_fddcc.Value = "\u0073"
	case ST_MdxKPIPropertyT:
		_fddcc.Value = "\u0074"
	case ST_MdxKPIPropertyW:
		_fddcc.Value = "\u0077"
	case ST_MdxKPIPropertyM:
		_fddcc.Value = "\u006d"
	}
	return _fddcc, nil
}

type CT_CellStyles struct {

	// Style Count
	CountAttr *uint32

	// Cell Style
	CellStyle []*CT_CellStyle
}

func (_ggdfg *ST_Orientation) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ggdfg = 0
	case "\u0064e\u0066\u0061\u0075\u006c\u0074":
		*_ggdfg = 1
	case "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074":
		*_ggdfg = 2
	case "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e":
		*_ggdfg = 3
	}
	return nil
}

// Validate validates the CT_MdxTuple and its children
func (_bbcac *CT_MdxTuple) Validate() error {
	return _bbcac.ValidateWithPath("C\u0054\u005f\u004d\u0064\u0078\u0054\u0075\u0070\u006c\u0065")
}

// ValidateWithPath validates the CT_PageFields and its children, prefixing error messages with path
func (_faagfe *CT_PageFields) ValidateWithPath(path string) error {
	for _cafbc, _aaadg := range _faagfe.PageField {
		if _efffc := _aaadg.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u0050\u0061\u0067e\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _cafbc)); _efffc != nil {
			return _efffc
		}
	}
	return nil
}

func (_fdgc *CT_CellStyleXfs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _becb := range start.Attr {
		if _becb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ggg, _fcae := _eb.ParseUint(_becb.Value, 10, 32)
			if _fcae != nil {
				return _fcae
			}
			_facfc := uint32(_ggg)
			_fdgc.CountAttr = &_facfc
			continue
		}
	}
_dcea:
	for {
		_eacf, _bgfd := d.Token()
		if _bgfd != nil {
			return _bgfd
		}
		switch _dccb := _eacf.(type) {
		case _b.StartElement:
			switch _dccb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}:
				_ffddf := NewCT_Xf()
				if _cfdd := d.DecodeElement(_ffddf, &_dccb); _cfdd != nil {
					return _cfdd
				}
				_fdgc.Xf = append(_fdgc.Xf, _ffddf)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073\u0020\u0025\u0076", _dccb.Name)
				if _efee := d.Skip(); _efee != nil {
					return _efee
				}
			}
		case _b.EndElement:
			break _dcea
		case _b.CharData:
		}
	}
	return nil
}

type ST_PageOrder byte

func (_bfffd *CT_rowItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cadga := range start.Attr {
		if _cadga.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cfgec, _gaefg := _eb.ParseUint(_cadga.Value, 10, 32)
			if _gaefg != nil {
				return _gaefg
			}
			_dfgeg := uint32(_cfgec)
			_bfffd.CountAttr = &_dfgeg
			continue
		}
	}
_efdaaa:
	for {
		_cbgfb, _bbfcg := d.Token()
		if _bbfcg != nil {
			return _bbfcg
		}
		switch _fbabd := _cbgfb.(type) {
		case _b.StartElement:
			switch _fbabd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_dbefgcc := NewCT_I()
				if _cdedfe := d.DecodeElement(_dbefgcc, &_fbabd); _cdedfe != nil {
					return _cdedfe
				}
				_bfffd.I = append(_bfffd.I, _dbefgcc)
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _fbabd.Name)
				if _fabff := d.Skip(); _fabff != nil {
					return _fabff
				}
			}
		case _b.EndElement:
			break _efdaaa
		case _b.CharData:
		}
	}
	return nil
}

func (_dbebe *CT_TableColumns) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _becge := range start.Attr {
		if _becge.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_acedfd, _cedgg := _eb.ParseUint(_becge.Value, 10, 32)
			if _cedgg != nil {
				return _cedgg
			}
			_efddcf := uint32(_acedfd)
			_dbebe.CountAttr = &_efddcf
			continue
		}
	}
_febdd:
	for {
		_gdded, _eecda := d.Token()
		if _eecda != nil {
			return _eecda
		}
		switch _gdfad := _gdded.(type) {
		case _b.StartElement:
			switch _gdfad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e"}:
				_bafcea := NewCT_TableColumn()
				if _bbadd := d.DecodeElement(_bafcea, &_gdfad); _bbadd != nil {
					return _bbadd
				}
				_dbebe.TableColumn = append(_dbebe.TableColumn, _bafcea)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073\u0020\u0025\u0076", _gdfad.Name)
				if _cbdga := d.Skip(); _cbdga != nil {
					return _cbdga
				}
			}
		case _b.EndElement:
			break _febdd
		case _b.CharData:
		}
	}
	return nil
}

func (_egcdb ST_RevisionAction) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_egcdb.String(), start)
}

func (_gdbce *CT_RevisionCustomView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _gdbce.GuidAttr)})
	_eeecf, _deebe := _gdbce.ActionAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
	if _deebe != nil {
		return _deebe
	}
	start.Attr = append(start.Attr, _eeecf)
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cfcdcc ST_FontScheme) ValidateWithPath(path string) error {
	switch _cfcdcc {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cfcdcc))
	}
	return nil
}

func (_adceca *CT_Top10) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _adceca.TopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0070"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adceca.TopAttr))})
	}
	if _adceca.PercentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070e\u0072\u0063\u0065\u006e\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_adceca.PercentAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", _adceca.ValAttr)})
	if _adceca.FilterValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066i\u006c\u0074\u0065\u0072\u0056\u0061l"}, Value: _ec.Sprintf("\u0025\u0076", *_adceca.FilterValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bbgdcd ST_DdeValueType) Validate() error { return _bbgdcd.ValidateWithPath("") }

// Validate validates the CT_I and its children
func (_cdeeb *CT_I) Validate() error { return _cdeeb.ValidateWithPath("\u0043\u0054\u005f\u0049") }

// ValidateWithPath validates the CT_DbPr and its children, prefixing error messages with path
func (_dcabc *CT_DbPr) ValidateWithPath(path string) error { return nil }

func (_dbdfa ST_CredMethod) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dbdfa.String(), start)
}

// Validate validates the CT_Boolean and its children
func (_fab *CT_Boolean) Validate() error {
	return _fab.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e")
}

func (_eeaeb *ST_DynamicFilterType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cadefb, _gebagg := d.Token()
	if _gebagg != nil {
		return _gebagg
	}
	if _dgdgf, _aebgad := _cadefb.(_b.EndElement); _aebgad && _dgdgf.Name == start.Name {
		*_eeaeb = 1
		return nil
	}
	if _daebed, _abfcea := _cadefb.(_b.CharData); !_abfcea {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cadefb)
	} else {
		switch string(_daebed) {
		case "":
			*_eeaeb = 0
		case "\u006e\u0075\u006c\u006c":
			*_eeaeb = 1
		case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
			*_eeaeb = 2
		case "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
			*_eeaeb = 3
		case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
			*_eeaeb = 4
		case "\u0074\u006f\u0064a\u0079":
			*_eeaeb = 5
		case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
			*_eeaeb = 6
		case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
			*_eeaeb = 7
		case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
			*_eeaeb = 8
		case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
			*_eeaeb = 9
		case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
			*_eeaeb = 10
		case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
			*_eeaeb = 11
		case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
			*_eeaeb = 12
		case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_eeaeb = 13
		case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_eeaeb = 14
		case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_eeaeb = 15
		case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
			*_eeaeb = 16
		case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
			*_eeaeb = 17
		case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
			*_eeaeb = 18
		case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
			*_eeaeb = 19
		case "\u0051\u0031":
			*_eeaeb = 20
		case "\u0051\u0032":
			*_eeaeb = 21
		case "\u0051\u0033":
			*_eeaeb = 22
		case "\u0051\u0034":
			*_eeaeb = 23
		case "\u004d\u0031":
			*_eeaeb = 24
		case "\u004d\u0032":
			*_eeaeb = 25
		case "\u004d\u0033":
			*_eeaeb = 26
		case "\u004d\u0034":
			*_eeaeb = 27
		case "\u004d\u0035":
			*_eeaeb = 28
		case "\u004d\u0036":
			*_eeaeb = 29
		case "\u004d\u0037":
			*_eeaeb = 30
		case "\u004d\u0038":
			*_eeaeb = 31
		case "\u004d\u0039":
			*_eeaeb = 32
		case "\u004d\u0031\u0030":
			*_eeaeb = 33
		case "\u004d\u0031\u0031":
			*_eeaeb = 34
		case "\u004d\u0031\u0032":
			*_eeaeb = 35
		}
	}
	_cadefb, _gebagg = d.Token()
	if _gebagg != nil {
		return _gebagg
	}
	if _dffe, _ffbgac := _cadefb.(_b.EndElement); _ffbgac && _dffe.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cadefb)
}

func (_agcceb *CT_UndoInfo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_agcceb.ExpAttr = ST_FormulaExpression(1)
	for _, _ffagag := range start.Attr {
		if _ffagag.Name.Local == "\u0069\u006e\u0064e\u0078" {
			_baecg, _degdgb := _eb.ParseUint(_ffagag.Value, 10, 32)
			if _degdgb != nil {
				return _degdgb
			}
			_agcceb.IndexAttr = uint32(_baecg)
			continue
		}
		if _ffagag.Name.Local == "\u0065\u0078\u0070" {
			_agcceb.ExpAttr.UnmarshalXMLAttr(_ffagag)
			continue
		}
		if _ffagag.Name.Local == "\u0072\u0065\u00663\u0044" {
			_bdgec, _dfefc := _eb.ParseBool(_ffagag.Value)
			if _dfefc != nil {
				return _dfefc
			}
			_agcceb.Ref3DAttr = &_bdgec
			continue
		}
		if _ffagag.Name.Local == "\u0061\u0072\u0072a\u0079" {
			_ccgcbb, _aagce := _eb.ParseBool(_ffagag.Value)
			if _aagce != nil {
				return _aagce
			}
			_agcceb.ArrayAttr = &_ccgcbb
			continue
		}
		if _ffagag.Name.Local == "\u0076" {
			_cddafg, _gdccd := _eb.ParseBool(_ffagag.Value)
			if _gdccd != nil {
				return _gdccd
			}
			_agcceb.VAttr = &_cddafg
			continue
		}
		if _ffagag.Name.Local == "\u006e\u0066" {
			_afbdf, _fgeba := _eb.ParseBool(_ffagag.Value)
			if _fgeba != nil {
				return _fgeba
			}
			_agcceb.NfAttr = &_afbdf
			continue
		}
		if _ffagag.Name.Local == "\u0063\u0073" {
			_bccaf, _beef := _eb.ParseBool(_ffagag.Value)
			if _beef != nil {
				return _beef
			}
			_agcceb.CsAttr = &_bccaf
			continue
		}
		if _ffagag.Name.Local == "\u0064\u0072" {
			_afffb, _eaecga := _ffagag.Value, error(nil)
			if _eaecga != nil {
				return _eaecga
			}
			_agcceb.DrAttr = _afffb
			continue
		}
		if _ffagag.Name.Local == "\u0064\u006e" {
			_debgc, _afbdc := _ffagag.Value, error(nil)
			if _afbdc != nil {
				return _afbdc
			}
			_agcceb.DnAttr = &_debgc
			continue
		}
		if _ffagag.Name.Local == "\u0072" {
			_cabeb, _fcdeb := _ffagag.Value, error(nil)
			if _fcdeb != nil {
				return _fcdeb
			}
			_agcceb.RAttr = &_cabeb
			continue
		}
		if _ffagag.Name.Local == "\u0073\u0049\u0064" {
			_beccdd, _bggbd := _eb.ParseUint(_ffagag.Value, 10, 32)
			if _bggbd != nil {
				return _bggbd
			}
			_cagde := uint32(_beccdd)
			_agcceb.SIdAttr = &_cagde
			continue
		}
	}
	for {
		_gfbdcc, _abgfeb := d.Token()
		if _abgfeb != nil {
			return _ec.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0055\u006e\u0064\u006f\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0073", _abgfeb)
		}
		if _gbdff, _gdeaea := _gfbdcc.(_b.EndElement); _gdeaea && _gbdff.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FieldUsage and its children, prefixing error messages with path
func (_baefg *CT_FieldUsage) ValidateWithPath(path string) error { return nil }

func (_deadaf *ST_IconSetType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_deadaf = 0
	case "\u0033A\u0072\u0072\u006f\u0077\u0073":
		*_deadaf = 1
	case "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
		*_deadaf = 2
	case "\u0033\u0046\u006c\u0061\u0067\u0073":
		*_deadaf = 3
	case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031":
		*_deadaf = 4
	case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032":
		*_deadaf = 5
	case "\u0033\u0053\u0069\u0067\u006e\u0073":
		*_deadaf = 6
	case "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073":
		*_deadaf = 7
	case "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732":
		*_deadaf = 8
	case "\u0034A\u0072\u0072\u006f\u0077\u0073":
		*_deadaf = 9
	case "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
		*_deadaf = 10
	case "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b":
		*_deadaf = 11
	case "\u0034R\u0061\u0074\u0069\u006e\u0067":
		*_deadaf = 12
	case "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073":
		*_deadaf = 13
	case "\u0035A\u0072\u0072\u006f\u0077\u0073":
		*_deadaf = 14
	case "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
		*_deadaf = 15
	case "\u0035R\u0061\u0074\u0069\u006e\u0067":
		*_deadaf = 16
	case "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s":
		*_deadaf = 17
	}
	return nil
}

func (_bebcdg ST_TimePeriod) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cedbff := _b.Attr{}
	_cedbff.Name = name
	switch _bebcdg {
	case ST_TimePeriodUnset:
		_cedbff.Value = ""
	case ST_TimePeriodToday:
		_cedbff.Value = "\u0074\u006f\u0064a\u0079"
	case ST_TimePeriodYesterday:
		_cedbff.Value = "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case ST_TimePeriodTomorrow:
		_cedbff.Value = "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case ST_TimePeriodLast7Days:
		_cedbff.Value = "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s"
	case ST_TimePeriodThisMonth:
		_cedbff.Value = "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case ST_TimePeriodLastMonth:
		_cedbff.Value = "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case ST_TimePeriodNextMonth:
		_cedbff.Value = "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case ST_TimePeriodThisWeek:
		_cedbff.Value = "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case ST_TimePeriodLastWeek:
		_cedbff.Value = "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case ST_TimePeriodNextWeek:
		_cedbff.Value = "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	}
	return _cedbff, nil
}

// ValidateWithPath validates the CT_Font and its children, prefixing error messages with path
func (_cgcde *CT_Font) ValidateWithPath(path string) error {
	for _cafd, _befbb := range _cgcde.Name {
		if _gadd := _befbb.ValidateWithPath(_ec.Sprintf("%\u0073\u002f\u004e\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _cafd)); _gadd != nil {
			return _gadd
		}
	}
	for _gdceaa, _dfcdb := range _cgcde.Charset {
		if _dgaae := _dfcdb.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0043\u0068\u0061\u0072\u0073\u0065t\u005b\u0025\u0064\u005d", path, _gdceaa)); _dgaae != nil {
			return _dgaae
		}
	}
	for _faaed, _cceab := range _cgcde.Family {
		if _bdgbf := _cceab.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0046\u0061\u006d\u0069\u006c\u0079\u005b\u0025\u0064\u005d", path, _faaed)); _bdgbf != nil {
			return _bdgbf
		}
	}
	for _dddcc, _ffcdf := range _cgcde.B {
		if _fefd := _ffcdf.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _dddcc)); _fefd != nil {
			return _fefd
		}
	}
	for _abdfd, _agceg := range _cgcde.I {
		if _baefc := _agceg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0049\u005b\u0025\u0064\u005d", path, _abdfd)); _baefc != nil {
			return _baefc
		}
	}
	for _dcfcc, _fdgbd := range _cgcde.Strike {
		if _eadea := _fdgbd.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0053\u0074\u0072\u0069\u006b\u0065\u005b\u0025\u0064\u005d", path, _dcfcc)); _eadea != nil {
			return _eadea
		}
	}
	for _gfggb, _addga := range _cgcde.Outline {
		if _acagf := _addga.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004f\u0075\u0074\u006c\u0069\u006ee\u005b\u0025\u0064\u005d", path, _gfggb)); _acagf != nil {
			return _acagf
		}
	}
	for _fdgbb, _cgcfe := range _cgcde.Shadow {
		if _cdddbb := _cgcfe.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0053\u0068\u0061\u0064\u006f\u0077\u005b\u0025\u0064\u005d", path, _fdgbb)); _cdddbb != nil {
			return _cdddbb
		}
	}
	for _bdfd, _faadg := range _cgcde.Condense {
		if _cdfb := _faadg.ValidateWithPath(_ec.Sprintf("\u0025s\u002fC\u006f\u006e\u0064\u0065\u006e\u0073\u0065\u005b\u0025\u0064\u005d", path, _bdfd)); _cdfb != nil {
			return _cdfb
		}
	}
	for _fffd, _aecbe := range _cgcde.Extend {
		if _ceeca := _aecbe.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u0065\u006e\u0064\u005b\u0025\u0064\u005d", path, _fffd)); _ceeca != nil {
			return _ceeca
		}
	}
	for _ggbc, _cgge := range _cgcde.Color {
		if _eega := _cgge.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002fC\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _ggbc)); _eega != nil {
			return _eega
		}
	}
	for _gecgf, _cbgda := range _cgcde.Sz {
		if _gbbff := _cbgda.ValidateWithPath(_ec.Sprintf("\u0025s\u002f\u0053\u007a\u005b\u0025\u0064]", path, _gecgf)); _gbbff != nil {
			return _gbbff
		}
	}
	for _bfebdb, _bcgeg := range _cgcde.U {
		if _cdddf := _bcgeg.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0055\u005b\u0025\u0064\u005d", path, _bfebdb)); _cdddf != nil {
			return _cdddf
		}
	}
	for _eede, _aeae := range _cgcde.VertAlign {
		if _ggggc := _aeae.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u0056\u0065\u0072t\u0041\u006c\u0069\u0067\u006e\u005b\u0025\u0064\u005d", path, _eede)); _ggggc != nil {
			return _ggggc
		}
	}
	for _cbcc, _gdebee := range _cgcde.Scheme {
		if _baace := _gdebee.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u005b\u0025\u0064\u005d", path, _cbcc)); _baace != nil {
			return _baace
		}
	}
	return nil
}

func (_eabgc *ST_WebSourceType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_begfc, _afdcdc := d.Token()
	if _afdcdc != nil {
		return _afdcdc
	}
	if _fbfge, _faecc := _begfc.(_b.EndElement); _faecc && _fbfge.Name == start.Name {
		*_eabgc = 1
		return nil
	}
	if _ccdgba, _bfadg := _begfc.(_b.CharData); !_bfadg {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _begfc)
	} else {
		switch string(_ccdgba) {
		case "":
			*_eabgc = 0
		case "\u0073\u0068\u0065e\u0074":
			*_eabgc = 1
		case "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a":
			*_eabgc = 2
		case "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072":
			*_eabgc = 3
		case "\u0072\u0061\u006eg\u0065":
			*_eabgc = 4
		case "\u0063\u0068\u0061r\u0074":
			*_eabgc = 5
		case "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065":
			*_eabgc = 6
		case "\u0071\u0075\u0065r\u0079":
			*_eabgc = 7
		case "\u006c\u0061\u0062e\u006c":
			*_eabgc = 8
		}
	}
	_begfc, _afdcdc = d.Token()
	if _afdcdc != nil {
		return _afdcdc
	}
	if _eecag, _gdefae := _begfc.(_b.EndElement); _gdefae && _eecag.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _begfc)
}

// Validate validates the CT_RevisionHeader and its children
func (_aeggdf *CT_RevisionHeader) Validate() error {
	return _aeggdf.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0048e\u0061\u0064\u0065\u0072")
}

// Validate validates the CT_RevisionRowColumn and its children
func (_bbdbb *CT_RevisionRowColumn) Validate() error {
	return _bbdbb.ValidateWithPath("C\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eR\u006f\u0077\u0043\u006flu\u006d\u006e")
}

// Validate validates the CT_ExternalSheetDataSet and its children
func (_bffbe *CT_ExternalSheetDataSet) Validate() error {
	return _bffbe.ValidateWithPath("\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074")
}

// Validate validates the CT_colItems and its children
func (_afacc *CT_colItems) Validate() error {
	return _afacc.ValidateWithPath("C\u0054\u005f\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073")
}

func (_dcgcg *CT_Users) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dcgcg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_dcgcg.CountAttr)})
	}
	e.EncodeToken(start)
	if _dcgcg.UserInfo != nil {
		_gbgaa := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}}
		for _, _eeefd := range _dcgcg.UserInfo {
			e.EncodeElement(_eeefd, _gbgaa)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_gfbgff ST_FontScheme) String() string {
	switch _gfbgff {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u006d\u0061\u006ao\u0072"
	case 3:
		return "\u006d\u0069\u006eo\u0072"
	}
	return ""
}

// ValidateWithPath validates the CT_MdxMetadata and its children, prefixing error messages with path
func (_fedcf *CT_MdxMetadata) ValidateWithPath(path string) error {
	for _ccfdbb, _gbgcc := range _fedcf.Mdx {
		if _egbfg := _gbgcc.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004d\u0064\u0078\u005b\u0025\u0064\u005d", path, _ccfdbb)); _egbfg != nil {
			return _egbfg
		}
	}
	return nil
}

// Validate validates the CT_UndoInfo and its children
func (_cadbe *CT_UndoInfo) Validate() error {
	return _cadbe.ValidateWithPath("C\u0054\u005f\u0055\u006e\u0064\u006f\u0049\u006e\u0066\u006f")
}

func (_bffg *CT_SheetIdMap) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bffg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_bffg.CountAttr)})
	}
	e.EncodeToken(start)
	_gdbccf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0049\u0064"}}
	for _, _adfec := range _bffg.SheetId {
		e.EncodeElement(_adfec, _gdbccf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cbcebb ST_TimePeriod) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cbcebb.String(), start)
}

func (_faegbe *CT_WebPublishing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _faegbe.CssAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0073\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_faegbe.CssAttr))})
	}
	if _faegbe.ThicketAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074h\u0069\u0063\u006b\u0065\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_faegbe.ThicketAttr))})
	}
	if _faegbe.LongFileNamesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u006e\u0067\u0046\u0069\u006c\u0065\u004e\u0061\u006d\u0065\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_faegbe.LongFileNamesAttr))})
	}
	if _faegbe.VmlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u006d\u006c"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_faegbe.VmlAttr))})
	}
	if _faegbe.AllowPngAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_faegbe.AllowPngAttr))})
	}
	if _faegbe.TargetScreenSizeAttr != ST_TargetScreenSizeUnset {
		_ebccgc, _cbcgb := _faegbe.TargetScreenSizeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0061r\u0067\u0065\u0074S\u0063\u0072\u0065\u0065\u006e\u0053\u0069\u007a\u0065"})
		if _cbcgb != nil {
			return _cbcgb
		}
		start.Attr = append(start.Attr, _ebccgc)
	}
	if _faegbe.DpiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0070\u0069"}, Value: _ec.Sprintf("\u0025\u0076", *_faegbe.DpiAttr)})
	}
	if _faegbe.CodePageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_faegbe.CodePageAttr)})
	}
	if _faegbe.CharacterSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_faegbe.CharacterSetAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_DdeItems and its children, prefixing error messages with path
func (_bfdea *CT_DdeItems) ValidateWithPath(path string) error {
	for _ggfbb, _aefdd := range _bfdea.DdeItem {
		if _gbff := _aefdd.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0044\u0064\u0065\u0049\u0074\u0065m\u005b\u0025\u0064\u005d", path, _ggfbb)); _gbff != nil {
			return _gbff
		}
	}
	return nil
}

func (_fcabc *ST_ConditionalFormattingOperator) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abfbd, _adcffg := d.Token()
	if _adcffg != nil {
		return _adcffg
	}
	if _gecea, _bcgdb := _abfbd.(_b.EndElement); _bcgdb && _gecea.Name == start.Name {
		*_fcabc = 1
		return nil
	}
	if _fgffdf, _effcca := _abfbd.(_b.CharData); !_effcca {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _abfbd)
	} else {
		switch string(_fgffdf) {
		case "":
			*_fcabc = 0
		case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_fcabc = 1
		case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_fcabc = 2
		case "\u0065\u0071\u0075a\u006c":
			*_fcabc = 3
		case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_fcabc = 4
		case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
			*_fcabc = 5
		case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_fcabc = 6
		case "\u0062e\u0074\u0077\u0065\u0065\u006e":
			*_fcabc = 7
		case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_fcabc = 8
		case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
			*_fcabc = 9
		case "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
			*_fcabc = 10
		case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
			*_fcabc = 11
		case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
			*_fcabc = 12
		}
	}
	_abfbd, _adcffg = d.Token()
	if _adcffg != nil {
		return _adcffg
	}
	if _fdagfba, _aafbg := _abfbd.(_b.EndElement); _aafbg && _fdagfba.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _abfbd)
}

type CT_Font struct {

	// Font Name
	Name []*CT_FontName

	// Character Set
	Charset []*CT_IntProperty

	// Font Family
	Family []*CT_FontFamily

	// Bold
	B []*CT_BooleanProperty

	// Italic
	I []*CT_BooleanProperty

	// Strike Through
	Strike []*CT_BooleanProperty

	// Outline
	Outline []*CT_BooleanProperty

	// Shadow
	Shadow []*CT_BooleanProperty

	// Condense
	Condense []*CT_BooleanProperty

	// Extend
	Extend []*CT_BooleanProperty

	// Text Color
	Color []*CT_Color

	// Font Size
	Sz []*CT_FontSize

	// Underline
	U []*CT_UnderlineProperty

	// Text Vertical Alignment
	VertAlign []*CT_VerticalAlignFontProperty

	// Scheme
	Scheme []*CT_FontScheme
}

func (_bdfgef ST_DvAspect) Validate() error { return _bdfgef.ValidateWithPath("") }

// Validate validates the CT_Users and its children
func (_deaca *CT_Users) Validate() error {
	return _deaca.ValidateWithPath("\u0043\u0054\u005f\u0055\u0073\u0065\u0072\u0073")
}

// Validate validates the CT_FontFamily and its children
func (_bcced *CT_FontFamily) Validate() error {
	return _bcced.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079")
}

func NewCT_PivotSelection() *CT_PivotSelection {
	_dggbb := &CT_PivotSelection{}
	_dggbb.PivotArea = NewCT_PivotArea()
	return _dggbb
}

// ValidateWithPath validates the CT_PCDSCPage and its children, prefixing error messages with path
func (_fdffg *CT_PCDSCPage) ValidateWithPath(path string) error {
	for _acaef, _bfcbf := range _fdffg.PageItem {
		if _gaafb := _bfcbf.ValidateWithPath(_ec.Sprintf("\u0025s\u002fP\u0061\u0067\u0065\u0049\u0074\u0065\u006d\u005b\u0025\u0064\u005d", path, _acaef)); _gaafb != nil {
			return _gaafb
		}
	}
	return nil
}

func (_gggcb *ST_PhoneticAlignment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dedbb, _bbbbfd := d.Token()
	if _bbbbfd != nil {
		return _bbbbfd
	}
	if _abegfb, _adccc := _dedbb.(_b.EndElement); _adccc && _abegfb.Name == start.Name {
		*_gggcb = 1
		return nil
	}
	if _caada, _gdcega := _dedbb.(_b.CharData); !_gdcega {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dedbb)
	} else {
		switch string(_caada) {
		case "":
			*_gggcb = 0
		case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
			*_gggcb = 1
		case "\u006c\u0065\u0066\u0074":
			*_gggcb = 2
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_gggcb = 3
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_gggcb = 4
		}
	}
	_dedbb, _bbbbfd = d.Token()
	if _bbbbfd != nil {
		return _bbbbfd
	}
	if _bbbfbg, _daagd := _dedbb.(_b.EndElement); _daagd && _bbbfbg.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dedbb)
}

func (_febg *CT_Font) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ecbfb:
	for {
		_aeca, _ddee := d.Token()
		if _ddee != nil {
			return _ddee
		}
		switch _ddacg := _aeca.(type) {
		case _b.StartElement:
			switch _ddacg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0061\u006d\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0061\u006d\u0065"}:
				_ffagd := NewCT_FontName()
				if _geadf := d.DecodeElement(_ffagd, &_ddacg); _geadf != nil {
					return _geadf
				}
				_febg.Name = append(_febg.Name, _ffagd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}:
				_baadc := NewCT_IntProperty()
				if _cbae := d.DecodeElement(_baadc, &_ddacg); _cbae != nil {
					return _cbae
				}
				_febg.Charset = append(_febg.Charset, _baadc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}:
				_gdbbc := NewCT_FontFamily()
				if _egdbd := d.DecodeElement(_gdbbc, &_ddacg); _egdbd != nil {
					return _egdbd
				}
				_febg.Family = append(_febg.Family, _gdbbc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_febdc := NewCT_BooleanProperty()
				if _bbgd := d.DecodeElement(_febdc, &_ddacg); _bbgd != nil {
					return _bbgd
				}
				_febg.B = append(_febg.B, _febdc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_ebcecf := NewCT_BooleanProperty()
				if _ggbeg := d.DecodeElement(_ebcecf, &_ddacg); _ggbeg != nil {
					return _ggbeg
				}
				_febg.I = append(_febg.I, _ebcecf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}:
				_abad := NewCT_BooleanProperty()
				if _daeae := d.DecodeElement(_abad, &_ddacg); _daeae != nil {
					return _daeae
				}
				_febg.Strike = append(_febg.Strike, _abad)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}:
				_dcda := NewCT_BooleanProperty()
				if _edabg := d.DecodeElement(_dcda, &_ddacg); _edabg != nil {
					return _edabg
				}
				_febg.Outline = append(_febg.Outline, _dcda)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}:
				_eccgeg := NewCT_BooleanProperty()
				if _fgcg := d.DecodeElement(_eccgeg, &_ddacg); _fgcg != nil {
					return _fgcg
				}
				_febg.Shadow = append(_febg.Shadow, _eccgeg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}:
				_aebff := NewCT_BooleanProperty()
				if _acce := d.DecodeElement(_aebff, &_ddacg); _acce != nil {
					return _acce
				}
				_febg.Condense = append(_febg.Condense, _aebff)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}:
				_cffbf := NewCT_BooleanProperty()
				if _fdfbe := d.DecodeElement(_cffbf, &_ddacg); _fdfbe != nil {
					return _fdfbe
				}
				_febg.Extend = append(_febg.Extend, _cffbf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_gdbdb := NewCT_Color()
				if _efdbc := d.DecodeElement(_gdbdb, &_ddacg); _efdbc != nil {
					return _efdbc
				}
				_febg.Color = append(_febg.Color, _gdbdb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}:
				_fegebf := NewCT_FontSize()
				if _afbfd := d.DecodeElement(_fegebf, &_ddacg); _afbfd != nil {
					return _afbfd
				}
				_febg.Sz = append(_febg.Sz, _fegebf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}:
				_ebgfg := NewCT_UnderlineProperty()
				if _gegbc := d.DecodeElement(_ebgfg, &_ddacg); _gegbc != nil {
					return _gegbc
				}
				_febg.U = append(_febg.U, _ebgfg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}:
				_gebgb := NewCT_VerticalAlignFontProperty()
				if _feeed := d.DecodeElement(_gebgb, &_ddacg); _feeed != nil {
					return _feeed
				}
				_febg.VertAlign = append(_febg.VertAlign, _gebgb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}:
				_bfced := NewCT_FontScheme()
				if _bgbe := d.DecodeElement(_bfced, &_ddacg); _bgbe != nil {
					return _bgbe
				}
				_febg.Scheme = append(_febg.Scheme, _bfced)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u006f\u006e\u0074\u0020\u0025\u0076", _ddacg.Name)
				if _fdcgc := d.Skip(); _fdcgc != nil {
					return _fdcgc
				}
			}
		case _b.EndElement:
			break _ecbfb
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PivotHierarchy and its children, prefixing error messages with path
func (_gbaff *CT_PivotHierarchy) ValidateWithPath(path string) error {
	if _gbaff.Mps != nil {
		if _eccgbe := _gbaff.Mps.ValidateWithPath(path + "\u002f\u004d\u0070\u0073"); _eccgbe != nil {
			return _eccgbe
		}
	}
	for _gdabd, _acffa := range _gbaff.Members {
		if _afbce := _acffa.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u004d\u0065\u006d\u0062\u0065\u0072s\u005b\u0025\u0064\u005d", path, _gdabd)); _afbce != nil {
			return _afbce
		}
	}
	if _gbaff.ExtLst != nil {
		if _dbfdb := _gbaff.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dbfdb != nil {
			return _dbfdb
		}
	}
	return nil
}

func (_bddcbde *ST_VerticalAlignment) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bddcbde = 0
	case "\u0074\u006f\u0070":
		*_bddcbde = 1
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_bddcbde = 2
	case "\u0062\u006f\u0074\u0074\u006f\u006d":
		*_bddcbde = 3
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_bddcbde = 4
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_bddcbde = 5
	}
	return nil
}

func (_ecbcg *CT_Consolidation) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ecbcg.AutoPageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_ecbcg.AutoPageAttr))})
	}
	e.EncodeToken(start)
	if _ecbcg.Pages != nil {
		_aacgb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u0073"}}
		e.EncodeElement(_ecbcg.Pages, _aacgb)
	}
	_gagb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073"}}
	e.EncodeElement(_ecbcg.RangeSets, _gagb)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_LevelGroup and its children
func (_debf *CT_LevelGroup) Validate() error {
	return _debf.ValidateWithPath("\u0043\u0054\u005f\u004c\u0065\u0076\u0065\u006c\u0047\u0072\u006f\u0075\u0070")
}

func (_eadcba ST_PhoneticType) ValidateWithPath(path string) error {
	switch _eadcba {
	case 0, 1, 2, 3, 4:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eadcba))
	}
	return nil
}

// ValidateWithPath validates the CT_VerticalAlignFontProperty and its children, prefixing error messages with path
func (_befafeg *CT_VerticalAlignFontProperty) ValidateWithPath(path string) error {
	if _befafeg.ValAttr == _bb.ST_VerticalAlignRunUnset {
		return _ec.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _befbe := _befafeg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _befbe != nil {
		return _befbe
	}
	return nil
}

const (
	ST_VisibilityUnset      ST_Visibility = 0
	ST_VisibilityVisible    ST_Visibility = 1
	ST_VisibilityHidden     ST_Visibility = 2
	ST_VisibilityVeryHidden ST_Visibility = 3
)

func (_abfbcg *CT_RgbColor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aadba := range start.Attr {
		if _aadba.Name.Local == "\u0072\u0067\u0062" {
			_adfda, _fbege := _aadba.Value, error(nil)
			if _fbege != nil {
				return _fbege
			}
			_abfbcg.RgbAttr = &_adfda
			continue
		}
	}
	for {
		_bdfde, _edbda := d.Token()
		if _edbda != nil {
			return _ec.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072\u003a\u0020\u0025\u0073", _edbda)
		}
		if _cafec, _fadad := _bdfde.(_b.EndElement); _fadad && _cafec.Name == start.Name {
			break
		}
	}
	return nil
}

func (_bbeba *CT_RevisionQueryTableField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adcefe := range start.Attr {
		if _adcefe.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_edecf, _beeee := _eb.ParseUint(_adcefe.Value, 10, 32)
			if _beeee != nil {
				return _beeee
			}
			_bbeba.SheetIdAttr = uint32(_edecf)
			continue
		}
		if _adcefe.Name.Local == "\u0072\u0065\u0066" {
			_ffcad, _ebdbe := _adcefe.Value, error(nil)
			if _ebdbe != nil {
				return _ebdbe
			}
			_bbeba.RefAttr = _ffcad
			continue
		}
		if _adcefe.Name.Local == "\u0066i\u0065\u006c\u0064\u0049\u0064" {
			_cdefg, _dcbffb := _eb.ParseUint(_adcefe.Value, 10, 32)
			if _dcbffb != nil {
				return _dcbffb
			}
			_bbeba.FieldIdAttr = uint32(_cdefg)
			continue
		}
	}
	for {
		_abbbb, _cfece := d.Token()
		if _cfece != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0051\u0075\u0065\u0072\u0079T\u0061\u0062\u006c\u0065\u0046i\u0065\u006cd\u003a\u0020\u0025\u0073", _cfece)
		}
		if _gagaff, _bceee := _abbbb.(_b.EndElement); _bceee && _gagaff.Name == start.Name {
			break
		}
	}
	return nil
}

func (_acefc *CT_Error) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gcfbc := range start.Attr {
		if _gcfbc.Name.Local == "\u0066\u0063" {
			_dadde, _fcaff := _gcfbc.Value, error(nil)
			if _fcaff != nil {
				return _fcaff
			}
			_acefc.FcAttr = &_dadde
			continue
		}
		if _gcfbc.Name.Local == "\u0076" {
			_dcbeg, _febe := _gcfbc.Value, error(nil)
			if _febe != nil {
				return _febe
			}
			_acefc.VAttr = _dcbeg
			continue
		}
		if _gcfbc.Name.Local == "\u0066" {
			_gdfec, _beeegg := _eb.ParseBool(_gcfbc.Value)
			if _beeegg != nil {
				return _beeegg
			}
			_acefc.FAttr = &_gdfec
			continue
		}
		if _gcfbc.Name.Local == "\u0063" {
			_dbccb, _cdgf := _gcfbc.Value, error(nil)
			if _cdgf != nil {
				return _cdgf
			}
			_acefc.CAttr = &_dbccb
			continue
		}
		if _gcfbc.Name.Local == "\u0063\u0070" {
			_babb, _ggfea := _eb.ParseUint(_gcfbc.Value, 10, 32)
			if _ggfea != nil {
				return _ggfea
			}
			_eeagf := uint32(_babb)
			_acefc.CpAttr = &_eeagf
			continue
		}
		if _gcfbc.Name.Local == "\u0069\u006e" {
			_ecafg, _baabb := _eb.ParseUint(_gcfbc.Value, 10, 32)
			if _baabb != nil {
				return _baabb
			}
			_fcgfa := uint32(_ecafg)
			_acefc.InAttr = &_fcgfa
			continue
		}
		if _gcfbc.Name.Local == "\u0062\u0063" {
			_gcgce, _fadga := _gcfbc.Value, error(nil)
			if _fadga != nil {
				return _fadga
			}
			_acefc.BcAttr = &_gcgce
			continue
		}
		if _gcfbc.Name.Local == "\u0075" {
			_gbabb, _adgga := _eb.ParseBool(_gcfbc.Value)
			if _adgga != nil {
				return _adgga
			}
			_acefc.UAttr = &_gbabb
			continue
		}
		if _gcfbc.Name.Local == "\u0069" {
			_agaag, _facfe := _eb.ParseBool(_gcfbc.Value)
			if _facfe != nil {
				return _facfe
			}
			_acefc.IAttr = &_agaag
			continue
		}
		if _gcfbc.Name.Local == "\u0075\u006e" {
			_edgdb, _abbd := _eb.ParseBool(_gcfbc.Value)
			if _abbd != nil {
				return _abbd
			}
			_acefc.UnAttr = &_edgdb
			continue
		}
		if _gcfbc.Name.Local == "\u0073\u0074" {
			_fbedg, _cgaaf := _eb.ParseBool(_gcfbc.Value)
			if _cgaaf != nil {
				return _cgaaf
			}
			_acefc.StAttr = &_fbedg
			continue
		}
		if _gcfbc.Name.Local == "\u0062" {
			_eeadb, _ffbaba := _eb.ParseBool(_gcfbc.Value)
			if _ffbaba != nil {
				return _ffbaba
			}
			_acefc.BAttr = &_eeadb
			continue
		}
	}
_bgbag:
	for {
		_ffdcc, _dbbeb := d.Token()
		if _dbbeb != nil {
			return _dbbeb
		}
		switch _fgcbb := _ffdcc.(type) {
		case _b.StartElement:
			switch _fgcbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_acefc.Tpls = NewCT_Tuples()
				if _afaee := d.DecodeElement(_acefc.Tpls, &_fgcbb); _afaee != nil {
					return _afaee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_edfac := NewCT_X()
				if _ggcd := d.DecodeElement(_edfac, &_fgcbb); _ggcd != nil {
					return _ggcd
				}
				_acefc.X = append(_acefc.X, _edfac)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0072\u0072\u006f\u0072\u0020\u0025\u0076", _fgcbb.Name)
				if _ffcgd := d.Skip(); _ffcgd != nil {
					return _ffcgd
				}
			}
		case _b.EndElement:
			break _bgbag
		case _b.CharData:
		}
	}
	return nil
}

func (_gaebd ST_PaneState) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_addce := _b.Attr{}
	_addce.Name = name
	switch _gaebd {
	case ST_PaneStateUnset:
		_addce.Value = ""
	case ST_PaneStateSplit:
		_addce.Value = "\u0073\u0070\u006ci\u0074"
	case ST_PaneStateFrozen:
		_addce.Value = "\u0066\u0072\u006f\u007a\u0065\u006e"
	case ST_PaneStateFrozenSplit:
		_addce.Value = "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074"
	}
	return _addce, nil
}

func NewCT_Hyperlink() *CT_Hyperlink { _debddf := &CT_Hyperlink{}; return _debddf }

func NewCT_SharedUser() *CT_SharedUser {
	_adaddg := &CT_SharedUser{}
	_adaddg.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _adaddg
}

func (_ebfa *CT_CellSmartTags) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _ec.Sprintf("\u0025\u0076", _ebfa.RAttr)})
	e.EncodeToken(start)
	_acaa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067"}}
	for _, _fgaec := range _ebfa.CellSmartTag {
		e.EncodeElement(_fgaec, _acaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_QueryCache and its children
func (_gaeda *CT_QueryCache) Validate() error {
	return _gaeda.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065")
}

func (_fcdfa *CT_RgbColor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fcdfa.RgbAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0067\u0062"}, Value: _ec.Sprintf("\u0025\u0076", *_fcdfa.RgbAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_aebfg *CT_TableParts) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abgac := range start.Attr {
		if _abgac.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gdfbe, _befab := _eb.ParseUint(_abgac.Value, 10, 32)
			if _befab != nil {
				return _befab
			}
			_ggbedea := uint32(_gdfbe)
			_aebfg.CountAttr = &_ggbedea
			continue
		}
	}
_gaafc:
	for {
		_ffbaf, _acgfg := d.Token()
		if _acgfg != nil {
			return _acgfg
		}
		switch _egbbg := _ffbaf.(type) {
		case _b.StartElement:
			switch _egbbg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0062\u006c\u0065\u0050\u0061\u0072t"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0062\u006c\u0065\u0050\u0061\u0072t"}:
				_fgadd := NewCT_TablePart()
				if _bdegg := d.DecodeElement(_fgadd, &_egbbg); _bdegg != nil {
					return _bdegg
				}
				_aebfg.TablePart = append(_aebfg.TablePart, _fgadd)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054a\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073 \u0025\u0076", _egbbg.Name)
				if _edaga := d.Skip(); _edaga != nil {
					return _edaga
				}
			}
		case _b.EndElement:
			break _gaafc
		case _b.CharData:
		}
	}
	return nil
}

func (_bedd *CT_ExternalCell) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bedd.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_bedd.RAttr)})
	}
	if _bedd.TAttr != ST_CellTypeUnset {
		_cdgg, _aafee := _bedd.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _aafee != nil {
			return _aafee
		}
		start.Attr = append(start.Attr, _cdgg)
	}
	if _bedd.VmAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u006d"}, Value: _ec.Sprintf("\u0025\u0076", *_bedd.VmAttr)})
	}
	e.EncodeToken(start)
	if _bedd.V != nil {
		_begf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0076"}}
		_f.AddPreserveSpaceAttr(&_begf, *_bedd.V)
		e.EncodeElement(_bedd.V, _begf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fcbdg *CT_QueryCache) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fcbdg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_fcbdg.CountAttr)})
	}
	e.EncodeToken(start)
	_bgdfd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079"}}
	for _, _dcccc := range _fcbdg.Query {
		e.EncodeElement(_dcccc, _bgdfd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_geaac *CT_MRUColors) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cfaga:
	for {
		_caaaa, _gebedb := d.Token()
		if _gebedb != nil {
			return _gebedb
		}
		switch _gdbae := _caaaa.(type) {
		case _b.StartElement:
			switch _gdbae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_gfageg := NewCT_Color()
				if _acaeb := d.DecodeElement(_gfageg, &_gdbae); _acaeb != nil {
					return _acaeb
				}
				_geaac.Color = append(_geaac.Color, _gfageg)
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_M\u0052\u0055C\u006f\u006c\u006f\u0072\u0073\u0020\u0025\u0076", _gdbae.Name)
				if _fgaae := d.Skip(); _fgaae != nil {
					return _fgaae
				}
			}
		case _b.EndElement:
			break _cfaga
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ExternalSheetNames and its children
func (_ababd *CT_ExternalSheetNames) Validate() error {
	return _ababd.ValidateWithPath("C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0053\u0068\u0065e\u0074\u004e\u0061\u006d\u0065\u0073")
}

func (_cfecb ST_OleUpdate) ValidateWithPath(path string) error {
	switch _cfecb {
	case 0, 1, 2:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cfecb))
	}
	return nil
}

func NewCT_VolType() *CT_VolType {
	_gcbfg := &CT_VolType{}
	_gcbfg.TypeAttr = ST_VolDepType(1)
	return _gcbfg
}

func (_gffa *CT_PivotFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gffa.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_gffa.CountAttr)})
	}
	e.EncodeToken(start)
	_aacad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064"}}
	for _, _gadcb := range _gffa.PivotField {
		e.EncodeElement(_gadcb, _aacad)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_cgbeg ST_UpdateLinks) String() string {
	switch _cgbeg {
	case 0:
		return ""
	case 1:
		return "\u0075s\u0065\u0072\u0053\u0065\u0074"
	case 2:
		return "\u006e\u0065\u0076e\u0072"
	case 3:
		return "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return ""
}

func (_eafg *CT_DataBar) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eafg.MinLengthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006di\u006e\u004c\u0065\u006e\u0067\u0074h"}, Value: _ec.Sprintf("\u0025\u0076", *_eafg.MinLengthAttr)})
	}
	if _eafg.MaxLengthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006da\u0078\u004c\u0065\u006e\u0067\u0074h"}, Value: _ec.Sprintf("\u0025\u0076", *_eafg.MaxLengthAttr)})
	}
	if _eafg.ShowValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_eafg.ShowValueAttr))})
	}
	e.EncodeToken(start)
	_gcea := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u0066\u0076\u006f"}}
	for _, _dfebb := range _eafg.Cfvo {
		e.EncodeElement(_dfebb, _gcea)
	}
	_abea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	e.EncodeElement(_eafg.Color, _abea)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_abcbf *CT_RangePr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cefca := range start.Attr {
		if _cefca.Name.Local == "\u0061u\u0074\u006f\u0053\u0074\u0061\u0072t" {
			_dffgcd, _cgfee := _eb.ParseBool(_cefca.Value)
			if _cgfee != nil {
				return _cgfee
			}
			_abcbf.AutoStartAttr = &_dffgcd
			continue
		}
		if _cefca.Name.Local == "\u0061u\u0074\u006f\u0045\u006e\u0064" {
			_febcg, _cabbb := _eb.ParseBool(_cefca.Value)
			if _cabbb != nil {
				return _cabbb
			}
			_abcbf.AutoEndAttr = &_febcg
			continue
		}
		if _cefca.Name.Local == "\u0067r\u006f\u0075\u0070\u0042\u0079" {
			_abcbf.GroupByAttr.UnmarshalXMLAttr(_cefca)
			continue
		}
		if _cefca.Name.Local == "\u0073\u0074\u0061\u0072\u0074\u004e\u0075\u006d" {
			_dggda, _gfaag := _eb.ParseFloat(_cefca.Value, 64)
			if _gfaag != nil {
				return _gfaag
			}
			_abcbf.StartNumAttr = &_dggda
			continue
		}
		if _cefca.Name.Local == "\u0065\u006e\u0064\u004e\u0075\u006d" {
			_befdg, _ccadg := _eb.ParseFloat(_cefca.Value, 64)
			if _ccadg != nil {
				return _ccadg
			}
			_abcbf.EndNumAttr = &_befdg
			continue
		}
		if _cefca.Name.Local == "\u0073t\u0061\u0072\u0074\u0044\u0061\u0074e" {
			_efdeb, _ddfcgf := ParseStdlibTime(_cefca.Value)
			if _ddfcgf != nil {
				return _ddfcgf
			}
			_abcbf.StartDateAttr = &_efdeb
			continue
		}
		if _cefca.Name.Local == "\u0065n\u0064\u0044\u0061\u0074\u0065" {
			_faeebd, _debdf := ParseStdlibTime(_cefca.Value)
			if _debdf != nil {
				return _debdf
			}
			_abcbf.EndDateAttr = &_faeebd
			continue
		}
		if _cefca.Name.Local == "\u0067\u0072\u006f\u0075\u0070\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c" {
			_eebfag, _ceecg := _eb.ParseFloat(_cefca.Value, 64)
			if _ceecg != nil {
				return _ceecg
			}
			_abcbf.GroupIntervalAttr = &_eebfag
			continue
		}
	}
	for {
		_eggfec, _eaaegb := d.Token()
		if _eaaegb != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0050\u0072\u003a\u0020%\u0073", _eaaegb)
		}
		if _eaddg, _gfade := _eggfec.(_b.EndElement); _gfade && _eaddg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cbccfb ST_DataValidationImeMode) String() string {
	switch _cbccfb {
	case 0:
		return ""
	case 1:
		return "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case 2:
		return "\u006f\u0066\u0066"
	case 3:
		return "\u006f\u006e"
	case 4:
		return "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"
	case 5:
		return "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case 6:
		return "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case 7:
		return "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case 8:
		return "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a"
	case 9:
		return "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a"
	case 10:
		return "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c"
	case 11:
		return "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c"
	}
	return ""
}

// Validate validates the CT_ExternalReferences and its children
func (_bcbad *CT_ExternalReferences) Validate() error {
	return _bcbad.ValidateWithPath("C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0073")
}

func (_aaea *CT_InputCells) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _ec.Sprintf("\u0025\u0076", _aaea.RAttr)})
	if _aaea.DeletedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u006c\u0065\u0074\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aaea.DeletedAttr))})
	}
	if _aaea.UndoneAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0064\u006f\u006e\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aaea.UndoneAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", _aaea.ValAttr)})
	if _aaea.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_aaea.NumFmtIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_DdeValue struct {

	// DDE Value Type
	TAttr ST_DdeValueType

	// DDE Link Value
	Val string
}

func (_defafa ST_WebSourceType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cedbaa := _b.Attr{}
	_cedbaa.Name = name
	switch _defafa {
	case ST_WebSourceTypeUnset:
		_cedbaa.Value = ""
	case ST_WebSourceTypeSheet:
		_cedbaa.Value = "\u0073\u0068\u0065e\u0074"
	case ST_WebSourceTypePrintArea:
		_cedbaa.Value = "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a"
	case ST_WebSourceTypeAutoFilter:
		_cedbaa.Value = "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"
	case ST_WebSourceTypeRange:
		_cedbaa.Value = "\u0072\u0061\u006eg\u0065"
	case ST_WebSourceTypeChart:
		_cedbaa.Value = "\u0063\u0068\u0061r\u0074"
	case ST_WebSourceTypePivotTable:
		_cedbaa.Value = "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065"
	case ST_WebSourceTypeQuery:
		_cedbaa.Value = "\u0071\u0075\u0065r\u0079"
	case ST_WebSourceTypeLabel:
		_cedbaa.Value = "\u006c\u0061\u0062e\u006c"
	}
	return _cedbaa, nil
}

type ST_MdxFunctionType byte

// ValidateWithPath validates the CT_RangeSets and its children, prefixing error messages with path
func (_eagfa *CT_RangeSets) ValidateWithPath(path string) error {
	for _aecfa, _ccfdc := range _eagfa.RangeSet {
		if _effcc := _ccfdc.ValidateWithPath(_ec.Sprintf("\u0025s\u002fR\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u005b\u0025\u0064\u005d", path, _aecfa)); _effcc != nil {
			return _effcc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Field and its children, prefixing error messages with path
func (_fbcf *CT_Field) ValidateWithPath(path string) error { return nil }

func (_aeccbg ST_FieldSortType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_aeccbg.String(), start)
}

type CT_FontFamily struct{ ValAttr int64 }

// Validate validates the CT_CellSmartTagPr and its children
func (_bfca *CT_CellSmartTagPr) Validate() error {
	return _bfca.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072")
}

// ValidateWithPath validates the CT_ExternalSheetDataSet and its children, prefixing error messages with path
func (_cebdb *CT_ExternalSheetDataSet) ValidateWithPath(path string) error {
	for _facdgc, _gefea := range _cebdb.SheetData {
		if _cdbfd := _gefea.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u005b\u0025\u0064\u005d", path, _facdgc)); _cdbfd != nil {
			return _cdbfd
		}
	}
	return nil
}

func NewCT_Tuples() *CT_Tuples { _efegb := &CT_Tuples{}; return _efegb }

type CT_Scenarios struct {

	// Current Scenario
	CurrentAttr *uint32

	// Last Shown Scenario
	ShowAttr *uint32

	// Sequence of References
	SqrefAttr *ST_Sqref

	// Scenario
	Scenario []*CT_Scenario
}

type CT_TableStyles struct {

	// Table Style Count
	CountAttr *uint32

	// Default Table Style
	DefaultTableStyleAttr *string

	// Default Pivot Style
	DefaultPivotStyleAttr *string

	// Table Style
	TableStyle []*CT_TableStyle
}

func (_ffgbg ST_HtmlFmt) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gdgca := _b.Attr{}
	_gdgca.Name = name
	switch _ffgbg {
	case ST_HtmlFmtUnset:
		_gdgca.Value = ""
	case ST_HtmlFmtNone:
		_gdgca.Value = "\u006e\u006f\u006e\u0065"
	case ST_HtmlFmtRtf:
		_gdgca.Value = "\u0072\u0074\u0066"
	case ST_HtmlFmtAll:
		_gdgca.Value = "\u0061\u006c\u006c"
	}
	return _gdgca, nil
}

type CT_Set struct {

	// Number of Tuples
	CountAttr *uint32

	// Maximum Rank Requested
	MaxRankAttr int32

	// MDX Set Definition
	SetDefinitionAttr string

	// Set Sort Order
	SortTypeAttr ST_SortType

	// Query Failed
	QueryFailedAttr *bool

	// Tuples
	Tpls []*CT_Tuples

	// Sort By Tuple
	SortByTuple *CT_Tuples
}

func (_bcadb *CT_ServerFormats) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bggbg := range start.Attr {
		if _bggbg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fbaefa, _gadcgd := _eb.ParseUint(_bggbg.Value, 10, 32)
			if _gadcgd != nil {
				return _gadcgd
			}
			_gbdac := uint32(_fbaefa)
			_bcadb.CountAttr = &_gbdac
			continue
		}
	}
_dadfd:
	for {
		_fcgabe, _dcdfbb := d.Token()
		if _dcdfbb != nil {
			return _dcdfbb
		}
		switch _abfef := _fcgabe.(type) {
		case _b.StartElement:
			switch _abfef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074"}:
				_abeee := NewCT_ServerFormat()
				if _fbafd := d.DecodeElement(_abeee, &_abfef); _fbafd != nil {
					return _fbafd
				}
				_bcadb.ServerFormat = append(_bcadb.ServerFormat, _abeee)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025v", _abfef.Name)
				if _bbbdaf := d.Skip(); _bbbdaf != nil {
					return _bbbdaf
				}
			}
		case _b.EndElement:
			break _dadfd
		case _b.CharData:
		}
	}
	return nil
}

type CT_DeletedField struct {

	// Deleted Fields Name
	NameAttr string
}

func (_ggfcc *CT_Tuples) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbdce := range start.Attr {
		if _fbdce.Name.Local == "\u0063" {
			_bafcb, _afegd := _eb.ParseUint(_fbdce.Value, 10, 32)
			if _afegd != nil {
				return _afegd
			}
			_ebccaa := uint32(_bafcb)
			_ggfcc.CAttr = &_ebccaa
			continue
		}
	}
_fgbaa:
	for {
		_bedgg, _fefgd := d.Token()
		if _fefgd != nil {
			return _fefgd
		}
		switch _eedga := _bedgg.(type) {
		case _b.StartElement:
			switch _eedga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c"}:
				_addcd := NewCT_Tuple()
				if _abefd := d.DecodeElement(_addcd, &_eedga); _abefd != nil {
					return _abefd
				}
				_ggfcc.Tpl = append(_ggfcc.Tpl, _addcd)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0054\u0075\u0070l\u0065\u0073 \u0025\u0076", _eedga.Name)
				if _aafed := d.Skip(); _aafed != nil {
					return _aafed
				}
			}
		case _b.EndElement:
			break _fgbaa
		case _b.CharData:
		}
	}
	return nil
}

func (_gbcg *CT_CustomProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _gbcg.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _gbcg.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_fgfae ST_ShowDataAs) ValidateWithPath(path string) error {
	switch _fgfae {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgfae))
	}
	return nil
}

func (_gdfca ST_MdxSetOrder) String() string {
	switch _gdfca {
	case 0:
		return ""
	case 1:
		return "\u0075"
	case 2:
		return "\u0061"
	case 3:
		return "\u0064"
	case 4:
		return "\u0061\u0061"
	case 5:
		return "\u0061\u0064"
	case 6:
		return "\u006e\u0061"
	case 7:
		return "\u006e\u0064"
	}
	return ""
}

type CT_PhoneticRun struct {

	// Base Text Start Index
	SbAttr uint32

	// Base Text End Index
	EbAttr uint32

	// Text
	T string
}

func NewExternalLink() *ExternalLink {
	_gcadc := &ExternalLink{}
	_gcadc.CT_ExternalLink = *NewCT_ExternalLink()
	return _gcadc
}

func (_gcgffd ST_PrintError) Validate() error { return _gcgffd.ValidateWithPath("") }

func NewCT_FunctionGroup() *CT_FunctionGroup { _eacfa := &CT_FunctionGroup{}; return _eacfa }

// ValidateWithPath validates the CT_Stylesheet and its children, prefixing error messages with path
func (_eabdbc *CT_Stylesheet) ValidateWithPath(path string) error {
	if _eabdbc.NumFmts != nil {
		if _bceed := _eabdbc.NumFmts.ValidateWithPath(path + "\u002f\u004e\u0075\u006d\u0046\u006d\u0074\u0073"); _bceed != nil {
			return _bceed
		}
	}
	if _eabdbc.Fonts != nil {
		if _aefgf := _eabdbc.Fonts.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0073"); _aefgf != nil {
			return _aefgf
		}
	}
	if _eabdbc.Fills != nil {
		if _aaagaa := _eabdbc.Fills.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0073"); _aaagaa != nil {
			return _aaagaa
		}
	}
	if _eabdbc.Borders != nil {
		if _fggcge := _eabdbc.Borders.ValidateWithPath(path + "\u002f\u0042\u006f\u0072\u0064\u0065\u0072\u0073"); _fggcge != nil {
			return _fggcge
		}
	}
	if _eabdbc.CellStyleXfs != nil {
		if _eeffg := _eabdbc.CellStyleXfs.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"); _eeffg != nil {
			return _eeffg
		}
	}
	if _eabdbc.CellXfs != nil {
		if _abdace := _eabdbc.CellXfs.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u0058\u0066\u0073"); _abdace != nil {
			return _abdace
		}
	}
	if _eabdbc.CellStyles != nil {
		if _bgbge := _eabdbc.CellStyles.ValidateWithPath(path + "/\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"); _bgbge != nil {
			return _bgbge
		}
	}
	if _eabdbc.Dxfs != nil {
		if _cddeg := _eabdbc.Dxfs.ValidateWithPath(path + "\u002f\u0044\u0078f\u0073"); _cddeg != nil {
			return _cddeg
		}
	}
	if _eabdbc.TableStyles != nil {
		if _aadac := _eabdbc.TableStyles.ValidateWithPath(path + "\u002f\u0054\u0061b\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"); _aadac != nil {
			return _aadac
		}
	}
	if _eabdbc.Colors != nil {
		if _fecac := _eabdbc.Colors.ValidateWithPath(path + "\u002fC\u006f\u006c\u006f\u0072\u0073"); _fecac != nil {
			return _fecac
		}
	}
	if _eabdbc.ExtLst != nil {
		if _aaeda := _eabdbc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aaeda != nil {
			return _aaeda
		}
	}
	return nil
}

func NewCT_Comments() *CT_Comments {
	_geff := &CT_Comments{}
	_geff.Authors = NewCT_Authors()
	_geff.CommentList = NewCT_CommentList()
	return _geff
}

// ValidateWithPath validates the CT_TableParts and its children, prefixing error messages with path
func (_dafcd *CT_TableParts) ValidateWithPath(path string) error {
	for _cegdb, _bggdca := range _dafcd.TablePart {
		if _bagff := _bggdca.ValidateWithPath(_ec.Sprintf("\u0025\u0073/\u0054\u0061\u0062l\u0065\u0050\u0061\u0072\u0074\u005b\u0025\u0064\u005d", path, _cegdb)); _bagff != nil {
			return _bagff
		}
	}
	return nil
}

func (_eddfa *CT_Tuples) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eddfa.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _ec.Sprintf("\u0025\u0076", *_eddfa.CAttr)})
	}
	e.EncodeToken(start)
	_fafge := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0070\u006c"}}
	for _, _abggb := range _eddfa.Tpl {
		e.EncodeElement(_abggb, _fafge)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_baeda ST_DdeValueType) String() string {
	switch _baeda {
	case 0:
		return ""
	case 1:
		return "\u006e\u0069\u006c"
	case 2:
		return "\u0062"
	case 3:
		return "\u006e"
	case 4:
		return "\u0065"
	case 5:
		return "\u0073\u0074\u0072"
	}
	return ""
}

// Validate validates the CT_ChartsheetViews and its children
func (_ccec *CT_ChartsheetViews) Validate() error {
	return _ccec.ValidateWithPath("\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073h\u0065\u0065t\u0056\u0069\u0065\u0077\u0073")
}

func (_dcd *CT_Border) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dcd.DiagonalUpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c\u0055\u0070"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dcd.DiagonalUpAttr))})
	}
	if _dcd.DiagonalDownAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0061g\u006f\u006e\u0061\u006c\u0044\u006f\u0077\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dcd.DiagonalDownAttr))})
	}
	if _dcd.OutlineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_dcd.OutlineAttr))})
	}
	e.EncodeToken(start)
	if _dcd.Start != nil {
		_aaa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0074\u0061\u0072\u0074"}}
		e.EncodeElement(_dcd.Start, _aaa)
	}
	if _dcd.End != nil {
		_egf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065\u006e\u0064"}}
		e.EncodeElement(_dcd.End, _egf)
	}
	if _dcd.Left != nil {
		_ceaf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006c\u0065\u0066\u0074"}}
		e.EncodeElement(_dcd.Left, _ceaf)
	}
	if _dcd.Right != nil {
		_acfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_dcd.Right, _acfa)
	}
	if _dcd.Top != nil {
		_ecga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u006f\u0070"}}
		e.EncodeElement(_dcd.Top, _ecga)
	}
	if _dcd.Bottom != nil {
		_aag := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0062\u006f\u0074\u0074\u006fm"}}
		e.EncodeElement(_dcd.Bottom, _aag)
	}
	if _dcd.Diagonal != nil {
		_egg := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c"}}
		e.EncodeElement(_dcd.Diagonal, _egg)
	}
	if _dcd.Vertical != nil {
		_bga := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}}
		e.EncodeElement(_dcd.Vertical, _bga)
	}
	if _dcd.Horizontal != nil {
		_adee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"}}
		e.EncodeElement(_dcd.Horizontal, _adee)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Map and its children, prefixing error messages with path
func (_ecfbc *CT_Map) ValidateWithPath(path string) error {
	if _ecfbc.DataBinding != nil {
		if _fabcg := _ecfbc.DataBinding.ValidateWithPath(path + "\u002f\u0044\u0061t\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"); _fabcg != nil {
			return _fabcg
		}
	}
	return nil
}

type CT_MemberProperties struct {

	// OLAP Member Properties Count
	CountAttr *uint32

	// OLAP Member Property
	Mp []*CT_MemberProperty
}

func (_fbfac *CT_GroupMember) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _addcf := range start.Attr {
		if _addcf.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_cbgc, _ecddb := _addcf.Value, error(nil)
			if _ecddb != nil {
				return _ecddb
			}
			_fbfac.UniqueNameAttr = _cbgc
			continue
		}
		if _addcf.Name.Local == "\u0067\u0072\u006fu\u0070" {
			_affd, _gfebbe := _eb.ParseBool(_addcf.Value)
			if _gfebbe != nil {
				return _gfebbe
			}
			_fbfac.GroupAttr = &_affd
			continue
		}
	}
	for {
		_gefba, _fdefad := d.Token()
		if _fdefad != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fG\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072:\u0020\u0025\u0073", _fdefad)
		}
		if _ccdfa, _acbdf := _gefba.(_b.EndElement); _acbdf && _ccdfa.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cdgbg *CT_QueryTableField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _cdgbg.IdAttr)})
	if _cdgbg.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_cdgbg.NameAttr)})
	}
	if _cdgbg.DataBoundAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064a\u0074\u0061\u0042\u006f\u0075\u006ed"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cdgbg.DataBoundAttr))})
	}
	if _cdgbg.RowNumbersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cdgbg.RowNumbersAttr))})
	}
	if _cdgbg.FillFormulasAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cdgbg.FillFormulasAttr))})
	}
	if _cdgbg.ClippedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063l\u0069\u0070\u0070\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_cdgbg.ClippedAttr))})
	}
	if _cdgbg.TableColumnIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_cdgbg.TableColumnIdAttr)})
	}
	e.EncodeToken(start)
	if _cdgbg.ExtLst != nil {
		_babeg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cdgbg.ExtLst, _babeg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_HierarchyUsage() *CT_HierarchyUsage { _cgfdg := &CT_HierarchyUsage{}; return _cgfdg }

func (_cccgb ST_SheetState) String() string {
	switch _cccgb {
	case 0:
		return ""
	case 1:
		return "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case 2:
		return "\u0068\u0069\u0064\u0064\u0065\u006e"
	case 3:
		return "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return ""
}

func (_aggddb *CT_ProtectedRange) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aggddb.PasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_aggddb.PasswordAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _ec.Sprintf("\u0025\u0076", _aggddb.SqrefAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _aggddb.NameAttr)})
	if _aggddb.SecurityDescriptorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_aggddb.SecurityDescriptorAttr)})
	}
	if _aggddb.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_aggddb.AlgorithmNameAttr)})
	}
	if _aggddb.HashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _ec.Sprintf("\u0025\u0076", *_aggddb.HashValueAttr)})
	}
	if _aggddb.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _ec.Sprintf("\u0025\u0076", *_aggddb.SaltValueAttr)})
	}
	if _aggddb.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _ec.Sprintf("\u0025\u0076", *_aggddb.SpinCountAttr)})
	}
	e.EncodeToken(start)
	if _aggddb.SecurityDescriptor != nil {
		_bfabf := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0073\u0065cu\u0072i\u0074\u0079\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072"}}
		for _, _gdeag := range _aggddb.SecurityDescriptor {
			e.EncodeElement(_gdeag, _bfabf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CommentList and its children
func (_begd *CT_CommentList) Validate() error {
	return _begd.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074")
}

func (_acdc *CT_Connection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _acdc.IdAttr)})
	if _acdc.SourceFileAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_acdc.SourceFileAttr)})
	}
	if _acdc.OdcFileAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fd\u0063\u0046\u0069\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_acdc.OdcFileAttr)})
	}
	if _acdc.KeepAliveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006be\u0065\u0070\u0041\u006c\u0069\u0076e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_acdc.KeepAliveAttr))})
	}
	if _acdc.IntervalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0074\u0065\u0072\u0076\u0061\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_acdc.IntervalAttr)})
	}
	if _acdc.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_acdc.NameAttr)})
	}
	if _acdc.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_acdc.DescriptionAttr)})
	}
	if _acdc.TypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0079\u0070\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_acdc.TypeAttr)})
	}
	if _acdc.ReconnectionMethodAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0063o\u006e\u006e\u0065\u0063\u0074i\u006f\u006eM\u0065\u0074\u0068\u006f\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_acdc.ReconnectionMethodAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", _acdc.RefreshedVersionAttr)})
	if _acdc.MinRefreshableVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_acdc.MinRefreshableVersionAttr)})
	}
	if _acdc.SavePasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0061\u0076e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_acdc.SavePasswordAttr))})
	}
	if _acdc.NewAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0065\u0077"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_acdc.NewAttr))})
	}
	if _acdc.DeletedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u006c\u0065\u0074\u0065\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_acdc.DeletedAttr))})
	}
	if _acdc.OnlyUseConnectionFileAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "o\u006e\u006c\u0079\u0055se\u0043o\u006e\u006e\u0065\u0063\u0074i\u006f\u006e\u0046\u0069\u006c\u0065"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_acdc.OnlyUseConnectionFileAttr))})
	}
	if _acdc.BackgroundAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_acdc.BackgroundAttr))})
	}
	if _acdc.RefreshOnLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_acdc.RefreshOnLoadAttr))})
	}
	if _acdc.SaveDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_acdc.SaveDataAttr))})
	}
	if _acdc.CredentialsAttr != ST_CredMethodUnset {
		_afdce, _ebfgf := _acdc.CredentialsAttr.MarshalXMLAttr(_b.Name{Local: "c\u0072\u0065\u0064\u0065\u006e\u0074\u0069\u0061\u006c\u0073"})
		if _ebfgf != nil {
			return _ebfgf
		}
		start.Attr = append(start.Attr, _afdce)
	}
	if _acdc.SingleSignOnIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0053\u0069\u0067n\u004f\u006e\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_acdc.SingleSignOnIdAttr)})
	}
	e.EncodeToken(start)
	if _acdc.DbPr != nil {
		_eebfd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0064\u0062\u0050\u0072"}}
		e.EncodeElement(_acdc.DbPr, _eebfd)
	}
	if _acdc.OlapPr != nil {
		_dfbb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006f\u006c\u0061\u0070\u0050r"}}
		e.EncodeElement(_acdc.OlapPr, _dfbb)
	}
	if _acdc.WebPr != nil {
		_abggf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0077\u0065\u0062\u0050\u0072"}}
		e.EncodeElement(_acdc.WebPr, _abggf)
	}
	if _acdc.TextPr != nil {
		_cgbe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0065\u0078\u0074\u0050r"}}
		e.EncodeElement(_acdc.TextPr, _cgbe)
	}
	if _acdc.Parameters != nil {
		_cebda := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_acdc.Parameters, _cebda)
	}
	if _acdc.ExtLst != nil {
		_ebcde := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_acdc.ExtLst, _ebcde)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_dfbfb *CT_Location) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbdfe := range start.Attr {
		if _fbdfe.Name.Local == "\u0072\u0065\u0066" {
			_bcbaa, _daccg := _fbdfe.Value, error(nil)
			if _daccg != nil {
				return _daccg
			}
			_dfbfb.RefAttr = _bcbaa
			continue
		}
		if _fbdfe.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064e\u0072\u0052\u006f\u0077" {
			_eegdb, _cdga := _eb.ParseUint(_fbdfe.Value, 10, 32)
			if _cdga != nil {
				return _cdga
			}
			_dfbfb.FirstHeaderRowAttr = uint32(_eegdb)
			continue
		}
		if _fbdfe.Name.Local == "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0052\u006f\u0077" {
			_cfebf, _agbaf := _eb.ParseUint(_fbdfe.Value, 10, 32)
			if _agbaf != nil {
				return _agbaf
			}
			_dfbfb.FirstDataRowAttr = uint32(_cfebf)
			continue
		}
		if _fbdfe.Name.Local == "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0043\u006f\u006c" {
			_beddg, _edgaef := _eb.ParseUint(_fbdfe.Value, 10, 32)
			if _edgaef != nil {
				return _edgaef
			}
			_dfbfb.FirstDataColAttr = uint32(_beddg)
			continue
		}
		if _fbdfe.Name.Local == "\u0072\u006f\u0077P\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074" {
			_aggba, _gbfgf := _eb.ParseUint(_fbdfe.Value, 10, 32)
			if _gbfgf != nil {
				return _gbfgf
			}
			_aegdc := uint32(_aggba)
			_dfbfb.RowPageCountAttr = &_aegdc
			continue
		}
		if _fbdfe.Name.Local == "\u0063\u006f\u006cP\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074" {
			_addb, _cbaeg := _eb.ParseUint(_fbdfe.Value, 10, 32)
			if _cbaeg != nil {
				return _cbaeg
			}
			_dbcgce := uint32(_addb)
			_dfbfb.ColPageCountAttr = &_dbcgce
			continue
		}
	}
	for {
		_baddb, _gabdc := d.Token()
		if _gabdc != nil {
			return _ec.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _gabdc)
		}
		if _baaad, _gcdcb := _baddb.(_b.EndElement); _gcdcb && _baaad.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_SheetData() *CT_SheetData { _dggce := &CT_SheetData{}; return _dggce }

func (_fdgfbf *ST_GrowShrinkType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cbeec, _beaef := d.Token()
	if _beaef != nil {
		return _beaef
	}
	if _bcbaad, _adebdf := _cbeec.(_b.EndElement); _adebdf && _bcbaad.Name == start.Name {
		*_fdgfbf = 1
		return nil
	}
	if _cdedg, _ccfedc := _cbeec.(_b.CharData); !_ccfedc {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbeec)
	} else {
		switch string(_cdedg) {
		case "":
			*_fdgfbf = 0
		case "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065":
			*_fdgfbf = 1
		case "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072":
			*_fdgfbf = 2
		case "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072":
			*_fdgfbf = 3
		}
	}
	_cbeec, _beaef = d.Token()
	if _beaef != nil {
		return _beaef
	}
	if _bfcfc, _baggb := _cbeec.(_b.EndElement); _baggb && _bfcfc.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbeec)
}

func NewCT_Pages() *CT_Pages { _adfa := &CT_Pages{}; return _adfa }

func NewCT_Tables() *CT_Tables { _gfdbe := &CT_Tables{}; return _gfdbe }

type CT_PivotAreaReference struct {

	// Field Index
	FieldAttr *uint32

	// Item Index Count
	CountAttr *uint32

	// Selected
	SelectedAttr *bool

	// Positional Reference
	ByPositionAttr *bool

	// Relative Reference
	RelativeAttr *bool

	// Include Default Filter
	DefaultSubtotalAttr *bool

	// Include Sum Filter
	SumSubtotalAttr *bool

	// Include CountA Filter
	CountASubtotalAttr *bool

	// Include Average Filter
	AvgSubtotalAttr *bool

	// Include Maximum Filter
	MaxSubtotalAttr *bool

	// Include Minimum Filter
	MinSubtotalAttr *bool

	// Include Product Filter
	ProductSubtotalAttr *bool

	// Include Count Subtotal
	CountSubtotalAttr *bool

	// Include StdDev Filter
	StdDevSubtotalAttr *bool

	// Include StdDevP Filter
	StdDevPSubtotalAttr *bool

	// Include Var Filter
	VarSubtotalAttr *bool

	// Include VarP Filter
	VarPSubtotalAttr *bool

	// Field Item
	X      []*CT_Index
	ExtLst *CT_ExtensionList
}

type Worksheet struct{ CT_Worksheet }

// Validate validates the Sst and its children
func (_cfdaaf *Sst) Validate() error { return _cfdaaf.ValidateWithPath("\u0053\u0073\u0074") }

func (_cccc *CT_PivotCacheRecords) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adbbc := range start.Attr {
		if _adbbc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fgcfa, _bfgdaa := _eb.ParseUint(_adbbc.Value, 10, 32)
			if _bfgdaa != nil {
				return _bfgdaa
			}
			_gcefg := uint32(_fgcfa)
			_cccc.CountAttr = &_gcefg
			continue
		}
	}
_bdabed:
	for {
		_cbcbda, _aeddb := d.Token()
		if _aeddb != nil {
			return _aeddb
		}
		switch _begae := _cbcbda.(type) {
		case _b.StartElement:
			switch _begae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_bbfb := NewCT_Record()
				if _fgcac := d.DecodeElement(_bbfb, &_begae); _fgcac != nil {
					return _fgcac
				}
				_cccc.R = append(_cccc.R, _bbfb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cccc.ExtLst = NewCT_ExtensionList()
				if _ggadc := d.DecodeElement(_cccc.ExtLst, &_begae); _ggadc != nil {
					return _ggadc
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065\u0063\u006f\u0072\u0064\u0073\u0020\u0025\u0076", _begae.Name)
				if _dggbc := d.Skip(); _dggbc != nil {
					return _dggbc
				}
			}
		case _b.EndElement:
			break _bdabed
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableColumns and its children, prefixing error messages with path
func (_cgdafc *CT_TableColumns) ValidateWithPath(path string) error {
	for _adfabc, _bced := range _cgdafc.TableColumn {
		if _fbgade := _bced.ValidateWithPath(_ec.Sprintf("\u0025s\u002fT\u0061\u0062\u006c\u0065\u0043o\u006c\u0075m\u006e\u005b\u0025\u0064\u005d", path, _adfabc)); _fbgade != nil {
			return _fbgade
		}
	}
	return nil
}

// Validate validates the CT_CacheHierarchy and its children
func (_afba *CT_CacheHierarchy) Validate() error {
	return _afba.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079")
}

func (_facgg ST_MdxFunctionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_facgg.String(), start)
}

func (_bcca *CT_Filters) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _begdc := range start.Attr {
		if _begdc.Name.Local == "\u0062\u006c\u0061n\u006b" {
			_bbefc, _cgfb := _eb.ParseBool(_begdc.Value)
			if _cgfb != nil {
				return _cgfb
			}
			_bcca.BlankAttr = &_bbefc
			continue
		}
		if _begdc.Name.Local == "\u0063\u0061\u006ce\u006e\u0064\u0061\u0072\u0054\u0079\u0070\u0065" {
			_bcca.CalendarTypeAttr.UnmarshalXMLAttr(_begdc)
			continue
		}
	}
_fccafa:
	for {
		_cgfced, _bfgcg := d.Token()
		if _bfgcg != nil {
			return _bfgcg
		}
		switch _beacf := _cgfced.(type) {
		case _b.StartElement:
			switch _beacf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}:
				_dbefef := NewCT_Filter()
				if _cfed := d.DecodeElement(_dbefef, &_beacf); _cfed != nil {
					return _cfed
				}
				_bcca.Filter = append(_bcca.Filter, _dbefef)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d"}:
				_gbgbg := NewCT_DateGroupItem()
				if _gecfb := d.DecodeElement(_gbgbg, &_beacf); _gecfb != nil {
					return _gecfb
				}
				_bcca.DateGroupItem = append(_bcca.DateGroupItem, _gbgbg)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fF\u0069\u006c\u0074\u0065\u0072\u0073\u0020\u0025\u0076", _beacf.Name)
				if _cgcg := d.Skip(); _cgcg != nil {
					return _cgcg
				}
			}
		case _b.EndElement:
			break _fccafa
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_ScopeUnset     ST_Scope = 0
	ST_ScopeSelection ST_Scope = 1
	ST_ScopeData      ST_Scope = 2
	ST_ScopeField     ST_Scope = 3
)

func (_ffbeba *CT_RevisionRowColumn) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ffbeba.ActionAttr = ST_rwColActionType(1)
	for _, _gdcaee := range start.Attr {
		if _gdcaee.Name.Local == "\u0073\u0049\u0064" {
			_abdfb, _bagedf := _eb.ParseUint(_gdcaee.Value, 10, 32)
			if _bagedf != nil {
				return _bagedf
			}
			_ffbeba.SIdAttr = uint32(_abdfb)
			continue
		}
		if _gdcaee.Name.Local == "\u0065\u006f\u006c" {
			_dagbe, _ddbec := _eb.ParseBool(_gdcaee.Value)
			if _ddbec != nil {
				return _ddbec
			}
			_ffbeba.EolAttr = &_dagbe
			continue
		}
		if _gdcaee.Name.Local == "\u0072\u0065\u0066" {
			_dgdcb, _gbfgd := _gdcaee.Value, error(nil)
			if _gbfgd != nil {
				return _gbfgd
			}
			_ffbeba.RefAttr = _dgdcb
			continue
		}
		if _gdcaee.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_ffbeba.ActionAttr.UnmarshalXMLAttr(_gdcaee)
			continue
		}
		if _gdcaee.Name.Local == "\u0065\u0064\u0067\u0065" {
			_dcebdc, _gcdfee := _eb.ParseBool(_gdcaee.Value)
			if _gcdfee != nil {
				return _gcdfee
			}
			_ffbeba.EdgeAttr = &_dcebdc
			continue
		}
		if _gdcaee.Name.Local == "\u0072\u0049\u0064" {
			_accdg, _dbgda := _eb.ParseUint(_gdcaee.Value, 10, 32)
			if _dbgda != nil {
				return _dbgda
			}
			_gfdee := uint32(_accdg)
			_ffbeba.RIdAttr = &_gfdee
			continue
		}
		if _gdcaee.Name.Local == "\u0075\u0061" {
			_cfcbe, _cfbgf := _eb.ParseBool(_gdcaee.Value)
			if _cfbgf != nil {
				return _cfbgf
			}
			_ffbeba.UaAttr = &_cfcbe
			continue
		}
		if _gdcaee.Name.Local == "\u0072\u0061" {
			_aeecg, _ccgea := _eb.ParseBool(_gdcaee.Value)
			if _ccgea != nil {
				return _ccgea
			}
			_ffbeba.RaAttr = &_aeecg
			continue
		}
	}
_adedb:
	for {
		_aagcf, _ebfbf := d.Token()
		if _ebfbf != nil {
			return _ebfbf
		}
		switch _bgbfe := _aagcf.(type) {
		case _b.StartElement:
			switch _bgbfe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}:
				_adaag := NewCT_UndoInfo()
				if _gccfc := d.DecodeElement(_adaag, &_bgbfe); _gccfc != nil {
					return _gccfc
				}
				_ffbeba.Undo = append(_ffbeba.Undo, _adaag)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_bdgbb := NewCT_RevisionCellChange()
				if _bbacb := d.DecodeElement(_bdgbb, &_bgbfe); _bbacb != nil {
					return _bbacb
				}
				_ffbeba.Rcc = append(_ffbeba.Rcc, _bdgbb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_afdcd := NewCT_RevisionFormatting()
				if _fbecg := d.DecodeElement(_afdcd, &_bgbfe); _fbecg != nil {
					return _fbecg
				}
				_ffbeba.Rfmt = append(_ffbeba.Rfmt, _afdcd)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0052\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0020\u0025\u0076", _bgbfe.Name)
				if _eecebc := d.Skip(); _eecebc != nil {
					return _eecebc
				}
			}
		case _b.EndElement:
			break _adedb
		case _b.CharData:
		}
	}
	return nil
}

func (_eaada *ExternalLink) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eaada.CT_ExternalLink = *NewCT_ExternalLink()
_cdgebf:
	for {
		_ddadba, _cfdcaf := d.Token()
		if _cfdcaf != nil {
			return _cfdcaf
		}
		switch _ddadec := _ddadba.(type) {
		case _b.StartElement:
			switch _ddadec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}:
				_eaada.Choice = NewCT_ExternalLinkChoice()
				if _gaaag := d.DecodeElement(&_eaada.Choice.ExternalBook, &_ddadec); _gaaag != nil {
					return _gaaag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}:
				_eaada.Choice = NewCT_ExternalLinkChoice()
				if _ddedg := d.DecodeElement(&_eaada.Choice.DdeLink, &_ddadec); _ddedg != nil {
					return _ddedg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}:
				_eaada.Choice = NewCT_ExternalLinkChoice()
				if _febbcc := d.DecodeElement(&_eaada.Choice.OleLink, &_ddadec); _febbcc != nil {
					return _febbcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eaada.ExtLst = NewCT_ExtensionList()
				if _efddge := d.DecodeElement(_eaada.ExtLst, &_ddadec); _efddge != nil {
					return _efddge
				}
			default:
				_ed.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0078te\u0072\u006ea\u006c\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _ddadec.Name)
				if _ecage := d.Skip(); _ecage != nil {
					return _ecage
				}
			}
		case _b.EndElement:
			break _cdgebf
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ControlPr and its children
func (_aaadf *CT_ControlPr) Validate() error {
	return _aaadf.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072")
}

func (_bceca *CT_Items) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _daeaa := range start.Attr {
		if _daeaa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gdgga, _caedc := _eb.ParseUint(_daeaa.Value, 10, 32)
			if _caedc != nil {
				return _caedc
			}
			_bdcd := uint32(_gdgga)
			_bceca.CountAttr = &_bdcd
			continue
		}
	}
_aeebg:
	for {
		_agacc, _cbafcbc := d.Token()
		if _cbafcbc != nil {
			return _cbafcbc
		}
		switch _cfade := _agacc.(type) {
		case _b.StartElement:
			switch _cfade.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065\u006d"}:
				_fgbdf := NewCT_Item()
				if _bgeeeg := d.DecodeElement(_fgbdf, &_cfade); _bgeeeg != nil {
					return _bgeeeg
				}
				_bceca.Item = append(_bceca.Item, _fgbdf)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _cfade.Name)
				if _ggcfa := d.Skip(); _ggcfa != nil {
					return _ggcfa
				}
			}
		case _b.EndElement:
			break _aeebg
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PCDSDTCEntries and its children
func (_fgbgb *CT_PCDSDTCEntries) Validate() error {
	return _fgbgb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006et\u0072\u0069\u0065\u0073")
}

func (_bfedc *ST_ExternalConnectionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ggcegf, _gfceb := d.Token()
	if _gfceb != nil {
		return _gfceb
	}
	if _eacfad, _facbad := _ggcegf.(_b.EndElement); _facbad && _eacfad.Name == start.Name {
		*_bfedc = 1
		return nil
	}
	if _aegdf, _caacda := _ggcegf.(_b.CharData); !_caacda {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ggcegf)
	} else {
		switch string(_aegdf) {
		case "":
			*_bfedc = 0
		case "\u0067e\u006e\u0065\u0072\u0061\u006c":
			*_bfedc = 1
		case "\u0074\u0065\u0078\u0074":
			*_bfedc = 2
		case "\u004d\u0044\u0059":
			*_bfedc = 3
		case "\u0044\u004d\u0059":
			*_bfedc = 4
		case "\u0059\u004d\u0044":
			*_bfedc = 5
		case "\u004d\u0059\u0044":
			*_bfedc = 6
		case "\u0044\u0059\u004d":
			*_bfedc = 7
		case "\u0059\u0044\u004d":
			*_bfedc = 8
		case "\u0073\u006b\u0069\u0070":
			*_bfedc = 9
		case "\u0045\u004d\u0044":
			*_bfedc = 10
		}
	}
	_ggcegf, _gfceb = d.Token()
	if _gfceb != nil {
		return _gfceb
	}
	if _edbbb, _acgdde := _ggcegf.(_b.EndElement); _acgdde && _edbbb.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ggcegf)
}

// ValidateWithPath validates the CT_GradientStop and its children, prefixing error messages with path
func (_gbafd *CT_GradientStop) ValidateWithPath(path string) error {
	if _dbba := _gbafd.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _dbba != nil {
		return _dbba
	}
	return nil
}

func (_fagg *CT_ConditionalFormats) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ecdg := range start.Attr {
		if _ecdg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bbgg, _ccdb := _eb.ParseUint(_ecdg.Value, 10, 32)
			if _ccdb != nil {
				return _ccdb
			}
			_gbaedb := uint32(_bbgg)
			_fagg.CountAttr = &_gbaedb
			continue
		}
	}
_ccbd:
	for {
		_ffec, _cgacb := d.Token()
		if _cgacb != nil {
			return _cgacb
		}
		switch _dddg := _ffec.(type) {
		case _b.StartElement:
			switch _dddg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072\u006d\u0061\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072\u006d\u0061\u0074"}:
				_gdbcc := NewCT_ConditionalFormat()
				if _gedga := d.DecodeElement(_gdbcc, &_dddg); _gedga != nil {
					return _gedga
				}
				_fagg.ConditionalFormat = append(_fagg.ConditionalFormat, _gdbcc)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025\u0076", _dddg.Name)
				if _fdeed := d.Skip(); _fdeed != nil {
					return _fdeed
				}
			}
		case _b.EndElement:
			break _ccbd
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PivotField and its children
func (_fbab *CT_PivotField) Validate() error {
	return _fbab.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064")
}

func (_ggbbd *CT_String) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gdafb := range start.Attr {
		if _gdafb.Name.Local == "\u0066\u0063" {
			_cccae, _gabcdf := _gdafb.Value, error(nil)
			if _gabcdf != nil {
				return _gabcdf
			}
			_ggbbd.FcAttr = &_cccae
			continue
		}
		if _gdafb.Name.Local == "\u0076" {
			_gefag, _adgbe := _gdafb.Value, error(nil)
			if _adgbe != nil {
				return _adgbe
			}
			_ggbbd.VAttr = _gefag
			continue
		}
		if _gdafb.Name.Local == "\u0066" {
			_ggadab, _aaffde := _eb.ParseBool(_gdafb.Value)
			if _aaffde != nil {
				return _aaffde
			}
			_ggbbd.FAttr = &_ggadab
			continue
		}
		if _gdafb.Name.Local == "\u0063" {
			_cbdaa, _abbdeg := _gdafb.Value, error(nil)
			if _abbdeg != nil {
				return _abbdeg
			}
			_ggbbd.CAttr = &_cbdaa
			continue
		}
		if _gdafb.Name.Local == "\u0063\u0070" {
			_ccgbfd, _afbgd := _eb.ParseUint(_gdafb.Value, 10, 32)
			if _afbgd != nil {
				return _afbgd
			}
			_bacegc := uint32(_ccgbfd)
			_ggbbd.CpAttr = &_bacegc
			continue
		}
		if _gdafb.Name.Local == "\u0069\u006e" {
			_gcfdb, _gaffgb := _eb.ParseUint(_gdafb.Value, 10, 32)
			if _gaffgb != nil {
				return _gaffgb
			}
			_efdbe := uint32(_gcfdb)
			_ggbbd.InAttr = &_efdbe
			continue
		}
		if _gdafb.Name.Local == "\u0062\u0063" {
			_bbbge, _abbbe := _gdafb.Value, error(nil)
			if _abbbe != nil {
				return _abbbe
			}
			_ggbbd.BcAttr = &_bbbge
			continue
		}
		if _gdafb.Name.Local == "\u0075" {
			_ecfcc, _dacdg := _eb.ParseBool(_gdafb.Value)
			if _dacdg != nil {
				return _dacdg
			}
			_ggbbd.UAttr = &_ecfcc
			continue
		}
		if _gdafb.Name.Local == "\u0069" {
			_fccga, _egegb := _eb.ParseBool(_gdafb.Value)
			if _egegb != nil {
				return _egegb
			}
			_ggbbd.IAttr = &_fccga
			continue
		}
		if _gdafb.Name.Local == "\u0075\u006e" {
			_fadfd, _cbdffb := _eb.ParseBool(_gdafb.Value)
			if _cbdffb != nil {
				return _cbdffb
			}
			_ggbbd.UnAttr = &_fadfd
			continue
		}
		if _gdafb.Name.Local == "\u0073\u0074" {
			_dgafdb, _fbeba := _eb.ParseBool(_gdafb.Value)
			if _fbeba != nil {
				return _fbeba
			}
			_ggbbd.StAttr = &_dgafdb
			continue
		}
		if _gdafb.Name.Local == "\u0062" {
			_begccf, _adfdge := _eb.ParseBool(_gdafb.Value)
			if _adfdge != nil {
				return _adfdge
			}
			_ggbbd.BAttr = &_begccf
			continue
		}
	}
_gefadc:
	for {
		_cafdg, _bfgdf := d.Token()
		if _bfgdf != nil {
			return _bfgdf
		}
		switch _adfaed := _cafdg.(type) {
		case _b.StartElement:
			switch _adfaed.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_bdfge := NewCT_Tuples()
				if _efdeca := d.DecodeElement(_bdfge, &_adfaed); _efdeca != nil {
					return _efdeca
				}
				_ggbbd.Tpls = append(_ggbbd.Tpls, _bdfge)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_cgbeb := NewCT_X()
				if _eedcdf := d.DecodeElement(_cgbeb, &_adfaed); _eedcdf != nil {
					return _eedcdf
				}
				_ggbbd.X = append(_ggbbd.X, _cgbeb)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0074\u0072i\u006e\u0067 \u0025\u0076", _adfaed.Name)
				if _ffbbg := d.Skip(); _ffbbg != nil {
					return _ffbbg
				}
			}
		case _b.EndElement:
			break _gefadc
		case _b.CharData:
		}
	}
	return nil
}

func (_ggdgc ST_UpdateLinks) ValidateWithPath(path string) error {
	switch _ggdgc {
	case 0, 1, 2, 3:
	default:
		return _ec.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ggdgc))
	}
	return nil
}

func NewCT_ObjectPr() *CT_ObjectPr {
	_gaeecd := &CT_ObjectPr{}
	_gaeecd.Anchor = NewCT_ObjectAnchor()
	return _gaeecd
}

// ValidateWithPath validates the CT_CalcChain and its children, prefixing error messages with path
func (_cca *CT_CalcChain) ValidateWithPath(path string) error {
	for _gfbb, _afbae := range _cca.C {
		if _bddc := _afbae.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0043\u005b\u0025\u0064\u005d", path, _gfbb)); _bddc != nil {
			return _bddc
		}
	}
	if _cca.ExtLst != nil {
		if _ace := _cca.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ace != nil {
			return _ace
		}
	}
	return nil
}

func NewCT_DdeValues() *CT_DdeValues { _dgae := &CT_DdeValues{}; return _dgae }

// ValidateWithPath validates the CT_Pane and its children, prefixing error messages with path
func (_gbcdfc *CT_Pane) ValidateWithPath(path string) error {
	if _aafac := _gbcdfc.ActivePaneAttr.ValidateWithPath(path + "\u002fA\u0063t\u0069\u0076\u0065\u0050\u0061\u006e\u0065\u0041\u0074\u0074\u0072"); _aafac != nil {
		return _aafac
	}
	if _fbfg := _gbcdfc.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _fbfg != nil {
		return _fbfg
	}
	return nil
}

func NewCT_Extension() *CT_Extension { _acdag := &CT_Extension{}; return _acdag }

// ValidateWithPath validates the CT_CellFormula and its children, prefixing error messages with path
func (_ffbb *CT_CellFormula) ValidateWithPath(path string) error {
	if _fcba := _ffbb.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _fcba != nil {
		return _fcba
	}
	return nil
}

func (_bfgbe *CT_OleItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_eegfe:
	for {
		_cccec, _dfefg := d.Token()
		if _dfefg != nil {
			return _dfefg
		}
		switch _eeda := _cccec.(type) {
		case _b.StartElement:
			switch _eeda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0049\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0049\u0074\u0065\u006d"}:
				_aegcaeg := NewCT_OleItem()
				if _ggfbe := d.DecodeElement(_aegcaeg, &_eeda); _ggfbe != nil {
					return _ggfbe
				}
				_bfgbe.OleItem = append(_bfgbe.OleItem, _aegcaeg)
			default:
				_ed.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _eeda.Name)
				if _gfbffa := d.Skip(); _gfbffa != nil {
					return _gfbffa
				}
			}
		case _b.EndElement:
			break _eegfe
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CellXfs and its children, prefixing error messages with path
func (_ebfee *CT_CellXfs) ValidateWithPath(path string) error {
	for _gfgf, _bggg := range _ebfee.Xf {
		if _ebfg := _bggg.ValidateWithPath(_ec.Sprintf("\u0025s\u002f\u0058\u0066\u005b\u0025\u0064]", path, _gfgf)); _ebfg != nil {
			return _ebfg
		}
	}
	return nil
}

func (_bgfdbf *ST_SortBy) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdgfc, _adgffd := d.Token()
	if _adgffd != nil {
		return _adgffd
	}
	if _gdadc, _beffe := _bdgfc.(_b.EndElement); _beffe && _gdadc.Name == start.Name {
		*_bgfdbf = 1
		return nil
	}
	if _bfbffb, _fcffc := _bdgfc.(_b.CharData); !_fcffc {
		return _ec.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdgfc)
	} else {
		switch string(_bfbffb) {
		case "":
			*_bgfdbf = 0
		case "\u0076\u0061\u006cu\u0065":
			*_bgfdbf = 1
		case "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr":
			*_bgfdbf = 2
		case "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr":
			*_bgfdbf = 3
		case "\u0069\u0063\u006f\u006e":
			*_bgfdbf = 4
		}
	}
	_bdgfc, _adgffd = d.Token()
	if _adgffd != nil {
		return _adgffd
	}
	if _bbeeb, _bdcfe := _bdgfc.(_b.EndElement); _bdcfe && _bbeeb.Name == start.Name {
		return nil
	}
	return _ec.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdgfc)
}

// Validate validates the CT_Filters and its children
func (_dcbaf *CT_Filters) Validate() error {
	return _dcbaf.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0074\u0065\u0072\u0073")
}

func NewCT_TableParts() *CT_TableParts { _cbfge := &CT_TableParts{}; return _cbfge }

// Validate validates the CT_RevisionDefinedName and its children
func (_degce *CT_RevisionDefinedName) Validate() error {
	return _degce.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065")
}

// ValidateWithPath validates the CT_TableFormula and its children, prefixing error messages with path
func (_fbgfg *CT_TableFormula) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_CellAlignment and its children, prefixing error messages with path
func (_efac *CT_CellAlignment) ValidateWithPath(path string) error {
	if _dbgc := _efac.HorizontalAttr.ValidateWithPath(path + "\u002fH\u006fr\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0041\u0074\u0074\u0072"); _dbgc != nil {
		return _dbgc
	}
	if _dcc := _efac.VerticalAttr.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0041\u0074\u0074\u0072"); _dcc != nil {
		return _dcc
	}
	return nil
}

type CT_ExternalReferences struct {

	// External Reference
	ExternalReference []*CT_ExternalReference
}

func (_dccaee ST_PrintError) String() string {
	switch _dccaee {
	case 0:
		return ""
	case 1:
		return "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d"
	case 2:
		return "\u0062\u006c\u0061n\u006b"
	case 3:
		return "\u0064\u0061\u0073\u0068"
	case 4:
		return "\u004e\u0041"
	}
	return ""
}

func (_dgaee ST_GradientType) Validate() error { return _dgaee.ValidateWithPath("") }

func (_bebfbc ST_DynamicFilterType) String() string {
	switch _bebfbc {
	case 0:
		return ""
	case 1:
		return "\u006e\u0075\u006c\u006c"
	case 2:
		return "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case 3:
		return "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case 4:
		return "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case 5:
		return "\u0074\u006f\u0064a\u0079"
	case 6:
		return "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case 7:
		return "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case 8:
		return "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case 9:
		return "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case 10:
		return "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case 11:
		return "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case 12:
		return "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case 13:
		return "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 14:
		return "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 15:
		return "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 16:
		return "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case 17:
		return "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case 18:
		return "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case 19:
		return "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case 20:
		return "\u0051\u0031"
	case 21:
		return "\u0051\u0032"
	case 22:
		return "\u0051\u0033"
	case 23:
		return "\u0051\u0034"
	case 24:
		return "\u004d\u0031"
	case 25:
		return "\u004d\u0032"
	case 26:
		return "\u004d\u0033"
	case 27:
		return "\u004d\u0034"
	case 28:
		return "\u004d\u0035"
	case 29:
		return "\u004d\u0036"
	case 30:
		return "\u004d\u0037"
	case 31:
		return "\u004d\u0038"
	case 32:
		return "\u004d\u0039"
	case 33:
		return "\u004d\u0031\u0030"
	case 34:
		return "\u004d\u0031\u0031"
	case 35:
		return "\u004d\u0031\u0032"
	}
	return ""
}

// ValidateWithPath validates the CT_OlapPr and its children, prefixing error messages with path
func (_gefbb *CT_OlapPr) ValidateWithPath(path string) error { return nil }

func NewCT_Col() *CT_Col { _dccd := &CT_Col{}; return _dccd }

// ValidateWithPath validates the QueryTable and its children, prefixing error messages with path
func (_bdgae *QueryTable) ValidateWithPath(path string) error {
	if _cffab := _bdgae.CT_QueryTable.ValidateWithPath(path); _cffab != nil {
		return _cffab
	}
	return nil
}

func (_afggb *CT_MetadataType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgdbe := range start.Attr {
		if _dgdbe.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006c\u0057i\u0064\u0074\u0068\u0073" {
			_bbcgg, _efege := _eb.ParseBool(_dgdbe.Value)
			if _efege != nil {
				return _efege
			}
			_afggb.PasteColWidthsAttr = &_bbcgg
			continue
		}
		if _dgdbe.Name.Local == "\u006e\u0061\u006d\u0065" {
			_eacgb, _cefcg := _dgdbe.Value, error(nil)
			if _cefcg != nil {
				return _cefcg
			}
			_afggb.NameAttr = _eacgb
			continue
		}
		if _dgdbe.Name.Local == "\u0070a\u0073t\u0065\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_dacf, _abbda := _eb.ParseBool(_dgdbe.Value)
			if _abbda != nil {
				return _abbda
			}
			_afggb.PasteNumberFormatsAttr = &_dacf
			continue
		}
		if _dgdbe.Name.Local == "\u0067\u0068\u006f\u0073\u0074\u0052\u006f\u0077" {
			_efdad, _fggce := _eb.ParseBool(_dgdbe.Value)
			if _fggce != nil {
				return _fggce
			}
			_afggb.GhostRowAttr = &_efdad
			continue
		}
		if _dgdbe.Name.Local == "\u006d\u0065\u0072g\u0065" {
			_aaedd, _ebccg := _eb.ParseBool(_dgdbe.Value)
			if _ebccg != nil {
				return _ebccg
			}
			_afggb.MergeAttr = &_aaedd
			continue
		}
		if _dgdbe.Name.Local == "\u0065\u0064\u0069\u0074" {
			_eeee, _cbeddb := _eb.ParseBool(_dgdbe.Value)
			if _cbeddb != nil {
				return _cbeddb
			}
			_afggb.EditAttr = &_eeee
			continue
		}
		if _dgdbe.Name.Local == "\u0073\u0070\u006c\u0069\u0074\u0046\u0069\u0072\u0073\u0074" {
			_adbbd, _eafdef := _eb.ParseBool(_dgdbe.Value)
			if _eafdef != nil {
				return _eafdef
			}
			_afggb.SplitFirstAttr = &_adbbd
			continue
		}
		if _dgdbe.Name.Local == "\u0063\u006f\u0070\u0079" {
			_deeea, _ggabe := _eb.ParseBool(_dgdbe.Value)
			if _ggabe != nil {
				return _ggabe
			}
			_afggb.CopyAttr = &_deeea
			continue
		}
		if _dgdbe.Name.Local == "\u0073\u0070\u006c\u0069\u0074\u0041\u006c\u006c" {
			_aabg, _fgadf := _eb.ParseBool(_dgdbe.Value)
			if _fgadf != nil {
				return _fgadf
			}
			_afggb.SplitAllAttr = &_aabg
			continue
		}
		if _dgdbe.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_dggec, _feaec := _eb.ParseBool(_dgdbe.Value)
			if _feaec != nil {
				return _feaec
			}
			_afggb.PasteFormulasAttr = &_dggec
			continue
		}
		if _dgdbe.Name.Local == "\u0063\u0065\u006c\u006c\u004d\u0065\u0074\u0061" {
			_fbface, _eaccg := _eb.ParseBool(_dgdbe.Value)
			if _eaccg != nil {
				return _eaccg
			}
			_afggb.CellMetaAttr = &_fbface
			continue
		}
		if _dgdbe.Name.Local == "\u0063\u006c\u0065\u0061\u0072\u0041\u006c\u006c" {
			_fggcc, _geagf := _eb.ParseBool(_dgdbe.Value)
			if _geagf != nil {
				return _geagf
			}
			_afggb.ClearAllAttr = &_fggcc
			continue
		}
		if _dgdbe.Name.Local == "\u006d\u0069\u006e\u0053up\u0070\u006f\u0072\u0074\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_beaffb, _geacd := _eb.ParseUint(_dgdbe.Value, 10, 32)
			if _geacd != nil {
				return _geacd
			}
			_afggb.MinSupportedVersionAttr = uint32(_beaffb)
			continue
		}
		if _dgdbe.Name.Local == "\u0061\u0064\u006a\u0075\u0073\u0074" {
			_ggeda, _dcbbd := _eb.ParseBool(_dgdbe.Value)
			if _dcbbd != nil {
				return _dcbbd
			}
			_afggb.AdjustAttr = &_ggeda
			continue
		}
		if _dgdbe.Name.Local == "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073" {
			_adeaa, _gfbbb := _eb.ParseBool(_dgdbe.Value)
			if _gfbbb != nil {
				return _gfbbb
			}
			_afggb.ClearContentsAttr = &_adeaa
			continue
		}
		if _dgdbe.Name.Local == "p\u0061\u0073\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073" {
			_gdgfg, _bcage := _eb.ParseBool(_dgdbe.Value)
			if _bcage != nil {
				return _bcage
			}
			_afggb.PasteValuesAttr = &_gdgfg
			continue
		}
		if _dgdbe.Name.Local == "r\u006f\u0077\u0043\u006f\u006c\u0053\u0068\u0069\u0066\u0074" {
			_acgd, _eaedb := _eb.ParseBool(_dgdbe.Value)
			if _eaedb != nil {
				return _eaedb
			}
			_afggb.RowColShiftAttr = &_acgd
			continue
		}
		if _dgdbe.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_dgfdd, _ceabe := _eb.ParseBool(_dgdbe.Value)
			if _ceabe != nil {
				return _ceabe
			}
			_afggb.PasteCommentsAttr = &_dgfdd
			continue
		}
		if _dgdbe.Name.Local == "\u0063\u006c\u0065a\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_fefcg, _dgcca := _eb.ParseBool(_dgdbe.Value)
			if _dgcca != nil {
				return _dgcca
			}
			_afggb.ClearFormatsAttr = &_fefcg
			continue
		}
		if _dgdbe.Name.Local == "\u0067\u0068\u006f\u0073\u0074\u0043\u006f\u006c" {
			_fagcd, _abaga := _eb.ParseBool(_dgdbe.Value)
			if _abaga != nil {
				return _abaga
			}
			_afggb.GhostColAttr = &_fagcd
			continue
		}
		if _dgdbe.Name.Local == "\u0063\u006f\u0065\u0072\u0063\u0065" {
			_geeab, _egbd := _eb.ParseBool(_dgdbe.Value)
			if _egbd != nil {
				return _egbd
			}
			_afggb.CoerceAttr = &_geeab
			continue
		}
		if _dgdbe.Name.Local == "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_ffacb, _gdeff := _eb.ParseBool(_dgdbe.Value)
			if _gdeff != nil {
				return _gdeff
			}
			_afggb.ClearCommentsAttr = &_ffacb
			continue
		}
		if _dgdbe.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0041\u006c\u006c" {
			_dbgdc, _caegdg := _eb.ParseBool(_dgdbe.Value)
			if _caegdg != nil {
				return _caegdg
			}
			_afggb.PasteAllAttr = &_dbgdc
			continue
		}
		if _dgdbe.Name.Local == "\u0070\u0061\u0073t\u0065\u0042\u006f\u0072\u0064\u0065\u0072\u0073" {
			_eabdf, _facea := _eb.ParseBool(_dgdbe.Value)
			if _facea != nil {
				return _facea
			}
			_afggb.PasteBordersAttr = &_eabdf
			continue
		}
		if _dgdbe.Name.Local == "\u0070\u0061\u0073t\u0065\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_dcggg, _gdca := _eb.ParseBool(_dgdbe.Value)
			if _gdca != nil {
				return _gdca
			}
			_afggb.PasteFormatsAttr = &_dcggg
			continue
		}
		if _dgdbe.Name.Local == "\u0070\u0061\u0073\u0074eD\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e" {
			_effdae, _dggd := _eb.ParseBool(_dgdbe.Value)
			if _dggd != nil {
				return _dggd
			}
			_afggb.PasteDataValidationAttr = &_effdae
			continue
		}
		if _dgdbe.Name.Local == "\u0064\u0065\u006c\u0065\u0074\u0065" {
			_cbbg, _cged := _eb.ParseBool(_dgdbe.Value)
			if _cged != nil {
				return _cged
			}
			_afggb.DeleteAttr = &_cbbg
			continue
		}
		if _dgdbe.Name.Local == "\u0061\u0073\u0073\u0069\u0067\u006e" {
			_ceafdg, _ccfed := _eb.ParseBool(_dgdbe.Value)
			if _ccfed != nil {
				return _ccfed
			}
			_afggb.AssignAttr = &_ceafdg
			continue
		}
	}
	for {
		_gaage, _fdcged := d.Token()
		if _fdcged != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0054\u0079p\u0065:\u0020\u0025\u0073", _fdcged)
		}
		if _abege, _fdfebe := _gaage.(_b.EndElement); _fdfebe && _abege.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fgfec ST_VolValueType) String() string {
	switch _fgfec {
	case 0:
		return ""
	case 1:
		return "\u0062"
	case 2:
		return "\u006e"
	case 3:
		return "\u0065"
	case 4:
		return "\u0073"
	}
	return ""
}

func NewCT_Boolean() *CT_Boolean { _egd := &CT_Boolean{}; return _egd }

func (_dbfee *CT_Consolidation) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbfee.RangeSets = NewCT_RangeSets()
	for _, _bade := range start.Attr {
		if _bade.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065" {
			_egef, _edae := _eb.ParseBool(_bade.Value)
			if _edae != nil {
				return _edae
			}
			_dbfee.AutoPageAttr = &_egef
			continue
		}
	}
_cabee:
	for {
		_facg, _dfbbg := d.Token()
		if _dfbbg != nil {
			return _dfbbg
		}
		switch _bbdad := _facg.(type) {
		case _b.StartElement:
			switch _bbdad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067e\u0073"}:
				_dbfee.Pages = NewCT_Pages()
				if _dffbf := d.DecodeElement(_dbfee.Pages, &_bbdad); _dffbf != nil {
					return _dffbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0053\u0065\u0074s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0053\u0065\u0074s"}:
				if _aecg := d.DecodeElement(_dbfee.RangeSets, &_bbdad); _aecg != nil {
					return _aecg
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0020\u0025v", _bbdad.Name)
				if _daag := d.Skip(); _daag != nil {
					return _daag
				}
			}
		case _b.EndElement:
			break _cabee
		case _b.CharData:
		}
	}
	return nil
}

func (_gbddb *CT_PivotFilter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006c\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _gbddb.FldAttr)})
	if _gbddb.MpFldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0070\u0046l\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_gbddb.MpFldAttr)})
	}
	_dcadf, _afgda := _gbddb.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _afgda != nil {
		return _afgda
	}
	start.Attr = append(start.Attr, _dcadf)
	if _gbddb.EvalOrderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065v\u0061\u006c\u004f\u0072\u0064\u0065r"}, Value: _ec.Sprintf("\u0025\u0076", *_gbddb.EvalOrderAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _gbddb.IdAttr)})
	if _gbddb.IMeasureHierAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u004d\u0065a\u0073\u0075\u0072\u0065\u0048\u0069\u0065\u0072"}, Value: _ec.Sprintf("\u0025\u0076", *_gbddb.IMeasureHierAttr)})
	}
	if _gbddb.IMeasureFldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "i\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u006c\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_gbddb.IMeasureFldAttr)})
	}
	if _gbddb.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_gbddb.NameAttr)})
	}
	if _gbddb.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _ec.Sprintf("\u0025\u0076", *_gbddb.DescriptionAttr)})
	}
	if _gbddb.StringValue1Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0031"}, Value: _ec.Sprintf("\u0025\u0076", *_gbddb.StringValue1Attr)})
	}
	if _gbddb.StringValue2Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0032"}, Value: _ec.Sprintf("\u0025\u0076", *_gbddb.StringValue2Attr)})
	}
	e.EncodeToken(start)
	_efdea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
	e.EncodeElement(_gbddb.AutoFilter, _efdea)
	if _gbddb.ExtLst != nil {
		_ebgdg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gbddb.ExtLst, _ebgdg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_QueryCache and its children, prefixing error messages with path
func (_edbed *CT_QueryCache) ValidateWithPath(path string) error {
	for _facgcg, _gcffb := range _edbed.Query {
		if _ebada := _gcffb.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002fQ\u0075\u0065\u0072\u0079\u005b\u0025\u0064\u005d", path, _facgcg)); _ebada != nil {
			return _ebada
		}
	}
	return nil
}

func (_ffc *CT_ChartsheetProtection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bgac := range start.Attr {
		if _bgac.Name.Local == "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_dgaa, _gbcdf := _bgac.Value, error(nil)
			if _gbcdf != nil {
				return _gbcdf
			}
			_ffc.PasswordAttr = &_dgaa
			continue
		}
		if _bgac.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_abgg, _dgag := _bgac.Value, error(nil)
			if _dgag != nil {
				return _dgag
			}
			_ffc.AlgorithmNameAttr = &_abgg
			continue
		}
		if _bgac.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_aefee, _bgge := _bgac.Value, error(nil)
			if _bgge != nil {
				return _bgge
			}
			_ffc.HashValueAttr = &_aefee
			continue
		}
		if _bgac.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_dfbae, _bcde := _bgac.Value, error(nil)
			if _bcde != nil {
				return _bcde
			}
			_ffc.SaltValueAttr = &_dfbae
			continue
		}
		if _bgac.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_dedf, _cgdab := _eb.ParseUint(_bgac.Value, 10, 32)
			if _cgdab != nil {
				return _cgdab
			}
			_ecgaf := uint32(_dedf)
			_ffc.SpinCountAttr = &_ecgaf
			continue
		}
		if _bgac.Name.Local == "\u0063o\u006e\u0074\u0065\u006e\u0074" {
			_ccacd, _eegg := _eb.ParseBool(_bgac.Value)
			if _eegg != nil {
				return _eegg
			}
			_ffc.ContentAttr = &_ccacd
			continue
		}
		if _bgac.Name.Local == "\u006fb\u006a\u0065\u0063\u0074\u0073" {
			_gbea, _gdae := _eb.ParseBool(_bgac.Value)
			if _gdae != nil {
				return _gdae
			}
			_ffc.ObjectsAttr = &_gbea
			continue
		}
	}
	for {
		_caccc, _cgce := d.Token()
		if _cgce != nil {
			return _ec.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074\u0050r\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020%\u0073", _cgce)
		}
		if _eeffe, _gcfgf := _caccc.(_b.EndElement); _gcfgf && _eeffe.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_MetadataStringIndex struct {

	// Index Value
	XAttr uint32

	// String is a Set
	SAttr *bool
}

func NewCT_RangeSets() *CT_RangeSets { _cccda := &CT_RangeSets{}; return _cccda }

// ValidateWithPath validates the CT_TablePart and its children, prefixing error messages with path
func (_ddgdea *CT_TablePart) ValidateWithPath(path string) error { return nil }

func NewCT_Stylesheet() *CT_Stylesheet { _cbbcg := &CT_Stylesheet{}; return _cbbcg }

func (_gagaf *CT_QueryTableRefresh) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gagaf.QueryTableFields = NewCT_QueryTableFields()
	for _, _cebcg := range start.Attr {
		if _cebcg.Name.Local == "\u0070r\u0065\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072\u0074\u0046i\u006c\u0074\u0065\u0072\u004c\u0061\u0079\u006f\u0075\u0074" {
			_fgacb, _aacca := _eb.ParseBool(_cebcg.Value)
			if _aacca != nil {
				return _aacca
			}
			_gagaf.PreserveSortFilterLayoutAttr = &_fgacb
			continue
		}
		if _cebcg.Name.Local == "\u0066\u0069\u0065\u006c\u0064\u0049\u0064\u0057\u0072a\u0070\u0070\u0065\u0064" {
			_fdffdf, _egfeg := _eb.ParseBool(_cebcg.Value)
			if _egfeg != nil {
				return _egfeg
			}
			_gagaf.FieldIdWrappedAttr = &_fdffdf
			continue
		}
		if _cebcg.Name.Local == "h\u0065a\u0064\u0065\u0072\u0073\u0049\u006e\u004c\u0061s\u0074\u0052\u0065\u0066re\u0073\u0068" {
			_efafc, _gfabe := _eb.ParseBool(_cebcg.Value)
			if _gfabe != nil {
				return _gfabe
			}
			_gagaf.HeadersInLastRefreshAttr = &_efafc
			continue
		}
		if _cebcg.Name.Local == "\u006d\u0069\u006e\u0069\u006d\u0075\u006d\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_cbbbcd, _fbbec := _eb.ParseUint(_cebcg.Value, 10, 8)
			if _fbbec != nil {
				return _fbbec
			}
			_fbadgg := uint8(_cbbbcd)
			_gagaf.MinimumVersionAttr = &_fbadgg
			continue
		}
		if _cebcg.Name.Local == "\u006e\u0065\u0078\u0074\u0049\u0064" {
			_cffdf, _dabda := _eb.ParseUint(_cebcg.Value, 10, 32)
			if _dabda != nil {
				return _dabda
			}
			_ceece := uint32(_cffdf)
			_gagaf.NextIdAttr = &_ceece
			continue
		}
		if _cebcg.Name.Local == "\u0075n\u0062o\u0075\u006e\u0064\u0043\u006fl\u0075\u006dn\u0073\u004c\u0065\u0066\u0074" {
			_bdfg, _fecae := _eb.ParseUint(_cebcg.Value, 10, 32)
			if _fecae != nil {
				return _fecae
			}
			_acdae := uint32(_bdfg)
			_gagaf.UnboundColumnsLeftAttr = &_acdae
			continue
		}
		if _cebcg.Name.Local == "\u0075\u006e\u0062\u006fun\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0073\u0052\u0069\u0067\u0068\u0074" {
			_dgace, _aeegf := _eb.ParseUint(_cebcg.Value, 10, 32)
			if _aeegf != nil {
				return _aeegf
			}
			_bbecd := uint32(_dgace)
			_gagaf.UnboundColumnsRightAttr = &_bbecd
			continue
		}
	}
_cbccf:
	for {
		_bbgdb, _dagccf := d.Token()
		if _dagccf != nil {
			return _dagccf
		}
		switch _agaeg := _bbgdb.(type) {
		case _b.StartElement:
			switch _agaeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075e\u0072\u0079\u0054a\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075e\u0072\u0079\u0054a\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				if _abacc := d.DecodeElement(_gagaf.QueryTableFields, &_agaeg); _abacc != nil {
					return _abacc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065ry\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065ry\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_gagaf.QueryTableDeletedFields = NewCT_QueryTableDeletedFields()
				if _fddfd := d.DecodeElement(_gagaf.QueryTableDeletedFields, &_agaeg); _fddfd != nil {
					return _fddfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_gagaf.SortState = NewCT_SortState()
				if _ageag := d.DecodeElement(_gagaf.SortState, &_agaeg); _ageag != nil {
					return _ageag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gagaf.ExtLst = NewCT_ExtensionList()
				if _ddgee := d.DecodeElement(_gagaf.ExtLst, &_agaeg); _ddgee != nil {
					return _ddgee
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068\u0020\u0025\u0076", _agaeg.Name)
				if _fdbca := d.Skip(); _fdbca != nil {
					return _fdbca
				}
			}
		case _b.EndElement:
			break _cbccf
		case _b.CharData:
		}
	}
	return nil
}

func (_bcfddg ST_CfvoType) Validate() error { return _bcfddg.ValidateWithPath("") }

type ST_VerticalAlignment byte

// ValidateWithPath validates the Table and its children, prefixing error messages with path
func (_gadbg *Table) ValidateWithPath(path string) error {
	if _feded := _gadbg.CT_Table.ValidateWithPath(path); _feded != nil {
		return _feded
	}
	return nil
}

func (_fedca *CT_Items) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fedca.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _ec.Sprintf("\u0025\u0076", *_fedca.CountAttr)})
	}
	e.EncodeToken(start)
	_egdcc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0069\u0074\u0065\u006d"}}
	for _, _efcfb := range _fedca.Item {
		e.EncodeElement(_efcfb, _egdcc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the Worksheet and its children
func (_gcbfae *Worksheet) Validate() error {
	return _gcbfae.ValidateWithPath("\u0057o\u0072\u006b\u0073\u0068\u0065\u0065t")
}

// Validate validates the CT_Connection and its children
func (_bbdeg *CT_Connection) Validate() error {
	return _bbdeg.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e")
}

func (_cfedb *ST_SheetViewType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cfedb = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_cfedb = 1
	case "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077":
		*_cfedb = 2
	case "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074":
		*_cfedb = 3
	}
	return nil
}

// Validate validates the CT_TableStyleElement and its children
func (_faafc *CT_TableStyleElement) Validate() error {
	return _faafc.ValidateWithPath("C\u0054_\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079l\u0065\u0045\u006c\u0065me\u006e\u0074")
}

func (_dfdaa *CT_SharedItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddfaca := range start.Attr {
		if _ddfaca.Name.Local == "\u006di\u006e\u0044\u0061\u0074\u0065" {
			_afgde, _bccad := ParseStdlibTime(_ddfaca.Value)
			if _bccad != nil {
				return _bccad
			}
			_dfdaa.MinDateAttr = &_afgde
			continue
		}
		if _ddfaca.Name.Local == "\u0063\u006f\u006e\u0074ai\u006e\u0073\u0053\u0065\u006d\u0069\u004d\u0069\u0078\u0065\u0064\u0054\u0079\u0070e\u0073" {
			_fcgeb, _bfdcg := _eb.ParseBool(_ddfaca.Value)
			if _bfdcg != nil {
				return _bfdcg
			}
			_dfdaa.ContainsSemiMixedTypesAttr = &_fcgeb
			continue
		}
		if _ddfaca.Name.Local == "\u006da\u0078\u0044\u0061\u0074\u0065" {
			_fceae, _dfgcaf := ParseStdlibTime(_ddfaca.Value)
			if _dfgcaf != nil {
				return _dfgcaf
			}
			_dfdaa.MaxDateAttr = &_fceae
			continue
		}
		if _ddfaca.Name.Local == "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0044\u0061\u0074\u0065" {
			_bccfg, _caaee := _eb.ParseBool(_ddfaca.Value)
			if _caaee != nil {
				return _caaee
			}
			_dfdaa.ContainsDateAttr = &_bccfg
			continue
		}
		if _ddfaca.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_accgce, _gaabd := _eb.ParseUint(_ddfaca.Value, 10, 32)
			if _gaabd != nil {
				return _gaabd
			}
			_aafbbb := uint32(_accgce)
			_dfdaa.CountAttr = &_aafbbb
			continue
		}
		if _ddfaca.Name.Local == "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042\u006c\u0061\u006e\u006b" {
			_gbddff, _geeed := _eb.ParseBool(_ddfaca.Value)
			if _geeed != nil {
				return _geeed
			}
			_dfdaa.ContainsBlankAttr = &_gbddff
			continue
		}
		if _ddfaca.Name.Local == "\u006c\u006f\u006e\u0067\u0054\u0065\u0078\u0074" {
			_acbec, _acfdd := _eb.ParseBool(_ddfaca.Value)
			if _acfdd != nil {
				return _acfdd
			}
			_dfdaa.LongTextAttr = &_acbec
			continue
		}
		if _ddfaca.Name.Local == "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u004eu\u006d\u0062\u0065\u0072" {
			_dafcc, _gbegb := _eb.ParseBool(_ddfaca.Value)
			if _gbegb != nil {
				return _gbegb
			}
			_dfdaa.ContainsNumberAttr = &_dafcc
			continue
		}
		if _ddfaca.Name.Local == "\u006d\u0069\u006e\u0056\u0061\u006c\u0075\u0065" {
			_gbcfe, _agcgf := _eb.ParseFloat(_ddfaca.Value, 64)
			if _agcgf != nil {
				return _agcgf
			}
			_dfdaa.MinValueAttr = &_gbcfe
			continue
		}
		if _ddfaca.Name.Local == "\u006d\u0061\u0078\u0056\u0061\u006c\u0075\u0065" {
			_gfgga, _cabcga := _eb.ParseFloat(_ddfaca.Value, 64)
			if _cabcga != nil {
				return _cabcga
			}
			_dfdaa.MaxValueAttr = &_gfgga
			continue
		}
		if _ddfaca.Name.Local == "\u0063o\u006et\u0061\u0069\u006e\u0073\u004e\u006f\u006e\u0044\u0061\u0074\u0065" {
			_ffbbd, _gagcff := _eb.ParseBool(_ddfaca.Value)
			if _gagcff != nil {
				return _gagcff
			}
			_dfdaa.ContainsNonDateAttr = &_ffbbd
			continue
		}
		if _ddfaca.Name.Local == "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0053t\u0072\u0069\u006e\u0067" {
			_bbgca, _gcgb := _eb.ParseBool(_ddfaca.Value)
			if _gcgb != nil {
				return _gcgb
			}
			_dfdaa.ContainsStringAttr = &_bbgca
			continue
		}
		if _ddfaca.Name.Local == "\u0063o\u006et\u0061\u0069\u006e\u0073\u004di\u0078\u0065d\u0054\u0079\u0070\u0065\u0073" {
			_cedag, _gfebg := _eb.ParseBool(_ddfaca.Value)
			if _gfebg != nil {
				return _gfebg
			}
			_dfdaa.ContainsMixedTypesAttr = &_cedag
			continue
		}
		if _ddfaca.Name.Local == "\u0063o\u006et\u0061\u0069\u006e\u0073\u0049\u006e\u0074\u0065\u0067\u0065\u0072" {
			_edfff, _fdbgc := _eb.ParseBool(_ddfaca.Value)
			if _fdbgc != nil {
				return _fdbgc
			}
			_dfdaa.ContainsIntegerAttr = &_edfff
			continue
		}
	}
_eebca:
	for {
		_cecae, _eagea := d.Token()
		if _eagea != nil {
			return _eagea
		}
		switch _cfaefa := _cecae.(type) {
		case _b.StartElement:
			switch _cfaefa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_bgede := NewCT_Missing()
				if _bdfdb := d.DecodeElement(_bgede, &_cfaefa); _bdfdb != nil {
					return _bdfdb
				}
				_dfdaa.M = append(_dfdaa.M, _bgede)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_afdceec := NewCT_Number()
				if _faadgd := d.DecodeElement(_afdceec, &_cfaefa); _faadgd != nil {
					return _faadgd
				}
				_dfdaa.N = append(_dfdaa.N, _afdceec)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_eaddac := NewCT_Boolean()
				if _gfacc := d.DecodeElement(_eaddac, &_cfaefa); _gfacc != nil {
					return _gfacc
				}
				_dfdaa.B = append(_dfdaa.B, _eaddac)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_dcabfc := NewCT_Error()
				if _fbgcbf := d.DecodeElement(_dcabfc, &_cfaefa); _fbgcbf != nil {
					return _fbgcbf
				}
				_dfdaa.E = append(_dfdaa.E, _dcabfc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_dfffc := NewCT_String()
				if _efacbb := d.DecodeElement(_dfffc, &_cfaefa); _efacbb != nil {
					return _efacbb
				}
				_dfdaa.S = append(_dfdaa.S, _dfffc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
				_gdafd := NewCT_DateTime()
				if _aedfa := d.DecodeElement(_gdafd, &_cfaefa); _aedfa != nil {
					return _aedfa
				}
				_dfdaa.D = append(_dfdaa.D, _gdafd)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0049t\u0065m\u0073\u0020\u0025\u0076", _cfaefa.Name)
				if _ebegd := d.Skip(); _ebegd != nil {
					return _ebegd
				}
			}
		case _b.EndElement:
			break _eebca
		case _b.CharData:
		}
	}
	return nil
}

func (_ggede *CT_TableStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddagg := range start.Attr {
		if _ddagg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dagcaf, _defcdg := _ddagg.Value, error(nil)
			if _defcdg != nil {
				return _defcdg
			}
			_ggede.NameAttr = _dagcaf
			continue
		}
		if _ddagg.Name.Local == "\u0070\u0069\u0076o\u0074" {
			_fdacc, _accffa := _eb.ParseBool(_ddagg.Value)
			if _accffa != nil {
				return _accffa
			}
			_ggede.PivotAttr = &_fdacc
			continue
		}
		if _ddagg.Name.Local == "\u0074\u0061\u0062l\u0065" {
			_dagbc, _edabf := _eb.ParseBool(_ddagg.Value)
			if _edabf != nil {
				return _edabf
			}
			_ggede.TableAttr = &_dagbc
			continue
		}
		if _ddagg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_caeea, _eeceeg := _eb.ParseUint(_ddagg.Value, 10, 32)
			if _eeceeg != nil {
				return _eeceeg
			}
			_eegcb := uint32(_caeea)
			_ggede.CountAttr = &_eegcb
			continue
		}
	}
_bfgegb:
	for {
		_aafbbc, _ddebg := d.Token()
		if _ddebg != nil {
			return _ddebg
		}
		switch _dafbb := _aafbbc.(type) {
		case _b.StartElement:
			switch _dafbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0045\u006ce\u006d\u0065\u006e\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0045\u006ce\u006d\u0065\u006e\u0074"}:
				_ddfff := NewCT_TableStyleElement()
				if _ecdde := d.DecodeElement(_ddfff, &_dafbb); _ecdde != nil {
					return _ecdde
				}
				_ggede.TableStyleElement = append(_ggede.TableStyleElement, _ddfff)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054a\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065 \u0025\u0076", _dafbb.Name)
				if _gbcdd := d.Skip(); _gbcdd != nil {
					return _gbcdd
				}
			}
		case _b.EndElement:
			break _bfgegb
		case _b.CharData:
		}
	}
	return nil
}

func (_abedfd *CT_SheetCalcPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcgebe := range start.Attr {
		if _bcgebe.Name.Local == "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064" {
			_gebef, _eacdb := _eb.ParseBool(_bcgebe.Value)
			if _eacdb != nil {
				return _eacdb
			}
			_abedfd.FullCalcOnLoadAttr = &_gebef
			continue
		}
	}
	for {
		_facfcc, _dcdgb := d.Token()
		if _dcdgb != nil {
			return _ec.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072:\u0020\u0025\u0073", _dcdgb)
		}
		if _gfggf, _aeac := _facfcc.(_b.EndElement); _aeac && _gfggf.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_CacheHierarchies() *CT_CacheHierarchies { _gdbg := &CT_CacheHierarchies{}; return _gdbg }

func (_eefdda *CT_RevisionAutoFormatting) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _eefdda.SheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _ec.Sprintf("\u0025\u0076", _eefdda.RefAttr)})
	if _eefdda.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", *_eefdda.AutoFormatIdAttr)})
	}
	if _eefdda.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_eefdda.ApplyNumberFormatsAttr))})
	}
	if _eefdda.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_eefdda.ApplyBorderFormatsAttr))})
	}
	if _eefdda.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_eefdda.ApplyFontFormatsAttr))})
	}
	if _eefdda.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_eefdda.ApplyPatternFormatsAttr))})
	}
	if _eefdda.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_eefdda.ApplyAlignmentFormatsAttr))})
	}
	if _eefdda.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_eefdda.ApplyWidthHeightFormatsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func NewCT_CellWatch() *CT_CellWatch { _dcfc := &CT_CellWatch{}; return _dcfc }

func (_eaef *CT_DdeLink) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0064\u0065\u0053\u0065\u0072\u0076\u0069\u0063\u0065"}, Value: _ec.Sprintf("\u0025\u0076", _eaef.DdeServiceAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0064\u0065\u0054\u006f\u0070\u0069\u0063"}, Value: _ec.Sprintf("\u0025\u0076", _eaef.DdeTopicAttr)})
	e.EncodeToken(start)
	if _eaef.DdeItems != nil {
		_bfgge := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0064\u0064\u0065\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_eaef.DdeItems, _bfgge)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_bcbbd *CT_HeaderFooter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bcbbd.DifferentOddEvenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069f\u0066\u0065\u0072e\u006e\u0074\u004f\u0064\u0064\u0045\u0076\u0065\u006e"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bcbbd.DifferentOddEvenAttr))})
	}
	if _bcbbd.DifferentFirstAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074F\u0069\u0072\u0073\u0074"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bcbbd.DifferentFirstAttr))})
	}
	if _bcbbd.ScaleWithDocAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0063\u0061l\u0065\u0057\u0069\u0074\u0068\u0044\u006f\u0063"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bcbbd.ScaleWithDocAttr))})
	}
	if _bcbbd.AlignWithMarginsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006ci\u0067\u006e\u0057i\u0074\u0068\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_bcbbd.AlignWithMarginsAttr))})
	}
	e.EncodeToken(start)
	if _bcbbd.OddHeader != nil {
		_eaaeg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ao\u0064\u0064\u0048\u0065\u0061\u0064\u0065\u0072"}}
		_f.AddPreserveSpaceAttr(&_eaaeg, *_bcbbd.OddHeader)
		e.EncodeElement(_bcbbd.OddHeader, _eaaeg)
	}
	if _bcbbd.OddFooter != nil {
		_dbfcg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ao\u0064\u0064\u0046\u006f\u006f\u0074\u0065\u0072"}}
		_f.AddPreserveSpaceAttr(&_dbfcg, *_bcbbd.OddFooter)
		e.EncodeElement(_bcbbd.OddFooter, _dbfcg)
	}
	if _bcbbd.EvenHeader != nil {
		_afbg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065\u0076\u0065\u006e\u0048\u0065\u0061\u0064\u0065\u0072"}}
		_f.AddPreserveSpaceAttr(&_afbg, *_bcbbd.EvenHeader)
		e.EncodeElement(_bcbbd.EvenHeader, _afbg)
	}
	if _bcbbd.EvenFooter != nil {
		_gaebc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065\u0076\u0065\u006e\u0046\u006f\u006f\u0074\u0065\u0072"}}
		_f.AddPreserveSpaceAttr(&_gaebc, *_bcbbd.EvenFooter)
		e.EncodeElement(_bcbbd.EvenFooter, _gaebc)
	}
	if _bcbbd.FirstHeader != nil {
		_ggaff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0048e\u0061\u0064\u0065\u0072"}}
		_f.AddPreserveSpaceAttr(&_ggaff, *_bcbbd.FirstHeader)
		e.EncodeElement(_bcbbd.FirstHeader, _ggaff)
	}
	if _bcbbd.FirstFooter != nil {
		_egcfb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0046o\u006f\u0074\u0065\u0072"}}
		_f.AddPreserveSpaceAttr(&_egcfb, *_bcbbd.FirstFooter)
		e.EncodeElement(_bcbbd.FirstFooter, _egcfb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

func (_aggeb *CT_RevisionSheetRename) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcfgdbc := range start.Attr {
		if _dcfgdbc.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_ffdaf, _fafae := _eb.ParseUint(_dcfgdbc.Value, 10, 32)
			if _fafae != nil {
				return _fafae
			}
			_aggeb.SheetIdAttr = uint32(_ffdaf)
			continue
		}
		if _dcfgdbc.Name.Local == "\u006fl\u0064\u004e\u0061\u006d\u0065" {
			_dgege, _fffcd := _dcfgdbc.Value, error(nil)
			if _fffcd != nil {
				return _fffcd
			}
			_aggeb.OldNameAttr = _dgege
			continue
		}
		if _dcfgdbc.Name.Local == "\u006ee\u0077\u004e\u0061\u006d\u0065" {
			_aedcc, _fagad := _dcfgdbc.Value, error(nil)
			if _fagad != nil {
				return _fagad
			}
			_aggeb.NewNameAttr = _aedcc
			continue
		}
		if _dcfgdbc.Name.Local == "\u0072\u0049\u0064" {
			_fdffgd, _gbfff := _eb.ParseUint(_dcfgdbc.Value, 10, 32)
			if _gbfff != nil {
				return _gbfff
			}
			_cfggce := uint32(_fdffgd)
			_aggeb.RIdAttr = &_cfggce
			continue
		}
		if _dcfgdbc.Name.Local == "\u0075\u0061" {
			_edadf, _bdcg := _eb.ParseBool(_dcfgdbc.Value)
			if _bdcg != nil {
				return _bdcg
			}
			_aggeb.UaAttr = &_edadf
			continue
		}
		if _dcfgdbc.Name.Local == "\u0072\u0061" {
			_beade, _fabd := _eb.ParseBool(_dcfgdbc.Value)
			if _fabd != nil {
				return _fabd
			}
			_aggeb.RaAttr = &_beade
			continue
		}
	}
_cbeee:
	for {
		_eccaff, _badgf := d.Token()
		if _badgf != nil {
			return _badgf
		}
		switch _fdabg := _eccaff.(type) {
		case _b.StartElement:
			switch _fdabg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aggeb.ExtLst = NewCT_ExtensionList()
				if _babgbg := d.DecodeElement(_aggeb.ExtLst, &_fdabg); _babgbg != nil {
					return _babgbg
				}
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0053\u0068\u0065\u0065\u0074\u0052\u0065\u006e\u0061\u006d\u0065\u0020\u0025\u0076", _fdabg.Name)
				if _bffea := d.Skip(); _bffea != nil {
					return _bffea
				}
			}
		case _b.EndElement:
			break _cbeee
		case _b.CharData:
		}
	}
	return nil
}

func (_afgeg ST_SourceType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bddgg := _b.Attr{}
	_bddgg.Name = name
	switch _afgeg {
	case ST_SourceTypeUnset:
		_bddgg.Value = ""
	case ST_SourceTypeWorksheet:
		_bddgg.Value = "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case ST_SourceTypeExternal:
		_bddgg.Value = "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c"
	case ST_SourceTypeConsolidation:
		_bddgg.Value = "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"
	case ST_SourceTypeScenario:
		_bddgg.Value = "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"
	}
	return _bddgg, nil
}

// Validate validates the CT_DdeValues and its children
func (_gabb *CT_DdeValues) Validate() error {
	return _gabb.ValidateWithPath("\u0043\u0054\u005fD\u0064\u0065\u0056\u0061\u006c\u0075\u0065\u0073")
}

// ValidateWithPath validates the CT_IntProperty and its children, prefixing error messages with path
func (_afbcg *CT_IntProperty) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Workbook and its children
func (_gfecb *CT_Workbook) Validate() error {
	return _gfecb.ValidateWithPath("C\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b")
}

// ValidateWithPath validates the CT_PivotFilters and its children, prefixing error messages with path
func (_dbabbbe *CT_PivotFilters) ValidateWithPath(path string) error {
	for _becef, _gcdae := range _dbabbbe.Filter {
		if _efeff := _gcdae.ValidateWithPath(_ec.Sprintf("\u0025\u0073\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _becef)); _efeff != nil {
			return _efeff
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CacheHierarchy and its children, prefixing error messages with path
func (_ecdf *CT_CacheHierarchy) ValidateWithPath(path string) error {
	if _ecdf.FieldsUsage != nil {
		if _gafcc := _ecdf.FieldsUsage.ValidateWithPath(path + "\u002f\u0046\u0069e\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"); _gafcc != nil {
			return _gafcc
		}
	}
	if _ecdf.GroupLevels != nil {
		if _ceg := _ecdf.GroupLevels.ValidateWithPath(path + "\u002f\u0047\u0072o\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"); _ceg != nil {
			return _ceg
		}
	}
	if _ecdf.ExtLst != nil {
		if _bcce := _ecdf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bcce != nil {
			return _bcce
		}
	}
	return nil
}

// Validate validates the CT_PageFields and its children
func (_caegce *CT_PageFields) Validate() error {
	return _caegce.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073")
}

type CT_CellFormula struct {
	TAttr    ST_CellFormulaType
	AcaAttr  *bool
	RefAttr  *string
	Dt2DAttr *bool
	DtrAttr  *bool
	Del1Attr *bool
	Del2Attr *bool
	R1Attr   *string
	R2Attr   *string
	CaAttr   *bool
	SiAttr   *uint32
	BxAttr   *bool
	Content  string
}

func (_bafec ST_PivotAreaType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bfdfg := _b.Attr{}
	_bfdfg.Name = name
	switch _bafec {
	case ST_PivotAreaTypeUnset:
		_bfdfg.Value = ""
	case ST_PivotAreaTypeNone:
		_bfdfg.Value = "\u006e\u006f\u006e\u0065"
	case ST_PivotAreaTypeNormal:
		_bfdfg.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_PivotAreaTypeData:
		_bfdfg.Value = "\u0064\u0061\u0074\u0061"
	case ST_PivotAreaTypeAll:
		_bfdfg.Value = "\u0061\u006c\u006c"
	case ST_PivotAreaTypeOrigin:
		_bfdfg.Value = "\u006f\u0072\u0069\u0067\u0069\u006e"
	case ST_PivotAreaTypeButton:
		_bfdfg.Value = "\u0062\u0075\u0074\u0074\u006f\u006e"
	case ST_PivotAreaTypeTopEnd:
		_bfdfg.Value = "\u0074\u006f\u0070\u0045\u006e\u0064"
	case ST_PivotAreaTypeTopRight:
		_bfdfg.Value = "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	}
	return _bfdfg, nil
}

func NewCT_CustomChartsheetViews() *CT_CustomChartsheetViews {
	_abdb := &CT_CustomChartsheetViews{}
	return _abdb
}

func (_aegb *CT_ExternalSheetData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _ec.Sprintf("\u0025\u0076", _aegb.SheetIdAttr)})
	if _aegb.RefreshErrorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066r\u0065\u0073\u0068\u0045\u0072\u0072\u006f\u0072"}, Value: _ec.Sprintf("\u0025\u0064", _gddba(*_aegb.RefreshErrorAttr))})
	}
	e.EncodeToken(start)
	if _aegb.Row != nil {
		_edegba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u006f\u0077"}}
		for _, _cfbbc := range _aegb.Row {
			e.EncodeElement(_cfbbc, _edegba)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ServerFormats struct {

	// Format Count
	CountAttr *uint32

	// Server Format
	ServerFormat []*CT_ServerFormat
}

func (_ffaa *CT_Formats) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbdf := range start.Attr {
		if _gbdf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fagfb, _cgdaa := _eb.ParseUint(_gbdf.Value, 10, 32)
			if _cgdaa != nil {
				return _cgdaa
			}
			_eddd := uint32(_fagfb)
			_ffaa.CountAttr = &_eddd
			continue
		}
	}
_dabd:
	for {
		_ggfbd, _eebbc := d.Token()
		if _eebbc != nil {
			return _eebbc
		}
		switch _ebea := _ggfbd.(type) {
		case _b.StartElement:
			switch _ebea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}:
				_bdbbb := NewCT_Format()
				if _gcfe := d.DecodeElement(_bdbbb, &_ebea); _gcfe != nil {
					return _gcfe
				}
				_ffaa.Format = append(_ffaa.Format, _bdbbb)
			default:
				_ed.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fF\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025\u0076", _ebea.Name)
				if _defae := d.Skip(); _defae != nil {
					return _defae
				}
			}
		case _b.EndElement:
			break _dabd
		case _b.CharData:
		}
	}
	return nil
}

func (_eaebca ST_CellFormulaType) Validate() error { return _eaebca.ValidateWithPath("") }

func (_cef *CT_CalculatedMembers) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcge := range start.Attr {
		if _bcge.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ebbb, _caacb := _eb.ParseUint(_bcge.Value, 10, 32)
			if _caacb != nil {
				return _caacb
			}
			_gfef := uint32(_ebbb)
			_cef.CountAttr = &_gfef
			continue
		}
	}
_aecb:
	for {
		_eccf, _afce := d.Token()
		if _afce != nil {
			return _afce
		}
		switch _dcab := _eccf.(type) {
		case _b.StartElement:
			switch _dcab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072"}:
				_gcdf := NewCT_CalculatedMember()
				if _eage := d.DecodeElement(_gcdf, &_dcab); _eage != nil {
					return _eage
				}
				_cef.CalculatedMember = append(_cef.CalculatedMember, _gcdf)
			default:
				_ed.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072\u0073\u0020\u0025\u0076", _dcab.Name)
				if _fgdc := d.Skip(); _fgdc != nil {
					return _fgdc
				}
			}
		case _b.EndElement:
			break _aecb
		case _b.CharData:
		}
	}
	return nil
}

type CT_Break struct {

	// Id
	IdAttr *uint32

	// Minimum
	MinAttr *uint32

	// Maximum
	MaxAttr *uint32

	// Manual Page Break
	ManAttr *bool

	// Pivot-Created Page Break
	PtAttr *bool
}

func init() {
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_AutoFilter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fF\u0069\u006c\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e", NewCT_FilterColumn)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0074\u0065\u0072\u0073", NewCT_Filters)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u0069\u006c\u0074\u0065r", NewCT_Filter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073", NewCT_CustomFilters)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_CustomFilter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u006f\u0070\u0031\u0030", NewCT_Top10)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0046i\u006c\u0074\u0065\u0072", NewCT_ColorFilter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_IconFilter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0044\u0079\u006ea\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_DynamicFilter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065", NewCT_SortState)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u006f\u0072t\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e", NewCT_SortCondition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0044\u0061\u0074e\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d", NewCT_DateGroupItem)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u0053\u0074\u0072\u0069\u006e\u0067\u0045\u006ce\u006d\u0065\u006e\u0074", NewCT_XStringElement)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e", NewCT_Extension)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fO\u0062\u006a\u0065\u0063\u0074\u0041\u006e\u0063\u0068\u006f\u0072", NewCT_ObjectAnchor)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewCT_ExtensionList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u0061\u006c\u0063\u0043\u0068\u0061\u0069\u006e", NewCT_CalcChain)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u0061\u006c\u0063\u0043\u0065\u006c\u006c", NewCT_CalcCell)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073", NewCT_Comments)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0074\u0068\u006f\u0072\u0073", NewCT_Authors)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074", NewCT_CommentList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074", NewCT_Comment)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072", NewCT_CommentPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0061\u0070\u0049\u006e\u0066\u006f", NewCT_MapInfo)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0063\u0068\u0065\u006da", NewCT_Schema)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0061\u0070", NewCT_Map)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0069n\u0064\u0069\u006e\u0067", NewCT_DataBinding)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063t\u0069\u006f\u006e\u0073", NewCT_Connections)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_Connection)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0044\u0062\u0050\u0072", NewCT_DbPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004f\u006c\u0061\u0070\u0050r", NewCT_OlapPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072", NewCT_WebPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073", NewCT_Parameters)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072", NewCT_Parameter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0061\u0062\u006c\u0065s", NewCT_Tables)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u004d\u0069\u0073\u0073\u0069\u006e\u0067", NewCT_TableMissing)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0065\u0078\u0074\u0050r", NewCT_TextPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_TextFields)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064", NewCT_TextField)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fPi\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e", NewCT_PivotCacheDefinition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046i\u0065\u006c\u0064\u0073", NewCT_CacheFields)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064", NewCT_CacheField)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053o\u0075\u0072\u0063\u0065", NewCT_CacheSource)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fW\u006f\u0072\u006b\u0073\u0068e\u0065\u0074S\u006f\u0075\u0072\u0063\u0065", NewCT_WorksheetSource)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u006f\u006es\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e", NewCT_Consolidation)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0073", NewCT_Pages)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0043\u0044\u0053\u0043\u0050\u0061\u0067\u0065", NewCT_PCDSCPage)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0061\u0067\u0065\u0049\u0074\u0065\u006d", NewCT_PageItem)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fR\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073", NewCT_RangeSets)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074", NewCT_RangeSet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064I\u0074\u0065\u006d\u0073", NewCT_SharedItems)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0069\u0073\u0073\u0069\u006e\u0067", NewCT_Missing)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004e\u0075\u006d\u0062\u0065r", NewCT_Number)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e", NewCT_Boolean)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045\u0072\u0072\u006f\u0072", NewCT_Error)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0074\u0072\u0069\u006eg", NewCT_String)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0061\u0074\u0065\u0054\u0069\u006d\u0065", NewCT_DateTime)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070", NewCT_FieldGroup)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0050\u0072", NewCT_RangePr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072", NewCT_DiscretePr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073", NewCT_GroupItems)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063h\u0065\u0052\u0065\u0063or\u0064\u0073", NewCT_PivotCacheRecords)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0065\u0063\u006f\u0072d", NewCT_Record)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0043\u0044\u004b\u0050\u0049\u0073", NewCT_PCDKPIs)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0043\u0044\u004b\u0050I", NewCT_PCDKPI)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043ac\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073", NewCT_CacheHierarchies)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079", NewCT_CacheHierarchy)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0073U\u0073\u0061\u0067\u0065", NewCT_FieldsUsage)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065", NewCT_FieldUsage)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004ce\u0076\u0065\u006c\u0073", NewCT_GroupLevels)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c", NewCT_GroupLevel)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0072\u006f\u0075\u0070s", NewCT_Groups)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004c\u0065\u0076\u0065\u006c\u0047\u0072\u006f\u0075\u0070", NewCT_LevelGroup)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073", NewCT_GroupMembers)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004de\u006d\u0062\u0065\u0072", NewCT_GroupMember)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065", NewCT_TupleCache)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074", NewCT_ServerFormat)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_ServerFormats)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006et\u0072\u0069\u0065\u0073", NewCT_PCDSDTCEntries)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0075\u0070\u006c\u0065s", NewCT_Tuples)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065", NewCT_Tuple)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0065\u0074\u0073", NewCT_Sets)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0065\u0074", NewCT_Set)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065", NewCT_QueryCache)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079", NewCT_Query)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0061\u006c\u0063\u0075\u006ca\u0074\u0065d\u0049\u0074\u0065\u006d\u0073", NewCT_CalculatedItems)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d", NewCT_CalculatedItem)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u004d\u0065\u006dbe\u0072\u0073", NewCT_CalculatedMembers)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043al\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072", NewCT_CalculatedMember)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fpi\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e", NewCT_pivotTableDefinition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e", NewCT_Location)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u0065\u006c\u0064\u0073", NewCT_PivotFields)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064", NewCT_PivotField)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0041\u0075\u0074o\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065", NewCT_AutoSortScope)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u0073", NewCT_Items)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0049\u0074\u0065\u006d", NewCT_Item)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_PageFields)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064", NewCT_PageField)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_DataFields)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fD\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064", NewCT_DataField)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073", NewCT_rowItems)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073", NewCT_colItems)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049", NewCT_I)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058", NewCT_X)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fR\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_RowFields)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_ColFields)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064", NewCT_Field)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_Formats)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u006f\u0072\u006d\u0061t", NewCT_Format)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006fnd\u0069t\u0069\u006f\u006e\u0061\u006cF\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_ConditionalFormats)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0061\u006c\u0046\u006frm\u0061\u0074", NewCT_ConditionalFormat)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073", NewCT_PivotAreas)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_ChartFormats)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0046o\u0072\u006d\u0061\u0074", NewCT_ChartFormat)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050iv\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073", NewCT_PivotHierarchies)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079", NewCT_PivotHierarchy)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ow\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065", NewCT_RowHierarchiesUsage)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043ol\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065", NewCT_ColHierarchiesUsage)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065", NewCT_HierarchyUsage)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004dem\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_MemberProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050\u0072\u006fp\u0065\u0072\u0074\u0079", NewCT_MemberProperty)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0073", NewCT_Members)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004d\u0065\u006d\u0062\u0065r", NewCT_Member)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073", NewCT_Dimensions)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e", NewCT_PivotDimension)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073", NewCT_MeasureGroups)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fMe\u0061\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004d\u0061\u0070\u0073", NewCT_MeasureDimensionMaps)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fM\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070", NewCT_MeasureGroup)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004dea\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004da\u0070", NewCT_MeasureDimensionMap)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0069\u0076\u006f\u0074\u0054a\u0062\u006ce\u0053\u0074\u0079\u006c\u0065", NewCT_PivotTableStyle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0069\u0076\u006f\u0074\u0046\u0069\u006c\u0074\u0065\u0072\u0073", NewCT_PivotFilters)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u006c\u0074\u0065\u0072", NewCT_PivotFilter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061", NewCT_PivotArea)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050iv\u006f\u0074\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0073", NewCT_PivotAreaReferences)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0069vo\u0074A\u0072\u0065\u0061\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065", NewCT_PivotAreaReference)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078", NewCT_Index)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065", NewCT_QueryTable)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0052\u0065\u0066re\u0073\u0068", NewCT_QueryTableRefresh)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069e\u006c\u0064\u0073", NewCT_QueryTableDeletedFields)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064", NewCT_DeletedField)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_QueryTableFields)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fQ\u0075\u0065\u0072\u0079\u0054a\u0062\u006ce\u0046\u0069\u0065\u006c\u0064", NewCT_QueryTableField)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0073\u0074", NewCT_Sst)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074i\u0063\u0052\u0075\u006e", NewCT_PhoneticRun)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0045\u006c\u0074", NewCT_RElt)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0050\u0072\u0045\u006ct", NewCT_RPrElt)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0073\u0074", NewCT_Rst)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072", NewCT_PhoneticPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0048e\u0061\u0064\u0065\u0072\u0073", NewCT_RevisionHeaders)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073", NewCT_Revisions)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0048e\u0061\u0064\u0065\u0072", NewCT_RevisionHeader)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070", NewCT_SheetIdMap)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064", NewCT_SheetId)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064R\u0065\u0076\u0069\u0073io\u006e\u0073", NewCT_ReviewedRevisions)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064", NewCT_Reviewed)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0055\u006e\u0064\u006f\u0049\u006e\u0066\u006f", NewCT_UndoInfo)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eR\u006f\u0077\u0043\u006flu\u006d\u006e", NewCT_RevisionRowColumn)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065", NewCT_RevisionMove)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0075\u0073t\u006f\u006d\u0056\u0069\u0065\u0077", NewCT_RevisionCustomView)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0053\u0068\u0065\u0065\u0074\u0052\u0065\u006e\u0061m\u0065", NewCT_RevisionSheetRename)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0049\u006e\u0073\u0065\u0072\u0074\u0053\u0068\u0065e\u0074", NewCT_RevisionInsertSheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0065\u006cl\u0043\u0068\u0061\u006e\u0067\u0065", NewCT_RevisionCellChange)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_RevisionFormatting)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u0041u\u0074o\u0046o\u0072\u006d\u0061\u0074\u0074\u0069\u006eg", NewCT_RevisionAutoFormatting)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0043o\u006d\u006d\u0065\u006e\u0074", NewCT_RevisionComment)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065", NewCT_RevisionDefinedName)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074", NewCT_RevisionConflict)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eQ\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046i\u0065\u006c\u0064", NewCT_RevisionQueryTableField)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0055\u0073\u0065\u0072\u0073", NewCT_Users)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0055\u0073\u0065\u0072", NewCT_SharedUser)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0061\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074", NewCT_Macrosheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0069\u0061\u006c\u006f\u0067s\u0068\u0065\u0065\u0074", NewCT_Dialogsheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fW\u006f\u0072\u006b\u0073\u0068\u0065\u0065\u0074", NewCT_Worksheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061", NewCT_SheetData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0043a\u006c\u0063\u0050\u0072", NewCT_SheetCalcPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072", NewCT_SheetFormatPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006c\u0073", NewCT_Cols)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c", NewCT_Col)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u006f\u0077", NewCT_Row)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0065\u006c\u006c", NewCT_Cell)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0050\u0072", NewCT_SheetPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e", NewCT_SheetDimension)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073", NewCT_SheetViews)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077", NewCT_SheetView)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0061\u006e\u0065", NewCT_Pane)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e", NewCT_PivotSelection)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_Selection)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b", NewCT_PageBreak)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b", NewCT_Break)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fO\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072", NewCT_OutlinePr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0053\u0065t\u0055\u0070\u0050\u0072", NewCT_PageSetUpPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065", NewCT_DataConsolidate)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u0073", NewCT_DataRefs)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066", NewCT_DataRef)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073", NewCT_MergeCells)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fM\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c", NewCT_MergeCell)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073", NewCT_SmartTags)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073", NewCT_CellSmartTags)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067", NewCT_CellSmartTag)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072", NewCT_CellSmartTagPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067", NewCT_Drawing)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067", NewCT_LegacyDrawing)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fD\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046", NewCT_DrawingHF)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073", NewCT_CustomSheetViews)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077", NewCT_CustomSheetView)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0061\u0074\u0061\u0056\u0061l\u0069\u0064a\u0074\u0069\u006f\u006e\u0073", NewCT_DataValidations)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e", NewCT_DataValidation)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_ConditionalFormatting)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0066\u0052\u0075\u006ce", NewCT_CfRule)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0048\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073", NewCT_Hyperlinks)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b", NewCT_Hyperlink)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0046\u006fr\u006d\u0075\u006c\u0061", NewCT_CellFormula)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065", NewCT_ColorScale)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0061\u0072", NewCT_DataBar)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0053\u0065\u0074", NewCT_IconSet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0066\u0076\u006f", NewCT_Cfvo)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073", NewCT_PageMargins)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073", NewCT_PrintOptions)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070", NewCT_PageSetup)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072", NewCT_HeaderFooter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073", NewCT_Scenarios)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e", NewCT_SheetProtection)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0072\u006f\u0074\u0065\u0063t\u0065\u0064R\u0061\u006e\u0067\u0065\u0073", NewCT_ProtectedRanges)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065", NewCT_ProtectedRange)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f", NewCT_Scenario)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073", NewCT_InputCells)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0057\u0061t\u0063\u0068\u0065\u0073", NewCT_CellWatches)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068", NewCT_CellWatch)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074", NewCT_Chartsheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072", NewCT_ChartsheetPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073h\u0065\u0065t\u0056\u0069\u0065\u0077\u0073", NewCT_ChartsheetViews)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065t\u0056\u0069\u0065\u0077", NewCT_ChartsheetView)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fCh\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_ChartsheetProtection)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0073\u0050\u0061\u0067\u0065S\u0065\u0074\u0075\u0070", NewCT_CsPageSetup)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072t\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073", NewCT_CustomChartsheetViews)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fCu\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077", NewCT_CustomChartsheetView)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_CustomProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006fp\u0065\u0072\u0074\u0079", NewCT_CustomProperty)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073", NewCT_OleObjects)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074", NewCT_OleObject)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0050\u0072", NewCT_ObjectPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fW\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073", NewCT_WebPublishItems)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d", NewCT_WebPublishItem)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0073", NewCT_Controls)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c", NewCT_Control)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072", NewCT_ControlPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0049\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073", NewCT_IgnoredErrors)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fI\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072", NewCT_IgnoredError)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073", NewCT_TableParts)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074", NewCT_TablePart)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061", NewCT_Metadata)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073", NewCT_MetadataTypes)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065", NewCT_MetadataType)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042l\u006f\u0063\u006b\u0073", NewCT_MetadataBlocks)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b", NewCT_MetadataBlock)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0052e\u0063\u006f\u0072\u0064", NewCT_MetadataRecord)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061", NewCT_FutureMetadata)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046ut\u0075\u0072\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006fc\u006b", NewCT_FutureMetadataBlock)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u0074a\u0064\u0061\u0074\u0061", NewCT_MdxMetadata)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0064\u0078", NewCT_Mdx)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004d\u0064\u0078\u0054\u0075\u0070\u006c\u0065", NewCT_MdxTuple)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004d\u0064\u0078\u0053\u0065t", NewCT_MdxSet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u006d\u0065\u0062\u0065r\u0050\u0072\u006f\u0070", NewCT_MdxMemeberProp)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004d\u0064\u0078\u004b\u0050I", NewCT_MdxKPI)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004det\u0061\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0049\u006e\u0064e\u0078", NewCT_MetadataStringIndex)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061t\u0061\u0053t\u0072\u0069\u006e\u0067\u0073", NewCT_MetadataStrings)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073", NewCT_SingleXmlCells)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u0069\u006eg\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c", NewCT_SingleXmlCell)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fX\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072", NewCT_XmlCellPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u006d\u006c\u0050\u0072", NewCT_XmlPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u0073\u0068\u0065\u0065\u0074", NewCT_Stylesheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u0065\u006cl\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074", NewCT_CellAlignment)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0073", NewCT_Borders)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0042\u006f\u0072\u0064\u0065r", NewCT_Border)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0050\u0072", NewCT_BorderPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0074\u0065c\u0074\u0069\u006f\u006e", NewCT_CellProtection)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0073", NewCT_Fonts)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0073", NewCT_Fills)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u0069\u006c\u006c", NewCT_Fill)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072n\u0046\u0069\u006c\u006c", NewCT_PatternFill)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072", NewCT_Color)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c", NewCT_GradientFill)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070", NewCT_GradientStop)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004e\u0075\u006d\u0046\u006d\u0074\u0073", NewCT_NumFmts)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004e\u0075\u006d\u0046\u006dt", NewCT_NumFmt)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073", NewCT_CellStyleXfs)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0058\u0066\u0073", NewCT_CellXfs)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fX\u0066", NewCT_Xf)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073", NewCT_CellStyles)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065", NewCT_CellStyle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0044\u0078\u0066\u0073", NewCT_Dxfs)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0078\u0066", NewCT_Dxf)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006c\u006f\u0072s", NewCT_Colors)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0049\u006e\u0064e\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073", NewCT_IndexedColors)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fM\u0052\u0055\u0043\u006f\u006c\u006f\u0072\u0073", NewCT_MRUColors)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072", NewCT_RgbColor)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053t\u0079\u006c\u0065\u0073", NewCT_TableStyles)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_TableStyle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079l\u0065\u0045\u006c\u0065me\u006e\u0074", NewCT_TableStyleElement)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fB\u006f\u006f\u006c\u0065\u0061n\u0050\u0072o\u0070\u0065\u0072\u0074\u0079", NewCT_BooleanProperty)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0069\u007a\u0065", NewCT_FontSize)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0074\u0050\u0072\u006fp\u0065\u0072\u0074\u0079", NewCT_IntProperty)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065", NewCT_FontName)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056e\u0072\u0074\u0069\u0063\u0061\u006c\u0041\u006c\u0069\u0067n\u0046o\u006e\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0079", NewCT_VerticalAlignFontProperty)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065", NewCT_FontScheme)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0050\u0072\u006f\u0070er\u0074\u0079", NewCT_UnderlineProperty)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u006f\u006e\u0074", NewCT_Font)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079", NewCT_FontFamily)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b", NewCT_ExternalLink)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b", NewCT_ExternalBook)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0053\u0068\u0065e\u0074\u004e\u0061\u006d\u0065\u0073", NewCT_ExternalSheetNames)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Na\u006d\u0065", NewCT_ExternalSheetName)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073", NewCT_ExternalDefinedNames)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045xt\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065", NewCT_ExternalDefinedName)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074", NewCT_ExternalSheetDataSet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Da\u0074\u0061", NewCT_ExternalSheetData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006ea\u006c\u0052\u006f\u0077", NewCT_ExternalRow)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0043\u0065\u006c\u006c", NewCT_ExternalCell)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0064\u0065\u004c\u0069\u006e\u006b", NewCT_DdeLink)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d\u0073", NewCT_DdeItems)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d", NewCT_DdeItem)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fD\u0064\u0065\u0056\u0061\u006c\u0075\u0065\u0073", NewCT_DdeValues)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0064\u0065\u0056\u0061\u006c\u0075\u0065", NewCT_DdeValue)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u004c\u0069\u006e\u006b", NewCT_OleLink)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u0073", NewCT_OleItems)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d", NewCT_OleItem)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065", NewCT_Table)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f", NewCT_TableStyleInfo)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073", NewCT_TableColumns)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043o\u006c\u0075\u006d\u006e", NewCT_TableColumn)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061", NewCT_TableFormula)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u006d\u006c\u0043\u006f\u006cu\u006d\u006e\u0050\u0072", NewCT_XmlColumnPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073", NewCT_VolTypes)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065", NewCT_VolType)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056\u006f\u006c\u004d\u0061\u0069\u006e", NewCT_VolMain)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070\u0069\u0063", NewCT_VolTopic)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070i\u0063\u0052\u0065\u0066", NewCT_VolTopicRef)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b", NewCT_Workbook)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0056\u0065r\u0073\u0069\u006f\u006e", NewCT_FileVersion)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fB\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073", NewCT_BookViews)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077", NewCT_BookView)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065w\u0073", NewCT_CustomWorkbookViews)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u0075st\u006fm\u0057\u006f\u0072\u006b\u0062o\u006f\u006b\u0056\u0069\u0065\u0077", NewCT_CustomWorkbookView)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0068\u0065\u0065\u0074s", NewCT_Sheets)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074", NewCT_Sheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072", NewCT_WorkbookPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072", NewCT_SmartTagPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073", NewCT_SmartTagTypes)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065", NewCT_SmartTagType)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072", NewCT_FileRecoveryPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0061\u006c\u0063\u0050r", NewCT_CalcPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073", NewCT_DefinedNames)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065", NewCT_DefinedName)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0073", NewCT_ExternalReferences)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cR\u0065\u0066\u0065\u0072en\u0063\u0065", NewCT_ExternalReference)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0068\u0065e\u0074\u0042\u0061\u0063\u006bg\u0072o\u0075n\u0064\u0050\u0069\u0063\u0074\u0075\u0072e", NewCT_SheetBackgroundPicture)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043a\u0063\u0068\u0065\u0073", NewCT_PivotCaches)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065", NewCT_PivotCache)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0053\u0068a\u0072\u0069\u006e\u0067", NewCT_FileSharing)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u0053\u0069\u007a\u0065", NewCT_OleSize)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0057\u006frk\u0062o\u006f\u006b\u0050\u0072\u006ft\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_WorkbookProtection)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0057\u0065\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067", NewCT_WebPublishing)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073", NewCT_FunctionGroups)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070", NewCT_FunctionGroup)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u004f\u0062\u006aec\u0074\u0073", NewCT_WebPublishObjects)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057eb\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074", NewCT_WebPublishObject)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0063a\u006c\u0063\u0043\u0068\u0061\u0069n", NewCalcChain)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0073", NewComments)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u004da\u0070\u0049\u006e\u0066\u006f", NewMapInfo)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "c\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073", NewConnections)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "p\u0069v\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e", NewPivotCacheDefinition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065c\u006f\u0072\u0064\u0073", NewPivotCacheRecords)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "p\u0069v\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e", NewPivotTableDefinition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065", NewQueryTable)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0073\u0073\u0074", NewSst)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0068e\u0061\u0064\u0065\u0072\u0073", NewHeaders)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0072e\u0076\u0069\u0073\u0069\u006f\u006es", NewRevisions)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0075\u0073\u0065r\u0073", NewUsers)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t", NewWorksheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0063\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074", NewChartsheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "d\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074", NewDialogsheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061", NewMetadata)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073", NewSingleXmlCells)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0073\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074", NewStyleSheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b", NewExternalLink)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0061\u0062l\u0065", NewTable)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0076\u006f\u006c\u0054\u0079\u0070\u0065\u0073", NewVolTypes)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b", NewWorkbook)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewEG_ExtensionList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041\u0047\u005f\u0052\u0065\u0076\u0044\u0061\u0074\u0061", NewAG_RevData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041\u0047\u005f\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061\u0074", NewAG_AutoFormat)
}

// Validate validates the CT_CacheFields and its children
func (_gacg *CT_CacheFields) Validate() error {
	return _gacg.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046i\u0065\u006c\u0064\u0073")
}

func (_bdfbd *CT_SmartTagType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bdfbd.NamespaceUriAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006de\u0073\u0070\u0061\u0063\u0065\u0055\u0072\u0069"}, Value: _ec.Sprintf("\u0025\u0076", *_bdfbd.NamespaceUriAttr)})
	}
	if _bdfbd.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ec.Sprintf("\u0025\u0076", *_bdfbd.NameAttr)})
	}
	if _bdfbd.UrlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0072\u006c"}, Value: _ec.Sprintf("\u0025\u0076", *_bdfbd.UrlAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
