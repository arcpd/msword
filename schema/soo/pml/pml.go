package pml

import (
	_g "encoding/xml"
	_ce "fmt"
	_d "strconv"
	_b "time"

	_eb "github.com/arcpd/msword"
	_e "github.com/arcpd/msword/common/logger"
	_f "github.com/arcpd/msword/schema/soo/dml"
	_fg "github.com/arcpd/msword/schema/soo/ofc/sharedTypes"
)

// ValidateWithPath validates the CT_OutlineViewProperties and its children, prefixing error messages with path
func (_cbbcb *CT_OutlineViewProperties) ValidateWithPath(path string) error {
	if _edag := _cbbcb.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _edag != nil {
		return _edag
	}
	if _cbbcb.SldLst != nil {
		if _eace := _cbbcb.SldLst.ValidateWithPath(path + "\u002fS\u006c\u0064\u004c\u0073\u0074"); _eace != nil {
			return _eace
		}
	}
	if _cbbcb.ExtLst != nil {
		if _fbca := _cbbcb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbca != nil {
			return _fbca
		}
	}
	return nil
}

func NewEG_ChildSlide() *EG_ChildSlide { _abbbf := &EG_ChildSlide{}; return _abbbf }

const (
	ST_SplitterBarStateUnset     ST_SplitterBarState = 0
	ST_SplitterBarStateMinimized ST_SplitterBarState = 1
	ST_SplitterBarStateRestored  ST_SplitterBarState = 2
	ST_SplitterBarStateMaximized ST_SplitterBarState = 3
)

type CT_SlideLayoutIdListEntry struct {

	// ID Tag
	IdAttr  *uint32
	RIdAttr string
	ExtLst  *CT_ExtensionList
}

func (_ggag *Notes) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ggag.CT_NotesSlide = *NewCT_NotesSlide()
	for _, _eabag := range start.Attr {
		if _eabag.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_acgf, _gdcda := _d.ParseBool(_eabag.Value)
			if _gdcda != nil {
				return _gdcda
			}
			_ggag.ShowMasterSpAttr = &_acgf
			continue
		}
		if _eabag.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_fdaca, _fcefb := _d.ParseBool(_eabag.Value)
			if _fcefb != nil {
				return _fcefb
			}
			_ggag.ShowMasterPhAnimAttr = &_fdaca
			continue
		}
	}
_eddfd:
	for {
		_eeea, _efbg := d.Token()
		if _efbg != nil {
			return _efbg
		}
		switch _cccag := _eeea.(type) {
		case _g.StartElement:
			switch _cccag.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _eadg := d.DecodeElement(_ggag.CSld, &_cccag); _eadg != nil {
					return _eadg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_ggag.ClrMapOvr = _f.NewCT_ColorMappingOverride()
				if _abdf := d.DecodeElement(_ggag.ClrMapOvr, &_cccag); _abdf != nil {
					return _abdf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggag.ExtLst = NewCT_ExtensionListModify()
				if _aaegc := d.DecodeElement(_ggag.ExtLst, &_cccag); _aaegc != nil {
					return _aaegc
				}
			default:
				_e.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u004e\u006f\u0074e\u0073 \u0025\u0076", _cccag.Name)
				if _eecff := d.Skip(); _eecff != nil {
					return _eecff
				}
			}
		case _g.EndElement:
			break _eddfd
		case _g.CharData:
		}
	}
	return nil
}

type CT_ShowInfoBrowse struct {

	// Show Scroll Bar in Window
	ShowScrollbarAttr *bool
}

func (_adbe *CT_Shape) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _adbe.UseBgFillAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075s\u0065\u0042\u0067\u0046\u0069\u006cl"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_adbe.UseBgFillAttr))})
	}
	e.EncodeToken(start)
	_agcb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u006e\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_adbe.NvSpPr, _agcb)
	_gaege := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_adbe.SpPr, _gaege)
	if _adbe.Style != nil {
		_dadedd := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_adbe.Style, _dadedd)
	}
	if _adbe.TxBody != nil {
		_eefeb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074\u0078\u0042\u006f\u0064\u0079"}}
		e.EncodeElement(_adbe.TxBody, _eefeb)
	}
	if _adbe.ExtLst != nil {
		_adfg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_adbe.ExtLst, _adfg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_efgcf *CT_NotesMasterIdListEntry) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ggcgc := range start.Attr {
		if _ggcgc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ggcgc.Name.Local == "\u0069\u0064" || _ggcgc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ggcgc.Name.Local == "\u0069\u0064" {
			_eda, _ggeb := _ggcgc.Value, error(nil)
			if _ggeb != nil {
				return _ggeb
			}
			_efgcf.IdAttr = _eda
			continue
		}
	}
_eageg:
	for {
		_degf, _badcc := d.Token()
		if _badcc != nil {
			return _badcc
		}
		switch _bgfgc := _degf.(type) {
		case _g.StartElement:
			switch _bgfgc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efgcf.ExtLst = NewCT_ExtensionList()
				if _afaba := d.DecodeElement(_efgcf.ExtLst, &_bgfgc); _afaba != nil {
					return _afaba
				}
			default:
				_e.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065r\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006et\u0072y\u0020\u0025v", _bgfgc.Name)
				if _bdbe := d.Skip(); _bdbe != nil {
					return _bdbe
				}
			}
		case _g.EndElement:
			break _eageg
		case _g.CharData:
		}
	}
	return nil
}

func (_fgdbc *Presentation) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fgdbc.CT_Presentation = *NewCT_Presentation()
	for _, _adff := range start.Attr {
		if _adff.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0053\u006c\u0069\u0064\u0065\u004e\u0075\u006d" {
			_gfbca, _ggeec := _d.ParseInt(_adff.Value, 10, 32)
			if _ggeec != nil {
				return _ggeec
			}
			_acffb := int32(_gfbca)
			_fgdbc.FirstSlideNumAttr = &_acffb
			continue
		}
		if _adff.Name.Local == "\u0072\u0074\u006c" {
			_ggbad, _cfefb := _d.ParseBool(_adff.Value)
			if _cfefb != nil {
				return _cfefb
			}
			_fgdbc.RtlAttr = &_ggbad
			continue
		}
		if _adff.Name.Local == "\u0063\u006f\u006d\u0070\u0061\u0074\u004d\u006f\u0064\u0065" {
			_gbdbc, _ggdc := _d.ParseBool(_adff.Value)
			if _ggdc != nil {
				return _ggdc
			}
			_fgdbc.CompatModeAttr = &_gbdbc
			continue
		}
		if _adff.Name.Local == "\u0065m\u0062e\u0064\u0054\u0072\u0075\u0065T\u0079\u0070e\u0046\u006f\u006e\u0074\u0073" {
			_bcebd, _fcfce := _d.ParseBool(_adff.Value)
			if _fcfce != nil {
				return _fcfce
			}
			_fgdbc.EmbedTrueTypeFontsAttr = &_bcebd
			continue
		}
		if _adff.Name.Local == "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073" {
			_befdg, _cefde := _d.ParseBool(_adff.Value)
			if _cefde != nil {
				return _cefde
			}
			_fgdbc.AutoCompressPicturesAttr = &_befdg
			continue
		}
		if _adff.Name.Local == "\u0073h\u006f\u0077\u0053\u0070\u0065\u0063\u0069\u0061\u006c\u0050\u006cs\u004f\u006e\u0054\u0069\u0074\u006c\u0065\u0053\u006c\u0064" {
			_babc, _eceef := _d.ParseBool(_adff.Value)
			if _eceef != nil {
				return _eceef
			}
			_fgdbc.ShowSpecialPlsOnTitleSldAttr = &_babc
			continue
		}
		if _adff.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u005a\u006f\u006f\u006d" {
			_faagf, _gfbdg := ParseUnionST_Percentage(_adff.Value)
			if _gfbdg != nil {
				return _gfbdg
			}
			_fgdbc.ServerZoomAttr = &_faagf
			continue
		}
		if _adff.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_fgdbc.ConformanceAttr.UnmarshalXMLAttr(_adff)
			continue
		}
		if _adff.Name.Local == "\u0072e\u006d\u006f\u0076\u0065\u0050\u0065\u0072\u0073\u006f\u006e\u0061l\u0049\u006e\u0066\u006f\u004f\u006e\u0053\u0061\u0076\u0065" {
			_fgbf, _ddaba := _d.ParseBool(_adff.Value)
			if _ddaba != nil {
				return _ddaba
			}
			_fgdbc.RemovePersonalInfoOnSaveAttr = &_fgbf
			continue
		}
		if _adff.Name.Local == "\u0073a\u0076e\u0053\u0075\u0062\u0073\u0065\u0074\u0046\u006f\u006e\u0074\u0073" {
			_fccd, _affea := _d.ParseBool(_adff.Value)
			if _affea != nil {
				return _affea
			}
			_fgdbc.SaveSubsetFontsAttr = &_fccd
			continue
		}
		if _adff.Name.Local == "\u0062\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049d\u0053\u0065\u0065\u0064" {
			_agaea, _cggb := _d.ParseUint(_adff.Value, 10, 32)
			if _cggb != nil {
				return _cggb
			}
			_abadb := uint32(_agaea)
			_fgdbc.BookmarkIdSeedAttr = &_abadb
			continue
		}
		if _adff.Name.Local == "\u0073\u0074\u0072ic\u0074\u0046\u0069\u0072\u0073\u0074\u0041\u006e\u0064\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072\u0073" {
			_affbad, _gdbaa := _d.ParseBool(_adff.Value)
			if _gdbaa != nil {
				return _gdbaa
			}
			_fgdbc.StrictFirstAndLastCharsAttr = &_affbad
			continue
		}
	}
_cafbc:
	for {
		_bfeaa, _gbbcd := d.Token()
		if _gbbcd != nil {
			return _gbbcd
		}
		switch _aebff := _bfeaa.(type) {
		case _g.StartElement:
			switch _aebff.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}:
				_fgdbc.SldMasterIdLst = NewCT_SlideMasterIdList()
				if _afggf := d.DecodeElement(_fgdbc.SldMasterIdLst, &_aebff); _afggf != nil {
					return _afggf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}:
				_fgdbc.NotesMasterIdLst = NewCT_NotesMasterIdList()
				if _efad := d.DecodeElement(_fgdbc.NotesMasterIdLst, &_aebff); _efad != nil {
					return _efad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}:
				_fgdbc.HandoutMasterIdLst = NewCT_HandoutMasterIdList()
				if _aaccdb := d.DecodeElement(_fgdbc.HandoutMasterIdLst, &_aebff); _aaccdb != nil {
					return _aaccdb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}:
				_fgdbc.SldIdLst = NewCT_SlideIdList()
				if _ddgee := d.DecodeElement(_fgdbc.SldIdLst, &_aebff); _ddgee != nil {
					return _ddgee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}:
				_fgdbc.SldSz = NewCT_SlideSize()
				if _ffcaf := d.DecodeElement(_fgdbc.SldSz, &_aebff); _ffcaf != nil {
					return _ffcaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}:
				if _ccbed := d.DecodeElement(_fgdbc.NotesSz, &_aebff); _ccbed != nil {
					return _ccbed
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_fgdbc.SmartTags = NewCT_SmartTags()
				if _cgadg := d.DecodeElement(_fgdbc.SmartTags, &_aebff); _cgadg != nil {
					return _cgadg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}:
				_fgdbc.EmbeddedFontLst = NewCT_EmbeddedFontList()
				if _dbcd := d.DecodeElement(_fgdbc.EmbeddedFontLst, &_aebff); _dbcd != nil {
					return _dbcd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}:
				_fgdbc.CustShowLst = NewCT_CustomShowList()
				if _dgcde := d.DecodeElement(_fgdbc.CustShowLst, &_aebff); _dgcde != nil {
					return _dgcde
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}:
				_fgdbc.PhotoAlbum = NewCT_PhotoAlbum()
				if _eecbg := d.DecodeElement(_fgdbc.PhotoAlbum, &_aebff); _eecbg != nil {
					return _eecbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_fgdbc.CustDataLst = NewCT_CustomerDataList()
				if _cggbb := d.DecodeElement(_fgdbc.CustDataLst, &_aebff); _cggbb != nil {
					return _cggbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}:
				_fgdbc.Kinsoku = NewCT_Kinsoku()
				if _aabba := d.DecodeElement(_fgdbc.Kinsoku, &_aebff); _aabba != nil {
					return _aabba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_fgdbc.DefaultTextStyle = _f.NewCT_TextListStyle()
				if _fgdef := d.DecodeElement(_fgdbc.DefaultTextStyle, &_aebff); _fgdef != nil {
					return _fgdef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}:
				_fgdbc.ModifyVerifier = NewCT_ModifyVerifier()
				if _debf := d.DecodeElement(_fgdbc.ModifyVerifier, &_aebff); _debf != nil {
					return _debf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgdbc.ExtLst = NewCT_ExtensionList()
				if _dgbdb := d.DecodeElement(_fgdbc.ExtLst, &_aebff); _dgbdb != nil {
					return _dgbdb
				}
			default:
				_e.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0050\u0072es\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _aebff.Name)
				if _fgdacd := d.Skip(); _fgdacd != nil {
					return _fgdacd
				}
			}
		case _g.EndElement:
			break _cafbc
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_ShowProperties() *CT_ShowProperties { _cdea := &CT_ShowProperties{}; return _cdea }

// Validate validates the CT_NotesMaster and its children
func (_bbdf *CT_NotesMaster) Validate() error {
	return _bbdf.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004da\u0073\u0074\u0065\u0072")
}

type ST_TLTimeNodePresetClassType byte

const (
	ST_PhotoAlbumFrameShapeUnset       ST_PhotoAlbumFrameShape = 0
	ST_PhotoAlbumFrameShapeFrameStyle1 ST_PhotoAlbumFrameShape = 1
	ST_PhotoAlbumFrameShapeFrameStyle2 ST_PhotoAlbumFrameShape = 2
	ST_PhotoAlbumFrameShapeFrameStyle3 ST_PhotoAlbumFrameShape = 3
	ST_PhotoAlbumFrameShapeFrameStyle4 ST_PhotoAlbumFrameShape = 4
	ST_PhotoAlbumFrameShapeFrameStyle5 ST_PhotoAlbumFrameShape = 5
	ST_PhotoAlbumFrameShapeFrameStyle6 ST_PhotoAlbumFrameShape = 6
	ST_PhotoAlbumFrameShapeFrameStyle7 ST_PhotoAlbumFrameShape = 7
)

func (_cbcbf *Notes) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070:\u006e\u006f\u0074\u0065\u0073"
	return _cbcbf.CT_NotesSlide.MarshalXML(e, start)
}

func NewCT_TransitionStartSoundAction() *CT_TransitionStartSoundAction {
	_acgef := &CT_TransitionStartSoundAction{}
	_acgef.Snd = _f.NewCT_EmbeddedWAVAudioFile()
	return _acgef
}

func NewCT_SlideLayoutIdList() *CT_SlideLayoutIdList { _bbfb := &CT_SlideLayoutIdList{}; return _bbfb }

// Validate validates the CT_TLAnimateRotationBehavior and its children
func (_fddce *CT_TLAnimateRotationBehavior) Validate() error {
	return _fddce.ValidateWithPath("\u0043\u0054\u005f\u0054L\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0052\u006f\u0074a\u0074i\u006f\u006e\u0042\u0065\u0068\u0061\u0076i\u006f\u0072")
}

func (_efbee ST_Direction) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_efbee.String(), start)
}

func (_fbgaf ST_PhotoAlbumFrameShape) String() string {
	switch _fbgaf {
	case 0:
		return ""
	case 1:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031"
	case 2:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032"
	case 3:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033"
	case 4:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034"
	case 5:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035"
	case 6:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036"
	case 7:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037"
	}
	return ""
}

// Validate validates the CT_TLSetBehavior and its children
func (_caff *CT_TLSetBehavior) Validate() error {
	return _caff.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0053e\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072")
}

func (_eegba ST_TLBehaviorTransformType) ValidateWithPath(path string) error {
	switch _eegba {
	case 0, 1, 2:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eegba))
	}
	return nil
}

// ValidateWithPath validates the CT_SideDirectionTransition and its children, prefixing error messages with path
func (_aeaf *CT_SideDirectionTransition) ValidateWithPath(path string) error {
	if _cdag := _aeaf.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _cdag != nil {
		return _cdag
	}
	return nil
}

func NewCT_SlideViewProperties() *CT_SlideViewProperties {
	_ecfa := &CT_SlideViewProperties{}
	_ecfa.CSldViewPr = NewCT_CommonSlideViewProperties()
	return _ecfa
}

// ValidateWithPath validates the CT_BuildList and its children, prefixing error messages with path
func (_dgbb *CT_BuildList) ValidateWithPath(path string) error {
	for _gdf, _baca := range _dgbb.BldP {
		if _be := _baca.ValidateWithPath(_ce.Sprintf("%\u0073\u002f\u0042\u006c\u0064\u0050\u005b\u0025\u0064\u005d", path, _gdf)); _be != nil {
			return _be
		}
	}
	for _fgad, _efb := range _dgbb.BldDgm {
		if _dfd := _efb.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0042\u006c\u0064\u0044\u0067\u006d\u005b\u0025\u0064\u005d", path, _fgad)); _dfd != nil {
			return _dfd
		}
	}
	for _bad, _ffb := range _dgbb.BldOleChart {
		if _edg := _ffb.ValidateWithPath(_ce.Sprintf("\u0025s\u002fB\u006c\u0064\u004f\u006c\u0065C\u0068\u0061r\u0074\u005b\u0025\u0064\u005d", path, _bad)); _edg != nil {
			return _edg
		}
	}
	for _dega, _ege := range _dgbb.BldGraphic {
		if _ccfe := _ege.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0042\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069c\u005b\u0025\u0064\u005d", path, _dega)); _ccfe != nil {
			return _ccfe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideTransition and its children, prefixing error messages with path
func (_cgbca *CT_SlideTransition) ValidateWithPath(path string) error {
	if _afef := _cgbca.SpdAttr.ValidateWithPath(path + "\u002f\u0053\u0070\u0064\u0041\u0074\u0074\u0072"); _afef != nil {
		return _afef
	}
	if _cgbca.Choice != nil {
		if _gaaae := _cgbca.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _gaaae != nil {
			return _gaaae
		}
	}
	if _cgbca.SndAc != nil {
		if _ggfec := _cgbca.SndAc.ValidateWithPath(path + "\u002f\u0053\u006e\u0064\u0041\u0063"); _ggfec != nil {
			return _ggfec
		}
	}
	if _cgbca.ExtLst != nil {
		if _cdeb := _cgbca.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cdeb != nil {
			return _cdeb
		}
	}
	return nil
}

// Validate validates the CT_TLCommandBehavior and its children
func (_gecbf *CT_TLCommandBehavior) Validate() error {
	return _gecbf.ValidateWithPath("C\u0054_\u0054\u004c\u0043\u006f\u006d\u006d\u0061\u006ed\u0042\u0065\u0068\u0061vi\u006f\u0072")
}

func (_fbagc *CT_ViewProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fbagc.LastViewAttr != ST_ViewTypeUnset {
		_gabag, _faebe := _fbagc.LastViewAttr.MarshalXMLAttr(_g.Name{Local: "\u006c\u0061\u0073\u0074\u0056\u0069\u0065\u0077"})
		if _faebe != nil {
			return _faebe
		}
		start.Attr = append(start.Attr, _gabag)
	}
	if _fbagc.ShowCommentsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_fbagc.ShowCommentsAttr))})
	}
	e.EncodeToken(start)
	if _fbagc.NormalViewPr != nil {
		_bacdc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u006e\u006f\u0072\u006d\u0061\u006c\u0056i\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_fbagc.NormalViewPr, _bacdc)
	}
	if _fbagc.SlideViewPr != nil {
		_bcbab := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_fbagc.SlideViewPr, _bcbab)
	}
	if _fbagc.OutlineViewPr != nil {
		_cbaba := _g.StartElement{Name: _g.Name{Local: "\u0070:\u006fu\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_fbagc.OutlineViewPr, _cbaba)
	}
	if _fbagc.NotesTextViewPr != nil {
		_gcff := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u006e\u006f\u0074\u0065\u0073\u0054\u0065\u0078\u0074\u0056i\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_fbagc.NotesTextViewPr, _gcff)
	}
	if _fbagc.SorterViewPr != nil {
		_ccabd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u006f\u0072\u0074\u0065\u0072\u0056i\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_fbagc.SorterViewPr, _ccabd)
	}
	if _fbagc.NotesViewPr != nil {
		_ddgg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u006e\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_fbagc.NotesViewPr, _ddgg)
	}
	if _fbagc.GridSpacing != nil {
		_faaagb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0067\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}}
		e.EncodeElement(_fbagc.GridSpacing, _faaagb)
	}
	if _fbagc.ExtLst != nil {
		_afdfa := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fbagc.ExtLst, _afdfa)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gfccf *ST_TLTimeNodeRestartType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_afcfd, _bfef := d.Token()
	if _bfef != nil {
		return _bfef
	}
	if _deggge, _dbaggd := _afcfd.(_g.EndElement); _dbaggd && _deggge.Name == start.Name {
		*_gfccf = 1
		return nil
	}
	if _cfdfa, _dbdcd := _afcfd.(_g.CharData); !_dbdcd {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _afcfd)
	} else {
		switch string(_cfdfa) {
		case "":
			*_gfccf = 0
		case "\u0061\u006c\u0077\u0061\u0079\u0073":
			*_gfccf = 1
		case "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065":
			*_gfccf = 2
		case "\u006e\u0065\u0076e\u0072":
			*_gfccf = 3
		}
	}
	_afcfd, _bfef = d.Token()
	if _bfef != nil {
		return _bfef
	}
	if _dgaag, _gbeac := _afcfd.(_g.EndElement); _gbeac && _dgaag.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _afcfd)
}

func (_ee *CT_Comment) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _ee.AuthorIdAttr)})
	if _ee.DtAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0074"}, Value: _ce.Sprintf("\u0025\u0076", *_ee.DtAttr)})
	}
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064\u0078"}, Value: _ce.Sprintf("\u0025\u0076", _ee.IdxAttr)})
	e.EncodeToken(start)
	_fbg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0070o\u0073"}}
	e.EncodeElement(_ee.Pos, _fbg)
	_bcc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074\u0065\u0078\u0074"}}
	_eb.AddPreserveSpaceAttr(&_bcc, _ee.Text)
	e.EncodeElement(_ee.Text, _bcc)
	if _ee.ExtLst != nil {
		_gae := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ee.ExtLst, _gae)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_TLIterateIntervalPercentage struct {

	// Value
	ValAttr _f.ST_PositivePercentage
}

// ValidateWithPath validates the CT_NormalViewProperties and its children, prefixing error messages with path
func (_efge *CT_NormalViewProperties) ValidateWithPath(path string) error {
	if _bccdf := _efge.VertBarStateAttr.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0042\u0061\u0072\u0053\u0074\u0061\u0074e\u0041\u0074\u0074\u0072"); _bccdf != nil {
		return _bccdf
	}
	if _dadee := _efge.HorzBarStateAttr.ValidateWithPath(path + "\u002f\u0048\u006f\u0072\u007a\u0042\u0061\u0072\u0053\u0074\u0061\u0074e\u0041\u0074\u0074\u0072"); _dadee != nil {
		return _dadee
	}
	if _ffac := _efge.RestoredLeft.ValidateWithPath(path + "\u002f\u0052\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u004c\u0065\u0066\u0074"); _ffac != nil {
		return _ffac
	}
	if _gdag := _efge.RestoredTop.ValidateWithPath(path + "\u002f\u0052\u0065s\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"); _gdag != nil {
		return _gdag
	}
	if _efge.ExtLst != nil {
		if _gafg := _efge.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gafg != nil {
			return _gafg
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ShowType and its children, prefixing error messages with path
func (_deacag *EG_ShowType) ValidateWithPath(path string) error {
	if _deacag.Present != nil {
		if _deab := _deacag.Present.ValidateWithPath(path + "\u002f\u0050\u0072\u0065\u0073\u0065\u006e\u0074"); _deab != nil {
			return _deab
		}
	}
	if _deacag.Browse != nil {
		if _abeff := _deacag.Browse.ValidateWithPath(path + "\u002fB\u0072\u006f\u0077\u0073\u0065"); _abeff != nil {
			return _abeff
		}
	}
	if _deacag.Kiosk != nil {
		if _afefc := _deacag.Kiosk.ValidateWithPath(path + "\u002f\u004b\u0069\u006f\u0073\u006b"); _afefc != nil {
			return _afefc
		}
	}
	return nil
}

// Validate validates the CT_WheelTransition and its children
func (_gfbcd *CT_WheelTransition) Validate() error {
	return _gfbcd.ValidateWithPath("\u0043T\u005fW\u0068\u0065\u0065\u006c\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}

func (_gfdcg ST_ViewType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_dadgaa := _g.Attr{}
	_dadgaa.Name = name
	switch _gfdcg {
	case ST_ViewTypeUnset:
		_dadgaa.Value = ""
	case ST_ViewTypeSldView:
		_dadgaa.Value = "\u0073l\u0064\u0056\u0069\u0065\u0077"
	case ST_ViewTypeSldMasterView:
		_dadgaa.Value = "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case ST_ViewTypeNotesView:
		_dadgaa.Value = "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w"
	case ST_ViewTypeHandoutView:
		_dadgaa.Value = "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077"
	case ST_ViewTypeNotesMasterView:
		_dadgaa.Value = "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case ST_ViewTypeOutlineView:
		_dadgaa.Value = "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077"
	case ST_ViewTypeSldSorterView:
		_dadgaa.Value = "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case ST_ViewTypeSldThumbnailView:
		_dadgaa.Value = "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077"
	}
	return _dadgaa, nil
}

func (_aeafd ST_TLTimeNodeMasterRelation) ValidateWithPath(path string) error {
	switch _aeafd {
	case 0, 1, 2, 3:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aeafd))
	}
	return nil
}

// Validate validates the ViewPr and its children
func (_ebag *ViewPr) Validate() error {
	return _ebag.ValidateWithPath("\u0056\u0069\u0065\u0077\u0050\u0072")
}

// Validate validates the CT_SlideTransition and its children
func (_baffb *CT_SlideTransition) Validate() error {
	return _baffb.ValidateWithPath("\u0043T\u005fS\u006c\u0069\u0064\u0065\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_ExtensionList and its children, prefixing error messages with path
func (_effb *CT_ExtensionList) ValidateWithPath(path string) error {
	for _gefe, _bfbc := range _effb.Ext {
		if _aadf := _bfbc.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _gefe)); _aadf != nil {
			return _aadf
		}
	}
	return nil
}

func (_edaf ST_TransitionEightDirectionType) String() string {
	if _edaf.ST_TransitionSideDirectionType != ST_TransitionSideDirectionTypeUnset {
		return _edaf.ST_TransitionSideDirectionType.String()
	}
	if _edaf.ST_TransitionCornerDirectionType != ST_TransitionCornerDirectionTypeUnset {
		return _edaf.ST_TransitionCornerDirectionType.String()
	}
	return ""
}

func (_adcge *ST_PhotoAlbumFrameShape) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_adcge = 0
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031":
		*_adcge = 1
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032":
		*_adcge = 2
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033":
		*_adcge = 3
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034":
		*_adcge = 4
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035":
		*_adcge = 5
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036":
		*_adcge = 6
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037":
		*_adcge = 7
	}
	return nil
}

const (
	ST_TLTriggerRuntimeNodeUnset ST_TLTriggerRuntimeNode = 0
	ST_TLTriggerRuntimeNodeFirst ST_TLTriggerRuntimeNode = 1
	ST_TLTriggerRuntimeNodeLast  ST_TLTriggerRuntimeNode = 2
	ST_TLTriggerRuntimeNodeAll   ST_TLTriggerRuntimeNode = 3
)

func NewCT_SlideLayoutIdListEntry() *CT_SlideLayoutIdListEntry {
	_fdbga := &CT_SlideLayoutIdListEntry{}
	return _fdbga
}

func (_feace ST_PhotoAlbumFrameShape) Validate() error { return _feace.ValidateWithPath("") }

func (_agdff *ST_TransitionEightDirectionType) Validate() error { return _agdff.ValidateWithPath("") }

func (_gged *CT_PrintProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gbcb := range start.Attr {
		if _gbcb.Name.Local == "\u0070r\u006e\u0057\u0068\u0061\u0074" {
			_gged.PrnWhatAttr.UnmarshalXMLAttr(_gbcb)
			continue
		}
		if _gbcb.Name.Local == "\u0063l\u0072\u004d\u006f\u0064\u0065" {
			_gged.ClrModeAttr.UnmarshalXMLAttr(_gbcb)
			continue
		}
		if _gbcb.Name.Local == "\u0068\u0069\u0064d\u0065\u006e\u0053\u006c\u0069\u0064\u0065\u0073" {
			_cfbfc, _gebf := _d.ParseBool(_gbcb.Value)
			if _gebf != nil {
				return _gebf
			}
			_gged.HiddenSlidesAttr = &_cfbfc
			continue
		}
		if _gbcb.Name.Local == "\u0073c\u0061l\u0065\u0054\u006f\u0046\u0069\u0074\u0050\u0061\u0070\u0065\u0072" {
			_bcf, _aaag := _d.ParseBool(_gbcb.Value)
			if _aaag != nil {
				return _aaag
			}
			_gged.ScaleToFitPaperAttr = &_bcf
			continue
		}
		if _gbcb.Name.Local == "f\u0072\u0061\u006d\u0065\u0053\u006c\u0069\u0064\u0065\u0073" {
			_efgef, _ddec := _d.ParseBool(_gbcb.Value)
			if _ddec != nil {
				return _ddec
			}
			_gged.FrameSlidesAttr = &_efgef
			continue
		}
	}
_ggeba:
	for {
		_dfcdb, _bbfc := d.Token()
		if _bbfc != nil {
			return _bbfc
		}
		switch _eedgg := _dfcdb.(type) {
		case _g.StartElement:
			switch _eedgg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gged.ExtLst = NewCT_ExtensionList()
				if _efaff := d.DecodeElement(_gged.ExtLst, &_eedgg); _efaff != nil {
					return _efaff
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0069\u006e\u0074\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _eedgg.Name)
				if _cddfc := d.Skip(); _cddfc != nil {
					return _cddfc
				}
			}
		case _g.EndElement:
			break _ggeba
		case _g.CharData:
		}
	}
	return nil
}

func (_abbab *CT_SplitTransition) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _abbab.OrientAttr != ST_DirectionUnset {
		_geac, _cabfc := _abbab.OrientAttr.MarshalXMLAttr(_g.Name{Local: "\u006f\u0072\u0069\u0065\u006e\u0074"})
		if _cabfc != nil {
			return _cabfc
		}
		start.Attr = append(start.Attr, _geac)
	}
	if _abbab.DirAttr != ST_TransitionInOutDirectionTypeUnset {
		_dfdaa, _aacff := _abbab.DirAttr.MarshalXMLAttr(_g.Name{Local: "\u0064\u0069\u0072"})
		if _aacff != nil {
			return _aacff
		}
		start.Attr = append(start.Attr, _dfdaa)
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_Presentation struct {

	// Server Zoom
	ServerZoomAttr *_f.ST_Percentage

	// First Slide Number
	FirstSlideNumAttr *int32

	// Show Header and Footer Placeholders on Titles
	ShowSpecialPlsOnTitleSldAttr *bool

	// Right-To-Left Views
	RtlAttr *bool

	// Remove Personal Information on Save
	RemovePersonalInfoOnSaveAttr *bool

	// Compatibility Mode
	CompatModeAttr *bool

	// Strict First and Last Characters
	StrictFirstAndLastCharsAttr *bool

	// Embed True Type Fonts
	EmbedTrueTypeFontsAttr *bool

	// Save Subset Fonts
	SaveSubsetFontsAttr *bool

	// Automatically Compress Pictures
	AutoCompressPicturesAttr *bool

	// Bookmark ID Seed
	BookmarkIdSeedAttr *uint32

	// Document Conformance Class
	ConformanceAttr _fg.ST_ConformanceClass

	// List of Slide Master IDs
	SldMasterIdLst *CT_SlideMasterIdList

	// List of Notes Master IDs
	NotesMasterIdLst *CT_NotesMasterIdList

	// List of Handout Master IDs
	HandoutMasterIdLst *CT_HandoutMasterIdList

	// List of Slide IDs
	SldIdLst *CT_SlideIdList

	// Presentation Slide Size
	SldSz *CT_SlideSize

	// Notes Slide Size
	NotesSz *_f.CT_PositiveSize2D

	// Smart Tags
	SmartTags *CT_SmartTags

	// Embedded Font List
	EmbeddedFontLst *CT_EmbeddedFontList

	// List of Custom Shows
	CustShowLst *CT_CustomShowList

	// Photo Album Information
	PhotoAlbum *CT_PhotoAlbum

	// List of Customer Data Buckets
	CustDataLst *CT_CustomerDataList

	// Kinsoku Settings
	Kinsoku *CT_Kinsoku

	// Presentation Default Text Style
	DefaultTextStyle *_f.CT_TextListStyle

	// Modification Verifier
	ModifyVerifier *CT_ModifyVerifier

	// Extension List
	ExtLst *CT_ExtensionList
}

func (_fgca *CT_TLIterateIntervalPercentage) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _ce.Sprintf("\u0025\u0076", _fgca.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_TLPoint struct {

	// X coordinate
	XAttr _f.ST_Percentage

	// Y coordinate
	YAttr _f.ST_Percentage
}

type CT_TLTimeAnimateValueList struct {

	// Time Animate Value
	Tav []*CT_TLTimeAnimateValue
}

type CT_NotesMasterIdListEntry struct {
	IdAttr string
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_OleObjectEmbed and its children
func (_acacb *CT_OleObjectEmbed) Validate() error {
	return _acacb.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074E\u006d\u0062\u0065\u0064")
}

// Validate validates the CT_TimeNodeList and its children
func (_cdfg *CT_TimeNodeList) Validate() error {
	return _cdfg.ValidateWithPath("\u0043T\u005fT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074")
}

func (_feeff ST_TransitionSideDirectionType) Validate() error { return _feeff.ValidateWithPath("") }

type CT_EightDirectionTransition struct {

	// Direction
	DirAttr *ST_TransitionEightDirectionType
}

func NewCT_HtmlPublishProperties() *CT_HtmlPublishProperties {
	_bcg := &CT_HtmlPublishProperties{}
	return _bcg
}

func (_becfg ST_TLTimeNodePresetClassType) Validate() error { return _becfg.ValidateWithPath("") }

type EG_SlideListChoice struct {

	// All Slides
	SldAll *CT_Empty

	// Slide Range
	SldRg *CT_IndexRange

	// Custom Show
	CustShow *CT_CustomShowId
}

func NewCT_OrientationTransition() *CT_OrientationTransition {
	_eada := &CT_OrientationTransition{}
	return _eada
}

func (_dfcd *CT_OleObjectEmbed) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dfcd.FollowColorSchemeAttr != ST_OleObjectFollowColorSchemeUnset {
		_dgbg, _efcac := _dfcd.FollowColorSchemeAttr.MarshalXMLAttr(_g.Name{Local: "\u0066\u006f\u006c\u006c\u006f\u0077\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065"})
		if _efcac != nil {
			return _efcac
		}
		start.Attr = append(start.Attr, _dgbg)
	}
	e.EncodeToken(start)
	if _dfcd.ExtLst != nil {
		_dgfc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dfcd.ExtLst, _dgfc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_aaaad *CT_TLTimeTargetElement) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _aaaad.SldTgt != nil {
		_cgcdc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0054\u0067\u0074"}}
		e.EncodeElement(_aaaad.SldTgt, _cgcdc)
	}
	if _aaaad.SndTgt != nil {
		_gfbc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u006e\u0064\u0054\u0067\u0074"}}
		e.EncodeElement(_aaaad.SndTgt, _gfbc)
	}
	if _aaaad.SpTgt != nil {
		_bbee := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0073\u0070\u0054\u0067\u0074"}}
		e.EncodeElement(_aaaad.SpTgt, _bbee)
	}
	if _aaaad.InkTgt != nil {
		_cdcaa := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0069\u006e\u006b\u0054\u0067\u0074"}}
		e.EncodeElement(_aaaad.InkTgt, _cdcaa)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_OleObjectChoice struct {
	Embed *CT_OleObjectEmbed
	Link  *CT_OleObjectLink
}

// ValidateWithPath validates the CT_TLMediaNodeVideo and its children, prefixing error messages with path
func (_bdbfa *CT_TLMediaNodeVideo) ValidateWithPath(path string) error {
	if _fddfc := _bdbfa.CMediaNode.ValidateWithPath(path + "/\u0043\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"); _fddfc != nil {
		return _fddfc
	}
	return nil
}

const (
	ST_TLBehaviorAdditiveTypeUnset ST_TLBehaviorAdditiveType = 0
	ST_TLBehaviorAdditiveTypeBase  ST_TLBehaviorAdditiveType = 1
	ST_TLBehaviorAdditiveTypeSum   ST_TLBehaviorAdditiveType = 2
	ST_TLBehaviorAdditiveTypeRepl  ST_TLBehaviorAdditiveType = 3
	ST_TLBehaviorAdditiveTypeMult  ST_TLBehaviorAdditiveType = 4
	ST_TLBehaviorAdditiveTypeNone  ST_TLBehaviorAdditiveType = 5
)

func (_cabf *CT_ShowProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cabf.LoopAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u006f\u006f\u0070"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cabf.LoopAttr))})
	}
	if _cabf.ShowNarrationAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068\u006f\u0077\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cabf.ShowNarrationAttr))})
	}
	if _cabf.ShowAnimationAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cabf.ShowAnimationAttr))})
	}
	if _cabf.UseTimingsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075\u0073\u0065\u0054\u0069\u006d\u0069\u006e\u0067\u0073"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cabf.UseTimingsAttr))})
	}
	e.EncodeToken(start)
	if _cabf.Present != nil {
		_dfff := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0070\u0072\u0065\u0073\u0065\u006et"}}
		e.EncodeElement(_cabf.Present, _dfff)
	}
	if _cabf.Browse != nil {
		_gebfb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u0072\u006f\u0077\u0073\u0065"}}
		e.EncodeElement(_cabf.Browse, _gebfb)
	}
	if _cabf.Kiosk != nil {
		_cgaf := _g.StartElement{Name: _g.Name{Local: "\u0070:\u006b\u0069\u006f\u0073\u006b"}}
		e.EncodeElement(_cabf.Kiosk, _cgaf)
	}
	if _cabf.SldAll != nil {
		_aaed := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0041\u006c\u006c"}}
		e.EncodeElement(_cabf.SldAll, _aaed)
	}
	if _cabf.SldRg != nil {
		_fddc := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0073\u006c\u0064\u0052\u0067"}}
		e.EncodeElement(_cabf.SldRg, _fddc)
	}
	if _cabf.CustShow != nil {
		_dcae := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		e.EncodeElement(_cabf.CustShow, _dcae)
	}
	if _cabf.PenClr != nil {
		_cfdbd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0070\u0065\u006e\u0043\u006c\u0072"}}
		e.EncodeElement(_cabf.PenClr, _cfdbd)
	}
	if _cabf.ExtLst != nil {
		_fbge := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cabf.ExtLst, _fbge)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_Kinsoku() *CT_Kinsoku { _dfbe := &CT_Kinsoku{}; return _dfbe }

type CT_OrientationTransition struct {

	// Transition Direction
	DirAttr ST_Direction
}

func (_cbaae *CT_TLGraphicalObjectBuild) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _acdab := range start.Attr {
		if _acdab.Name.Local == "\u0073\u0070\u0069\u0064" {
			_fabdae, _aage := _d.ParseUint(_acdab.Value, 10, 32)
			if _aage != nil {
				return _aage
			}
			_aacce := uint32(_fabdae)
			_cbaae.SpidAttr = &_aacce
			continue
		}
		if _acdab.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_facd, _ddbdf := _d.ParseUint(_acdab.Value, 10, 32)
			if _ddbdf != nil {
				return _ddbdf
			}
			_eebage := uint32(_facd)
			_cbaae.GrpIdAttr = &_eebage
			continue
		}
		if _acdab.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_cdab, _ccga := _d.ParseBool(_acdab.Value)
			if _ccga != nil {
				return _ccga
			}
			_cbaae.UiExpandAttr = &_cdab
			continue
		}
	}
_efcg:
	for {
		_cegde, _aeddc := d.Token()
		if _aeddc != nil {
			return _aeddc
		}
		switch _ebcd := _cegde.(type) {
		case _g.StartElement:
			switch _ebcd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}:
				_cbaae.BldAsOne = NewCT_Empty()
				if _dbegc := d.DecodeElement(_cbaae.BldAsOne, &_ebcd); _dbegc != nil {
					return _dbegc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0053\u0075\u0062"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0053\u0075\u0062"}:
				_cbaae.BldSub = _f.NewCT_AnimationGraphicalObjectBuildProperties()
				if _acdfda := d.DecodeElement(_cbaae.BldSub, &_ebcd); _acdfda != nil {
					return _acdfda
				}
			default:
				_e.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0047\u0072\u0061\u0070\u0068\u0069c\u0061l\u004f\u0062\u006a\u0065\u0063\u0074\u0042\u0075i\u006cd\u0020\u0025v", _ebcd.Name)
				if _efbdg := d.Skip(); _efbdg != nil {
					return _efbdg
				}
			}
		case _g.EndElement:
			break _efcg
		case _g.CharData:
		}
	}
	return nil
}

func (_ggdga *ST_PrintWhat) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_ggdga = 0
	case "\u0073\u006c\u0069\u0064\u0065\u0073":
		*_ggdga = 1
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731":
		*_ggdga = 2
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732":
		*_ggdga = 3
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733":
		*_ggdga = 4
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734":
		*_ggdga = 5
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736":
		*_ggdga = 6
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739":
		*_ggdga = 7
	case "\u006e\u006f\u0074e\u0073":
		*_ggdga = 8
	case "\u006fu\u0074\u006c\u0069\u006e\u0065":
		*_ggdga = 9
	}
	return nil
}

const (
	ST_SlideLayoutTypeUnset                   ST_SlideLayoutType = 0
	ST_SlideLayoutTypeTitle                   ST_SlideLayoutType = 1
	ST_SlideLayoutTypeTx                      ST_SlideLayoutType = 2
	ST_SlideLayoutTypeTwoColTx                ST_SlideLayoutType = 3
	ST_SlideLayoutTypeTbl                     ST_SlideLayoutType = 4
	ST_SlideLayoutTypeTxAndChart              ST_SlideLayoutType = 5
	ST_SlideLayoutTypeChartAndTx              ST_SlideLayoutType = 6
	ST_SlideLayoutTypeDgm                     ST_SlideLayoutType = 7
	ST_SlideLayoutTypeChart                   ST_SlideLayoutType = 8
	ST_SlideLayoutTypeTxAndClipArt            ST_SlideLayoutType = 9
	ST_SlideLayoutTypeClipArtAndTx            ST_SlideLayoutType = 10
	ST_SlideLayoutTypeTitleOnly               ST_SlideLayoutType = 11
	ST_SlideLayoutTypeBlank                   ST_SlideLayoutType = 12
	ST_SlideLayoutTypeTxAndObj                ST_SlideLayoutType = 13
	ST_SlideLayoutTypeObjAndTx                ST_SlideLayoutType = 14
	ST_SlideLayoutTypeObjOnly                 ST_SlideLayoutType = 15
	ST_SlideLayoutTypeObj                     ST_SlideLayoutType = 16
	ST_SlideLayoutTypeTxAndMedia              ST_SlideLayoutType = 17
	ST_SlideLayoutTypeMediaAndTx              ST_SlideLayoutType = 18
	ST_SlideLayoutTypeObjOverTx               ST_SlideLayoutType = 19
	ST_SlideLayoutTypeTxOverObj               ST_SlideLayoutType = 20
	ST_SlideLayoutTypeTxAndTwoObj             ST_SlideLayoutType = 21
	ST_SlideLayoutTypeTwoObjAndTx             ST_SlideLayoutType = 22
	ST_SlideLayoutTypeTwoObjOverTx            ST_SlideLayoutType = 23
	ST_SlideLayoutTypeFourObj                 ST_SlideLayoutType = 24
	ST_SlideLayoutTypeVertTx                  ST_SlideLayoutType = 25
	ST_SlideLayoutTypeClipArtAndVertTx        ST_SlideLayoutType = 26
	ST_SlideLayoutTypeVertTitleAndTx          ST_SlideLayoutType = 27
	ST_SlideLayoutTypeVertTitleAndTxOverChart ST_SlideLayoutType = 28
	ST_SlideLayoutTypeTwoObj                  ST_SlideLayoutType = 29
	ST_SlideLayoutTypeObjAndTwoObj            ST_SlideLayoutType = 30
	ST_SlideLayoutTypeTwoObjAndObj            ST_SlideLayoutType = 31
	ST_SlideLayoutTypeCust                    ST_SlideLayoutType = 32
	ST_SlideLayoutTypeSecHead                 ST_SlideLayoutType = 33
	ST_SlideLayoutTypeTwoTxTwoObj             ST_SlideLayoutType = 34
	ST_SlideLayoutTypeObjTx                   ST_SlideLayoutType = 35
	ST_SlideLayoutTypePicTx                   ST_SlideLayoutType = 36
)

func (_egde *SldLayout) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_egde.CT_SlideLayout = *NewCT_SlideLayout()
	for _, _cdfdb := range start.Attr {
		if _cdfdb.Name.Local == "\u006d\u0061\u0074c\u0068\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_gebfe, _dceeb := _cdfdb.Value, error(nil)
			if _dceeb != nil {
				return _dceeb
			}
			_egde.MatchingNameAttr = &_gebfe
			continue
		}
		if _cdfdb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_egde.TypeAttr.UnmarshalXMLAttr(_cdfdb)
			continue
		}
		if _cdfdb.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_edefd, _aebffa := _d.ParseBool(_cdfdb.Value)
			if _aebffa != nil {
				return _aebffa
			}
			_egde.PreserveAttr = &_edefd
			continue
		}
		if _cdfdb.Name.Local == "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n" {
			_bafdc, _gcda := _d.ParseBool(_cdfdb.Value)
			if _gcda != nil {
				return _gcda
			}
			_egde.UserDrawnAttr = &_bafdc
			continue
		}
		if _cdfdb.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_eebea, _aeccf := _d.ParseBool(_cdfdb.Value)
			if _aeccf != nil {
				return _aeccf
			}
			_egde.ShowMasterSpAttr = &_eebea
			continue
		}
		if _cdfdb.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_cdbff, _afdag := _d.ParseBool(_cdfdb.Value)
			if _afdag != nil {
				return _afdag
			}
			_egde.ShowMasterPhAnimAttr = &_cdbff
			continue
		}
	}
_adeeb:
	for {
		_bcagg, _fabcb := d.Token()
		if _fabcb != nil {
			return _fabcb
		}
		switch _ccabf := _bcagg.(type) {
		case _g.StartElement:
			switch _ccabf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _aegag := d.DecodeElement(_egde.CSld, &_ccabf); _aegag != nil {
					return _aegag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_egde.ClrMapOvr = _f.NewCT_ColorMappingOverride()
				if _eecffb := d.DecodeElement(_egde.ClrMapOvr, &_ccabf); _eecffb != nil {
					return _eecffb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_egde.Transition = NewCT_SlideTransition()
				if _aebee := d.DecodeElement(_egde.Transition, &_ccabf); _aebee != nil {
					return _aebee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_egde.Timing = NewCT_SlideTiming()
				if _gdfbg := d.DecodeElement(_egde.Timing, &_ccabf); _gdfbg != nil {
					return _gdfbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_egde.Hf = NewCT_HeaderFooter()
				if _eggbf := d.DecodeElement(_egde.Hf, &_ccabf); _eggbf != nil {
					return _eggbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_egde.ExtLst = NewCT_ExtensionListModify()
				if _ebbee := d.DecodeElement(_egde.ExtLst, &_ccabf); _ebbee != nil {
					return _ebbee
				}
			default:
				_e.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0053\u006c\u0064\u004c\u0061\u0079o\u0075\u0074 \u0025\u0076", _ccabf.Name)
				if _edeeg := d.Skip(); _edeeg != nil {
					return _edeeg
				}
			}
		case _g.EndElement:
			break _adeeb
		case _g.CharData:
		}
	}
	return nil
}

func (_agbeb *ST_TLCommandType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gcdgf, _ffabd := d.Token()
	if _ffabd != nil {
		return _ffabd
	}
	if _gaff, _bfcgc := _gcdgf.(_g.EndElement); _bfcgc && _gaff.Name == start.Name {
		*_agbeb = 1
		return nil
	}
	if _bcacg, _bcada := _gcdgf.(_g.CharData); !_bcada {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcdgf)
	} else {
		switch string(_bcacg) {
		case "":
			*_agbeb = 0
		case "\u0065\u0076\u0074":
			*_agbeb = 1
		case "\u0063\u0061\u006c\u006c":
			*_agbeb = 2
		case "\u0076\u0065\u0072\u0062":
			*_agbeb = 3
		}
	}
	_gcdgf, _ffabd = d.Token()
	if _ffabd != nil {
		return _ffabd
	}
	if _dfdgf, _dffda := _gcdgf.(_g.EndElement); _dffda && _dfdgf.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcdgf)
}

func (_bbgg *CT_Empty) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for {
		_dgeg, _cgc := d.Token()
		if _cgc != nil {
			return _ce.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073", _cgc)
		}
		if _dag, _bfe := _dgeg.(_g.EndElement); _bfe && _dag.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_SlideMaster() *CT_SlideMaster {
	_bbaf := &CT_SlideMaster{}
	_bbaf.CSld = NewCT_CommonSlideData()
	_bbaf.ClrMap = _f.NewCT_ColorMapping()
	return _bbaf
}

type CT_GraphicalObjectFrame struct {
	BwModeAttr _f.ST_BlackWhiteMode

	// Non-Visual Properties for a Graphic Frame
	NvGraphicFramePr *CT_GraphicalObjectFrameNonVisual

	// 2D Transform for Graphic Frame
	Xfrm    *_f.CT_Transform2D
	Graphic *_f.Graphic

	// Extension List with Modification Flag
	ExtLst *CT_ExtensionListModify
}

// ValidateWithPath validates the CT_ShowProperties and its children, prefixing error messages with path
func (_fage *CT_ShowProperties) ValidateWithPath(path string) error {
	if _fage.Present != nil {
		if _dccc := _fage.Present.ValidateWithPath(path + "\u002f\u0050\u0072\u0065\u0073\u0065\u006e\u0074"); _dccc != nil {
			return _dccc
		}
	}
	if _fage.Browse != nil {
		if _gafag := _fage.Browse.ValidateWithPath(path + "\u002fB\u0072\u006f\u0077\u0073\u0065"); _gafag != nil {
			return _gafag
		}
	}
	if _fage.Kiosk != nil {
		if _abad := _fage.Kiosk.ValidateWithPath(path + "\u002f\u004b\u0069\u006f\u0073\u006b"); _abad != nil {
			return _abad
		}
	}
	if _fage.SldAll != nil {
		if _dgcf := _fage.SldAll.ValidateWithPath(path + "\u002fS\u006c\u0064\u0041\u006c\u006c"); _dgcf != nil {
			return _dgcf
		}
	}
	if _fage.SldRg != nil {
		if _ebed := _fage.SldRg.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0052\u0067"); _ebed != nil {
			return _ebed
		}
	}
	if _fage.CustShow != nil {
		if _gfadf := _fage.CustShow.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0053\u0068\u006fw"); _gfadf != nil {
			return _gfadf
		}
	}
	if _fage.PenClr != nil {
		if _aacd := _fage.PenClr.ValidateWithPath(path + "\u002fP\u0065\u006e\u0043\u006c\u0072"); _aacd != nil {
			return _aacd
		}
	}
	if _fage.ExtLst != nil {
		if _bbgfe := _fage.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bbgfe != nil {
			return _bbgfe
		}
	}
	return nil
}

func (_baadc *CT_StringTag) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ce.Sprintf("\u0025\u0076", _baadc.NameAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _ce.Sprintf("\u0025\u0076", _baadc.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gddcb *CT_TransitionStartSoundAction) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gddcb.Snd = _f.NewCT_EmbeddedWAVAudioFile()
	for _, _dgaecc := range start.Attr {
		if _dgaecc.Name.Local == "\u006c\u006f\u006f\u0070" {
			_edbca, _ddfgb := _d.ParseBool(_dgaecc.Value)
			if _ddfgb != nil {
				return _ddfgb
			}
			_gddcb.LoopAttr = &_edbca
			continue
		}
	}
_dcbg:
	for {
		_dcdc, _dgbge := d.Token()
		if _dgbge != nil {
			return _dgbge
		}
		switch _baeag := _dcdc.(type) {
		case _g.StartElement:
			switch _baeag.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064"}:
				if _eabbdg := d.DecodeElement(_gddcb.Snd, &_baeag); _eabbdg != nil {
					return _eabbdg
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u0074a\u0072\u0074\u0053\u006f\u0075\u006ed\u0041\u0063t\u0069\u006fn\u0020%\u0076", _baeag.Name)
				if _bbab := d.Skip(); _bbab != nil {
					return _bbab
				}
			}
		case _g.EndElement:
			break _dcbg
		case _g.CharData:
		}
	}
	return nil
}

func (_gfcg *CT_TLIterateData) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gfcg.TypeAttr != ST_IterateTypeUnset {
		_cecb, _egfee := _gfcg.TypeAttr.MarshalXMLAttr(_g.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _egfee != nil {
			return _egfee
		}
		start.Attr = append(start.Attr, _cecb)
	}
	if _gfcg.BackwardsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062a\u0063\u006b\u0077\u0061\u0072\u0064s"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_gfcg.BackwardsAttr))})
	}
	e.EncodeToken(start)
	if _gfcg.TmAbs != nil {
		_gegef := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0074\u006d\u0041\u0062\u0073"}}
		e.EncodeElement(_gfcg.TmAbs, _gegef)
	}
	if _gfcg.TmPct != nil {
		_caade := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0074\u006d\u0050\u0063\u0074"}}
		e.EncodeElement(_gfcg.TmPct, _caade)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bbead *ST_TLTriggerEvent) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gdega, _dgdbe := d.Token()
	if _dgdbe != nil {
		return _dgdbe
	}
	if _ggebag, _gfdf := _gdega.(_g.EndElement); _gfdf && _ggebag.Name == start.Name {
		*_bbead = 1
		return nil
	}
	if _aabdad, _ggafg := _gdega.(_g.CharData); !_ggafg {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gdega)
	} else {
		switch string(_aabdad) {
		case "":
			*_bbead = 0
		case "\u006fn\u0042\u0065\u0067\u0069\u006e":
			*_bbead = 1
		case "\u006f\u006e\u0045n\u0064":
			*_bbead = 2
		case "\u0062\u0065\u0067i\u006e":
			*_bbead = 3
		case "\u0065\u006e\u0064":
			*_bbead = 4
		case "\u006fn\u0043\u006c\u0069\u0063\u006b":
			*_bbead = 5
		case "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b":
			*_bbead = 6
		case "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072":
			*_bbead = 7
		case "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074":
			*_bbead = 8
		case "\u006f\u006e\u004e\u0065\u0078\u0074":
			*_bbead = 9
		case "\u006f\u006e\u0050\u0072\u0065\u0076":
			*_bbead = 10
		case "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f":
			*_bbead = 11
		}
	}
	_gdega, _dgdbe = d.Token()
	if _dgdbe != nil {
		return _dgdbe
	}
	if _bbcbd, _fceae := _gdega.(_g.EndElement); _fceae && _bbcbd.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gdega)
}

const (
	ST_TLDiagramBuildTypeUnset         ST_TLDiagramBuildType = 0
	ST_TLDiagramBuildTypeWhole         ST_TLDiagramBuildType = 1
	ST_TLDiagramBuildTypeDepthByNode   ST_TLDiagramBuildType = 2
	ST_TLDiagramBuildTypeDepthByBranch ST_TLDiagramBuildType = 3
	ST_TLDiagramBuildTypeBreadthByNode ST_TLDiagramBuildType = 4
	ST_TLDiagramBuildTypeBreadthByLvl  ST_TLDiagramBuildType = 5
	ST_TLDiagramBuildTypeCw            ST_TLDiagramBuildType = 6
	ST_TLDiagramBuildTypeCwIn          ST_TLDiagramBuildType = 7
	ST_TLDiagramBuildTypeCwOut         ST_TLDiagramBuildType = 8
	ST_TLDiagramBuildTypeCcw           ST_TLDiagramBuildType = 9
	ST_TLDiagramBuildTypeCcwIn         ST_TLDiagramBuildType = 10
	ST_TLDiagramBuildTypeCcwOut        ST_TLDiagramBuildType = 11
	ST_TLDiagramBuildTypeInByRing      ST_TLDiagramBuildType = 12
	ST_TLDiagramBuildTypeOutByRing     ST_TLDiagramBuildType = 13
	ST_TLDiagramBuildTypeUp            ST_TLDiagramBuildType = 14
	ST_TLDiagramBuildTypeDown          ST_TLDiagramBuildType = 15
	ST_TLDiagramBuildTypeAllAtOnce     ST_TLDiagramBuildType = 16
	ST_TLDiagramBuildTypeCust          ST_TLDiagramBuildType = 17
)

// ValidateWithPath validates the CT_TLAnimateRotationBehavior and its children, prefixing error messages with path
func (_bage *CT_TLAnimateRotationBehavior) ValidateWithPath(path string) error {
	if _dcdb := _bage.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _dcdb != nil {
		return _dcdb
	}
	return nil
}

// Validate validates the CT_SlideTiming and its children
func (_ffceg *CT_SlideTiming) Validate() error {
	return _ffceg.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054i\u006d\u0069\u006e\u0067")
}

type CT_SlideSorterViewProperties struct {

	// Show Formatting
	ShowFormattingAttr *bool

	// Base properties for Slide Sorter View
	CViewPr *CT_CommonViewProperties
	ExtLst  *CT_ExtensionList
}

type CT_TLTimeNodeParallel struct {

	// Parallel TimeNode
	CTn *CT_TLCommonTimeNodeData
}

func (_gfefab *CT_TransitionStartSoundAction) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gfefab.LoopAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u006f\u006f\u0070"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_gfefab.LoopAttr))})
	}
	e.EncodeToken(start)
	_cgfd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073n\u0064"}}
	e.EncodeElement(_gfefab.Snd, _cgfd)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dfcfd *CT_OutlineViewSlideEntry) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _aabb := range start.Attr {
		if _aabb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _aabb.Name.Local == "\u0069\u0064" || _aabb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _aabb.Name.Local == "\u0069\u0064" {
			_daad, _bdgd := _aabb.Value, error(nil)
			if _bdgd != nil {
				return _bdgd
			}
			_dfcfd.IdAttr = _daad
			continue
		}
		if _aabb.Name.Local == "\u0063\u006f\u006c\u006c\u0061\u0070\u0073\u0065" {
			_baecf, _cbge := _d.ParseBool(_aabb.Value)
			if _cbge != nil {
				return _cbge
			}
			_dfcfd.CollapseAttr = &_baecf
			continue
		}
	}
	for {
		_aebd, _fabe := d.Token()
		if _fabe != nil {
			return _ce.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u004futl\u0069ne\u0056\u0069\u0065\u0077\u0053\u006c\u0069de\u0045\u006e\u0074\u0072\u0079\u003a\u0020%\u0073", _fabe)
		}
		if _defgd, _cefd := _aebd.(_g.EndElement); _cefd && _defgd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fdgd *CT_Extension) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fgcg := range start.Attr {
		if _fgcg.Name.Local == "\u0075\u0072\u0069" {
			_gfga, _dga := _fgcg.Value, error(nil)
			if _dga != nil {
				return _dga
			}
			_fdgd.UriAttr = _gfga
			continue
		}
	}
_gegb:
	for {
		_bbed, _cege := d.Token()
		if _cege != nil {
			return _cege
		}
		switch _baec := _bbed.(type) {
		case _g.StartElement:
			switch _baec.Name {
			default:
				if _abgb, _gegd := _eb.CreateElement(_baec); _gegd != nil {
					return _gegd
				} else {
					if _bgcf := d.DecodeElement(_abgb, &_baec); _bgcf != nil {
						return _bgcf
					}
					_fdgd.Any = append(_fdgd.Any, _abgb)
				}
			}
		case _g.EndElement:
			break _gegb
		case _g.CharData:
		}
	}
	return nil
}

func (_dace *CT_SlideMasterIdListEntry) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dace.IdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_dace.IdAttr)})
	}
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _dace.RIdAttr)})
	e.EncodeToken(start)
	if _dace.ExtLst != nil {
		_agfgg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dace.ExtLst, _agfgg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_abdbg *CT_TLCommonTimeNodeData) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _abdbg.IdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_abdbg.IdAttr)})
	}
	if _abdbg.PresetIDAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0074\u0049\u0044"}, Value: _ce.Sprintf("\u0025\u0076", *_abdbg.PresetIDAttr)})
	}
	if _abdbg.PresetClassAttr != ST_TLTimeNodePresetClassTypeUnset {
		_fdacf, _eafgf := _abdbg.PresetClassAttr.MarshalXMLAttr(_g.Name{Local: "p\u0072\u0065\u0073\u0065\u0074\u0043\u006c\u0061\u0073\u0073"})
		if _eafgf != nil {
			return _eafgf
		}
		start.Attr = append(start.Attr, _fdacf)
	}
	if _abdbg.PresetSubtypeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0074\u0053\u0075\u0062\u0074\u0079\u0070\u0065"}, Value: _ce.Sprintf("\u0025\u0076", *_abdbg.PresetSubtypeAttr)})
	}
	if _abdbg.DurAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0075\u0072"}, Value: _ce.Sprintf("\u0025\u0076", *_abdbg.DurAttr)})
	}
	if _abdbg.RepeatCountAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "r\u0065\u0070\u0065\u0061\u0074\u0043\u006f\u0075\u006e\u0074"}, Value: _ce.Sprintf("\u0025\u0076", *_abdbg.RepeatCountAttr)})
	}
	if _abdbg.RepeatDurAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072e\u0070\u0065\u0061\u0074\u0044\u0075r"}, Value: _ce.Sprintf("\u0025\u0076", *_abdbg.RepeatDurAttr)})
	}
	if _abdbg.SpdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_abdbg.SpdAttr)})
	}
	if _abdbg.AccelAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u0063\u0063e\u006c"}, Value: _ce.Sprintf("\u0025\u0076", *_abdbg.AccelAttr)})
	}
	if _abdbg.DecelAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0065\u0063e\u006c"}, Value: _ce.Sprintf("\u0025\u0076", *_abdbg.DecelAttr)})
	}
	if _abdbg.AutoRevAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061u\u0074\u006f\u0052\u0065\u0076"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_abdbg.AutoRevAttr))})
	}
	if _abdbg.RestartAttr != ST_TLTimeNodeRestartTypeUnset {
		_decc, _eddba := _abdbg.RestartAttr.MarshalXMLAttr(_g.Name{Local: "\u0072e\u0073\u0074\u0061\u0072\u0074"})
		if _eddba != nil {
			return _eddba
		}
		start.Attr = append(start.Attr, _decc)
	}
	if _abdbg.FillAttr != ST_TLTimeNodeFillTypeUnset {
		_ecdd, _ccdc := _abdbg.FillAttr.MarshalXMLAttr(_g.Name{Local: "\u0066\u0069\u006c\u006c"})
		if _ccdc != nil {
			return _ccdc
		}
		start.Attr = append(start.Attr, _ecdd)
	}
	if _abdbg.SyncBehaviorAttr != ST_TLTimeNodeSyncTypeUnset {
		_eacd, _aagb := _abdbg.SyncBehaviorAttr.MarshalXMLAttr(_g.Name{Local: "\u0073\u0079\u006ec\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072"})
		if _aagb != nil {
			return _aagb
		}
		start.Attr = append(start.Attr, _eacd)
	}
	if _abdbg.TmFilterAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _ce.Sprintf("\u0025\u0076", *_abdbg.TmFilterAttr)})
	}
	if _abdbg.EvtFilterAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0065v\u0074\u0046\u0069\u006c\u0074\u0065r"}, Value: _ce.Sprintf("\u0025\u0076", *_abdbg.EvtFilterAttr)})
	}
	if _abdbg.DisplayAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064i\u0073\u0070\u006c\u0061\u0079"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_abdbg.DisplayAttr))})
	}
	if _abdbg.MasterRelAttr != ST_TLTimeNodeMasterRelationUnset {
		_dabd, _aecg := _abdbg.MasterRelAttr.MarshalXMLAttr(_g.Name{Local: "\u006da\u0073\u0074\u0065\u0072\u0052\u0065l"})
		if _aecg != nil {
			return _aecg
		}
		start.Attr = append(start.Attr, _dabd)
	}
	if _abdbg.BldLvlAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u006c\u0064\u004c\u0076\u006c"}, Value: _ce.Sprintf("\u0025\u0076", *_abdbg.BldLvlAttr)})
	}
	if _abdbg.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_abdbg.GrpIdAttr)})
	}
	if _abdbg.AfterEffectAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_abdbg.AfterEffectAttr))})
	}
	if _abdbg.NodeTypeAttr != ST_TLTimeNodeTypeUnset {
		_daagd, _aceae := _abdbg.NodeTypeAttr.MarshalXMLAttr(_g.Name{Local: "\u006e\u006f\u0064\u0065\u0054\u0079\u0070\u0065"})
		if _aceae != nil {
			return _aceae
		}
		start.Attr = append(start.Attr, _daagd)
	}
	if _abdbg.NodePhAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u006f\u0064\u0065\u0050\u0068"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_abdbg.NodePhAttr))})
	}
	e.EncodeToken(start)
	if _abdbg.StCondLst != nil {
		_dbgd := _g.StartElement{Name: _g.Name{Local: "p\u003a\u0073\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_abdbg.StCondLst, _dbgd)
	}
	if _abdbg.EndCondLst != nil {
		_bggfc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065n\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_abdbg.EndCondLst, _bggfc)
	}
	if _abdbg.EndSync != nil {
		_faegf := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0065\u006e\u0064\u0053\u0079\u006ec"}}
		e.EncodeElement(_abdbg.EndSync, _faegf)
	}
	if _abdbg.Iterate != nil {
		_fegfa := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0069\u0074\u0065\u0072\u0061\u0074e"}}
		e.EncodeElement(_abdbg.Iterate, _fegfa)
	}
	if _abdbg.ChildTnLst != nil {
		_abgded := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063h\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_abdbg.ChildTnLst, _abgded)
	}
	if _abdbg.SubTnLst != nil {
		_fgddb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u0075\u0062\u0054\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_abdbg.SubTnLst, _fgddb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CmAuthorLst and its children
func (_facfa *CmAuthorLst) Validate() error {
	return _facfa.ValidateWithPath("C\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074")
}

// Validate validates the HandoutMaster and its children
func (_bgafg *HandoutMaster) Validate() error {
	return _bgafg.ValidateWithPath("\u0048\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072")
}

type CT_TLTimeNodeSequence struct {

	// Concurrent
	ConcurrentAttr *bool

	// Previous Action
	PrevAcAttr ST_TLPreviousActionType

	// Next Action
	NextAcAttr ST_TLNextActionType

	// Common TimeNode Properties
	CTn *CT_TLCommonTimeNodeData

	// Previous Conditions List
	PrevCondLst *CT_TLTimeConditionList

	// Next Conditions List
	NextCondLst *CT_TLTimeConditionList
}

// ValidateWithPath validates the CT_ModifyVerifier and its children, prefixing error messages with path
func (_egbgg *CT_ModifyVerifier) ValidateWithPath(path string) error {
	if _fcdd := _egbgg.CryptProviderTypeAttr.ValidateWithPath(path + "\u002f\u0043\u0072\u0079pt\u0050\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u0054\u0079\u0070\u0065\u0041\u0074t\u0072"); _fcdd != nil {
		return _fcdd
	}
	if _eeff := _egbgg.CryptAlgorithmClassAttr.ValidateWithPath(path + "\u002fC\u0072\u0079\u0070\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074h\u006d\u0043\u006c\u0061\u0073\u0073\u0041\u0074\u0074\u0072"); _eeff != nil {
		return _eeff
	}
	if _egbbb := _egbgg.CryptAlgorithmTypeAttr.ValidateWithPath(path + "\u002f\u0043\u0072yp\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _egbbb != nil {
		return _egbbb
	}
	return nil
}

// ValidateWithPath validates the CT_Control and its children, prefixing error messages with path
func (_eadc *CT_Control) ValidateWithPath(path string) error {
	if _eadc.ExtLst != nil {
		if _dacb := _eadc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dacb != nil {
			return _dacb
		}
	}
	if _eadc.Pic != nil {
		if _bbge := _eadc.Pic.ValidateWithPath(path + "\u002f\u0050\u0069\u0063"); _bbge != nil {
			return _bbge
		}
	}
	if _eadc.ImgWAttr != nil {
		if *_eadc.ImgWAttr < 0 {
			return _ce.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0057\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_eadc.ImgWAttr)
		}
	}
	if _eadc.ImgHAttr != nil {
		if *_eadc.ImgHAttr < 0 {
			return _ce.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0048\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_eadc.ImgHAttr)
		}
	}
	return nil
}

func NewCT_Picture() *CT_Picture {
	_ddbdg := &CT_Picture{}
	_ddbdg.NvPicPr = NewCT_PictureNonVisual()
	_ddbdg.BlipFill = _f.NewCT_BlipFillProperties()
	_ddbdg.SpPr = _f.NewCT_ShapeProperties()
	return _ddbdg
}

func (_dcecb *CT_TimeNodeList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _dcecb.Par != nil {
		_agbd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0070a\u0072"}}
		for _, _bcfdc := range _dcecb.Par {
			e.EncodeElement(_bcfdc, _agbd)
		}
	}
	if _dcecb.Seq != nil {
		_cdcadg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073e\u0071"}}
		for _, _ggebb := range _dcecb.Seq {
			e.EncodeElement(_ggebb, _cdcadg)
		}
	}
	if _dcecb.Excl != nil {
		_ffafa := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0063\u006c"}}
		for _, _ebddg := range _dcecb.Excl {
			e.EncodeElement(_ebddg, _ffafa)
		}
	}
	if _dcecb.Anim != nil {
		_dbbdfb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0061\u006e\u0069\u006d"}}
		for _, _ddbdb := range _dcecb.Anim {
			e.EncodeElement(_ddbdb, _dbbdfb)
		}
	}
	if _dcecb.AnimClr != nil {
		_dege := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0061\u006e\u0069\u006d\u0043\u006cr"}}
		for _, _defeb := range _dcecb.AnimClr {
			e.EncodeElement(_defeb, _dege)
		}
	}
	if _dcecb.AnimEffect != nil {
		_gfceb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0061n\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}}
		for _, _baffa := range _dcecb.AnimEffect {
			e.EncodeElement(_baffa, _gfceb)
		}
	}
	if _dcecb.AnimMotion != nil {
		_ddega := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0061n\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}}
		for _, _acag := range _dcecb.AnimMotion {
			e.EncodeElement(_acag, _ddega)
		}
	}
	if _dcecb.AnimRot != nil {
		_gbec := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0061\u006e\u0069\u006d\u0052\u006ft"}}
		for _, _dfdbf := range _dcecb.AnimRot {
			e.EncodeElement(_dfdbf, _gbec)
		}
	}
	if _dcecb.AnimScale != nil {
		_dbcffa := _g.StartElement{Name: _g.Name{Local: "p\u003a\u0061\u006e\u0069\u006d\u0053\u0063\u0061\u006c\u0065"}}
		for _, _cagg := range _dcecb.AnimScale {
			e.EncodeElement(_cagg, _dbcffa)
		}
	}
	if _dcecb.Cmd != nil {
		_befed := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063m\u0064"}}
		for _, _caed := range _dcecb.Cmd {
			e.EncodeElement(_caed, _befed)
		}
	}
	if _dcecb.Set != nil {
		_cgaa := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073e\u0074"}}
		for _, _defcd := range _dcecb.Set {
			e.EncodeElement(_defcd, _cgaa)
		}
	}
	if _dcecb.Audio != nil {
		_bbaag := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0061\u0075\u0064\u0069\u006f"}}
		for _, _gagfdf := range _dcecb.Audio {
			e.EncodeElement(_gagfdf, _bbaag)
		}
	}
	if _dcecb.Video != nil {
		_acdee := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0076\u0069\u0064\u0065\u006f"}}
		for _, _ccfge := range _dcecb.Video {
			e.EncodeElement(_ccfge, _acdee)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ApplicationNonVisualDrawingProps and its children, prefixing error messages with path
func (_ad *CT_ApplicationNonVisualDrawingProps) ValidateWithPath(path string) error {
	if _ad.Ph != nil {
		if _da := _ad.Ph.ValidateWithPath(path + "\u002f\u0050\u0068"); _da != nil {
			return _da
		}
	}
	if _ad.AudioCd != nil {
		if _ge := _ad.AudioCd.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0043\u0064"); _ge != nil {
			return _ge
		}
	}
	if _ad.WavAudioFile != nil {
		if _gec := _ad.WavAudioFile.ValidateWithPath(path + "\u002f\u0057\u0061\u0076\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _gec != nil {
			return _gec
		}
	}
	if _ad.AudioFile != nil {
		if _afc := _ad.AudioFile.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _afc != nil {
			return _afc
		}
	}
	if _ad.VideoFile != nil {
		if _fga := _ad.VideoFile.ValidateWithPath(path + "\u002f\u0056\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"); _fga != nil {
			return _fga
		}
	}
	if _ad.QuickTimeFile != nil {
		if _fbd := _ad.QuickTimeFile.ValidateWithPath(path + "\u002f\u0051\u0075\u0069\u0063\u006b\u0054\u0069\u006de\u0046\u0069\u006c\u0065"); _fbd != nil {
			return _fbd
		}
	}
	if _ad.CustDataLst != nil {
		if _gdd := _ad.CustDataLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"); _gdd != nil {
			return _gdd
		}
	}
	if _ad.ExtLst != nil {
		if _ecc := _ad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ecc != nil {
			return _ecc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLAnimVariantIntegerVal and its children, prefixing error messages with path
func (_ddgfb *CT_TLAnimVariantIntegerVal) ValidateWithPath(path string) error { return nil }

func NewCT_TLMediaNodeVideo() *CT_TLMediaNodeVideo {
	_cffd := &CT_TLMediaNodeVideo{}
	_cffd.CMediaNode = NewCT_TLCommonMediaNodeData()
	return _cffd
}

type CT_CommonSlideViewProperties struct {

	// Snap Objects to Grid
	SnapToGridAttr *bool

	// Snap Objects to Objects
	SnapToObjectsAttr *bool

	// Show Guides in View
	ShowGuidesAttr *bool

	// Base properties for Slide View
	CViewPr *CT_CommonViewProperties

	// List of Guides
	GuideLst *CT_GuideList
}

func (_aaca *CT_HandoutMasterIdList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _aaca.HandoutMasterId != nil {
		_ccbc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0068\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073t\u0065\u0072\u0049\u0064"}}
		e.EncodeElement(_aaca.HandoutMasterId, _ccbc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_Connector() *CT_Connector {
	_ebea := &CT_Connector{}
	_ebea.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_ebea.SpPr = _f.NewCT_ShapeProperties()
	return _ebea
}

func (_defc *CT_TLCommandBehavior) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _defc.TypeAttr != ST_TLCommandTypeUnset {
		_ebgba, _egaec := _defc.TypeAttr.MarshalXMLAttr(_g.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _egaec != nil {
			return _egaec
		}
		start.Attr = append(start.Attr, _ebgba)
	}
	if _defc.CmdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u006d\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_defc.CmdAttr)})
	}
	e.EncodeToken(start)
	_abgcc := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_defc.CBhvr, _abgcc)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type EG_Background struct {

	// Background Properties
	BgPr *CT_BackgroundProperties

	// Background Style Reference
	BgRef *_f.CT_StyleMatrixReference
}

func (_cdaab *CT_TLAnimateEffectBehavior) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cdaab.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _geegg := range start.Attr {
		if _geegg.Name.Local == "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e" {
			_cdaab.TransitionAttr.UnmarshalXMLAttr(_geegg)
			continue
		}
		if _geegg.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072" {
			_bbcgd, _caefb := _geegg.Value, error(nil)
			if _caefb != nil {
				return _caefb
			}
			_cdaab.FilterAttr = &_bbcgd
			continue
		}
		if _geegg.Name.Local == "\u0070\u0072\u004cs\u0074" {
			_ffcea, _ggab := _geegg.Value, error(nil)
			if _ggab != nil {
				return _ggab
			}
			_cdaab.PrLstAttr = &_ffcea
			continue
		}
	}
_abfe:
	for {
		_abab, _dabg := d.Token()
		if _dabg != nil {
			return _dabg
		}
		switch _cdcga := _abab.(type) {
		case _g.StartElement:
			switch _cdcga.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _fbed := d.DecodeElement(_cdaab.CBhvr, &_cdcga); _fbed != nil {
					return _fbed
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0072\u006f\u0067\u0072\u0065\u0073\u0073"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0067\u0072\u0065\u0073\u0073"}:
				_cdaab.Progress = NewCT_TLAnimVariant()
				if _ggcfd := d.DecodeElement(_cdaab.Progress, &_cdcga); _ggcfd != nil {
					return _ggcfd
				}
			default:
				_e.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u004cA\u006e\u0069\u006d\u0061\u0074\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _cdcga.Name)
				if _gdgece := d.Skip(); _gdgece != nil {
					return _gdgece
				}
			}
		case _g.EndElement:
			break _abfe
		case _g.CharData:
		}
	}
	return nil
}

type SldSyncPr struct{ CT_SlideSyncProperties }

func (_gdcd *CT_PhotoAlbum) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ccbf := range start.Attr {
		if _ccbf.Name.Local == "\u0062\u0077" {
			_bacf, _aeadc := _d.ParseBool(_ccbf.Value)
			if _aeadc != nil {
				return _aeadc
			}
			_gdcd.BwAttr = &_bacf
			continue
		}
		if _ccbf.Name.Local == "\u0073\u0068\u006fw\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0073" {
			_edbg, _eebf := _d.ParseBool(_ccbf.Value)
			if _eebf != nil {
				return _eebf
			}
			_gdcd.ShowCaptionsAttr = &_edbg
			continue
		}
		if _ccbf.Name.Local == "\u006c\u0061\u0079\u006f\u0075\u0074" {
			_gdcd.LayoutAttr.UnmarshalXMLAttr(_ccbf)
			continue
		}
		if _ccbf.Name.Local == "\u0066\u0072\u0061m\u0065" {
			_gdcd.FrameAttr.UnmarshalXMLAttr(_ccbf)
			continue
		}
	}
_gcag:
	for {
		_cgaef, _fbfd := d.Token()
		if _fbfd != nil {
			return _fbfd
		}
		switch _gfde := _cgaef.(type) {
		case _g.StartElement:
			switch _gfde.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdcd.ExtLst = NewCT_ExtensionList()
				if _eabg := d.DecodeElement(_gdcd.ExtLst, &_gfde); _eabg != nil {
					return _eabg
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050h\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d \u0025\u0076", _gfde.Name)
				if _gcfa := d.Skip(); _gcfa != nil {
					return _gcfa
				}
			}
		case _g.EndElement:
			break _gcag
		case _g.CharData:
		}
	}
	return nil
}

type ST_PrintColorMode byte

// ValidateWithPath validates the CT_TLBuildDiagram and its children, prefixing error messages with path
func (_gabeg *CT_TLBuildDiagram) ValidateWithPath(path string) error {
	if _aeac := _gabeg.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _aeac != nil {
		return _aeac
	}
	return nil
}

func (_accca *CT_OleObject) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _accca.ProgIdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0070\u0072\u006f\u0067\u0049\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_accca.ProgIdAttr)})
	}
	if _accca.SpidAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_accca.SpidAttr)})
	}
	if _accca.NameAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ce.Sprintf("\u0025\u0076", *_accca.NameAttr)})
	}
	if _accca.ShowAsIconAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_accca.ShowAsIconAttr))})
	}
	if _accca.IdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_accca.IdAttr)})
	}
	if _accca.ImgWAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u006d\u0067\u0057"}, Value: _ce.Sprintf("\u0025\u0076", *_accca.ImgWAttr)})
	}
	if _accca.ImgHAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u006d\u0067\u0048"}, Value: _ce.Sprintf("\u0025\u0076", *_accca.ImgHAttr)})
	}
	e.EncodeToken(start)
	_accca.Choice.MarshalXML(e, _g.StartElement{})
	if _accca.Pic != nil {
		_ebf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0070i\u0063"}}
		e.EncodeElement(_accca.Pic, _ebf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLShapeTargetElement and its children
func (_dadged *CT_TLShapeTargetElement) Validate() error {
	return _dadged.ValidateWithPath("\u0043\u0054\u005fTL\u0053\u0068\u0061\u0070\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074")
}

func (_bdddf *ST_PhotoAlbumLayout) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_bdddf = 0
	case "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065":
		*_bdddf = 1
	case "\u0031\u0070\u0069\u0063":
		*_bdddf = 2
	case "\u0032\u0070\u0069\u0063":
		*_bdddf = 3
	case "\u0034\u0070\u0069\u0063":
		*_bdddf = 4
	case "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce":
		*_bdddf = 5
	case "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce":
		*_bdddf = 6
	case "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce":
		*_bdddf = 7
	}
	return nil
}

func (_ffaee *CT_OptionalBlackTransition) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ffaee.ThruBlkAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074h\u0072\u0075\u0042\u006c\u006b"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_ffaee.ThruBlkAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ebeea ST_TLTimeNodeSyncType) Validate() error { return _ebeea.ValidateWithPath("") }

func (_dfegc *CT_SlideIdListEntry) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _dfegc.IdAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _dfegc.RIdAttr)})
	e.EncodeToken(start)
	if _dfegc.ExtLst != nil {
		_afbg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dfegc.ExtLst, _afbg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cbfbe *ST_TLOleChartBuildType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cbfbe = 0
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_cbfbe = 1
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_cbfbe = 2
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_cbfbe = 3
	case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
		*_cbfbe = 4
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
		*_cbfbe = 5
	}
	return nil
}

// Validate validates the CT_BuildList and its children
func (_ffe *CT_BuildList) Validate() error {
	return _ffe.ValidateWithPath("\u0043\u0054\u005fB\u0075\u0069\u006c\u0064\u004c\u0069\u0073\u0074")
}

func (_eegea *ST_TLAnimateColorDirection) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_eegea = 0
	case "\u0063\u0077":
		*_eegea = 1
	case "\u0063\u0063\u0077":
		*_eegea = 2
	}
	return nil
}

func (_adcgc *CT_SlideTiming) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_agdfeb:
	for {
		_fbbcg, _cede := d.Token()
		if _cede != nil {
			return _cede
		}
		switch _gefb := _fbbcg.(type) {
		case _g.StartElement:
			switch _gefb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}:
				_adcgc.TnLst = NewCT_TimeNodeList()
				if _cbgb := d.DecodeElement(_adcgc.TnLst, &_gefb); _cbgb != nil {
					return _cbgb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u004c\u0073\u0074"}:
				_adcgc.BldLst = NewCT_BuildList()
				if _babb := d.DecodeElement(_adcgc.BldLst, &_gefb); _babb != nil {
					return _babb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adcgc.ExtLst = NewCT_ExtensionListModify()
				if _bcad := d.DecodeElement(_adcgc.ExtLst, &_gefb); _bcad != nil {
					return _bcad
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054\u0069m\u0069n\u0067\u0020\u0025\u0076", _gefb.Name)
				if _geabb := d.Skip(); _geabb != nil {
					return _geabb
				}
			}
		case _g.EndElement:
			break _agdfeb
		case _g.CharData:
		}
	}
	return nil
}

func (_dbgbc ST_TLBehaviorTransformType) Validate() error { return _dbgbc.ValidateWithPath("") }

func NewCT_TLTimeAnimateValueList() *CT_TLTimeAnimateValueList {
	_fcgb := &CT_TLTimeAnimateValueList{}
	return _fcgb
}

// ValidateWithPath validates the CT_TLIterateData and its children, prefixing error messages with path
func (_gddfa *CT_TLIterateData) ValidateWithPath(path string) error {
	if _ecbg := _gddfa.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _ecbg != nil {
		return _ecbg
	}
	if _gddfa.TmAbs != nil {
		if _cadedc := _gddfa.TmAbs.ValidateWithPath(path + "\u002f\u0054\u006d\u0041\u0062\u0073"); _cadedc != nil {
			return _cadedc
		}
	}
	if _gddfa.TmPct != nil {
		if _aabed := _gddfa.TmPct.ValidateWithPath(path + "\u002f\u0054\u006d\u0050\u0063\u0074"); _aabed != nil {
			return _aabed
		}
	}
	return nil
}

func NewCT_TLTimeNodeSequence() *CT_TLTimeNodeSequence {
	_edfcf := &CT_TLTimeNodeSequence{}
	_edfcf.CTn = NewCT_TLCommonTimeNodeData()
	return _edfcf
}

func (_caacda *CT_TLShapeTargetElement) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fbafa := range start.Attr {
		if _fbafa.Name.Local == "\u0073\u0070\u0069\u0064" {
			_ccdda, _cdecd := _d.ParseUint(_fbafa.Value, 10, 32)
			if _cdecd != nil {
				return _cdecd
			}
			_caacda.SpidAttr = uint32(_ccdda)
			continue
		}
	}
_deaf:
	for {
		_eefb, _dfdcg := d.Token()
		if _dfdcg != nil {
			return _dfdcg
		}
		switch _bgbfa := _eefb.(type) {
		case _g.StartElement:
			switch _bgbfa.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067"}:
				_caacda.Bg = NewCT_Empty()
				if _aabdg := d.DecodeElement(_caacda.Bg, &_bgbfa); _aabdg != nil {
					return _aabdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0075\u0062S\u0070"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0075\u0062S\u0070"}:
				_caacda.SubSp = NewCT_TLSubShapeId()
				if _dgfb := d.DecodeElement(_caacda.SubSp, &_bgbfa); _dgfb != nil {
					return _dgfb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}:
				_caacda.OleChartEl = NewCT_TLOleChartTargetElement()
				if _dbcffg := d.DecodeElement(_caacda.OleChartEl, &_bgbfa); _dbcffg != nil {
					return _dbcffg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0045\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0045\u006c"}:
				_caacda.TxEl = NewCT_TLTextTargetElement()
				if _adcf := d.DecodeElement(_caacda.TxEl, &_bgbfa); _adcf != nil {
					return _adcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063\u0045l"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063\u0045l"}:
				_caacda.GraphicEl = _f.NewCT_AnimationElementChoice()
				if _bdbcc := d.DecodeElement(_caacda.GraphicEl, &_bgbfa); _bdbcc != nil {
					return _bdbcc
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u004c\u0053\u0068\u0061\u0070\u0065\u0054\u0061r\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074 \u0025\u0076", _bgbfa.Name)
				if _bgggf := d.Skip(); _bgggf != nil {
					return _bgggf
				}
			}
		case _g.EndElement:
			break _deaf
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TransitionSoundAction and its children, prefixing error messages with path
func (_cfgeaa *CT_TransitionSoundAction) ValidateWithPath(path string) error {
	if _cfgeaa.StSnd != nil {
		if _bfcfc := _cfgeaa.StSnd.ValidateWithPath(path + "\u002f\u0053\u0074\u0053\u006e\u0064"); _bfcfc != nil {
			return _bfcfc
		}
	}
	if _cfgeaa.EndSnd != nil {
		if _gebe := _cfgeaa.EndSnd.ValidateWithPath(path + "\u002fE\u006e\u0064\u0053\u006e\u0064"); _gebe != nil {
			return _gebe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_IndexRange and its children, prefixing error messages with path
func (_bfbdf *CT_IndexRange) ValidateWithPath(path string) error { return nil }

type CT_TLByAnimateColorTransform struct {

	// RGB
	Rgb *CT_TLByRgbColorTransform

	// HSL
	Hsl *CT_TLByHslColorTransform
}

func (_aeaa *CT_TLByAnimateColorTransform) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bddef:
	for {
		_baffbc, _cgded := d.Token()
		if _cgded != nil {
			return _cgded
		}
		switch _fdecf := _baffbc.(type) {
		case _g.StartElement:
			switch _fdecf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0067\u0062"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062"}:
				_aeaa.Rgb = NewCT_TLByRgbColorTransform()
				if _cdage := d.DecodeElement(_aeaa.Rgb, &_fdecf); _cdage != nil {
					return _cdage
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0073\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_aeaa.Hsl = NewCT_TLByHslColorTransform()
				if _gfedc := d.DecodeElement(_aeaa.Hsl, &_fdecf); _gfedc != nil {
					return _gfedc
				}
			default:
				_e.Log.Debug("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0054\u004c\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043\u006f\u006co\u0072\u0054ra\u006e\u0073\u0066o\u0072\u006d\u0020\u0025\u0076", _fdecf.Name)
				if _fgdcgc := d.Skip(); _fgdcgc != nil {
					return _fgdcgc
				}
			}
		case _g.EndElement:
			break _bddef
		case _g.CharData:
		}
	}
	return nil
}

type EG_TopLevelSlide struct {

	// Color Scheme Map
	ClrMap *_f.CT_ColorMapping
}

func (_gfbf *CT_GroupShape) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gfbf.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_gfbf.GrpSpPr = _f.NewCT_GroupShapeProperties()
_ecbb:
	for {
		_fceb, _cfge := d.Token()
		if _cfge != nil {
			return _cfge
		}
		switch _bdfg := _fceb.(type) {
		case _g.StartElement:
			switch _bdfg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}:
				if _aee := d.DecodeElement(_gfbf.NvGrpSpPr, &_bdfg); _aee != nil {
					return _aee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}:
				if _edgd := d.DecodeElement(_gfbf.GrpSpPr, &_bdfg); _edgd != nil {
					return _edgd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_aedd := NewCT_GroupShapeChoice()
				if _cde := d.DecodeElement(&_aedd.Sp, &_bdfg); _cde != nil {
					return _cde
				}
				_gfbf.Choice = append(_gfbf.Choice, _aedd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_ecf := NewCT_GroupShapeChoice()
				if _cgad := d.DecodeElement(&_ecf.GrpSp, &_bdfg); _cgad != nil {
					return _cgad
				}
				_gfbf.Choice = append(_gfbf.Choice, _ecf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_dbcc := NewCT_GroupShapeChoice()
				if _eaed := d.DecodeElement(&_dbcc.GraphicFrame, &_bdfg); _eaed != nil {
					return _eaed
				}
				_gfbf.Choice = append(_gfbf.Choice, _dbcc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_ffag := NewCT_GroupShapeChoice()
				if _gcgg := d.DecodeElement(&_ffag.CxnSp, &_bdfg); _gcgg != nil {
					return _gcgg
				}
				_gfbf.Choice = append(_gfbf.Choice, _ffag)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_gdba := NewCT_GroupShapeChoice()
				if _bccda := d.DecodeElement(&_gdba.Pic, &_bdfg); _bccda != nil {
					return _bccda
				}
				_gfbf.Choice = append(_gfbf.Choice, _gdba)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_bfeg := NewCT_GroupShapeChoice()
				if _ddca := d.DecodeElement(&_bfeg.ContentPart, &_bdfg); _ddca != nil {
					return _ddca
				}
				_gfbf.Choice = append(_gfbf.Choice, _bfeg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfbf.ExtLst = NewCT_ExtensionListModify()
				if _fgf := d.DecodeElement(_gfbf.ExtLst, &_bdfg); _fgf != nil {
					return _fgf
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065 \u0025\u0076", _bdfg.Name)
				if _eaedf := d.Skip(); _eaedf != nil {
					return _eaedf
				}
			}
		case _g.EndElement:
			break _ecbb
		case _g.CharData:
		}
	}
	return nil
}

const (
	ST_TLBehaviorOverrideTypeUnset      ST_TLBehaviorOverrideType = 0
	ST_TLBehaviorOverrideTypeNormal     ST_TLBehaviorOverrideType = 1
	ST_TLBehaviorOverrideTypeChildStyle ST_TLBehaviorOverrideType = 2
)

type ST_TLTimeNodeRestartType byte

func (_ebdcb *ST_TransitionInOutDirectionType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bfgab, _bbfg := d.Token()
	if _bbfg != nil {
		return _bbfg
	}
	if _ffagad, _fccaf := _bfgab.(_g.EndElement); _fccaf && _ffagad.Name == start.Name {
		*_ebdcb = 1
		return nil
	}
	if _eabcg, _aeafe := _bfgab.(_g.CharData); !_aeafe {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfgab)
	} else {
		switch string(_eabcg) {
		case "":
			*_ebdcb = 0
		case "\u006f\u0075\u0074":
			*_ebdcb = 1
		case "\u0069\u006e":
			*_ebdcb = 2
		}
	}
	_bfgab, _bbfg = d.Token()
	if _bbfg != nil {
		return _bbfg
	}
	if _gccde, _cebga := _bfgab.(_g.EndElement); _cebga && _gccde.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfgab)
}

func (_fbaedf *CT_TLAnimVariantBooleanVal) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(_fbaedf.ValAttr))})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ST_TLTimeAnimateValueTime is a union type
type ST_TLTimeAnimateValueTime struct {
	ST_PositiveFixedPercentage *_f.ST_PositiveFixedPercentage
	ST_TLTimeIndefinite        ST_TLTimeIndefinite
}

func (_dbca *CT_SlideLayoutIdListEntry) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dbca.IdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_dbca.IdAttr)})
	}
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _dbca.RIdAttr)})
	e.EncodeToken(start)
	if _dbca.ExtLst != nil {
		_aada := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dbca.ExtLst, _aada)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_accfg *CT_TLByRgbColorTransform) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _acad := range start.Attr {
		if _acad.Name.Local == "\u0072" {
			_cafe, _dgbe := ParseUnionST_FixedPercentage(_acad.Value)
			if _dgbe != nil {
				return _dgbe
			}
			_accfg.RAttr = _cafe
			continue
		}
		if _acad.Name.Local == "\u0067" {
			_dgad, _baebc := ParseUnionST_FixedPercentage(_acad.Value)
			if _baebc != nil {
				return _baebc
			}
			_accfg.GAttr = _dgad
			continue
		}
		if _acad.Name.Local == "\u0062" {
			_fggg, _dgfaa := ParseUnionST_FixedPercentage(_acad.Value)
			if _dgfaa != nil {
				return _dgfaa
			}
			_accfg.BAttr = _fggg
			continue
		}
	}
	for {
		_cgcfc, _afdf := d.Token()
		if _afdf != nil {
			return _ce.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LBy\u0052gb\u0043\u006f\u006c\u006f\u0072\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u003a\u0020%\u0073", _afdf)
		}
		if _fddfa, _gcdc := _cgcfc.(_g.EndElement); _gcdc && _fddfa.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_OptionalBlackTransition struct {

	// Transition Through Black
	ThruBlkAttr *bool
}

func (_dafce ST_TLTimeIndefinite) Validate() error { return _dafce.ValidateWithPath("") }

func NewCT_TLCommonTimeNodeData() *CT_TLCommonTimeNodeData {
	_cagfd := &CT_TLCommonTimeNodeData{}
	return _cagfd
}

func (_dafgeg *ST_TLDiagramBuildType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fdacac, _fabf := d.Token()
	if _fabf != nil {
		return _fabf
	}
	if _beef, _ebafc := _fdacac.(_g.EndElement); _ebafc && _beef.Name == start.Name {
		*_dafgeg = 1
		return nil
	}
	if _fecc, _edfbg := _fdacac.(_g.CharData); !_edfbg {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fdacac)
	} else {
		switch string(_fecc) {
		case "":
			*_dafgeg = 0
		case "\u0077\u0068\u006fl\u0065":
			*_dafgeg = 1
		case "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
			*_dafgeg = 2
		case "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068":
			*_dafgeg = 3
		case "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
			*_dafgeg = 4
		case "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c":
			*_dafgeg = 5
		case "\u0063\u0077":
			*_dafgeg = 6
		case "\u0063\u0077\u0049\u006e":
			*_dafgeg = 7
		case "\u0063\u0077\u004fu\u0074":
			*_dafgeg = 8
		case "\u0063\u0063\u0077":
			*_dafgeg = 9
		case "\u0063\u0063\u0077I\u006e":
			*_dafgeg = 10
		case "\u0063\u0063\u0077\u004f\u0075\u0074":
			*_dafgeg = 11
		case "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067":
			*_dafgeg = 12
		case "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg":
			*_dafgeg = 13
		case "\u0075\u0070":
			*_dafgeg = 14
		case "\u0064\u006f\u0077\u006e":
			*_dafgeg = 15
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_dafgeg = 16
		case "\u0063\u0075\u0073\u0074":
			*_dafgeg = 17
		}
	}
	_fdacac, _fabf = d.Token()
	if _fabf != nil {
		return _fabf
	}
	if _dbgea, _bbfdbb := _fdacac.(_g.EndElement); _bbfdbb && _dbgea.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fdacac)
}

type ST_TransitionSideDirectionType byte

func NewCT_SlideMasterIdListEntry() *CT_SlideMasterIdListEntry {
	_dbegfg := &CT_SlideMasterIdListEntry{}
	return _dbegfg
}

func (_bggc *CT_Picture) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_gafa := _g.StartElement{Name: _g.Name{Local: "\u0070:\u006e\u0076\u0050\u0069\u0063\u0050r"}}
	e.EncodeElement(_bggc.NvPicPr, _gafa)
	_bbcb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
	e.EncodeElement(_bggc.BlipFill, _bbcb)
	_edbd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_bggc.SpPr, _edbd)
	if _bggc.Style != nil {
		_afbc := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_bggc.Style, _afbc)
	}
	if _bggc.ExtLst != nil {
		_dgcee := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bggc.ExtLst, _dgcee)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_EmbeddedFontList() *CT_EmbeddedFontList { _fbggc := &CT_EmbeddedFontList{}; return _fbggc }

// Validate validates the CT_GraphicalObjectFrameNonVisual and its children
func (_fceca *CT_GraphicalObjectFrameNonVisual) Validate() error {
	return _fceca.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006ae\u0063t\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

func NewCT_CommonSlideData() *CT_CommonSlideData {
	_cebf := &CT_CommonSlideData{}
	_cebf.SpTree = NewCT_GroupShape()
	return _cebf
}

func NewCT_CommentAuthorList() *CT_CommentAuthorList { _abb := &CT_CommentAuthorList{}; return _abb }

// ValidateWithPath validates the Presentation and its children, prefixing error messages with path
func (_eaefe *Presentation) ValidateWithPath(path string) error {
	if _cfgce := _eaefe.CT_Presentation.ValidateWithPath(path); _cfgce != nil {
		return _cfgce
	}
	return nil
}

type ST_TLAnimateBehaviorValueType byte

// ValidateWithPath validates the CT_ExtensionListModify and its children, prefixing error messages with path
func (_daag *CT_ExtensionListModify) ValidateWithPath(path string) error {
	for _cgcc, _ggfa := range _daag.Ext {
		if _fcfg := _ggfa.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _cgcc)); _fcfg != nil {
			return _fcfg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideMasterIdList and its children, prefixing error messages with path
func (_fcdc *CT_SlideMasterIdList) ValidateWithPath(path string) error {
	for _addf, _begg := range _fcdc.SldMasterId {
		if _gddec := _begg.ValidateWithPath(_ce.Sprintf("\u0025s\u002fS\u006c\u0064\u004d\u0061\u0073t\u0065\u0072I\u0064\u005b\u0025\u0064\u005d", path, _addf)); _gddec != nil {
			return _gddec
		}
	}
	return nil
}

func (_aead *CT_GuideList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _aead.Guide != nil {
		_cbfag := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0067\u0075\u0069\u0064\u0065"}}
		for _, _bdfag := range _aead.Guide {
			e.EncodeElement(_bdfag, _cbfag)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLMediaNodeAudio and its children, prefixing error messages with path
func (_aafff *CT_TLMediaNodeAudio) ValidateWithPath(path string) error {
	if _fggff := _aafff.CMediaNode.ValidateWithPath(path + "/\u0043\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"); _fggff != nil {
		return _fggff
	}
	return nil
}

type CT_SlideMasterTextStyles struct {

	// Slide Master Title Text Style
	TitleStyle *_f.CT_TextListStyle

	// Slide Master Body Text Style
	BodyStyle *_f.CT_TextListStyle

	// Slide Master Other Text Style
	OtherStyle *_f.CT_TextListStyle
	ExtLst     *CT_ExtensionList
}

func NewCT_NotesMasterIdListEntry() *CT_NotesMasterIdListEntry {
	_dbbeg := &CT_NotesMasterIdListEntry{}
	return _dbbeg
}

// ValidateWithPath validates the CT_TLShapeTargetElement and its children, prefixing error messages with path
func (_fcab *CT_TLShapeTargetElement) ValidateWithPath(path string) error {
	if _fcab.Bg != nil {
		if _facgd := _fcab.Bg.ValidateWithPath(path + "\u002f\u0042\u0067"); _facgd != nil {
			return _facgd
		}
	}
	if _fcab.SubSp != nil {
		if _gcge := _fcab.SubSp.ValidateWithPath(path + "\u002f\u0053\u0075\u0062\u0053\u0070"); _gcge != nil {
			return _gcge
		}
	}
	if _fcab.OleChartEl != nil {
		if _ddgfd := _fcab.OleChartEl.ValidateWithPath(path + "/\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"); _ddgfd != nil {
			return _ddgfd
		}
	}
	if _fcab.TxEl != nil {
		if _aadb := _fcab.TxEl.ValidateWithPath(path + "\u002f\u0054\u0078E\u006c"); _aadb != nil {
			return _aadb
		}
	}
	if _fcab.GraphicEl != nil {
		if _bfdf := _fcab.GraphicEl.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0045\u006c"); _bfdf != nil {
			return _bfdf
		}
	}
	return nil
}

// ValidateWithPath validates the AG_ChildSlide and its children, prefixing error messages with path
func (_af *AG_ChildSlide) ValidateWithPath(path string) error { return nil }

func (_bdgg *CT_TLOleChartTargetElement) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bdgg.TypeAttr = ST_TLChartSubelementType(1)
	for _, _gbcccd := range start.Attr {
		if _gbcccd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bdgg.TypeAttr.UnmarshalXMLAttr(_gbcccd)
			continue
		}
		if _gbcccd.Name.Local == "\u006c\u0076\u006c" {
			_eeca, _fagdd := _d.ParseUint(_gbcccd.Value, 10, 32)
			if _fagdd != nil {
				return _fagdd
			}
			_faagd := uint32(_eeca)
			_bdgg.LvlAttr = &_faagd
			continue
		}
	}
	for {
		_egeac, _aecf := d.Token()
		if _aecf != nil {
			return _ce.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0054\u0061\u0072g\u0065\u0074\u0045\u006c\u0065m\u0065\u006et\u003a\u0020\u0025\u0073", _aecf)
		}
		if _cfbda, _agaba := _egeac.(_g.EndElement); _agaba && _cfbda.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Comment and its children, prefixing error messages with path
func (_fegd *CT_Comment) ValidateWithPath(path string) error {
	if _gbb := _fegd.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _gbb != nil {
		return _gbb
	}
	if _fegd.ExtLst != nil {
		if _ffa := _fegd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffa != nil {
			return _ffa
		}
	}
	return nil
}

func (_cac *CT_CustomShow) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cac.SldLst = NewCT_SlideRelationshipList()
	for _, _decd := range start.Attr {
		if _decd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fdbc, _acde := _decd.Value, error(nil)
			if _acde != nil {
				return _acde
			}
			_cac.NameAttr = _fdbc
			continue
		}
		if _decd.Name.Local == "\u0069\u0064" {
			_dggg, _aeb := _d.ParseUint(_decd.Value, 10, 32)
			if _aeb != nil {
				return _aeb
			}
			_cac.IdAttr = uint32(_dggg)
			continue
		}
	}
_cbae:
	for {
		_ecce, _fcg := d.Token()
		if _fcg != nil {
			return _fcg
		}
		switch _geabg := _ecce.(type) {
		case _g.StartElement:
			switch _geabg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}:
				if _edbe := d.DecodeElement(_cac.SldLst, &_geabg); _edbe != nil {
					return _edbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cac.ExtLst = NewCT_ExtensionList()
				if _debe := d.DecodeElement(_cac.ExtLst, &_geabg); _debe != nil {
					return _debe
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043u\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077 \u0025\u0076", _geabg.Name)
				if _eeaa := d.Skip(); _eeaa != nil {
					return _eeaa
				}
			}
		case _g.EndElement:
			break _cbae
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OrientationTransition and its children, prefixing error messages with path
func (_gefdb *CT_OrientationTransition) ValidateWithPath(path string) error {
	if _fcac := _gefdb.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _fcac != nil {
		return _fcac
	}
	return nil
}

func (_edb *CT_CommonSlideData) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _edb.NameAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ce.Sprintf("\u0025\u0076", *_edb.NameAttr)})
	}
	e.EncodeToken(start)
	if _edb.Bg != nil {
		_efef := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u0067"}}
		e.EncodeElement(_edb.Bg, _efef)
	}
	_fac := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u0070\u0054\u0072\u0065\u0065"}}
	e.EncodeElement(_edb.SpTree, _fac)
	if _edb.CustDataLst != nil {
		_bada := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}}
		e.EncodeElement(_edb.CustDataLst, _bada)
	}
	if _edb.Controls != nil {
		_agce := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}}
		e.EncodeElement(_edb.Controls, _agce)
	}
	if _edb.ExtLst != nil {
		_gbff := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_edb.ExtLst, _gbff)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Kinsoku and its children, prefixing error messages with path
func (_ggfg *CT_Kinsoku) ValidateWithPath(path string) error { return nil }

// Validate validates the Presentation and its children
func (_fffcd *Presentation) Validate() error {
	return _fffcd.ValidateWithPath("\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e")
}

func (_cged *CT_ExtensionList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _cged.Ext != nil {
		_dfbf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065x\u0074"}}
		for _, _eed := range _cged.Ext {
			e.EncodeElement(_eed, _dfbf)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dbfb ST_TLAnimateBehaviorValueType) String() string {
	switch _dbfb {
	case 0:
		return ""
	case 1:
		return "\u0073\u0074\u0072"
	case 2:
		return "\u006e\u0075\u006d"
	case 3:
		return "\u0063\u006c\u0072"
	}
	return ""
}

func (_gcbda *ST_TLBehaviorTransformType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bcgga, _ffgab := d.Token()
	if _ffgab != nil {
		return _ffgab
	}
	if _gbacdg, _abeg := _bcgga.(_g.EndElement); _abeg && _gbacdg.Name == start.Name {
		*_gcbda = 1
		return nil
	}
	if _fdaf, _gcdcg := _bcgga.(_g.CharData); !_gcdcg {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bcgga)
	} else {
		switch string(_fdaf) {
		case "":
			*_gcbda = 0
		case "\u0070\u0074":
			*_gcbda = 1
		case "\u0069\u006d\u0067":
			*_gcbda = 2
		}
	}
	_bcgga, _ffgab = d.Token()
	if _ffgab != nil {
		return _ffgab
	}
	if _dfbdb, _fbgda := _bcgga.(_g.EndElement); _fbgda && _dfbdb.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bcgga)
}

// Validate validates the CT_OutlineViewProperties and its children
func (_cdbg *CT_OutlineViewProperties) Validate() error {
	return _cdbg.ValidateWithPath("\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_aegbg *CT_SlideMasterTextStyles) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _aegbg.TitleStyle != nil {
		_fcggc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074i\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_aegbg.TitleStyle, _fcggc)
	}
	if _aegbg.BodyStyle != nil {
		_gadcc := _g.StartElement{Name: _g.Name{Local: "p\u003a\u0062\u006f\u0064\u0079\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_aegbg.BodyStyle, _gadcc)
	}
	if _aegbg.OtherStyle != nil {
		_cgeec := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u006ft\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_aegbg.OtherStyle, _cgeec)
	}
	if _aegbg.ExtLst != nil {
		_eecg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aegbg.ExtLst, _eecg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fcgcg ST_TLTimeIndefinite) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cacdf := _g.Attr{}
	_cacdf.Name = name
	switch _fcgcg {
	case ST_TLTimeIndefiniteUnset:
		_cacdf.Value = ""
	case ST_TLTimeIndefiniteIndefinite:
		_cacdf.Value = "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065"
	}
	return _cacdf, nil
}

func (_eeegc *CT_SlideTransitionChoice) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_edda:
	for {
		_fbgee, _eccg := d.Token()
		if _eccg != nil {
			return _eccg
		}
		switch _eefdf := _fbgee.(type) {
		case _g.StartElement:
			switch _eefdf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}:
				_eeegc.Blinds = NewCT_OrientationTransition()
				if _geggg := d.DecodeElement(_eeegc.Blinds, &_eefdf); _geggg != nil {
					return _geggg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}:
				_eeegc.Checker = NewCT_OrientationTransition()
				if _acggef := d.DecodeElement(_eeegc.Checker, &_eefdf); _acggef != nil {
					return _acggef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}:
				_eeegc.Circle = NewCT_Empty()
				if _cfebg := d.DecodeElement(_eeegc.Circle, &_eefdf); _cfebg != nil {
					return _cfebg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}:
				_eeegc.Dissolve = NewCT_Empty()
				if _fbaed := d.DecodeElement(_eeegc.Dissolve, &_eefdf); _fbaed != nil {
					return _fbaed
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}:
				_eeegc.Comb = NewCT_OrientationTransition()
				if _dgdc := d.DecodeElement(_eeegc.Comb, &_eefdf); _dgdc != nil {
					return _dgdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}:
				_eeegc.Cover = NewCT_EightDirectionTransition()
				if _ceebc := d.DecodeElement(_eeegc.Cover, &_eefdf); _ceebc != nil {
					return _ceebc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0074"}:
				_eeegc.Cut = NewCT_OptionalBlackTransition()
				if _gdgg := d.DecodeElement(_eeegc.Cut, &_eefdf); _gdgg != nil {
					return _gdgg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}:
				_eeegc.Diamond = NewCT_Empty()
				if _decf := d.DecodeElement(_eeegc.Diamond, &_eefdf); _decf != nil {
					return _decf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}:
				_eeegc.Fade = NewCT_OptionalBlackTransition()
				if _dafa := d.DecodeElement(_eeegc.Fade, &_eefdf); _dafa != nil {
					return _dafa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}:
				_eeegc.Newsflash = NewCT_Empty()
				if _dabbg := d.DecodeElement(_eeegc.Newsflash, &_eefdf); _dabbg != nil {
					return _dabbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}:
				_eeegc.Plus = NewCT_Empty()
				if _acefb := d.DecodeElement(_eeegc.Plus, &_eefdf); _acefb != nil {
					return _acefb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}:
				_eeegc.Pull = NewCT_EightDirectionTransition()
				if _bgad := d.DecodeElement(_eeegc.Pull, &_eefdf); _bgad != nil {
					return _bgad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}:
				_eeegc.Push = NewCT_SideDirectionTransition()
				if _cfabb := d.DecodeElement(_eeegc.Push, &_eefdf); _cfabb != nil {
					return _cfabb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}:
				_eeegc.Random = NewCT_Empty()
				if _gacg := d.DecodeElement(_eeegc.Random, &_eefdf); _gacg != nil {
					return _gacg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}:
				_eeegc.RandomBar = NewCT_OrientationTransition()
				if _fcbbb := d.DecodeElement(_eeegc.RandomBar, &_eefdf); _fcbbb != nil {
					return _fcbbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}:
				_eeegc.Split = NewCT_SplitTransition()
				if _efdg := d.DecodeElement(_eeegc.Split, &_eefdf); _efdg != nil {
					return _efdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}:
				_eeegc.Strips = NewCT_CornerDirectionTransition()
				if _ddabb := d.DecodeElement(_eeegc.Strips, &_eefdf); _ddabb != nil {
					return _ddabb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}:
				_eeegc.Wedge = NewCT_Empty()
				if _cccg := d.DecodeElement(_eeegc.Wedge, &_eefdf); _cccg != nil {
					return _cccg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}:
				_eeegc.Wheel = NewCT_WheelTransition()
				if _bdce := d.DecodeElement(_eeegc.Wheel, &_eefdf); _bdce != nil {
					return _bdce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}:
				_eeegc.Wipe = NewCT_SideDirectionTransition()
				if _abgbc := d.DecodeElement(_eeegc.Wipe, &_eefdf); _abgbc != nil {
					return _abgbc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}:
				_eeegc.Zoom = NewCT_InOutTransition()
				if _ffbd := d.DecodeElement(_eeegc.Zoom, &_eefdf); _ffbd != nil {
					return _ffbd
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0043h\u006f\u0069\u0063\u0065\u0020%\u0076", _eefdf.Name)
				if _cfbfcg := d.Skip(); _cfbfcg != nil {
					return _cfbfcg
				}
			}
		case _g.EndElement:
			break _edda
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_SmartTags() *CT_SmartTags { _gbacd := &CT_SmartTags{}; return _gbacd }

func (_dgfff *ST_TLTimeNodePresetClassType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_dgfff = 0
	case "\u0065\u006e\u0074\u0072":
		*_dgfff = 1
	case "\u0065\u0078\u0069\u0074":
		*_dgfff = 2
	case "\u0065\u006d\u0070\u0068":
		*_dgfff = 3
	case "\u0070\u0061\u0074\u0068":
		*_dgfff = 4
	case "\u0076\u0065\u0072\u0062":
		*_dgfff = 5
	case "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl":
		*_dgfff = 6
	}
	return nil
}

// Validate validates the CT_SlideIdList and its children
func (_bfdd *CT_SlideIdList) Validate() error {
	return _bfdd.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049d\u004c\u0069\u0073\u0074")
}

// Validate validates the CT_NormalViewPortion and its children
func (_acdga *CT_NormalViewPortion) Validate() error {
	return _acdga.ValidateWithPath("C\u0054_\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069e\u0077\u0050\u006f\u0072ti\u006f\u006e")
}

func (_aegg *CT_GraphicalObjectFrameNonVisual) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_aegg.CNvPr = _f.NewCT_NonVisualDrawingProps()
	_aegg.CNvGraphicFramePr = _f.NewCT_NonVisualGraphicFrameProperties()
	_aegg.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_ddbc:
	for {
		_fege, _acaaa := d.Token()
		if _acaaa != nil {
			return _acaaa
		}
		switch _fdae := _fege.(type) {
		case _g.StartElement:
			switch _fdae.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _dcdd := d.DecodeElement(_aegg.CNvPr, &_fdae); _dcdd != nil {
					return _dcdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}:
				if _ddadd := d.DecodeElement(_aegg.CNvGraphicFramePr, &_fdae); _ddadd != nil {
					return _ddadd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _debee := d.DecodeElement(_aegg.NvPr, &_fdae); _debee != nil {
					return _debee
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061p\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006de\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0020\u0025\u0076", _fdae.Name)
				if _ada := d.Skip(); _ada != nil {
					return _ada
				}
			}
		case _g.EndElement:
			break _ddbc
		case _g.CharData:
		}
	}
	return nil
}

func (_gcfae *CT_TLBuildParagraph) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fdfb := range start.Attr {
		if _fdfb.Name.Local == "\u0062\u0075\u0069l\u0064" {
			_gcfae.BuildAttr.UnmarshalXMLAttr(_fdfb)
			continue
		}
		if _fdfb.Name.Local == "\u0062\u006c\u0064\u004c\u0076\u006c" {
			_fded, _fefec := _d.ParseUint(_fdfb.Value, 10, 32)
			if _fefec != nil {
				return _fefec
			}
			_gdad := uint32(_fded)
			_gcfae.BldLvlAttr = &_gdad
			continue
		}
		if _fdfb.Name.Local == "\u0061\u006e\u0069\u006d\u0042\u0067" {
			_ggdg, _bgfgd := _d.ParseBool(_fdfb.Value)
			if _bgfgd != nil {
				return _bgfgd
			}
			_gcfae.AnimBgAttr = &_ggdg
			continue
		}
		if _fdfb.Name.Local == "\u0061\u0075t\u006f\u0055\u0070d\u0061\u0074\u0065\u0041\u006e\u0069\u006d\u0042\u0067" {
			_bfcfa, _deage := _d.ParseBool(_fdfb.Value)
			if _deage != nil {
				return _deage
			}
			_gcfae.AutoUpdateAnimBgAttr = &_bfcfa
			continue
		}
		if _fdfb.Name.Local == "\u0072\u0065\u0076" {
			_bafc, _fgdac := _d.ParseBool(_fdfb.Value)
			if _fgdac != nil {
				return _fgdac
			}
			_gcfae.RevAttr = &_bafc
			continue
		}
		if _fdfb.Name.Local == "\u0061d\u0076\u0041\u0075\u0074\u006f" {
			_fbbbc, _cgaga := ParseUnionST_TLTime(_fdfb.Value)
			if _cgaga != nil {
				return _cgaga
			}
			_gcfae.AdvAutoAttr = &_fbbbc
			continue
		}
		if _fdfb.Name.Local == "\u0073\u0070\u0069\u0064" {
			_ebfa, _dffd := _d.ParseUint(_fdfb.Value, 10, 32)
			if _dffd != nil {
				return _dffd
			}
			_gddfe := uint32(_ebfa)
			_gcfae.SpidAttr = &_gddfe
			continue
		}
		if _fdfb.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_cfdf, _dcbd := _d.ParseUint(_fdfb.Value, 10, 32)
			if _dcbd != nil {
				return _dcbd
			}
			_dbeab := uint32(_cfdf)
			_gcfae.GrpIdAttr = &_dbeab
			continue
		}
		if _fdfb.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_defa, _cddad := _d.ParseBool(_fdfb.Value)
			if _cddad != nil {
				return _cddad
			}
			_gcfae.UiExpandAttr = &_defa
			continue
		}
	}
_ggfeg:
	for {
		_gcedb, _ageee := d.Token()
		if _ageee != nil {
			return _ageee
		}
		switch _gaccf := _gcedb.(type) {
		case _g.StartElement:
			switch _gaccf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074m\u0070\u006c\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074m\u0070\u006c\u004c\u0073\u0074"}:
				_gcfae.TmplLst = NewCT_TLTemplateList()
				if _bfdcc := d.DecodeElement(_gcfae.TmplLst, &_gaccf); _bfdcc != nil {
					return _bfdcc
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064Pa\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0020\u0025\u0076", _gaccf.Name)
				if _ddfda := d.Skip(); _ddfda != nil {
					return _ddfda
				}
			}
		case _g.EndElement:
			break _ggfeg
		case _g.CharData:
		}
	}
	return nil
}

func (_aede *CT_Control) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fcag := range start.Attr {
		if _fcag.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fcag.Name.Local == "\u0069\u0064" {
			_cabe, _ceeff := _fcag.Value, error(nil)
			if _ceeff != nil {
				return _ceeff
			}
			_aede.IdAttr = &_cabe
			continue
		}
		if _fcag.Name.Local == "\u0073\u0070\u0069\u0064" {
			_cec, _fcef := _fcag.Value, error(nil)
			if _fcef != nil {
				return _fcef
			}
			_aede.SpidAttr = &_cec
			continue
		}
		if _fcag.Name.Local == "\u006e\u0061\u006d\u0065" {
			_abbf, _abd := _fcag.Value, error(nil)
			if _abd != nil {
				return _abd
			}
			_aede.NameAttr = &_abbf
			continue
		}
		if _fcag.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_dbd, _acdca := _d.ParseBool(_fcag.Value)
			if _acdca != nil {
				return _acdca
			}
			_aede.ShowAsIconAttr = &_dbd
			continue
		}
		if _fcag.Name.Local == "\u0069\u006d\u0067\u0057" {
			_efgca, _beb := _d.ParseInt(_fcag.Value, 10, 32)
			if _beb != nil {
				return _beb
			}
			_gdfb := int32(_efgca)
			_aede.ImgWAttr = &_gdfb
			continue
		}
		if _fcag.Name.Local == "\u0069\u006d\u0067\u0048" {
			_cead, _faeb := _d.ParseInt(_fcag.Value, 10, 32)
			if _faeb != nil {
				return _faeb
			}
			_fefe := int32(_cead)
			_aede.ImgHAttr = &_fefe
			continue
		}
	}
_dafd:
	for {
		_ced, _fba := d.Token()
		if _fba != nil {
			return _fba
		}
		switch _egda := _ced.(type) {
		case _g.StartElement:
			switch _egda.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aede.ExtLst = NewCT_ExtensionList()
				if _dfbaf := d.DecodeElement(_aede.ExtLst, &_egda); _dfbaf != nil {
					return _dfbaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_aede.Pic = NewCT_Picture()
				if _agcg := d.DecodeElement(_aede.Pic, &_egda); _agcg != nil {
					return _agcg
				}
			default:
				_e.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0020\u0025\u0076", _egda.Name)
				if _faef := d.Skip(); _faef != nil {
					return _faef
				}
			}
		case _g.EndElement:
			break _dafd
		case _g.CharData:
		}
	}
	return nil
}

const (
	ST_OleObjectFollowColorSchemeUnset             ST_OleObjectFollowColorScheme = 0
	ST_OleObjectFollowColorSchemeNone              ST_OleObjectFollowColorScheme = 1
	ST_OleObjectFollowColorSchemeFull              ST_OleObjectFollowColorScheme = 2
	ST_OleObjectFollowColorSchemeTextAndBackground ST_OleObjectFollowColorScheme = 3
)

type CT_SlideTiming struct {
	TnLst *CT_TimeNodeList

	// Build List
	BldLst *CT_BuildList
	ExtLst *CT_ExtensionListModify
}

func NewCT_TLIterateData() *CT_TLIterateData { _fagac := &CT_TLIterateData{}; return _fagac }

// Validate validates the CT_CommonSlideData and its children
func (_cfg *CT_CommonSlideData) Validate() error {
	return _cfg.ValidateWithPath("\u0043T\u005fC\u006f\u006d\u006d\u006f\u006eS\u006c\u0069d\u0065\u0044\u0061\u0074\u0061")
}

func (_fcf *CT_Comment) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fcf.Pos = _f.NewCT_Point2D()
	for _, _agbb := range start.Attr {
		if _agbb.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064" {
			_cced, _ddaa := _d.ParseUint(_agbb.Value, 10, 32)
			if _ddaa != nil {
				return _ddaa
			}
			_fcf.AuthorIdAttr = uint32(_cced)
			continue
		}
		if _agbb.Name.Local == "\u0064\u0074" {
			_geeg, _gdge := ParseStdlibTime(_agbb.Value)
			if _gdge != nil {
				return _gdge
			}
			_fcf.DtAttr = &_geeg
			continue
		}
		if _agbb.Name.Local == "\u0069\u0064\u0078" {
			_dbcf, _cca := _d.ParseUint(_agbb.Value, 10, 32)
			if _cca != nil {
				return _cca
			}
			_fcf.IdxAttr = uint32(_dbcf)
			continue
		}
	}
_daf:
	for {
		_ddb, _eaf := d.Token()
		if _eaf != nil {
			return _eaf
		}
		switch _dddd := _ddb.(type) {
		case _g.StartElement:
			switch _dddd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u006f\u0073"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _dee := d.DecodeElement(_fcf.Pos, &_dddd); _dee != nil {
					return _dee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}:
				if _eafg := d.DecodeElement(&_fcf.Text, &_dddd); _eafg != nil {
					return _eafg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fcf.ExtLst = NewCT_ExtensionListModify()
				if _aac := d.DecodeElement(_fcf.ExtLst, &_dddd); _aac != nil {
					return _aac
				}
			default:
				_e.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _dddd.Name)
				if _ega := d.Skip(); _ega != nil {
					return _ega
				}
			}
		case _g.EndElement:
			break _daf
		case _g.CharData:
		}
	}
	return nil
}

func (_aeeec *ST_TransitionCornerDirectionType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bgdb, _dcbeg := d.Token()
	if _dcbeg != nil {
		return _dcbeg
	}
	if _ffcbe, _bcaa := _bgdb.(_g.EndElement); _bcaa && _ffcbe.Name == start.Name {
		*_aeeec = 1
		return nil
	}
	if _faebg, _aadc := _bgdb.(_g.CharData); !_aadc {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgdb)
	} else {
		switch string(_faebg) {
		case "":
			*_aeeec = 0
		case "\u006c\u0075":
			*_aeeec = 1
		case "\u0072\u0075":
			*_aeeec = 2
		case "\u006c\u0064":
			*_aeeec = 3
		case "\u0072\u0064":
			*_aeeec = 4
		}
	}
	_bgdb, _dcbeg = d.Token()
	if _dcbeg != nil {
		return _dcbeg
	}
	if _dgac, _ebfac := _bgdb.(_g.EndElement); _ebfac && _dgac.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgdb)
}

func (_ecgae *ST_TransitionEightDirectionType) ValidateWithPath(path string) error {
	_accfd := []string{}
	if _ecgae.ST_TransitionSideDirectionType != ST_TransitionSideDirectionTypeUnset {
		_accfd = append(_accfd, "\u0053\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e\u0053\u0069\u0064\u0065\u0044i\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065")
	}
	if _ecgae.ST_TransitionCornerDirectionType != ST_TransitionCornerDirectionTypeUnset {
		_accfd = append(_accfd, "\u0053\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0043\u006fr\u006ee\u0072\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065")
	}
	if len(_accfd) > 1 {
		return _ce.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _accfd)
	}
	return nil
}

// Validate validates the CT_TLBuildParagraph and its children
func (_gdecf *CT_TLBuildParagraph) Validate() error {
	return _gdecf.ValidateWithPath("\u0043\u0054\u005f\u0054LB\u0075\u0069\u006c\u0064\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068")
}

type CT_TLCommonTimeNodeData struct {

	// ID
	IdAttr *uint32

	// Preset ID
	PresetIDAttr *int32

	// Preset Types
	PresetClassAttr ST_TLTimeNodePresetClassType

	// Preset SubType
	PresetSubtypeAttr *int32

	// Duration
	DurAttr *ST_TLTime

	// Repeat Count
	RepeatCountAttr *ST_TLTime

	// Repeat Duration
	RepeatDurAttr *ST_TLTime

	// Speed
	SpdAttr *_f.ST_Percentage

	// Acceleration
	AccelAttr *_f.ST_PositiveFixedPercentage

	// Deceleration
	DecelAttr *_f.ST_PositiveFixedPercentage

	// Auto Reverse
	AutoRevAttr *bool

	// Restart
	RestartAttr ST_TLTimeNodeRestartType

	// Fill
	FillAttr ST_TLTimeNodeFillType

	// Synchronization Behavior
	SyncBehaviorAttr ST_TLTimeNodeSyncType

	// Time Filter
	TmFilterAttr *string

	// Event Filter
	EvtFilterAttr *string

	// Display
	DisplayAttr *bool

	// Master Relation
	MasterRelAttr ST_TLTimeNodeMasterRelation

	// Build level
	BldLvlAttr *int32

	// Group ID
	GrpIdAttr *uint32

	// After Effect
	AfterEffectAttr *bool

	// Node Type
	NodeTypeAttr ST_TLTimeNodeType

	// Node Placeholder
	NodePhAttr *bool

	// Start Conditions List
	StCondLst *CT_TLTimeConditionList

	// End Conditions List
	EndCondLst *CT_TLTimeConditionList

	// EndSync
	EndSync *CT_TLTimeCondition

	// Iterate
	Iterate *CT_TLIterateData

	// Children Time Node List
	ChildTnLst *CT_TimeNodeList

	// Sub-TimeNodes List
	SubTnLst *CT_TimeNodeList
}

func (_feeb *ST_WebColorType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fbgad, _efegg := d.Token()
	if _efegg != nil {
		return _efegg
	}
	if _efcgb, _gbcfd := _fbgad.(_g.EndElement); _gbcfd && _efcgb.Name == start.Name {
		*_feeb = 1
		return nil
	}
	if _deagg, _agcad := _fbgad.(_g.CharData); !_agcad {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbgad)
	} else {
		switch string(_deagg) {
		case "":
			*_feeb = 0
		case "\u006e\u006f\u006e\u0065":
			*_feeb = 1
		case "\u0062r\u006f\u0077\u0073\u0065\u0072":
			*_feeb = 2
		case "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
			*_feeb = 3
		case "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074":
			*_feeb = 4
		case "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b":
			*_feeb = 5
		case "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065":
			*_feeb = 6
		}
	}
	_fbgad, _efegg = d.Token()
	if _efegg != nil {
		return _efegg
	}
	if _faba, _eeaea := _fbgad.(_g.EndElement); _eeaea && _faba.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbgad)
}

func (_cfffd *CT_TLTextTargetElement) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cabfca:
	for {
		_adeca, _agacb := d.Token()
		if _agacb != nil {
			return _agacb
		}
		switch _cbcef := _adeca.(type) {
		case _g.StartElement:
			switch _cbcef.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0068\u0061\u0072\u0052\u0067"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061\u0072\u0052\u0067"}:
				_cfffd.CharRg = NewCT_IndexRange()
				if _dfbdd := d.DecodeElement(_cfffd.CharRg, &_cbcef); _dfbdd != nil {
					return _dfbdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0052\u0067"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0052\u0067"}:
				_cfffd.PRg = NewCT_IndexRange()
				if _debbbf := d.DecodeElement(_cfffd.PRg, &_cbcef); _debbbf != nil {
					return _debbbf
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0065x\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _cbcef.Name)
				if _bfca := d.Skip(); _bfca != nil {
					return _bfca
				}
			}
		case _g.EndElement:
			break _cabfca
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLByRgbColorTransform and its children, prefixing error messages with path
func (_cgefg *CT_TLByRgbColorTransform) ValidateWithPath(path string) error {
	if _bddae := _cgefg.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _bddae != nil {
		return _bddae
	}
	if _ebdedc := _cgefg.GAttr.ValidateWithPath(path + "\u002f\u0047\u0041\u0074\u0074\u0072"); _ebdedc != nil {
		return _ebdedc
	}
	if _dcbb := _cgefg.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _dcbb != nil {
		return _dcbb
	}
	return nil
}

func (_gbdc *CT_ShowInfoKiosk) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gaddf := range start.Attr {
		if _gaddf.Name.Local == "\u0072e\u0073\u0074\u0061\u0072\u0074" {
			_bafaf, _aeggb := _d.ParseUint(_gaddf.Value, 10, 32)
			if _aeggb != nil {
				return _aeggb
			}
			_afcb := uint32(_bafaf)
			_gbdc.RestartAttr = &_afcb
			continue
		}
	}
	for {
		_fadg, _cefe := d.Token()
		if _cefe != nil {
			return _ce.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u006f\u0077I\u006ef\u006f\u004b\u0069\u006f\u0073\u006b\u003a \u0025\u0073", _cefe)
		}
		if _gfedd, _ffge := _fadg.(_g.EndElement); _ffge && _gfedd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_agg *CT_CustomShowId) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bdff := range start.Attr {
		if _bdff.Name.Local == "\u0069\u0064" {
			_aff, _bgbb := _d.ParseUint(_bdff.Value, 10, 32)
			if _bgbb != nil {
				return _bgbb
			}
			_agg.IdAttr = uint32(_aff)
			continue
		}
	}
	for {
		_ebcb, _bff := d.Token()
		if _bff != nil {
			return _ce.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dS\u0068\u006f\u0077I\u0064:\u0020\u0025\u0073", _bff)
		}
		if _ddde, _fdbb := _ebcb.(_g.EndElement); _fdbb && _ddde.Name == start.Name {
			break
		}
	}
	return nil
}

func (_baad *CT_GraphicalObjectFrame) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _baad.BwModeAttr != _f.ST_BlackWhiteModeUnset {
		_gffaf, _cfaf := _baad.BwModeAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u003a\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _cfaf != nil {
			return _cfaf
		}
		start.Attr = append(start.Attr, _gffaf)
	}
	e.EncodeToken(start)
	_eaaf := _g.StartElement{Name: _g.Name{Local: "\u0070:\u006ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_baad.NvGraphicFramePr, _eaaf)
	_feag := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0078\u0066\u0072\u006d"}}
	e.EncodeElement(_baad.Xfrm, _feag)
	_effgf := _g.StartElement{Name: _g.Name{Local: "\u0061:\u0067\u0072\u0061\u0070\u0068\u0069c"}}
	_effgf.Attr = append(_effgf.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	e.EncodeElement(_baad.Graphic, _effgf)
	if _baad.ExtLst != nil {
		_gebc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_baad.ExtLst, _gebc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gbafa ST_TLBehaviorOverrideType) ValidateWithPath(path string) error {
	switch _gbafa {
	case 0, 1, 2:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbafa))
	}
	return nil
}

func (_cfdcc ST_TLAnimateMotionPathEditMode) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_cfdcc.String(), start)
}

func (_dafeb ST_TLTimeNodeType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_dafeb.String(), start)
}

func (_geaa *ST_Direction) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_geaa = 0
	case "\u0068\u006f\u0072\u007a":
		*_geaa = 1
	case "\u0076\u0065\u0072\u0074":
		*_geaa = 2
	}
	return nil
}

type CT_SmartTags struct{ IdAttr string }

func (_ebbec *CT_NotesMaster) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ebbec.CSld = NewCT_CommonSlideData()
	_ebbec.ClrMap = _f.NewCT_ColorMapping()
_fbff:
	for {
		_abbg, _addb := d.Token()
		if _addb != nil {
			return _addb
		}
		switch _caebca := _abbg.(type) {
		case _g.StartElement:
			switch _caebca.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _dgfa := d.DecodeElement(_ebbec.CSld, &_caebca); _dgfa != nil {
					return _dgfa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _gegcb := d.DecodeElement(_ebbec.ClrMap, &_caebca); _gegcb != nil {
					return _gegcb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_ebbec.Hf = NewCT_HeaderFooter()
				if _cfga := d.DecodeElement(_ebbec.Hf, &_caebca); _cfga != nil {
					return _cfga
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}:
				_ebbec.NotesStyle = _f.NewCT_TextListStyle()
				if _abfdd := d.DecodeElement(_ebbec.NotesStyle, &_caebca); _abfdd != nil {
					return _abfdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebbec.ExtLst = NewCT_ExtensionListModify()
				if _ebab := d.DecodeElement(_ebbec.ExtLst, &_caebca); _ebab != nil {
					return _ebab
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004d\u0061s\u0074e\u0072\u0020\u0025\u0076", _caebca.Name)
				if _cdde := d.Skip(); _cdde != nil {
					return _cdde
				}
			}
		case _g.EndElement:
			break _fbff
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_HandoutMasterIdList() *CT_HandoutMasterIdList {
	_cfcg := &CT_HandoutMasterIdList{}
	return _cfcg
}

// ValidateWithPath validates the CT_Background and its children, prefixing error messages with path
func (_ceg *CT_Background) ValidateWithPath(path string) error {
	if _bgd := _ceg.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _bgd != nil {
		return _bgd
	}
	if _ceg.BgPr != nil {
		if _afcc := _ceg.BgPr.ValidateWithPath(path + "\u002f\u0042\u0067P\u0072"); _afcc != nil {
			return _afcc
		}
	}
	if _ceg.BgRef != nil {
		if _fff := _ceg.BgRef.ValidateWithPath(path + "\u002f\u0042\u0067\u0052\u0065\u0066"); _fff != nil {
			return _fff
		}
	}
	return nil
}

func (_cgfe *CT_PhotoAlbum) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cgfe.BwAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u0077"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cgfe.BwAttr))})
	}
	if _cgfe.ShowCaptionsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068\u006fw\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0073"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cgfe.ShowCaptionsAttr))})
	}
	if _cgfe.LayoutAttr != ST_PhotoAlbumLayoutUnset {
		_ggbfb, _cggd := _cgfe.LayoutAttr.MarshalXMLAttr(_g.Name{Local: "\u006c\u0061\u0079\u006f\u0075\u0074"})
		if _cggd != nil {
			return _cggd
		}
		start.Attr = append(start.Attr, _ggbfb)
	}
	if _cgfe.FrameAttr != ST_PhotoAlbumFrameShapeUnset {
		_bdded, _gedc := _cgfe.FrameAttr.MarshalXMLAttr(_g.Name{Local: "\u0066\u0072\u0061m\u0065"})
		if _gedc != nil {
			return _gedc
		}
		start.Attr = append(start.Attr, _bdded)
	}
	e.EncodeToken(start)
	if _cgfe.ExtLst != nil {
		_cfbf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cgfe.ExtLst, _cfbf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_OutlineViewSlideEntry and its children, prefixing error messages with path
func (_adbb *CT_OutlineViewSlideEntry) ValidateWithPath(path string) error { return nil }

func (_gbfagb *SldSyncPr) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "p\u003a\u0073\u006c\u0064\u0053\u0079\u006e\u0063\u0050\u0072"
	return _gbfagb.CT_SlideSyncProperties.MarshalXML(e, start)
}

const (
	ST_TLBehaviorTransformTypeUnset ST_TLBehaviorTransformType = 0
	ST_TLBehaviorTransformTypePt    ST_TLBehaviorTransformType = 1
	ST_TLBehaviorTransformTypeImg   ST_TLBehaviorTransformType = 2
)

func (_gacfc *TagLst) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0074\u0061\u0067\u004c\u0073\u0074"
	return _gacfc.CT_TagList.MarshalXML(e, start)
}

func (_fface *CT_TLAnimVariantStringVal) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _ce.Sprintf("\u0025\u0076", _fface.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_facdg ST_TLBehaviorAccumulateType) String() string {
	switch _facdg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return ""
}

type CT_EmbeddedFontDataId struct{ IdAttr string }

// ValidateWithPath validates the CT_SplitTransition and its children, prefixing error messages with path
func (_fdge *CT_SplitTransition) ValidateWithPath(path string) error {
	if _dfce := _fdge.OrientAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0065\u006e\u0074\u0041\u0074\u0074\u0072"); _dfce != nil {
		return _dfce
	}
	if _ccce := _fdge.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _ccce != nil {
		return _ccce
	}
	return nil
}

// Validate validates the CT_TLAnimateEffectBehavior and its children
func (_dfgg *CT_TLAnimateEffectBehavior) Validate() error {
	return _dfgg.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0045\u0066\u0066\u0065\u0063\u0074\u0042\u0065\u0068\u0061v\u0069\u006f\u0072")
}

func ParseUnionST_TLTime(s string) (ST_TLTime, error) { return ST_TLTime{}, nil }

func (_edgcc *CT_OptionalBlackTransition) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _eaeg := range start.Attr {
		if _eaeg.Name.Local == "\u0074h\u0072\u0075\u0042\u006c\u006b" {
			_gbad, _abdb := _d.ParseBool(_eaeg.Value)
			if _abdb != nil {
				return _abdb
			}
			_edgcc.ThruBlkAttr = &_gbad
			continue
		}
	}
	for {
		_abfdg, _fgdbg := d.Token()
		if _fgdbg != nil {
			return _ce.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0070\u0074\u0069\u006f\u006e\u0061\u006c\u0042\u006c\u0061\u0063\u006bT\u0072\u0061\u006e\u0073\u0069t\u0069\u006fn\u003a\u0020\u0025\u0073", _fgdbg)
		}
		if _dadef, _adda := _abfdg.(_g.EndElement); _adda && _dadef.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideTiming and its children, prefixing error messages with path
func (_aeece *CT_SlideTiming) ValidateWithPath(path string) error {
	if _aeece.TnLst != nil {
		if _gcaf := _aeece.TnLst.ValidateWithPath(path + "\u002f\u0054\u006e\u004c\u0073\u0074"); _gcaf != nil {
			return _gcaf
		}
	}
	if _aeece.BldLst != nil {
		if _ccad := _aeece.BldLst.ValidateWithPath(path + "\u002fB\u006c\u0064\u004c\u0073\u0074"); _ccad != nil {
			return _ccad
		}
	}
	if _aeece.ExtLst != nil {
		if _dgceec := _aeece.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgceec != nil {
			return _dgceec
		}
	}
	return nil
}

const (
	ST_TLAnimateMotionPathEditModeUnset    ST_TLAnimateMotionPathEditMode = 0
	ST_TLAnimateMotionPathEditModeRelative ST_TLAnimateMotionPathEditMode = 1
	ST_TLAnimateMotionPathEditModeFixed    ST_TLAnimateMotionPathEditMode = 2
)

func NewCT_OutlineViewSlideEntry() *CT_OutlineViewSlideEntry {
	_ccc := &CT_OutlineViewSlideEntry{}
	return _ccc
}

func (_dfddb ST_PrintWhat) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_ggceg := _g.Attr{}
	_ggceg.Name = name
	switch _dfddb {
	case ST_PrintWhatUnset:
		_ggceg.Value = ""
	case ST_PrintWhatSlides:
		_ggceg.Value = "\u0073\u006c\u0069\u0064\u0065\u0073"
	case ST_PrintWhatHandouts1:
		_ggceg.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731"
	case ST_PrintWhatHandouts2:
		_ggceg.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732"
	case ST_PrintWhatHandouts3:
		_ggceg.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733"
	case ST_PrintWhatHandouts4:
		_ggceg.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734"
	case ST_PrintWhatHandouts6:
		_ggceg.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736"
	case ST_PrintWhatHandouts9:
		_ggceg.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739"
	case ST_PrintWhatNotes:
		_ggceg.Value = "\u006e\u006f\u0074e\u0073"
	case ST_PrintWhatOutline:
		_ggceg.Value = "\u006fu\u0074\u006c\u0069\u006e\u0065"
	}
	return _ggceg, nil
}

func (_begc *CT_TLPoint) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dddc := range start.Attr {
		if _dddc.Name.Local == "\u0078" {
			_gggca, _gcbge := ParseUnionST_Percentage(_dddc.Value)
			if _gcbge != nil {
				return _gcbge
			}
			_begc.XAttr = _gggca
			continue
		}
		if _dddc.Name.Local == "\u0079" {
			_acbdc, _dbbge := ParseUnionST_Percentage(_dddc.Value)
			if _dbbge != nil {
				return _dbbge
			}
			_begc.YAttr = _acbdc
			continue
		}
	}
	for {
		_addgg, _bacg := d.Token()
		if _bacg != nil {
			return _ce.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0050\u006f\u0069\u006e\u0074\u003a\u0020%\u0073", _bacg)
		}
		if _gfef, _dffdf := _addgg.(_g.EndElement); _dffdf && _gfef.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_PhotoAlbumLayoutUnset      ST_PhotoAlbumLayout = 0
	ST_PhotoAlbumLayoutFitToSlide ST_PhotoAlbumLayout = 1
	ST_PhotoAlbumLayout1pic       ST_PhotoAlbumLayout = 2
	ST_PhotoAlbumLayout2pic       ST_PhotoAlbumLayout = 3
	ST_PhotoAlbumLayout4pic       ST_PhotoAlbumLayout = 4
	ST_PhotoAlbumLayout1picTitle  ST_PhotoAlbumLayout = 5
	ST_PhotoAlbumLayout2picTitle  ST_PhotoAlbumLayout = 6
	ST_PhotoAlbumLayout4picTitle  ST_PhotoAlbumLayout = 7
)

type CT_TLSetBehavior struct {

	// Common Behavior
	CBhvr *CT_TLCommonBehaviorData

	// To
	To *CT_TLAnimVariant
}

func (_efgfc *CT_TLTimeNodeParallel) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_efgfc.CTn = NewCT_TLCommonTimeNodeData()
_cdcgc:
	for {
		_ebfe, _deffc := d.Token()
		if _deffc != nil {
			return _deffc
		}
		switch _cbddb := _ebfe.(type) {
		case _g.StartElement:
			switch _cbddb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _gcged := d.DecodeElement(_efgfc.CTn, &_cbddb); _gcged != nil {
					return _gcged
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0050\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u0020\u0025\u0076", _cbddb.Name)
				if _gaeff := d.Skip(); _gaeff != nil {
					return _gaeff
				}
			}
		case _g.EndElement:
			break _cdcgc
		case _g.CharData:
		}
	}
	return nil
}

func (_gcfg *CT_Slide) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gcfg.ShowAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068\u006f\u0077"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_gcfg.ShowAttr))})
	}
	if _gcfg.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_gcfg.ShowMasterSpAttr))})
	}
	if _gcfg.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_gcfg.ShowMasterPhAnimAttr))})
	}
	e.EncodeToken(start)
	_bbgd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_gcfg.CSld, _bbgd)
	if _gcfg.ClrMapOvr != nil {
		_dbgcb := _g.StartElement{Name: _g.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_gcfg.ClrMapOvr, _dbgcb)
	}
	if _gcfg.Transition != nil {
		_fccac := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_gcfg.Transition, _fccac)
	}
	if _gcfg.Timing != nil {
		_egdf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074\u0069\u006d\u0069\u006e\u0067"}}
		e.EncodeElement(_gcfg.Timing, _egdf)
	}
	if _gcfg.ExtLst != nil {
		_agdfa := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gcfg.ExtLst, _agdfa)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CustomShow and its children
func (_bee *CT_CustomShow) Validate() error {
	return _bee.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077")
}

// Validate validates the CT_TLMediaNodeVideo and its children
func (_cfcgf *CT_TLMediaNodeVideo) Validate() error {
	return _cfcgf.ValidateWithPath("\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0056\u0069\u0064\u0065\u006f")
}

func (_dgggbf *CT_TLTimeNodeExclusive) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dgggbf.CTn = NewCT_TLCommonTimeNodeData()
_gabba:
	for {
		_gfdcc, _baefaa := d.Token()
		if _baefaa != nil {
			return _baefaa
		}
		switch _eebadb := _gfdcc.(type) {
		case _g.StartElement:
			switch _eebadb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _fggfa := d.DecodeElement(_dgggbf.CTn, &_eebadb); _fggfa != nil {
					return _fggfa
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0069m\u0065\u004e\u006f\u0064\u0065\u0045\u0078\u0063\u006c\u0075\u0073\u0069\u0076\u0065\u0020\u0025\u0076", _eebadb.Name)
				if _gbbbb := d.Skip(); _gbbbb != nil {
					return _gbbbb
				}
			}
		case _g.EndElement:
			break _gabba
		case _g.CharData:
		}
	}
	return nil
}

type CT_TLAnimateColorBehavior struct {

	// Color Space
	ClrSpcAttr ST_TLAnimateColorSpace

	// Direction
	DirAttr ST_TLAnimateColorDirection
	CBhvr   *CT_TLCommonBehaviorData

	// By
	By *CT_TLByAnimateColorTransform

	// From
	From *_f.CT_Color

	// To
	To *_f.CT_Color
}

func (_fca *CT_ApplicationNonVisualDrawingProps) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bac := range start.Attr {
		if _bac.Name.Local == "\u0069s\u0050\u0068\u006f\u0074\u006f" {
			_fa, _bgc := _d.ParseBool(_bac.Value)
			if _bgc != nil {
				return _bgc
			}
			_fca.IsPhotoAttr = &_fa
			continue
		}
		if _bac.Name.Local == "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n" {
			_gfe, _df := _d.ParseBool(_bac.Value)
			if _df != nil {
				return _df
			}
			_fca.UserDrawnAttr = &_gfe
			continue
		}
	}
_dbb:
	for {
		_ag, _dde := d.Token()
		if _dde != nil {
			return _dde
		}
		switch _fbf := _ag.(type) {
		case _g.StartElement:
			switch _fbf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0068"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068"}:
				_fca.Ph = NewCT_Placeholder()
				if _dccf := d.DecodeElement(_fca.Ph, &_fbf); _dccf != nil {
					return _dccf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}:
				_fca.AudioCd = _f.NewCT_AudioCD()
				if _bc := d.DecodeElement(_fca.AudioCd, &_fbf); _bc != nil {
					return _bc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}:
				_fca.WavAudioFile = _f.NewCT_EmbeddedWAVAudioFile()
				if _cgf := d.DecodeElement(_fca.WavAudioFile, &_fbf); _cgf != nil {
					return _cgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}:
				_fca.AudioFile = _f.NewCT_AudioFile()
				if _fbc := d.DecodeElement(_fca.AudioFile, &_fbf); _fbc != nil {
					return _fbc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}:
				_fca.VideoFile = _f.NewCT_VideoFile()
				if _gcg := d.DecodeElement(_fca.VideoFile, &_fbf); _gcg != nil {
					return _gcg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}:
				_fca.QuickTimeFile = _f.NewCT_QuickTimeFile()
				if _dgg := d.DecodeElement(_fca.QuickTimeFile, &_fbf); _dgg != nil {
					return _dgg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_fca.CustDataLst = NewCT_CustomerDataList()
				if _bd := d.DecodeElement(_fca.CustDataLst, &_fbf); _bd != nil {
					return _bd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fca.ExtLst = NewCT_ExtensionList()
				if _ccf := d.DecodeElement(_fca.ExtLst, &_fbf); _ccf != nil {
					return _ccf
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041p\u0070\u006c\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006eg\u0050\u0072\u006f\u0070\u0073 \u0025\u0076", _fbf.Name)
				if _edc := d.Skip(); _edc != nil {
					return _edc
				}
			}
		case _g.EndElement:
			break _dbb
		case _g.CharData:
		}
	}
	return nil
}

type CT_ShowProperties struct {

	// Loop Slide Show
	LoopAttr *bool

	// Show Narration in Slide Show
	ShowNarrationAttr *bool

	// Show Animation in Slide Show
	ShowAnimationAttr *bool

	// Use Timings in Slide Show
	UseTimingsAttr *bool

	// Presenter Slide Show Mode
	Present *CT_Empty

	// Browse Slide Show Mode
	Browse *CT_ShowInfoBrowse

	// Kiosk Slide Show Mode
	Kiosk *CT_ShowInfoKiosk

	// All Slides
	SldAll *CT_Empty

	// Slide Range
	SldRg *CT_IndexRange

	// Custom Show
	CustShow *CT_CustomShowId

	// Pen Color for Slide Show
	PenClr *_f.CT_Color
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_Presentation and its children
func (_bcec *CT_Presentation) Validate() error {
	return _bcec.ValidateWithPath("\u0043T\u005fP\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e")
}

// Validate validates the CT_TLSubShapeId and its children
func (_fgga *CT_TLSubShapeId) Validate() error {
	return _fgga.ValidateWithPath("\u0043T\u005fT\u004c\u0053\u0075\u0062\u0053\u0068\u0061\u0070\u0065\u0049\u0064")
}

// ValidateWithPath validates the CT_Placeholder and its children, prefixing error messages with path
func (_ceea *CT_Placeholder) ValidateWithPath(path string) error {
	if _egegd := _ceea.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _egegd != nil {
		return _egegd
	}
	if _fcgc := _ceea.OrientAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0065\u006e\u0074\u0041\u0074\u0074\u0072"); _fcgc != nil {
		return _fcgc
	}
	if _edga := _ceea.SzAttr.ValidateWithPath(path + "\u002fS\u007a\u0041\u0074\u0074\u0072"); _edga != nil {
		return _edga
	}
	if _ceea.ExtLst != nil {
		if _efbd := _ceea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _efbd != nil {
			return _efbd
		}
	}
	return nil
}

func (_cffgb ST_TLPreviousActionType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_ddffe := _g.Attr{}
	_ddffe.Name = name
	switch _cffgb {
	case ST_TLPreviousActionTypeUnset:
		_ddffe.Value = ""
	case ST_TLPreviousActionTypeNone:
		_ddffe.Value = "\u006e\u006f\u006e\u0065"
	case ST_TLPreviousActionTypeSkipTimed:
		_ddffe.Value = "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d"
	}
	return _ddffe, nil
}

func NewCT_SlideSorterViewProperties() *CT_SlideSorterViewProperties {
	_agdd := &CT_SlideSorterViewProperties{}
	_agdd.CViewPr = NewCT_CommonViewProperties()
	return _agdd
}

// ValidateWithPath validates the CT_ConnectorNonVisual and its children, prefixing error messages with path
func (_defb *CT_ConnectorNonVisual) ValidateWithPath(path string) error {
	if _ccff := _defb.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _ccff != nil {
		return _ccff
	}
	if _effg := _defb.CNvCxnSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _effg != nil {
		return _effg
	}
	if _dbeg := _defb.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _dbeg != nil {
		return _dbeg
	}
	return nil
}

func (_fcfdd ST_TLAnimateBehaviorValueType) ValidateWithPath(path string) error {
	switch _fcfdd {
	case 0, 1, 2, 3:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fcfdd))
	}
	return nil
}

func NewCT_CustomerDataList() *CT_CustomerDataList { _eaa := &CT_CustomerDataList{}; return _eaa }

func (_bgae *ST_TLTimeNodeType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_bgae = 0
	case "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074":
		*_bgae = 1
	case "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074":
		*_bgae = 2
	case "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074":
		*_bgae = 3
	case "\u006da\u0069\u006e\u0053\u0065\u0071":
		*_bgae = 4
	case "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071":
		*_bgae = 5
	case "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072":
		*_bgae = 6
	case "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p":
		*_bgae = 7
	case "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070":
		*_bgae = 8
	case "\u0074\u006d\u0052\u006f\u006f\u0074":
		*_bgae = 9
	}
	return nil
}

// ValidateWithPath validates the CT_TLCommandBehavior and its children, prefixing error messages with path
func (_cdgc *CT_TLCommandBehavior) ValidateWithPath(path string) error {
	if _cgdc := _cdgc.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cgdc != nil {
		return _cgdc
	}
	if _afbfc := _cdgc.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _afbfc != nil {
		return _afbfc
	}
	return nil
}

type CT_SlideViewProperties struct {
	CSldViewPr *CT_CommonSlideViewProperties
	ExtLst     *CT_ExtensionList
}

func (_aadcg ST_SlideLayoutType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bgcbd := _g.Attr{}
	_bgcbd.Name = name
	switch _aadcg {
	case ST_SlideLayoutTypeUnset:
		_bgcbd.Value = ""
	case ST_SlideLayoutTypeTitle:
		_bgcbd.Value = "\u0074\u0069\u0074l\u0065"
	case ST_SlideLayoutTypeTx:
		_bgcbd.Value = "\u0074\u0078"
	case ST_SlideLayoutTypeTwoColTx:
		_bgcbd.Value = "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078"
	case ST_SlideLayoutTypeTbl:
		_bgcbd.Value = "\u0074\u0062\u006c"
	case ST_SlideLayoutTypeTxAndChart:
		_bgcbd.Value = "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074"
	case ST_SlideLayoutTypeChartAndTx:
		_bgcbd.Value = "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeDgm:
		_bgcbd.Value = "\u0064\u0067\u006d"
	case ST_SlideLayoutTypeChart:
		_bgcbd.Value = "\u0063\u0068\u0061r\u0074"
	case ST_SlideLayoutTypeTxAndClipArt:
		_bgcbd.Value = "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074"
	case ST_SlideLayoutTypeClipArtAndTx:
		_bgcbd.Value = "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeTitleOnly:
		_bgcbd.Value = "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy"
	case ST_SlideLayoutTypeBlank:
		_bgcbd.Value = "\u0062\u006c\u0061n\u006b"
	case ST_SlideLayoutTypeTxAndObj:
		_bgcbd.Value = "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a"
	case ST_SlideLayoutTypeObjAndTx:
		_bgcbd.Value = "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeObjOnly:
		_bgcbd.Value = "\u006fb\u006a\u004f\u006e\u006c\u0079"
	case ST_SlideLayoutTypeObj:
		_bgcbd.Value = "\u006f\u0062\u006a"
	case ST_SlideLayoutTypeTxAndMedia:
		_bgcbd.Value = "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061"
	case ST_SlideLayoutTypeMediaAndTx:
		_bgcbd.Value = "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeObjOverTx:
		_bgcbd.Value = "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x"
	case ST_SlideLayoutTypeTxOverObj:
		_bgcbd.Value = "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j"
	case ST_SlideLayoutTypeTxAndTwoObj:
		_bgcbd.Value = "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeTwoObjAndTx:
		_bgcbd.Value = "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeTwoObjOverTx:
		_bgcbd.Value = "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078"
	case ST_SlideLayoutTypeFourObj:
		_bgcbd.Value = "\u0066o\u0075\u0072\u004f\u0062\u006a"
	case ST_SlideLayoutTypeVertTx:
		_bgcbd.Value = "\u0076\u0065\u0072\u0074\u0054\u0078"
	case ST_SlideLayoutTypeClipArtAndVertTx:
		_bgcbd.Value = "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078"
	case ST_SlideLayoutTypeVertTitleAndTx:
		_bgcbd.Value = "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeVertTitleAndTxOverChart:
		_bgcbd.Value = "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074"
	case ST_SlideLayoutTypeTwoObj:
		_bgcbd.Value = "\u0074\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeObjAndTwoObj:
		_bgcbd.Value = "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeTwoObjAndObj:
		_bgcbd.Value = "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a"
	case ST_SlideLayoutTypeCust:
		_bgcbd.Value = "\u0063\u0075\u0073\u0074"
	case ST_SlideLayoutTypeSecHead:
		_bgcbd.Value = "\u0073e\u0063\u0048\u0065\u0061\u0064"
	case ST_SlideLayoutTypeTwoTxTwoObj:
		_bgcbd.Value = "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeObjTx:
		_bgcbd.Value = "\u006f\u0062\u006aT\u0078"
	case ST_SlideLayoutTypePicTx:
		_bgcbd.Value = "\u0070\u0069\u0063T\u0078"
	}
	return _bgcbd, nil
}

func (_ccdcd *CmLst) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070:\u0063\u006d\u004c\u0073\u0074"
	return _ccdcd.CT_CommentList.MarshalXML(e, start)
}

func (_ebcf *CT_CornerDirectionTransition) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bgf := range start.Attr {
		if _bgf.Name.Local == "\u0064\u0069\u0072" {
			_ebcf.DirAttr.UnmarshalXMLAttr(_bgf)
			continue
		}
	}
	for {
		_gefd, _fge := d.Token()
		if _fge != nil {
			return _ce.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u006f\u0072\u006e\u0065\u0072\u0044\u0069r\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006esi\u0074\u0069\u006fn\u003a \u0025\u0073", _fge)
		}
		if _afgc, _becb := _gefd.(_g.EndElement); _becb && _afgc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dffgf *ST_TLTime) ValidateWithPath(path string) error {
	_abaec := []string{}
	if _dffgf.Uint32 != nil {
		_abaec = append(_abaec, "\u0055\u0069\u006e\u0074\u0033\u0032")
	}
	if _dffgf.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		_abaec = append(_abaec, "\u0053\u0054\u005f\u0054LT\u0069\u006d\u0065\u0049\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065")
	}
	if len(_abaec) > 1 {
		return _ce.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _abaec)
	}
	return nil
}

// ValidateWithPath validates the CT_TLSetBehavior and its children, prefixing error messages with path
func (_ffefe *CT_TLSetBehavior) ValidateWithPath(path string) error {
	if _bdbga := _ffefe.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _bdbga != nil {
		return _bdbga
	}
	if _ffefe.To != nil {
		if _effc := _ffefe.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _effc != nil {
			return _effc
		}
	}
	return nil
}

type CT_HandoutMaster struct {

	// Common slide data for handout master
	CSld *CT_CommonSlideData

	// Color Scheme Map
	ClrMap *_f.CT_ColorMapping

	// Header/Footer information for a handout master
	Hf     *CT_HeaderFooter
	ExtLst *CT_ExtensionListModify
}

type CT_TLCommandBehavior struct {

	// Command Type
	TypeAttr ST_TLCommandType

	// Command
	CmdAttr *string
	CBhvr   *CT_TLCommonBehaviorData
}

func (_eeab *CT_Extension) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075\u0072\u0069"}, Value: _ce.Sprintf("\u0025\u0076", _eeab.UriAttr)})
	e.EncodeToken(start)
	if _eeab.Any != nil {
		for _, _ecga := range _eeab.Any {
			_ecga.MarshalXML(e, _g.StartElement{})
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bfbe *CT_TLCommandBehavior) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bfbe.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _bacd := range start.Attr {
		if _bacd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bfbe.TypeAttr.UnmarshalXMLAttr(_bacd)
			continue
		}
		if _bacd.Name.Local == "\u0063\u006d\u0064" {
			_gbbag, _dccbc := _bacd.Value, error(nil)
			if _dccbc != nil {
				return _dccbc
			}
			_bfbe.CmdAttr = &_gbbag
			continue
		}
	}
_acdfd:
	for {
		_fdee, _fcbbd := d.Token()
		if _fcbbd != nil {
			return _fcbbd
		}
		switch _caded := _fdee.(type) {
		case _g.StartElement:
			switch _caded.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _feaca := d.DecodeElement(_bfbe.CBhvr, &_caded); _feaca != nil {
					return _feaca
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u0061\u006e\u0064\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _caded.Name)
				if _cecga := d.Skip(); _cecga != nil {
					return _cecga
				}
			}
		case _g.EndElement:
			break _acdfd
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ControlList and its children
func (_cdbf *CT_ControlList) Validate() error {
	return _cdbf.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006fl\u004c\u0069\u0073\u0074")
}

func (_bfbfa ST_OleObjectFollowColorScheme) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_gfecg := _g.Attr{}
	_gfecg.Name = name
	switch _bfbfa {
	case ST_OleObjectFollowColorSchemeUnset:
		_gfecg.Value = ""
	case ST_OleObjectFollowColorSchemeNone:
		_gfecg.Value = "\u006e\u006f\u006e\u0065"
	case ST_OleObjectFollowColorSchemeFull:
		_gfecg.Value = "\u0066\u0075\u006c\u006c"
	case ST_OleObjectFollowColorSchemeTextAndBackground:
		_gfecg.Value = "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064"
	}
	return _gfecg, nil
}

// Validate validates the CT_Comment and its children
func (_aaf *CT_Comment) Validate() error {
	return _aaf.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074")
}

// ValidateWithPath validates the HandoutMaster and its children, prefixing error messages with path
func (_ecaa *HandoutMaster) ValidateWithPath(path string) error {
	if _edea := _ecaa.CT_HandoutMaster.ValidateWithPath(path); _edea != nil {
		return _edea
	}
	return nil
}

func (_edbea *ST_PrintColorMode) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_edbea = 0
	case "\u0062\u0077":
		*_edbea = 1
	case "\u0067\u0072\u0061\u0079":
		*_edbea = 2
	case "\u0063\u006c\u0072":
		*_edbea = 3
	}
	return nil
}

func (_bbefb *CT_TLCommonBehaviorData) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bbefb.AdditiveAttr != ST_TLBehaviorAdditiveTypeUnset {
		_aaeeg, _gaea := _bbefb.AdditiveAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u0064\u0064\u0069\u0074\u0069\u0076\u0065"})
		if _gaea != nil {
			return _gaea
		}
		start.Attr = append(start.Attr, _aaeeg)
	}
	if _bbefb.AccumulateAttr != ST_TLBehaviorAccumulateTypeUnset {
		_decbfa, _bded := _bbefb.AccumulateAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u0063\u0063\u0075\u006d\u0075\u006c\u0061\u0074\u0065"})
		if _bded != nil {
			return _bded
		}
		start.Attr = append(start.Attr, _decbfa)
	}
	if _bbefb.XfrmTypeAttr != ST_TLBehaviorTransformTypeUnset {
		_ebbad, _dfgca := _bbefb.XfrmTypeAttr.MarshalXMLAttr(_g.Name{Local: "\u0078\u0066\u0072\u006d\u0054\u0079\u0070\u0065"})
		if _dfgca != nil {
			return _dfgca
		}
		start.Attr = append(start.Attr, _ebbad)
	}
	if _bbefb.FromAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u0072\u006f\u006d"}, Value: _ce.Sprintf("\u0025\u0076", *_bbefb.FromAttr)})
	}
	if _bbefb.ToAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u006f"}, Value: _ce.Sprintf("\u0025\u0076", *_bbefb.ToAttr)})
	}
	if _bbefb.ByAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u0079"}, Value: _ce.Sprintf("\u0025\u0076", *_bbefb.ByAttr)})
	}
	if _bbefb.RctxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0063\u0074\u0078"}, Value: _ce.Sprintf("\u0025\u0076", *_bbefb.RctxAttr)})
	}
	if _bbefb.OverrideAttr != ST_TLBehaviorOverrideTypeUnset {
		_gaccc, _dgee := _bbefb.OverrideAttr.MarshalXMLAttr(_g.Name{Local: "\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"})
		if _dgee != nil {
			return _dgee
		}
		start.Attr = append(start.Attr, _gaccc)
	}
	e.EncodeToken(start)
	_cdgdba := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_bbefb.CTn, _cdgdba)
	_fdgda := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0074\u0067\u0074\u0045\u006c"}}
	e.EncodeElement(_bbefb.TgtEl, _fdgda)
	if _bbefb.AttrNameLst != nil {
		_fafae := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"}}
		e.EncodeElement(_bbefb.AttrNameLst, _fafae)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_SideDirectionTransition() *CT_SideDirectionTransition {
	_adga := &CT_SideDirectionTransition{}
	return _adga
}

func NewCT_SlideIdListEntry() *CT_SlideIdListEntry {
	_adac := &CT_SlideIdListEntry{}
	_adac.IdAttr = 256
	return _adac
}

// Validate validates the CT_OutlineViewSlideList and its children
func (_dagebf *CT_OutlineViewSlideList) Validate() error {
	return _dagebf.ValidateWithPath("\u0043\u0054\u005fOu\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0053\u006c\u0069\u0064\u0065\u004c\u0069\u0073\u0074")
}

func NewCT_BuildList() *CT_BuildList { _fae := &CT_BuildList{}; return _fae }

func (_gefcg ST_TLTimeNodeRestartType) String() string {
	switch _gefcg {
	case 0:
		return ""
	case 1:
		return "\u0061\u006c\u0077\u0061\u0079\u0073"
	case 2:
		return "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065"
	case 3:
		return "\u006e\u0065\u0076e\u0072"
	}
	return ""
}

func NewCT_SlideMasterTextStyles() *CT_SlideMasterTextStyles {
	_aagc := &CT_SlideMasterTextStyles{}
	return _aagc
}

// ValidateWithPath validates the CT_OleObjectLink and its children, prefixing error messages with path
func (_edef *CT_OleObjectLink) ValidateWithPath(path string) error {
	if _edef.ExtLst != nil {
		if _baag := _edef.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _baag != nil {
			return _baag
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideMasterTextStyles and its children, prefixing error messages with path
func (_cgdg *CT_SlideMasterTextStyles) ValidateWithPath(path string) error {
	if _cgdg.TitleStyle != nil {
		if _fdff := _cgdg.TitleStyle.ValidateWithPath(path + "/\u0054\u0069\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"); _fdff != nil {
			return _fdff
		}
	}
	if _cgdg.BodyStyle != nil {
		if _cfab := _cgdg.BodyStyle.ValidateWithPath(path + "\u002f\u0042\u006f\u0064\u0079\u0053\u0074\u0079\u006c\u0065"); _cfab != nil {
			return _cfab
		}
	}
	if _cgdg.OtherStyle != nil {
		if _agga := _cgdg.OtherStyle.ValidateWithPath(path + "/\u004f\u0074\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"); _agga != nil {
			return _agga
		}
	}
	if _cgdg.ExtLst != nil {
		if _fbec := _cgdg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbec != nil {
			return _fbec
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GraphicalObjectFrameNonVisual and its children, prefixing error messages with path
func (_daaf *CT_GraphicalObjectFrameNonVisual) ValidateWithPath(path string) error {
	if _faga := _daaf.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _faga != nil {
		return _faga
	}
	if _gba := _daaf.CNvGraphicFramePr.ValidateWithPath(path + "\u002fC\u004ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"); _gba != nil {
		return _gba
	}
	if _dff := _daaf.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _dff != nil {
		return _dff
	}
	return nil
}

func (_dceae *CT_TagList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bdea:
	for {
		_cedc, _ddgbd := d.Token()
		if _ddgbd != nil {
			return _ddgbd
		}
		switch _fefd := _cedc.(type) {
		case _g.StartElement:
			switch _fefd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0067"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0067"}:
				_daeg := NewCT_StringTag()
				if _cdefg := d.DecodeElement(_daeg, &_fefd); _cdefg != nil {
					return _cdefg
				}
				_dceae.Tag = append(_dceae.Tag, _daeg)
			default:
				_e.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fT\u0061\u0067\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _fefd.Name)
				if _dgfgd := d.Skip(); _dgfgd != nil {
					return _dgfgd
				}
			}
		case _g.EndElement:
			break _bdea
		case _g.CharData:
		}
	}
	return nil
}

func (_gffg ST_WebColorType) ValidateWithPath(path string) error {
	switch _gffg {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gffg))
	}
	return nil
}

// ValidateWithPath validates the CT_OleObjectChoice and its children, prefixing error messages with path
func (_abbcb *CT_OleObjectChoice) ValidateWithPath(path string) error {
	if _abbcb.Embed != nil {
		if _fbbc := _abbcb.Embed.ValidateWithPath(path + "\u002f\u0045\u006d\u0062\u0065\u0064"); _fbbc != nil {
			return _fbbc
		}
	}
	if _abbcb.Link != nil {
		if _dgbf := _abbcb.Link.ValidateWithPath(path + "\u002f\u004c\u0069n\u006b"); _dgbf != nil {
			return _dgbf
		}
	}
	return nil
}

func (_fgcgc *CT_TLBehaviorAttributeNameList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_cdge := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065"}}
	for _, _abbfd := range _fgcgc.AttrName {
		e.EncodeElement(_abbfd, _cdge)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ceae *ST_TLParaBuildType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ffdfe, _befgba := d.Token()
	if _befgba != nil {
		return _befgba
	}
	if _gdfad, _aabacd := _ffdfe.(_g.EndElement); _aabacd && _gdfad.Name == start.Name {
		*_ceae = 1
		return nil
	}
	if _beead, _egbbd := _ffdfe.(_g.CharData); !_egbbd {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffdfe)
	} else {
		switch string(_beead) {
		case "":
			*_ceae = 0
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_ceae = 1
		case "\u0070":
			*_ceae = 2
		case "\u0063\u0075\u0073\u0074":
			*_ceae = 3
		case "\u0077\u0068\u006fl\u0065":
			*_ceae = 4
		}
	}
	_ffdfe, _befgba = d.Token()
	if _befgba != nil {
		return _befgba
	}
	if _aafea, _fcaa := _ffdfe.(_g.EndElement); _fcaa && _aafea.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffdfe)
}

func (_ffgec *CT_TLAnimateBehavior) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ffgec.ByAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u0079"}, Value: _ce.Sprintf("\u0025\u0076", *_ffgec.ByAttr)})
	}
	if _ffgec.FromAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u0072\u006f\u006d"}, Value: _ce.Sprintf("\u0025\u0076", *_ffgec.FromAttr)})
	}
	if _ffgec.ToAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u006f"}, Value: _ce.Sprintf("\u0025\u0076", *_ffgec.ToAttr)})
	}
	if _ffgec.CalcmodeAttr != ST_TLAnimateBehaviorCalcModeUnset {
		_caacc, _fccc := _ffgec.CalcmodeAttr.MarshalXMLAttr(_g.Name{Local: "\u0063\u0061\u006c\u0063\u006d\u006f\u0064\u0065"})
		if _fccc != nil {
			return _fccc
		}
		start.Attr = append(start.Attr, _caacc)
	}
	if _ffgec.ValueTypeAttr != ST_TLAnimateBehaviorValueTypeUnset {
		_ggbbc, _bece := _ffgec.ValueTypeAttr.MarshalXMLAttr(_g.Name{Local: "\u0076a\u006c\u0075\u0065\u0054\u0079\u0070e"})
		if _bece != nil {
			return _bece
		}
		start.Attr = append(start.Attr, _ggbbc)
	}
	e.EncodeToken(start)
	_dcbfa := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_ffgec.CBhvr, _dcbfa)
	if _ffgec.TavLst != nil {
		_acgac := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_ffgec.TavLst, _acgac)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLGraphicalObjectBuild and its children
func (_dfabf *CT_TLGraphicalObjectBuild) Validate() error {
	return _dfabf.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0047r\u0061\u0070\u0068\u0069\u0063a\u006cO\u0062j\u0065\u0063\u0074\u0042\u0075\u0069\u006cd")
}

type CT_Control struct {
	ExtLst         *CT_ExtensionList
	Pic            *CT_Picture
	SpidAttr       *string
	NameAttr       *string
	ShowAsIconAttr *bool
	IdAttr         *string
	ImgWAttr       *int32
	ImgHAttr       *int32
}

func (_bcdc *CT_TLAnimateBehavior) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bcdc.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _bcefc := range start.Attr {
		if _bcefc.Name.Local == "\u0062\u0079" {
			_eccdg, _fbfg := _bcefc.Value, error(nil)
			if _fbfg != nil {
				return _fbfg
			}
			_bcdc.ByAttr = &_eccdg
			continue
		}
		if _bcefc.Name.Local == "\u0066\u0072\u006f\u006d" {
			_fbdb, _efabg := _bcefc.Value, error(nil)
			if _efabg != nil {
				return _efabg
			}
			_bcdc.FromAttr = &_fbdb
			continue
		}
		if _bcefc.Name.Local == "\u0074\u006f" {
			_adag, _aade := _bcefc.Value, error(nil)
			if _aade != nil {
				return _aade
			}
			_bcdc.ToAttr = &_adag
			continue
		}
		if _bcefc.Name.Local == "\u0063\u0061\u006c\u0063\u006d\u006f\u0064\u0065" {
			_bcdc.CalcmodeAttr.UnmarshalXMLAttr(_bcefc)
			continue
		}
		if _bcefc.Name.Local == "\u0076a\u006c\u0075\u0065\u0054\u0079\u0070e" {
			_bcdc.ValueTypeAttr.UnmarshalXMLAttr(_bcefc)
			continue
		}
	}
_aafe:
	for {
		_dgdfc, _aegbe := d.Token()
		if _aegbe != nil {
			return _aegbe
		}
		switch _gaaad := _dgdfc.(type) {
		case _g.StartElement:
			switch _gaaad.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _badfb := d.DecodeElement(_bcdc.CBhvr, &_gaaad); _badfb != nil {
					return _badfb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0076\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0076\u004c\u0073\u0074"}:
				_bcdc.TavLst = NewCT_TLTimeAnimateValueList()
				if _cdeg := d.DecodeElement(_bcdc.TavLst, &_gaaad); _cdeg != nil {
					return _cdeg
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _gaaad.Name)
				if _cgdef := d.Skip(); _cgdef != nil {
					return _cgdef
				}
			}
		case _g.EndElement:
			break _aafe
		case _g.CharData:
		}
	}
	return nil
}

func (_gabb *CT_OrientationTransition) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cgff := range start.Attr {
		if _cgff.Name.Local == "\u0064\u0069\u0072" {
			_gabb.DirAttr.UnmarshalXMLAttr(_cgff)
			continue
		}
	}
	for {
		_dae, _edfc := d.Token()
		if _edfc != nil {
			return _ce.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u004frie\u006eta\u0074\u0069\u006f\u006e\u0054\u0072\u0061ns\u0069\u0074\u0069\u006f\u006e\u003a\u0020%\u0073", _edfc)
		}
		if _ccgd, _fagd := _dae.(_g.EndElement); _fagd && _ccgd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_aabec *CT_OleObjectEmbed) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _abbd := range start.Attr {
		if _abbd.Name.Local == "\u0066\u006f\u006c\u006c\u006f\u0077\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065" {
			_aabec.FollowColorSchemeAttr.UnmarshalXMLAttr(_abbd)
			continue
		}
	}
_faec:
	for {
		_dageb, _ccgb := d.Token()
		if _ccgb != nil {
			return _ccgb
		}
		switch _eead := _dageb.(type) {
		case _g.StartElement:
			switch _eead.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aabec.ExtLst = NewCT_ExtensionList()
				if _debcd := d.DecodeElement(_aabec.ExtLst, &_eead); _debcd != nil {
					return _debcd
				}
			default:
				_e.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0045\u006d\u0062\u0065\u0064\u0020\u0025\u0076", _eead.Name)
				if _ebeag := d.Skip(); _ebeag != nil {
					return _ebeag
				}
			}
		case _g.EndElement:
			break _faec
		case _g.CharData:
		}
	}
	return nil
}

func (_affb *CT_SlideMasterIdListEntry) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gedcf := range start.Attr {
		if _gedcf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gedcf.Name.Local == "\u0069\u0064" || _gedcf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gedcf.Name.Local == "\u0069\u0064" {
			_adccc, _bebfba := _gedcf.Value, error(nil)
			if _bebfba != nil {
				return _bebfba
			}
			_affb.RIdAttr = _adccc
			continue
		}
		if _gedcf.Name.Local == "\u0069\u0064" {
			_dbfg, _accb := _d.ParseUint(_gedcf.Value, 10, 32)
			if _accb != nil {
				return _accb
			}
			_bgbf := uint32(_dbfg)
			_affb.IdAttr = &_bgbf
			continue
		}
	}
_ebdd:
	for {
		_eeeg, _eadae := d.Token()
		if _eadae != nil {
			return _eadae
		}
		switch _bgbdb := _eeeg.(type) {
		case _g.StartElement:
			switch _bgbdb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_affb.ExtLst = NewCT_ExtensionList()
				if _dbda := d.DecodeElement(_affb.ExtLst, &_bgbdb); _dbda != nil {
					return _dbda
				}
			default:
				_e.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073t\u0065r\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006et\u0072y\u0020\u0025v", _bgbdb.Name)
				if _fbffd := d.Skip(); _fbffd != nil {
					return _fbffd
				}
			}
		case _g.EndElement:
			break _ebdd
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PresentationProperties and its children, prefixing error messages with path
func (_dgd *CT_PresentationProperties) ValidateWithPath(path string) error {
	if _dgd.HtmlPubPr != nil {
		if _aafd := _dgd.HtmlPubPr.ValidateWithPath(path + "\u002f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u0050\u0072"); _aafd != nil {
			return _aafd
		}
	}
	if _dgd.WebPr != nil {
		if _bafd := _dgd.WebPr.ValidateWithPath(path + "\u002f\u0057\u0065\u0062\u0050\u0072"); _bafd != nil {
			return _bafd
		}
	}
	if _dgd.PrnPr != nil {
		if _ccgf := _dgd.PrnPr.ValidateWithPath(path + "\u002f\u0050\u0072\u006e\u0050\u0072"); _ccgf != nil {
			return _ccgf
		}
	}
	if _dgd.ShowPr != nil {
		if _ddff := _dgd.ShowPr.ValidateWithPath(path + "\u002fS\u0068\u006f\u0077\u0050\u0072"); _ddff != nil {
			return _ddff
		}
	}
	if _dgd.ClrMru != nil {
		if _fegdd := _dgd.ClrMru.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0072\u0075"); _fegdd != nil {
			return _fegdd
		}
	}
	if _dgd.ExtLst != nil {
		if _ggeg := _dgd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ggeg != nil {
			return _ggeg
		}
	}
	return nil
}

func NewCT_TLTemplateList() *CT_TLTemplateList { _dadcd := &CT_TLTemplateList{}; return _dadcd }

func NewCT_StringTag() *CT_StringTag { _egcdf := &CT_StringTag{}; return _egcdf }

func (_bbbb *CT_TLIterateIntervalTime) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _ce.Sprintf("\u0025\u0076", _bbbb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gaeffd ST_PhotoAlbumFrameShape) ValidateWithPath(path string) error {
	switch _gaeffd {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gaeffd))
	}
	return nil
}

func (_afcfb ST_TLBehaviorOverrideType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_eebd := _g.Attr{}
	_eebd.Name = name
	switch _afcfb {
	case ST_TLBehaviorOverrideTypeUnset:
		_eebd.Value = ""
	case ST_TLBehaviorOverrideTypeNormal:
		_eebd.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_TLBehaviorOverrideTypeChildStyle:
		_eebd.Value = "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065"
	}
	return _eebd, nil
}

func (_fagg *CT_TLTimeAnimateValueList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _fagg.Tav != nil {
		_cageb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074a\u0076"}}
		for _, _eadf := range _fagg.Tav {
			e.EncodeElement(_eadf, _cageb)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_ViewTypeUnset            ST_ViewType = 0
	ST_ViewTypeSldView          ST_ViewType = 1
	ST_ViewTypeSldMasterView    ST_ViewType = 2
	ST_ViewTypeNotesView        ST_ViewType = 3
	ST_ViewTypeHandoutView      ST_ViewType = 4
	ST_ViewTypeNotesMasterView  ST_ViewType = 5
	ST_ViewTypeOutlineView      ST_ViewType = 6
	ST_ViewTypeSldSorterView    ST_ViewType = 7
	ST_ViewTypeSldThumbnailView ST_ViewType = 8
)

func (_fbdg *CT_CustomerDataList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bfd:
	for {
		_gac, _gcbe := d.Token()
		if _gcbe != nil {
			return _gcbe
		}
		switch _fdbcf := _gac.(type) {
		case _g.StartElement:
			switch _fdbcf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061"}:
				_accc := NewCT_CustomerData()
				if _efbf := d.DecodeElement(_accc, &_fdbcf); _efbf != nil {
					return _efbf
				}
				_fbdg.CustData = append(_fbdg.CustData, _accc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0067\u0073"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0067\u0073"}:
				_fbdg.Tags = NewCT_TagsData()
				if _gdgc := d.DecodeElement(_fbdg.Tags, &_fdbcf); _gdgc != nil {
					return _gdgc
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0065rD\u0061\u0074\u0061\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _fdbcf.Name)
				if _dede := d.Skip(); _dede != nil {
					return _dede
				}
			}
		case _g.EndElement:
			break _bfd
		case _g.CharData:
		}
	}
	return nil
}

func (_abgaf *EG_ShowType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _abgaf.Present != nil {
		_dfgb := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0070\u0072\u0065\u0073\u0065\u006et"}}
		e.EncodeElement(_abgaf.Present, _dfgb)
	}
	if _abgaf.Browse != nil {
		_baaab := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u0072\u006f\u0077\u0073\u0065"}}
		e.EncodeElement(_abgaf.Browse, _baaab)
	}
	if _abgaf.Kiosk != nil {
		_ecagf := _g.StartElement{Name: _g.Name{Local: "\u0070:\u006b\u0069\u006f\u0073\u006b"}}
		e.EncodeElement(_abgaf.Kiosk, _ecagf)
	}
	return nil
}

// ValidateWithPath validates the CT_TimeNodeList and its children, prefixing error messages with path
func (_ebfg *CT_TimeNodeList) ValidateWithPath(path string) error {
	for _cadc, _cbdadg := range _ebfg.Par {
		if _bgaad := _cbdadg.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0050\u0061\u0072\u005b\u0025\u0064\u005d", path, _cadc)); _bgaad != nil {
			return _bgaad
		}
	}
	for _fgede, _aaabfe := range _ebfg.Seq {
		if _adef := _aaabfe.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0053\u0065\u0071\u005b\u0025\u0064\u005d", path, _fgede)); _adef != nil {
			return _adef
		}
	}
	for _fbbcd, _aagec := range _ebfg.Excl {
		if _bcgbe := _aagec.ValidateWithPath(_ce.Sprintf("%\u0073\u002f\u0045\u0078\u0063\u006c\u005b\u0025\u0064\u005d", path, _fbbcd)); _bcgbe != nil {
			return _bcgbe
		}
	}
	for _dcddf, _aeada := range _ebfg.Anim {
		if _eeaad := _aeada.ValidateWithPath(_ce.Sprintf("%\u0073\u002f\u0041\u006e\u0069\u006d\u005b\u0025\u0064\u005d", path, _dcddf)); _eeaad != nil {
			return _eeaad
		}
	}
	for _bafce, _aefa := range _ebfg.AnimClr {
		if _accbc := _aefa.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u0043\u006cr\u005b\u0025\u0064\u005d", path, _bafce)); _accbc != nil {
			return _accbc
		}
	}
	for _adfa, _fabgd := range _ebfg.AnimEffect {
		if _cbgfb := _fabgd.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063t\u005b\u0025\u0064\u005d", path, _adfa)); _cbgfb != nil {
			return _cbgfb
		}
	}
	for _acffd, _cegae := range _ebfg.AnimMotion {
		if _fbcdc := _cegae.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006fn\u005b\u0025\u0064\u005d", path, _acffd)); _fbcdc != nil {
			return _fbcdc
		}
	}
	for _defba, _dgdb := range _ebfg.AnimRot {
		if _bdbab := _dgdb.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u0052\u006ft\u005b\u0025\u0064\u005d", path, _defba)); _bdbab != nil {
			return _bdbab
		}
	}
	for _cbbb, _gabgd := range _ebfg.AnimScale {
		if _cdba := _gabgd.ValidateWithPath(_ce.Sprintf("\u0025\u0073/\u0041\u006e\u0069m\u0053\u0063\u0061\u006c\u0065\u005b\u0025\u0064\u005d", path, _cbbb)); _cdba != nil {
			return _cdba
		}
	}
	for _ceag, _eede := range _ebfg.Cmd {
		if _gdfe := _eede.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0043\u006d\u0064\u005b\u0025\u0064\u005d", path, _ceag)); _gdfe != nil {
			return _gdfe
		}
	}
	for _fgaa, _cada := range _ebfg.Set {
		if _ffbe := _cada.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0053\u0065\u0074\u005b\u0025\u0064\u005d", path, _fgaa)); _ffbe != nil {
			return _ffbe
		}
	}
	for _fbggcd, _fdce := range _ebfg.Audio {
		if _fbdec := _fdce.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002fA\u0075\u0064\u0069\u006f\u005b\u0025\u0064\u005d", path, _fbggcd)); _fbdec != nil {
			return _fbdec
		}
	}
	for _gcdbb, _gcef := range _ebfg.Video {
		if _gfcbc := _gcef.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002fV\u0069\u0064\u0065\u006f\u005b\u0025\u0064\u005d", path, _gcdbb)); _gfcbc != nil {
			return _gfcbc
		}
	}
	return nil
}

func (_cacded ST_TLAnimateColorSpace) Validate() error { return _cacded.ValidateWithPath("") }

func (_febc *CT_TLAnimateScaleBehavior) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_febc.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _aacaf := range start.Attr {
		if _aacaf.Name.Local == "\u007a\u006f\u006fm\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073" {
			_cbgc, _dgggb := _d.ParseBool(_aacaf.Value)
			if _dgggb != nil {
				return _dgggb
			}
			_febc.ZoomContentsAttr = &_cbgc
			continue
		}
	}
_acgeg:
	for {
		_fgfa, _efaef := d.Token()
		if _efaef != nil {
			return _efaef
		}
		switch _fcddf := _fgfa.(type) {
		case _g.StartElement:
			switch _fcddf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _dbccd := d.DecodeElement(_febc.CBhvr, &_fcddf); _dbccd != nil {
					return _dbccd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0079"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0079"}:
				_febc.By = NewCT_TLPoint()
				if _cgcfa := d.DecodeElement(_febc.By, &_fcddf); _cgcfa != nil {
					return _cgcfa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}:
				_febc.From = NewCT_TLPoint()
				if _dcac := d.DecodeElement(_febc.From, &_fcddf); _dcac != nil {
					return _dcac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_febc.To = NewCT_TLPoint()
				if _ababd := d.DecodeElement(_febc.To, &_fcddf); _ababd != nil {
					return _ababd
				}
			default:
				_e.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0053c\u0061\u006c\u0065\u0042\u0065\u0068\u0061\u0076i\u006fr\u0020\u0025v", _fcddf.Name)
				if _eacef := d.Skip(); _eacef != nil {
					return _eacef
				}
			}
		case _g.EndElement:
			break _acgeg
		case _g.CharData:
		}
	}
	return nil
}

func (_afade ST_TransitionSideDirectionType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_dgagaa := _g.Attr{}
	_dgagaa.Name = name
	switch _afade {
	case ST_TransitionSideDirectionTypeUnset:
		_dgagaa.Value = ""
	case ST_TransitionSideDirectionTypeL:
		_dgagaa.Value = "\u006c"
	case ST_TransitionSideDirectionTypeU:
		_dgagaa.Value = "\u0075"
	case ST_TransitionSideDirectionTypeR:
		_dgagaa.Value = "\u0072"
	case ST_TransitionSideDirectionTypeD:
		_dgagaa.Value = "\u0064"
	}
	return _dgagaa, nil
}

func (_cfbgf ST_TransitionSideDirectionType) String() string {
	switch _cfbgf {
	case 0:
		return ""
	case 1:
		return "\u006c"
	case 2:
		return "\u0075"
	case 3:
		return "\u0072"
	case 4:
		return "\u0064"
	}
	return ""
}

type CT_TagList struct {

	// Programmable Extensibility Tag
	Tag []*CT_StringTag
}

func NewCT_TLBehaviorAttributeNameList() *CT_TLBehaviorAttributeNameList {
	_fggcd := &CT_TLBehaviorAttributeNameList{}
	return _fggcd
}

type CT_TLAnimVariant struct {

	// Boolean Variant
	BoolVal *CT_TLAnimVariantBooleanVal

	// Integer
	IntVal *CT_TLAnimVariantIntegerVal

	// Float Value
	FltVal *CT_TLAnimVariantFloatVal

	// String Value
	StrVal *CT_TLAnimVariantStringVal

	// Color Value
	ClrVal *_f.CT_Color
}

type CT_TransitionStartSoundAction struct {

	// Loop Sound
	LoopAttr *bool

	// Sound
	Snd *_f.CT_EmbeddedWAVAudioFile
}

func (_fdb *CT_BackgroundProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bce := range start.Attr {
		if _bce.Name.Local == "\u0073\u0068\u0061d\u0065\u0054\u006f\u0054\u0069\u0074\u006c\u0065" {
			_ede, _cdbd := _d.ParseBool(_bce.Value)
			if _cdbd != nil {
				return _cdbd
			}
			_fdb.ShadeToTitleAttr = &_ede
			continue
		}
	}
_gea:
	for {
		_ffff, _gad := d.Token()
		if _gad != nil {
			return _gad
		}
		switch _gdb := _ffff.(type) {
		case _g.StartElement:
			switch _gdb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_fdb.NoFill = _f.NewCT_NoFillProperties()
				if _gdc := d.DecodeElement(_fdb.NoFill, &_gdb); _gdc != nil {
					return _gdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_fdb.SolidFill = _f.NewCT_SolidColorFillProperties()
				if _gff := d.DecodeElement(_fdb.SolidFill, &_gdb); _gff != nil {
					return _gff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_fdb.GradFill = _f.NewCT_GradientFillProperties()
				if _fcb := d.DecodeElement(_fdb.GradFill, &_gdb); _fcb != nil {
					return _fcb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_fdb.BlipFill = _f.NewCT_BlipFillProperties()
				if _acdf := d.DecodeElement(_fdb.BlipFill, &_gdb); _acdf != nil {
					return _acdf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_fdb.PattFill = _f.NewCT_PatternFillProperties()
				if _bbe := d.DecodeElement(_fdb.PattFill, &_gdb); _bbe != nil {
					return _bbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_fdb.GrpFill = _f.NewCT_GroupFillProperties()
				if _cab := d.DecodeElement(_fdb.GrpFill, &_gdb); _cab != nil {
					return _cab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_fdb.EffectLst = _f.NewCT_EffectList()
				if _ddd := d.DecodeElement(_fdb.EffectLst, &_gdb); _ddd != nil {
					return _ddd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_fdb.EffectDag = _f.NewCT_EffectContainer()
				if _eac := d.DecodeElement(_fdb.EffectDag, &_gdb); _eac != nil {
					return _eac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdb.ExtLst = NewCT_ExtensionList()
				if _fec := d.DecodeElement(_fdb.ExtLst, &_gdb); _fec != nil {
					return _fec
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006ed\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _gdb.Name)
				if _afe := d.Skip(); _afe != nil {
					return _afe
				}
			}
		case _g.EndElement:
			break _gea
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_SlideLayout() *CT_SlideLayout {
	_gcbg := &CT_SlideLayout{}
	_gcbg.CSld = NewCT_CommonSlideData()
	return _gcbg
}

type CT_TLAnimVariantBooleanVal struct {

	// Value
	ValAttr bool
}

// Validate validates the CT_SlideSyncProperties and its children
func (_eggc *CT_SlideSyncProperties) Validate() error {
	return _eggc.ValidateWithPath("\u0043\u0054\u005f\u0053li\u0064\u0065\u0053\u0079\u006e\u0063\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

// Validate validates the CT_SlideViewProperties and its children
func (_begdb *CT_SlideViewProperties) Validate() error {
	return _begdb.ValidateWithPath("\u0043\u0054\u005f\u0053li\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

// Validate validates the CT_HandoutMasterIdListEntry and its children
func (_beec *CT_HandoutMasterIdListEntry) Validate() error {
	return _beec.ValidateWithPath("C\u0054\u005f\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049d\u004c\u0069\u0073t\u0045n\u0074\u0072\u0079")
}

func (_dcdf *CT_NotesSlide) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dcdf.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_dcdf.ShowMasterSpAttr))})
	}
	if _dcdf.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_dcdf.ShowMasterPhAnimAttr))})
	}
	e.EncodeToken(start)
	_abff := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_dcdf.CSld, _abff)
	if _dcdf.ClrMapOvr != nil {
		_fffbf := _g.StartElement{Name: _g.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_dcdf.ClrMapOvr, _fffbf)
	}
	if _dcdf.ExtLst != nil {
		_eccb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dcdf.ExtLst, _eccb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GroupShapeChoice and its children, prefixing error messages with path
func (_agcd *CT_GroupShapeChoice) ValidateWithPath(path string) error {
	for _bfa, _afgg := range _agcd.Sp {
		if _gddf := _afgg.ValidateWithPath(_ce.Sprintf("\u0025s\u002f\u0053\u0070\u005b\u0025\u0064]", path, _bfa)); _gddf != nil {
			return _gddf
		}
	}
	for _fbcg, _fed := range _agcd.GrpSp {
		if _dadb := _fed.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002fG\u0072\u0070\u0053\u0070\u005b\u0025\u0064\u005d", path, _fbcg)); _dadb != nil {
			return _dadb
		}
	}
	for _fbeb, _fccg := range _agcd.GraphicFrame {
		if _adeb := _fccg.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0047ra\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _fbeb)); _adeb != nil {
			return _adeb
		}
	}
	for _abgbf, _effgd := range _agcd.CxnSp {
		if _fggb := _effgd.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002fC\u0078\u006e\u0053\u0070\u005b\u0025\u0064\u005d", path, _abgbf)); _fggb != nil {
			return _fggb
		}
	}
	for _cegbe, _feaf := range _agcd.Pic {
		if _efca := _feaf.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0063\u005b\u0025\u0064\u005d", path, _cegbe)); _efca != nil {
			return _efca
		}
	}
	for _bgbd, _bde := range _agcd.ContentPart {
		if _baaa := _bde.ValidateWithPath(_ce.Sprintf("\u0025s\u002fC\u006f\u006e\u0074\u0065\u006et\u0050\u0061r\u0074\u005b\u0025\u0064\u005d", path, _bgbd)); _baaa != nil {
			return _baaa
		}
	}
	return nil
}

func (_ecffg *CT_TLTemplateList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _ecffg.Tmpl != nil {
		_fgbg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074\u006d\u0070\u006c"}}
		for _, _fcbcg := range _ecffg.Tmpl {
			e.EncodeElement(_fcbcg, _fgbg)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bfde ST_TLNextActionType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_dacea := _g.Attr{}
	_dacea.Name = name
	switch _bfde {
	case ST_TLNextActionTypeUnset:
		_dacea.Value = ""
	case ST_TLNextActionTypeNone:
		_dacea.Value = "\u006e\u006f\u006e\u0065"
	case ST_TLNextActionTypeSeek:
		_dacea.Value = "\u0073\u0065\u0065\u006b"
	}
	return _dacea, nil
}

func NewCT_GroupShapeNonVisual() *CT_GroupShapeNonVisual {
	_eegb := &CT_GroupShapeNonVisual{}
	_eegb.CNvPr = _f.NewCT_NonVisualDrawingProps()
	_eegb.CNvGrpSpPr = _f.NewCT_NonVisualGroupDrawingShapeProps()
	_eegb.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _eegb
}

// Validate validates the CT_Guide and its children
func (_ebbe *CT_Guide) Validate() error {
	return _ebbe.ValidateWithPath("\u0043\u0054\u005f\u0047\u0075\u0069\u0064\u0065")
}

func (_afdc *CT_NotesTextViewProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_dbebb := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_afdc.CViewPr, _dbebb)
	if _afdc.ExtLst != nil {
		_fcecb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_afdc.ExtLst, _fcecb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_IndexRange and its children
func (_aef *CT_IndexRange) Validate() error {
	return _aef.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078\u0052\u0061\u006e\u0067\u0065")
}

func (_feefg ST_PrintWhat) String() string {
	switch _feefg {
	case 0:
		return ""
	case 1:
		return "\u0073\u006c\u0069\u0064\u0065\u0073"
	case 2:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731"
	case 3:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732"
	case 4:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733"
	case 5:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734"
	case 6:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736"
	case 7:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739"
	case 8:
		return "\u006e\u006f\u0074e\u0073"
	case 9:
		return "\u006fu\u0074\u006c\u0069\u006e\u0065"
	}
	return ""
}

func NewAG_Ole() *AG_Ole { _bf := &AG_Ole{}; return _bf }

func (_dddda *CT_TLAnimateMotionBehavior) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dddda.OriginAttr != ST_TLAnimateMotionBehaviorOriginUnset {
		_gcce, _bgbe := _dddda.OriginAttr.MarshalXMLAttr(_g.Name{Local: "\u006f\u0072\u0069\u0067\u0069\u006e"})
		if _bgbe != nil {
			return _bgbe
		}
		start.Attr = append(start.Attr, _gcce)
	}
	if _dddda.PathAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0070\u0061\u0074\u0068"}, Value: _ce.Sprintf("\u0025\u0076", *_dddda.PathAttr)})
	}
	if _dddda.PathEditModeAttr != ST_TLAnimateMotionPathEditModeUnset {
		_cdaae, _eaebd := _dddda.PathEditModeAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0061\u0074h\u0045\u0064\u0069\u0074\u004d\u006f\u0064\u0065"})
		if _eaebd != nil {
			return _eaebd
		}
		start.Attr = append(start.Attr, _cdaae)
	}
	if _dddda.RAngAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0041\u006e\u0067"}, Value: _ce.Sprintf("\u0025\u0076", *_dddda.RAngAttr)})
	}
	if _dddda.PtsTypesAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0070\u0074\u0073\u0054\u0079\u0070\u0065\u0073"}, Value: _ce.Sprintf("\u0025\u0076", *_dddda.PtsTypesAttr)})
	}
	e.EncodeToken(start)
	_cedbf := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_dddda.CBhvr, _cedbf)
	if _dddda.By != nil {
		_fcbbf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u0079"}}
		e.EncodeElement(_dddda.By, _fcbbf)
	}
	if _dddda.From != nil {
		_efdbg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0066\u0072\u006f\u006d"}}
		e.EncodeElement(_dddda.From, _efdbg)
	}
	if _dddda.To != nil {
		_gfcab := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_dddda.To, _gfcab)
	}
	if _dddda.RCtr != nil {
		_bgfda := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0072\u0043\u0074\u0072"}}
		e.EncodeElement(_dddda.RCtr, _bgfda)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type ST_TLBehaviorTransformType byte

func NewCT_WebProperties() *CT_WebProperties { _dbdb := &CT_WebProperties{}; return _dbdb }

// Validate validates the CT_GuideList and its children
func (_efeea *CT_GuideList) Validate() error {
	return _efeea.ValidateWithPath("\u0043\u0054\u005fG\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074")
}

type ST_TLAnimateMotionPathEditMode byte

func (_egec *CT_TLTimeNodeParallel) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_bebbf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_egec.CTn, _bebbf)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_OleObjectLink struct {

	// Update Linked Embedded Objects Automatically
	UpdateAutomaticAttr *bool
	ExtLst              *CT_ExtensionList
}

func (_fdbd *EG_SlideListChoice) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fdbd.SldAll != nil {
		_egfda := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0041\u006c\u006c"}}
		e.EncodeElement(_fdbd.SldAll, _egfda)
	}
	if _fdbd.SldRg != nil {
		_dafdd := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0073\u006c\u0064\u0052\u0067"}}
		e.EncodeElement(_fdbd.SldRg, _dafdd)
	}
	if _fdbd.CustShow != nil {
		_edcd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		e.EncodeElement(_fdbd.CustShow, _edcd)
	}
	return nil
}

type CT_TLTimeCondition struct {

	// Trigger Event
	EvtAttr ST_TLTriggerEvent

	// Trigger Delay
	DelayAttr *ST_TLTime

	// Target Element Trigger Choice
	TgtEl *CT_TLTimeTargetElement

	// Time Node
	Tn *CT_TLTriggerTimeNodeID

	// Runtime Node Trigger Choice
	Rtn *CT_TLTriggerRuntimeNode
}

func (_cfcbg ST_TLAnimateColorDirection) ValidateWithPath(path string) error {
	switch _cfcbg {
	case 0, 1, 2:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cfcbg))
	}
	return nil
}

func (_ecfdf *PresentationPr) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003ap\u0072\u0065\u0073e\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u0050\u0072"
	return _ecfdf.CT_PresentationProperties.MarshalXML(e, start)
}

func (_faggf ST_Direction) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_addda := _g.Attr{}
	_addda.Name = name
	switch _faggf {
	case ST_DirectionUnset:
		_addda.Value = ""
	case ST_DirectionHorz:
		_addda.Value = "\u0068\u006f\u0072\u007a"
	case ST_DirectionVert:
		_addda.Value = "\u0076\u0065\u0072\u0074"
	}
	return _addda, nil
}

func (_gfbdd *CT_TLTimeConditionList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_ffdbe := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u006f\u006e\u0064"}}
	for _, _ccgbd := range _gfbdd.Cond {
		e.EncodeElement(_ccgbd, _ffdbe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_SlideIdList struct {

	// Slide ID
	SldId []*CT_SlideIdListEntry
}

type CT_ApplicationNonVisualDrawingProps struct {

	// Is a Photo Album
	IsPhotoAttr *bool

	// Is User Drawn
	UserDrawnAttr *bool

	// Placeholder Shape
	Ph            *CT_Placeholder
	AudioCd       *_f.CT_AudioCD
	WavAudioFile  *_f.CT_EmbeddedWAVAudioFile
	AudioFile     *_f.CT_AudioFile
	VideoFile     *_f.CT_VideoFile
	QuickTimeFile *_f.CT_QuickTimeFile

	// Customer Data List
	CustDataLst *CT_CustomerDataList
	ExtLst      *CT_ExtensionList
}

func NewCT_ConnectorNonVisual() *CT_ConnectorNonVisual {
	_acdd := &CT_ConnectorNonVisual{}
	_acdd.CNvPr = _f.NewCT_NonVisualDrawingProps()
	_acdd.CNvCxnSpPr = _f.NewCT_NonVisualConnectorProperties()
	_acdd.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _acdd
}

// Validate validates the CT_SlideSize and its children
func (_ggfgd *CT_SlideSize) Validate() error {
	return _ggfgd.ValidateWithPath("\u0043\u0054\u005fS\u006c\u0069\u0064\u0065\u0053\u0069\u007a\u0065")
}

// Validate validates the CT_StringTag and its children
func (_dbcfe *CT_StringTag) Validate() error {
	return _dbcfe.ValidateWithPath("\u0043\u0054\u005fS\u0074\u0072\u0069\u006e\u0067\u0054\u0061\u0067")
}

func (_dfdge *ST_TLTriggerRuntimeNode) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_dfdge = 0
	case "\u0066\u0069\u0072s\u0074":
		*_dfdge = 1
	case "\u006c\u0061\u0073\u0074":
		*_dfdge = 2
	case "\u0061\u006c\u006c":
		*_dfdge = 3
	}
	return nil
}

func (_gaeec *SldMaster) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "p\u003a\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072"
	return _gaeec.CT_SlideMaster.MarshalXML(e, start)
}

func (_egege *CT_SlideSyncProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "s\u0065\u0072\u0076\u0065\u0072\u0053\u006c\u0064\u0049\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _egege.ServerSldIdAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "s\u0065\u0072\u0076\u0065rS\u006cd\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0054\u0069\u006d\u0065"}, Value: _ce.Sprintf("\u0025\u0076", _egege.ServerSldModifiedTimeAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063l\u0069e\u006e\u0074\u0049\u006e\u0073e\u0072\u0074e\u0064\u0054\u0069\u006d\u0065"}, Value: _ce.Sprintf("\u0025\u0076", _egege.ClientInsertedTimeAttr)})
	e.EncodeToken(start)
	if _egege.ExtLst != nil {
		_dgbgc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_egege.ExtLst, _dgbgc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ggcaa *CmAuthorLst) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ggcaa.CT_CommentAuthorList = *NewCT_CommentAuthorList()
_daege:
	for {
		_deeed, _eedb := d.Token()
		if _eedb != nil {
			return _eedb
		}
		switch _ebgbea := _deeed.(type) {
		case _g.StartElement:
			switch _ebgbea.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}:
				_gbfdc := NewCT_CommentAuthor()
				if _efeac := d.DecodeElement(_gbfdc, &_ebgbea); _efeac != nil {
					return _efeac
				}
				_ggcaa.CmAuthor = append(_ggcaa.CmAuthor, _gbfdc)
			default:
				_e.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074\u0020\u0025\u0076", _ebgbea.Name)
				if _bbbee := d.Skip(); _bbbee != nil {
					return _bbbee
				}
			}
		case _g.EndElement:
			break _daege
		case _g.CharData:
		}
	}
	return nil
}

func (_ffcb *CT_TLBuildDiagram) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dbbf := range start.Attr {
		if _dbbf.Name.Local == "\u0062\u006c\u0064" {
			_ffcb.BldAttr.UnmarshalXMLAttr(_dbbf)
			continue
		}
		if _dbbf.Name.Local == "\u0073\u0070\u0069\u0064" {
			_cgfc, _ebaa := _d.ParseUint(_dbbf.Value, 10, 32)
			if _ebaa != nil {
				return _ebaa
			}
			_cfbfb := uint32(_cgfc)
			_ffcb.SpidAttr = &_cfbfb
			continue
		}
		if _dbbf.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_bddd, _ffcba := _d.ParseUint(_dbbf.Value, 10, 32)
			if _ffcba != nil {
				return _ffcba
			}
			_fggbc := uint32(_bddd)
			_ffcb.GrpIdAttr = &_fggbc
			continue
		}
		if _dbbf.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_bcadb, _bbbg := _d.ParseBool(_dbbf.Value)
			if _bbbg != nil {
				return _bbbg
			}
			_ffcb.UiExpandAttr = &_bcadb
			continue
		}
	}
	for {
		_fbdc, _aeeaf := d.Token()
		if _aeeaf != nil {
			return _ce.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u0044\u0069\u0061\u0067\u0072\u0061\u006d: \u0025\u0073", _aeeaf)
		}
		if _bdef, _fcdfb := _fbdc.(_g.EndElement); _fcdfb && _bdef.Name == start.Name {
			break
		}
	}
	return nil
}

func (_befc ST_TLTimeNodePresetClassType) ValidateWithPath(path string) error {
	switch _befc {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_befc))
	}
	return nil
}

// ValidateWithPath validates the CT_SlideLayoutIdListEntry and its children, prefixing error messages with path
func (_fgadc *CT_SlideLayoutIdListEntry) ValidateWithPath(path string) error {
	if _fgadc.IdAttr != nil {
		if *_fgadc.IdAttr < 2147483648 {
			return _ce.Errorf("\u0025\u0073\u002f\u006d\u002e\u0049\u0064A\u0074\u0074\u0072 \u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003e\u003d\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u0036\u0034\u0038\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fgadc.IdAttr)
		}
	}
	if _fgadc.ExtLst != nil {
		if _gccb := _fgadc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gccb != nil {
			return _gccb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_HeaderFooter and its children, prefixing error messages with path
func (_acec *CT_HeaderFooter) ValidateWithPath(path string) error {
	if _acec.ExtLst != nil {
		if _gfec := _acec.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfec != nil {
			return _gfec
		}
	}
	return nil
}

func (_gffd *CT_TLCommonBehaviorData) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gffd.CTn = NewCT_TLCommonTimeNodeData()
	_gffd.TgtEl = NewCT_TLTimeTargetElement()
	for _, _faea := range start.Attr {
		if _faea.Name.Local == "\u0061\u0064\u0064\u0069\u0074\u0069\u0076\u0065" {
			_gffd.AdditiveAttr.UnmarshalXMLAttr(_faea)
			continue
		}
		if _faea.Name.Local == "\u0061\u0063\u0063\u0075\u006d\u0075\u006c\u0061\u0074\u0065" {
			_gffd.AccumulateAttr.UnmarshalXMLAttr(_faea)
			continue
		}
		if _faea.Name.Local == "\u0078\u0066\u0072\u006d\u0054\u0079\u0070\u0065" {
			_gffd.XfrmTypeAttr.UnmarshalXMLAttr(_faea)
			continue
		}
		if _faea.Name.Local == "\u0066\u0072\u006f\u006d" {
			_fgea, _bddaef := _faea.Value, error(nil)
			if _bddaef != nil {
				return _bddaef
			}
			_gffd.FromAttr = &_fgea
			continue
		}
		if _faea.Name.Local == "\u0074\u006f" {
			_ccedg, _cfcda := _faea.Value, error(nil)
			if _cfcda != nil {
				return _cfcda
			}
			_gffd.ToAttr = &_ccedg
			continue
		}
		if _faea.Name.Local == "\u0062\u0079" {
			_cdafd, _ddbbg := _faea.Value, error(nil)
			if _ddbbg != nil {
				return _ddbbg
			}
			_gffd.ByAttr = &_cdafd
			continue
		}
		if _faea.Name.Local == "\u0072\u0063\u0074\u0078" {
			_gbfdf, _faegb := _faea.Value, error(nil)
			if _faegb != nil {
				return _faegb
			}
			_gffd.RctxAttr = &_gbfdf
			continue
		}
		if _faea.Name.Local == "\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0065" {
			_gffd.OverrideAttr.UnmarshalXMLAttr(_faea)
			continue
		}
	}
_dgage:
	for {
		_ddcag, _gbggf := d.Token()
		if _gbggf != nil {
			return _gbggf
		}
		switch _fada := _ddcag.(type) {
		case _g.StartElement:
			switch _fada.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _agdfc := d.DecodeElement(_gffd.CTn, &_fada); _agdfc != nil {
					return _agdfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
				if _gabea := d.DecodeElement(_gffd.TgtEl, &_fada); _gabea != nil {
					return _gabea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "a\u0074\u0074\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u0074\u0074\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"}:
				_gffd.AttrNameLst = NewCT_TLBehaviorAttributeNameList()
				if _gdbgb := d.DecodeElement(_gffd.AttrNameLst, &_fada); _gdbgb != nil {
					return _gdbgb
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u0042e\u0068\u0061\u0076\u0069\u006f\u0072D\u0061\u0074\u0061 \u0025\u0076", _fada.Name)
				if _fcbeb := d.Skip(); _fcbeb != nil {
					return _fcbeb
				}
			}
		case _g.EndElement:
			break _dgage
		case _g.CharData:
		}
	}
	return nil
}

type CT_Extension struct {

	// Uniform Resource Identifier
	UriAttr string
	Any     []_eb.Any
}

func (_edgfa ST_PhotoAlbumLayout) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_edgfa.String(), start)
}

type ST_PrintWhat byte

func (_dagf ST_TLTime) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _dagf.Uint32 != nil {
		e.EncodeToken(_g.CharData(_ce.Sprintf("\u0025\u0064", *_dagf.Uint32)))
	}
	if _dagf.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		e.EncodeToken(_g.CharData(_dagf.ST_TLTimeIndefinite.String()))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

func (_ebcbb *CT_TLTimeCondition) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ebcbb.EvtAttr != ST_TLTriggerEventUnset {
		_babdg, _fegff := _ebcbb.EvtAttr.MarshalXMLAttr(_g.Name{Local: "\u0065\u0076\u0074"})
		if _fegff != nil {
			return _fegff
		}
		start.Attr = append(start.Attr, _babdg)
	}
	if _ebcbb.DelayAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0065\u006ca\u0079"}, Value: _ce.Sprintf("\u0025\u0076", *_ebcbb.DelayAttr)})
	}
	e.EncodeToken(start)
	if _ebcbb.TgtEl != nil {
		_dagbf := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0074\u0067\u0074\u0045\u006c"}}
		e.EncodeElement(_ebcbb.TgtEl, _dagbf)
	}
	if _ebcbb.Tn != nil {
		_dfea := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074\u006e"}}
		e.EncodeElement(_ebcbb.Tn, _dfea)
	}
	if _ebcbb.Rtn != nil {
		_fafddg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0072t\u006e"}}
		e.EncodeElement(_ebcbb.Rtn, _fafddg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fccba *EG_TopLevelSlide) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_gdaed := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_fccba.ClrMap, _gdaed)
	return nil
}

func (_aged *CT_HeaderFooter) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _aged.SldNumAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u006c\u0064\u004e\u0075\u006d"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_aged.SldNumAttr))})
	}
	if _aged.HdrAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u0064\u0072"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_aged.HdrAttr))})
	}
	if _aged.FtrAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u0074\u0072"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_aged.FtrAttr))})
	}
	if _aged.DtAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0074"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_aged.DtAttr))})
	}
	e.EncodeToken(start)
	if _aged.ExtLst != nil {
		_fbda := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aged.ExtLst, _fbda)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dedeb *ST_TLTriggerEvent) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_dedeb = 0
	case "\u006fn\u0042\u0065\u0067\u0069\u006e":
		*_dedeb = 1
	case "\u006f\u006e\u0045n\u0064":
		*_dedeb = 2
	case "\u0062\u0065\u0067i\u006e":
		*_dedeb = 3
	case "\u0065\u006e\u0064":
		*_dedeb = 4
	case "\u006fn\u0043\u006c\u0069\u0063\u006b":
		*_dedeb = 5
	case "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b":
		*_dedeb = 6
	case "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072":
		*_dedeb = 7
	case "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074":
		*_dedeb = 8
	case "\u006f\u006e\u004e\u0065\u0078\u0074":
		*_dedeb = 9
	case "\u006f\u006e\u0050\u0072\u0065\u0076":
		*_dedeb = 10
	case "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f":
		*_dedeb = 11
	}
	return nil
}

// ValidateWithPath validates the CT_ShapeNonVisual and its children, prefixing error messages with path
func (_bceff *CT_ShapeNonVisual) ValidateWithPath(path string) error {
	if _aacca := _bceff.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _aacca != nil {
		return _aacca
	}
	if _gbadg := _bceff.CNvSpPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0053\u0070\u0050\u0072"); _gbadg != nil {
		return _gbadg
	}
	if _bbcbc := _bceff.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _bbcbc != nil {
		return _bbcbc
	}
	return nil
}

func (_ddbd *CT_EmbeddedFontList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_gdea:
	for {
		_bdbc, _agcef := d.Token()
		if _agcef != nil {
			return _agcef
		}
		switch _dgeb := _bdbc.(type) {
		case _g.StartElement:
			switch _dgeb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074"}:
				_fcce := NewCT_EmbeddedFontListEntry()
				if _cgb := d.DecodeElement(_fcce, &_dgeb); _cgb != nil {
					return _cgb
				}
				_ddbd.EmbeddedFont = append(_ddbd.EmbeddedFont, _fcce)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065dF\u006f\u006e\u0074\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _dgeb.Name)
				if _ceaf := d.Skip(); _ceaf != nil {
					return _ceaf
				}
			}
		case _g.EndElement:
			break _gdea
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Slide and its children
func (_ffaga *CT_Slide) Validate() error {
	return _ffaga.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065")
}

func (_bae *CT_ControlList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cecd:
	for {
		_gadb, _fbfc := d.Token()
		if _fbfc != nil {
			return _fbfc
		}
		switch _edce := _gadb.(type) {
		case _g.StartElement:
			switch _edce.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}:
				_befb := NewCT_Control()
				if _gge := d.DecodeElement(_befb, &_edce); _gge != nil {
					return _gge
				}
				_bae.Control = append(_bae.Control, _befb)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006cL\u0069s\u0074\u0020\u0025\u0076", _edce.Name)
				if _efgf := d.Skip(); _efgf != nil {
					return _efgf
				}
			}
		case _g.EndElement:
			break _cecd
		case _g.CharData:
		}
	}
	return nil
}

func (_daebb *CT_TLTimeAnimateValue) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _daebb.TmAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u006d"}, Value: _ce.Sprintf("\u0025\u0076", *_daebb.TmAttr)})
	}
	if _daebb.FmlaAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u006d\u006c\u0061"}, Value: _ce.Sprintf("\u0025\u0076", *_daebb.FmlaAttr)})
	}
	e.EncodeToken(start)
	if _daebb.Val != nil {
		_dcaac := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0076a\u006c"}}
		e.EncodeElement(_daebb.Val, _dcaac)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fdgf *CT_Rel) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dca := range start.Attr {
		if _dca.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dca.Name.Local == "\u0069\u0064" || _dca.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dca.Name.Local == "\u0069\u0064" {
			_cage, _aabce := _dca.Value, error(nil)
			if _aabce != nil {
				return _aabce
			}
			_fdgf.IdAttr = _cage
			continue
		}
	}
	for {
		_febd, _dfeg := d.Token()
		if _dfeg != nil {
			return _ce.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073", _dfeg)
		}
		if _bcag, _gafgc := _febd.(_g.EndElement); _gafgc && _bcag.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_CustomShowList() *CT_CustomShowList { _fgag := &CT_CustomShowList{}; return _fgag }

// ValidateWithPath validates the CT_TLTimeNodeSequence and its children, prefixing error messages with path
func (_cccef *CT_TLTimeNodeSequence) ValidateWithPath(path string) error {
	if _edff := _cccef.PrevAcAttr.ValidateWithPath(path + "/\u0050\u0072\u0065\u0076\u0041\u0063\u0041\u0074\u0074\u0072"); _edff != nil {
		return _edff
	}
	if _acgb := _cccef.NextAcAttr.ValidateWithPath(path + "/\u004e\u0065\u0078\u0074\u0041\u0063\u0041\u0074\u0074\u0072"); _acgb != nil {
		return _acgb
	}
	if _ecbgf := _cccef.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _ecbgf != nil {
		return _ecbgf
	}
	if _cccef.PrevCondLst != nil {
		if _aagdd := _cccef.PrevCondLst.ValidateWithPath(path + "\u002f\u0050\u0072e\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _aagdd != nil {
			return _aagdd
		}
	}
	if _cccef.NextCondLst != nil {
		if _gfgb := _cccef.NextCondLst.ValidateWithPath(path + "\u002f\u004e\u0065x\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _gfgb != nil {
			return _gfgb
		}
	}
	return nil
}

func (_bcbd *ST_SlideSizeType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_bcbd = 0
	case "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783":
		*_bcbd = 1
	case "\u006c\u0065\u0074\u0074\u0065\u0072":
		*_bcbd = 2
	case "\u0041\u0034":
		*_bcbd = 3
	case "\u0033\u0035\u006d\u006d":
		*_bcbd = 4
	case "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064":
		*_bcbd = 5
	case "\u0062\u0061\u006e\u006e\u0065\u0072":
		*_bcbd = 6
	case "\u0063\u0075\u0073\u0074\u006f\u006d":
		*_bcbd = 7
	case "\u006c\u0065\u0064\u0067\u0065\u0072":
		*_bcbd = 8
	case "\u0041\u0033":
		*_bcbd = 9
	case "\u0042\u0034\u0049S\u004f":
		*_bcbd = 10
	case "\u0042\u0035\u0049S\u004f":
		*_bcbd = 11
	case "\u0042\u0034\u004aI\u0053":
		*_bcbd = 12
	case "\u0042\u0035\u004aI\u0053":
		*_bcbd = 13
	case "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064":
		*_bcbd = 14
	case "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039":
		*_bcbd = 15
	case "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030":
		*_bcbd = 16
	}
	return nil
}

// ValidateWithPath validates the CT_Presentation and its children, prefixing error messages with path
func (_febagd *CT_Presentation) ValidateWithPath(path string) error {
	if _febagd.ServerZoomAttr != nil {
		if _efeaf := _febagd.ServerZoomAttr.ValidateWithPath(path + "\u002fS\u0065r\u0076\u0065\u0072\u005a\u006f\u006f\u006d\u0041\u0074\u0074\u0072"); _efeaf != nil {
			return _efeaf
		}
	}
	if _febagd.BookmarkIdSeedAttr != nil {
		if *_febagd.BookmarkIdSeedAttr < 1 {
			return _ce.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049\u0064\u0053\u0065\u0065\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0031\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_febagd.BookmarkIdSeedAttr)
		}
		if *_febagd.BookmarkIdSeedAttr >= 2147483648 {
			return _ce.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049\u0064S\u0065\u0065\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u003c\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u003648\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_febagd.BookmarkIdSeedAttr)
		}
	}
	if _aebc := _febagd.ConformanceAttr.ValidateWithPath(path + "\u002f\u0043o\u006e\u0066\u006fr\u006d\u0061\u006e\u0063\u0065\u0041\u0074\u0074\u0072"); _aebc != nil {
		return _aebc
	}
	if _febagd.SldMasterIdLst != nil {
		if _ebdca := _febagd.SldMasterIdLst.ValidateWithPath(path + "\u002fS\u006cd\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"); _ebdca != nil {
			return _ebdca
		}
	}
	if _febagd.NotesMasterIdLst != nil {
		if _baefa := _febagd.NotesMasterIdLst.ValidateWithPath(path + "\u002f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"); _baefa != nil {
			return _baefa
		}
	}
	if _febagd.HandoutMasterIdLst != nil {
		if _bggfe := _febagd.HandoutMasterIdLst.ValidateWithPath(path + "\u002f\u0048\u0061\u006edo\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"); _bggfe != nil {
			return _bggfe
		}
	}
	if _febagd.SldIdLst != nil {
		if _egad := _febagd.SldIdLst.ValidateWithPath(path + "\u002fS\u006c\u0064\u0049\u0064\u004c\u0073t"); _egad != nil {
			return _egad
		}
	}
	if _febagd.SldSz != nil {
		if _febb := _febagd.SldSz.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0053\u007a"); _febb != nil {
			return _febb
		}
	}
	if _cfbg := _febagd.NotesSz.ValidateWithPath(path + "\u002f\u004e\u006f\u0074\u0065\u0073\u0053\u007a"); _cfbg != nil {
		return _cfbg
	}
	if _febagd.SmartTags != nil {
		if _dbag := _febagd.SmartTags.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"); _dbag != nil {
			return _dbag
		}
	}
	if _febagd.EmbeddedFontLst != nil {
		if _gcgbg := _febagd.EmbeddedFontLst.ValidateWithPath(path + "\u002f\u0045m\u0062\u0065\u0064d\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"); _gcgbg != nil {
			return _gcgbg
		}
	}
	if _febagd.CustShowLst != nil {
		if _cedf := _febagd.CustShowLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"); _cedf != nil {
			return _cedf
		}
	}
	if _febagd.PhotoAlbum != nil {
		if _gbffa := _febagd.PhotoAlbum.ValidateWithPath(path + "/\u0050\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"); _gbffa != nil {
			return _gbffa
		}
	}
	if _febagd.CustDataLst != nil {
		if _fbfde := _febagd.CustDataLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"); _fbfde != nil {
			return _fbfde
		}
	}
	if _febagd.Kinsoku != nil {
		if _ddfd := _febagd.Kinsoku.ValidateWithPath(path + "\u002f\u004b\u0069\u006e\u0073\u006f\u006b\u0075"); _ddfd != nil {
			return _ddfd
		}
	}
	if _febagd.DefaultTextStyle != nil {
		if _bggb := _febagd.DefaultTextStyle.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0054\u0065\u0078\u0074S\u0074\u0079\u006c\u0065"); _bggb != nil {
			return _bggb
		}
	}
	if _febagd.ModifyVerifier != nil {
		if _gdbe := _febagd.ModifyVerifier.ValidateWithPath(path + "\u002fM\u006fd\u0069\u0066\u0079\u0056\u0065\u0072\u0069\u0066\u0069\u0065\u0072"); _gdbe != nil {
			return _gdbe
		}
	}
	if _febagd.ExtLst != nil {
		if _acbb := _febagd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acbb != nil {
			return _acbb
		}
	}
	return nil
}

const (
	ST_WebScreenSizeUnset     ST_WebScreenSize = 0
	ST_WebScreenSize544x376   ST_WebScreenSize = 1
	ST_WebScreenSize640x480   ST_WebScreenSize = 2
	ST_WebScreenSize720x512   ST_WebScreenSize = 3
	ST_WebScreenSize800x600   ST_WebScreenSize = 4
	ST_WebScreenSize1024x768  ST_WebScreenSize = 5
	ST_WebScreenSize1152x882  ST_WebScreenSize = 6
	ST_WebScreenSize1152x900  ST_WebScreenSize = 7
	ST_WebScreenSize1280x1024 ST_WebScreenSize = 8
	ST_WebScreenSize1600x1200 ST_WebScreenSize = 9
	ST_WebScreenSize1800x1400 ST_WebScreenSize = 10
	ST_WebScreenSize1920x1200 ST_WebScreenSize = 11
)

func NewCT_Slide() *CT_Slide {
	_gabbc := &CT_Slide{}
	_gabbc.CSld = NewCT_CommonSlideData()
	return _gabbc
}

func (_cfdg *CT_CommonSlideViewProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cfdg.SnapToGridAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u006e\u0061\u0070\u0054\u006f\u0047\u0072\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cfdg.SnapToGridAttr))})
	}
	if _cfdg.SnapToObjectsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u006e\u0061\u0070\u0054\u006f\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cfdg.SnapToObjectsAttr))})
	}
	if _cfdg.ShowGuidesAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068\u006f\u0077\u0047\u0075\u0069\u0064\u0065\u0073"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cfdg.ShowGuidesAttr))})
	}
	e.EncodeToken(start)
	_add := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_cfdg.CViewPr, _add)
	if _cfdg.GuideLst != nil {
		_bfb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0067\u0075\u0069\u0064\u0065\u004c\u0073\u0074"}}
		e.EncodeElement(_cfdg.GuideLst, _bfb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_aabced ST_TLTimeNodeFillType) String() string {
	switch _aabced {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u006d\u006f\u0076\u0065"
	case 2:
		return "\u0066\u0072\u0065\u0065\u007a\u0065"
	case 3:
		return "\u0068\u006f\u006c\u0064"
	case 4:
		return "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"
	}
	return ""
}

func (_facff ST_WebScreenSize) ValidateWithPath(path string) error {
	switch _facff {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_facff))
	}
	return nil
}

// Validate validates the CT_EmbeddedFontListEntry and its children
func (_fcbd *CT_EmbeddedFontListEntry) Validate() error {
	return _fcbd.ValidateWithPath("\u0043T\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006fn\u0074\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079")
}

type HandoutMaster struct{ CT_HandoutMaster }

func (_ebegd ST_TLTimeNodeMasterRelation) String() string {
	switch _ebegd {
	case 0:
		return ""
	case 1:
		return "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k"
	case 2:
		return "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k"
	case 3:
		return "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k"
	}
	return ""
}

func (_fddcb ST_IterateType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fddcb.String(), start)
}

func (_ggea *CT_TLOleBuildChart) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ggea.BldAttr != ST_TLOleChartBuildTypeUnset {
		_ebabb, _eaedc := _ggea.BldAttr.MarshalXMLAttr(_g.Name{Local: "\u0062\u006c\u0064"})
		if _eaedc != nil {
			return _eaedc
		}
		start.Attr = append(start.Attr, _ebabb)
	}
	if _ggea.AnimBgAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u006e\u0069\u006d\u0042\u0067"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_ggea.AnimBgAttr))})
	}
	if _ggea.SpidAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_ggea.SpidAttr)})
	}
	if _ggea.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_ggea.GrpIdAttr)})
	}
	if _ggea.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_ggea.UiExpandAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CustomShow and its children, prefixing error messages with path
func (_caae *CT_CustomShow) ValidateWithPath(path string) error {
	if _fcafe := _caae.SldLst.ValidateWithPath(path + "\u002fS\u006c\u0064\u004c\u0073\u0074"); _fcafe != nil {
		return _fcafe
	}
	if _caae.ExtLst != nil {
		if _bbege := _caae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bbege != nil {
			return _bbege
		}
	}
	return nil
}

func (_dge *CT_Background) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dge.BwModeAttr != _f.ST_BlackWhiteModeUnset {
		_bacb, _cdc := _dge.BwModeAttr.MarshalXMLAttr(_g.Name{Local: "\u0061\u003a\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _cdc != nil {
			return _cdc
		}
		start.Attr = append(start.Attr, _bacb)
	}
	e.EncodeToken(start)
	if _dge.BgPr != nil {
		_ccb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u0067\u0050\u0072"}}
		e.EncodeElement(_dge.BgPr, _ccb)
	}
	if _dge.BgRef != nil {
		_efc := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0062\u0067\u0052\u0065\u0066"}}
		e.EncodeElement(_dge.BgRef, _efc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ddbg ST_TLBehaviorAdditiveType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_gbbbg := _g.Attr{}
	_gbbbg.Name = name
	switch _ddbg {
	case ST_TLBehaviorAdditiveTypeUnset:
		_gbbbg.Value = ""
	case ST_TLBehaviorAdditiveTypeBase:
		_gbbbg.Value = "\u0062\u0061\u0073\u0065"
	case ST_TLBehaviorAdditiveTypeSum:
		_gbbbg.Value = "\u0073\u0075\u006d"
	case ST_TLBehaviorAdditiveTypeRepl:
		_gbbbg.Value = "\u0072\u0065\u0070\u006c"
	case ST_TLBehaviorAdditiveTypeMult:
		_gbbbg.Value = "\u006d\u0075\u006c\u0074"
	case ST_TLBehaviorAdditiveTypeNone:
		_gbbbg.Value = "\u006e\u006f\u006e\u0065"
	}
	return _gbbbg, nil
}

func (_aggba *CT_WheelTransition) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _aggba.SpokesAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070\u006f\u006b\u0065\u0073"}, Value: _ce.Sprintf("\u0025\u0076", *_aggba.SpokesAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type ST_TLTimeIndefinite byte

type CT_PresentationProperties struct {

	// HTML Publishing Properties
	HtmlPubPr *CT_HtmlPublishProperties

	// Web Properties
	WebPr *CT_WebProperties

	// Printing Properties
	PrnPr *CT_PrintProperties

	// Presentation-wide Show Properties
	ShowPr *CT_ShowProperties

	// Color MRU
	ClrMru *_f.CT_ColorMRU
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_HeaderFooter and its children
func (_efdb *CT_HeaderFooter) Validate() error {
	return _efdb.ValidateWithPath("\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072")
}

func (_ababdb *ST_TLTimeNodeType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dfgfc, _eeegg := d.Token()
	if _eeegg != nil {
		return _eeegg
	}
	if _dcebd, _ddecb := _dfgfc.(_g.EndElement); _ddecb && _dcebd.Name == start.Name {
		*_ababdb = 1
		return nil
	}
	if _efedbc, _bggag := _dfgfc.(_g.CharData); !_bggag {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfgfc)
	} else {
		switch string(_efedbc) {
		case "":
			*_ababdb = 0
		case "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074":
			*_ababdb = 1
		case "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074":
			*_ababdb = 2
		case "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074":
			*_ababdb = 3
		case "\u006da\u0069\u006e\u0053\u0065\u0071":
			*_ababdb = 4
		case "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071":
			*_ababdb = 5
		case "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072":
			*_ababdb = 6
		case "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p":
			*_ababdb = 7
		case "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070":
			*_ababdb = 8
		case "\u0074\u006d\u0052\u006f\u006f\u0074":
			*_ababdb = 9
		}
	}
	_dfgfc, _eeegg = d.Token()
	if _eeegg != nil {
		return _eeegg
	}
	if _bfgd, _edgag := _dfgfc.(_g.EndElement); _edgag && _bfgd.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfgfc)
}

// Validate validates the CT_ShowInfoBrowse and its children
func (_effdd *CT_ShowInfoBrowse) Validate() error {
	return _effdd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0049\u006e\u0066\u006f\u0042r\u006f\u0077\u0073\u0065")
}

func ParseUnionST_TLTimeAnimateValueTime(s string) (ST_TLTimeAnimateValueTime, error) {
	return ST_TLTimeAnimateValueTime{}, nil
}

// Validate validates the CT_TLCommonBehaviorData and its children
func (_decba *CT_TLCommonBehaviorData) Validate() error {
	return _decba.ValidateWithPath("\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0044\u0061\u0074\u0061")
}

// Validate validates the CT_TLCommonMediaNodeData and its children
func (_ddabd *CT_TLCommonMediaNodeData) Validate() error {
	return _ddabd.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u004d\u0065d\u0069\u0061\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061")
}

type CT_SlideTransition struct {

	// Transition Speed
	SpdAttr ST_TransitionSpeed

	// Advance on Click
	AdvClickAttr *bool

	// Advance after time
	AdvTmAttr *uint32
	Choice    *CT_SlideTransitionChoice

	// Sound Action
	SndAc  *CT_TransitionSoundAction
	ExtLst *CT_ExtensionListModify
}

func (_feca *CT_SplitTransition) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bgcfg := range start.Attr {
		if _bgcfg.Name.Local == "\u006f\u0072\u0069\u0065\u006e\u0074" {
			_feca.OrientAttr.UnmarshalXMLAttr(_bgcfg)
			continue
		}
		if _bgcfg.Name.Local == "\u0064\u0069\u0072" {
			_feca.DirAttr.UnmarshalXMLAttr(_bgcfg)
			continue
		}
	}
	for {
		_bcgb, _aefb := d.Token()
		if _aefb != nil {
			return _ce.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0053\u0070\u006c\u0069\u0074\u0054\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _aefb)
		}
		if _ffbc, _dbbdf := _bcgb.(_g.EndElement); _dbbdf && _ffbc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_bbbe *CT_TLByAnimateColorTransform) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _bbbe.Rgb != nil {
		_ggbga := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0072g\u0062"}}
		e.EncodeElement(_bbbe.Rgb, _ggbga)
	}
	if _bbbe.Hsl != nil {
		_fefead := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0068s\u006c"}}
		e.EncodeElement(_bbbe.Hsl, _fefead)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cdfaa ST_SlideLayoutType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_cdfaa.String(), start)
}

type CT_TLAnimateMotionBehavior struct {

	// Origin
	OriginAttr ST_TLAnimateMotionBehaviorOrigin

	// Path
	PathAttr *string

	// Path Edit Mode
	PathEditModeAttr ST_TLAnimateMotionPathEditMode

	// Relative Angle
	RAngAttr *int32

	// Points Types
	PtsTypesAttr *string
	CBhvr        *CT_TLCommonBehaviorData
	By           *CT_TLPoint

	// From
	From *CT_TLPoint
	To   *CT_TLPoint

	// Rotation Center
	RCtr *CT_TLPoint
}

func NewCT_BackgroundProperties() *CT_BackgroundProperties {
	_bddf := &CT_BackgroundProperties{}
	return _bddf
}

func (_cbgbf *ST_SplitterBarState) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_beabbg, _bdcce := d.Token()
	if _bdcce != nil {
		return _bdcce
	}
	if _ecgdee, _bbbeg := _beabbg.(_g.EndElement); _bbbeg && _ecgdee.Name == start.Name {
		*_cbgbf = 1
		return nil
	}
	if _gdagf, _gebae := _beabbg.(_g.CharData); !_gebae {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _beabbg)
	} else {
		switch string(_gdagf) {
		case "":
			*_cbgbf = 0
		case "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d":
			*_cbgbf = 1
		case "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064":
			*_cbgbf = 2
		case "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d":
			*_cbgbf = 3
		}
	}
	_beabbg, _bdcce = d.Token()
	if _bdcce != nil {
		return _bdcce
	}
	if _agba, _ebgda := _beabbg.(_g.EndElement); _ebgda && _agba.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _beabbg)
}

func (_aedaf *CT_SlideSize) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u0078"}, Value: _ce.Sprintf("\u0025\u0076", _aedaf.CxAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u0079"}, Value: _ce.Sprintf("\u0025\u0076", _aedaf.CyAttr)})
	if _aedaf.TypeAttr != ST_SlideSizeTypeUnset {
		_dcdddf, _egfgg := _aedaf.TypeAttr.MarshalXMLAttr(_g.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _egfgg != nil {
			return _egfgg
		}
		start.Attr = append(start.Attr, _dcdddf)
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_abaca ST_TransitionSpeed) String() string {
	switch _abaca {
	case 0:
		return ""
	case 1:
		return "\u0073\u006c\u006f\u0077"
	case 2:
		return "\u006d\u0065\u0064"
	case 3:
		return "\u0066\u0061\u0073\u0074"
	}
	return ""
}

func (_cffeg *CT_SlideSorterViewProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cffeg.ShowFormattingAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cffeg.ShowFormattingAttr))})
	}
	e.EncodeToken(start)
	_gbbdc := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_cffeg.CViewPr, _gbbdc)
	if _cffeg.ExtLst != nil {
		_aeadg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cffeg.ExtLst, _aeadg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_facc *CT_Kinsoku) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ggbf := range start.Attr {
		if _ggbf.Name.Local == "\u006c\u0061\u006e\u0067" {
			_abaga, _ffcf := _ggbf.Value, error(nil)
			if _ffcf != nil {
				return _ffcf
			}
			_facc.LangAttr = &_abaga
			continue
		}
		if _ggbf.Name.Local == "\u0069\u006e\u0076a\u006c\u0053\u0074\u0043\u0068\u0061\u0072\u0073" {
			_bge, _edcad := _ggbf.Value, error(nil)
			if _edcad != nil {
				return _edcad
			}
			_facc.InvalStCharsAttr = _bge
			continue
		}
		if _ggbf.Name.Local == "\u0069\u006e\u0076\u0061\u006c\u0045\u006e\u0064\u0043\u0068\u0061\u0072\u0073" {
			_fbbb, _bdgc := _ggbf.Value, error(nil)
			if _bdgc != nil {
				return _bdgc
			}
			_facc.InvalEndCharsAttr = _fbbb
			continue
		}
	}
	for {
		_affg, _gcgbb := d.Token()
		if _gcgbb != nil {
			return _ce.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004b\u0069\u006e\u0073\u006f\u006b\u0075\u003a\u0020%\u0073", _gcgbb)
		}
		if _cabd, _cafc := _affg.(_g.EndElement); _cafc && _cabd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_beed *ST_IterateType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_beed = 0
	case "\u0065\u006c":
		*_beed = 1
	case "\u0077\u0064":
		*_beed = 2
	case "\u006c\u0074":
		*_beed = 3
	}
	return nil
}

type CT_NormalViewPortion struct {

	// Normal View Dimension Size
	SzAttr _f.ST_PositiveFixedPercentage

	// Auto Adjust Normal View
	AutoAdjustAttr *bool
}

type CT_TLOleBuildChart struct {

	// Build
	BldAttr ST_TLOleChartBuildType

	// Animate Background
	AnimBgAttr   *bool
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

func (_bfbba *ST_TransitionInOutDirectionType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_bfbba = 0
	case "\u006f\u0075\u0074":
		*_bfbba = 1
	case "\u0069\u006e":
		*_bfbba = 2
	}
	return nil
}

func (_aacdd *CT_SlideSize) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_aacdd.CxAttr = 914400
	_aacdd.CyAttr = 914400
	for _, _dadc := range start.Attr {
		if _dadc.Name.Local == "\u0063\u0078" {
			_gddc, _ccbe := _d.ParseInt(_dadc.Value, 10, 32)
			if _ccbe != nil {
				return _ccbe
			}
			_aacdd.CxAttr = int32(_gddc)
			continue
		}
		if _dadc.Name.Local == "\u0063\u0079" {
			_ecbcc, _eadcg := _d.ParseInt(_dadc.Value, 10, 32)
			if _eadcg != nil {
				return _eadcg
			}
			_aacdd.CyAttr = int32(_ecbcc)
			continue
		}
		if _dadc.Name.Local == "\u0074\u0079\u0070\u0065" {
			_aacdd.TypeAttr.UnmarshalXMLAttr(_dadc)
			continue
		}
	}
	for {
		_bfadc, _cacf := d.Token()
		if _cacf != nil {
			return _ce.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u006ci\u0064\u0065\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0073", _cacf)
		}
		if _afdcg, _gdga := _bfadc.(_g.EndElement); _gdga && _afdcg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideViewProperties and its children, prefixing error messages with path
func (_afda *CT_SlideViewProperties) ValidateWithPath(path string) error {
	if _degff := _afda.CSldViewPr.ValidateWithPath(path + "/\u0043\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"); _degff != nil {
		return _degff
	}
	if _afda.ExtLst != nil {
		if _gbfge := _afda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbfge != nil {
			return _gbfge
		}
	}
	return nil
}

func (_bffgf ST_PlaceholderType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_edfag := _g.Attr{}
	_edfag.Name = name
	switch _bffgf {
	case ST_PlaceholderTypeUnset:
		_edfag.Value = ""
	case ST_PlaceholderTypeTitle:
		_edfag.Value = "\u0074\u0069\u0074l\u0065"
	case ST_PlaceholderTypeBody:
		_edfag.Value = "\u0062\u006f\u0064\u0079"
	case ST_PlaceholderTypeCtrTitle:
		_edfag.Value = "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065"
	case ST_PlaceholderTypeSubTitle:
		_edfag.Value = "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065"
	case ST_PlaceholderTypeDt:
		_edfag.Value = "\u0064\u0074"
	case ST_PlaceholderTypeSldNum:
		_edfag.Value = "\u0073\u006c\u0064\u004e\u0075\u006d"
	case ST_PlaceholderTypeFtr:
		_edfag.Value = "\u0066\u0074\u0072"
	case ST_PlaceholderTypeHdr:
		_edfag.Value = "\u0068\u0064\u0072"
	case ST_PlaceholderTypeObj:
		_edfag.Value = "\u006f\u0062\u006a"
	case ST_PlaceholderTypeChart:
		_edfag.Value = "\u0063\u0068\u0061r\u0074"
	case ST_PlaceholderTypeTbl:
		_edfag.Value = "\u0074\u0062\u006c"
	case ST_PlaceholderTypeClipArt:
		_edfag.Value = "\u0063l\u0069\u0070\u0041\u0072\u0074"
	case ST_PlaceholderTypeDgm:
		_edfag.Value = "\u0064\u0067\u006d"
	case ST_PlaceholderTypeMedia:
		_edfag.Value = "\u006d\u0065\u0064i\u0061"
	case ST_PlaceholderTypeSldImg:
		_edfag.Value = "\u0073\u006c\u0064\u0049\u006d\u0067"
	case ST_PlaceholderTypePic:
		_edfag.Value = "\u0070\u0069\u0063"
	}
	return _edfag, nil
}

type CT_CommentList struct {

	// Comment
	Cm []*CT_Comment
}

// Validate validates the CT_SlideSorterViewProperties and its children
func (_efdf *CT_SlideSorterViewProperties) Validate() error {
	return _efdf.ValidateWithPath("\u0043\u0054\u005f\u0053l\u0069\u0064\u0065\u0053\u006f\u0072\u0074\u0065\u0072\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073")
}

func (_cgcfag *CT_TLCommonMediaNodeData) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cgcfag.VolAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u006f\u006c"}, Value: _ce.Sprintf("\u0025\u0076", *_cgcfag.VolAttr)})
	}
	if _cgcfag.MuteAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0075\u0074\u0065"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cgcfag.MuteAttr))})
	}
	if _cgcfag.NumSldAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0075\u006d\u0053\u006c\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_cgcfag.NumSldAttr)})
	}
	if _cgcfag.ShowWhenStoppedAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073h\u006fw\u0057\u0068\u0065\u006e\u0053\u0074\u006f\u0070\u0070\u0065\u0064"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cgcfag.ShowWhenStoppedAttr))})
	}
	e.EncodeToken(start)
	_bfbab := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_cgcfag.CTn, _bfbab)
	_debea := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0074\u0067\u0074\u0045\u006c"}}
	e.EncodeElement(_cgcfag.TgtEl, _debea)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_TLTriggerRuntimeNode struct {

	// Value
	ValAttr ST_TLTriggerRuntimeNode
}

func (_ffeg *CT_PresentationProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _ffeg.HtmlPubPr != nil {
		_gbcg := _g.StartElement{Name: _g.Name{Local: "p\u003a\u0068\u0074\u006d\u006c\u0050\u0075\u0062\u0050\u0072"}}
		e.EncodeElement(_ffeg.HtmlPubPr, _gbcg)
	}
	if _ffeg.WebPr != nil {
		_bfge := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0077\u0065\u0062\u0050\u0072"}}
		e.EncodeElement(_ffeg.WebPr, _bfge)
	}
	if _ffeg.PrnPr != nil {
		_geaec := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0070\u0072\u006e\u0050\u0072"}}
		e.EncodeElement(_ffeg.PrnPr, _geaec)
	}
	if _ffeg.ShowPr != nil {
		_gdgcc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u0068\u006f\u0077\u0050\u0072"}}
		e.EncodeElement(_ffeg.ShowPr, _gdgcc)
	}
	if _ffeg.ClrMru != nil {
		_cgcd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0072\u0075"}}
		e.EncodeElement(_ffeg.ClrMru, _cgcd)
	}
	if _ffeg.ExtLst != nil {
		_ecbe := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ffeg.ExtLst, _ecbe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_EmbeddedFontList and its children, prefixing error messages with path
func (_egeg *CT_EmbeddedFontList) ValidateWithPath(path string) error {
	for _aad, _bdbf := range _egeg.EmbeddedFont {
		if _cbbc := _bdbf.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0045mb\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u005b\u0025\u0064\u005d", path, _aad)); _cbbc != nil {
			return _cbbc
		}
	}
	return nil
}

// Validate validates the CT_TLAnimateBehavior and its children
func (_abaab *CT_TLAnimateBehavior) Validate() error {
	return _abaab.ValidateWithPath("C\u0054_\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0042\u0065\u0068\u0061vi\u006f\u0072")
}

// ValidateWithPath validates the CT_TLAnimateMotionBehavior and its children, prefixing error messages with path
func (_bbade *CT_TLAnimateMotionBehavior) ValidateWithPath(path string) error {
	if _baee := _bbade.OriginAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0067\u0069\u006e\u0041\u0074\u0074\u0072"); _baee != nil {
		return _baee
	}
	if _ebbd := _bbade.PathEditModeAttr.ValidateWithPath(path + "\u002f\u0050\u0061\u0074\u0068\u0045\u0064\u0069\u0074\u004d\u006f\u0064e\u0041\u0074\u0074\u0072"); _ebbd != nil {
		return _ebbd
	}
	if _feac := _bbade.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _feac != nil {
		return _feac
	}
	if _bbade.By != nil {
		if _fcace := _bbade.By.ValidateWithPath(path + "\u002f\u0042\u0079"); _fcace != nil {
			return _fcace
		}
	}
	if _bbade.From != nil {
		if _baace := _bbade.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _baace != nil {
			return _baace
		}
	}
	if _bbade.To != nil {
		if _acfa := _bbade.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _acfa != nil {
			return _acfa
		}
	}
	if _bbade.RCtr != nil {
		if _gfbg := _bbade.RCtr.ValidateWithPath(path + "\u002f\u0052\u0043t\u0072"); _gfbg != nil {
			return _gfbg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLAnimateScaleBehavior and its children, prefixing error messages with path
func (_abade *CT_TLAnimateScaleBehavior) ValidateWithPath(path string) error {
	if _bfcbe := _abade.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _bfcbe != nil {
		return _bfcbe
	}
	if _abade.By != nil {
		if _dcab := _abade.By.ValidateWithPath(path + "\u002f\u0042\u0079"); _dcab != nil {
			return _dcab
		}
	}
	if _abade.From != nil {
		if _gbfa := _abade.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _gbfa != nil {
			return _gbfa
		}
	}
	if _abade.To != nil {
		if _fageg := _abade.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _fageg != nil {
			return _fageg
		}
	}
	return nil
}

// Validate validates the CT_TLTimeTargetElement and its children
func (_cebda *CT_TLTimeTargetElement) Validate() error {
	return _cebda.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074")
}

func (_gcacf ST_TLAnimateMotionPathEditMode) Validate() error { return _gcacf.ValidateWithPath("") }

func NewCT_Rel() *CT_Rel { _cbcag := &CT_Rel{}; return _cbcag }

func NewCT_TLAnimVariantFloatVal() *CT_TLAnimVariantFloatVal {
	_abgf := &CT_TLAnimVariantFloatVal{}
	return _abgf
}

// Validate validates the CT_TLTimeNodeSequence and its children
func (_cceg *CT_TLTimeNodeSequence) Validate() error {
	return _cceg.ValidateWithPath("C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0053e\u0071\u0075\u0065\u006e\u0063\u0065")
}

func (_cegg *CT_TLTimeTargetElement) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dcgb:
	for {
		_aecc, _abdag := d.Token()
		if _abdag != nil {
			return _abdag
		}
		switch _ceeg := _aecc.(type) {
		case _g.StartElement:
			switch _ceeg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0054\u0067\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0054\u0067\u0074"}:
				_cegg.SldTgt = NewCT_Empty()
				if _eeafb := d.DecodeElement(_cegg.SldTgt, &_ceeg); _eeafb != nil {
					return _eeafb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064\u0054\u0067\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064\u0054\u0067\u0074"}:
				_cegg.SndTgt = _f.NewCT_EmbeddedWAVAudioFile()
				if _bdae := d.DecodeElement(_cegg.SndTgt, &_ceeg); _bdae != nil {
					return _bdae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0054g\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0054g\u0074"}:
				_cegg.SpTgt = NewCT_TLShapeTargetElement()
				if _fcbdd := d.DecodeElement(_cegg.SpTgt, &_ceeg); _fcbdd != nil {
					return _fcbdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u006e\u006b\u0054\u0067\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u006b\u0054\u0067\u0074"}:
				_cegg.InkTgt = NewCT_TLSubShapeId()
				if _gddd := d.DecodeElement(_cegg.InkTgt, &_ceeg); _gddd != nil {
					return _gddd
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0069m\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _ceeg.Name)
				if _gbbc := d.Skip(); _gbbc != nil {
					return _gbbc
				}
			}
		case _g.EndElement:
			break _dcgb
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_BackgroundProperties and its children
func (_bga *CT_BackgroundProperties) Validate() error {
	return _bga.ValidateWithPath("\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_OutlineViewSlideEntry struct {
	IdAttr string

	// Collapsed
	CollapseAttr *bool
}

func (_ceccf *ST_TLPreviousActionType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dgfcf, _fedcc := d.Token()
	if _fedcc != nil {
		return _fedcc
	}
	if _fecd, _bffga := _dgfcf.(_g.EndElement); _bffga && _fecd.Name == start.Name {
		*_ceccf = 1
		return nil
	}
	if _gcdab, _bggfa := _dgfcf.(_g.CharData); !_bggfa {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgfcf)
	} else {
		switch string(_gcdab) {
		case "":
			*_ceccf = 0
		case "\u006e\u006f\u006e\u0065":
			*_ceccf = 1
		case "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d":
			*_ceccf = 2
		}
	}
	_dgfcf, _fedcc = d.Token()
	if _fedcc != nil {
		return _fedcc
	}
	if _adefc, _egadg := _dgfcf.(_g.EndElement); _egadg && _adefc.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgfcf)
}

type PresentationPr struct{ CT_PresentationProperties }

type CT_HtmlPublishProperties struct {

	// Show Speaker Notes
	ShowSpeakerNotesAttr *bool

	// Target Output Profile
	TargetAttr *string

	// HTML Output Title
	TitleAttr *string
	IdAttr    string

	// All Slides
	SldAll *CT_Empty

	// Slide Range
	SldRg *CT_IndexRange

	// Custom Show
	CustShow *CT_CustomShowId
	ExtLst   *CT_ExtensionList
}

func NewCT_SlideSize() *CT_SlideSize {
	_degbb := &CT_SlideSize{}
	_degbb.CxAttr = 914400
	_degbb.CyAttr = 914400
	return _degbb
}

// ValidateWithPath validates the CT_CommonSlideViewProperties and its children, prefixing error messages with path
func (_caeb *CT_CommonSlideViewProperties) ValidateWithPath(path string) error {
	if _fggf := _caeb.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _fggf != nil {
		return _fggf
	}
	if _caeb.GuideLst != nil {
		if _aacb := _caeb.GuideLst.ValidateWithPath(path + "\u002fG\u0075\u0069\u0064\u0065\u004c\u0073t"); _aacb != nil {
			return _aacb
		}
	}
	return nil
}

func (_acfaa ST_TLDiagramBuildType) String() string {
	switch _acfaa {
	case 0:
		return ""
	case 1:
		return "\u0077\u0068\u006fl\u0065"
	case 2:
		return "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case 3:
		return "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068"
	case 4:
		return "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case 5:
		return "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c"
	case 6:
		return "\u0063\u0077"
	case 7:
		return "\u0063\u0077\u0049\u006e"
	case 8:
		return "\u0063\u0077\u004fu\u0074"
	case 9:
		return "\u0063\u0063\u0077"
	case 10:
		return "\u0063\u0063\u0077I\u006e"
	case 11:
		return "\u0063\u0063\u0077\u004f\u0075\u0074"
	case 12:
		return "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067"
	case 13:
		return "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg"
	case 14:
		return "\u0075\u0070"
	case 15:
		return "\u0064\u006f\u0077\u006e"
	case 16:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case 17:
		return "\u0063\u0075\u0073\u0074"
	}
	return ""
}

func NewCT_NotesMasterIdList() *CT_NotesMasterIdList { _efaf := &CT_NotesMasterIdList{}; return _efaf }

// Validate validates the CT_SlideIdListEntry and its children
func (_ddecc *CT_SlideIdListEntry) Validate() error {
	return _ddecc.ValidateWithPath("\u0043\u0054\u005f\u0053li\u0064\u0065\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079")
}

// Validate validates the CT_SmartTags and its children
func (_fddca *CT_SmartTags) Validate() error {
	return _fddca.ValidateWithPath("\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073")
}

// ValidateWithPath validates the PresentationPr and its children, prefixing error messages with path
func (_aggfa *PresentationPr) ValidateWithPath(path string) error {
	if _gcbbcd := _aggfa.CT_PresentationProperties.ValidateWithPath(path); _gcbbcd != nil {
		return _gcbbcd
	}
	return nil
}

const (
	ST_PlaceholderSizeUnset   ST_PlaceholderSize = 0
	ST_PlaceholderSizeFull    ST_PlaceholderSize = 1
	ST_PlaceholderSizeHalf    ST_PlaceholderSize = 2
	ST_PlaceholderSizeQuarter ST_PlaceholderSize = 3
)

func (_acdcc *CT_SlideIdList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dbcee:
	for {
		_ccef, _fbae := d.Token()
		if _fbae != nil {
			return _fbae
		}
		switch _gfedf := _ccef.(type) {
		case _g.StartElement:
			switch _gfedf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064I\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064I\u0064"}:
				_cbdd := NewCT_SlideIdListEntry()
				if _gacad := d.DecodeElement(_cbdd, &_gfedf); _gacad != nil {
					return _gacad
				}
				_acdcc.SldId = append(_acdcc.SldId, _cbdd)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049\u0064L\u0069s\u0074\u0020\u0025\u0076", _gfedf.Name)
				if _gadce := d.Skip(); _gadce != nil {
					return _gadce
				}
			}
		case _g.EndElement:
			break _dbcee
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the Notes and its children
func (_ebgee *Notes) Validate() error { return _ebgee.ValidateWithPath("\u004e\u006f\u0074e\u0073") }

func (_egac ST_TransitionSpeed) Validate() error { return _egac.ValidateWithPath("") }

// Validate validates the CT_SlideLayoutIdListEntry and its children
func (_cadf *CT_SlideLayoutIdListEntry) Validate() error {
	return _cadf.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069d\u0065\u004c\u0061\u0079\u006fu\u0074I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y")
}

func NewCT_TLTimeTargetElement() *CT_TLTimeTargetElement {
	_fddg := &CT_TLTimeTargetElement{}
	return _fddg
}

func (_deeca *CT_TLTriggerRuntimeNode) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_deeca.ValAttr = ST_TLTriggerRuntimeNode(1)
	for _, _gaebd := range start.Attr {
		if _gaebd.Name.Local == "\u0076\u0061\u006c" {
			_deeca.ValAttr.UnmarshalXMLAttr(_gaebd)
			continue
		}
	}
	for {
		_bcac, _cdfdc := d.Token()
		if _cdfdc != nil {
			return _ce.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u004c\u0054r\u0069\u0067\u0067\u0065\u0072\u0052\u0075n\u0074\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u003a\u0020%\u0073", _cdfdc)
		}
		if _gacgd, _begcc := _bcac.(_g.EndElement); _begcc && _gacgd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fdfgb ST_PlaceholderSize) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fdfgb.String(), start)
}

func (_addgb *CT_TLByHslColorTransform) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068"}, Value: _ce.Sprintf("\u0025\u0076", _addgb.HAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073"}, Value: _ce.Sprintf("\u0025\u0076", _addgb.SAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c"}, Value: _ce.Sprintf("\u0025\u0076", _addgb.LAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type Presentation struct{ CT_Presentation }

func (_ccba *CT_NotesMaster) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_gceg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_ccba.CSld, _gceg)
	_gfcc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_ccba.ClrMap, _gfcc)
	if _ccba.Hf != nil {
		_gcbf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_ccba.Hf, _gcbf)
	}
	if _ccba.NotesStyle != nil {
		_eafd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u006eo\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_ccba.NotesStyle, _eafd)
	}
	if _ccba.ExtLst != nil {
		_aeee := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ccba.ExtLst, _aeee)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_GraphicalObjectFrameNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_f.CT_NonVisualDrawingProps

	// Non-Visual Graphic Frame Drawing Properties
	CNvGraphicFramePr *_f.CT_NonVisualGraphicFrameProperties

	// Application Non-Visual Drawing Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

type ST_TLNextActionType byte

func (_cedbd *ST_PhotoAlbumLayout) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fdaggb, _gfagb := d.Token()
	if _gfagb != nil {
		return _gfagb
	}
	if _gcgff, _defbd := _fdaggb.(_g.EndElement); _defbd && _gcgff.Name == start.Name {
		*_cedbd = 1
		return nil
	}
	if _aeafc, _aaegb := _fdaggb.(_g.CharData); !_aaegb {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fdaggb)
	} else {
		switch string(_aeafc) {
		case "":
			*_cedbd = 0
		case "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065":
			*_cedbd = 1
		case "\u0031\u0070\u0069\u0063":
			*_cedbd = 2
		case "\u0032\u0070\u0069\u0063":
			*_cedbd = 3
		case "\u0034\u0070\u0069\u0063":
			*_cedbd = 4
		case "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce":
			*_cedbd = 5
		case "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce":
			*_cedbd = 6
		case "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce":
			*_cedbd = 7
		}
	}
	_fdaggb, _gfagb = d.Token()
	if _gfagb != nil {
		return _gfagb
	}
	if _dgfgg, _bdbbe := _fdaggb.(_g.EndElement); _bdbbe && _dgfgg.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fdaggb)
}

func (_aegac *CT_TLBuildParagraph) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _aegac.BuildAttr != ST_TLParaBuildTypeUnset {
		_gbdbe, _bgcc := _aegac.BuildAttr.MarshalXMLAttr(_g.Name{Local: "\u0062\u0075\u0069l\u0064"})
		if _bgcc != nil {
			return _bgcc
		}
		start.Attr = append(start.Attr, _gbdbe)
	}
	if _aegac.BldLvlAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u006c\u0064\u004c\u0076\u006c"}, Value: _ce.Sprintf("\u0025\u0076", *_aegac.BldLvlAttr)})
	}
	if _aegac.AnimBgAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u006e\u0069\u006d\u0042\u0067"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_aegac.AnimBgAttr))})
	}
	if _aegac.AutoUpdateAnimBgAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u0075t\u006f\u0055\u0070d\u0061\u0074\u0065\u0041\u006e\u0069\u006d\u0042\u0067"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_aegac.AutoUpdateAnimBgAttr))})
	}
	if _aegac.RevAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0065\u0076"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_aegac.RevAttr))})
	}
	if _aegac.AdvAutoAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061d\u0076\u0041\u0075\u0074\u006f"}, Value: _ce.Sprintf("\u0025\u0076", *_aegac.AdvAutoAttr)})
	}
	if _aegac.SpidAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_aegac.SpidAttr)})
	}
	if _aegac.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_aegac.GrpIdAttr)})
	}
	if _aegac.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_aegac.UiExpandAttr))})
	}
	e.EncodeToken(start)
	if _aegac.TmplLst != nil {
		_acdeg := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0074\u006d\u0070\u006c\u004c\u0073t"}}
		e.EncodeElement(_aegac.TmplLst, _acdeg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_HandoutMasterIdListEntry struct {
	IdAttr string
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_PresentationProperties and its children
func (_gccf *CT_PresentationProperties) Validate() error {
	return _gccf.ValidateWithPath("\u0043T\u005f\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074i\u006fn\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s")
}

func (_aaefb *CT_TLTriggerRuntimeNode) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_edaac, _badaf := _aaefb.ValAttr.MarshalXMLAttr(_g.Name{Local: "\u0076\u0061\u006c"})
	if _badaf != nil {
		return _badaf
	}
	start.Attr = append(start.Attr, _edaac)
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_eegbf ST_TLOleChartBuildType) ValidateWithPath(path string) error {
	switch _eegbf {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eegbf))
	}
	return nil
}

func (_fgagc ST_TLAnimateColorDirection) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fgagc.String(), start)
}

type ST_TLCommandType byte

func (_gaeea *ST_TLAnimateEffectTransition) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_gaeea = 0
	case "\u0069\u006e":
		*_gaeea = 1
	case "\u006f\u0075\u0074":
		*_gaeea = 2
	case "\u006e\u006f\u006e\u0065":
		*_gaeea = 3
	}
	return nil
}

func (_caee *CT_SlideSyncProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _edgf := range start.Attr {
		if _edgf.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0053\u006c\u0064\u0049\u0064" {
			_bdbg, _gaee := _edgf.Value, error(nil)
			if _gaee != nil {
				return _gaee
			}
			_caee.ServerSldIdAttr = _bdbg
			continue
		}
		if _edgf.Name.Local == "s\u0065\u0072\u0076\u0065rS\u006cd\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0054\u0069\u006d\u0065" {
			_decbd, _cfeb := ParseStdlibTime(_edgf.Value)
			if _cfeb != nil {
				return _cfeb
			}
			_caee.ServerSldModifiedTimeAttr = _decbd
			continue
		}
		if _edgf.Name.Local == "\u0063l\u0069e\u006e\u0074\u0049\u006e\u0073e\u0072\u0074e\u0064\u0054\u0069\u006d\u0065" {
			_ebdbf, _affba := ParseStdlibTime(_edgf.Value)
			if _affba != nil {
				return _affba
			}
			_caee.ClientInsertedTimeAttr = _ebdbf
			continue
		}
	}
_agaff:
	for {
		_ggbg, _eebag := d.Token()
		if _eebag != nil {
			return _eebag
		}
		switch _cbcagb := _ggbg.(type) {
		case _g.StartElement:
			switch _cbcagb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_caee.ExtLst = NewCT_ExtensionList()
				if _bcfd := d.DecodeElement(_caee.ExtLst, &_cbcagb); _bcfd != nil {
					return _bcfd
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u006c\u0069\u0064e\u0053\u0079\u006e\u0063\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _cbcagb.Name)
				if _fbab := d.Skip(); _fbab != nil {
					return _fbab
				}
			}
		case _g.EndElement:
			break _agaff
		case _g.CharData:
		}
	}
	return nil
}

func (_aegacf *ST_TLChartSubelementType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fdfga, _bebfd := d.Token()
	if _bebfd != nil {
		return _bebfd
	}
	if _degffa, _fbafb := _fdfga.(_g.EndElement); _fbafb && _degffa.Name == start.Name {
		*_aegacf = 1
		return nil
	}
	if _gfgbg, _ggcbg := _fdfga.(_g.CharData); !_ggcbg {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fdfga)
	} else {
		switch string(_gfgbg) {
		case "":
			*_aegacf = 0
		case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
			*_aegacf = 1
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_aegacf = 2
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_aegacf = 3
		case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
			*_aegacf = 4
		case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_aegacf = 5
		}
	}
	_fdfga, _bebfd = d.Token()
	if _bebfd != nil {
		return _bebfd
	}
	if _ffafd, _eggfb := _fdfga.(_g.EndElement); _eggfb && _ffafd.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fdfga)
}

func (_abddb ST_TLBehaviorOverrideType) Validate() error { return _abddb.ValidateWithPath("") }

func (_aceefd ST_WebColorType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cdad := _g.Attr{}
	_cdad.Name = name
	switch _aceefd {
	case ST_WebColorTypeUnset:
		_cdad.Value = ""
	case ST_WebColorTypeNone:
		_cdad.Value = "\u006e\u006f\u006e\u0065"
	case ST_WebColorTypeBrowser:
		_cdad.Value = "\u0062r\u006f\u0077\u0073\u0065\u0072"
	case ST_WebColorTypePresentationText:
		_cdad.Value = "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case ST_WebColorTypePresentationAccent:
		_cdad.Value = "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074"
	case ST_WebColorTypeWhiteTextOnBlack:
		_cdad.Value = "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b"
	case ST_WebColorTypeBlackTextOnWhite:
		_cdad.Value = "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065"
	}
	return _cdad, nil
}

func (_fafge *CT_TLSubShapeId) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cebdf := range start.Attr {
		if _cebdf.Name.Local == "\u0073\u0070\u0069\u0064" {
			_fbgea, _aacee := _cebdf.Value, error(nil)
			if _aacee != nil {
				return _aacee
			}
			_fafge.SpidAttr = _fbgea
			continue
		}
	}
	for {
		_bedg, _bdbff := d.Token()
		if _bdbff != nil {
			return _ce.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u004c\u0053\u0075\u0062\u0053h\u0061\u0070\u0065I\u0064:\u0020\u0025\u0073", _bdbff)
		}
		if _aegd, _eaba := _bedg.(_g.EndElement); _eaba && _aegd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_feab ST_TLPreviousActionType) String() string {
	switch _feab {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d"
	}
	return ""
}

func (_gfbcb ST_OleObjectFollowColorScheme) ValidateWithPath(path string) error {
	switch _gfbcb {
	case 0, 1, 2, 3:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gfbcb))
	}
	return nil
}

func (_dbff *ST_TLChartSubelementType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_dbff = 0
	case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
		*_dbff = 1
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_dbff = 2
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_dbff = 3
	case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
		*_dbff = 4
	case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_dbff = 5
	}
	return nil
}

func (_deace ST_TLTimeAnimateValueTime) String() string {
	if _deace.ST_PositiveFixedPercentage != nil {
		return _deace.ST_PositiveFixedPercentage.String()
	}
	if _deace.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		return _deace.ST_TLTimeIndefinite.String()
	}
	return ""
}

func (_bbb *CT_Placeholder) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ecca := range start.Attr {
		if _ecca.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bbb.TypeAttr.UnmarshalXMLAttr(_ecca)
			continue
		}
		if _ecca.Name.Local == "\u006f\u0072\u0069\u0065\u006e\u0074" {
			_bbb.OrientAttr.UnmarshalXMLAttr(_ecca)
			continue
		}
		if _ecca.Name.Local == "\u0073\u007a" {
			_bbb.SzAttr.UnmarshalXMLAttr(_ecca)
			continue
		}
		if _ecca.Name.Local == "\u0069\u0064\u0078" {
			_ece, _caba := _d.ParseUint(_ecca.Value, 10, 32)
			if _caba != nil {
				return _caba
			}
			_edbed := uint32(_ece)
			_bbb.IdxAttr = &_edbed
			continue
		}
		if _ecca.Name.Local == "\u0068a\u0073C\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u006d\u0070\u0074" {
			_eccee, _gege := _d.ParseBool(_ecca.Value)
			if _gege != nil {
				return _gege
			}
			_bbb.HasCustomPromptAttr = &_eccee
			continue
		}
	}
_ecbc:
	for {
		_bbdg, _aceea := d.Token()
		if _aceea != nil {
			return _aceea
		}
		switch _cdfb := _bbdg.(type) {
		case _g.StartElement:
			switch _cdfb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bbb.ExtLst = NewCT_ExtensionListModify()
				if _eebe := d.DecodeElement(_bbb.ExtLst, &_cdfb); _eebe != nil {
					return _eebe
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u006c\u0061\u0063\u0065\u0068\u006fl\u0064e\u0072\u0020\u0025\u0076", _cdfb.Name)
				if _gfeea := d.Skip(); _gfeea != nil {
					return _gfeea
				}
			}
		case _g.EndElement:
			break _ecbc
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ChildSlide and its children, prefixing error messages with path
func (_ggbed *EG_ChildSlide) ValidateWithPath(path string) error {
	if _ggbed.ClrMapOvr != nil {
		if _afgcc := _ggbed.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _afgcc != nil {
			return _afgcc
		}
	}
	return nil
}

func (_fbbbcea ST_TLBehaviorAccumulateType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fbbbcea.String(), start)
}

type CT_Kinsoku struct {

	// Language
	LangAttr *string

	// Invalid Kinsoku Start Characters
	InvalStCharsAttr string

	// Invalid Kinsoku End Characters
	InvalEndCharsAttr string
}

func (_cdgfe ST_SlideSizeType) Validate() error { return _cdgfe.ValidateWithPath("") }

func (_afbga ST_IterateType) ValidateWithPath(path string) error {
	switch _afbga {
	case 0, 1, 2, 3:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_afbga))
	}
	return nil
}

func (_fabda *CT_OleObjectLink) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _aeec := range start.Attr {
		if _aeec.Name.Local == "\u0075p\u0064a\u0074\u0065\u0041\u0075\u0074\u006f\u006d\u0061\u0074\u0069\u0063" {
			_badb, _fgba := _d.ParseBool(_aeec.Value)
			if _fgba != nil {
				return _fgba
			}
			_fabda.UpdateAutomaticAttr = &_badb
			continue
		}
	}
_bddg:
	for {
		_abfc, _gffac := d.Token()
		if _gffac != nil {
			return _gffac
		}
		switch _cfcgg := _abfc.(type) {
		case _g.StartElement:
			switch _cfcgg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fabda.ExtLst = NewCT_ExtensionList()
				if _ebdb := d.DecodeElement(_fabda.ExtLst, &_cfcgg); _ebdb != nil {
					return _ebdb
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u004c\u0069\u006e\u006b\u0020\u0025v", _cfcgg.Name)
				if _afeg := d.Skip(); _afeg != nil {
					return _afeg
				}
			}
		case _g.EndElement:
			break _bddg
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_OrientationTransition and its children
func (_cbda *CT_OrientationTransition) Validate() error {
	return _cbda.ValidateWithPath("\u0043T\u005f\u004f\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e")
}

type CT_TLShapeTargetElement struct {

	// Shape ID
	SpidAttr uint32

	// Background
	Bg *CT_Empty

	// Subshape
	SubSp *CT_TLSubShapeId

	// Embedded Chart Element
	OleChartEl *CT_TLOleChartTargetElement

	// Text Element
	TxEl *CT_TLTextTargetElement

	// Graphic Element
	GraphicEl *_f.CT_AnimationElementChoice
}

type CT_TLIterateData struct {

	// Iterate Type
	TypeAttr ST_IterateType

	// Backwards
	BackwardsAttr *bool

	// Time Absolute
	TmAbs *CT_TLIterateIntervalTime

	// Time Percentage
	TmPct *CT_TLIterateIntervalPercentage
}

func (_gabgdg ST_TransitionSideDirectionType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_gabgdg.String(), start)
}

func (_cbac *CT_HandoutMasterIdListEntry) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _cbac.IdAttr)})
	e.EncodeToken(start)
	if _cbac.ExtLst != nil {
		_dbf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cbac.ExtLst, _dbf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_SideDirectionTransition struct {

	// Direction
	DirAttr ST_TransitionSideDirectionType
}

func (_fegdf *OleObj) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fegdf.CT_OleObject = *NewCT_OleObject()
	for _, _dbgaf := range start.Attr {
		if _dbgaf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dbgaf.Name.Local == "\u0069\u0064" {
			_ddeag, _eabbdc := _dbgaf.Value, error(nil)
			if _eabbdc != nil {
				return _eabbdc
			}
			_fegdf.IdAttr = &_ddeag
			continue
		}
		if _dbgaf.Name.Local == "\u0073\u0070\u0069\u0064" {
			_bbfdb, _gcbag := _dbgaf.Value, error(nil)
			if _gcbag != nil {
				return _gcbag
			}
			_fegdf.SpidAttr = &_bbfdb
			continue
		}
		if _dbgaf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_abfcb, _gdfed := _dbgaf.Value, error(nil)
			if _gdfed != nil {
				return _gdfed
			}
			_fegdf.NameAttr = &_abfcb
			continue
		}
		if _dbgaf.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_dbdfe, _egba := _d.ParseBool(_dbgaf.Value)
			if _egba != nil {
				return _egba
			}
			_fegdf.ShowAsIconAttr = &_dbdfe
			continue
		}
		if _dbgaf.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_aegda, _faeaa := _dbgaf.Value, error(nil)
			if _faeaa != nil {
				return _faeaa
			}
			_fegdf.ProgIdAttr = &_aegda
			continue
		}
		if _dbgaf.Name.Local == "\u0069\u006d\u0067\u0057" {
			_bgacc, _bedb := _d.ParseInt(_dbgaf.Value, 10, 32)
			if _bedb != nil {
				return _bedb
			}
			_abafg := int32(_bgacc)
			_fegdf.ImgWAttr = &_abafg
			continue
		}
		if _dbgaf.Name.Local == "\u0069\u006d\u0067\u0048" {
			_fdfe, _dcgg := _d.ParseInt(_dbgaf.Value, 10, 32)
			if _dcgg != nil {
				return _dcgg
			}
			_fbcgb := int32(_fdfe)
			_fegdf.ImgHAttr = &_fbcgb
			continue
		}
	}
_ffcfg:
	for {
		_cbdf, _aaabe := d.Token()
		if _aaabe != nil {
			return _aaabe
		}
		switch _degeb := _cbdf.(type) {
		case _g.StartElement:
			switch _degeb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}:
				_fegdf.Choice = NewCT_OleObjectChoice()
				if _bgagd := d.DecodeElement(&_fegdf.Choice.Embed, &_degeb); _bgagd != nil {
					return _bgagd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}:
				_fegdf.Choice = NewCT_OleObjectChoice()
				if _bfabe := d.DecodeElement(&_fegdf.Choice.Link, &_degeb); _bfabe != nil {
					return _bfabe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_fegdf.Pic = NewCT_Picture()
				if _gcad := d.DecodeElement(_fegdf.Pic, &_degeb); _gcad != nil {
					return _gcad
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004f\u006c\u0065\u004f\u0062\u006a\u0020\u0025\u0076", _degeb.Name)
				if _cfdeb := d.Skip(); _cfdeb != nil {
					return _cfdeb
				}
			}
		case _g.EndElement:
			break _ffcfg
		case _g.CharData:
		}
	}
	return nil
}

func (_aadfb *CT_ExtensionListModify) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _aadfb.ModAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u006f\u0064"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_aadfb.ModAttr))})
	}
	e.EncodeToken(start)
	if _aadfb.Ext != nil {
		_ccag := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065x\u0074"}}
		for _, _ceefd := range _aadfb.Ext {
			e.EncodeElement(_ceefd, _ccag)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bdac *CT_TimeNodeList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cgecf:
	for {
		_gfbae, _gfbfc := d.Token()
		if _gfbfc != nil {
			return _gfbfc
		}
		switch _fadgb := _gfbae.(type) {
		case _g.StartElement:
			switch _fadgb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0061\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072"}:
				_cebca := NewCT_TLTimeNodeParallel()
				if _cegdc := d.DecodeElement(_cebca, &_fadgb); _cegdc != nil {
					return _cegdc
				}
				_bdac.Par = append(_bdac.Par, _cebca)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0065\u0071"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0071"}:
				_efeed := NewCT_TLTimeNodeSequence()
				if _fecfg := d.DecodeElement(_efeed, &_fadgb); _fecfg != nil {
					return _fecfg
				}
				_bdac.Seq = append(_bdac.Seq, _efeed)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0063\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0063\u006c"}:
				_cbcc := NewCT_TLTimeNodeExclusive()
				if _bacdf := d.DecodeElement(_cbcc, &_fadgb); _bacdf != nil {
					return _bacdf
				}
				_bdac.Excl = append(_bdac.Excl, _cbcc)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d"}:
				_baceg := NewCT_TLAnimateBehavior()
				if _fdcff := d.DecodeElement(_baceg, &_fadgb); _fdcff != nil {
					return _fdcff
				}
				_bdac.Anim = append(_bdac.Anim, _baceg)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0043\u006c\u0072"}:
				_gbag := NewCT_TLAnimateColorBehavior()
				if _gbddb := d.DecodeElement(_gbag, &_fadgb); _gbddb != nil {
					return _gbddb
				}
				_bdac.AnimClr = append(_bdac.AnimClr, _gbag)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}:
				_ebcbe := NewCT_TLAnimateEffectBehavior()
				if _fgebg := d.DecodeElement(_ebcbe, &_fadgb); _fgebg != nil {
					return _fgebg
				}
				_bdac.AnimEffect = append(_bdac.AnimEffect, _ebcbe)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}:
				_ecag := NewCT_TLAnimateMotionBehavior()
				if _degac := d.DecodeElement(_ecag, &_fadgb); _degac != nil {
					return _degac
				}
				_bdac.AnimMotion = append(_bdac.AnimMotion, _ecag)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0052\u006f\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0052\u006f\u0074"}:
				_acdce := NewCT_TLAnimateRotationBehavior()
				if _gegggc := d.DecodeElement(_acdce, &_fadgb); _gegggc != nil {
					return _gegggc
				}
				_bdac.AnimRot = append(_bdac.AnimRot, _acdce)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0053\u0063\u0061\u006ce"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0053\u0063\u0061\u006ce"}:
				_aegce := NewCT_TLAnimateScaleBehavior()
				if _aacfd := d.DecodeElement(_aegce, &_fadgb); _aacfd != nil {
					return _aacfd
				}
				_bdac.AnimScale = append(_bdac.AnimScale, _aegce)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0064"}:
				_eadb := NewCT_TLCommandBehavior()
				if _dcbafg := d.DecodeElement(_eadb, &_fadgb); _dcbafg != nil {
					return _dcbafg
				}
				_bdac.Cmd = append(_bdac.Cmd, _eadb)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0065\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}:
				_egdd := NewCT_TLSetBehavior()
				if _cgfa := d.DecodeElement(_egdd, &_fadgb); _cgfa != nil {
					return _cgfa
				}
				_bdac.Set = append(_bdac.Set, _egdd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u0075\u0064i\u006f"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0064i\u006f"}:
				_cfaaf := NewCT_TLMediaNodeAudio()
				if _dggeb := d.DecodeElement(_cfaaf, &_fadgb); _dggeb != nil {
					return _dggeb
				}
				_bdac.Audio = append(_bdac.Audio, _cfaaf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0076\u0069\u0064e\u006f"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0069\u0064e\u006f"}:
				_faaaa := NewCT_TLMediaNodeVideo()
				if _acdgc := d.DecodeElement(_faaaa, &_fadgb); _acdgc != nil {
					return _acdgc
				}
				_bdac.Video = append(_bdac.Video, _faaaa)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0069\u006de\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _fadgb.Name)
				if _deafa := d.Skip(); _deafa != nil {
					return _deafa
				}
			}
		case _g.EndElement:
			break _cgecf
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ViewProperties and its children, prefixing error messages with path
func (_gadf *CT_ViewProperties) ValidateWithPath(path string) error {
	if _ebbcg := _gadf.LastViewAttr.ValidateWithPath(path + "\u002f\u004c\u0061\u0073\u0074\u0056\u0069\u0065\u0077\u0041\u0074\u0074\u0072"); _ebbcg != nil {
		return _ebbcg
	}
	if _gadf.NormalViewPr != nil {
		if _fbbbce := _gadf.NormalViewPr.ValidateWithPath(path + "\u002f\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"); _fbbbce != nil {
			return _fbbbce
		}
	}
	if _gadf.SlideViewPr != nil {
		if _agda := _gadf.SlideViewPr.ValidateWithPath(path + "\u002f\u0053\u006ci\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"); _agda != nil {
			return _agda
		}
	}
	if _gadf.OutlineViewPr != nil {
		if _faac := _gadf.OutlineViewPr.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056i\u0065\u0077\u0050\u0072"); _faac != nil {
			return _faac
		}
	}
	if _gadf.NotesTextViewPr != nil {
		if _edegf := _gadf.NotesTextViewPr.ValidateWithPath(path + "\u002f\u004eo\u0074\u0065\u0073T\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"); _edegf != nil {
			return _edegf
		}
	}
	if _gadf.SorterViewPr != nil {
		if _cefa := _gadf.SorterViewPr.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"); _cefa != nil {
			return _cefa
		}
	}
	if _gadf.NotesViewPr != nil {
		if _fedg := _gadf.NotesViewPr.ValidateWithPath(path + "\u002f\u004e\u006ft\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"); _fedg != nil {
			return _fedg
		}
	}
	if _gadf.GridSpacing != nil {
		if _ggdfc := _gadf.GridSpacing.ValidateWithPath(path + "\u002f\u0047\u0072i\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"); _ggdfc != nil {
			return _ggdfc
		}
	}
	if _gadf.ExtLst != nil {
		if _daegc := _gadf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _daegc != nil {
			return _daegc
		}
	}
	return nil
}

func (_bbda *CT_OutlineViewSlideList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_aaee:
	for {
		_beba, _afad := d.Token()
		if _afad != nil {
			return _afad
		}
		switch _cgeb := _beba.(type) {
		case _g.StartElement:
			switch _cgeb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064"}:
				_cfbe := NewCT_OutlineViewSlideEntry()
				if _ebae := d.DecodeElement(_cfbe, &_cgeb); _ebae != nil {
					return _ebae
				}
				_bbda.Sld = append(_bbda.Sld, _cfbe)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069e\u0077\u0053\u006c\u0069\u0064\u0065L\u0069\u0073\u0074 \u0025\u0076", _cgeb.Name)
				if _baeaa := d.Skip(); _baeaa != nil {
					return _baeaa
				}
			}
		case _g.EndElement:
			break _aaee
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_Extension() *CT_Extension { _bbef := &CT_Extension{}; return _bbef }

func (_gaddg ST_TLTimeNodePresetClassType) String() string {
	switch _gaddg {
	case 0:
		return ""
	case 1:
		return "\u0065\u006e\u0074\u0072"
	case 2:
		return "\u0065\u0078\u0069\u0074"
	case 3:
		return "\u0065\u006d\u0070\u0068"
	case 4:
		return "\u0070\u0061\u0074\u0068"
	case 5:
		return "\u0076\u0065\u0072\u0062"
	case 6:
		return "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl"
	}
	return ""
}

func (_cacdfc ST_TLTriggerRuntimeNode) String() string {
	switch _cacdfc {
	case 0:
		return ""
	case 1:
		return "\u0066\u0069\u0072s\u0074"
	case 2:
		return "\u006c\u0061\u0073\u0074"
	case 3:
		return "\u0061\u006c\u006c"
	}
	return ""
}

func NewCT_TLAnimVariant() *CT_TLAnimVariant { _cdgdf := &CT_TLAnimVariant{}; return _cdgdf }

func (_abbfdg ST_TLPreviousActionType) ValidateWithPath(path string) error {
	switch _abbfdg {
	case 0, 1, 2:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abbfdg))
	}
	return nil
}

func (_fbcgg *EG_ChildSlide) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_afdba:
	for {
		_abca, _edab := d.Token()
		if _edab != nil {
			return _edab
		}
		switch _gffdg := _abca.(type) {
		case _g.StartElement:
			switch _gffdg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_fbcgg.ClrMapOvr = _f.NewCT_ColorMappingOverride()
				if _acbg := d.DecodeElement(_fbcgg.ClrMapOvr, &_gffdg); _acbg != nil {
					return _acbg
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043h\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065 \u0025\u0076", _gffdg.Name)
				if _adebf := d.Skip(); _adebf != nil {
					return _adebf
				}
			}
		case _g.EndElement:
			break _afdba
		case _g.CharData:
		}
	}
	return nil
}

type CT_TLBuildDiagram struct {

	// Diagram Build Types
	BldAttr      ST_TLDiagramBuildType
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

func (_efgd *CT_CustomerData) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _efgd.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLPoint and its children, prefixing error messages with path
func (_agcgf *CT_TLPoint) ValidateWithPath(path string) error {
	if _gggf := _agcgf.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _gggf != nil {
		return _gggf
	}
	if _cdgdg := _agcgf.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _cdgdg != nil {
		return _cdgdg
	}
	return nil
}

func (_bbbea *ST_TLTimeIndefinite) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ccgce, _deedgg := d.Token()
	if _deedgg != nil {
		return _deedgg
	}
	if _cafbf, _acdaa := _ccgce.(_g.EndElement); _acdaa && _cafbf.Name == start.Name {
		*_bbbea = 1
		return nil
	}
	if _edgbd, _abdda := _ccgce.(_g.CharData); !_abdda {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccgce)
	} else {
		switch string(_edgbd) {
		case "":
			*_bbbea = 0
		case "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065":
			*_bbbea = 1
		}
	}
	_ccgce, _deedgg = d.Token()
	if _deedgg != nil {
		return _deedgg
	}
	if _ebcc, _ecedg := _ccgce.(_g.EndElement); _ecedg && _ebcc.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccgce)
}

func (_cecg *CT_NormalViewPortion) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u007a"}, Value: _ce.Sprintf("\u0025\u0076", _cecg.SzAttr)})
	if _cecg.AutoAdjustAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u0075\u0074\u006f\u0041\u0064\u006a\u0075\u0073\u0074"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cecg.AutoAdjustAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_dggbb *CT_WebProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ccgcf := range start.Attr {
		if _ccgcf.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e" {
			_dgbgg, _aaeb := _d.ParseBool(_ccgcf.Value)
			if _aaeb != nil {
				return _aaeb
			}
			_dggbb.ShowAnimationAttr = &_dgbgg
			continue
		}
		if _ccgcf.Name.Local == "\u0072\u0065\u0073\u0069\u007a\u0065\u0047\u0072\u0061p\u0068\u0069\u0063\u0073" {
			_aebef, _afeb := _d.ParseBool(_ccgcf.Value)
			if _afeb != nil {
				return _afeb
			}
			_dggbb.ResizeGraphicsAttr = &_aebef
			continue
		}
		if _ccgcf.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067" {
			_fddac, _affeb := _d.ParseBool(_ccgcf.Value)
			if _affeb != nil {
				return _affeb
			}
			_dggbb.AllowPngAttr = &_fddac
			continue
		}
		if _ccgcf.Name.Local == "\u0072e\u006c\u0079\u004f\u006e\u0056\u006dl" {
			_eacc, _aggf := _d.ParseBool(_ccgcf.Value)
			if _aggf != nil {
				return _aggf
			}
			_dggbb.RelyOnVmlAttr = &_eacc
			continue
		}
		if _ccgcf.Name.Local == "\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0065\u0049\u006e\u0046\u006fl\u0064\u0065\u0072\u0073" {
			_bdcf, _cafd := _d.ParseBool(_ccgcf.Value)
			if _cafd != nil {
				return _cafd
			}
			_dggbb.OrganizeInFoldersAttr = &_bdcf
			continue
		}
		if _ccgcf.Name.Local == "\u0075\u0073e\u004c\u006f\u006eg\u0046\u0069\u006c\u0065\u006e\u0061\u006d\u0065\u0073" {
			_feeag, _gcdf := _d.ParseBool(_ccgcf.Value)
			if _gcdf != nil {
				return _gcdf
			}
			_dggbb.UseLongFilenamesAttr = &_feeag
			continue
		}
		if _ccgcf.Name.Local == "\u0069\u006d\u0067S\u007a" {
			_dggbb.ImgSzAttr.UnmarshalXMLAttr(_ccgcf)
			continue
		}
		if _ccgcf.Name.Local == "\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067" {
			_caggf, _ebdba := _ccgcf.Value, error(nil)
			if _ebdba != nil {
				return _ebdba
			}
			_dggbb.EncodingAttr = &_caggf
			continue
		}
		if _ccgcf.Name.Local == "\u0063\u006c\u0072" {
			_dggbb.ClrAttr.UnmarshalXMLAttr(_ccgcf)
			continue
		}
	}
_cffae:
	for {
		_fgfef, _ddbdfc := d.Token()
		if _ddbdfc != nil {
			return _ddbdfc
		}
		switch _beabd := _fgfef.(type) {
		case _g.StartElement:
			switch _beabd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dggbb.ExtLst = NewCT_ExtensionList()
				if _cbdac := d.DecodeElement(_dggbb.ExtLst, &_beabd); _cbdac != nil {
					return _cbdac
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025v", _beabd.Name)
				if _egcb := d.Skip(); _egcb != nil {
					return _egcb
				}
			}
		case _g.EndElement:
			break _cffae
		case _g.CharData:
		}
	}
	return nil
}

func (_gbaee ST_TLBehaviorTransformType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bfcdc := _g.Attr{}
	_bfcdc.Name = name
	switch _gbaee {
	case ST_TLBehaviorTransformTypeUnset:
		_bfcdc.Value = ""
	case ST_TLBehaviorTransformTypePt:
		_bfcdc.Value = "\u0070\u0074"
	case ST_TLBehaviorTransformTypeImg:
		_bfcdc.Value = "\u0069\u006d\u0067"
	}
	return _bfcdc, nil
}

// Validate validates the CT_CustomShowList and its children
func (_fggc *CT_CustomShowList) Validate() error {
	return _fggc.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006fw\u004c\u0069\u0073\u0074")
}

func (_deggb ST_TLPreviousActionType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_deggb.String(), start)
}

func (_dggb *CT_GroupShape) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_ebga := _g.StartElement{Name: _g.Name{Local: "p\u003a\u006e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_dggb.NvGrpSpPr, _ebga)
	_edgc := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0067\u0072\u0070\u0053\u0070\u0050r"}}
	e.EncodeElement(_dggb.GrpSpPr, _edgc)
	if _dggb.Choice != nil {
		for _, _cgbb := range _dggb.Choice {
			_cgbb.MarshalXML(e, _g.StartElement{})
		}
	}
	if _dggb.ExtLst != nil {
		_gfbd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dggb.ExtLst, _gfbd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bbcge ST_TLAnimateColorDirection) Validate() error { return _bbcge.ValidateWithPath("") }

const (
	ST_TLCommandTypeUnset ST_TLCommandType = 0
	ST_TLCommandTypeEvt   ST_TLCommandType = 1
	ST_TLCommandTypeCall  ST_TLCommandType = 2
	ST_TLCommandTypeVerb  ST_TLCommandType = 3
)

// ValidateWithPath validates the CT_CustomShowId and its children, prefixing error messages with path
func (_eafb *CT_CustomShowId) ValidateWithPath(path string) error { return nil }

func (_aefac ST_TLTimeNodeType) ValidateWithPath(path string) error {
	switch _aefac {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aefac))
	}
	return nil
}

type CT_TLMediaNodeAudio struct {

	// Is Narration
	IsNarrationAttr *bool

	// Common Media Node Properties
	CMediaNode *CT_TLCommonMediaNodeData
}

// ValidateWithPath validates the CT_HtmlPublishProperties and its children, prefixing error messages with path
func (_abbeb *CT_HtmlPublishProperties) ValidateWithPath(path string) error {
	if _abbeb.SldAll != nil {
		if _ccbgc := _abbeb.SldAll.ValidateWithPath(path + "\u002fS\u006c\u0064\u0041\u006c\u006c"); _ccbgc != nil {
			return _ccbgc
		}
	}
	if _abbeb.SldRg != nil {
		if _gfaf := _abbeb.SldRg.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0052\u0067"); _gfaf != nil {
			return _gfaf
		}
	}
	if _abbeb.CustShow != nil {
		if _afab := _abbeb.CustShow.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0053\u0068\u006fw"); _afab != nil {
			return _afab
		}
	}
	if _abbeb.ExtLst != nil {
		if _eabd := _abbeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eabd != nil {
			return _eabd
		}
	}
	return nil
}

func (_eegd *CT_TLAnimateRotationBehavior) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _eegd.ByAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u0079"}, Value: _ce.Sprintf("\u0025\u0076", *_eegd.ByAttr)})
	}
	if _eegd.FromAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u0072\u006f\u006d"}, Value: _ce.Sprintf("\u0025\u0076", *_eegd.FromAttr)})
	}
	if _eegd.ToAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u006f"}, Value: _ce.Sprintf("\u0025\u0076", *_eegd.ToAttr)})
	}
	e.EncodeToken(start)
	_accbe := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_eegd.CBhvr, _accbe)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewNotesMaster() *NotesMaster {
	_fcdcg := &NotesMaster{}
	_fcdcg.CT_NotesMaster = *NewCT_NotesMaster()
	return _fcdcg
}

func (_cfea *CT_TLShapeTargetElement) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _cfea.SpidAttr)})
	e.EncodeToken(start)
	if _cfea.Bg != nil {
		_fdeb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u0067"}}
		e.EncodeElement(_cfea.Bg, _fdeb)
	}
	if _cfea.SubSp != nil {
		_adca := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0073\u0075\u0062\u0053\u0070"}}
		e.EncodeElement(_cfea.SubSp, _adca)
	}
	if _cfea.OleChartEl != nil {
		_bbdaea := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u006fl\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}}
		e.EncodeElement(_cfea.OleChartEl, _bbdaea)
	}
	if _cfea.TxEl != nil {
		_fbde := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074\u0078\u0045\u006c"}}
		e.EncodeElement(_cfea.TxEl, _fbde)
	}
	if _cfea.GraphicEl != nil {
		_gdece := _g.StartElement{Name: _g.Name{Local: "p\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0045\u006c"}}
		e.EncodeElement(_cfea.GraphicEl, _gdece)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_NormalViewPortion and its children, prefixing error messages with path
func (_begf *CT_NormalViewPortion) ValidateWithPath(path string) error {
	if _bbaa := _begf.SzAttr.ValidateWithPath(path + "\u002fS\u007a\u0041\u0074\u0074\u0072"); _bbaa != nil {
		return _bbaa
	}
	return nil
}

func (_afdd *CT_SlideRelationshipList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bbea:
	for {
		_gaba, _adbba := d.Token()
		if _adbba != nil {
			return _adbba
		}
		switch _dfdc := _gaba.(type) {
		case _g.StartElement:
			switch _dfdc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064"}:
				_ddaf := NewCT_SlideRelationshipListEntry()
				if _bffg := d.DecodeElement(_ddaf, &_dfdc); _bffg != nil {
					return _bffg
				}
				_afdd.Sld = append(_afdd.Sld, _ddaf)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069p\u004c\u0069\u0073\u0074\u0020%\u0076", _dfdc.Name)
				if _fcbed := d.Skip(); _fcbed != nil {
					return _fcbed
				}
			}
		case _g.EndElement:
			break _bbea
		case _g.CharData:
		}
	}
	return nil
}

type ST_OleObjectFollowColorScheme byte

func (_gfdde ST_TLNextActionType) String() string {
	switch _gfdde {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u0065\u0065\u006b"
	}
	return ""
}

func (_bfag *CT_SlideMaster) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bfag.PreserveAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_bfag.PreserveAttr))})
	}
	e.EncodeToken(start)
	_ddfc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_bfag.CSld, _ddfc)
	_becce := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_bfag.ClrMap, _becce)
	if _bfag.SldLayoutIdLst != nil {
		_ddeg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003as\u006c\u0064\u004ca\u0079\u006f\u0075\u0074\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_bfag.SldLayoutIdLst, _ddeg)
	}
	if _bfag.Transition != nil {
		_bagga := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_bfag.Transition, _bagga)
	}
	if _bfag.Timing != nil {
		_bgcdc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074\u0069\u006d\u0069\u006e\u0067"}}
		e.EncodeElement(_bfag.Timing, _bgcdc)
	}
	if _bfag.Hf != nil {
		_caaea := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_bfag.Hf, _caaea)
	}
	if _bfag.TxStyles != nil {
		_degbf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}}
		e.EncodeElement(_bfag.TxStyles, _degbf)
	}
	if _bfag.ExtLst != nil {
		_cfagg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bfag.ExtLst, _cfagg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewPresentationPr() *PresentationPr {
	_gcgfbe := &PresentationPr{}
	_gcgfbe.CT_PresentationProperties = *NewCT_PresentationProperties()
	return _gcgfbe
}

func (_abdbe *SldSyncPr) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_abdbe.CT_SlideSyncProperties = *NewCT_SlideSyncProperties()
	for _, _cbgdg := range start.Attr {
		if _cbgdg.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0053\u006c\u0064\u0049\u0064" {
			_dabda, _ebaca := _cbgdg.Value, error(nil)
			if _ebaca != nil {
				return _ebaca
			}
			_abdbe.ServerSldIdAttr = _dabda
			continue
		}
		if _cbgdg.Name.Local == "s\u0065\u0072\u0076\u0065rS\u006cd\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0054\u0069\u006d\u0065" {
			_gefde, _fbgf := ParseStdlibTime(_cbgdg.Value)
			if _fbgf != nil {
				return _fbgf
			}
			_abdbe.ServerSldModifiedTimeAttr = _gefde
			continue
		}
		if _cbgdg.Name.Local == "\u0063l\u0069e\u006e\u0074\u0049\u006e\u0073e\u0072\u0074e\u0064\u0054\u0069\u006d\u0065" {
			_bafbg, _bceaff := ParseStdlibTime(_cbgdg.Value)
			if _bceaff != nil {
				return _bceaff
			}
			_abdbe.ClientInsertedTimeAttr = _bafbg
			continue
		}
	}
_dgafe:
	for {
		_ecgc, _abafe := d.Token()
		if _abafe != nil {
			return _abafe
		}
		switch _fdbgd := _ecgc.(type) {
		case _g.StartElement:
			switch _fdbgd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abdbe.ExtLst = NewCT_ExtensionList()
				if _dadab := d.DecodeElement(_abdbe.ExtLst, &_fdbgd); _dadab != nil {
					return _dadab
				}
			default:
				_e.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0053\u006c\u0064\u0053\u0079\u006ec\u0050\u0072 \u0025\u0076", _fdbgd.Name)
				if _cddbe := d.Skip(); _cddbe != nil {
					return _cddbe
				}
			}
		case _g.EndElement:
			break _dgafe
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideSize and its children, prefixing error messages with path
func (_fgbdd *CT_SlideSize) ValidateWithPath(path string) error {
	if _fgbdd.CxAttr < 914400 {
		return _ce.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0039\u0031\u0034\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _fgbdd.CxAttr)
	}
	if _fgbdd.CxAttr > 51206400 {
		return _ce.Errorf("\u0025\u0073\u002f\u006d\u002eC\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _fgbdd.CxAttr)
	}
	if _fgbdd.CxAttr < 0 {
		return _ce.Errorf("\u0025\u0073\u002fm.\u0043\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _fgbdd.CxAttr)
	}
	if _fgbdd.CyAttr < 914400 {
		return _ce.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0039\u0031\u0034\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _fgbdd.CyAttr)
	}
	if _fgbdd.CyAttr > 51206400 {
		return _ce.Errorf("\u0025\u0073\u002f\u006d\u002eC\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _fgbdd.CyAttr)
	}
	if _fgbdd.CyAttr < 0 {
		return _ce.Errorf("\u0025\u0073\u002fm.\u0043\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _fgbdd.CyAttr)
	}
	if _fgfff := _fgbdd.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _fgfff != nil {
		return _fgfff
	}
	return nil
}

func NewEG_SlideListChoice() *EG_SlideListChoice { _bbbd := &EG_SlideListChoice{}; return _bbbd }

func (_agfd *CT_GraphicalObjectFrame) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_agfd.NvGraphicFramePr = NewCT_GraphicalObjectFrameNonVisual()
	_agfd.Xfrm = _f.NewCT_Transform2D()
	_agfd.Graphic = _f.NewGraphic()
	for _, _adge := range start.Attr {
		if _adge.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_agfd.BwModeAttr.UnmarshalXMLAttr(_adge)
			continue
		}
	}
_gaaf:
	for {
		_gede, _ffef := d.Token()
		if _ffef != nil {
			return _ffef
		}
		switch _egdag := _gede.(type) {
		case _g.StartElement:
			switch _egdag.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}:
				if _ffec := d.DecodeElement(_agfd.NvGraphicFramePr, &_egdag); _ffec != nil {
					return _ffec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				if _ebbc := d.DecodeElement(_agfd.Xfrm, &_egdag); _ebbc != nil {
					return _ebbc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}, _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}:
				if _cbea := d.DecodeElement(_agfd.Graphic, &_egdag); _cbea != nil {
					return _cbea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agfd.ExtLst = NewCT_ExtensionListModify()
				if _agff := d.DecodeElement(_agfd.ExtLst, &_egdag); _agff != nil {
					return _agff
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006cO\u0062\u006a\u0065\u0063\u0074\u0046r\u0061\u006d\u0065 \u0025\u0076", _egdag.Name)
				if _fgab := d.Skip(); _fgab != nil {
					return _fgab
				}
			}
		case _g.EndElement:
			break _gaaf
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_HandoutMaster() *CT_HandoutMaster {
	_gdfc := &CT_HandoutMaster{}
	_gdfc.CSld = NewCT_CommonSlideData()
	_gdfc.ClrMap = _f.NewCT_ColorMapping()
	return _gdfc
}

func (_efbcf *CT_TLIterateIntervalPercentage) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _befec := range start.Attr {
		if _befec.Name.Local == "\u0076\u0061\u006c" {
			_agefeb, _dccg := ParseUnionST_PositivePercentage(_befec.Value)
			if _dccg != nil {
				return _dccg
			}
			_efbcf.ValAttr = _agefeb
			continue
		}
	}
	for {
		_abccfc, _ccdd := d.Token()
		if _ccdd != nil {
			return _ce.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c\u0050\u0065\u0072\u0063\u0065n\u0074\u0061\u0067\u0065\u003a\u0020\u0025\u0073", _ccdd)
		}
		if _ccfed, _gggcb := _abccfc.(_g.EndElement); _gggcb && _ccfed.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_SlideSize struct {

	// Extent Length
	CxAttr int32

	// Extent Width
	CyAttr int32

	// Type of Size
	TypeAttr ST_SlideSizeType
}

func (_dbgaa *CT_TLByRgbColorTransform) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072"}, Value: _ce.Sprintf("\u0025\u0076", _dbgaa.RAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067"}, Value: _ce.Sprintf("\u0025\u0076", _dbgaa.GAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062"}, Value: _ce.Sprintf("\u0025\u0076", _dbgaa.BAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_eedc *CT_TLAnimateRotationBehavior) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_eedc.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _acgd := range start.Attr {
		if _acgd.Name.Local == "\u0062\u0079" {
			_dadge, _ddffa := _d.ParseInt(_acgd.Value, 10, 32)
			if _ddffa != nil {
				return _ddffa
			}
			_eccda := int32(_dadge)
			_eedc.ByAttr = &_eccda
			continue
		}
		if _acgd.Name.Local == "\u0066\u0072\u006f\u006d" {
			_bfdgg, _fgada := _d.ParseInt(_acgd.Value, 10, 32)
			if _fgada != nil {
				return _fgada
			}
			_ecda := int32(_bfdgg)
			_eedc.FromAttr = &_ecda
			continue
		}
		if _acgd.Name.Local == "\u0074\u006f" {
			_befg, _dcbfac := _d.ParseInt(_acgd.Value, 10, 32)
			if _dcbfac != nil {
				return _dcbfac
			}
			_dffga := int32(_befg)
			_eedc.ToAttr = &_dffga
			continue
		}
	}
_ebddb:
	for {
		_fcbdg, _gacc := d.Token()
		if _gacc != nil {
			return _gacc
		}
		switch _dfffb := _fcbdg.(type) {
		case _g.StartElement:
			switch _dfffb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _fbfe := d.DecodeElement(_eedc.CBhvr, &_dfffb); _fbfe != nil {
					return _fbfe
				}
			default:
				_e.Log.Debug("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0052\u006f\u0074\u0061\u0074i\u006f\u006eBe\u0068\u0061\u0076i\u006f\u0072\u0020\u0025\u0076", _dfffb.Name)
				if _cabea := d.Skip(); _cabea != nil {
					return _cabea
				}
			}
		case _g.EndElement:
			break _ebddb
		case _g.CharData:
		}
	}
	return nil
}

func (_ecgaa *CT_StringTag) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dcgd := range start.Attr {
		if _dcgd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_aagd, _gebb := _dcgd.Value, error(nil)
			if _gebb != nil {
				return _gebb
			}
			_ecgaa.NameAttr = _aagd
			continue
		}
		if _dcgd.Name.Local == "\u0076\u0061\u006c" {
			_dgab, _cbaf := _dcgd.Value, error(nil)
			if _cbaf != nil {
				return _cbaf
			}
			_ecgaa.ValAttr = _dgab
			continue
		}
	}
	for {
		_aaccd, _gfag := d.Token()
		if _gfag != nil {
			return _ce.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0074r\u0069\u006e\u0067\u0054\u0061\u0067\u003a\u0020\u0025\u0073", _gfag)
		}
		if _fbbg, _bgge := _aaccd.(_g.EndElement); _bgge && _fbbg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fgee ST_SplitterBarState) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fgee.String(), start)
}

// ValidateWithPath validates the CT_TLTextTargetElement and its children, prefixing error messages with path
func (_gefa *CT_TLTextTargetElement) ValidateWithPath(path string) error {
	if _gefa.CharRg != nil {
		if _ggbe := _gefa.CharRg.ValidateWithPath(path + "\u002fC\u0068\u0061\u0072\u0052\u0067"); _ggbe != nil {
			return _ggbe
		}
	}
	if _gefa.PRg != nil {
		if _fgeb := _gefa.PRg.ValidateWithPath(path + "\u002f\u0050\u0052\u0067"); _fgeb != nil {
			return _fgeb
		}
	}
	return nil
}

// Validate validates the CT_TagList and its children
func (_ddbec *CT_TagList) Validate() error {
	return _ddbec.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0067\u004c\u0069\u0073\u0074")
}

func (_bcfdca *EG_TopLevelSlide) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bcfdca.ClrMap = _f.NewCT_ColorMapping()
_cbfef:
	for {
		_becba, _abage := d.Token()
		if _abage != nil {
			return _abage
		}
		switch _aacfc := _becba.(type) {
		case _g.StartElement:
			switch _aacfc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _bcgg := d.DecodeElement(_bcfdca.ClrMap, &_aacfc); _bcgg != nil {
					return _bcgg
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u006f\u0070\u004c\u0065\u0076\u0065\u006c\u0053\u006c\u0069\u0064\u0065\u0020\u0025v", _aacfc.Name)
				if _aegdf := d.Skip(); _aegdf != nil {
					return _aegdf
				}
			}
		case _g.EndElement:
			break _cbfef
		case _g.CharData:
		}
	}
	return nil
}

func (_cbeae *CT_TLTextTargetElement) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _cbeae.CharRg != nil {
		_egcef := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u0068\u0061\u0072\u0052\u0067"}}
		e.EncodeElement(_cbeae.CharRg, _egcef)
	}
	if _cbeae.PRg != nil {
		_dgedg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0070R\u0067"}}
		e.EncodeElement(_cbeae.PRg, _dgedg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fged *CT_TLAnimVariant) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _fged.BoolVal != nil {
		_eadcf := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0062\u006f\u006f\u006c\u0056\u0061l"}}
		e.EncodeElement(_fged.BoolVal, _eadcf)
	}
	if _fged.IntVal != nil {
		_ebggbb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0069\u006e\u0074\u0056\u0061\u006c"}}
		e.EncodeElement(_fged.IntVal, _ebggbb)
	}
	if _fged.FltVal != nil {
		_gdaba := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0066\u006c\u0074\u0056\u0061\u006c"}}
		e.EncodeElement(_fged.FltVal, _gdaba)
	}
	if _fged.StrVal != nil {
		_agcff := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u0074\u0072\u0056\u0061\u006c"}}
		e.EncodeElement(_fged.StrVal, _agcff)
	}
	if _fged.ClrVal != nil {
		_cefgg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u0056\u0061\u006c"}}
		e.EncodeElement(_fged.ClrVal, _cefgg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLByHslColorTransform and its children
func (_fffd *CT_TLByHslColorTransform) Validate() error {
	return _fffd.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0042\u0079\u0048\u0073\u006c\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}

func (_ceddg ST_TLAnimateColorDirection) String() string {
	switch _ceddg {
	case 0:
		return ""
	case 1:
		return "\u0063\u0077"
	case 2:
		return "\u0063\u0063\u0077"
	}
	return ""
}

// Validate validates the CT_SlideMasterTextStyles and its children
func (_dedf *CT_SlideMasterTextStyles) Validate() error {
	return _dedf.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065r\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065\u0073")
}

func (_eaeb *CT_EmbeddedFontDataId) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _afae := range start.Attr {
		if _afae.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _afae.Name.Local == "\u0069\u0064" || _afae.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _afae.Name.Local == "\u0069\u0064" {
			_cacc, _eec := _afae.Value, error(nil)
			if _eec != nil {
				return _eec
			}
			_eaeb.IdAttr = _cacc
			continue
		}
	}
	for {
		_gadd, _baeg := d.Token()
		if _baeg != nil {
			return _ce.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046o\u006e\u0074\u0044\u0061\u0074\u0061\u0049d\u003a\u0020\u0025\u0073", _baeg)
		}
		if _daa, _ffab := _gadd.(_g.EndElement); _ffab && _daa.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_CommentAuthorList and its children
func (_baaf *CT_CommentAuthorList) Validate() error {
	return _baaf.ValidateWithPath("C\u0054_\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041u\u0074\u0068\u006f\u0072Li\u0073\u0074")
}

func (_daga ST_TLAnimateColorDirection) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bfdde := _g.Attr{}
	_bfdde.Name = name
	switch _daga {
	case ST_TLAnimateColorDirectionUnset:
		_bfdde.Value = ""
	case ST_TLAnimateColorDirectionCw:
		_bfdde.Value = "\u0063\u0077"
	case ST_TLAnimateColorDirectionCcw:
		_bfdde.Value = "\u0063\u0063\u0077"
	}
	return _bfdde, nil
}

func (_ggdd *CT_OleObjectChoice) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ggdd.Embed != nil {
		_ceeb := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0065\u006d\u0062\u0065\u0064"}}
		e.EncodeElement(_ggdd.Embed, _ceeb)
	}
	if _ggdd.Link != nil {
		_becg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u006c\u0069\u006e\u006b"}}
		e.EncodeElement(_ggdd.Link, _becg)
	}
	return nil
}

func (_gce *CT_GroupShapeChoice) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ageb:
	for {
		_dfec, _ccdg := d.Token()
		if _ccdg != nil {
			return _ccdg
		}
		switch _begd := _dfec.(type) {
		case _g.StartElement:
			switch _begd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_ddab := NewCT_Shape()
				if _fafd := d.DecodeElement(_ddab, &_begd); _fafd != nil {
					return _fafd
				}
				_gce.Sp = append(_gce.Sp, _ddab)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_efefa := NewCT_GroupShape()
				if _daagc := d.DecodeElement(_efefa, &_begd); _daagc != nil {
					return _daagc
				}
				_gce.GrpSp = append(_gce.GrpSp, _efefa)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_gdab := NewCT_GraphicalObjectFrame()
				if _gadc := d.DecodeElement(_gdab, &_begd); _gadc != nil {
					return _gadc
				}
				_gce.GraphicFrame = append(_gce.GraphicFrame, _gdab)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_aeed := NewCT_Connector()
				if _ccg := d.DecodeElement(_aeed, &_begd); _ccg != nil {
					return _ccg
				}
				_gce.CxnSp = append(_gce.CxnSp, _aeed)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_gcca := NewCT_Picture()
				if _cebd := d.DecodeElement(_gcca, &_begd); _cebd != nil {
					return _cebd
				}
				_gce.Pic = append(_gce.Pic, _gcca)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_edca := NewCT_Rel()
				if _eeae := d.DecodeElement(_edca, &_begd); _eeae != nil {
					return _eeae
				}
				_gce.ContentPart = append(_gce.ContentPart, _edca)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068ap\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _begd.Name)
				if _gdbae := d.Skip(); _gdbae != nil {
					return _gdbae
				}
			}
		case _g.EndElement:
			break _ageb
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_TLByRgbColorTransform() *CT_TLByRgbColorTransform {
	_cacde := &CT_TLByRgbColorTransform{}
	return _cacde
}

// ValidateWithPath validates the CT_SlideLayoutIdList and its children, prefixing error messages with path
func (_aedce *CT_SlideLayoutIdList) ValidateWithPath(path string) error {
	for _ebdgd, _cefbc := range _aedce.SldLayoutId {
		if _fabca := _cefbc.ValidateWithPath(_ce.Sprintf("\u0025s\u002fS\u006c\u0064\u004c\u0061\u0079o\u0075\u0074I\u0064\u005b\u0025\u0064\u005d", path, _ebdgd)); _fabca != nil {
			return _fabca
		}
	}
	return nil
}

type CT_Empty struct{}

func (_fbbbg *CT_TLMediaNodeVideo) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fbbbg.FullScrnAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u0075\u006c\u006c\u0053\u0063\u0072\u006e"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_fbbbg.FullScrnAttr))})
	}
	e.EncodeToken(start)
	_cbdbd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063M\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}}
	e.EncodeElement(_fbbbg.CMediaNode, _cbdbd)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_GroupShapeChoice() *CT_GroupShapeChoice { _adfb := &CT_GroupShapeChoice{}; return _adfb }

func (_abcg *EG_ChildSlide) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _abcg.ClrMapOvr != nil {
		_aaebf := _g.StartElement{Name: _g.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_abcg.ClrMapOvr, _aaebf)
	}
	return nil
}

type CT_OleObject struct {

	// Embedded Object ProgID
	ProgIdAttr     *string
	Choice         *CT_OleObjectChoice
	Pic            *CT_Picture
	SpidAttr       *string
	NameAttr       *string
	ShowAsIconAttr *bool
	IdAttr         *string
	ImgWAttr       *int32
	ImgHAttr       *int32
}

type CT_SlideTransitionChoice struct {
	Blinds    *CT_OrientationTransition
	Checker   *CT_OrientationTransition
	Circle    *CT_Empty
	Dissolve  *CT_Empty
	Comb      *CT_OrientationTransition
	Cover     *CT_EightDirectionTransition
	Cut       *CT_OptionalBlackTransition
	Diamond   *CT_Empty
	Fade      *CT_OptionalBlackTransition
	Newsflash *CT_Empty
	Plus      *CT_Empty
	Pull      *CT_EightDirectionTransition
	Push      *CT_SideDirectionTransition
	Random    *CT_Empty
	RandomBar *CT_OrientationTransition
	Split     *CT_SplitTransition
	Strips    *CT_CornerDirectionTransition
	Wedge     *CT_Empty
	Wheel     *CT_WheelTransition
	Wipe      *CT_SideDirectionTransition
	Zoom      *CT_InOutTransition
}

// Validate validates the CT_TLAnimateScaleBehavior and its children
func (_debae *CT_TLAnimateScaleBehavior) Validate() error {
	return _debae.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065S\u0063a\u006ce\u0042\u0065\u0068\u0061\u0076\u0069\u006fr")
}

func (_dfgf *CT_TLCommonMediaNodeData) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dfgf.CTn = NewCT_TLCommonTimeNodeData()
	_dfgf.TgtEl = NewCT_TLTimeTargetElement()
	for _, _gecc := range start.Attr {
		if _gecc.Name.Local == "\u0076\u006f\u006c" {
			_fcda, _agfb := ParseUnionST_PositiveFixedPercentage(_gecc.Value)
			if _agfb != nil {
				return _agfb
			}
			_dfgf.VolAttr = &_fcda
			continue
		}
		if _gecc.Name.Local == "\u006d\u0075\u0074\u0065" {
			_dafdb, _ffdgeb := _d.ParseBool(_gecc.Value)
			if _ffdgeb != nil {
				return _ffdgeb
			}
			_dfgf.MuteAttr = &_dafdb
			continue
		}
		if _gecc.Name.Local == "\u006e\u0075\u006d\u0053\u006c\u0064" {
			_agefe, _afec := _d.ParseUint(_gecc.Value, 10, 32)
			if _afec != nil {
				return _afec
			}
			_efce := uint32(_agefe)
			_dfgf.NumSldAttr = &_efce
			continue
		}
		if _gecc.Name.Local == "\u0073h\u006fw\u0057\u0068\u0065\u006e\u0053\u0074\u006f\u0070\u0070\u0065\u0064" {
			_ecad, _baacb := _d.ParseBool(_gecc.Value)
			if _baacb != nil {
				return _baacb
			}
			_dfgf.ShowWhenStoppedAttr = &_ecad
			continue
		}
	}
_bdgab:
	for {
		_bggd, _egga := d.Token()
		if _egga != nil {
			return _egga
		}
		switch _geec := _bggd.(type) {
		case _g.StartElement:
			switch _geec.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _cafab := d.DecodeElement(_dfgf.CTn, &_geec); _cafab != nil {
					return _cafab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
				if _dagb := d.DecodeElement(_dfgf.TgtEl, &_geec); _dagb != nil {
					return _dagb
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064e\u0044\u0061\u0074\u0061\u0020%\u0076", _geec.Name)
				if _caacd := d.Skip(); _caacd != nil {
					return _caacd
				}
			}
		case _g.EndElement:
			break _bdgab
		case _g.CharData:
		}
	}
	return nil
}

func (_agd *CT_HtmlPublishProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bfed := range start.Attr {
		if _bfed.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bfed.Name.Local == "\u0069\u0064" || _bfed.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bfed.Name.Local == "\u0069\u0064" {
			_dggd, _dfecg := _bfed.Value, error(nil)
			if _dfecg != nil {
				return _dfecg
			}
			_agd.IdAttr = _dggd
			continue
		}
		if _bfed.Name.Local == "\u0073\u0068o\u0077\u0053\u0070e\u0061\u006b\u0065\u0072\u004e\u006f\u0074\u0065\u0073" {
			_eggf, _facf := _d.ParseBool(_bfed.Value)
			if _facf != nil {
				return _facf
			}
			_agd.ShowSpeakerNotesAttr = &_eggf
			continue
		}
		if _bfed.Name.Local == "\u0074\u0061\u0072\u0067\u0065\u0074" {
			_caef, _dabbb := _bfed.Value, error(nil)
			if _dabbb != nil {
				return _dabbb
			}
			_agd.TargetAttr = &_caef
			continue
		}
		if _bfed.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_gegc, _bca := _bfed.Value, error(nil)
			if _bca != nil {
				return _bca
			}
			_agd.TitleAttr = &_gegc
			continue
		}
	}
_aedec:
	for {
		_dggge, _geee := d.Token()
		if _geee != nil {
			return _geee
		}
		switch _ecgd := _dggge.(type) {
		case _g.StartElement:
			switch _ecgd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}:
				_agd.SldAll = NewCT_Empty()
				if _efeadb := d.DecodeElement(_agd.SldAll, &_ecgd); _efeadb != nil {
					return _efeadb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}:
				_agd.SldRg = NewCT_IndexRange()
				if _fdgdd := d.DecodeElement(_agd.SldRg, &_ecgd); _fdgdd != nil {
					return _fdgdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_agd.CustShow = NewCT_CustomShowId()
				if _bbgb := d.DecodeElement(_agd.CustShow, &_ecgd); _bbgb != nil {
					return _bbgb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agd.ExtLst = NewCT_ExtensionList()
				if _fafa := d.DecodeElement(_agd.ExtLst, &_ecgd); _fafa != nil {
					return _fafa
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _ecgd.Name)
				if _cddd := d.Skip(); _cddd != nil {
					return _cddd
				}
			}
		case _g.EndElement:
			break _aedec
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_TagsData() *CT_TagsData { _adcde := &CT_TagsData{}; return _adcde }

func (_ebdf *CT_OutlineViewSlideEntry) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _ebdf.IdAttr)})
	if _ebdf.CollapseAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u006f\u006c\u006c\u0061\u0070\u0073\u0065"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_ebdf.CollapseAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type ST_TLAnimateBehaviorCalcMode byte

func NewCT_PresentationProperties() *CT_PresentationProperties {
	_baffc := &CT_PresentationProperties{}
	return _baffc
}

// Validate validates the CT_TLTriggerRuntimeNode and its children
func (_dfbec *CT_TLTriggerRuntimeNode) Validate() error {
	return _dfbec.ValidateWithPath("\u0043\u0054\u005fTL\u0054\u0072\u0069\u0067\u0067\u0065\u0072\u0052\u0075\u006e\u0074\u0069\u006d\u0065\u004e\u006f\u0064\u0065")
}

type CT_InOutTransition struct {

	// Direction
	DirAttr ST_TransitionInOutDirectionType
}

type CT_TLByHslColorTransform struct {

	// Hue
	HAttr int32

	// Saturation
	SAttr _f.ST_FixedPercentage

	// Lightness
	LAttr _f.ST_FixedPercentage
}

func (_gdgef *CT_Slide) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gdgef.CSld = NewCT_CommonSlideData()
	for _, _gbgf := range start.Attr {
		if _gbgf.Name.Local == "\u0073\u0068\u006f\u0077" {
			_egfe, _dbgcbf := _d.ParseBool(_gbgf.Value)
			if _dbgcbf != nil {
				return _dbgcbf
			}
			_gdgef.ShowAttr = &_egfe
			continue
		}
		if _gbgf.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_dfgc, _gccfe := _d.ParseBool(_gbgf.Value)
			if _gccfe != nil {
				return _gccfe
			}
			_gdgef.ShowMasterSpAttr = &_dfgc
			continue
		}
		if _gbgf.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_deee, _cdcc := _d.ParseBool(_gbgf.Value)
			if _cdcc != nil {
				return _cdcc
			}
			_gdgef.ShowMasterPhAnimAttr = &_deee
			continue
		}
	}
_debbg:
	for {
		_ecef, _cdbfa := d.Token()
		if _cdbfa != nil {
			return _cdbfa
		}
		switch _gfdeg := _ecef.(type) {
		case _g.StartElement:
			switch _gfdeg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _fcggd := d.DecodeElement(_gdgef.CSld, &_gfdeg); _fcggd != nil {
					return _fcggd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_gdgef.ClrMapOvr = _f.NewCT_ColorMappingOverride()
				if _bbeba := d.DecodeElement(_gdgef.ClrMapOvr, &_gfdeg); _bbeba != nil {
					return _bbeba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_gdgef.Transition = NewCT_SlideTransition()
				if _fdcg := d.DecodeElement(_gdgef.Transition, &_gfdeg); _fdcg != nil {
					return _fdcg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_gdgef.Timing = NewCT_SlideTiming()
				if _bedfb := d.DecodeElement(_gdgef.Timing, &_gfdeg); _bedfb != nil {
					return _bedfb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdgef.ExtLst = NewCT_ExtensionListModify()
				if _acggdf := d.DecodeElement(_gdgef.ExtLst, &_gfdeg); _acggdf != nil {
					return _acggdf
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0020\u0025\u0076", _gfdeg.Name)
				if _ddef := d.Skip(); _ddef != nil {
					return _ddef
				}
			}
		case _g.EndElement:
			break _debbg
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_WheelTransition() *CT_WheelTransition { _aegbga := &CT_WheelTransition{}; return _aegbga }

type CT_ControlList struct {

	// Embedded Control
	Control []*CT_Control
}

func NewCT_TLOleBuildChart() *CT_TLOleBuildChart { _fedb := &CT_TLOleBuildChart{}; return _fedb }

func (_eaece ST_SlideSizeType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cdbbde := _g.Attr{}
	_cdbbde.Name = name
	switch _eaece {
	case ST_SlideSizeTypeUnset:
		_cdbbde.Value = ""
	case ST_SlideSizeTypeScreen4x3:
		_cdbbde.Value = "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783"
	case ST_SlideSizeTypeLetter:
		_cdbbde.Value = "\u006c\u0065\u0074\u0074\u0065\u0072"
	case ST_SlideSizeTypeA4:
		_cdbbde.Value = "\u0041\u0034"
	case ST_SlideSizeType35mm:
		_cdbbde.Value = "\u0033\u0035\u006d\u006d"
	case ST_SlideSizeTypeOverhead:
		_cdbbde.Value = "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064"
	case ST_SlideSizeTypeBanner:
		_cdbbde.Value = "\u0062\u0061\u006e\u006e\u0065\u0072"
	case ST_SlideSizeTypeCustom:
		_cdbbde.Value = "\u0063\u0075\u0073\u0074\u006f\u006d"
	case ST_SlideSizeTypeLedger:
		_cdbbde.Value = "\u006c\u0065\u0064\u0067\u0065\u0072"
	case ST_SlideSizeTypeA3:
		_cdbbde.Value = "\u0041\u0033"
	case ST_SlideSizeTypeB4ISO:
		_cdbbde.Value = "\u0042\u0034\u0049S\u004f"
	case ST_SlideSizeTypeB5ISO:
		_cdbbde.Value = "\u0042\u0035\u0049S\u004f"
	case ST_SlideSizeTypeB4JIS:
		_cdbbde.Value = "\u0042\u0034\u004aI\u0053"
	case ST_SlideSizeTypeB5JIS:
		_cdbbde.Value = "\u0042\u0035\u004aI\u0053"
	case ST_SlideSizeTypeHagakiCard:
		_cdbbde.Value = "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064"
	case ST_SlideSizeTypeScreen16x9:
		_cdbbde.Value = "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039"
	case ST_SlideSizeTypeScreen16x10:
		_cdbbde.Value = "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030"
	}
	return _cdbbde, nil
}

func (_ebcba ST_PlaceholderSize) ValidateWithPath(path string) error {
	switch _ebcba {
	case 0, 1, 2, 3:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebcba))
	}
	return nil
}

func NewCT_CommonSlideViewProperties() *CT_CommonSlideViewProperties {
	_bccd := &CT_CommonSlideViewProperties{}
	_bccd.CViewPr = NewCT_CommonViewProperties()
	return _bccd
}

func (_cfcge *ViewPr) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cfcge.CT_ViewProperties = *NewCT_ViewProperties()
	for _, _gbfce := range start.Attr {
		if _gbfce.Name.Local == "\u006c\u0061\u0073\u0074\u0056\u0069\u0065\u0077" {
			_cfcge.LastViewAttr.UnmarshalXMLAttr(_gbfce)
			continue
		}
		if _gbfce.Name.Local == "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_eggda, _dfbdc := _d.ParseBool(_gbfce.Value)
			if _dfbdc != nil {
				return _dfbdc
			}
			_cfcge.ShowCommentsAttr = &_eggda
			continue
		}
	}
_aafc:
	for {
		_ebec, _egfac := d.Token()
		if _egfac != nil {
			return _egfac
		}
		switch _cdbddf := _ebec.(type) {
		case _g.StartElement:
			switch _cdbddf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_cfcge.NormalViewPr = NewCT_NormalViewProperties()
				if _abdcc := d.DecodeElement(_cfcge.NormalViewPr, &_cdbddf); _abdcc != nil {
					return _abdcc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_cfcge.SlideViewPr = NewCT_SlideViewProperties()
				if _gfff := d.DecodeElement(_cfcge.SlideViewPr, &_cdbddf); _gfff != nil {
					return _gfff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_cfcge.OutlineViewPr = NewCT_OutlineViewProperties()
				if _fdfdb := d.DecodeElement(_cfcge.OutlineViewPr, &_cdbddf); _fdfdb != nil {
					return _fdfdb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_cfcge.NotesTextViewPr = NewCT_NotesTextViewProperties()
				if _gegfg := d.DecodeElement(_cfcge.NotesTextViewPr, &_cdbddf); _gegfg != nil {
					return _gegfg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_cfcge.SorterViewPr = NewCT_SlideSorterViewProperties()
				if _bdgce := d.DecodeElement(_cfcge.SorterViewPr, &_cdbddf); _bdgce != nil {
					return _bdgce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_cfcge.NotesViewPr = NewCT_NotesViewProperties()
				if _edccg := d.DecodeElement(_cfcge.NotesViewPr, &_cdbddf); _edccg != nil {
					return _edccg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}:
				_cfcge.GridSpacing = _f.NewCT_PositiveSize2D()
				if _ddcea := d.DecodeElement(_cfcge.GridSpacing, &_cdbddf); _ddcea != nil {
					return _ddcea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfcge.ExtLst = NewCT_ExtensionList()
				if _gdgbe := d.DecodeElement(_cfcge.ExtLst, &_cdbddf); _gdgbe != nil {
					return _gdgbe
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0056\u0069\u0065\u0077\u0050\u0072\u0020\u0025\u0076", _cdbddf.Name)
				if _baebd := d.Skip(); _baebd != nil {
					return _baebd
				}
			}
		case _g.EndElement:
			break _aafc
		case _g.CharData:
		}
	}
	return nil
}

const (
	ST_TLTimeNodeMasterRelationUnset     ST_TLTimeNodeMasterRelation = 0
	ST_TLTimeNodeMasterRelationSameClick ST_TLTimeNodeMasterRelation = 1
	ST_TLTimeNodeMasterRelationLastClick ST_TLTimeNodeMasterRelation = 2
	ST_TLTimeNodeMasterRelationNextClick ST_TLTimeNodeMasterRelation = 3
)

// ValidateWithPath validates the CT_EmbeddedFontDataId and its children, prefixing error messages with path
func (_dfdf *CT_EmbeddedFontDataId) ValidateWithPath(path string) error { return nil }

func (_dgbdd *CT_TLGraphicalObjectBuild) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dgbdd.SpidAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_dgbdd.SpidAttr)})
	}
	if _dgbdd.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_dgbdd.GrpIdAttr)})
	}
	if _dgbdd.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_dgbdd.UiExpandAttr))})
	}
	e.EncodeToken(start)
	if _dgbdd.BldAsOne != nil {
		_cece := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}}
		e.EncodeElement(_dgbdd.BldAsOne, _cece)
	}
	if _dgbdd.BldSub != nil {
		_gfbe := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0053\u0075\u0062"}}
		e.EncodeElement(_dgbdd.BldSub, _gfbe)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_TLOleChartTargetElement struct {

	// Type
	TypeAttr ST_TLChartSubelementType

	// Level
	LvlAttr *uint32
}

func (_ddafa ST_TLParaBuildType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_gecbc := _g.Attr{}
	_gecbc.Name = name
	switch _ddafa {
	case ST_TLParaBuildTypeUnset:
		_gecbc.Value = ""
	case ST_TLParaBuildTypeAllAtOnce:
		_gecbc.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case ST_TLParaBuildTypeP:
		_gecbc.Value = "\u0070"
	case ST_TLParaBuildTypeCust:
		_gecbc.Value = "\u0063\u0075\u0073\u0074"
	case ST_TLParaBuildTypeWhole:
		_gecbc.Value = "\u0077\u0068\u006fl\u0065"
	}
	return _gecbc, nil
}

func (_eggg *ST_TLAnimateBehaviorCalcMode) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_eggg = 0
	case "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065":
		*_eggg = 1
	case "\u006c\u0069\u006e":
		*_eggg = 2
	case "\u0066\u006d\u006c\u0061":
		*_eggg = 3
	}
	return nil
}

// ValidateWithPath validates the EG_ExtensionList and its children, prefixing error messages with path
func (_ecedb *EG_ExtensionList) ValidateWithPath(path string) error {
	for _fgbea, _gdead := range _ecedb.Ext {
		if _fgffb := _gdead.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _fgbea)); _fgffb != nil {
			return _fgffb
		}
	}
	return nil
}

func (_cdf *CT_CommentAuthor) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fbb := range start.Attr {
		if _fbb.Name.Local == "\u0069\u0064" {
			_dgf, _cfb := _d.ParseUint(_fbb.Value, 10, 32)
			if _cfb != nil {
				return _cfb
			}
			_cdf.IdAttr = uint32(_dgf)
			continue
		}
		if _fbb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cfbb, _ebbb := _fbb.Value, error(nil)
			if _ebbb != nil {
				return _ebbb
			}
			_cdf.NameAttr = _cfbb
			continue
		}
		if _fbb.Name.Local == "\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0073" {
			_fbbe, _ffae := _fbb.Value, error(nil)
			if _ffae != nil {
				return _ffae
			}
			_cdf.InitialsAttr = _fbbe
			continue
		}
		if _fbb.Name.Local == "\u006ca\u0073\u0074\u0049\u0064\u0078" {
			_fcc, _egb := _d.ParseUint(_fbb.Value, 10, 32)
			if _egb != nil {
				return _egb
			}
			_cdf.LastIdxAttr = uint32(_fcc)
			continue
		}
		if _fbb.Name.Local == "\u0063\u006c\u0072\u0049\u0064\u0078" {
			_badc, _ccedc := _d.ParseUint(_fbb.Value, 10, 32)
			if _ccedc != nil {
				return _ccedc
			}
			_cdf.ClrIdxAttr = uint32(_badc)
			continue
		}
	}
_cbfa:
	for {
		_cbfg, _cfbd := d.Token()
		if _cfbd != nil {
			return _cfbd
		}
		switch _bcd := _cbfg.(type) {
		case _g.StartElement:
			switch _bcd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdf.ExtLst = NewCT_ExtensionList()
				if _gfd := d.DecodeElement(_cdf.ExtLst, &_bcd); _gfd != nil {
					return _gfd
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072\u0020\u0025v", _bcd.Name)
				if _dec := d.Skip(); _dec != nil {
					return _dec
				}
			}
		case _g.EndElement:
			break _cbfa
		case _g.CharData:
		}
	}
	return nil
}

func (_abagd *ST_TLBehaviorOverrideType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_abbcf, _bfdac := d.Token()
	if _bfdac != nil {
		return _bfdac
	}
	if _bgdcf, _dfcde := _abbcf.(_g.EndElement); _dfcde && _bgdcf.Name == start.Name {
		*_abagd = 1
		return nil
	}
	if _ceeaf, _acefac := _abbcf.(_g.CharData); !_acefac {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _abbcf)
	} else {
		switch string(_ceeaf) {
		case "":
			*_abagd = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_abagd = 1
		case "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065":
			*_abagd = 2
		}
	}
	_abbcf, _bfdac = d.Token()
	if _bfdac != nil {
		return _bfdac
	}
	if _deabg, _bfgde := _abbcf.(_g.EndElement); _bfgde && _deabg.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _abbcf)
}

func (_bbag *CT_TLPoint) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078"}, Value: _ce.Sprintf("\u0025\u0076", _bbag.XAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0079"}, Value: _ce.Sprintf("\u0025\u0076", _bbag.YAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_aeab *CT_TagList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _aeab.Tag != nil {
		_gcee := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074a\u0067"}}
		for _, _dddea := range _aeab.Tag {
			e.EncodeElement(_dddea, _gcee)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the TagLst and its children
func (_edaag *TagLst) Validate() error {
	return _edaag.ValidateWithPath("\u0054\u0061\u0067\u004c\u0073\u0074")
}

// ValidateWithPath validates the CT_TLAnimVariantStringVal and its children, prefixing error messages with path
func (_faaag *CT_TLAnimVariantStringVal) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_SplitTransition and its children
func (_gcae *CT_SplitTransition) Validate() error {
	return _gcae.ValidateWithPath("\u0043T\u005fS\u0070\u006c\u0069\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}

func NewCT_CustomerData() *CT_CustomerData { _befd := &CT_CustomerData{}; return _befd }

// ValidateWithPath validates the CT_SlideIdListEntry and its children, prefixing error messages with path
func (_gbabc *CT_SlideIdListEntry) ValidateWithPath(path string) error {
	if _gbabc.IdAttr < 256 {
		return _ce.Errorf("\u0025\u0073/m\u002e\u0049\u0064A\u0074\u0074\u0072\u0020mus\u0074 b\u0065\u0020\u003e\u003d\u0020\u0032\u00356 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _gbabc.IdAttr)
	}
	if _gbabc.IdAttr >= 2147483648 {
		return _ce.Errorf("\u0025\u0073\u002fm\u002e\u0049\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u0036\u0034\u0038\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _gbabc.IdAttr)
	}
	if _gbabc.ExtLst != nil {
		if _abaf := _gbabc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abaf != nil {
			return _abaf
		}
	}
	return nil
}

// Validate validates the CT_NormalViewProperties and its children
func (_gfcb *CT_NormalViewProperties) Validate() error {
	return _gfcb.ValidateWithPath("\u0043\u0054\u005fNo\u0072\u006d\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_eddca *CT_SlideLayout) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_eddca.CSld = NewCT_CommonSlideData()
	for _, _ggba := range start.Attr {
		if _ggba.Name.Local == "\u006d\u0061\u0074c\u0068\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_aafda, _gbde := _ggba.Value, error(nil)
			if _gbde != nil {
				return _gbde
			}
			_eddca.MatchingNameAttr = &_aafda
			continue
		}
		if _ggba.Name.Local == "\u0074\u0079\u0070\u0065" {
			_eddca.TypeAttr.UnmarshalXMLAttr(_ggba)
			continue
		}
		if _ggba.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_fbbcc, _ebdg := _d.ParseBool(_ggba.Value)
			if _ebdg != nil {
				return _ebdg
			}
			_eddca.PreserveAttr = &_fbbcc
			continue
		}
		if _ggba.Name.Local == "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n" {
			_bedd, _bdga := _d.ParseBool(_ggba.Value)
			if _bdga != nil {
				return _bdga
			}
			_eddca.UserDrawnAttr = &_bedd
			continue
		}
		if _ggba.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_gfafe, _aaaf := _d.ParseBool(_ggba.Value)
			if _aaaf != nil {
				return _aaaf
			}
			_eddca.ShowMasterSpAttr = &_gfafe
			continue
		}
		if _ggba.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_abga, _effgdc := _d.ParseBool(_ggba.Value)
			if _effgdc != nil {
				return _effgdc
			}
			_eddca.ShowMasterPhAnimAttr = &_abga
			continue
		}
	}
_gbac:
	for {
		_fgfgb, _dfbee := d.Token()
		if _dfbee != nil {
			return _dfbee
		}
		switch _bead := _fgfgb.(type) {
		case _g.StartElement:
			switch _bead.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _ccca := d.DecodeElement(_eddca.CSld, &_bead); _ccca != nil {
					return _ccca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_eddca.ClrMapOvr = _f.NewCT_ColorMappingOverride()
				if _fdea := d.DecodeElement(_eddca.ClrMapOvr, &_bead); _fdea != nil {
					return _fdea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_eddca.Transition = NewCT_SlideTransition()
				if _gcaa := d.DecodeElement(_eddca.Transition, &_bead); _gcaa != nil {
					return _gcaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_eddca.Timing = NewCT_SlideTiming()
				if _acacc := d.DecodeElement(_eddca.Timing, &_bead); _acacc != nil {
					return _acacc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_eddca.Hf = NewCT_HeaderFooter()
				if _gfbaf := d.DecodeElement(_eddca.Hf, &_bead); _gfbaf != nil {
					return _gfbaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eddca.ExtLst = NewCT_ExtensionListModify()
				if _fcgd := d.DecodeElement(_eddca.ExtLst, &_bead); _fcgd != nil {
					return _fcgd
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004c\u0061y\u006fu\u0074\u0020\u0025\u0076", _bead.Name)
				if _bfaa := d.Skip(); _bfaa != nil {
					return _bfaa
				}
			}
		case _g.EndElement:
			break _gbac
		case _g.CharData:
		}
	}
	return nil
}

func (_dffdg ST_TransitionCornerDirectionType) ValidateWithPath(path string) error {
	switch _dffdg {
	case 0, 1, 2, 3, 4:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dffdg))
	}
	return nil
}

func (_eaafa *ST_TransitionCornerDirectionType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_eaafa = 0
	case "\u006c\u0075":
		*_eaafa = 1
	case "\u0072\u0075":
		*_eaafa = 2
	case "\u006c\u0064":
		*_eaafa = 3
	case "\u0072\u0064":
		*_eaafa = 4
	}
	return nil
}

func NewCT_PictureNonVisual() *CT_PictureNonVisual {
	_addg := &CT_PictureNonVisual{}
	_addg.CNvPr = _f.NewCT_NonVisualDrawingProps()
	_addg.CNvPicPr = _f.NewCT_NonVisualPictureProperties()
	_addg.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _addg
}

// Validate validates the CT_TLIterateData and its children
func (_efdfe *CT_TLIterateData) Validate() error {
	return _efdfe.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0049t\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061")
}

// Validate validates the CT_HtmlPublishProperties and its children
func (_fbcf *CT_HtmlPublishProperties) Validate() error {
	return _fbcf.ValidateWithPath("\u0043T\u005f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u006c\u0069\u0073h\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_ddbcf *ST_SlideLayoutType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_ddbcf = 0
	case "\u0074\u0069\u0074l\u0065":
		*_ddbcf = 1
	case "\u0074\u0078":
		*_ddbcf = 2
	case "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078":
		*_ddbcf = 3
	case "\u0074\u0062\u006c":
		*_ddbcf = 4
	case "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074":
		*_ddbcf = 5
	case "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
		*_ddbcf = 6
	case "\u0064\u0067\u006d":
		*_ddbcf = 7
	case "\u0063\u0068\u0061r\u0074":
		*_ddbcf = 8
	case "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074":
		*_ddbcf = 9
	case "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
		*_ddbcf = 10
	case "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy":
		*_ddbcf = 11
	case "\u0062\u006c\u0061n\u006b":
		*_ddbcf = 12
	case "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a":
		*_ddbcf = 13
	case "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
		*_ddbcf = 14
	case "\u006fb\u006a\u004f\u006e\u006c\u0079":
		*_ddbcf = 15
	case "\u006f\u0062\u006a":
		*_ddbcf = 16
	case "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061":
		*_ddbcf = 17
	case "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078":
		*_ddbcf = 18
	case "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x":
		*_ddbcf = 19
	case "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j":
		*_ddbcf = 20
	case "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
		*_ddbcf = 21
	case "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
		*_ddbcf = 22
	case "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078":
		*_ddbcf = 23
	case "\u0066o\u0075\u0072\u004f\u0062\u006a":
		*_ddbcf = 24
	case "\u0076\u0065\u0072\u0074\u0054\u0078":
		*_ddbcf = 25
	case "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078":
		*_ddbcf = 26
	case "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078":
		*_ddbcf = 27
	case "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074":
		*_ddbcf = 28
	case "\u0074\u0077\u006f\u004f\u0062\u006a":
		*_ddbcf = 29
	case "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
		*_ddbcf = 30
	case "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a":
		*_ddbcf = 31
	case "\u0063\u0075\u0073\u0074":
		*_ddbcf = 32
	case "\u0073e\u0063\u0048\u0065\u0061\u0064":
		*_ddbcf = 33
	case "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a":
		*_ddbcf = 34
	case "\u006f\u0062\u006aT\u0078":
		*_ddbcf = 35
	case "\u0070\u0069\u0063T\u0078":
		*_ddbcf = 36
	}
	return nil
}

func (_ecbbg ST_TLTriggerEvent) ValidateWithPath(path string) error {
	switch _ecbbg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecbbg))
	}
	return nil
}

func (_ceebb ST_PlaceholderType) Validate() error { return _ceebb.ValidateWithPath("") }

func (_cddde ST_WebColorType) String() string {
	switch _cddde {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0062r\u006f\u0077\u0073\u0065\u0072"
	case 3:
		return "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case 4:
		return "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074"
	case 5:
		return "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b"
	case 6:
		return "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065"
	}
	return ""
}

func (_ebbfcg ST_TLTriggerRuntimeNode) Validate() error { return _ebbfcg.ValidateWithPath("") }

type ST_TLAnimateEffectTransition byte

// Validate validates the CT_TLBehaviorAttributeNameList and its children
func (_dacef *CT_TLBehaviorAttributeNameList) Validate() error {
	return _dacef.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0042\u0065\u0068\u0061\u0076i\u006f\u0072\u0041\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u004e\u0061\u006d\u0065\u004c\u0069\u0073\u0074")
}

type CT_PrintProperties struct {

	// Print Output
	PrnWhatAttr ST_PrintWhat

	// Print Color Mode
	ClrModeAttr ST_PrintColorMode

	// Print Hidden Slides
	HiddenSlidesAttr *bool

	// Scale to Fit Paper when printing
	ScaleToFitPaperAttr *bool

	// Frame slides when printing
	FrameSlidesAttr *bool
	ExtLst          *CT_ExtensionList
}

func (_cgffa ST_TLTimeNodeFillType) ValidateWithPath(path string) error {
	switch _cgffa {
	case 0, 1, 2, 3, 4:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cgffa))
	}
	return nil
}

func NewCT_Presentation() *CT_Presentation {
	_agaa := &CT_Presentation{}
	_agaa.NotesSz = _f.NewCT_PositiveSize2D()
	return _agaa
}

func (_ebbbg *CT_PictureNonVisual) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ebbbg.CNvPr = _f.NewCT_NonVisualDrawingProps()
	_ebbbg.CNvPicPr = _f.NewCT_NonVisualPictureProperties()
	_ebbbg.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_bebff:
	for {
		_efab, _cdgdde := d.Token()
		if _cdgdde != nil {
			return _cdgdde
		}
		switch _bgfge := _efab.(type) {
		case _g.StartElement:
			switch _bgfge.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _eecd := d.DecodeElement(_ebbbg.CNvPr, &_bgfge); _eecd != nil {
					return _eecd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}:
				if _aebfc := d.DecodeElement(_ebbbg.CNvPicPr, &_bgfge); _aebfc != nil {
					return _aebfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _ddcbd := d.DecodeElement(_ebbbg.NvPr, &_bgfge); _ddcbd != nil {
					return _ddcbd
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065No\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _bgfge.Name)
				if _dfdg := d.Skip(); _dfdg != nil {
					return _dfdg
				}
			}
		case _g.EndElement:
			break _bebff
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_EmbeddedFontListEntry and its children, prefixing error messages with path
func (_aegc *CT_EmbeddedFontListEntry) ValidateWithPath(path string) error {
	if _bba := _aegc.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _bba != nil {
		return _bba
	}
	if _aegc.Regular != nil {
		if _bcdag := _aegc.Regular.ValidateWithPath(path + "\u002f\u0052\u0065\u0067\u0075\u006c\u0061\u0072"); _bcdag != nil {
			return _bcdag
		}
	}
	if _aegc.Bold != nil {
		if _cdgdb := _aegc.Bold.ValidateWithPath(path + "\u002f\u0042\u006fl\u0064"); _cdgdb != nil {
			return _cdgdb
		}
	}
	if _aegc.Italic != nil {
		if _egc := _aegc.Italic.ValidateWithPath(path + "\u002fI\u0074\u0061\u006c\u0069\u0063"); _egc != nil {
			return _egc
		}
	}
	if _aegc.BoldItalic != nil {
		if _fbbf := _aegc.BoldItalic.ValidateWithPath(path + "/\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"); _fbbf != nil {
			return _fbbf
		}
	}
	return nil
}

func (_ecacb *ST_TLAnimateBehaviorValueType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_deefc, _ggbag := d.Token()
	if _ggbag != nil {
		return _ggbag
	}
	if _efdab, _dgfdc := _deefc.(_g.EndElement); _dgfdc && _efdab.Name == start.Name {
		*_ecacb = 1
		return nil
	}
	if _eafba, _dgada := _deefc.(_g.CharData); !_dgada {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _deefc)
	} else {
		switch string(_eafba) {
		case "":
			*_ecacb = 0
		case "\u0073\u0074\u0072":
			*_ecacb = 1
		case "\u006e\u0075\u006d":
			*_ecacb = 2
		case "\u0063\u006c\u0072":
			*_ecacb = 3
		}
	}
	_deefc, _ggbag = d.Token()
	if _ggbag != nil {
		return _ggbag
	}
	if _ebcg, _gfcaba := _deefc.(_g.EndElement); _gfcaba && _ebcg.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _deefc)
}

func NewCT_TagList() *CT_TagList { _dbgg := &CT_TagList{}; return _dbgg }

func (_gceab ST_TLOleChartBuildType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cfcbf := _g.Attr{}
	_cfcbf.Name = name
	switch _gceab {
	case ST_TLOleChartBuildTypeUnset:
		_cfcbf.Value = ""
	case ST_TLOleChartBuildTypeAllAtOnce:
		_cfcbf.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case ST_TLOleChartBuildTypeSeries:
		_cfcbf.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_TLOleChartBuildTypeCategory:
		_cfcbf.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_TLOleChartBuildTypeSeriesEl:
		_cfcbf.Value = "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case ST_TLOleChartBuildTypeCategoryEl:
		_cfcbf.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return _cfcbf, nil
}

func (_gdegb *ST_TLPreviousActionType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_gdegb = 0
	case "\u006e\u006f\u006e\u0065":
		*_gdegb = 1
	case "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d":
		*_gdegb = 2
	}
	return nil
}

const (
	ST_TLAnimateColorSpaceUnset ST_TLAnimateColorSpace = 0
	ST_TLAnimateColorSpaceRgb   ST_TLAnimateColorSpace = 1
	ST_TLAnimateColorSpaceHsl   ST_TLAnimateColorSpace = 2
)

func (_cgcde *ST_TransitionSpeed) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_geba, _fgae := d.Token()
	if _fgae != nil {
		return _fgae
	}
	if _aggae, _aafcd := _geba.(_g.EndElement); _aafcd && _aggae.Name == start.Name {
		*_cgcde = 1
		return nil
	}
	if _ecddf, _eedfg := _geba.(_g.CharData); !_eedfg {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _geba)
	} else {
		switch string(_ecddf) {
		case "":
			*_cgcde = 0
		case "\u0073\u006c\u006f\u0077":
			*_cgcde = 1
		case "\u006d\u0065\u0064":
			*_cgcde = 2
		case "\u0066\u0061\u0073\u0074":
			*_cgcde = 3
		}
	}
	_geba, _fgae = d.Token()
	if _fgae != nil {
		return _fgae
	}
	if _bdgb, _caaag := _geba.(_g.EndElement); _caaag && _bdgb.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _geba)
}

func (_cegb *CT_EmbeddedFontListEntry) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_bcda := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0066\u006f\u006e\u0074"}}
	e.EncodeElement(_cegb.Font, _bcda)
	if _cegb.Regular != nil {
		_dafe := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0072\u0065\u0067\u0075\u006c\u0061r"}}
		e.EncodeElement(_cegb.Regular, _dafe)
	}
	if _cegb.Bold != nil {
		_cefc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u006f\u006c\u0064"}}
		e.EncodeElement(_cegb.Bold, _cefc)
	}
	if _cegb.Italic != nil {
		_cbeg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0069\u0074\u0061\u006c\u0069\u0063"}}
		e.EncodeElement(_cegb.Italic, _cbeg)
	}
	if _cegb.BoldItalic != nil {
		_gcgb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062o\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"}}
		e.EncodeElement(_cegb.BoldItalic, _gcgb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLTimeAnimateValue and its children, prefixing error messages with path
func (_cbgge *CT_TLTimeAnimateValue) ValidateWithPath(path string) error {
	if _cbgge.TmAttr != nil {
		if _cegbc := _cbgge.TmAttr.ValidateWithPath(path + "\u002fT\u006d\u0041\u0074\u0074\u0072"); _cegbc != nil {
			return _cegbc
		}
	}
	if _cbgge.Val != nil {
		if _bggff := _cbgge.Val.ValidateWithPath(path + "\u002f\u0056\u0061\u006c"); _bggff != nil {
			return _bggff
		}
	}
	return nil
}

func (_begab *CT_Kinsoku) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _begab.LangAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0061\u006e\u0067"}, Value: _ce.Sprintf("\u0025\u0076", *_begab.LangAttr)})
	}
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u006e\u0076a\u006c\u0053\u0074\u0043\u0068\u0061\u0072\u0073"}, Value: _ce.Sprintf("\u0025\u0076", _begab.InvalStCharsAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u006e\u0076\u0061\u006c\u0045\u006e\u0064\u0043\u0068\u0061\u0072\u0073"}, Value: _ce.Sprintf("\u0025\u0076", _begab.InvalEndCharsAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func ParseUnionST_PositivePercentage(s string) (_f.ST_PositivePercentage, error) {
	return _f.ParseUnionST_PositivePercentage(s)
}

const (
	ST_TLTriggerEventUnset       ST_TLTriggerEvent = 0
	ST_TLTriggerEventOnBegin     ST_TLTriggerEvent = 1
	ST_TLTriggerEventOnEnd       ST_TLTriggerEvent = 2
	ST_TLTriggerEventBegin       ST_TLTriggerEvent = 3
	ST_TLTriggerEventEnd         ST_TLTriggerEvent = 4
	ST_TLTriggerEventOnClick     ST_TLTriggerEvent = 5
	ST_TLTriggerEventOnDblClick  ST_TLTriggerEvent = 6
	ST_TLTriggerEventOnMouseOver ST_TLTriggerEvent = 7
	ST_TLTriggerEventOnMouseOut  ST_TLTriggerEvent = 8
	ST_TLTriggerEventOnNext      ST_TLTriggerEvent = 9
	ST_TLTriggerEventOnPrev      ST_TLTriggerEvent = 10
	ST_TLTriggerEventOnStopAudio ST_TLTriggerEvent = 11
)

func (_dab *CT_CommonViewProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dab.VarScaleAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u0072\u0053\u0063\u0061\u006c\u0065"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_dab.VarScaleAttr))})
	}
	e.EncodeToken(start)
	_gfea := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0073\u0063\u0061\u006c\u0065"}}
	e.EncodeElement(_dab.Scale, _gfea)
	_dfcc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u006f\u0072\u0069\u0067\u0069\u006e"}}
	e.EncodeElement(_dab.Origin, _dfcc)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TagsData and its children
func (_bgga *CT_TagsData) Validate() error {
	return _bgga.ValidateWithPath("C\u0054\u005f\u0054\u0061\u0067\u0073\u0044\u0061\u0074\u0061")
}

type CT_TLAnimateScaleBehavior struct {

	// Zoom Content
	ZoomContentsAttr *bool
	CBhvr            *CT_TLCommonBehaviorData

	// By
	By   *CT_TLPoint
	From *CT_TLPoint

	// To
	To *CT_TLPoint
}

func (_dcccg *ST_ViewType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_dcccg = 0
	case "\u0073l\u0064\u0056\u0069\u0065\u0077":
		*_dcccg = 1
	case "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
		*_dcccg = 2
	case "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w":
		*_dcccg = 3
	case "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077":
		*_dcccg = 4
	case "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
		*_dcccg = 5
	case "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077":
		*_dcccg = 6
	case "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
		*_dcccg = 7
	case "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077":
		*_dcccg = 8
	}
	return nil
}

// ValidateWithPath validates the CT_CommentList and its children, prefixing error messages with path
func (_gfc *CT_CommentList) ValidateWithPath(path string) error {
	for _abg, _ebd := range _gfc.Cm {
		if _cfde := _ebd.ValidateWithPath(_ce.Sprintf("\u0025s\u002f\u0043\u006d\u005b\u0025\u0064]", path, _abg)); _cfde != nil {
			return _cfde
		}
	}
	return nil
}

func (_agbf *CT_GroupShapeNonVisual) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_agbf.CNvPr = _f.NewCT_NonVisualDrawingProps()
	_agbf.CNvGrpSpPr = _f.NewCT_NonVisualGroupDrawingShapeProps()
	_agbf.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_eacga:
	for {
		_agag, _dceg := d.Token()
		if _dceg != nil {
			return _dceg
		}
		switch _abdc := _agag.(type) {
		case _g.StartElement:
			switch _abdc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _cfgd := d.DecodeElement(_agbf.CNvPr, &_abdc); _cfgd != nil {
					return _cfgd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}:
				if _gaca := d.DecodeElement(_agbf.CNvGrpSpPr, &_abdc); _gaca != nil {
					return _gaca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _caga := d.DecodeElement(_agbf.NvPr, &_abdc); _caga != nil {
					return _caga
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _abdc.Name)
				if _bffa := d.Skip(); _bffa != nil {
					return _bffa
				}
			}
		case _g.EndElement:
			break _eacga
		case _g.CharData:
		}
	}
	return nil
}

func (_fefa *NotesMaster) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fefa.CT_NotesMaster = *NewCT_NotesMaster()
_fgade:
	for {
		_acggeb, _gbgcd := d.Token()
		if _gbgcd != nil {
			return _gbgcd
		}
		switch _cdfbb := _acggeb.(type) {
		case _g.StartElement:
			switch _cdfbb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _caggg := d.DecodeElement(_fefa.CSld, &_cdfbb); _caggg != nil {
					return _caggg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _bbcf := d.DecodeElement(_fefa.ClrMap, &_cdfbb); _bbcf != nil {
					return _bbcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_fefa.Hf = NewCT_HeaderFooter()
				if _afbfa := d.DecodeElement(_fefa.Hf, &_cdfbb); _afbfa != nil {
					return _afbfa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}:
				_fefa.NotesStyle = _f.NewCT_TextListStyle()
				if _abcaa := d.DecodeElement(_fefa.NotesStyle, &_cdfbb); _abcaa != nil {
					return _abcaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fefa.ExtLst = NewCT_ExtensionListModify()
				if _fbgd := d.DecodeElement(_fefa.ExtLst, &_cdfbb); _fbgd != nil {
					return _fbgd
				}
			default:
				_e.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0020\u0025\u0076", _cdfbb.Name)
				if _gfada := d.Skip(); _gfada != nil {
					return _gfada
				}
			}
		case _g.EndElement:
			break _fgade
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_TLTemplate() *CT_TLTemplate {
	_cbagg := &CT_TLTemplate{}
	_cbagg.TnLst = NewCT_TimeNodeList()
	return _cbagg
}

type CT_TLAnimVariantIntegerVal struct {

	// Value
	ValAttr int32
}

// Validate validates the CT_CommonViewProperties and its children
func (_defg *CT_CommonViewProperties) Validate() error {
	return _defg.ValidateWithPath("\u0043\u0054\u005fCo\u006d\u006d\u006f\u006e\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

func (_dcb *CT_ApplicationNonVisualDrawingProps) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dcb.IsPhotoAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069s\u0050\u0068\u006f\u0074\u006f"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_dcb.IsPhotoAttr))})
	}
	if _dcb.UserDrawnAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_dcb.UserDrawnAttr))})
	}
	e.EncodeToken(start)
	if _dcb.Ph != nil {
		_cbf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0070\u0068"}}
		e.EncodeElement(_dcb.Ph, _cbf)
	}
	if _dcb.AudioCd != nil {
		_cfc := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0061\u0075\u0064\u0069\u006f\u0043d"}}
		e.EncodeElement(_dcb.AudioCd, _cfc)
	}
	if _dcb.WavAudioFile != nil {
		_feg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0077\u0061\u0076\u0041\u0075\u0064\u0069o\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_dcb.WavAudioFile, _feg)
	}
	if _dcb.AudioFile != nil {
		_dcba := _g.StartElement{Name: _g.Name{Local: "p\u003a\u0061\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_dcb.AudioFile, _dcba)
	}
	if _dcb.VideoFile != nil {
		_gb := _g.StartElement{Name: _g.Name{Local: "p\u003a\u0076\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_dcb.VideoFile, _gb)
	}
	if _dcb.QuickTimeFile != nil {
		_ceb := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0071u\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_dcb.QuickTimeFile, _ceb)
	}
	if _dcb.CustDataLst != nil {
		_gbc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}}
		e.EncodeElement(_dcb.CustDataLst, _gbc)
	}
	if _dcb.ExtLst != nil {
		_dcc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dcb.ExtLst, _dcc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gafd ST_TLTimeNodeSyncType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_gafd.String(), start)
}

func (_bebea ST_TLAnimateEffectTransition) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_bebea.String(), start)
}

// Validate validates the CT_TLTimeAnimateValueList and its children
func (_eaef *CT_TLTimeAnimateValueList) Validate() error {
	return _eaef.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0054i\u006d\u0065\u0041\u006e\u0069m\u0061t\u0065V\u0061\u006c\u0075\u0065\u004c\u0069\u0073t")
}

func (_ddgaa *CT_TLAnimVariant) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_eedd:
	for {
		_accfc, _acda := d.Token()
		if _acda != nil {
			return _acda
		}
		switch _dafge := _accfc.(type) {
		case _g.StartElement:
			switch _dafge.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062o\u006f\u006c\u0056\u0061\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006c\u0056\u0061\u006c"}:
				_ddgaa.BoolVal = NewCT_TLAnimVariantBooleanVal()
				if _cfccc := d.DecodeElement(_ddgaa.BoolVal, &_dafge); _cfccc != nil {
					return _cfccc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u006e\u0074\u0056\u0061\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0074\u0056\u0061\u006c"}:
				_ddgaa.IntVal = NewCT_TLAnimVariantIntegerVal()
				if _cbab := d.DecodeElement(_ddgaa.IntVal, &_dafge); _cbab != nil {
					return _cbab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u006c\u0074\u0056\u0061\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0074\u0056\u0061\u006c"}:
				_ddgaa.FltVal = NewCT_TLAnimVariantFloatVal()
				if _dcea := d.DecodeElement(_ddgaa.FltVal, &_dafge); _dcea != nil {
					return _dcea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0056\u0061\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0056\u0061\u006c"}:
				_ddgaa.StrVal = NewCT_TLAnimVariantStringVal()
				if _egff := d.DecodeElement(_ddgaa.StrVal, &_dafge); _egff != nil {
					return _egff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u0056\u0061\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u0056\u0061\u006c"}:
				_ddgaa.ClrVal = _f.NewCT_Color()
				if _daae := d.DecodeElement(_ddgaa.ClrVal, &_dafge); _daae != nil {
					return _daae
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074\u0020\u0025v", _dafge.Name)
				if _dgeda := d.Skip(); _dgeda != nil {
					return _dgeda
				}
			}
		case _g.EndElement:
			break _eedd
		case _g.CharData:
		}
	}
	return nil
}

type ST_TLPreviousActionType byte

type ST_PhotoAlbumLayout byte

func (_abdg *CT_SlideMasterIdList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _abdg.SldMasterId != nil {
		_fffca := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}}
		for _, _fdfcb := range _abdg.SldMasterId {
			e.EncodeElement(_fdfcb, _fffca)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gfgfc ST_TLAnimateMotionPathEditMode) String() string {
	switch _gfgfc {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065"
	case 2:
		return "\u0066\u0069\u0078e\u0064"
	}
	return ""
}

func (_aagcf *ST_TLTimeAnimateValueTime) ValidateWithPath(path string) error {
	_ffcda := []string{}
	if _aagcf.ST_PositiveFixedPercentage != nil {
		if _cbba := _aagcf.ST_PositiveFixedPercentage.ValidateWithPath(path + "/\u0053\u0054\u005f\u0050\u006f\u0073i\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064P\u0065\u0072\u0063e\u006et\u0061\u0067\u0065"); _cbba != nil {
			return _cbba
		}
		_ffcda = append(_ffcda, "\u0053\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065")
	}
	if _aagcf.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		_ffcda = append(_ffcda, "\u0053\u0054\u005f\u0054LT\u0069\u006d\u0065\u0049\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065")
	}
	if len(_ffcda) > 1 {
		return _ce.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _ffcda)
	}
	return nil
}

// Validate validates the CT_OleObjectLink and its children
func (_bfcf *CT_OleObjectLink) Validate() error {
	return _bfcf.ValidateWithPath("\u0043\u0054_\u004f\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u004c\u0069\u006e\u006b")
}

func (_eedcc ST_ViewType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_eedcc.String(), start)
}

func (_bfgb *CT_IndexRange) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gfcda := range start.Attr {
		if _gfcda.Name.Local == "\u0073\u0074" {
			_acef, _ebge := _d.ParseUint(_gfcda.Value, 10, 32)
			if _ebge != nil {
				return _ebge
			}
			_bfgb.StAttr = uint32(_acef)
			continue
		}
		if _gfcda.Name.Local == "\u0065\u006e\u0064" {
			_bfbce, _acf := _d.ParseUint(_gfcda.Value, 10, 32)
			if _acf != nil {
				return _acf
			}
			_bfgb.EndAttr = uint32(_bfbce)
			continue
		}
	}
	for {
		_cfag, _efefd := d.Token()
		if _efefd != nil {
			return _ce.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049n\u0064e\u0078R\u0061\u006e\u0067\u0065\u003a\u0020\u0025s", _efefd)
		}
		if _acff, _bege := _cfag.(_g.EndElement); _bege && _acff.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cgbc *CT_SlideIdList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _cgbc.SldId != nil {
		_edbc := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0073\u006c\u0064\u0049\u0064"}}
		for _, _dgae := range _cgbc.SldId {
			e.EncodeElement(_dgae, _edbc)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_faaaf ST_TLOleChartBuildType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_faaaf.String(), start)
}

func (_bccbg *CT_SlideLayoutIdList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dcddd:
	for {
		_ebbbd, _cgca := d.Token()
		if _cgca != nil {
			return _cgca
		}
		switch _dbfdc := _ebbbd.(type) {
		case _g.StartElement:
			switch _dbfdc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064"}:
				_fgbb := NewCT_SlideLayoutIdListEntry()
				if _gagfd := d.DecodeElement(_fgbb, &_dbfdc); _gagfd != nil {
					return _gagfd
				}
				_bccbg.SldLayoutId = append(_bccbg.SldLayoutId, _fgbb)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _dbfdc.Name)
				if _abdad := d.Skip(); _abdad != nil {
					return _abdad
				}
			}
		case _g.EndElement:
			break _dcddd
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BackgroundProperties and its children, prefixing error messages with path
func (_ead *CT_BackgroundProperties) ValidateWithPath(path string) error {
	if _ead.NoFill != nil {
		if _gcd := _ead.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _gcd != nil {
			return _gcd
		}
	}
	if _ead.SolidFill != nil {
		if _dfa := _ead.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _dfa != nil {
			return _dfa
		}
	}
	if _ead.GradFill != nil {
		if _ggf := _ead.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _ggf != nil {
			return _ggf
		}
	}
	if _ead.BlipFill != nil {
		if _gee := _ead.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _gee != nil {
			return _gee
		}
	}
	if _ead.PattFill != nil {
		if _degb := _ead.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _degb != nil {
			return _degb
		}
	}
	if _ead.GrpFill != nil {
		if _ded := _ead.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _ded != nil {
			return _ded
		}
	}
	if _ead.EffectLst != nil {
		if _dea := _ead.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _dea != nil {
			return _dea
		}
	}
	if _ead.EffectDag != nil {
		if _gdde := _ead.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _gdde != nil {
			return _gdde
		}
	}
	if _ead.ExtLst != nil {
		if _dfb := _ead.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dfb != nil {
			return _dfb
		}
	}
	return nil
}

const (
	ST_TLChartSubelementTypeUnset        ST_TLChartSubelementType = 0
	ST_TLChartSubelementTypeGridLegend   ST_TLChartSubelementType = 1
	ST_TLChartSubelementTypeSeries       ST_TLChartSubelementType = 2
	ST_TLChartSubelementTypeCategory     ST_TLChartSubelementType = 3
	ST_TLChartSubelementTypePtInSeries   ST_TLChartSubelementType = 4
	ST_TLChartSubelementTypePtInCategory ST_TLChartSubelementType = 5
)

func NewCT_TLAnimateMotionBehavior() *CT_TLAnimateMotionBehavior {
	_accea := &CT_TLAnimateMotionBehavior{}
	_accea.CBhvr = NewCT_TLCommonBehaviorData()
	return _accea
}

func (_eef *CT_ModifyVerifier) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _afd := range start.Attr {
		if _afd.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_agad, _gdda := _d.ParseUint(_afd.Value, 10, 32)
			if _gdda != nil {
				return _gdda
			}
			_adec := uint32(_agad)
			_eef.SpinCountAttr = &_adec
			continue
		}
		if _afd.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_ecfd, _fecfb := _afd.Value, error(nil)
			if _fecfb != nil {
				return _fecfb
			}
			_eef.AlgorithmNameAttr = &_ecfd
			continue
		}
		if _afd.Name.Local == "\u0073\u0061\u006c\u0074\u0044\u0061\u0074\u0061" {
			_ddbcb, _acggd := _afd.Value, error(nil)
			if _acggd != nil {
				return _acggd
			}
			_eef.SaltDataAttr = &_ddbcb
			continue
		}
		if _afd.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_gbga, _caaf := _afd.Value, error(nil)
			if _caaf != nil {
				return _caaf
			}
			_eef.SaltValueAttr = &_gbga
			continue
		}
		if _afd.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065r\u0054\u0079\u0070\u0065" {
			_eef.CryptProviderTypeAttr.UnmarshalXMLAttr(_afd)
			continue
		}
		if _afd.Name.Local == "\u0063\u0072\u0079\u0070tA\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u0043\u006c\u0061\u0073\u0073" {
			_eef.CryptAlgorithmClassAttr.UnmarshalXMLAttr(_afd)
			continue
		}
		if _afd.Name.Local == "\u0063r\u0079p\u0074\u0041\u006c\u0067\u006fr\u0069\u0074h\u006d\u0054\u0079\u0070\u0065" {
			_eef.CryptAlgorithmTypeAttr.UnmarshalXMLAttr(_afd)
			continue
		}
		if _afd.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074h\u006d\u0053\u0069\u0064" {
			_gbfd, _eggfg := _d.ParseUint(_afd.Value, 10, 32)
			if _eggfg != nil {
				return _eggfg
			}
			_faaa := uint32(_gbfd)
			_eef.CryptAlgorithmSidAttr = &_faaa
			continue
		}
		if _afd.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_abgd, _fcfd := _afd.Value, error(nil)
			if _fcfd != nil {
				return _fcfd
			}
			_eef.HashValueAttr = &_abgd
			continue
		}
		if _afd.Name.Local == "\u0073p\u0069\u006e\u0056\u0061\u006c\u0075e" {
			_gadge, _eabbd := _d.ParseUint(_afd.Value, 10, 32)
			if _eabbd != nil {
				return _eabbd
			}
			_eba := uint32(_gadge)
			_eef.SpinValueAttr = &_eba
			continue
		}
		if _afd.Name.Local == "\u0068\u0061\u0073\u0068\u0044\u0061\u0074\u0061" {
			_eeba, _bgef := _afd.Value, error(nil)
			if _bgef != nil {
				return _bgef
			}
			_eef.HashDataAttr = &_eeba
			continue
		}
		if _afd.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065\u0072" {
			_cfagd, _feae := _afd.Value, error(nil)
			if _feae != nil {
				return _feae
			}
			_eef.CryptProviderAttr = &_cfagd
			continue
		}
		if _afd.Name.Local == "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074" {
			_feaa, _ebaf := _d.ParseUint(_afd.Value, 10, 32)
			if _ebaf != nil {
				return _ebaf
			}
			_cfee := uint32(_feaa)
			_eef.AlgIdExtAttr = &_cfee
			continue
		}
		if _afd.Name.Local == "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074\u0053o\u0075\u0072\u0063\u0065" {
			_abbfa, _aeda := _afd.Value, error(nil)
			if _aeda != nil {
				return _aeda
			}
			_eef.AlgIdExtSourceAttr = &_abbfa
			continue
		}
		if _afd.Name.Local == "c\u0072y\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070eE\u0078\u0074" {
			_dgce, _fadfc := _d.ParseUint(_afd.Value, 10, 32)
			if _fadfc != nil {
				return _fadfc
			}
			_feff := uint32(_dgce)
			_eef.CryptProviderTypeExtAttr = &_feff
			continue
		}
		if _afd.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070\u0065\u0045\u0078\u0074\u0053\u006fu\u0072\u0063\u0065" {
			_fega, _addc := _afd.Value, error(nil)
			if _addc != nil {
				return _addc
			}
			_eef.CryptProviderTypeExtSourceAttr = &_fega
			continue
		}
	}
	for {
		_geae, _cdcg := d.Token()
		if _cdcg != nil {
			return _ce.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072\u0069\u0066\u0069\u0065\u0072: \u0025\u0073", _cdcg)
		}
		if _eege, _edgb := _geae.(_g.EndElement); _edgb && _eege.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ControlList and its children, prefixing error messages with path
func (_age *CT_ControlList) ValidateWithPath(path string) error {
	for _bfbd, _baff := range _age.Control {
		if _bfcgg := _baff.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006e\u0074\u0072\u006fl\u005b\u0025\u0064\u005d", path, _bfbd)); _bfcgg != nil {
			return _bfcgg
		}
	}
	return nil
}

func (_eaea *ST_TLCommandType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_eaea = 0
	case "\u0065\u0076\u0074":
		*_eaea = 1
	case "\u0063\u0061\u006c\u006c":
		*_eaea = 2
	case "\u0076\u0065\u0072\u0062":
		*_eaea = 3
	}
	return nil
}

func (_bagd *CT_SlideRelationshipListEntry) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cbcg := range start.Attr {
		if _cbcg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cbcg.Name.Local == "\u0069\u0064" || _cbcg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cbcg.Name.Local == "\u0069\u0064" {
			_fcgcd, _gbdbf := _cbcg.Value, error(nil)
			if _gbdbf != nil {
				return _gbdbf
			}
			_bagd.IdAttr = _fcgcd
			continue
		}
	}
	for {
		_gga, _fcgcf := d.Token()
		if _fcgcf != nil {
			return _ce.Errorf("\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079\u003a\u0020\u0025\u0073", _fcgcf)
		}
		if _bafac, _bedda := _gga.(_g.EndElement); _bedda && _bafac.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dgcc *CT_NormalViewProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dgcc.RestoredLeft = NewCT_NormalViewPortion()
	_dgcc.RestoredTop = NewCT_NormalViewPortion()
	for _, _eacb := range start.Attr {
		if _eacb.Name.Local == "\u0073\u0068o\u0077\u004f\u0075t\u006c\u0069\u006e\u0065\u0049\u0063\u006f\u006e\u0073" {
			_bccfg, _caab := _d.ParseBool(_eacb.Value)
			if _caab != nil {
				return _caab
			}
			_dgcc.ShowOutlineIconsAttr = &_bccfg
			continue
		}
		if _eacb.Name.Local == "\u0073\u006ea\u0070\u0056\u0065r\u0074\u0053\u0070\u006c\u0069\u0074\u0074\u0065\u0072" {
			_agge, _dfac := _d.ParseBool(_eacb.Value)
			if _dfac != nil {
				return _dfac
			}
			_dgcc.SnapVertSplitterAttr = &_agge
			continue
		}
		if _eacb.Name.Local == "\u0076\u0065\u0072t\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065" {
			_dgcc.VertBarStateAttr.UnmarshalXMLAttr(_eacb)
			continue
		}
		if _eacb.Name.Local == "\u0068\u006f\u0072z\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065" {
			_dgcc.HorzBarStateAttr.UnmarshalXMLAttr(_eacb)
			continue
		}
		if _eacb.Name.Local == "\u0070\u0072e\u0066\u0065\u0072S\u0069\u006e\u0067\u006c\u0065\u0056\u0069\u0065\u0077" {
			_gbab, _dba := _d.ParseBool(_eacb.Value)
			if _dba != nil {
				return _dba
			}
			_dgcc.PreferSingleViewAttr = &_gbab
			continue
		}
	}
_gedb:
	for {
		_ecdc, _adae := d.Token()
		if _adae != nil {
			return _adae
		}
		switch _efbe := _ecdc.(type) {
		case _g.StartElement:
			switch _efbe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0065\u0073t\u006f\u0072\u0065\u0064\u004c\u0065\u0066\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0073t\u006f\u0072\u0065\u0064\u004c\u0065\u0066\u0074"}:
				if _bcceg := d.DecodeElement(_dgcc.RestoredLeft, &_efbe); _bcceg != nil {
					return _bcceg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "r\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "r\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"}:
				if _efag := d.DecodeElement(_dgcc.RestoredTop, &_efbe); _efag != nil {
					return _efag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dgcc.ExtLst = NewCT_ExtensionList()
				if _caabc := d.DecodeElement(_dgcc.ExtLst, &_efbe); _caabc != nil {
					return _caabc
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _efbe.Name)
				if _febg := d.Skip(); _febg != nil {
					return _febg
				}
			}
		case _g.EndElement:
			break _gedb
		case _g.CharData:
		}
	}
	return nil
}

type ST_TLAnimateMotionBehaviorOrigin byte

type CT_ShapeNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_f.CT_NonVisualDrawingProps

	// Non-Visual Drawing Properties for a Shape
	CNvSpPr *_f.CT_NonVisualDrawingShapeProps

	// Application Non-Visual Drawing Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

type CT_EmbeddedFontList struct {

	// Embedded Font
	EmbeddedFont []*CT_EmbeddedFontListEntry
}

func NewCT_HandoutMasterIdListEntry() *CT_HandoutMasterIdListEntry {
	_agcda := &CT_HandoutMasterIdListEntry{}
	return _agcda
}

func (_eaega *EG_ExtensionList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _eaega.Ext != nil {
		_cagc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065x\u0074"}}
		for _, _ddba := range _eaega.Ext {
			e.EncodeElement(_ddba, _cagc)
		}
	}
	return nil
}

func NewCT_OleObjectEmbed() *CT_OleObjectEmbed { _bagg := &CT_OleObjectEmbed{}; return _bagg }

type CT_TransitionSoundAction struct {

	// Start Sound Action
	StSnd *CT_TransitionStartSoundAction

	// Stop Sound Action
	EndSnd *CT_Empty
}

// ValidateWithPath validates the CT_OutlineViewSlideList and its children, prefixing error messages with path
func (_feaad *CT_OutlineViewSlideList) ValidateWithPath(path string) error {
	for _dabce, _bgec := range _feaad.Sld {
		if _aabc := _bgec.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0053\u006c\u0064\u005b\u0025\u0064\u005d", path, _dabce)); _aabc != nil {
			return _aabc
		}
	}
	return nil
}

// Validate validates the AG_Ole and its children
func (_ceef *AG_Ole) Validate() error {
	return _ceef.ValidateWithPath("\u0041\u0047\u005f\u004f\u006c\u0065")
}

func (_cdfgd ST_TLTimeNodeSyncType) String() string {
	switch _cdfgd {
	case 0:
		return ""
	case 1:
		return "\u0063a\u006e\u0053\u006c\u0069\u0070"
	case 2:
		return "\u006c\u006f\u0063\u006b\u0065\u0064"
	}
	return ""
}

func (_ggggb *ST_TLAnimateColorDirection) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bgfdf, _ggcgg := d.Token()
	if _ggcgg != nil {
		return _ggcgg
	}
	if _fbffac, _dbdac := _bgfdf.(_g.EndElement); _dbdac && _fbffac.Name == start.Name {
		*_ggggb = 1
		return nil
	}
	if _adgg, _bagee := _bgfdf.(_g.CharData); !_bagee {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgfdf)
	} else {
		switch string(_adgg) {
		case "":
			*_ggggb = 0
		case "\u0063\u0077":
			*_ggggb = 1
		case "\u0063\u0063\u0077":
			*_ggggb = 2
		}
	}
	_bgfdf, _ggcgg = d.Token()
	if _ggcgg != nil {
		return _ggcgg
	}
	if _bfdccf, _cbdba := _bgfdf.(_g.EndElement); _cbdba && _bfdccf.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgfdf)
}

type ST_WebColorType byte

func (_dgbd *CT_NotesViewProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_dfcf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063S\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}}
	e.EncodeElement(_dgbd.CSldViewPr, _dfcf)
	if _dgbd.ExtLst != nil {
		_cbadc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dgbd.ExtLst, _cbadc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_efbfb *ST_Direction) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dbbde, _fabgf := d.Token()
	if _fabgf != nil {
		return _fabgf
	}
	if _aafdd, _bgbce := _dbbde.(_g.EndElement); _bgbce && _aafdd.Name == start.Name {
		*_efbfb = 1
		return nil
	}
	if _bagbd, _bddecf := _dbbde.(_g.CharData); !_bddecf {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbbde)
	} else {
		switch string(_bagbd) {
		case "":
			*_efbfb = 0
		case "\u0068\u006f\u0072\u007a":
			*_efbfb = 1
		case "\u0076\u0065\u0072\u0074":
			*_efbfb = 2
		}
	}
	_dbbde, _fabgf = d.Token()
	if _fabgf != nil {
		return _fabgf
	}
	if _bafef, _bbecb := _dbbde.(_g.EndElement); _bbecb && _bafef.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbbde)
}

type CmLst struct{ CT_CommentList }

// Validate validates the CT_ShapeNonVisual and its children
func (_agafg *CT_ShapeNonVisual) Validate() error {
	return _agafg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c")
}

func (_ebedc *CT_TLAnimVariantFloatVal) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gfgef := range start.Attr {
		if _gfgef.Name.Local == "\u0076\u0061\u006c" {
			_baaaf, _fcbgg := _d.ParseFloat(_gfgef.Value, 64)
			if _fcbgg != nil {
				return _fcbgg
			}
			_ebedc.ValAttr = float32(_baaaf)
			continue
		}
	}
	for {
		_bcca, _dadd := d.Token()
		if _dadd != nil {
			return _ce.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LAn\u0069mV\u0061\u0072\u0069\u0061\u006e\u0074\u0046lo\u0061\u0074\u0056\u0061\u006c\u003a\u0020%\u0073", _dadd)
		}
		if _cdccd, _fgcdc := _bcca.(_g.EndElement); _fgcdc && _cdccd.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ModifyVerifier and its children
func (_cgbe *CT_ModifyVerifier) Validate() error {
	return _cgbe.ValidateWithPath("\u0043\u0054\u005f\u004d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072")
}

// Validate validates the CT_SlideLayoutIdList and its children
func (_cgde *CT_SlideLayoutIdList) Validate() error {
	return _cgde.ValidateWithPath("C\u0054_\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079o\u0075\u0074\u0049\u0064Li\u0073\u0074")
}

type CT_SlideRelationshipListEntry struct{ IdAttr string }

func (_cbedb ST_SplitterBarState) ValidateWithPath(path string) error {
	switch _cbedb {
	case 0, 1, 2, 3:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbedb))
	}
	return nil
}

type SldLayout struct{ CT_SlideLayout }

const (
	ST_TransitionSideDirectionTypeUnset ST_TransitionSideDirectionType = 0
	ST_TransitionSideDirectionTypeL     ST_TransitionSideDirectionType = 1
	ST_TransitionSideDirectionTypeU     ST_TransitionSideDirectionType = 2
	ST_TransitionSideDirectionTypeR     ST_TransitionSideDirectionType = 3
	ST_TransitionSideDirectionTypeD     ST_TransitionSideDirectionType = 4
)

// Validate validates the CT_OutlineViewSlideEntry and its children
func (_abfg *CT_OutlineViewSlideEntry) Validate() error {
	return _abfg.ValidateWithPath("\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0053\u006c\u0069\u0064\u0065\u0045\u006e\u0074\u0072\u0079")
}

// Validate validates the CT_OptionalBlackTransition and its children
func (_cbaa *CT_OptionalBlackTransition) Validate() error {
	return _cbaa.ValidateWithPath("\u0043\u0054\u005f\u004f\u0070\u0074\u0069\u006f\u006e\u0061\u006cB\u006c\u0061\u0063\u006b\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e")
}

func (_ddaab ST_TLChartSubelementType) Validate() error { return _ddaab.ValidateWithPath("") }

// ValidateWithPath validates the CT_Picture and its children, prefixing error messages with path
func (_caaa *CT_Picture) ValidateWithPath(path string) error {
	if _baab := _caaa.NvPicPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0050\u0069\u0063\u0050\u0072"); _baab != nil {
		return _baab
	}
	if _beda := _caaa.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _beda != nil {
		return _beda
	}
	if _fcadf := _caaa.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _fcadf != nil {
		return _fcadf
	}
	if _caaa.Style != nil {
		if _fgcd := _caaa.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _fgcd != nil {
			return _fgcd
		}
	}
	if _caaa.ExtLst != nil {
		if _faab := _caaa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _faab != nil {
			return _faab
		}
	}
	return nil
}

func (_cbdfd ST_TLChartSubelementType) ValidateWithPath(path string) error {
	switch _cbdfd {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbdfd))
	}
	return nil
}

// ValidateWithPath validates the CT_NotesViewProperties and its children, prefixing error messages with path
func (_dbegf *CT_NotesViewProperties) ValidateWithPath(path string) error {
	if _beea := _dbegf.CSldViewPr.ValidateWithPath(path + "/\u0043\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"); _beea != nil {
		return _beea
	}
	if _dbegf.ExtLst != nil {
		if _gacab := _dbegf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gacab != nil {
			return _gacab
		}
	}
	return nil
}

// Validate validates the CT_TLTemplate and its children
func (_ffegg *CT_TLTemplate) Validate() error {
	return _ffegg.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065")
}

func (_gbecf *ST_TLTriggerRuntimeNode) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_aegea, _abebc := d.Token()
	if _abebc != nil {
		return _abebc
	}
	if _dabgg, _aafed := _aegea.(_g.EndElement); _aafed && _dabgg.Name == start.Name {
		*_gbecf = 1
		return nil
	}
	if _ddcbdd, _ebgfe := _aegea.(_g.CharData); !_ebgfe {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aegea)
	} else {
		switch string(_ddcbdd) {
		case "":
			*_gbecf = 0
		case "\u0066\u0069\u0072s\u0074":
			*_gbecf = 1
		case "\u006c\u0061\u0073\u0074":
			*_gbecf = 2
		case "\u0061\u006c\u006c":
			*_gbecf = 3
		}
	}
	_aegea, _abebc = d.Token()
	if _abebc != nil {
		return _abebc
	}
	if _aefbb, _afeda := _aegea.(_g.EndElement); _afeda && _aefbb.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aegea)
}

// ValidateWithPath validates the EG_TopLevelSlide and its children, prefixing error messages with path
func (_dfgge *EG_TopLevelSlide) ValidateWithPath(path string) error {
	if _cfdee := _dfgge.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _cfdee != nil {
		return _cfdee
	}
	return nil
}

func NewCT_TLAnimateScaleBehavior() *CT_TLAnimateScaleBehavior {
	_dgfgb := &CT_TLAnimateScaleBehavior{}
	_dgfgb.CBhvr = NewCT_TLCommonBehaviorData()
	return _dgfgb
}

func (_bbfcc ST_PrintColorMode) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_eeadc := _g.Attr{}
	_eeadc.Name = name
	switch _bbfcc {
	case ST_PrintColorModeUnset:
		_eeadc.Value = ""
	case ST_PrintColorModeBw:
		_eeadc.Value = "\u0062\u0077"
	case ST_PrintColorModeGray:
		_eeadc.Value = "\u0067\u0072\u0061\u0079"
	case ST_PrintColorModeClr:
		_eeadc.Value = "\u0063\u006c\u0072"
	}
	return _eeadc, nil
}

func (_geaeg *CT_TLAnimVariantFloatVal) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _ce.Sprintf("\u0025\u0076", _geaeg.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fgcdd *CT_TLTimeConditionList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ebbea:
	for {
		_addfb, _eddcea := d.Token()
		if _eddcea != nil {
			return _eddcea
		}
		switch _eebad := _addfb.(type) {
		case _g.StartElement:
			switch _eebad.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006e\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064"}:
				_bgee := NewCT_TLTimeCondition()
				if _ggbdc := d.DecodeElement(_bgee, &_eebad); _ggbdc != nil {
					return _ggbdc
				}
				_fgcdd.Cond = append(_fgcdd.Cond, _bgee)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0069m\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _eebad.Name)
				if _cbff := d.Skip(); _cbff != nil {
					return _cbff
				}
			}
		case _g.EndElement:
			break _ebbea
		case _g.CharData:
		}
	}
	return nil
}

func (_dcdfe ST_TLChartSubelementType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_eddff := _g.Attr{}
	_eddff.Name = name
	switch _dcdfe {
	case ST_TLChartSubelementTypeUnset:
		_eddff.Value = ""
	case ST_TLChartSubelementTypeGridLegend:
		_eddff.Value = "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	case ST_TLChartSubelementTypeSeries:
		_eddff.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_TLChartSubelementTypeCategory:
		_eddff.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_TLChartSubelementTypePtInSeries:
		_eddff.Value = "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case ST_TLChartSubelementTypePtInCategory:
		_eddff.Value = "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	}
	return _eddff, nil
}

type CT_TLBehaviorAttributeNameList struct {

	// Attribute Name
	AttrName []string
}

func (_feea *CT_TLSubShapeId) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _feea.SpidAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLBuildParagraph and its children, prefixing error messages with path
func (_dada *CT_TLBuildParagraph) ValidateWithPath(path string) error {
	if _deffg := _dada.BuildAttr.ValidateWithPath(path + "\u002f\u0042\u0075\u0069\u006c\u0064\u0041\u0074\u0074\u0072"); _deffg != nil {
		return _deffg
	}
	if _dada.AdvAutoAttr != nil {
		if _ccgc := _dada.AdvAutoAttr.ValidateWithPath(path + "\u002f\u0041\u0064v\u0041\u0075\u0074\u006f\u0041\u0074\u0074\u0072"); _ccgc != nil {
			return _ccgc
		}
	}
	if _dada.TmplLst != nil {
		if _facg := _dada.TmplLst.ValidateWithPath(path + "\u002f\u0054\u006d\u0070\u006c\u004c\u0073\u0074"); _facg != nil {
			return _facg
		}
	}
	return nil
}

// Validate validates the CT_NotesMasterIdListEntry and its children
func (_bcb *CT_NotesMasterIdListEntry) Validate() error {
	return _bcb.ValidateWithPath("\u0043T\u005f\u004e\u006f\u0074e\u0073\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y")
}

func (_cffad *CT_TLTimeNodeSequence) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cffad.ConcurrentAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006e\u0074"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cffad.ConcurrentAttr))})
	}
	if _cffad.PrevAcAttr != ST_TLPreviousActionTypeUnset {
		_bdcc, _aagfg := _cffad.PrevAcAttr.MarshalXMLAttr(_g.Name{Local: "\u0070\u0072\u0065\u0076\u0041\u0063"})
		if _aagfg != nil {
			return _aagfg
		}
		start.Attr = append(start.Attr, _bdcc)
	}
	if _cffad.NextAcAttr != ST_TLNextActionTypeUnset {
		_dbee, _cdbbd := _cffad.NextAcAttr.MarshalXMLAttr(_g.Name{Local: "\u006e\u0065\u0078\u0074\u0041\u0063"})
		if _cdbbd != nil {
			return _cdbbd
		}
		start.Attr = append(start.Attr, _dbee)
	}
	e.EncodeToken(start)
	_fdaa := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_cffad.CTn, _fdaa)
	if _cffad.PrevCondLst != nil {
		_ebcff := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0070\u0072\u0065\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_cffad.PrevCondLst, _ebcff)
	}
	if _cffad.NextCondLst != nil {
		_afefa := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u006e\u0065\u0078\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_cffad.NextCondLst, _afefa)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_OleObjectLink() *CT_OleObjectLink { _dbbeb := &CT_OleObjectLink{}; return _dbbeb }

type CT_TLAnimateBehavior struct {

	// By
	ByAttr *string

	// From
	FromAttr *string

	// To
	ToAttr *string

	// Calculation Mode
	CalcmodeAttr ST_TLAnimateBehaviorCalcMode

	// Value Type
	ValueTypeAttr ST_TLAnimateBehaviorValueType
	CBhvr         *CT_TLCommonBehaviorData

	// Time Animated Value List
	TavLst *CT_TLTimeAnimateValueList
}

func (_aggea *CT_SlideTransitionChoice) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _aggea.Blinds != nil {
		_feadc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u006c\u0069\u006e\u0064\u0073"}}
		e.EncodeElement(_aggea.Blinds, _feadc)
	}
	if _aggea.Checker != nil {
		_ddbfb := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u0068\u0065\u0063\u006b\u0065r"}}
		e.EncodeElement(_aggea.Checker, _ddbfb)
	}
	if _aggea.Circle != nil {
		_gacf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u0069\u0072\u0063\u006c\u0065"}}
		e.EncodeElement(_aggea.Circle, _gacf)
	}
	if _aggea.Dissolve != nil {
		_badgg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}}
		e.EncodeElement(_aggea.Dissolve, _badgg)
	}
	if _aggea.Comb != nil {
		_beaag := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u006f\u006d\u0062"}}
		e.EncodeElement(_aggea.Comb, _beaag)
	}
	if _aggea.Cover != nil {
		_cccaa := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u006f\u0076\u0065\u0072"}}
		e.EncodeElement(_aggea.Cover, _cccaa)
	}
	if _aggea.Cut != nil {
		_acba := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063u\u0074"}}
		e.EncodeElement(_aggea.Cut, _acba)
	}
	if _aggea.Diamond != nil {
		_fgbcf := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0064\u0069\u0061\u006d\u006f\u006ed"}}
		e.EncodeElement(_aggea.Diamond, _fgbcf)
	}
	if _aggea.Fade != nil {
		_ebded := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0066\u0061\u0064\u0065"}}
		e.EncodeElement(_aggea.Fade, _ebded)
	}
	if _aggea.Newsflash != nil {
		_agdb := _g.StartElement{Name: _g.Name{Local: "p\u003a\u006e\u0065\u0077\u0073\u0066\u006c\u0061\u0073\u0068"}}
		e.EncodeElement(_aggea.Newsflash, _agdb)
	}
	if _aggea.Plus != nil {
		_cbgg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0070\u006c\u0075\u0073"}}
		e.EncodeElement(_aggea.Plus, _cbgg)
	}
	if _aggea.Pull != nil {
		_beggb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0070\u0075\u006c\u006c"}}
		e.EncodeElement(_aggea.Pull, _beggb)
	}
	if _aggea.Push != nil {
		_cecf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0070\u0075\u0073\u0068"}}
		e.EncodeElement(_aggea.Push, _cecf)
	}
	if _aggea.Random != nil {
		_cfbbe := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0072\u0061\u006e\u0064\u006f\u006d"}}
		e.EncodeElement(_aggea.Random, _cfbbe)
	}
	if _aggea.RandomBar != nil {
		_dgda := _g.StartElement{Name: _g.Name{Local: "p\u003a\u0072\u0061\u006e\u0064\u006f\u006d\u0042\u0061\u0072"}}
		e.EncodeElement(_aggea.RandomBar, _dgda)
	}
	if _aggea.Split != nil {
		_deedg := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0073\u0070\u006c\u0069\u0074"}}
		e.EncodeElement(_aggea.Split, _deedg)
	}
	if _aggea.Strips != nil {
		_dfdb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u0074\u0072\u0069\u0070\u0073"}}
		e.EncodeElement(_aggea.Strips, _dfdb)
	}
	if _aggea.Wedge != nil {
		_fdegg := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0077\u0065\u0064\u0067\u0065"}}
		e.EncodeElement(_aggea.Wedge, _fdegg)
	}
	if _aggea.Wheel != nil {
		_bddec := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0077\u0068\u0065\u0065\u006c"}}
		e.EncodeElement(_aggea.Wheel, _bddec)
	}
	if _aggea.Wipe != nil {
		_bfdb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0077\u0069\u0070\u0065"}}
		e.EncodeElement(_aggea.Wipe, _bfdb)
	}
	if _aggea.Zoom != nil {
		_gfca := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u007a\u006f\u006f\u006d"}}
		e.EncodeElement(_aggea.Zoom, _gfca)
	}
	return nil
}

func ParseUnionST_PositiveFixedPercentage(s string) (_f.ST_PositiveFixedPercentage, error) {
	return _f.ParseUnionST_PositiveFixedPercentage(s)
}

func (_dgfae *CT_OutlineViewSlideList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _dgfae.Sld != nil {
		_edbee := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073l\u0064"}}
		for _, _bgba := range _dgfae.Sld {
			e.EncodeElement(_bgba, _edbee)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Control and its children
func (_gdgbc *CT_Control) Validate() error {
	return _gdgbc.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c")
}

// Validate validates the EG_ExtensionList and its children
func (_adadf *EG_ExtensionList) Validate() error {
	return _adadf.ValidateWithPath("\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}

func NewCT_TLCommandBehavior() *CT_TLCommandBehavior {
	_dccac := &CT_TLCommandBehavior{}
	_dccac.CBhvr = NewCT_TLCommonBehaviorData()
	return _dccac
}

func (_abffc ST_TLParaBuildType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_abffc.String(), start)
}

func (_cccca *ST_TLAnimateEffectTransition) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ebad, _ecbcce := d.Token()
	if _ecbcce != nil {
		return _ecbcce
	}
	if _cgaee, _dadba := _ebad.(_g.EndElement); _dadba && _cgaee.Name == start.Name {
		*_cccca = 1
		return nil
	}
	if _ebddd, _fbbce := _ebad.(_g.CharData); !_fbbce {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebad)
	} else {
		switch string(_ebddd) {
		case "":
			*_cccca = 0
		case "\u0069\u006e":
			*_cccca = 1
		case "\u006f\u0075\u0074":
			*_cccca = 2
		case "\u006e\u006f\u006e\u0065":
			*_cccca = 3
		}
	}
	_ebad, _ecbcce = d.Token()
	if _ecbcce != nil {
		return _ecbcce
	}
	if _dbgag, _dgfag := _ebad.(_g.EndElement); _dgfag && _dbgag.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebad)
}

// Validate validates the CT_TransitionStartSoundAction and its children
func (_cdabe *CT_TransitionStartSoundAction) Validate() error {
	return _cdabe.ValidateWithPath("\u0043\u0054_\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u0074\u0061\u0072\u0074\u0053\u006f\u0075\u006e\u0064\u0041\u0063ti\u006f\u006e")
}

func (_defga ST_TLDiagramBuildType) Validate() error { return _defga.ValidateWithPath("") }

type ST_PlaceholderType byte

func (_ggabd *CT_TLOleChartTargetElement) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	_dded, _dfdaf := _ggabd.TypeAttr.MarshalXMLAttr(_g.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _dfdaf != nil {
		return _dfdaf
	}
	start.Attr = append(start.Attr, _dded)
	if _ggabd.LvlAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0076\u006c"}, Value: _ce.Sprintf("\u0025\u0076", *_ggabd.LvlAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_TLAnimVariantIntegerVal() *CT_TLAnimVariantIntegerVal {
	_bcff := &CT_TLAnimVariantIntegerVal{}
	return _bcff
}

func NewCT_TLTimeNodeParallel() *CT_TLTimeNodeParallel {
	_deggg := &CT_TLTimeNodeParallel{}
	_deggg.CTn = NewCT_TLCommonTimeNodeData()
	return _deggg
}

const (
	ST_TransitionInOutDirectionTypeUnset ST_TransitionInOutDirectionType = 0
	ST_TransitionInOutDirectionTypeOut   ST_TransitionInOutDirectionType = 1
	ST_TransitionInOutDirectionTypeIn    ST_TransitionInOutDirectionType = 2
)

// ValidateWithPath validates the CT_PhotoAlbum and its children, prefixing error messages with path
func (_dccda *CT_PhotoAlbum) ValidateWithPath(path string) error {
	if _fgfe := _dccda.LayoutAttr.ValidateWithPath(path + "/\u004c\u0061\u0079\u006f\u0075\u0074\u0041\u0074\u0074\u0072"); _fgfe != nil {
		return _fgfe
	}
	if _fabeg := _dccda.FrameAttr.ValidateWithPath(path + "\u002f\u0046\u0072\u0061\u006d\u0065\u0041\u0074\u0074\u0072"); _fabeg != nil {
		return _fabeg
	}
	if _dccda.ExtLst != nil {
		if _eafdb := _dccda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eafdb != nil {
			return _eafdb
		}
	}
	return nil
}

func (_bfade *ST_TLBehaviorAdditiveType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gacdg, _cecfc := d.Token()
	if _cecfc != nil {
		return _cecfc
	}
	if _feceb, _fbcga := _gacdg.(_g.EndElement); _fbcga && _feceb.Name == start.Name {
		*_bfade = 1
		return nil
	}
	if _cfca, _gdbab := _gacdg.(_g.CharData); !_gdbab {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gacdg)
	} else {
		switch string(_cfca) {
		case "":
			*_bfade = 0
		case "\u0062\u0061\u0073\u0065":
			*_bfade = 1
		case "\u0073\u0075\u006d":
			*_bfade = 2
		case "\u0072\u0065\u0070\u006c":
			*_bfade = 3
		case "\u006d\u0075\u006c\u0074":
			*_bfade = 4
		case "\u006e\u006f\u006e\u0065":
			*_bfade = 5
		}
	}
	_gacdg, _cecfc = d.Token()
	if _cecfc != nil {
		return _cecfc
	}
	if _bdcac, _ccecc := _gacdg.(_g.EndElement); _ccecc && _bdcac.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gacdg)
}

type ST_SlideLayoutType byte

func (_dccb *CT_ShowInfoBrowse) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _deba := range start.Attr {
		if _deba.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0063\u0072\u006f\u006c\u006c\u0062\u0061\u0072" {
			_abdeb, _agfg := _d.ParseBool(_deba.Value)
			if _agfg != nil {
				return _agfg
			}
			_dccb.ShowScrollbarAttr = &_abdeb
			continue
		}
	}
	for {
		_fedad, _bfcggd := d.Token()
		if _bfcggd != nil {
			return _ce.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0049\u006e\u0066\u006f\u0042\u0072\u006f\u0077\u0073\u0065: \u0025\u0073", _bfcggd)
		}
		if _ccfc, _ebbg := _fedad.(_g.EndElement); _ebbg && _ccfc.Name == start.Name {
			break
		}
	}
	return nil
}

func (_abbe *CT_HeaderFooter) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cddg := range start.Attr {
		if _cddg.Name.Local == "\u0073\u006c\u0064\u004e\u0075\u006d" {
			_caf, _eedg := _d.ParseBool(_cddg.Value)
			if _eedg != nil {
				return _eedg
			}
			_abbe.SldNumAttr = &_caf
			continue
		}
		if _cddg.Name.Local == "\u0068\u0064\u0072" {
			_dage, _fefc := _d.ParseBool(_cddg.Value)
			if _fefc != nil {
				return _fefc
			}
			_abbe.HdrAttr = &_dage
			continue
		}
		if _cddg.Name.Local == "\u0066\u0074\u0072" {
			_aacfe, _gfcd := _d.ParseBool(_cddg.Value)
			if _gfcd != nil {
				return _gfcd
			}
			_abbe.FtrAttr = &_aacfe
			continue
		}
		if _cddg.Name.Local == "\u0064\u0074" {
			_ddf, _fbag := _d.ParseBool(_cddg.Value)
			if _fbag != nil {
				return _fbag
			}
			_abbe.DtAttr = &_ddf
			continue
		}
	}
_bed:
	for {
		_cfec, _fbfa := d.Token()
		if _fbfa != nil {
			return _fbfa
		}
		switch _fabb := _cfec.(type) {
		case _g.StartElement:
			switch _fabb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abbe.ExtLst = NewCT_ExtensionListModify()
				if _dadga := d.DecodeElement(_abbe.ExtLst, &_fabb); _dadga != nil {
					return _dadga
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072\u0020\u0025\u0076", _fabb.Name)
				if _dafg := d.Skip(); _dafg != nil {
					return _dafg
				}
			}
		case _g.EndElement:
			break _bed
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CmAuthorLst and its children, prefixing error messages with path
func (_aadbd *CmAuthorLst) ValidateWithPath(path string) error {
	if _fgeac := _aadbd.CT_CommentAuthorList.ValidateWithPath(path); _fgeac != nil {
		return _fgeac
	}
	return nil
}

type CT_ModifyVerifier struct {

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinValueAttr *uint32

	// Cryptographic Provider Type
	CryptProviderTypeAttr _fg.ST_CryptProv

	// Cryptographic Algorithm Class
	CryptAlgorithmClassAttr _fg.ST_AlgClass

	// Cryptographic Algorithm Type
	CryptAlgorithmTypeAttr _fg.ST_AlgType

	// Cryptographic Hashing Algorithm
	CryptAlgorithmSidAttr *uint32

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Salt for Password Verifier
	SaltDataAttr *string

	// Password Hash
	HashDataAttr *string

	// Cryptographic Provider
	CryptProviderAttr *string

	// Cryptographic Algorithm Extensibility
	AlgIdExtAttr *uint32

	// Algorithm Extensibility Source
	AlgIdExtSourceAttr *string

	// Cryptographic Provider Type Extensibility
	CryptProviderTypeExtAttr *uint32

	// Provider Type Extensibility Source
	CryptProviderTypeExtSourceAttr *string
}

func (_eabga *CT_TLTriggerTimeNodeID) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _adbec := range start.Attr {
		if _adbec.Name.Local == "\u0076\u0061\u006c" {
			_bfcgd, _cgga := _d.ParseUint(_adbec.Value, 10, 32)
			if _cgga != nil {
				return _cgga
			}
			_eabga.ValAttr = uint32(_bfcgd)
			continue
		}
	}
	for {
		_bbgfeg, _geefg := d.Token()
		if _geefg != nil {
			return _ce.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0054r\u0069g\u0067e\u0072T\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0049\u0044\u003a\u0020\u0025\u0073", _geefg)
		}
		if _gfdea, _fdffa := _bbgfeg.(_g.EndElement); _fdffa && _gfdea.Name == start.Name {
			break
		}
	}
	return nil
}

func (_facbg ST_PrintWhat) Validate() error { return _facbg.ValidateWithPath("") }

func (_dgcd *EG_Background) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fgbga:
	for {
		_fbee, _dcebg := d.Token()
		if _dcebg != nil {
			return _dcebg
		}
		switch _agcfd := _fbee.(type) {
		case _g.StartElement:
			switch _agcfd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}:
				_dgcd.BgPr = NewCT_BackgroundProperties()
				if _cffec := d.DecodeElement(_dgcd.BgPr, &_agcfd); _cffec != nil {
					return _cffec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}:
				_dgcd.BgRef = _f.NewCT_StyleMatrixReference()
				if _bdfbg := d.DecodeElement(_dgcd.BgRef, &_agcfd); _bdfbg != nil {
					return _bdfbg
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0042a\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064 \u0025\u0076", _agcfd.Name)
				if _gagag := d.Skip(); _gagag != nil {
					return _gagag
				}
			}
		case _g.EndElement:
			break _fgbga
		case _g.CharData:
		}
	}
	return nil
}

const (
	ST_TLTimeNodeRestartTypeUnset         ST_TLTimeNodeRestartType = 0
	ST_TLTimeNodeRestartTypeAlways        ST_TLTimeNodeRestartType = 1
	ST_TLTimeNodeRestartTypeWhenNotActive ST_TLTimeNodeRestartType = 2
	ST_TLTimeNodeRestartTypeNever         ST_TLTimeNodeRestartType = 3
)

type CT_EmbeddedFontListEntry struct {

	// Embedded Font Name
	Font *_f.CT_TextFont

	// Regular Embedded Font
	Regular *CT_EmbeddedFontDataId

	// Bold Embedded Font
	Bold *CT_EmbeddedFontDataId

	// Italic Embedded Font
	Italic *CT_EmbeddedFontDataId

	// Bold Italic Embedded Font
	BoldItalic *CT_EmbeddedFontDataId
}

// ValidateWithPath validates the CmLst and its children, prefixing error messages with path
func (_cefge *CmLst) ValidateWithPath(path string) error {
	if _fadaa := _cefge.CT_CommentList.ValidateWithPath(path); _fadaa != nil {
		return _fadaa
	}
	return nil
}

// ValidateWithPath validates the CT_Extension and its children, prefixing error messages with path
func (_ffce *CT_Extension) ValidateWithPath(path string) error { return nil }

// Validate validates the EG_TopLevelSlide and its children
func (_geafb *EG_TopLevelSlide) Validate() error {
	return _geafb.ValidateWithPath("\u0045\u0047_\u0054\u006f\u0070L\u0065\u0076\u0065\u006c\u0053\u006c\u0069\u0064\u0065")
}

func (_ffacc *CT_TLTimeNodeSequence) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ffacc.CTn = NewCT_TLCommonTimeNodeData()
	for _, _fggd := range start.Attr {
		if _fggd.Name.Local == "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006e\u0074" {
			_fgfeb, _cgbd := _d.ParseBool(_fggd.Value)
			if _cgbd != nil {
				return _cgbd
			}
			_ffacc.ConcurrentAttr = &_fgfeb
			continue
		}
		if _fggd.Name.Local == "\u0070\u0072\u0065\u0076\u0041\u0063" {
			_ffacc.PrevAcAttr.UnmarshalXMLAttr(_fggd)
			continue
		}
		if _fggd.Name.Local == "\u006e\u0065\u0078\u0074\u0041\u0063" {
			_ffacc.NextAcAttr.UnmarshalXMLAttr(_fggd)
			continue
		}
	}
_cefda:
	for {
		_fdbcd, _cfabe := d.Token()
		if _cfabe != nil {
			return _cfabe
		}
		switch _cabaf := _fdbcd.(type) {
		case _g.StartElement:
			switch _cabaf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _ddgb := d.DecodeElement(_ffacc.CTn, &_cabaf); _ddgb != nil {
					return _ddgb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "p\u0072\u0065\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0072\u0065\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}:
				_ffacc.PrevCondLst = NewCT_TLTimeConditionList()
				if _bfec := d.DecodeElement(_ffacc.PrevCondLst, &_cabaf); _bfec != nil {
					return _bfec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "n\u0065\u0078\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u0065\u0078\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}:
				_ffacc.NextCondLst = NewCT_TLTimeConditionList()
				if _bddee := d.DecodeElement(_ffacc.NextCondLst, &_cabaf); _bddee != nil {
					return _bddee
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0053\u0065\u0071\u0075\u0065\u006e\u0063\u0065\u0020\u0025\u0076", _cabaf.Name)
				if _bcdff := d.Skip(); _bcdff != nil {
					return _bcdff
				}
			}
		case _g.EndElement:
			break _cefda
		case _g.CharData:
		}
	}
	return nil
}

func (_edebc *CT_TLTimeNodeExclusive) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_afgd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_edebc.CTn, _afgd)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ebgac ST_TLAnimateBehaviorCalcMode) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_ebgac.String(), start)
}

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_dgdf *CT_Rel) ValidateWithPath(path string) error { return nil }

func (_ggded *CmLst) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ggded.CT_CommentList = *NewCT_CommentList()
_fgfgd:
	for {
		_cdecdf, _befee := d.Token()
		if _befee != nil {
			return _befee
		}
		switch _ggfc := _cdecdf.(type) {
		case _g.StartElement:
			switch _ggfc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d"}:
				_decbe := NewCT_Comment()
				if _fcea := d.DecodeElement(_decbe, &_ggfc); _fcea != nil {
					return _fcea
				}
				_ggded.Cm = append(_ggded.Cm, _decbe)
			default:
				_e.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0043\u006d\u004cs\u0074 \u0025\u0076", _ggfc.Name)
				if _adecad := d.Skip(); _adecad != nil {
					return _adecad
				}
			}
		case _g.EndElement:
			break _fgfgd
		case _g.CharData:
		}
	}
	return nil
}

func (_ggcfb ST_IterateType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_adfc := _g.Attr{}
	_adfc.Name = name
	switch _ggcfb {
	case ST_IterateTypeUnset:
		_adfc.Value = ""
	case ST_IterateTypeEl:
		_adfc.Value = "\u0065\u006c"
	case ST_IterateTypeWd:
		_adfc.Value = "\u0077\u0064"
	case ST_IterateTypeLt:
		_adfc.Value = "\u006c\u0074"
	}
	return _adfc, nil
}

func (_cffb ST_TLTimeAnimateValueTime) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _cffb.ST_PositiveFixedPercentage != nil {
		e.Encode(_cffb.ST_PositiveFixedPercentage)
	}
	if _cffb.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		e.EncodeToken(_g.CharData(_cffb.ST_TLTimeIndefinite.String()))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

func NewEG_ExtensionList() *EG_ExtensionList { _cgbgc := &EG_ExtensionList{}; return _cgbgc }

func (_abbdd ST_IterateType) String() string {
	switch _abbdd {
	case 0:
		return ""
	case 1:
		return "\u0065\u006c"
	case 2:
		return "\u0077\u0064"
	case 3:
		return "\u006c\u0074"
	}
	return ""
}

func (_cbb *CT_CommonSlideViewProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cbb.CViewPr = NewCT_CommonViewProperties()
	for _, _gfab := range start.Attr {
		if _gfab.Name.Local == "\u0073\u006e\u0061\u0070\u0054\u006f\u0047\u0072\u0069\u0064" {
			_deed, _egf := _d.ParseBool(_gfab.Value)
			if _egf != nil {
				return _egf
			}
			_cbb.SnapToGridAttr = &_deed
			continue
		}
		if _gfab.Name.Local == "\u0073\u006e\u0061\u0070\u0054\u006f\u004f\u0062\u006a\u0065\u0063\u0074\u0073" {
			_efg, _cbd := _d.ParseBool(_gfab.Value)
			if _cbd != nil {
				return _cbd
			}
			_cbb.SnapToObjectsAttr = &_efg
			continue
		}
		if _gfab.Name.Local == "\u0073\u0068\u006f\u0077\u0047\u0075\u0069\u0064\u0065\u0073" {
			_bdf, _gbg := _d.ParseBool(_gfab.Value)
			if _gbg != nil {
				return _gbg
			}
			_cbb.ShowGuidesAttr = &_bdf
			continue
		}
	}
_fea:
	for {
		_eacg, _dgfgc := d.Token()
		if _dgfgc != nil {
			return _dgfgc
		}
		switch _eae := _eacg.(type) {
		case _g.StartElement:
			switch _eae.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _eeg := d.DecodeElement(_cbb.CViewPr, &_eae); _eeg != nil {
					return _eeg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0075\u0069\u0064\u0065\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0075\u0069\u0064\u0065\u004c\u0073\u0074"}:
				_cbb.GuideLst = NewCT_GuideList()
				if _bdc := d.DecodeElement(_cbb.GuideLst, &_eae); _bdc != nil {
					return _bdc
				}
			default:
				_e.Log.Debug("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0043\u006f\u006d\u006d\u006f\u006e\u0053\u006c\u0069\u0064\u0065\u0056\u0069\u0065w\u0050\u0072op\u0065\u0072\u0074i\u0065\u0073\u0020\u0025\u0076", _eae.Name)
				if _fcec := d.Skip(); _fcec != nil {
					return _fcec
				}
			}
		case _g.EndElement:
			break _fea
		case _g.CharData:
		}
	}
	return nil
}

func (_cbafc *CT_TLOleBuildChart) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bbff := range start.Attr {
		if _bbff.Name.Local == "\u0062\u006c\u0064" {
			_cbafc.BldAttr.UnmarshalXMLAttr(_bbff)
			continue
		}
		if _bbff.Name.Local == "\u0061\u006e\u0069\u006d\u0042\u0067" {
			_eafbf, _edeb := _d.ParseBool(_bbff.Value)
			if _edeb != nil {
				return _edeb
			}
			_cbafc.AnimBgAttr = &_eafbf
			continue
		}
		if _bbff.Name.Local == "\u0073\u0070\u0069\u0064" {
			_ceadd, _aafaf := _d.ParseUint(_bbff.Value, 10, 32)
			if _aafaf != nil {
				return _aafaf
			}
			_cfcf := uint32(_ceadd)
			_cbafc.SpidAttr = &_cfcf
			continue
		}
		if _bbff.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_gdeb, _bddaa := _d.ParseUint(_bbff.Value, 10, 32)
			if _bddaa != nil {
				return _bddaa
			}
			_fdbbf := uint32(_gdeb)
			_cbafc.GrpIdAttr = &_fdbbf
			continue
		}
		if _bbff.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_gbfgeg, _egdc := _d.ParseBool(_bbff.Value)
			if _egdc != nil {
				return _egdc
			}
			_cbafc.UiExpandAttr = &_gbfgeg
			continue
		}
	}
	for {
		_cfefc, _defbe := d.Token()
		if _defbe != nil {
			return _ce.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0054\u004c\u004f\u006c\u0065\u0042\u0075i\u006c\u0064\u0043\u0068\u0061\u0072\u0074\u003a\u0020\u0025\u0073", _defbe)
		}
		if _egbed, _cgfca := _cfefc.(_g.EndElement); _cgfca && _egbed.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLTemplateList and its children, prefixing error messages with path
func (_aaafg *CT_TLTemplateList) ValidateWithPath(path string) error {
	for _dbgf, _eeaeg := range _aaafg.Tmpl {
		if _cfdd := _eeaeg.ValidateWithPath(_ce.Sprintf("%\u0073\u002f\u0054\u006d\u0070\u006c\u005b\u0025\u0064\u005d", path, _dbgf)); _cfdd != nil {
			return _cfdd
		}
	}
	return nil
}

func (_feec ST_TransitionInOutDirectionType) Validate() error { return _feec.ValidateWithPath("") }

func (_caea *CT_HtmlPublishProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _caea.ShowSpeakerNotesAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068o\u0077\u0053\u0070e\u0061\u006b\u0065\u0072\u004e\u006f\u0074\u0065\u0073"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_caea.ShowSpeakerNotesAttr))})
	}
	if _caea.TargetAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0061\u0072\u0067\u0065\u0074"}, Value: _ce.Sprintf("\u0025\u0076", *_caea.TargetAttr)})
	}
	if _caea.TitleAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _ce.Sprintf("\u0025\u0076", *_caea.TitleAttr)})
	}
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _caea.IdAttr)})
	e.EncodeToken(start)
	if _caea.SldAll != nil {
		_edfa := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0041\u006c\u006c"}}
		e.EncodeElement(_caea.SldAll, _edfa)
	}
	if _caea.SldRg != nil {
		_gggc := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0073\u006c\u0064\u0052\u0067"}}
		e.EncodeElement(_caea.SldRg, _gggc)
	}
	if _caea.CustShow != nil {
		_egcd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		e.EncodeElement(_caea.CustShow, _egcd)
	}
	if _caea.ExtLst != nil {
		_bgfg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_caea.ExtLst, _bgfg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_eebada ST_PlaceholderType) String() string {
	switch _eebada {
	case 0:
		return ""
	case 1:
		return "\u0074\u0069\u0074l\u0065"
	case 2:
		return "\u0062\u006f\u0064\u0079"
	case 3:
		return "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065"
	case 4:
		return "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065"
	case 5:
		return "\u0064\u0074"
	case 6:
		return "\u0073\u006c\u0064\u004e\u0075\u006d"
	case 7:
		return "\u0066\u0074\u0072"
	case 8:
		return "\u0068\u0064\u0072"
	case 9:
		return "\u006f\u0062\u006a"
	case 10:
		return "\u0063\u0068\u0061r\u0074"
	case 11:
		return "\u0074\u0062\u006c"
	case 12:
		return "\u0063l\u0069\u0070\u0041\u0072\u0074"
	case 13:
		return "\u0064\u0067\u006d"
	case 14:
		return "\u006d\u0065\u0064i\u0061"
	case 15:
		return "\u0073\u006c\u0064\u0049\u006d\u0067"
	case 16:
		return "\u0070\u0069\u0063"
	}
	return ""
}

type CT_ViewProperties struct {

	// Last View
	LastViewAttr ST_ViewType

	// Show Comments
	ShowCommentsAttr *bool

	// Normal View Properties
	NormalViewPr *CT_NormalViewProperties

	// Slide View Properties
	SlideViewPr *CT_SlideViewProperties

	// Outline View Properties
	OutlineViewPr *CT_OutlineViewProperties

	// Notes Text View Properties
	NotesTextViewPr *CT_NotesTextViewProperties

	// Slide Sorter View Properties
	SorterViewPr *CT_SlideSorterViewProperties

	// Notes View Properties
	NotesViewPr *CT_NotesViewProperties

	// Grid Spacing
	GridSpacing *_f.CT_PositiveSize2D
	ExtLst      *CT_ExtensionList
}

func (_affbd ST_TLPreviousActionType) Validate() error { return _affbd.ValidateWithPath("") }

func NewCT_PrintProperties() *CT_PrintProperties { _afac := &CT_PrintProperties{}; return _afac }

func (_fdgfb *ST_TLTimeNodeSyncType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cafdb, _gdbgg := d.Token()
	if _gdbgg != nil {
		return _gdbgg
	}
	if _fecgg, _gfdce := _cafdb.(_g.EndElement); _gfdce && _fecgg.Name == start.Name {
		*_fdgfb = 1
		return nil
	}
	if _cgbefe, _gfbb := _cafdb.(_g.CharData); !_gfbb {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cafdb)
	} else {
		switch string(_cgbefe) {
		case "":
			*_fdgfb = 0
		case "\u0063a\u006e\u0053\u006c\u0069\u0070":
			*_fdgfb = 1
		case "\u006c\u006f\u0063\u006b\u0065\u0064":
			*_fdgfb = 2
		}
	}
	_cafdb, _gdbgg = d.Token()
	if _gdbgg != nil {
		return _gdbgg
	}
	if _eggaf, _ffbb := _cafdb.(_g.EndElement); _ffbb && _eggaf.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cafdb)
}

func (_caaead ST_PhotoAlbumLayout) ValidateWithPath(path string) error {
	switch _caaead {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_caaead))
	}
	return nil
}

type CT_TimeNodeList struct {

	// Parallel Time Node
	Par []*CT_TLTimeNodeParallel

	// Sequence Time Node
	Seq []*CT_TLTimeNodeSequence

	// Exclusive
	Excl []*CT_TLTimeNodeExclusive

	// Animate
	Anim []*CT_TLAnimateBehavior

	// Animate Color Behavior
	AnimClr []*CT_TLAnimateColorBehavior

	// Animate Effect
	AnimEffect []*CT_TLAnimateEffectBehavior

	// Animate Motion
	AnimMotion []*CT_TLAnimateMotionBehavior

	// Animate Rotation
	AnimRot []*CT_TLAnimateRotationBehavior

	// Animate Scale
	AnimScale []*CT_TLAnimateScaleBehavior

	// Command
	Cmd []*CT_TLCommandBehavior

	// Set Time Node Behavior
	Set []*CT_TLSetBehavior

	// Audio
	Audio []*CT_TLMediaNodeAudio

	// Video
	Video []*CT_TLMediaNodeVideo
}

// Validate validates the EG_ChildSlide and its children
func (_fedc *EG_ChildSlide) Validate() error {
	return _fedc.ValidateWithPath("\u0045\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065")
}

type CT_Guide struct {

	// Guide Orientation
	OrientAttr ST_Direction

	// Guide Position
	PosAttr *_f.ST_Coordinate32
}

// ValidateWithPath validates the CT_TLAnimateBehavior and its children, prefixing error messages with path
func (_gbaf *CT_TLAnimateBehavior) ValidateWithPath(path string) error {
	if _fggcg := _gbaf.CalcmodeAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u006c\u0063\u006d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _fggcg != nil {
		return _fggcg
	}
	if _dadedg := _gbaf.ValueTypeAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0075\u0065\u0054\u0079\u0070e\u0041\u0074\u0074\u0072"); _dadedg != nil {
		return _dadedg
	}
	if _edcc := _gbaf.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _edcc != nil {
		return _edcc
	}
	if _gbaf.TavLst != nil {
		if _dbcfee := _gbaf.TavLst.ValidateWithPath(path + "\u002fT\u0061\u0076\u004c\u0073\u0074"); _dbcfee != nil {
			return _dbcfee
		}
	}
	return nil
}

func (_bdabb ST_TransitionCornerDirectionType) Validate() error { return _bdabb.ValidateWithPath("") }

// Validate validates the CT_TLIterateIntervalPercentage and its children
func (_cbeda *CT_TLIterateIntervalPercentage) Validate() error {
	return _cbeda.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061t\u0065\u0049\u006e\u0074\u0065\u0072\u0076a\u006c\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
}

func NewCT_CommentList() *CT_CommentList { _dfg := &CT_CommentList{}; return _dfg }

func (_abagc *CT_CommonViewProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_abagc.Scale = _f.NewCT_Scale2D()
	_abagc.Origin = _f.NewCT_Point2D()
	for _, _dce := range start.Attr {
		if _dce.Name.Local == "\u0076\u0061\u0072\u0053\u0063\u0061\u006c\u0065" {
			_gbccc, _dcf := _d.ParseBool(_dce.Value)
			if _dcf != nil {
				return _dcf
			}
			_abagc.VarScaleAttr = &_gbccc
			continue
		}
	}
_efd:
	for {
		_adc, _aga := d.Token()
		if _aga != nil {
			return _aga
		}
		switch _dbce := _adc.(type) {
		case _g.StartElement:
			switch _dbce.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0063\u0061l\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0061l\u0065"}:
				if _eee := d.DecodeElement(_abagc.Scale, &_dbce); _eee != nil {
					return _eee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0072\u0069\u0067\u0069\u006e"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0072\u0069\u0067\u0069\u006e"}:
				if _deff := d.DecodeElement(_abagc.Origin, &_dbce); _deff != nil {
					return _deff
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u006f\u006e\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _dbce.Name)
				if _bec := d.Skip(); _bec != nil {
					return _bec
				}
			}
		case _g.EndElement:
			break _efd
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the Notes and its children, prefixing error messages with path
func (_eded *Notes) ValidateWithPath(path string) error {
	if _dgfdb := _eded.CT_NotesSlide.ValidateWithPath(path); _dgfdb != nil {
		return _dgfdb
	}
	return nil
}

// Validate validates the CT_TLCommonTimeNodeData and its children
func (_cfgff *CT_TLCommonTimeNodeData) Validate() error {
	return _cfgff.ValidateWithPath("\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061")
}

func NewSldLayout() *SldLayout {
	_befa := &SldLayout{}
	_befa.CT_SlideLayout = *NewCT_SlideLayout()
	return _befa
}

func NewCT_ControlList() *CT_ControlList { _dgeae := &CT_ControlList{}; return _dgeae }

// Validate validates the CT_TLTimeCondition and its children
func (_gegeg *CT_TLTimeCondition) Validate() error {
	return _gegeg.ValidateWithPath("\u0043T\u005fT\u004c\u0054\u0069\u006d\u0065C\u006f\u006ed\u0069\u0074\u0069\u006f\u006e")
}

// Validate validates the SldSyncPr and its children
func (_gcec *SldSyncPr) Validate() error {
	return _gcec.ValidateWithPath("\u0053l\u0064\u0053\u0079\u006e\u0063\u0050r")
}

// ValidateWithPath validates the CT_TLOleBuildChart and its children, prefixing error messages with path
func (_cace *CT_TLOleBuildChart) ValidateWithPath(path string) error {
	if _dddb := _cace.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _dddb != nil {
		return _dddb
	}
	return nil
}

func (_agcag ST_TLCommandType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_agcag.String(), start)
}

func (_fbcfe *ST_TLBehaviorAdditiveType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_fbcfe = 0
	case "\u0062\u0061\u0073\u0065":
		*_fbcfe = 1
	case "\u0073\u0075\u006d":
		*_fbcfe = 2
	case "\u0072\u0065\u0070\u006c":
		*_fbcfe = 3
	case "\u006d\u0075\u006c\u0074":
		*_fbcfe = 4
	case "\u006e\u006f\u006e\u0065":
		*_fbcfe = 5
	}
	return nil
}

func NewCT_TLTimeNodeExclusive() *CT_TLTimeNodeExclusive {
	_adgf := &CT_TLTimeNodeExclusive{}
	_adgf.CTn = NewCT_TLCommonTimeNodeData()
	return _adgf
}

func (_abgcf ST_TLTime) String() string {
	if _abgcf.Uint32 != nil {
		return _ce.Sprintf("\u0025\u0076", *_abgcf.Uint32)
	}
	if _abgcf.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		return _abgcf.ST_TLTimeIndefinite.String()
	}
	return ""
}

func (_cbcf *CT_InOutTransition) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cbcf.DirAttr != ST_TransitionInOutDirectionTypeUnset {
		_fbgb, _ccab := _cbcf.DirAttr.MarshalXMLAttr(_g.Name{Local: "\u0064\u0069\u0072"})
		if _ccab != nil {
			return _ccab
		}
		start.Attr = append(start.Attr, _fbgb)
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gcbd *CT_SlideLayout) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gcbd.MatchingNameAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006d\u0061\u0074c\u0068\u0069\u006e\u0067\u004e\u0061\u006d\u0065"}, Value: _ce.Sprintf("\u0025\u0076", *_gcbd.MatchingNameAttr)})
	}
	if _gcbd.TypeAttr != ST_SlideLayoutTypeUnset {
		_bgbba, _geaba := _gcbd.TypeAttr.MarshalXMLAttr(_g.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _geaba != nil {
			return _geaba
		}
		start.Attr = append(start.Attr, _bgbba)
	}
	if _gcbd.PreserveAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_gcbd.PreserveAttr))})
	}
	if _gcbd.UserDrawnAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_gcbd.UserDrawnAttr))})
	}
	if _gcbd.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_gcbd.ShowMasterSpAttr))})
	}
	if _gcbd.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_gcbd.ShowMasterPhAnimAttr))})
	}
	e.EncodeToken(start)
	_fcbe := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_gcbd.CSld, _fcbe)
	if _gcbd.ClrMapOvr != nil {
		_acbf := _g.StartElement{Name: _g.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_gcbd.ClrMapOvr, _acbf)
	}
	if _gcbd.Transition != nil {
		_cedd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_gcbd.Transition, _cedd)
	}
	if _gcbd.Timing != nil {
		_dcca := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074\u0069\u006d\u0069\u006e\u0067"}}
		e.EncodeElement(_gcbd.Timing, _dcca)
	}
	if _gcbd.Hf != nil {
		_bcbb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_gcbd.Hf, _bcbb)
	}
	if _gcbd.ExtLst != nil {
		_bfgf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gcbd.ExtLst, _bfgf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_GuideList struct {

	// A Guide
	Guide []*CT_Guide
}

func (_bddefb ST_TLTimeNodeRestartType) ValidateWithPath(path string) error {
	switch _bddefb {
	case 0, 1, 2, 3:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bddefb))
	}
	return nil
}

func (_bfdfc ST_OleObjectFollowColorScheme) Validate() error { return _bfdfc.ValidateWithPath("") }

func NewCT_NotesSlide() *CT_NotesSlide {
	_aace := &CT_NotesSlide{}
	_aace.CSld = NewCT_CommonSlideData()
	return _aace
}

func (_bdddd ST_Direction) Validate() error { return _bdddd.ValidateWithPath("") }

func (_fagag *NotesMaster) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u006e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072"
	return _fagag.CT_NotesMaster.MarshalXML(e, start)
}

func (_ceeag *CT_SlideTransition) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bgaf := range start.Attr {
		if _bgaf.Name.Local == "\u0073\u0070\u0064" {
			_ceeag.SpdAttr.UnmarshalXMLAttr(_bgaf)
			continue
		}
		if _bgaf.Name.Local == "\u0061\u0064\u0076\u0043\u006c\u0069\u0063\u006b" {
			_gabe, _deca := _d.ParseBool(_bgaf.Value)
			if _deca != nil {
				return _deca
			}
			_ceeag.AdvClickAttr = &_gabe
			continue
		}
		if _bgaf.Name.Local == "\u0061\u0064\u0076T\u006d" {
			_bdgf, _begaf := _d.ParseUint(_bgaf.Value, 10, 32)
			if _begaf != nil {
				return _begaf
			}
			_gdgec := uint32(_bdgf)
			_ceeag.AdvTmAttr = &_gdgec
			continue
		}
	}
_cbgd:
	for {
		_eaad, _gaef := d.Token()
		if _gaef != nil {
			return _gaef
		}
		switch _gfdc := _eaad.(type) {
		case _g.StartElement:
			switch _gfdc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _aced := d.DecodeElement(&_ceeag.Choice.Blinds, &_gfdc); _aced != nil {
					return _aced
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _fcecg := d.DecodeElement(&_ceeag.Choice.Checker, &_gfdc); _fcecg != nil {
					return _fcecg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _cebbc := d.DecodeElement(&_ceeag.Choice.Circle, &_gfdc); _cebbc != nil {
					return _cebbc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _efbca := d.DecodeElement(&_ceeag.Choice.Dissolve, &_gfdc); _efbca != nil {
					return _efbca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _fagf := d.DecodeElement(&_ceeag.Choice.Comb, &_gfdc); _fagf != nil {
					return _fagf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _daaba := d.DecodeElement(&_ceeag.Choice.Cover, &_gfdc); _daaba != nil {
					return _daaba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0074"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _ddge := d.DecodeElement(&_ceeag.Choice.Cut, &_gfdc); _ddge != nil {
					return _ddge
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _adbbf := d.DecodeElement(&_ceeag.Choice.Diamond, &_gfdc); _adbbf != nil {
					return _adbbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _gddfg := d.DecodeElement(&_ceeag.Choice.Fade, &_gfdc); _gddfg != nil {
					return _gddfg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _eagb := d.DecodeElement(&_ceeag.Choice.Newsflash, &_gfdc); _eagb != nil {
					return _eagb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _cebgc := d.DecodeElement(&_ceeag.Choice.Plus, &_gfdc); _cebgc != nil {
					return _cebgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _aacgd := d.DecodeElement(&_ceeag.Choice.Pull, &_gfdc); _aacgd != nil {
					return _aacgd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _eeef := d.DecodeElement(&_ceeag.Choice.Push, &_gfdc); _eeef != nil {
					return _eeef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _ccea := d.DecodeElement(&_ceeag.Choice.Random, &_gfdc); _ccea != nil {
					return _ccea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _gagfa := d.DecodeElement(&_ceeag.Choice.RandomBar, &_gfdc); _gagfa != nil {
					return _gagfa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _ffaf := d.DecodeElement(&_ceeag.Choice.Split, &_gfdc); _ffaf != nil {
					return _ffaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _egfed := d.DecodeElement(&_ceeag.Choice.Strips, &_gfdc); _egfed != nil {
					return _egfed
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _egca := d.DecodeElement(&_ceeag.Choice.Wedge, &_gfdc); _egca != nil {
					return _egca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _gdfdb := d.DecodeElement(&_ceeag.Choice.Wheel, &_gfdc); _gdfdb != nil {
					return _gdfdb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _cgdga := d.DecodeElement(&_ceeag.Choice.Wipe, &_gfdc); _cgdga != nil {
					return _cgdga
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}:
				_ceeag.Choice = NewCT_SlideTransitionChoice()
				if _dgbgf := d.DecodeElement(&_ceeag.Choice.Zoom, &_gfdc); _dgbgf != nil {
					return _dgbgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064A\u0063"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064A\u0063"}:
				_ceeag.SndAc = NewCT_TransitionSoundAction()
				if _fdeg := d.DecodeElement(_ceeag.SndAc, &_gfdc); _fdeg != nil {
					return _fdeg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ceeag.ExtLst = NewCT_ExtensionListModify()
				if _gccbg := d.DecodeElement(_ceeag.ExtLst, &_gfdc); _gccbg != nil {
					return _gccbg
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _gfdc.Name)
				if _dafgd := d.Skip(); _dafgd != nil {
					return _dafgd
				}
			}
		case _g.EndElement:
			break _cbgd
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_InOutTransition and its children
func (_gdae *CT_InOutTransition) Validate() error {
	return _gdae.ValidateWithPath("\u0043T\u005fI\u006e\u004f\u0075\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}

type CT_TLTextTargetElement struct {

	// Character Range
	CharRg *CT_IndexRange

	// Paragraph Text Range
	PRg *CT_IndexRange
}

func (_cadb ST_PrintColorMode) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_cadb.String(), start)
}

func (_ebfaf *CT_TLTimeCondition) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bgeb := range start.Attr {
		if _bgeb.Name.Local == "\u0065\u0076\u0074" {
			_ebfaf.EvtAttr.UnmarshalXMLAttr(_bgeb)
			continue
		}
		if _bgeb.Name.Local == "\u0064\u0065\u006ca\u0079" {
			_dfbbe, _aaad := ParseUnionST_TLTime(_bgeb.Value)
			if _aaad != nil {
				return _aaad
			}
			_ebfaf.DelayAttr = &_dfbbe
			continue
		}
	}
_egfb:
	for {
		_bebce, _bcebf := d.Token()
		if _bcebf != nil {
			return _bcebf
		}
		switch _cedgc := _bebce.(type) {
		case _g.StartElement:
			switch _cedgc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
				_ebfaf.TgtEl = NewCT_TLTimeTargetElement()
				if _aafdf := d.DecodeElement(_ebfaf.TgtEl, &_cedgc); _aafdf != nil {
					return _aafdf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e"}:
				_ebfaf.Tn = NewCT_TLTriggerTimeNodeID()
				if _dcafa := d.DecodeElement(_ebfaf.Tn, &_cedgc); _dcafa != nil {
					return _dcafa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0074\u006e"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0074\u006e"}:
				_ebfaf.Rtn = NewCT_TLTriggerRuntimeNode()
				if _deae := d.DecodeElement(_ebfaf.Rtn, &_cedgc); _deae != nil {
					return _deae
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065C\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _cedgc.Name)
				if _gfbeg := d.Skip(); _gfbeg != nil {
					return _gfbeg
				}
			}
		case _g.EndElement:
			break _egfb
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the EG_SlideListChoice and its children
func (_fdagc *EG_SlideListChoice) Validate() error {
	return _fdagc.ValidateWithPath("\u0045G\u005fS\u006c\u0069\u0064\u0065\u004ci\u0073\u0074C\u0068\u006f\u0069\u0063\u0065")
}

func (_egcefa ST_TLAnimateMotionBehaviorOrigin) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_egcefa.String(), start)
}

// Validate validates the CT_Extension and its children
func (_cgae *CT_Extension) Validate() error {
	return _cgae.ValidateWithPath("\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_TLTimeTargetElement and its children, prefixing error messages with path
func (_gedg *CT_TLTimeTargetElement) ValidateWithPath(path string) error {
	if _gedg.SldTgt != nil {
		if _cfcdd := _gedg.SldTgt.ValidateWithPath(path + "\u002fS\u006c\u0064\u0054\u0067\u0074"); _cfcdd != nil {
			return _cfcdd
		}
	}
	if _gedg.SndTgt != nil {
		if _bfbg := _gedg.SndTgt.ValidateWithPath(path + "\u002fS\u006e\u0064\u0054\u0067\u0074"); _bfbg != nil {
			return _bfbg
		}
	}
	if _gedg.SpTgt != nil {
		if _abbga := _gedg.SpTgt.ValidateWithPath(path + "\u002f\u0053\u0070\u0054\u0067\u0074"); _abbga != nil {
			return _abbga
		}
	}
	if _gedg.InkTgt != nil {
		if _bbaacb := _gedg.InkTgt.ValidateWithPath(path + "\u002fI\u006e\u006b\u0054\u0067\u0074"); _bbaacb != nil {
			return _bbaacb
		}
	}
	return nil
}

func (_db *AG_Ole) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _db.SpidAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_db.SpidAttr)})
	}
	if _db.NameAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ce.Sprintf("\u0025\u0076", *_db.NameAttr)})
	}
	if _db.ShowAsIconAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_db.ShowAsIconAttr))})
	}
	if _db.IdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_db.IdAttr)})
	}
	if _db.ImgWAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u006d\u0067\u0057"}, Value: _ce.Sprintf("\u0025\u0076", *_db.ImgWAttr)})
	}
	if _db.ImgHAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u006d\u0067\u0048"}, Value: _ce.Sprintf("\u0025\u0076", *_db.ImgHAttr)})
	}
	return nil
}

func (_cgfb *CT_Placeholder) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cgfb.TypeAttr != ST_PlaceholderTypeUnset {
		_acffa, _ffde := _cgfb.TypeAttr.MarshalXMLAttr(_g.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _ffde != nil {
			return _ffde
		}
		start.Attr = append(start.Attr, _acffa)
	}
	if _cgfb.OrientAttr != ST_DirectionUnset {
		_dgbdf, _bcga := _cgfb.OrientAttr.MarshalXMLAttr(_g.Name{Local: "\u006f\u0072\u0069\u0065\u006e\u0074"})
		if _bcga != nil {
			return _bcga
		}
		start.Attr = append(start.Attr, _dgbdf)
	}
	if _cgfb.SzAttr != ST_PlaceholderSizeUnset {
		_gabd, _cfce := _cgfb.SzAttr.MarshalXMLAttr(_g.Name{Local: "\u0073\u007a"})
		if _cfce != nil {
			return _cfce
		}
		start.Attr = append(start.Attr, _gabd)
	}
	if _cgfb.IdxAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064\u0078"}, Value: _ce.Sprintf("\u0025\u0076", *_cgfb.IdxAttr)})
	}
	if _cgfb.HasCustomPromptAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068a\u0073C\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u006d\u0070\u0074"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cgfb.HasCustomPromptAttr))})
	}
	e.EncodeToken(start)
	if _cgfb.ExtLst != nil {
		_ebgb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cgfb.ExtLst, _ebgb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_befgb *ViewPr) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0076\u0069\u0065\u0077\u0050\u0072"
	return _befgb.CT_ViewProperties.MarshalXML(e, start)
}

type CT_TLAnimateRotationBehavior struct {

	// By
	ByAttr *int32

	// From
	FromAttr *int32

	// To
	ToAttr *int32
	CBhvr  *CT_TLCommonBehaviorData
}

// Validate validates the CT_TLAnimVariantBooleanVal and its children
func (_cecc *CT_TLAnimVariantBooleanVal) Validate() error {
	return _cecc.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0042\u006f\u006f\u006c\u0065\u0061n\u0056\u0061\u006c")
}

// ValidateWithPath validates the ViewPr and its children, prefixing error messages with path
func (_agfba *ViewPr) ValidateWithPath(path string) error {
	if _fccga := _agfba.CT_ViewProperties.ValidateWithPath(path); _fccga != nil {
		return _fccga
	}
	return nil
}

// Validate validates the CT_NotesViewProperties and its children
func (_eefe *CT_NotesViewProperties) Validate() error {
	return _eefe.ValidateWithPath("\u0043\u0054\u005f\u004eot\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

func (_dffgg *CT_TLSetBehavior) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_gaacc := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_dffgg.CBhvr, _gaacc)
	if _dffgg.To != nil {
		_afdaf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_dffgg.To, _afdaf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_CommentAuthor struct {

	// Comment Author ID
	IdAttr uint32

	// Comment Author Name
	NameAttr string

	// Comment Author Initials
	InitialsAttr string

	// Index of Comment Author's last comment
	LastIdxAttr uint32

	// Comment Author Color Index
	ClrIdxAttr uint32
	ExtLst     *CT_ExtensionList
}

func (_gbdcd ST_TLAnimateBehaviorCalcMode) String() string {
	switch _gbdcd {
	case 0:
		return ""
	case 1:
		return "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065"
	case 2:
		return "\u006c\u0069\u006e"
	case 3:
		return "\u0066\u006d\u006c\u0061"
	}
	return ""
}

// Validate validates the CT_NotesTextViewProperties and its children
func (_cdgf *CT_NotesTextViewProperties) Validate() error {
	return _cdgf.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0054\u0065\u0078t\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}

// Validate validates the CT_ExtensionList and its children
func (_gdfg *CT_ExtensionList) Validate() error {
	return _gdfg.ValidateWithPath("\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}

func NewHandoutMaster() *HandoutMaster {
	_bcaca := &HandoutMaster{}
	_bcaca.CT_HandoutMaster = *NewCT_HandoutMaster()
	return _bcaca
}

// ValidateWithPath validates the CT_SlideIdList and its children, prefixing error messages with path
func (_gfge *CT_SlideIdList) ValidateWithPath(path string) error {
	for _eagd, _gfba := range _gfge.SldId {
		if _gecf := _gfba.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002fS\u006c\u0064\u0049\u0064\u005b\u0025\u0064\u005d", path, _eagd)); _gecf != nil {
			return _gecf
		}
	}
	return nil
}

type CT_PictureNonVisual struct {
	CNvPr *_f.CT_NonVisualDrawingProps

	// Non-Visual Picture Drawing Properties
	CNvPicPr *_f.CT_NonVisualPictureProperties
	NvPr     *CT_ApplicationNonVisualDrawingProps
}

func NewCT_EmbeddedFontDataId() *CT_EmbeddedFontDataId {
	_fgda := &CT_EmbeddedFontDataId{}
	return _fgda
}

// ValidateWithPath validates the CT_EightDirectionTransition and its children, prefixing error messages with path
func (_gdaa *CT_EightDirectionTransition) ValidateWithPath(path string) error {
	if _gdaa.DirAttr != nil {
		if _gbba := _gdaa.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _gbba != nil {
			return _gbba
		}
	}
	return nil
}

func (_aaa *CT_EightDirectionTransition) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _aaa.DirAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0064\u0069\u0072"}, Value: _ce.Sprintf("\u0025\u0076", *_aaa.DirAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_GraphicalObjectFrameNonVisual() *CT_GraphicalObjectFrameNonVisual {
	_bccf := &CT_GraphicalObjectFrameNonVisual{}
	_bccf.CNvPr = _f.NewCT_NonVisualDrawingProps()
	_bccf.CNvGraphicFramePr = _f.NewCT_NonVisualGraphicFrameProperties()
	_bccf.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _bccf
}

type CT_WebProperties struct {

	// Show animation in HTML output
	ShowAnimationAttr *bool

	// Resize graphics in HTML output
	ResizeGraphicsAttr *bool

	// Allow PNG in HTML output
	AllowPngAttr *bool

	// Rely on VML for HTML output
	RelyOnVmlAttr *bool

	// Organize HTML output in folders
	OrganizeInFoldersAttr *bool

	// Use long file names in HTML output
	UseLongFilenamesAttr *bool

	// Image size for HTML output
	ImgSzAttr ST_WebScreenSize

	// Encoding for HTML output
	EncodingAttr *string

	// Slide Navigation Colors for HTML output
	ClrAttr ST_WebColorType
	ExtLst  *CT_ExtensionList
}

type CT_SlideIdListEntry struct {

	// Slide Identifier
	IdAttr  uint32
	RIdAttr string
	ExtLst  *CT_ExtensionList
}

func (_ffffe *CT_GroupShapeNonVisual) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_egg := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_ffffe.CNvPr, _egg)
	_ddag := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063N\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_ffffe.CNvGrpSpPr, _ddag)
	_aafb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_ffffe.NvPr, _aafb)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fcge *CT_ShapeNonVisual) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_cfdb := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_fcge.CNvPr, _cfdb)
	_caac := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u004e\u0076\u0053\u0070\u0050r"}}
	e.EncodeElement(_fcge.CNvSpPr, _caac)
	_edcf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_fcge.NvPr, _edcf)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bddbd *ST_OleObjectFollowColorScheme) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_bddbd = 0
	case "\u006e\u006f\u006e\u0065":
		*_bddbd = 1
	case "\u0066\u0075\u006c\u006c":
		*_bddbd = 2
	case "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064":
		*_bddbd = 3
	}
	return nil
}

func NewCT_TLByAnimateColorTransform() *CT_TLByAnimateColorTransform {
	_gffb := &CT_TLByAnimateColorTransform{}
	return _gffb
}

func (_afcg ST_TLTriggerRuntimeNode) ValidateWithPath(path string) error {
	switch _afcg {
	case 0, 1, 2, 3:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_afcg))
	}
	return nil
}

func NewCT_ModifyVerifier() *CT_ModifyVerifier { _dcbf := &CT_ModifyVerifier{}; return _dcbf }

const (
	ST_TLTimeNodeTypeUnset          ST_TLTimeNodeType = 0
	ST_TLTimeNodeTypeClickEffect    ST_TLTimeNodeType = 1
	ST_TLTimeNodeTypeWithEffect     ST_TLTimeNodeType = 2
	ST_TLTimeNodeTypeAfterEffect    ST_TLTimeNodeType = 3
	ST_TLTimeNodeTypeMainSeq        ST_TLTimeNodeType = 4
	ST_TLTimeNodeTypeInteractiveSeq ST_TLTimeNodeType = 5
	ST_TLTimeNodeTypeClickPar       ST_TLTimeNodeType = 6
	ST_TLTimeNodeTypeWithGroup      ST_TLTimeNodeType = 7
	ST_TLTimeNodeTypeAfterGroup     ST_TLTimeNodeType = 8
	ST_TLTimeNodeTypeTmRoot         ST_TLTimeNodeType = 9
)

func (_eebadf *TagLst) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_eebadf.CT_TagList = *NewCT_TagList()
_ffdc:
	for {
		_cgfdg, _eaafg := d.Token()
		if _eaafg != nil {
			return _eaafg
		}
		switch _adgec := _cgfdg.(type) {
		case _g.StartElement:
			switch _adgec.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0067"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0067"}:
				_adaeb := NewCT_StringTag()
				if _faceb := d.DecodeElement(_adaeb, &_adgec); _faceb != nil {
					return _faceb
				}
				_eebadf.Tag = append(_eebadf.Tag, _adaeb)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0054\u0061\u0067\u004c\u0073\u0074\u0020\u0025\u0076", _adgec.Name)
				if _bccbe := d.Skip(); _bccbe != nil {
					return _bccbe
				}
			}
		case _g.EndElement:
			break _ffdc
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_ShapeNonVisual() *CT_ShapeNonVisual {
	_ggca := &CT_ShapeNonVisual{}
	_ggca.CNvPr = _f.NewCT_NonVisualDrawingProps()
	_ggca.CNvSpPr = _f.NewCT_NonVisualDrawingShapeProps()
	_ggca.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _ggca
}

func (_gbf *CT_BackgroundProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gbf.ShadeToTitleAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068\u0061d\u0065\u0054\u006f\u0054\u0069\u0074\u006c\u0065"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_gbf.ShadeToTitleAttr))})
	}
	e.EncodeToken(start)
	if _gbf.NoFill != nil {
		_ae := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gbf.NoFill, _ae)
	}
	if _gbf.SolidFill != nil {
		_cdb := _g.StartElement{Name: _g.Name{Local: "p\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gbf.SolidFill, _cdb)
	}
	if _gbf.GradFill != nil {
		_cfd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gbf.GradFill, _cfd)
	}
	if _gbf.BlipFill != nil {
		_gaaaf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gbf.BlipFill, _gaaaf)
	}
	if _gbf.PattFill != nil {
		_bfc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gbf.PattFill, _bfc)
	}
	if _gbf.GrpFill != nil {
		_baf := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_gbf.GrpFill, _baf)
	}
	if _gbf.EffectLst != nil {
		_faa := _g.StartElement{Name: _g.Name{Local: "p\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gbf.EffectLst, _faa)
	}
	if _gbf.EffectDag != nil {
		_acg := _g.StartElement{Name: _g.Name{Local: "p\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_gbf.EffectDag, _acg)
	}
	if _gbf.ExtLst != nil {
		_fce := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gbf.ExtLst, _fce)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fecg *CT_TLTemplate) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fecg.TnLst = NewCT_TimeNodeList()
	for _, _edec := range start.Attr {
		if _edec.Name.Local == "\u006c\u0076\u006c" {
			_dcbee, _dgagc := _d.ParseUint(_edec.Value, 10, 32)
			if _dgagc != nil {
				return _dgagc
			}
			_dfge := uint32(_dcbee)
			_fecg.LvlAttr = &_dfge
			continue
		}
	}
_agbbg:
	for {
		_cgefda, _abgfb := d.Token()
		if _abgfb != nil {
			return _abgfb
		}
		switch _gdfacd := _cgefda.(type) {
		case _g.StartElement:
			switch _gdfacd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}:
				if _aabac := d.DecodeElement(_fecg.TnLst, &_gdfacd); _aabac != nil {
					return _aabac
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054L\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065 \u0025\u0076", _gdfacd.Name)
				if _cgbba := d.Skip(); _cgbba != nil {
					return _cgbba
				}
			}
		case _g.EndElement:
			break _agbbg
		case _g.CharData:
		}
	}
	return nil
}

type CT_TLTimeNodeExclusive struct {

	// Common TimeNode Properties
	CTn *CT_TLCommonTimeNodeData
}

const (
	ST_TLPreviousActionTypeUnset     ST_TLPreviousActionType = 0
	ST_TLPreviousActionTypeNone      ST_TLPreviousActionType = 1
	ST_TLPreviousActionTypeSkipTimed ST_TLPreviousActionType = 2
)

func NewCT_SlideMasterIdList() *CT_SlideMasterIdList {
	_ceadc := &CT_SlideMasterIdList{}
	return _ceadc
}

// ValidateWithPath validates the CT_TLByHslColorTransform and its children, prefixing error messages with path
func (_aggaa *CT_TLByHslColorTransform) ValidateWithPath(path string) error {
	if _cacff := _aggaa.SAttr.ValidateWithPath(path + "\u002f\u0053\u0041\u0074\u0074\u0072"); _cacff != nil {
		return _cacff
	}
	if _cbcfd := _aggaa.LAttr.ValidateWithPath(path + "\u002f\u004c\u0041\u0074\u0074\u0072"); _cbcfd != nil {
		return _cbcfd
	}
	return nil
}

type CT_NotesMasterIdList struct {

	// Notes Master ID
	NotesMasterId *CT_NotesMasterIdListEntry
}

const (
	ST_TLAnimateEffectTransitionUnset ST_TLAnimateEffectTransition = 0
	ST_TLAnimateEffectTransitionIn    ST_TLAnimateEffectTransition = 1
	ST_TLAnimateEffectTransitionOut   ST_TLAnimateEffectTransition = 2
	ST_TLAnimateEffectTransitionNone  ST_TLAnimateEffectTransition = 3
)

// ValidateWithPath validates the CT_CommonViewProperties and its children, prefixing error messages with path
func (_gda *CT_CommonViewProperties) ValidateWithPath(path string) error {
	if _cdg := _gda.Scale.ValidateWithPath(path + "\u002f\u0053\u0063\u0061\u006c\u0065"); _cdg != nil {
		return _cdg
	}
	if _cbe := _gda.Origin.ValidateWithPath(path + "\u002fO\u0072\u0069\u0067\u0069\u006e"); _cbe != nil {
		return _cbe
	}
	return nil
}

// Validate validates the CT_TLTimeConditionList and its children
func (_ceeda *CT_TLTimeConditionList) Validate() error {
	return _ceeda.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u004c\u0069s\u0074")
}

// ValidateWithPath validates the CT_TLCommonBehaviorData and its children, prefixing error messages with path
func (_ceed *CT_TLCommonBehaviorData) ValidateWithPath(path string) error {
	if _eccbb := _ceed.AdditiveAttr.ValidateWithPath(path + "\u002f\u0041\u0064\u0064\u0069\u0074\u0069\u0076\u0065\u0041\u0074\u0074\u0072"); _eccbb != nil {
		return _eccbb
	}
	if _abec := _ceed.AccumulateAttr.ValidateWithPath(path + "\u002fA\u0063c\u0075\u006d\u0075\u006c\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _abec != nil {
		return _abec
	}
	if _gffbc := _ceed.XfrmTypeAttr.ValidateWithPath(path + "\u002f\u0058\u0066\u0072\u006d\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _gffbc != nil {
		return _gffbc
	}
	if _gegf := _ceed.OverrideAttr.ValidateWithPath(path + "\u002f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0041\u0074\u0074\u0072"); _gegf != nil {
		return _gegf
	}
	if _cbdad := _ceed.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _cbdad != nil {
		return _cbdad
	}
	if _ddddd := _ceed.TgtEl.ValidateWithPath(path + "\u002f\u0054\u0067\u0074\u0045\u006c"); _ddddd != nil {
		return _ddddd
	}
	if _ceed.AttrNameLst != nil {
		if _gbgc := _ceed.AttrNameLst.ValidateWithPath(path + "\u002f\u0041\u0074t\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"); _gbgc != nil {
			return _gbgc
		}
	}
	return nil
}

type CT_StringTag struct {

	// Name
	NameAttr string

	// Value
	ValAttr string
}

func NewCT_CommentAuthor() *CT_CommentAuthor { _caa := &CT_CommentAuthor{}; return _caa }

// ValidateWithPath validates the CT_ShowInfoBrowse and its children, prefixing error messages with path
func (_baeb *CT_ShowInfoBrowse) ValidateWithPath(path string) error { return nil }

type CT_TLSubShapeId struct {

	// Shape ID
	SpidAttr string
}

func (_abge ST_TransitionCornerDirectionType) String() string {
	switch _abge {
	case 0:
		return ""
	case 1:
		return "\u006c\u0075"
	case 2:
		return "\u0072\u0075"
	case 3:
		return "\u006c\u0064"
	case 4:
		return "\u0072\u0064"
	}
	return ""
}

func NewCT_TLTimeCondition() *CT_TLTimeCondition { _bdgfd := &CT_TLTimeCondition{}; return _bdgfd }

func (_edafb ST_TLAnimateColorSpace) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_gaace := _g.Attr{}
	_gaace.Name = name
	switch _edafb {
	case ST_TLAnimateColorSpaceUnset:
		_gaace.Value = ""
	case ST_TLAnimateColorSpaceRgb:
		_gaace.Value = "\u0072\u0067\u0062"
	case ST_TLAnimateColorSpaceHsl:
		_gaace.Value = "\u0068\u0073\u006c"
	}
	return _gaace, nil
}

// Validate validates the AG_ChildSlide and its children
func (_gd *AG_ChildSlide) Validate() error {
	return _gd.ValidateWithPath("\u0041\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065")
}

func (_bcfc *CT_TransitionSoundAction) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _bcfc.StSnd != nil {
		_aacbe := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0073\u0074\u0053\u006e\u0064"}}
		e.EncodeElement(_bcfc.StSnd, _aacbe)
	}
	if _bcfc.EndSnd != nil {
		_ecfbf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u006e\u0064\u0053\u006e\u0064"}}
		e.EncodeElement(_bcfc.EndSnd, _ecfbf)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GroupShape and its children
func (_afbf *CT_GroupShape) Validate() error {
	return _afbf.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065")
}

// Validate validates the CT_TLTextTargetElement and its children
func (_ffdf *CT_TLTextTargetElement) Validate() error {
	return _ffdf.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0065\u0078\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074")
}

type CT_SlideLayoutIdList struct {

	// Slide Layout Id
	SldLayoutId []*CT_SlideLayoutIdListEntry
}

func (_cdgfg *CT_WebProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cdgfg.ShowAnimationAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cdgfg.ShowAnimationAttr))})
	}
	if _cdgfg.ResizeGraphicsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0065\u0073\u0069\u007a\u0065\u0047\u0072\u0061p\u0068\u0069\u0063\u0073"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cdgfg.ResizeGraphicsAttr))})
	}
	if _cdgfg.AllowPngAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cdgfg.AllowPngAttr))})
	}
	if _cdgfg.RelyOnVmlAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072e\u006c\u0079\u004f\u006e\u0056\u006dl"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cdgfg.RelyOnVmlAttr))})
	}
	if _cdgfg.OrganizeInFoldersAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0065\u0049\u006e\u0046\u006fl\u0064\u0065\u0072\u0073"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cdgfg.OrganizeInFoldersAttr))})
	}
	if _cdgfg.UseLongFilenamesAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075\u0073e\u004c\u006f\u006eg\u0046\u0069\u006c\u0065\u006e\u0061\u006d\u0065\u0073"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cdgfg.UseLongFilenamesAttr))})
	}
	if _cdgfg.ImgSzAttr != ST_WebScreenSizeUnset {
		_aaae, _fffdc := _cdgfg.ImgSzAttr.MarshalXMLAttr(_g.Name{Local: "\u0069\u006d\u0067S\u007a"})
		if _fffdc != nil {
			return _fffdc
		}
		start.Attr = append(start.Attr, _aaae)
	}
	if _cdgfg.EncodingAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067"}, Value: _ce.Sprintf("\u0025\u0076", *_cdgfg.EncodingAttr)})
	}
	if _cdgfg.ClrAttr != ST_WebColorTypeUnset {
		_bgeab, _dfccc := _cdgfg.ClrAttr.MarshalXMLAttr(_g.Name{Local: "\u0063\u006c\u0072"})
		if _dfccc != nil {
			return _dfccc
		}
		start.Attr = append(start.Attr, _bgeab)
	}
	e.EncodeToken(start)
	if _cdgfg.ExtLst != nil {
		_ddadg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cdgfg.ExtLst, _ddadg)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_edgfd *CT_TLAnimateColorBehavior) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _edgfd.ClrSpcAttr != ST_TLAnimateColorSpaceUnset {
		_ecafg, _fgdbgb := _edgfd.ClrSpcAttr.MarshalXMLAttr(_g.Name{Local: "\u0063\u006c\u0072\u0053\u0070\u0063"})
		if _fgdbgb != nil {
			return _fgdbgb
		}
		start.Attr = append(start.Attr, _ecafg)
	}
	if _edgfd.DirAttr != ST_TLAnimateColorDirectionUnset {
		_efeg, _efgg := _edgfd.DirAttr.MarshalXMLAttr(_g.Name{Local: "\u0064\u0069\u0072"})
		if _efgg != nil {
			return _efgg
		}
		start.Attr = append(start.Attr, _efeg)
	}
	e.EncodeToken(start)
	_edaa := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_edgfd.CBhvr, _edaa)
	if _edgfd.By != nil {
		_dcfdb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u0079"}}
		e.EncodeElement(_edgfd.By, _dcfdb)
	}
	if _edgfd.From != nil {
		_dfbd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0066\u0072\u006f\u006d"}}
		e.EncodeElement(_edgfd.From, _dfbd)
	}
	if _edgfd.To != nil {
		_cbed := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_edgfd.To, _cbed)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_baaac *CT_PresentationProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cffe:
	for {
		_ebfb, _ecgdb := d.Token()
		if _ecgdb != nil {
			return _ecgdb
		}
		switch _adcd := _ebfb.(type) {
		case _g.StartElement:
			switch _adcd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}:
				_baaac.HtmlPubPr = NewCT_HtmlPublishProperties()
				if _gfgag := d.DecodeElement(_baaac.HtmlPubPr, &_adcd); _gfgag != nil {
					return _gfgag
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}:
				_baaac.WebPr = NewCT_WebProperties()
				if _fdec := d.DecodeElement(_baaac.WebPr, &_adcd); _fdec != nil {
					return _fdec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}:
				_baaac.PrnPr = NewCT_PrintProperties()
				if _ggda := d.DecodeElement(_baaac.PrnPr, &_adcd); _ggda != nil {
					return _ggda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}:
				_baaac.ShowPr = NewCT_ShowProperties()
				if _eeee := d.DecodeElement(_baaac.ShowPr, &_adcd); _eeee != nil {
					return _eeee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}:
				_baaac.ClrMru = _f.NewCT_ColorMRU()
				if _afba := d.DecodeElement(_baaac.ClrMru, &_adcd); _afba != nil {
					return _afba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_baaac.ExtLst = NewCT_ExtensionList()
				if _aafa := d.DecodeElement(_baaac.ExtLst, &_adcd); _aafa != nil {
					return _aafa
				}
			default:
				_e.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061t\u0069o\u006e\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065s\u0020\u0025v", _adcd.Name)
				if _ddbe := d.Skip(); _ddbe != nil {
					return _ddbe
				}
			}
		case _g.EndElement:
			break _cffe
		case _g.CharData:
		}
	}
	return nil
}

const (
	ST_TLTimeNodeFillTypeUnset      ST_TLTimeNodeFillType = 0
	ST_TLTimeNodeFillTypeRemove     ST_TLTimeNodeFillType = 1
	ST_TLTimeNodeFillTypeFreeze     ST_TLTimeNodeFillType = 2
	ST_TLTimeNodeFillTypeHold       ST_TLTimeNodeFillType = 3
	ST_TLTimeNodeFillTypeTransition ST_TLTimeNodeFillType = 4
)

func (_ebbf *CT_EightDirectionTransition) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _eccd := range start.Attr {
		if _eccd.Name.Local == "\u0064\u0069\u0072" {
			_dade, _ggfe := ParseUnionST_TransitionEightDirectionType(_eccd.Value)
			if _ggfe != nil {
				return _ggfe
			}
			_ebbf.DirAttr = &_dade
			continue
		}
	}
	for {
		_fbcd, _becc := d.Token()
		if _becc != nil {
			return _ce.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0069g\u0068\u0074\u0044\u0069\u0072\u0065c\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006fn\u003a\u0020\u0025\u0073", _becc)
		}
		if _cfeg, _cda := _fbcd.(_g.EndElement); _cda && _cfeg.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_TLPoint() *CT_TLPoint { _bcdgg := &CT_TLPoint{}; return _bcdgg }

func (_ffdd ST_TLBehaviorAdditiveType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_ffdd.String(), start)
}

func (_ededc ST_SplitterBarState) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cgfgg := _g.Attr{}
	_cgfgg.Name = name
	switch _ededc {
	case ST_SplitterBarStateUnset:
		_cgfgg.Value = ""
	case ST_SplitterBarStateMinimized:
		_cgfgg.Value = "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"
	case ST_SplitterBarStateRestored:
		_cgfgg.Value = "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064"
	case ST_SplitterBarStateMaximized:
		_cgfgg.Value = "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d"
	}
	return _cgfgg, nil
}

type CT_TLTriggerTimeNodeID struct {

	// Value
	ValAttr uint32
}

func (_fcfdg *CT_Rel) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _fcfdg.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fcbf *ST_TLAnimateBehaviorCalcMode) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cccage, _dgdd := d.Token()
	if _dgdd != nil {
		return _dgdd
	}
	if _cffc, _gabeb := _cccage.(_g.EndElement); _gabeb && _cffc.Name == start.Name {
		*_fcbf = 1
		return nil
	}
	if _fgbgaa, _gbggb := _cccage.(_g.CharData); !_gbggb {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cccage)
	} else {
		switch string(_fgbgaa) {
		case "":
			*_fcbf = 0
		case "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065":
			*_fcbf = 1
		case "\u006c\u0069\u006e":
			*_fcbf = 2
		case "\u0066\u006d\u006c\u0061":
			*_fcbf = 3
		}
	}
	_cccage, _dgdd = d.Token()
	if _dgdd != nil {
		return _dgdd
	}
	if _agdc, _gdcge := _cccage.(_g.EndElement); _gdcge && _agdc.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cccage)
}

func NewCT_TLTriggerRuntimeNode() *CT_TLTriggerRuntimeNode {
	_bdgge := &CT_TLTriggerRuntimeNode{}
	_bdgge.ValAttr = ST_TLTriggerRuntimeNode(1)
	return _bdgge
}

func (_dgga *ST_WebScreenSize) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_egfeb, _fgfbf := d.Token()
	if _fgfbf != nil {
		return _fgfbf
	}
	if _bgadb, _fdedd := _egfeb.(_g.EndElement); _fdedd && _bgadb.Name == start.Name {
		*_dgga = 1
		return nil
	}
	if _cdfbc, _degge := _egfeb.(_g.CharData); !_degge {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _egfeb)
	} else {
		switch string(_cdfbc) {
		case "":
			*_dgga = 0
		case "\u00354\u0034\u0078\u0033\u0037\u0036":
			*_dgga = 1
		case "\u00364\u0030\u0078\u0034\u0038\u0030":
			*_dgga = 2
		case "\u00372\u0030\u0078\u0035\u0031\u0032":
			*_dgga = 3
		case "\u00380\u0030\u0078\u0036\u0030\u0030":
			*_dgga = 4
		case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
			*_dgga = 5
		case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
			*_dgga = 6
		case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
			*_dgga = 7
		case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
			*_dgga = 8
		case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
			*_dgga = 9
		case "\u00318\u0030\u0030\u0078\u0031\u0034\u00300":
			*_dgga = 10
		case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
			*_dgga = 11
		}
	}
	_egfeb, _fgfbf = d.Token()
	if _fgfbf != nil {
		return _fgfbf
	}
	if _eacfaf, _dbaac := _egfeb.(_g.EndElement); _dbaac && _eacfaf.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _egfeb)
}

func NewCT_OleObject() *CT_OleObject {
	_abbc := &CT_OleObject{}
	_abbc.Choice = NewCT_OleObjectChoice()
	return _abbc
}

// ValidateWithPath validates the CT_CustomerData and its children, prefixing error messages with path
func (_bdcg *CT_CustomerData) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_TLOleChartTargetElement and its children
func (_gbed *CT_TLOleChartTargetElement) Validate() error {
	return _gbed.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u004f\u006c\u0065\u0043\u0068\u0061r\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074")
}

func (_gddac ST_TransitionSpeed) ValidateWithPath(path string) error {
	switch _gddac {
	case 0, 1, 2, 3:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gddac))
	}
	return nil
}

func NewCT_NotesTextViewProperties() *CT_NotesTextViewProperties {
	_gcfc := &CT_NotesTextViewProperties{}
	_gcfc.CViewPr = NewCT_CommonViewProperties()
	return _gcfc
}

type CT_CornerDirectionTransition struct {

	// Direction
	DirAttr ST_TransitionCornerDirectionType
}

const (
	ST_TLAnimateColorDirectionUnset ST_TLAnimateColorDirection = 0
	ST_TLAnimateColorDirectionCw    ST_TLAnimateColorDirection = 1
	ST_TLAnimateColorDirectionCcw   ST_TLAnimateColorDirection = 2
)

type ST_TransitionSpeed byte

type NotesMaster struct{ CT_NotesMaster }

func (_decg ST_TLCommandType) ValidateWithPath(path string) error {
	switch _decg {
	case 0, 1, 2, 3:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_decg))
	}
	return nil
}

func NewCT_NormalViewProperties() *CT_NormalViewProperties {
	_dbde := &CT_NormalViewProperties{}
	_dbde.RestoredLeft = NewCT_NormalViewPortion()
	_dbde.RestoredTop = NewCT_NormalViewPortion()
	return _dbde
}

type CT_TLByRgbColorTransform struct {

	// Red
	RAttr _f.ST_FixedPercentage

	// Green
	GAttr _f.ST_FixedPercentage

	// Blue
	BAttr _f.ST_FixedPercentage
}

// Validate validates the CT_PhotoAlbum and its children
func (_gbgga *CT_PhotoAlbum) Validate() error {
	return _gbgga.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d")
}

// ValidateWithPath validates the CT_CornerDirectionTransition and its children, prefixing error messages with path
func (_cbdc *CT_CornerDirectionTransition) ValidateWithPath(path string) error {
	if _acc := _cbdc.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _acc != nil {
		return _acc
	}
	return nil
}

type CT_ConnectorNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_f.CT_NonVisualDrawingProps

	// Non-Visual Connector Shape Drawing Properties
	CNvCxnSpPr *_f.CT_NonVisualConnectorProperties

	// Application Non-Visual Drawing Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

func (_eeda ST_TLTriggerEvent) String() string {
	switch _eeda {
	case 0:
		return ""
	case 1:
		return "\u006fn\u0042\u0065\u0067\u0069\u006e"
	case 2:
		return "\u006f\u006e\u0045n\u0064"
	case 3:
		return "\u0062\u0065\u0067i\u006e"
	case 4:
		return "\u0065\u006e\u0064"
	case 5:
		return "\u006fn\u0043\u006c\u0069\u0063\u006b"
	case 6:
		return "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b"
	case 7:
		return "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"
	case 8:
		return "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074"
	case 9:
		return "\u006f\u006e\u004e\u0065\u0078\u0074"
	case 10:
		return "\u006f\u006e\u0050\u0072\u0065\u0076"
	case 11:
		return "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f"
	}
	return ""
}

// ValidateWithPath validates the CT_HandoutMasterIdList and its children, prefixing error messages with path
func (_gccd *CT_HandoutMasterIdList) ValidateWithPath(path string) error {
	if _gccd.HandoutMasterId != nil {
		if _cddf := _gccd.HandoutMasterId.ValidateWithPath(path + "\u002f\u0048a\u006e\u0064\u006fu\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"); _cddf != nil {
			return _cddf
		}
	}
	return nil
}

func (_fdcf *CT_TLIterateData) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fdgdde := range start.Attr {
		if _fdgdde.Name.Local == "\u0074\u0079\u0070\u0065" {
			_fdcf.TypeAttr.UnmarshalXMLAttr(_fdgdde)
			continue
		}
		if _fdgdde.Name.Local == "\u0062a\u0063\u006b\u0077\u0061\u0072\u0064s" {
			_abecb, _aagad := _d.ParseBool(_fdgdde.Value)
			if _aagad != nil {
				return _aagad
			}
			_fdcf.BackwardsAttr = &_abecb
			continue
		}
	}
_eddg:
	for {
		_bfede, _cbaea := d.Token()
		if _cbaea != nil {
			return _cbaea
		}
		switch _acfad := _bfede.(type) {
		case _g.StartElement:
			switch _acfad.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0041b\u0073"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0041b\u0073"}:
				_fdcf.TmAbs = NewCT_TLIterateIntervalTime()
				if _gbca := d.DecodeElement(_fdcf.TmAbs, &_acfad); _gbca != nil {
					return _gbca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0050c\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0050c\u0074"}:
				_fdcf.TmPct = NewCT_TLIterateIntervalPercentage()
				if _dfbaa := d.DecodeElement(_fdcf.TmPct, &_acfad); _dfbaa != nil {
					return _dfbaa
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061\u0020\u0025v", _acfad.Name)
				if _feaee := d.Skip(); _feaee != nil {
					return _feaee
				}
			}
		case _g.EndElement:
			break _eddg
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLOleBuildChart and its children
func (_agadd *CT_TLOleBuildChart) Validate() error {
	return _agadd.ValidateWithPath("\u0043T\u005fT\u004c\u004f\u006c\u0065\u0042u\u0069\u006cd\u0043\u0068\u0061\u0072\u0074")
}

func (_bcbcf ST_TLTriggerEvent) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_ggae := _g.Attr{}
	_ggae.Name = name
	switch _bcbcf {
	case ST_TLTriggerEventUnset:
		_ggae.Value = ""
	case ST_TLTriggerEventOnBegin:
		_ggae.Value = "\u006fn\u0042\u0065\u0067\u0069\u006e"
	case ST_TLTriggerEventOnEnd:
		_ggae.Value = "\u006f\u006e\u0045n\u0064"
	case ST_TLTriggerEventBegin:
		_ggae.Value = "\u0062\u0065\u0067i\u006e"
	case ST_TLTriggerEventEnd:
		_ggae.Value = "\u0065\u006e\u0064"
	case ST_TLTriggerEventOnClick:
		_ggae.Value = "\u006fn\u0043\u006c\u0069\u0063\u006b"
	case ST_TLTriggerEventOnDblClick:
		_ggae.Value = "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b"
	case ST_TLTriggerEventOnMouseOver:
		_ggae.Value = "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"
	case ST_TLTriggerEventOnMouseOut:
		_ggae.Value = "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074"
	case ST_TLTriggerEventOnNext:
		_ggae.Value = "\u006f\u006e\u004e\u0065\u0078\u0074"
	case ST_TLTriggerEventOnPrev:
		_ggae.Value = "\u006f\u006e\u0050\u0072\u0065\u0076"
	case ST_TLTriggerEventOnStopAudio:
		_ggae.Value = "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f"
	}
	return _ggae, nil
}

func (_egbab ST_TLTimeNodeFillType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_egbab.String(), start)
}

func (_dfgfa *ST_TransitionSideDirectionType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_dfgfa = 0
	case "\u006c":
		*_dfgfa = 1
	case "\u0075":
		*_dfgfa = 2
	case "\u0072":
		*_dfgfa = 3
	case "\u0064":
		*_dfgfa = 4
	}
	return nil
}

func (_ggfege ST_TLAnimateMotionBehaviorOrigin) String() string {
	switch _ggfege {
	case 0:
		return ""
	case 1:
		return "\u0070\u0061\u0072\u0065\u006e\u0074"
	case 2:
		return "\u006c\u0061\u0079\u006f\u0075\u0074"
	}
	return ""
}

// Validate validates the CT_TLAnimateMotionBehavior and its children
func (_ebbae *CT_TLAnimateMotionBehavior) Validate() error {
	return _ebbae.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u004d\u006f\u0074\u0069\u006f\u006e\u0042\u0065\u0068\u0061v\u0069\u006f\u0072")
}

func (_fcecbd ST_TransitionInOutDirectionType) ValidateWithPath(path string) error {
	switch _fcecbd {
	case 0, 1, 2:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fcecbd))
	}
	return nil
}

func (_cbadb *ST_WebColorType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cbadb = 0
	case "\u006e\u006f\u006e\u0065":
		*_cbadb = 1
	case "\u0062r\u006f\u0077\u0073\u0065\u0072":
		*_cbadb = 2
	case "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
		*_cbadb = 3
	case "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074":
		*_cbadb = 4
	case "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b":
		*_cbadb = 5
	case "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065":
		*_cbadb = 6
	}
	return nil
}

// ValidateWithPath validates the CT_TLCommonMediaNodeData and its children, prefixing error messages with path
func (_gcbae *CT_TLCommonMediaNodeData) ValidateWithPath(path string) error {
	if _gcbae.VolAttr != nil {
		if _dcga := _gcbae.VolAttr.ValidateWithPath(path + "\u002f\u0056\u006f\u006c\u0041\u0074\u0074\u0072"); _dcga != nil {
			return _dcga
		}
	}
	if _baeee := _gcbae.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _baeee != nil {
		return _baeee
	}
	if _fdac := _gcbae.TgtEl.ValidateWithPath(path + "\u002f\u0054\u0067\u0074\u0045\u006c"); _fdac != nil {
		return _fdac
	}
	return nil
}

func (_ffgg *CT_ShapeNonVisual) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ffgg.CNvPr = _f.NewCT_NonVisualDrawingProps()
	_ffgg.CNvSpPr = _f.NewCT_NonVisualDrawingShapeProps()
	_ffgg.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_bebfb:
	for {
		_bdcb, _gafb := d.Token()
		if _gafb != nil {
			return _gafb
		}
		switch _feed := _bdcb.(type) {
		case _g.StartElement:
			switch _feed.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _acca := d.DecodeElement(_ffgg.CNvPr, &_feed); _acca != nil {
					return _acca
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}:
				if _bfcc := d.DecodeElement(_ffgg.CNvSpPr, &_feed); _bfcc != nil {
					return _bfcc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _dbdf := d.DecodeElement(_ffgg.NvPr, &_feed); _dbdf != nil {
					return _dbdf
				}
			default:
				_e.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _feed.Name)
				if _gcbbd := d.Skip(); _gcbbd != nil {
					return _gcbbd
				}
			}
		case _g.EndElement:
			break _bebfb
		case _g.CharData:
		}
	}
	return nil
}

type ViewPr struct{ CT_ViewProperties }

func (_dbcb *CT_Control) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _dbcb.SpidAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_dbcb.SpidAttr)})
	}
	if _dbcb.NameAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ce.Sprintf("\u0025\u0076", *_dbcb.NameAttr)})
	}
	if _dbcb.ShowAsIconAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_dbcb.ShowAsIconAttr))})
	}
	if _dbcb.IdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_dbcb.IdAttr)})
	}
	if _dbcb.ImgWAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u006d\u0067\u0057"}, Value: _ce.Sprintf("\u0025\u0076", *_dbcb.ImgWAttr)})
	}
	if _dbcb.ImgHAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u006d\u0067\u0048"}, Value: _ce.Sprintf("\u0025\u0076", *_dbcb.ImgHAttr)})
	}
	e.EncodeToken(start)
	if _dbcb.ExtLst != nil {
		_fgbd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dbcb.ExtLst, _fgbd)
	}
	if _dbcb.Pic != nil {
		_ceec := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0070i\u0063"}}
		e.EncodeElement(_dbcb.Pic, _ceec)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_NotesMaster() *CT_NotesMaster {
	_fabd := &CT_NotesMaster{}
	_fabd.CSld = NewCT_CommonSlideData()
	_fabd.ClrMap = _f.NewCT_ColorMapping()
	return _fabd
}

func (_fbcaf ST_TLTimeIndefinite) String() string {
	switch _fbcaf {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065"
	}
	return ""
}

func (_edfd *CT_TagsData) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _edfd.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CustomerDataList and its children
func (_gcdb *CT_CustomerDataList) Validate() error {
	return _gcdb.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061\u004c\u0069\u0073\u0074")
}

func (_bcbgg ST_TLAnimateColorSpace) ValidateWithPath(path string) error {
	switch _bcbgg {
	case 0, 1, 2:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bcbgg))
	}
	return nil
}

type CT_OleObjectEmbed struct {

	// Color Scheme Properties for Embedded object
	FollowColorSchemeAttr ST_OleObjectFollowColorScheme
	ExtLst                *CT_ExtensionList
}

func NewCT_ShowInfoKiosk() *CT_ShowInfoKiosk { _afga := &CT_ShowInfoKiosk{}; return _afga }

func (_fgce *CT_EmbeddedFontList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _fgce.EmbeddedFont != nil {
		_cbg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u006d\u0062\u0065\u0064\u0064\u0065d\u0046\u006f\u006e\u0074"}}
		for _, _geb := range _fgce.EmbeddedFont {
			e.EncodeElement(_geb, _cbg)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type ST_TLTriggerEvent byte

func NewCT_CustomShow() *CT_CustomShow {
	_defgc := &CT_CustomShow{}
	_defgc.SldLst = NewCT_SlideRelationshipList()
	return _defgc
}

// Validate validates the CT_GroupShapeNonVisual and its children
func (_bceaf *CT_GroupShapeNonVisual) Validate() error {
	return _bceaf.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c")
}

func (_efaeb *CT_WheelTransition) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _agddf := range start.Attr {
		if _agddf.Name.Local == "\u0073\u0070\u006f\u006b\u0065\u0073" {
			_ceade, _cdeeg := _d.ParseUint(_agddf.Value, 10, 32)
			if _cdeeg != nil {
				return _cdeeg
			}
			_geagd := uint32(_ceade)
			_efaeb.SpokesAttr = &_geagd
			continue
		}
	}
	for {
		_ffcg, _geabf := d.Token()
		if _geabf != nil {
			return _ce.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0057\u0068\u0065\u0065\u006c\u0054\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _geabf)
		}
		if _bcbc, _cddea := _ffcg.(_g.EndElement); _cddea && _bcbc.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TLAnimVariantFloatVal struct {

	// Value
	ValAttr float32
}

func NewCT_NotesViewProperties() *CT_NotesViewProperties {
	_gbfe := &CT_NotesViewProperties{}
	_gbfe.CSldViewPr = NewCT_CommonSlideViewProperties()
	return _gbfe
}

// Validate validates the SldLayout and its children
func (_aafdb *SldLayout) Validate() error {
	return _aafdb.ValidateWithPath("\u0053l\u0064\u004c\u0061\u0079\u006f\u0075t")
}

type Sld struct{ CT_Slide }

func NewCT_TLCommonMediaNodeData() *CT_TLCommonMediaNodeData {
	_begga := &CT_TLCommonMediaNodeData{}
	_begga.CTn = NewCT_TLCommonTimeNodeData()
	_begga.TgtEl = NewCT_TLTimeTargetElement()
	return _begga
}

type CT_ExtensionListModify struct {

	// Modify
	ModAttr *bool

	// Extension
	Ext []*CT_Extension
}

// ValidateWithPath validates the CT_TLOleChartTargetElement and its children, prefixing error messages with path
func (_ggedb *CT_TLOleChartTargetElement) ValidateWithPath(path string) error {
	if _ggedb.TypeAttr == ST_TLChartSubelementTypeUnset {
		return _ce.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _egega := _ggedb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _egega != nil {
		return _egega
	}
	return nil
}

// ValidateWithPath validates the CT_SmartTags and its children, prefixing error messages with path
func (_ceeffc *CT_SmartTags) ValidateWithPath(path string) error { return nil }

type CT_Placeholder struct {

	// Placeholder Type
	TypeAttr ST_PlaceholderType

	// Placeholder Orientation
	OrientAttr ST_Direction

	// Placeholder Size
	SzAttr ST_PlaceholderSize

	// Placeholder Index
	IdxAttr *uint32

	// Placeholder has custom prompt
	HasCustomPromptAttr *bool
	ExtLst              *CT_ExtensionListModify
}

func (_aba *AG_TLBuild) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _de := range start.Attr {
		if _de.Name.Local == "\u0073\u0070\u0069\u0064" {
			_fef, _acd := _d.ParseUint(_de.Value, 10, 32)
			if _acd != nil {
				return _acd
			}
			_ace := uint32(_fef)
			_aba.SpidAttr = &_ace
			continue
		}
		if _de.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_ba, _afg := _d.ParseUint(_de.Value, 10, 32)
			if _afg != nil {
				return _afg
			}
			_gc := uint32(_ba)
			_aba.GrpIdAttr = &_gc
			continue
		}
		if _de.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_cb, _dgb := _d.ParseBool(_de.Value)
			if _dgb != nil {
				return _dgb
			}
			_aba.UiExpandAttr = &_cb
			continue
		}
	}
	for {
		_dc, _dbc := d.Token()
		if _dbc != nil {
			return _ce.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u003a\u0020%\u0073", _dbc)
		}
		if _afge, _fd := _dc.(_g.EndElement); _fd && _afge.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_CustomerData and its children
func (_egae *CT_CustomerData) Validate() error {
	return _egae.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061")
}

type CT_TLCommonBehaviorData struct {

	// Additive
	AdditiveAttr ST_TLBehaviorAdditiveType

	// Accumulate
	AccumulateAttr ST_TLBehaviorAccumulateType

	// Transform Type
	XfrmTypeAttr ST_TLBehaviorTransformType

	// From
	FromAttr *string

	// To
	ToAttr *string

	// By
	ByAttr *string

	// Runtime Context
	RctxAttr *string

	// Override
	OverrideAttr ST_TLBehaviorOverrideType
	CTn          *CT_TLCommonTimeNodeData

	// Target Element
	TgtEl *CT_TLTimeTargetElement

	// Attribute Name List
	AttrNameLst *CT_TLBehaviorAttributeNameList
}

func (_gdgca ST_TLBehaviorTransformType) String() string {
	switch _gdgca {
	case 0:
		return ""
	case 1:
		return "\u0070\u0074"
	case 2:
		return "\u0069\u006d\u0067"
	}
	return ""
}

func (_bacgb ST_ViewType) String() string {
	switch _bacgb {
	case 0:
		return ""
	case 1:
		return "\u0073l\u0064\u0056\u0069\u0065\u0077"
	case 2:
		return "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case 3:
		return "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w"
	case 4:
		return "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077"
	case 5:
		return "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case 6:
		return "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077"
	case 7:
		return "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case 8:
		return "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077"
	}
	return ""
}

func NewCT_CommonViewProperties() *CT_CommonViewProperties {
	_fdf := &CT_CommonViewProperties{}
	_fdf.Scale = _f.NewCT_Scale2D()
	_fdf.Origin = _f.NewCT_Point2D()
	return _fdf
}

func (_cbdbf *CT_TLMediaNodeAudio) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cbdbf.IsNarrationAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "i\u0073\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_cbdbf.IsNarrationAttr))})
	}
	e.EncodeToken(start)
	_gabbe := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063M\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}}
	e.EncodeElement(_cbdbf.CMediaNode, _gabbe)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_edgca ST_TLAnimateBehaviorCalcMode) Validate() error { return _edgca.ValidateWithPath("") }

type EG_ChildSlide struct {

	// Color Scheme Map Override
	ClrMapOvr *_f.CT_ColorMappingOverride
}

func (_faf *CT_CommentAuthorList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _faf.CmAuthor != nil {
		_ccd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}}
		for _, _abba := range _faf.CmAuthor {
			e.EncodeElement(_abba, _ccd)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLBuildDiagram and its children
func (_cgge *CT_TLBuildDiagram) Validate() error {
	return _cgge.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u0044\u0069a\u0067\u0072\u0061\u006d")
}

func (_gffa *CT_CustomShowId) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _gffa.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_Placeholder() *CT_Placeholder { _agae := &CT_Placeholder{}; return _agae }

func NewCT_TLOleChartTargetElement() *CT_TLOleChartTargetElement {
	_cfggg := &CT_TLOleChartTargetElement{}
	_cfggg.TypeAttr = ST_TLChartSubelementType(1)
	return _cfggg
}

func (_a *AG_ChildSlide) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ab := range start.Attr {
		if _ab.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_fcd, _gf := _d.ParseBool(_ab.Value)
			if _gf != nil {
				return _gf
			}
			_a.ShowMasterSpAttr = &_fcd
			continue
		}
		if _ab.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_ac, _cg := _d.ParseBool(_ab.Value)
			if _cg != nil {
				return _cg
			}
			_a.ShowMasterPhAnimAttr = &_ac
			continue
		}
	}
	for {
		_dg, _ff := d.Token()
		if _ff != nil {
			return _ce.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0041\u0047\u005f\u0043h\u0069l\u0064S\u006c\u0069\u0064\u0065\u003a\u0020\u0025s", _ff)
		}
		if _ea, _cf := _dg.(_g.EndElement); _cf && _ea.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gdcf *CT_HandoutMaster) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gdcf.CSld = NewCT_CommonSlideData()
	_gdcf.ClrMap = _f.NewCT_ColorMapping()
_dacc:
	for {
		_bfda, _edgg := d.Token()
		if _edgg != nil {
			return _edgg
		}
		switch _edee := _bfda.(type) {
		case _g.StartElement:
			switch _edee.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _dbcbb := d.DecodeElement(_gdcf.CSld, &_edee); _dbcbb != nil {
					return _dbcbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _eabb := d.DecodeElement(_gdcf.ClrMap, &_edee); _eabb != nil {
					return _eabb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_gdcf.Hf = NewCT_HeaderFooter()
				if _bdda := d.DecodeElement(_gdcf.Hf, &_edee); _bdda != nil {
					return _bdda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdcf.ExtLst = NewCT_ExtensionListModify()
				if _dcda := d.DecodeElement(_gdcf.ExtLst, &_edee); _dcda != nil {
					return _dcda
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0020\u0025v", _edee.Name)
				if _bbdc := d.Skip(); _bbdc != nil {
					return _bbdc
				}
			}
		case _g.EndElement:
			break _dacc
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Background and its children
func (_deg *CT_Background) Validate() error {
	return _deg.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064")
}

func (_ebda ST_TLNextActionType) ValidateWithPath(path string) error {
	switch _ebda {
	case 0, 1, 2:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebda))
	}
	return nil
}

// Validate validates the Sld and its children
func (_eadcc *Sld) Validate() error { return _eadcc.ValidateWithPath("\u0053\u006c\u0064") }

// Validate validates the CT_Picture and its children
func (_gbdg *CT_Picture) Validate() error {
	return _gbdg.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065")
}

const (
	ST_TLTimeIndefiniteUnset      ST_TLTimeIndefinite = 0
	ST_TLTimeIndefiniteIndefinite ST_TLTimeIndefinite = 1
)

type CT_NotesTextViewProperties struct {

	// Base properties for Notes View
	CViewPr *CT_CommonViewProperties
	ExtLst  *CT_ExtensionList
}

// ValidateWithPath validates the CT_TLTimeAnimateValueList and its children, prefixing error messages with path
func (_fgfad *CT_TLTimeAnimateValueList) ValidateWithPath(path string) error {
	for _gfccd, _dgaec := range _fgfad.Tav {
		if _ffcac := _dgaec.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0076\u005b\u0025\u0064\u005d", path, _gfccd)); _ffcac != nil {
			return _ffcac
		}
	}
	return nil
}

func NewCT_TLIterateIntervalTime() *CT_TLIterateIntervalTime {
	_gebd := &CT_TLIterateIntervalTime{}
	return _gebd
}

func (_ccaf *CT_CustomShow) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ce.Sprintf("\u0025\u0076", _ccaf.NameAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _ccaf.IdAttr)})
	e.EncodeToken(start)
	_cddc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004c\u0073\u0074"}}
	e.EncodeElement(_ccaf.SldLst, _cddc)
	if _ccaf.ExtLst != nil {
		_cge := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ccaf.ExtLst, _cge)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Sld and its children, prefixing error messages with path
func (_bbcfd *Sld) ValidateWithPath(path string) error {
	if _adaee := _bbcfd.CT_Slide.ValidateWithPath(path); _adaee != nil {
		return _adaee
	}
	return nil
}

func (_ecddb *CT_TagsData) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dbfdb := range start.Attr {
		if _dbfdb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dbfdb.Name.Local == "\u0069\u0064" || _dbfdb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dbfdb.Name.Local == "\u0069\u0064" {
			_ffgdd, _bdeg := _dbfdb.Value, error(nil)
			if _bdeg != nil {
				return _bdeg
			}
			_ecddb.IdAttr = _ffgdd
			continue
		}
	}
	for {
		_gabdc, _dfae := d.Token()
		if _dfae != nil {
			return _ce.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061\u0067\u0073\u0044\u0061\u0074\u0061\u003a\u0020\u0025\u0073", _dfae)
		}
		if _ebfcd, _beab := _gabdc.(_g.EndElement); _beab && _ebfcd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CommonSlideData and its children, prefixing error messages with path
func (_bbeg *CT_CommonSlideData) ValidateWithPath(path string) error {
	if _bbeg.Bg != nil {
		if _dgff := _bbeg.Bg.ValidateWithPath(path + "\u002f\u0042\u0067"); _dgff != nil {
			return _dgff
		}
	}
	if _ccfeg := _bbeg.SpTree.ValidateWithPath(path + "\u002fS\u0070\u0054\u0072\u0065\u0065"); _ccfeg != nil {
		return _ccfeg
	}
	if _bbeg.CustDataLst != nil {
		if _dgfd := _bbeg.CustDataLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"); _dgfd != nil {
			return _dgfd
		}
	}
	if _bbeg.Controls != nil {
		if _bfg := _bbeg.Controls.ValidateWithPath(path + "\u002fC\u006f\u006e\u0074\u0072\u006f\u006cs"); _bfg != nil {
			return _bfg
		}
	}
	if _bbeg.ExtLst != nil {
		if _gfa := _bbeg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfa != nil {
			return _gfa
		}
	}
	return nil
}

func NewCT_SlideRelationshipListEntry() *CT_SlideRelationshipListEntry {
	_afdb := &CT_SlideRelationshipListEntry{}
	return _afdb
}

func NewCT_TLSetBehavior() *CT_TLSetBehavior {
	_fafdd := &CT_TLSetBehavior{}
	_fafdd.CBhvr = NewCT_TLCommonBehaviorData()
	return _fafdd
}

func (_gecb *CT_CommentAuthorList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fbe:
	for {
		_gag, _fcbb := d.Token()
		if _fcbb != nil {
			return _fcbb
		}
		switch _def := _gag.(type) {
		case _g.StartElement:
			switch _def.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}:
				_ecb := NewCT_CommentAuthor()
				if _gdcc := d.DecodeElement(_ecb, &_def); _gdcc != nil {
					return _gdcc
				}
				_gecb.CmAuthor = append(_gecb.CmAuthor, _ecb)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _def.Name)
				if _cdd := d.Skip(); _cdd != nil {
					return _cdd
				}
			}
		case _g.EndElement:
			break _fbe
		case _g.CharData:
		}
	}
	return nil
}

func (_fagc ST_TLAnimateColorSpace) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fagc.String(), start)
}

func (_eegc *CT_CustomShowList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_egbbg:
	for {
		_becbe, _bbeb := d.Token()
		if _bbeb != nil {
			return _bbeb
		}
		switch _ggdf := _becbe.(type) {
		case _g.StartElement:
			switch _ggdf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_geabe := NewCT_CustomShow()
				if _cedb := d.DecodeElement(_geabe, &_ggdf); _cedb != nil {
					return _cedb
				}
				_eegc.CustShow = append(_eegc.CustShow, _geabe)
			default:
				_e.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ggdf.Name)
				if _gde := d.Skip(); _gde != nil {
					return _gde
				}
			}
		case _g.EndElement:
			break _egbbg
		case _g.CharData:
		}
	}
	return nil
}

func (_aeage *Sld) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_aeage.CT_Slide = *NewCT_Slide()
	for _, _eebfd := range start.Attr {
		if _eebfd.Name.Local == "\u0073\u0068\u006f\u0077" {
			_aadae, _bbae := _d.ParseBool(_eebfd.Value)
			if _bbae != nil {
				return _bbae
			}
			_aeage.ShowAttr = &_aadae
			continue
		}
		if _eebfd.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_deef, _feffg := _d.ParseBool(_eebfd.Value)
			if _feffg != nil {
				return _feffg
			}
			_aeage.ShowMasterSpAttr = &_deef
			continue
		}
		if _eebfd.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_bacc, _cfcdb := _d.ParseBool(_eebfd.Value)
			if _cfcdb != nil {
				return _cfcdb
			}
			_aeage.ShowMasterPhAnimAttr = &_bacc
			continue
		}
	}
_aecga:
	for {
		_gbgaf, _babbb := d.Token()
		if _babbb != nil {
			return _babbb
		}
		switch _aegga := _gbgaf.(type) {
		case _g.StartElement:
			switch _aegga.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _ggdec := d.DecodeElement(_aeage.CSld, &_aegga); _ggdec != nil {
					return _ggdec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_aeage.ClrMapOvr = _f.NewCT_ColorMappingOverride()
				if _gbae := d.DecodeElement(_aeage.ClrMapOvr, &_aegga); _gbae != nil {
					return _gbae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_aeage.Transition = NewCT_SlideTransition()
				if _aggg := d.DecodeElement(_aeage.Transition, &_aegga); _aggg != nil {
					return _aggg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_aeage.Timing = NewCT_SlideTiming()
				if _dced := d.DecodeElement(_aeage.Timing, &_aegga); _dced != nil {
					return _dced
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aeage.ExtLst = NewCT_ExtensionListModify()
				if _dfbba := d.DecodeElement(_aeage.ExtLst, &_aegga); _dfbba != nil {
					return _dfbba
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0053l\u0064\u0020\u0025\u0076", _aegga.Name)
				if _ecaab := d.Skip(); _ecaab != nil {
					return _ecaab
				}
			}
		case _g.EndElement:
			break _aecga
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_TLByHslColorTransform() *CT_TLByHslColorTransform {
	_becca := &CT_TLByHslColorTransform{}
	return _becca
}

func (_gaaafc *CT_TLTemplate) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gaaafc.LvlAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006c\u0076\u006c"}, Value: _ce.Sprintf("\u0025\u0076", *_gaaafc.LvlAttr)})
	}
	e.EncodeToken(start)
	_gcfca := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0074\u006e\u004c\u0073\u0074"}}
	e.EncodeElement(_gaaafc.TnLst, _gcfca)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_HandoutMasterIdListEntry and its children, prefixing error messages with path
func (_baac *CT_HandoutMasterIdListEntry) ValidateWithPath(path string) error {
	if _baac.ExtLst != nil {
		if _beaa := _baac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _beaa != nil {
			return _beaa
		}
	}
	return nil
}

func (_cfece *CT_TLMediaNodeAudio) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cfece.CMediaNode = NewCT_TLCommonMediaNodeData()
	for _, _gbce := range start.Attr {
		if _gbce.Name.Local == "i\u0073\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e" {
			_bbfcg, _fbabg := _d.ParseBool(_gbce.Value)
			if _fbabg != nil {
				return _fbabg
			}
			_cfece.IsNarrationAttr = &_bbfcg
			continue
		}
	}
_cbacg:
	for {
		_bagb, _gaac := d.Token()
		if _gaac != nil {
			return _gaac
		}
		switch _dfbeg := _bagb.(type) {
		case _g.StartElement:
			switch _dfbeg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}:
				if _gdefe := d.DecodeElement(_cfece.CMediaNode, &_dfbeg); _gdefe != nil {
					return _gdefe
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u004d\u0065\u0064\u0069\u0061No\u0064\u0065\u0041\u0075\u0064\u0069\u006f\u0020\u0025\u0076", _dfbeg.Name)
				if _abfb := d.Skip(); _abfb != nil {
					return _abfb
				}
			}
		case _g.EndElement:
			break _cbacg
		case _g.CharData:
		}
	}
	return nil
}

func (_fccca ST_WebColorType) Validate() error { return _fccca.ValidateWithPath("") }

func (_ddga *CT_InOutTransition) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _caebb := range start.Attr {
		if _caebb.Name.Local == "\u0064\u0069\u0072" {
			_ddga.DirAttr.UnmarshalXMLAttr(_caebb)
			continue
		}
	}
	for {
		_aceg, _aacbb := d.Token()
		if _aacbb != nil {
			return _ce.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0049\u006e\u004f\u0075\u0074\u0054\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _aacbb)
		}
		if _fde, _cebg := _aceg.(_g.EndElement); _cebg && _fde.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dgcdc ST_TLDiagramBuildType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_dgcdc.String(), start)
}

func (_cbfb *ST_TLTimeNodeMasterRelation) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cbfb = 0
	case "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k":
		*_cbfb = 1
	case "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k":
		*_cbfb = 2
	case "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k":
		*_cbfb = 3
	}
	return nil
}

func (_gcfd *ST_TLAnimateMotionBehaviorOrigin) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ffaef, _faed := d.Token()
	if _faed != nil {
		return _faed
	}
	if _acecg, _fcdcf := _ffaef.(_g.EndElement); _fcdcf && _acecg.Name == start.Name {
		*_gcfd = 1
		return nil
	}
	if _fgbbb, _gbdeb := _ffaef.(_g.CharData); !_gbdeb {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffaef)
	} else {
		switch string(_fgbbb) {
		case "":
			*_gcfd = 0
		case "\u0070\u0061\u0072\u0065\u006e\u0074":
			*_gcfd = 1
		case "\u006c\u0061\u0079\u006f\u0075\u0074":
			*_gcfd = 2
		}
	}
	_ffaef, _faed = d.Token()
	if _faed != nil {
		return _faed
	}
	if _dbffe, _cabef := _ffaef.(_g.EndElement); _cabef && _dbffe.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffaef)
}

type CT_TLBuildParagraph struct {

	// Build Types
	BuildAttr ST_TLParaBuildType

	// Build Level
	BldLvlAttr *uint32

	// Animate Background
	AnimBgAttr *bool

	// Auto Update Animation Background
	AutoUpdateAnimBgAttr *bool

	// Reverse
	RevAttr *bool

	// Auto Advance Time
	AdvAutoAttr *ST_TLTime

	// Template effects
	TmplLst      *CT_TLTemplateList
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

type CT_CustomShow struct {

	// Custom Show Name
	NameAttr string

	// Custom Show ID
	IdAttr uint32

	// List of Presentation Slides
	SldLst *CT_SlideRelationshipList
	ExtLst *CT_ExtensionList
}

func (_ebfba ST_TLAnimateMotionPathEditMode) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cceb := _g.Attr{}
	_cceb.Name = name
	switch _ebfba {
	case ST_TLAnimateMotionPathEditModeUnset:
		_cceb.Value = ""
	case ST_TLAnimateMotionPathEditModeRelative:
		_cceb.Value = "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065"
	case ST_TLAnimateMotionPathEditModeFixed:
		_cceb.Value = "\u0066\u0069\u0078e\u0064"
	}
	return _cceb, nil
}

type ST_TLBehaviorAccumulateType byte

// Validate validates the CT_TLIterateIntervalTime and its children
func (_bbgfd *CT_TLIterateIntervalTime) Validate() error {
	return _bbgfd.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0049n\u0074\u0065\u0072\u0076\u0061\u006c\u0054\u0069\u006d\u0065")
}

func (_eecdg *ST_TLAnimateMotionPathEditMode) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_acggb, _caadbb := d.Token()
	if _caadbb != nil {
		return _caadbb
	}
	if _bedge, _abaef := _acggb.(_g.EndElement); _abaef && _bedge.Name == start.Name {
		*_eecdg = 1
		return nil
	}
	if _abagde, _eegf := _acggb.(_g.CharData); !_eegf {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _acggb)
	} else {
		switch string(_abagde) {
		case "":
			*_eecdg = 0
		case "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065":
			*_eecdg = 1
		case "\u0066\u0069\u0078e\u0064":
			*_eecdg = 2
		}
	}
	_acggb, _caadbb = d.Token()
	if _caadbb != nil {
		return _caadbb
	}
	if _fbebd, _beagg := _acggb.(_g.EndElement); _beagg && _fbebd.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _acggb)
}

func (_aabea *CT_TLSetBehavior) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_aabea.CBhvr = NewCT_TLCommonBehaviorData()
_bdfe:
	for {
		_bddff, _faafc := d.Token()
		if _faafc != nil {
			return _faafc
		}
		switch _abeb := _bddff.(type) {
		case _g.StartElement:
			switch _abeb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _gafbc := d.DecodeElement(_aabea.CBhvr, &_abeb); _gafbc != nil {
					return _gafbc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_aabea.To = NewCT_TLAnimVariant()
				if _effbd := d.DecodeElement(_aabea.To, &_abeb); _effbd != nil {
					return _effbd
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0053\u0065\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025v", _abeb.Name)
				if _fdba := d.Skip(); _fdba != nil {
					return _fdba
				}
			}
		case _g.EndElement:
			break _bdfe
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_TLMediaNodeAudio() *CT_TLMediaNodeAudio {
	_gfdad := &CT_TLMediaNodeAudio{}
	_gfdad.CMediaNode = NewCT_TLCommonMediaNodeData()
	return _gfdad
}

func (_gbbeg ST_PlaceholderSize) Validate() error { return _gbbeg.ValidateWithPath("") }

func NewEG_TopLevelSlide() *EG_TopLevelSlide {
	_eccec := &EG_TopLevelSlide{}
	_eccec.ClrMap = _f.NewCT_ColorMapping()
	return _eccec
}

func (_fedcd ST_PhotoAlbumFrameShape) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fedcd.String(), start)
}

// Validate validates the CT_TLTimeNodeParallel and its children
func (_fgbad *CT_TLTimeNodeParallel) Validate() error {
	return _fgbad.ValidateWithPath("C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0050a\u0072\u0061\u006c\u006c\u0065\u006c")
}

func (_bgg *CT_CommentList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _bgg.Cm != nil {
		_cgd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u006d"}}
		for _, _agc := range _bgg.Cm {
			e.EncodeElement(_agc, _cgd)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_HandoutMasterIdList and its children
func (_decb *CT_HandoutMasterIdList) Validate() error {
	return _decb.ValidateWithPath("\u0043\u0054\u005f\u0048an\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069s\u0074")
}

func NewCT_Empty() *CT_Empty { _fdc := &CT_Empty{}; return _fdc }

func (_gfdg ST_TLOleChartBuildType) Validate() error { return _gfdg.ValidateWithPath("") }

func (_acefg *ST_TLTimeNodeRestartType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_acefg = 0
	case "\u0061\u006c\u0077\u0061\u0079\u0073":
		*_acefg = 1
	case "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065":
		*_acefg = 2
	case "\u006e\u0065\u0076e\u0072":
		*_acefg = 3
	}
	return nil
}

func (_gbdeg ST_TLBehaviorAdditiveType) Validate() error { return _gbdeg.ValidateWithPath("") }

func (_gdbeb *CT_SlideMasterTextStyles) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ddcfg:
	for {
		_gdac, _eabdd := d.Token()
		if _eabdd != nil {
			return _eabdd
		}
		switch _geda := _gdac.(type) {
		case _g.StartElement:
			switch _geda.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_gdbeb.TitleStyle = _f.NewCT_TextListStyle()
				if _cfgf := d.DecodeElement(_gdbeb.TitleStyle, &_geda); _cfgf != nil {
					return _cfgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062o\u0064\u0079\u0053\u0074\u0079\u006ce"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0064\u0079\u0053\u0074\u0079\u006ce"}:
				_gdbeb.BodyStyle = _f.NewCT_TextListStyle()
				if _eagf := d.DecodeElement(_gdbeb.BodyStyle, &_geda); _eagf != nil {
					return _eagf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0074\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0074\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"}:
				_gdbeb.OtherStyle = _f.NewCT_TextListStyle()
				if _gedf := d.DecodeElement(_gdbeb.OtherStyle, &_geda); _gedf != nil {
					return _gedf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdbeb.ExtLst = NewCT_ExtensionList()
				if _cdcad := d.DecodeElement(_gdbeb.ExtLst, &_geda); _cdcad != nil {
					return _cdcad
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065\u0072\u0054\u0065\u0078\u0074\u0053t\u0079\u006c\u0065\u0073\u0020%\u0076", _geda.Name)
				if _dcccf := d.Skip(); _dcccf != nil {
					return _dcccf
				}
			}
		case _g.EndElement:
			break _ddcfg
		case _g.CharData:
		}
	}
	return nil
}

type CT_CustomerData struct{ IdAttr string }

func (_fbcbc ST_TLBehaviorAccumulateType) Validate() error { return _fbcbc.ValidateWithPath("") }

func (_agdbf ST_TLTimeNodeMasterRelation) Validate() error { return _agdbf.ValidateWithPath("") }

// Validate validates the CT_EmbeddedFontDataId and its children
func (_bega *CT_EmbeddedFontDataId) Validate() error {
	return _bega.ValidateWithPath("C\u0054\u005f\u0045\u006dbe\u0064d\u0065\u0064\u0046\u006f\u006et\u0044\u0061\u0074\u0061\u0049\u0064")
}

func (_dcced *CT_TLAnimVariantIntegerVal) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _ce.Sprintf("\u0025\u0076", _dcced.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLSubShapeId and its children, prefixing error messages with path
func (_eeec *CT_TLSubShapeId) ValidateWithPath(path string) error { return nil }

type CT_Connector struct {

	// Non-Visual Properties for a Connection Shape
	NvCxnSpPr *CT_ConnectorNonVisual

	// Shape Properties
	SpPr *_f.CT_ShapeProperties

	// Connector Shape Style
	Style  *_f.CT_ShapeStyle
	ExtLst *CT_ExtensionListModify
}

func (_cceca ST_TransitionSpeed) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_eeace := _g.Attr{}
	_eeace.Name = name
	switch _cceca {
	case ST_TransitionSpeedUnset:
		_eeace.Value = ""
	case ST_TransitionSpeedSlow:
		_eeace.Value = "\u0073\u006c\u006f\u0077"
	case ST_TransitionSpeedMed:
		_eeace.Value = "\u006d\u0065\u0064"
	case ST_TransitionSpeedFast:
		_eeace.Value = "\u0066\u0061\u0073\u0074"
	}
	return _eeace, nil
}

type ST_TLTriggerRuntimeNode byte

func (_befcf ST_TLTimeNodeSyncType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bffba := _g.Attr{}
	_bffba.Name = name
	switch _befcf {
	case ST_TLTimeNodeSyncTypeUnset:
		_bffba.Value = ""
	case ST_TLTimeNodeSyncTypeCanSlip:
		_bffba.Value = "\u0063a\u006e\u0053\u006c\u0069\u0070"
	case ST_TLTimeNodeSyncTypeLocked:
		_bffba.Value = "\u006c\u006f\u0063\u006b\u0065\u0064"
	}
	return _bffba, nil
}

func (_bcedg ST_TLTimeNodePresetClassType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_dffb := _g.Attr{}
	_dffb.Name = name
	switch _bcedg {
	case ST_TLTimeNodePresetClassTypeUnset:
		_dffb.Value = ""
	case ST_TLTimeNodePresetClassTypeEntr:
		_dffb.Value = "\u0065\u006e\u0074\u0072"
	case ST_TLTimeNodePresetClassTypeExit:
		_dffb.Value = "\u0065\u0078\u0069\u0074"
	case ST_TLTimeNodePresetClassTypeEmph:
		_dffb.Value = "\u0065\u006d\u0070\u0068"
	case ST_TLTimeNodePresetClassTypePath:
		_dffb.Value = "\u0070\u0061\u0074\u0068"
	case ST_TLTimeNodePresetClassTypeVerb:
		_dffb.Value = "\u0076\u0065\u0072\u0062"
	case ST_TLTimeNodePresetClassTypeMediacall:
		_dffb.Value = "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl"
	}
	return _dffb, nil
}

// ValidateWithPath validates the CT_TLTemplate and its children, prefixing error messages with path
func (_ecgdbe *CT_TLTemplate) ValidateWithPath(path string) error {
	if _fegga := _ecgdbe.TnLst.ValidateWithPath(path + "\u002f\u0054\u006e\u004c\u0073\u0074"); _fegga != nil {
		return _fegga
	}
	return nil
}

type CT_Rel struct{ IdAttr string }

// ValidateWithPath validates the CT_TLIterateIntervalTime and its children, prefixing error messages with path
func (_fffa *CT_TLIterateIntervalTime) ValidateWithPath(path string) error {
	if _dbaabc := _fffa.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _dbaabc != nil {
		return _dbaabc
	}
	return nil
}

const (
	ST_TLOleChartBuildTypeUnset      ST_TLOleChartBuildType = 0
	ST_TLOleChartBuildTypeAllAtOnce  ST_TLOleChartBuildType = 1
	ST_TLOleChartBuildTypeSeries     ST_TLOleChartBuildType = 2
	ST_TLOleChartBuildTypeCategory   ST_TLOleChartBuildType = 3
	ST_TLOleChartBuildTypeSeriesEl   ST_TLOleChartBuildType = 4
	ST_TLOleChartBuildTypeCategoryEl ST_TLOleChartBuildType = 5
)

func (_ebc *AG_ChildSlide) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ebc.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_ebc.ShowMasterSpAttr))})
	}
	if _ebc.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_ebc.ShowMasterPhAnimAttr))})
	}
	return nil
}

func (_ccaee ST_WebScreenSize) Validate() error { return _ccaee.ValidateWithPath("") }

func NewTagLst() *TagLst { _becbb := &TagLst{}; _becbb.CT_TagList = *NewCT_TagList(); return _becbb }

func NewOleObj() *OleObj { _dead := &OleObj{}; _dead.CT_OleObject = *NewCT_OleObject(); return _dead }

func (_adecg *CT_TLBehaviorAttributeNameList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ffda:
	for {
		_fbbfa, _gafaa := d.Token()
		if _gafaa != nil {
			return _gafaa
		}
		switch _afff := _fbbfa.(type) {
		case _g.StartElement:
			switch _afff.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065"}:
				var _abbb string
				if _dfde := d.DecodeElement(&_abbb, &_afff); _dfde != nil {
					return _dfde
				}
				_adecg.AttrName = append(_adecg.AttrName, _abbb)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006es\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0041\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u004e\u0061\u006d\u0065L\u0069\u0073\u0074\u0020\u0025\u0076", _afff.Name)
				if _defed := d.Skip(); _defed != nil {
					return _defed
				}
			}
		case _g.EndElement:
			break _ffda
		case _g.CharData:
		}
	}
	return nil
}

func (_gbbe *CT_TLAnimVariantIntegerVal) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ffcegf := range start.Attr {
		if _ffcegf.Name.Local == "\u0076\u0061\u006c" {
			_dggbf, _fced := _d.ParseInt(_ffcegf.Value, 10, 32)
			if _fced != nil {
				return _fced
			}
			_gbbe.ValAttr = int32(_dggbf)
			continue
		}
	}
	for {
		_eced, _defee := d.Token()
		if _defee != nil {
			return _ce.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074I\u006e\u0074\u0065\u0067\u0065r\u0056\u0061l\u003a\u0020\u0025\u0073", _defee)
		}
		if _ffbdb, _eefg := _eced.(_g.EndElement); _eefg && _ffbdb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_acefa *CT_TLMediaNodeVideo) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_acefa.CMediaNode = NewCT_TLCommonMediaNodeData()
	for _, _fgde := range start.Attr {
		if _fgde.Name.Local == "\u0066\u0075\u006c\u006c\u0053\u0063\u0072\u006e" {
			_egcf, _gfgc := _d.ParseBool(_fgde.Value)
			if _gfgc != nil {
				return _gfgc
			}
			_acefa.FullScrnAttr = &_egcf
			continue
		}
	}
_bfdag:
	for {
		_aadg, _edbbc := d.Token()
		if _edbbc != nil {
			return _edbbc
		}
		switch _bdcbg := _aadg.(type) {
		case _g.StartElement:
			switch _bdcbg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}:
				if _gaegd := d.DecodeElement(_acefa.CMediaNode, &_bdcbg); _gaegd != nil {
					return _gaegd
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u004d\u0065\u0064\u0069\u0061No\u0064\u0065\u0056\u0069\u0064\u0065\u006f\u0020\u0025\u0076", _bdcbg.Name)
				if _aege := d.Skip(); _aege != nil {
					return _aege
				}
			}
		case _g.EndElement:
			break _bfdag
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_HandoutMaster and its children, prefixing error messages with path
func (_fdfc *CT_HandoutMaster) ValidateWithPath(path string) error {
	if _cega := _fdfc.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _cega != nil {
		return _cega
	}
	if _bccb := _fdfc.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _bccb != nil {
		return _bccb
	}
	if _fdfc.Hf != nil {
		if _aacbf := _fdfc.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _aacbf != nil {
			return _aacbf
		}
	}
	if _fdfc.ExtLst != nil {
		if _gdgba := _fdfc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdgba != nil {
			return _gdgba
		}
	}
	return nil
}

// Validate validates the CT_CommentAuthor and its children
func (_aacf *CT_CommentAuthor) Validate() error {
	return _aacf.ValidateWithPath("\u0043\u0054_\u0043\u006f\u006dm\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072")
}

func NewCT_SlideTiming() *CT_SlideTiming { _gfead := &CT_SlideTiming{}; return _gfead }

type CT_ShowInfoKiosk struct {

	// Restart Show
	RestartAttr *uint32
}

func (_fede ST_TLTimeNodeMasterRelation) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fede.String(), start)
}

// Validate validates the CT_TLTemplateList and its children
func (_eebg *CT_TLTemplateList) Validate() error {
	return _eebg.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u004c\u0069\u0073\u0074")
}

// Validate validates the CT_SlideMasterIdListEntry and its children
func (_efdc *CT_SlideMasterIdListEntry) Validate() error {
	return _efdc.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069d\u0065\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y")
}

func (_dcebb *ST_TLAnimateBehaviorValueType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_dcebb = 0
	case "\u0073\u0074\u0072":
		*_dcebb = 1
	case "\u006e\u0075\u006d":
		*_dcebb = 2
	case "\u0063\u006c\u0072":
		*_dcebb = 3
	}
	return nil
}

type CT_TLTimeTargetElement struct {

	// Slide Target
	SldTgt *CT_Empty

	// Sound Target
	SndTgt *_f.CT_EmbeddedWAVAudioFile

	// Shape Target
	SpTgt *CT_TLShapeTargetElement

	// Ink Target
	InkTgt *CT_TLSubShapeId
}

func (_bbdcc *CT_SlideMaster) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bbdcc.CSld = NewCT_CommonSlideData()
	_bbdcc.ClrMap = _f.NewCT_ColorMapping()
	for _, _gagd := range start.Attr {
		if _gagd.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_cbfc, _bcba := _d.ParseBool(_gagd.Value)
			if _bcba != nil {
				return _bcba
			}
			_bbdcc.PreserveAttr = &_cbfc
			continue
		}
	}
_cdddc:
	for {
		_egcg, _gbdd := d.Token()
		if _gbdd != nil {
			return _gbdd
		}
		switch _bddfg := _egcg.(type) {
		case _g.StartElement:
			switch _bddfg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _eaee := d.DecodeElement(_bbdcc.CSld, &_bddfg); _eaee != nil {
					return _eaee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _ecgb := d.DecodeElement(_bbdcc.ClrMap, &_bddfg); _ecgb != nil {
					return _ecgb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}:
				_bbdcc.SldLayoutIdLst = NewCT_SlideLayoutIdList()
				if _dbga := d.DecodeElement(_bbdcc.SldLayoutIdLst, &_bddfg); _dbga != nil {
					return _dbga
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_bbdcc.Transition = NewCT_SlideTransition()
				if _aagg := d.DecodeElement(_bbdcc.Transition, &_bddfg); _aagg != nil {
					return _aagg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_bbdcc.Timing = NewCT_SlideTiming()
				if _eccef := d.DecodeElement(_bbdcc.Timing, &_bddfg); _eccef != nil {
					return _eccef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_bbdcc.Hf = NewCT_HeaderFooter()
				if _ebba := d.DecodeElement(_bbdcc.Hf, &_bddfg); _ebba != nil {
					return _ebba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_bbdcc.TxStyles = NewCT_SlideMasterTextStyles()
				if _cabaa := d.DecodeElement(_bbdcc.TxStyles, &_bddfg); _cabaa != nil {
					return _cabaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bbdcc.ExtLst = NewCT_ExtensionListModify()
				if _fgfcb := d.DecodeElement(_bbdcc.ExtLst, &_bddfg); _fgfcb != nil {
					return _fgfcb
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061s\u0074e\u0072\u0020\u0025\u0076", _bddfg.Name)
				if _faaeg := d.Skip(); _faaeg != nil {
					return _faaeg
				}
			}
		case _g.EndElement:
			break _cdddc
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_Comment() *CT_Comment { _aab := &CT_Comment{}; _aab.Pos = _f.NewCT_Point2D(); return _aab }

// ValidateWithPath validates the CT_TLTimeCondition and its children, prefixing error messages with path
func (_gfefa *CT_TLTimeCondition) ValidateWithPath(path string) error {
	if _eefgb := _gfefa.EvtAttr.ValidateWithPath(path + "\u002f\u0045\u0076\u0074\u0041\u0074\u0074\u0072"); _eefgb != nil {
		return _eefgb
	}
	if _gfefa.DelayAttr != nil {
		if _geaf := _gfefa.DelayAttr.ValidateWithPath(path + "\u002f\u0044\u0065\u006c\u0061\u0079\u0041\u0074\u0074\u0072"); _geaf != nil {
			return _geaf
		}
	}
	if _gfefa.TgtEl != nil {
		if _fgac := _gfefa.TgtEl.ValidateWithPath(path + "\u002f\u0054\u0067\u0074\u0045\u006c"); _fgac != nil {
			return _fgac
		}
	}
	if _gfefa.Tn != nil {
		if _dfbfb := _gfefa.Tn.ValidateWithPath(path + "\u002f\u0054\u006e"); _dfbfb != nil {
			return _dfbfb
		}
	}
	if _gfefa.Rtn != nil {
		if _dbbb := _gfefa.Rtn.ValidateWithPath(path + "\u002f\u0052\u0074\u006e"); _dbbb != nil {
			return _dbbb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TagList and its children, prefixing error messages with path
func (_fbga *CT_TagList) ValidateWithPath(path string) error {
	for _dfcee, _cabeag := range _fbga.Tag {
		if _cgaff := _cabeag.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0067\u005b\u0025\u0064\u005d", path, _dfcee)); _cgaff != nil {
			return _cgaff
		}
	}
	return nil
}

func NewCT_TLAnimateBehavior() *CT_TLAnimateBehavior {
	_aggeg := &CT_TLAnimateBehavior{}
	_aggeg.CBhvr = NewCT_TLCommonBehaviorData()
	return _aggeg
}

// Validate validates the CT_OleObjectChoice and its children
func (_daded *CT_OleObjectChoice) Validate() error {
	return _daded.ValidateWithPath("\u0043T\u005fO\u006c\u0065\u004f\u0062\u006ae\u0063\u0074C\u0068\u006f\u0069\u0063\u0065")
}

type CT_HeaderFooter struct {

	// Slide Number Placeholder
	SldNumAttr *bool

	// Header Placeholder
	HdrAttr *bool

	// Footer Placeholder
	FtrAttr *bool

	// Date/Time Placeholder
	DtAttr *bool
	ExtLst *CT_ExtensionListModify
}

type ST_PlaceholderSize byte

func (_eab *CT_ConnectorNonVisual) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_dad := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_eab.CNvPr, _dad)
	_cfgc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063N\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_eab.CNvCxnSpPr, _cfgc)
	_adb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_eab.NvPr, _adb)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_GraphicalObjectFrame() *CT_GraphicalObjectFrame {
	_gbe := &CT_GraphicalObjectFrame{}
	_gbe.NvGraphicFramePr = NewCT_GraphicalObjectFrameNonVisual()
	_gbe.Xfrm = _f.NewCT_Transform2D()
	_gbe.Graphic = _f.NewGraphic()
	return _gbe
}

func NewCT_SlideSyncProperties() *CT_SlideSyncProperties {
	_cfcdg := &CT_SlideSyncProperties{}
	return _cfcdg
}

// ValidateWithPath validates the CT_SlideTransitionChoice and its children, prefixing error messages with path
func (_acab *CT_SlideTransitionChoice) ValidateWithPath(path string) error {
	if _acab.Blinds != nil {
		if _dbed := _acab.Blinds.ValidateWithPath(path + "\u002fB\u006c\u0069\u006e\u0064\u0073"); _dbed != nil {
			return _dbed
		}
	}
	if _acab.Checker != nil {
		if _bfddd := _acab.Checker.ValidateWithPath(path + "\u002f\u0043\u0068\u0065\u0063\u006b\u0065\u0072"); _bfddd != nil {
			return _bfddd
		}
	}
	if _acab.Circle != nil {
		if _ccefc := _acab.Circle.ValidateWithPath(path + "\u002fC\u0069\u0072\u0063\u006c\u0065"); _ccefc != nil {
			return _ccefc
		}
	}
	if _acab.Dissolve != nil {
		if _ddabbe := _acab.Dissolve.ValidateWithPath(path + "\u002fD\u0069\u0073\u0073\u006f\u006c\u0076e"); _ddabbe != nil {
			return _ddabbe
		}
	}
	if _acab.Comb != nil {
		if _afggb := _acab.Comb.ValidateWithPath(path + "\u002f\u0043\u006fm\u0062"); _afggb != nil {
			return _afggb
		}
	}
	if _acab.Cover != nil {
		if _ffcec := _acab.Cover.ValidateWithPath(path + "\u002f\u0043\u006f\u0076\u0065\u0072"); _ffcec != nil {
			return _ffcec
		}
	}
	if _acab.Cut != nil {
		if _gbebd := _acab.Cut.ValidateWithPath(path + "\u002f\u0043\u0075\u0074"); _gbebd != nil {
			return _gbebd
		}
	}
	if _acab.Diamond != nil {
		if _cebff := _acab.Diamond.ValidateWithPath(path + "\u002f\u0044\u0069\u0061\u006d\u006f\u006e\u0064"); _cebff != nil {
			return _cebff
		}
	}
	if _acab.Fade != nil {
		if _gafgcc := _acab.Fade.ValidateWithPath(path + "\u002f\u0046\u0061d\u0065"); _gafgcc != nil {
			return _gafgcc
		}
	}
	if _acab.Newsflash != nil {
		if _bcdgc := _acab.Newsflash.ValidateWithPath(path + "\u002f\u004e\u0065\u0077\u0073\u0066\u006c\u0061\u0073\u0068"); _bcdgc != nil {
			return _bcdgc
		}
	}
	if _acab.Plus != nil {
		if _badf := _acab.Plus.ValidateWithPath(path + "\u002f\u0050\u006cu\u0073"); _badf != nil {
			return _badf
		}
	}
	if _acab.Pull != nil {
		if _ceab := _acab.Pull.ValidateWithPath(path + "\u002f\u0050\u0075l\u006c"); _ceab != nil {
			return _ceab
		}
	}
	if _acab.Push != nil {
		if _bced := _acab.Push.ValidateWithPath(path + "\u002f\u0050\u0075s\u0068"); _bced != nil {
			return _bced
		}
	}
	if _acab.Random != nil {
		if _gecga := _acab.Random.ValidateWithPath(path + "\u002fR\u0061\u006e\u0064\u006f\u006d"); _gecga != nil {
			return _gecga
		}
	}
	if _acab.RandomBar != nil {
		if _edcag := _acab.RandomBar.ValidateWithPath(path + "\u002f\u0052\u0061\u006e\u0064\u006f\u006d\u0042\u0061\u0072"); _edcag != nil {
			return _edcag
		}
	}
	if _acab.Split != nil {
		if _fgcc := _acab.Split.ValidateWithPath(path + "\u002f\u0053\u0070\u006c\u0069\u0074"); _fgcc != nil {
			return _fgcc
		}
	}
	if _acab.Strips != nil {
		if _ggeeg := _acab.Strips.ValidateWithPath(path + "\u002fS\u0074\u0072\u0069\u0070\u0073"); _ggeeg != nil {
			return _ggeeg
		}
	}
	if _acab.Wedge != nil {
		if _dbaa := _acab.Wedge.ValidateWithPath(path + "\u002f\u0057\u0065\u0064\u0067\u0065"); _dbaa != nil {
			return _dbaa
		}
	}
	if _acab.Wheel != nil {
		if _dbgbb := _acab.Wheel.ValidateWithPath(path + "\u002f\u0057\u0068\u0065\u0065\u006c"); _dbgbb != nil {
			return _dbgbb
		}
	}
	if _acab.Wipe != nil {
		if _bbacd := _acab.Wipe.ValidateWithPath(path + "\u002f\u0057\u0069p\u0065"); _bbacd != nil {
			return _bbacd
		}
	}
	if _acab.Zoom != nil {
		if _fcfa := _acab.Zoom.ValidateWithPath(path + "\u002f\u005a\u006fo\u006d"); _fcfa != nil {
			return _fcfa
		}
	}
	return nil
}

func (_fafc *CT_CornerDirectionTransition) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _fafc.DirAttr != ST_TransitionCornerDirectionTypeUnset {
		_bea, _bceb := _fafc.DirAttr.MarshalXMLAttr(_g.Name{Local: "\u0064\u0069\u0072"})
		if _bceb != nil {
			return _bceb
		}
		start.Attr = append(start.Attr, _bea)
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_eadbc *HandoutMaster) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_eadbc.CT_HandoutMaster = *NewCT_HandoutMaster()
_dgaa:
	for {
		_dbae, _fcfdga := d.Token()
		if _fcfdga != nil {
			return _fcfdga
		}
		switch _gfgcc := _dbae.(type) {
		case _g.StartElement:
			switch _gfgcc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _debcc := d.DecodeElement(_eadbc.CSld, &_gfgcc); _debcc != nil {
					return _debcc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _bgbc := d.DecodeElement(_eadbc.ClrMap, &_gfgcc); _bgbc != nil {
					return _bgbc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_eadbc.Hf = NewCT_HeaderFooter()
				if _gedd := d.DecodeElement(_eadbc.Hf, &_gfgcc); _gedd != nil {
					return _gedd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eadbc.ExtLst = NewCT_ExtensionListModify()
				if _ddcef := d.DecodeElement(_eadbc.ExtLst, &_gfgcc); _ddcef != nil {
					return _ddcef
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072 \u0025\u0076", _gfgcc.Name)
				if _fcbee := d.Skip(); _fcbee != nil {
					return _fcbee
				}
			}
		case _g.EndElement:
			break _dgaa
		case _g.CharData:
		}
	}
	return nil
}

func (_cfdab ST_PrintWhat) ValidateWithPath(path string) error {
	switch _cfdab {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cfdab))
	}
	return nil
}

// ValidateWithPath validates the EG_SlideListChoice and its children, prefixing error messages with path
func (_caeef *EG_SlideListChoice) ValidateWithPath(path string) error {
	if _caeef.SldAll != nil {
		if _gfgf := _caeef.SldAll.ValidateWithPath(path + "\u002fS\u006c\u0064\u0041\u006c\u006c"); _gfgf != nil {
			return _gfgf
		}
	}
	if _caeef.SldRg != nil {
		if _dfca := _caeef.SldRg.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0052\u0067"); _dfca != nil {
			return _dfca
		}
	}
	if _caeef.CustShow != nil {
		if _bggea := _caeef.CustShow.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0053\u0068\u006fw"); _bggea != nil {
			return _bggea
		}
	}
	return nil
}

type ST_IterateType byte

func (_febbb *CT_TransitionSoundAction) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dccgg:
	for {
		_bddeda, _fdgdf := d.Token()
		if _fdgdf != nil {
			return _fdgdf
		}
		switch _eddbe := _bddeda.(type) {
		case _g.StartElement:
			switch _eddbe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0053n\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0053n\u0064"}:
				_febbb.StSnd = NewCT_TransitionStartSoundAction()
				if _edbbce := d.DecodeElement(_febbb.StSnd, &_eddbe); _edbbce != nil {
					return _edbbce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}:
				_febbb.EndSnd = NewCT_Empty()
				if _efggf := d.DecodeElement(_febbb.EndSnd, &_eddbe); _efggf != nil {
					return _efggf
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u006f\u0075\u006e\u0064\u0041c\u0074\u0069\u006f\u006e\u0020%\u0076", _eddbe.Name)
				if _aefg := d.Skip(); _aefg != nil {
					return _aefg
				}
			}
		case _g.EndElement:
			break _dccgg
		case _g.CharData:
		}
	}
	return nil
}

// ST_TLTime is a union type
type ST_TLTime struct {
	Uint32              *uint32
	ST_TLTimeIndefinite ST_TLTimeIndefinite
}

// ValidateWithPath validates the CT_SlideLayout and its children, prefixing error messages with path
func (_bgcd *CT_SlideLayout) ValidateWithPath(path string) error {
	if _cfgea := _bgcd.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cfgea != nil {
		return _cfgea
	}
	if _cfgcc := _bgcd.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _cfgcc != nil {
		return _cfgcc
	}
	if _bgcd.ClrMapOvr != nil {
		if _gfeg := _bgcd.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _gfeg != nil {
			return _gfeg
		}
	}
	if _bgcd.Transition != nil {
		if _bfad := _bgcd.Transition.ValidateWithPath(path + "/\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"); _bfad != nil {
			return _bfad
		}
	}
	if _bgcd.Timing != nil {
		if _cgfbb := _bgcd.Timing.ValidateWithPath(path + "\u002fT\u0069\u006d\u0069\u006e\u0067"); _cgfbb != nil {
			return _cgfbb
		}
	}
	if _bgcd.Hf != nil {
		if _afegg := _bgcd.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _afegg != nil {
			return _afegg
		}
	}
	if _bgcd.ExtLst != nil {
		if _babe := _bgcd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _babe != nil {
			return _babe
		}
	}
	return nil
}

func (_ddda *CT_Empty) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cdbb *CT_NotesTextViewProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cdbb.CViewPr = NewCT_CommonViewProperties()
_fgbdf:
	for {
		_bdde, _afbe := d.Token()
		if _afbe != nil {
			return _afbe
		}
		switch _aacaa := _bdde.(type) {
		case _g.StartElement:
			switch _aacaa.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _feba := d.DecodeElement(_cdbb.CViewPr, &_aacaa); _feba != nil {
					return _feba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdbb.ExtLst = NewCT_ExtensionList()
				if _ecdf := d.DecodeElement(_cdbb.ExtLst, &_aacaa); _ecdf != nil {
					return _ecdf
				}
			default:
				_e.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u004e\u006ft\u0065\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _aacaa.Name)
				if _gfabd := d.Skip(); _gfabd != nil {
					return _gfabd
				}
			}
		case _g.EndElement:
			break _fgbdf
		case _g.CharData:
		}
	}
	return nil
}

func (_cccfc ST_TransitionSpeed) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_cccfc.String(), start)
}

func ParseUnionST_Percentage(s string) (_f.ST_Percentage, error) {
	return _f.ParseUnionST_Percentage(s)
}

func (_fefea *CT_CustomerData) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _accg := range start.Attr {
		if _accg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _accg.Name.Local == "\u0069\u0064" || _accg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _accg.Name.Local == "\u0069\u0064" {
			_gecd, _fcgg := _accg.Value, error(nil)
			if _fcgg != nil {
				return _fcgg
			}
			_fefea.IdAttr = _gecd
			continue
		}
	}
	for {
		_abde, _agcf := d.Token()
		if _agcf != nil {
			return _ce.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006de\u0072\u0044\u0061t\u0061:\u0020\u0025\u0073", _agcf)
		}
		if _ggcg, _cgeg := _abde.(_g.EndElement); _cgeg && _ggcg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GuideList and its children, prefixing error messages with path
func (_cgcg *CT_GuideList) ValidateWithPath(path string) error {
	for _cadg, _dcg := range _cgcg.Guide {
		if _cedbc := _dcg.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002fG\u0075\u0069\u0064\u0065\u005b\u0025\u0064\u005d", path, _cadg)); _cedbc != nil {
			return _cedbc
		}
	}
	return nil
}

type AG_TLBuild struct {
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

func NewCT_SlideTransitionChoice() *CT_SlideTransitionChoice {
	_fgdga := &CT_SlideTransitionChoice{}
	return _fgdga
}

// ValidateWithPath validates the CT_TLIterateIntervalPercentage and its children, prefixing error messages with path
func (_fafcd *CT_TLIterateIntervalPercentage) ValidateWithPath(path string) error {
	if _afbcg := _fafcd.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _afbcg != nil {
		return _afbcg
	}
	return nil
}

func (_dadf ST_SplitterBarState) Validate() error { return _dadf.ValidateWithPath("") }

func (_agcdag *ST_TLTimeIndefinite) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_agcdag = 0
	case "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065":
		*_agcdag = 1
	}
	return nil
}

func ParseUnionST_FixedPercentage(s string) (_f.ST_FixedPercentage, error) {
	return _f.ParseUnionST_FixedPercentage(s)
}

func (_gbfb ST_IterateType) Validate() error { return _gbfb.ValidateWithPath("") }

// ValidateWithPath validates the CT_TLAnimVariant and its children, prefixing error messages with path
func (_fcbc *CT_TLAnimVariant) ValidateWithPath(path string) error {
	if _fcbc.BoolVal != nil {
		if _bfdcb := _fcbc.BoolVal.ValidateWithPath(path + "\u002f\u0042\u006f\u006f\u006c\u0056\u0061\u006c"); _bfdcb != nil {
			return _bfdcb
		}
	}
	if _fcbc.IntVal != nil {
		if _aeddf := _fcbc.IntVal.ValidateWithPath(path + "\u002fI\u006e\u0074\u0056\u0061\u006c"); _aeddf != nil {
			return _aeddf
		}
	}
	if _fcbc.FltVal != nil {
		if _bfff := _fcbc.FltVal.ValidateWithPath(path + "\u002fF\u006c\u0074\u0056\u0061\u006c"); _bfff != nil {
			return _bfff
		}
	}
	if _fcbc.StrVal != nil {
		if _bdcef := _fcbc.StrVal.ValidateWithPath(path + "\u002fS\u0074\u0072\u0056\u0061\u006c"); _bdcef != nil {
			return _bdcef
		}
	}
	if _fcbc.ClrVal != nil {
		if _bccbgf := _fcbc.ClrVal.ValidateWithPath(path + "\u002fC\u006c\u0072\u0056\u0061\u006c"); _bccbgf != nil {
			return _bccbgf
		}
	}
	return nil
}

func (_cdddcc *ST_PlaceholderSize) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cdddcc = 0
	case "\u0066\u0075\u006c\u006c":
		*_cdddcc = 1
	case "\u0068\u0061\u006c\u0066":
		*_cdddcc = 2
	case "\u0071u\u0061\u0072\u0074\u0065\u0072":
		*_cdddcc = 3
	}
	return nil
}

func (_cegbea *ST_WebScreenSize) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cegbea = 0
	case "\u00354\u0034\u0078\u0033\u0037\u0036":
		*_cegbea = 1
	case "\u00364\u0030\u0078\u0034\u0038\u0030":
		*_cegbea = 2
	case "\u00372\u0030\u0078\u0035\u0031\u0032":
		*_cegbea = 3
	case "\u00380\u0030\u0078\u0036\u0030\u0030":
		*_cegbea = 4
	case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
		*_cegbea = 5
	case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
		*_cegbea = 6
	case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
		*_cegbea = 7
	case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
		*_cegbea = 8
	case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
		*_cegbea = 9
	case "\u00318\u0030\u0030\u0078\u0031\u0034\u00300":
		*_cegbea = 10
	case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
		*_cegbea = 11
	}
	return nil
}

func (_befag ST_TLAnimateBehaviorCalcMode) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_dcgc := _g.Attr{}
	_dcgc.Name = name
	switch _befag {
	case ST_TLAnimateBehaviorCalcModeUnset:
		_dcgc.Value = ""
	case ST_TLAnimateBehaviorCalcModeDiscrete:
		_dcgc.Value = "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065"
	case ST_TLAnimateBehaviorCalcModeLin:
		_dcgc.Value = "\u006c\u0069\u006e"
	case ST_TLAnimateBehaviorCalcModeFmla:
		_dcgc.Value = "\u0066\u006d\u006c\u0061"
	}
	return _dcgc, nil
}

type CT_OutlineViewSlideList struct {

	// Presentation Slide
	Sld []*CT_OutlineViewSlideEntry
}

func (_acbgc ST_TLChartSubelementType) String() string {
	switch _acbgc {
	case 0:
		return ""
	case 1:
		return "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	case 2:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 3:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 4:
		return "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case 5:
		return "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	}
	return ""
}

func (_gcgd *CT_SlideViewProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_bcgc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063S\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}}
	e.EncodeElement(_gcgd.CSldViewPr, _bcgc)
	if _gcgd.ExtLst != nil {
		_fdgc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gcgd.ExtLst, _fdgc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_gdec *CT_HandoutMasterIdList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_gega:
	for {
		_abef, _fbggd := d.Token()
		if _fbggd != nil {
			return _fbggd
		}
		switch _bggf := _abef.(type) {
		case _g.StartElement:
			switch _bggf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}:
				_gdec.HandoutMasterId = NewCT_HandoutMasterIdListEntry()
				if _ebbfc := d.DecodeElement(_gdec.HandoutMasterId, &_bggf); _ebbfc != nil {
					return _ebbfc
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _bggf.Name)
				if _baba := d.Skip(); _baba != nil {
					return _baba
				}
			}
		case _g.EndElement:
			break _gega
		case _g.CharData:
		}
	}
	return nil
}

type ST_ViewType byte

func (_fdbbc *ST_TLBehaviorAccumulateType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cecfd, _eeafc := d.Token()
	if _eeafc != nil {
		return _eeafc
	}
	if _eecda, _eecfg := _cecfd.(_g.EndElement); _eecfg && _eecda.Name == start.Name {
		*_fdbbc = 1
		return nil
	}
	if _efdfea, _fgcfd := _cecfd.(_g.CharData); !_fgcfd {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cecfd)
	} else {
		switch string(_efdfea) {
		case "":
			*_fdbbc = 0
		case "\u006e\u006f\u006e\u0065":
			*_fdbbc = 1
		case "\u0061\u006c\u0077\u0061\u0079\u0073":
			*_fdbbc = 2
		}
	}
	_cecfd, _eeafc = d.Token()
	if _eeafc != nil {
		return _eeafc
	}
	if _acfg, _dffbe := _cecfd.(_g.EndElement); _dffbe && _acfg.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cecfd)
}

func (_adddb *CT_ViewProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _fagge := range start.Attr {
		if _fagge.Name.Local == "\u006c\u0061\u0073\u0074\u0056\u0069\u0065\u0077" {
			_adddb.LastViewAttr.UnmarshalXMLAttr(_fagge)
			continue
		}
		if _fagge.Name.Local == "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_efdbc, _cedgb := _d.ParseBool(_fagge.Value)
			if _cedgb != nil {
				return _cedgb
			}
			_adddb.ShowCommentsAttr = &_efdbc
			continue
		}
	}
_aeggd:
	for {
		_abce, _aceef := d.Token()
		if _aceef != nil {
			return _aceef
		}
		switch _geace := _abce.(type) {
		case _g.StartElement:
			switch _geace.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_adddb.NormalViewPr = NewCT_NormalViewProperties()
				if _aaced := d.DecodeElement(_adddb.NormalViewPr, &_geace); _aaced != nil {
					return _aaced
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_adddb.SlideViewPr = NewCT_SlideViewProperties()
				if _gbage := d.DecodeElement(_adddb.SlideViewPr, &_geace); _gbage != nil {
					return _gbage
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_adddb.OutlineViewPr = NewCT_OutlineViewProperties()
				if _ffcbf := d.DecodeElement(_adddb.OutlineViewPr, &_geace); _ffcbf != nil {
					return _ffcbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_adddb.NotesTextViewPr = NewCT_NotesTextViewProperties()
				if _acccc := d.DecodeElement(_adddb.NotesTextViewPr, &_geace); _acccc != nil {
					return _acccc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_adddb.SorterViewPr = NewCT_SlideSorterViewProperties()
				if _gccc := d.DecodeElement(_adddb.SorterViewPr, &_geace); _gccc != nil {
					return _gccc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_adddb.NotesViewPr = NewCT_NotesViewProperties()
				if _edgdc := d.DecodeElement(_adddb.NotesViewPr, &_geace); _edgdc != nil {
					return _edgdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}:
				_adddb.GridSpacing = _f.NewCT_PositiveSize2D()
				if _ebcfa := d.DecodeElement(_adddb.GridSpacing, &_geace); _ebcfa != nil {
					return _ebcfa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adddb.ExtLst = NewCT_ExtensionList()
				if _agged := d.DecodeElement(_adddb.ExtLst, &_geace); _agged != nil {
					return _agged
				}
			default:
				_e.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _geace.Name)
				if _eabgf := d.Skip(); _eabgf != nil {
					return _eabgf
				}
			}
		case _g.EndElement:
			break _aeggd
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_Background() *CT_Background { _efa := &CT_Background{}; return _efa }

type ST_TransitionCornerDirectionType byte

func (_efcga *ST_TLTimeNodeFillType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_efcga = 0
	case "\u0072\u0065\u006d\u006f\u0076\u0065":
		*_efcga = 1
	case "\u0066\u0072\u0065\u0065\u007a\u0065":
		*_efcga = 2
	case "\u0068\u006f\u006c\u0064":
		*_efcga = 3
	case "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e":
		*_efcga = 4
	}
	return nil
}

func (_ggff ST_TLAnimateColorSpace) String() string {
	switch _ggff {
	case 0:
		return ""
	case 1:
		return "\u0072\u0067\u0062"
	case 2:
		return "\u0068\u0073\u006c"
	}
	return ""
}

func (_fdaaa ST_TransitionInOutDirectionType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bcbf := _g.Attr{}
	_bcbf.Name = name
	switch _fdaaa {
	case ST_TransitionInOutDirectionTypeUnset:
		_bcbf.Value = ""
	case ST_TransitionInOutDirectionTypeOut:
		_bcbf.Value = "\u006f\u0075\u0074"
	case ST_TransitionInOutDirectionTypeIn:
		_bcbf.Value = "\u0069\u006e"
	}
	return _bcbf, nil
}

// Validate validates the CT_SideDirectionTransition and its children
func (_bbad *CT_SideDirectionTransition) Validate() error {
	return _bbad.ValidateWithPath("\u0043\u0054\u005f\u0053\u0069\u0064\u0065\u0044\u0069\u0072\u0065c\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e")
}

func (_dfcccf *EG_ShowType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_fecegb:
	for {
		_cbcae, _aefc := d.Token()
		if _aefc != nil {
			return _aefc
		}
		switch _cgcdd := _cbcae.(type) {
		case _g.StartElement:
			switch _cgcdd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}:
				_dfcccf.Present = NewCT_Empty()
				if _ecbd := d.DecodeElement(_dfcccf.Present, &_cgcdd); _ecbd != nil {
					return _ecbd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}:
				_dfcccf.Browse = NewCT_ShowInfoBrowse()
				if _cefce := d.DecodeElement(_dfcccf.Browse, &_cgcdd); _cefce != nil {
					return _cefce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}:
				_dfcccf.Kiosk = NewCT_ShowInfoKiosk()
				if _efeeg := d.DecodeElement(_dfcccf.Kiosk, &_cgcdd); _efeeg != nil {
					return _efeeg
				}
			default:
				_e.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065\u0020\u0025\u0076", _cgcdd.Name)
				if _bbgff := d.Skip(); _bbgff != nil {
					return _bbgff
				}
			}
		case _g.EndElement:
			break _fecegb
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideMasterIdListEntry and its children, prefixing error messages with path
func (_befbb *CT_SlideMasterIdListEntry) ValidateWithPath(path string) error {
	if _befbb.IdAttr != nil {
		if *_befbb.IdAttr < 2147483648 {
			return _ce.Errorf("\u0025\u0073\u002f\u006d\u002e\u0049\u0064A\u0074\u0074\u0072 \u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003e\u003d\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u0036\u0034\u0038\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_befbb.IdAttr)
		}
	}
	if _befbb.ExtLst != nil {
		if _abgbd := _befbb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abgbd != nil {
			return _abgbd
		}
	}
	return nil
}

// Validate validates the CT_SlideLayout and its children
func (_aaffa *CT_SlideLayout) Validate() error {
	return _aaffa.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004ca\u0079\u006f\u0075\u0074")
}

type ST_TLBehaviorOverrideType byte

// Validate validates the OleObj and its children
func (_fadad *OleObj) Validate() error {
	return _fadad.ValidateWithPath("\u004f\u006c\u0065\u004f\u0062\u006a")
}

type CT_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

// ValidateWithPath validates the CT_TLTimeConditionList and its children, prefixing error messages with path
func (_agdbc *CT_TLTimeConditionList) ValidateWithPath(path string) error {
	for _dfeeg, _cbcec := range _agdbc.Cond {
		if _gdagc := _cbcec.ValidateWithPath(_ce.Sprintf("%\u0073\u002f\u0043\u006f\u006e\u0064\u005b\u0025\u0064\u005d", path, _dfeeg)); _gdagc != nil {
			return _gdagc
		}
	}
	return nil
}

func NewCT_GroupShape() *CT_GroupShape {
	_ffea := &CT_GroupShape{}
	_ffea.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_ffea.GrpSpPr = _f.NewCT_GroupShapeProperties()
	return _ffea
}

type ST_TLTimeNodeMasterRelation byte

func NewCT_OutlineViewProperties() *CT_OutlineViewProperties {
	_agfed := &CT_OutlineViewProperties{}
	_agfed.CViewPr = NewCT_CommonViewProperties()
	return _agfed
}

func (_ggbc *CT_SmartTags) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _ggbc.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func _cggec(_ccfd bool) uint8 {
	if _ccfd {
		return 1
	}
	return 0
}

func (_beeae *CT_TLBuildDiagram) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _beeae.BldAttr != ST_TLDiagramBuildTypeUnset {
		_aaafa, _eadcd := _beeae.BldAttr.MarshalXMLAttr(_g.Name{Local: "\u0062\u006c\u0064"})
		if _eadcd != nil {
			return _eadcd
		}
		start.Attr = append(start.Attr, _aaafa)
	}
	if _beeae.SpidAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_beeae.SpidAttr)})
	}
	if _beeae.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_beeae.GrpIdAttr)})
	}
	if _beeae.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_beeae.UiExpandAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bdddgf *ST_SlideSizeType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_caefcg, _cbafa := d.Token()
	if _cbafa != nil {
		return _cbafa
	}
	if _gbgce, _cefca := _caefcg.(_g.EndElement); _cefca && _gbgce.Name == start.Name {
		*_bdddgf = 1
		return nil
	}
	if _fdbcb, _beabb := _caefcg.(_g.CharData); !_beabb {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _caefcg)
	} else {
		switch string(_fdbcb) {
		case "":
			*_bdddgf = 0
		case "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783":
			*_bdddgf = 1
		case "\u006c\u0065\u0074\u0074\u0065\u0072":
			*_bdddgf = 2
		case "\u0041\u0034":
			*_bdddgf = 3
		case "\u0033\u0035\u006d\u006d":
			*_bdddgf = 4
		case "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064":
			*_bdddgf = 5
		case "\u0062\u0061\u006e\u006e\u0065\u0072":
			*_bdddgf = 6
		case "\u0063\u0075\u0073\u0074\u006f\u006d":
			*_bdddgf = 7
		case "\u006c\u0065\u0064\u0067\u0065\u0072":
			*_bdddgf = 8
		case "\u0041\u0033":
			*_bdddgf = 9
		case "\u0042\u0034\u0049S\u004f":
			*_bdddgf = 10
		case "\u0042\u0035\u0049S\u004f":
			*_bdddgf = 11
		case "\u0042\u0034\u004aI\u0053":
			*_bdddgf = 12
		case "\u0042\u0035\u004aI\u0053":
			*_bdddgf = 13
		case "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064":
			*_bdddgf = 14
		case "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039":
			*_bdddgf = 15
		case "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030":
			*_bdddgf = 16
		}
	}
	_caefcg, _cbafa = d.Token()
	if _cbafa != nil {
		return _cbafa
	}
	if _afeed, _eddag := _caefcg.(_g.EndElement); _eddag && _afeed.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _caefcg)
}

func (_cfcb *ST_TLTimeAnimateValueTime) Validate() error { return _cfcb.ValidateWithPath("") }

type CT_SlideRelationshipList struct {

	// Presentation Slide
	Sld []*CT_SlideRelationshipListEntry
}

func (_ebeefa *ST_SlideLayoutType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ceebcc, _eefga := d.Token()
	if _eefga != nil {
		return _eefga
	}
	if _fcdfg, _efgbc := _ceebcc.(_g.EndElement); _efgbc && _fcdfg.Name == start.Name {
		*_ebeefa = 1
		return nil
	}
	if _ggddc, _eedca := _ceebcc.(_g.CharData); !_eedca {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ceebcc)
	} else {
		switch string(_ggddc) {
		case "":
			*_ebeefa = 0
		case "\u0074\u0069\u0074l\u0065":
			*_ebeefa = 1
		case "\u0074\u0078":
			*_ebeefa = 2
		case "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078":
			*_ebeefa = 3
		case "\u0074\u0062\u006c":
			*_ebeefa = 4
		case "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074":
			*_ebeefa = 5
		case "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
			*_ebeefa = 6
		case "\u0064\u0067\u006d":
			*_ebeefa = 7
		case "\u0063\u0068\u0061r\u0074":
			*_ebeefa = 8
		case "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074":
			*_ebeefa = 9
		case "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
			*_ebeefa = 10
		case "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy":
			*_ebeefa = 11
		case "\u0062\u006c\u0061n\u006b":
			*_ebeefa = 12
		case "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a":
			*_ebeefa = 13
		case "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
			*_ebeefa = 14
		case "\u006fb\u006a\u004f\u006e\u006c\u0079":
			*_ebeefa = 15
		case "\u006f\u0062\u006a":
			*_ebeefa = 16
		case "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061":
			*_ebeefa = 17
		case "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078":
			*_ebeefa = 18
		case "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x":
			*_ebeefa = 19
		case "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j":
			*_ebeefa = 20
		case "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
			*_ebeefa = 21
		case "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
			*_ebeefa = 22
		case "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078":
			*_ebeefa = 23
		case "\u0066o\u0075\u0072\u004f\u0062\u006a":
			*_ebeefa = 24
		case "\u0076\u0065\u0072\u0074\u0054\u0078":
			*_ebeefa = 25
		case "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078":
			*_ebeefa = 26
		case "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078":
			*_ebeefa = 27
		case "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074":
			*_ebeefa = 28
		case "\u0074\u0077\u006f\u004f\u0062\u006a":
			*_ebeefa = 29
		case "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
			*_ebeefa = 30
		case "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a":
			*_ebeefa = 31
		case "\u0063\u0075\u0073\u0074":
			*_ebeefa = 32
		case "\u0073e\u0063\u0048\u0065\u0061\u0064":
			*_ebeefa = 33
		case "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a":
			*_ebeefa = 34
		case "\u006f\u0062\u006aT\u0078":
			*_ebeefa = 35
		case "\u0070\u0069\u0063T\u0078":
			*_ebeefa = 36
		}
	}
	_ceebcc, _eefga = d.Token()
	if _eefga != nil {
		return _eefga
	}
	if _dbba, _gbfde := _ceebcc.(_g.EndElement); _gbfde && _dbba.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ceebcc)
}

func (_fgaec ST_PhotoAlbumFrameShape) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_fbebc := _g.Attr{}
	_fbebc.Name = name
	switch _fgaec {
	case ST_PhotoAlbumFrameShapeUnset:
		_fbebc.Value = ""
	case ST_PhotoAlbumFrameShapeFrameStyle1:
		_fbebc.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031"
	case ST_PhotoAlbumFrameShapeFrameStyle2:
		_fbebc.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032"
	case ST_PhotoAlbumFrameShapeFrameStyle3:
		_fbebc.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033"
	case ST_PhotoAlbumFrameShapeFrameStyle4:
		_fbebc.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034"
	case ST_PhotoAlbumFrameShapeFrameStyle5:
		_fbebc.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035"
	case ST_PhotoAlbumFrameShapeFrameStyle6:
		_fbebc.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036"
	case ST_PhotoAlbumFrameShapeFrameStyle7:
		_fbebc.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037"
	}
	return _fbebc, nil
}

type ST_WebScreenSize byte

// ValidateWithPath validates the TagLst and its children, prefixing error messages with path
func (_cccf *TagLst) ValidateWithPath(path string) error {
	if _aedg := _cccf.CT_TagList.ValidateWithPath(path); _aedg != nil {
		return _aedg
	}
	return nil
}

func (_gdgcg *CT_ShowInfoKiosk) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gdgcg.RestartAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072e\u0073\u0074\u0061\u0072\u0074"}, Value: _ce.Sprintf("\u0025\u0076", *_gdgcg.RestartAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_NotesMasterIdList and its children
func (_ebgea *CT_NotesMasterIdList) Validate() error {
	return _ebgea.ValidateWithPath("C\u0054_\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074")
}

func (_cbgga *ST_OleObjectFollowColorScheme) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cgegg, _gceec := d.Token()
	if _gceec != nil {
		return _gceec
	}
	if _egfab, _ffdcg := _cgegg.(_g.EndElement); _ffdcg && _egfab.Name == start.Name {
		*_cbgga = 1
		return nil
	}
	if _cacgd, _cdabf := _cgegg.(_g.CharData); !_cdabf {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgegg)
	} else {
		switch string(_cacgd) {
		case "":
			*_cbgga = 0
		case "\u006e\u006f\u006e\u0065":
			*_cbgga = 1
		case "\u0066\u0075\u006c\u006c":
			*_cbgga = 2
		case "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064":
			*_cbgga = 3
		}
	}
	_cgegg, _gceec = d.Token()
	if _gceec != nil {
		return _gceec
	}
	if _cbegc, _gaffd := _cgegg.(_g.EndElement); _gaffd && _cbegc.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgegg)
}

// Validate validates the CT_TransitionSoundAction and its children
func (_edced *CT_TransitionSoundAction) Validate() error {
	return _edced.ValidateWithPath("\u0043T\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006eS\u006f\u0075\u006e\u0064\u0041\u0063\u0074\u0069\u006f\u006e")
}

// Validate validates the NotesMaster and its children
func (_ceaa *NotesMaster) Validate() error {
	return _ceaa.ValidateWithPath("N\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072")
}

const (
	ST_IterateTypeUnset ST_IterateType = 0
	ST_IterateTypeEl    ST_IterateType = 1
	ST_IterateTypeWd    ST_IterateType = 2
	ST_IterateTypeLt    ST_IterateType = 3
)

type ST_TransitionInOutDirectionType byte

func NewCT_PhotoAlbum() *CT_PhotoAlbum { _fccb := &CT_PhotoAlbum{}; return _fccb }

func (_ddddac ST_PhotoAlbumLayout) String() string {
	switch _ddddac {
	case 0:
		return ""
	case 1:
		return "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065"
	case 2:
		return "\u0031\u0070\u0069\u0063"
	case 3:
		return "\u0032\u0070\u0069\u0063"
	case 4:
		return "\u0034\u0070\u0069\u0063"
	case 5:
		return "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case 6:
		return "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case 7:
		return "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce"
	}
	return ""
}

func (_gbebe *Presentation) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0070\u0072\u0065\u0073\u0065\u006e\u0074a\u0074\u0069\u006f\u006e"
	return _gbebe.CT_Presentation.MarshalXML(e, start)
}

func (_gfcea *SldLayout) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "p\u003a\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074"
	return _gfcea.CT_SlideLayout.MarshalXML(e, start)
}

func NewCT_TLCommonBehaviorData() *CT_TLCommonBehaviorData {
	_ageg := &CT_TLCommonBehaviorData{}
	_ageg.CTn = NewCT_TLCommonTimeNodeData()
	_ageg.TgtEl = NewCT_TLTimeTargetElement()
	return _ageg
}

func NewCT_InOutTransition() *CT_InOutTransition { _cgee := &CT_InOutTransition{}; return _cgee }

func (_ggedd ST_TLTimeNodeType) Validate() error { return _ggedd.ValidateWithPath("") }

func (_aega *CT_PrintProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _aega.PrnWhatAttr != ST_PrintWhatUnset {
		_bbcg, _befef := _aega.PrnWhatAttr.MarshalXMLAttr(_g.Name{Local: "\u0070r\u006e\u0057\u0068\u0061\u0074"})
		if _befef != nil {
			return _befef
		}
		start.Attr = append(start.Attr, _bbcg)
	}
	if _aega.ClrModeAttr != ST_PrintColorModeUnset {
		_gcbaa, _cbca := _aega.ClrModeAttr.MarshalXMLAttr(_g.Name{Local: "\u0063l\u0072\u004d\u006f\u0064\u0065"})
		if _cbca != nil {
			return _cbca
		}
		start.Attr = append(start.Attr, _gcbaa)
	}
	if _aega.HiddenSlidesAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u0069\u0064d\u0065\u006e\u0053\u006c\u0069\u0064\u0065\u0073"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_aega.HiddenSlidesAttr))})
	}
	if _aega.ScaleToFitPaperAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073c\u0061l\u0065\u0054\u006f\u0046\u0069\u0074\u0050\u0061\u0070\u0065\u0072"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_aega.ScaleToFitPaperAttr))})
	}
	if _aega.FrameSlidesAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "f\u0072\u0061\u006d\u0065\u0053\u006c\u0069\u0064\u0065\u0073"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_aega.FrameSlidesAttr))})
	}
	e.EncodeToken(start)
	if _aega.ExtLst != nil {
		_gbgaad := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aega.ExtLst, _gbgaad)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_adgb *CT_TLIterateIntervalTime) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _afde := range start.Attr {
		if _afde.Name.Local == "\u0076\u0061\u006c" {
			_cegf, _fbaeg := ParseUnionST_TLTime(_afde.Value)
			if _fbaeg != nil {
				return _fbaeg
			}
			_adgb.ValAttr = _cegf
			continue
		}
	}
	for {
		_eagae, _fdabd := d.Token()
		if _fdabd != nil {
			return _ce.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LIt\u0065ra\u0074\u0065\u0049\u006e\u0074\u0065\u0072va\u006c\u0054\u0069\u006d\u0065\u003a\u0020%\u0073", _fdabd)
		}
		if _befba, _ecfae := _eagae.(_g.EndElement); _ecfae && _befba.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_TLParaBuildType byte

func (_dbaf ST_PrintColorMode) String() string {
	switch _dbaf {
	case 0:
		return ""
	case 1:
		return "\u0062\u0077"
	case 2:
		return "\u0067\u0072\u0061\u0079"
	case 3:
		return "\u0063\u006c\u0072"
	}
	return ""
}

// ValidateWithPath validates the CT_OptionalBlackTransition and its children, prefixing error messages with path
func (_aaef *CT_OptionalBlackTransition) ValidateWithPath(path string) error { return nil }

func NewCT_SlideIdList() *CT_SlideIdList { _gbbd := &CT_SlideIdList{}; return _gbbd }

func (_gecgb *CT_TLAnimateEffectBehavior) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _gecgb.TransitionAttr != ST_TLAnimateEffectTransitionUnset {
		_dcefg, _fbce := _gecgb.TransitionAttr.MarshalXMLAttr(_g.Name{Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"})
		if _fbce != nil {
			return _fbce
		}
		start.Attr = append(start.Attr, _dcefg)
	}
	if _gecgb.FilterAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, Value: _ce.Sprintf("\u0025\u0076", *_gecgb.FilterAttr)})
	}
	if _gecgb.PrLstAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0070\u0072\u004cs\u0074"}, Value: _ce.Sprintf("\u0025\u0076", *_gecgb.PrLstAttr)})
	}
	e.EncodeToken(start)
	_fggfe := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_gecgb.CBhvr, _fggfe)
	if _gecgb.Progress != nil {
		_ebfc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0070\u0072\u006f\u0067\u0072\u0065\u0073\u0073"}}
		e.EncodeElement(_gecgb.Progress, _ebfc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_effge *CT_HandoutMasterIdListEntry) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _abdcb := range start.Attr {
		if _abdcb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _abdcb.Name.Local == "\u0069\u0064" || _abdcb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _abdcb.Name.Local == "\u0069\u0064" {
			_cgag, _bcee := _abdcb.Value, error(nil)
			if _bcee != nil {
				return _bcee
			}
			_effge.IdAttr = _cgag
			continue
		}
	}
_edbb:
	for {
		_ebeg, _aedc := d.Token()
		if _aedc != nil {
			return _aedc
		}
		switch _acgge := _ebeg.(type) {
		case _g.StartElement:
			switch _acgge.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_effge.ExtLst = NewCT_ExtensionList()
				if _gbdb := d.DecodeElement(_effge.ExtLst, &_acgge); _gbdb != nil {
					return _gbdb
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0048\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069s\u0074\u0045\u006e\u0074\u0072\u0079\u0020\u0025\u0076", _acgge.Name)
				if _ebde := d.Skip(); _ebde != nil {
					return _ebde
				}
			}
		case _g.EndElement:
			break _edbb
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CommonSlideViewProperties and its children
func (_ecg *CT_CommonSlideViewProperties) Validate() error {
	return _ecg.ValidateWithPath("\u0043\u0054\u005f\u0043o\u006d\u006d\u006f\u006e\u0053\u006c\u0069\u0064\u0065\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073")
}

func NewCT_OptionalBlackTransition() *CT_OptionalBlackTransition {
	_gcbb := &CT_OptionalBlackTransition{}
	return _gcbb
}

// Validate validates the CT_ShowInfoKiosk and its children
func (_bccc *CT_ShowInfoKiosk) Validate() error {
	return _bccc.ValidateWithPath("\u0043\u0054_\u0053\u0068\u006fw\u0049\u006e\u0066\u006f\u004b\u0069\u006f\u0073\u006b")
}

type CT_GroupShapeChoice struct {
	Sp           []*CT_Shape
	GrpSp        []*CT_GroupShape
	GraphicFrame []*CT_GraphicalObjectFrame
	CxnSp        []*CT_Connector
	Pic          []*CT_Picture
	ContentPart  []*CT_Rel
}

func (_deefg ST_PrintColorMode) ValidateWithPath(path string) error {
	switch _deefg {
	case 0, 1, 2, 3:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_deefg))
	}
	return nil
}

type CT_CustomerDataList struct {

	// Customer Data
	CustData []*CT_CustomerData

	// Customer Data Tags
	Tags *CT_TagsData
}

func (_fcfga ST_TLAnimateEffectTransition) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_dgaae := _g.Attr{}
	_dgaae.Name = name
	switch _fcfga {
	case ST_TLAnimateEffectTransitionUnset:
		_dgaae.Value = ""
	case ST_TLAnimateEffectTransitionIn:
		_dgaae.Value = "\u0069\u006e"
	case ST_TLAnimateEffectTransitionOut:
		_dgaae.Value = "\u006f\u0075\u0074"
	case ST_TLAnimateEffectTransitionNone:
		_dgaae.Value = "\u006e\u006f\u006e\u0065"
	}
	return _dgaae, nil
}

func (_aaefg *CT_Presentation) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_aaefg.NotesSz = _f.NewCT_PositiveSize2D()
	for _, _gefdbb := range start.Attr {
		if _gefdbb.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0053\u006c\u0069\u0064\u0065\u004e\u0075\u006d" {
			_fgeg, _dagd := _d.ParseInt(_gefdbb.Value, 10, 32)
			if _dagd != nil {
				return _dagd
			}
			_eceg := int32(_fgeg)
			_aaefg.FirstSlideNumAttr = &_eceg
			continue
		}
		if _gefdbb.Name.Local == "\u0072\u0074\u006c" {
			_aebdb, _febag := _d.ParseBool(_gefdbb.Value)
			if _febag != nil {
				return _febag
			}
			_aaefg.RtlAttr = &_aebdb
			continue
		}
		if _gefdbb.Name.Local == "\u0063\u006f\u006d\u0070\u0061\u0074\u004d\u006f\u0064\u0065" {
			_ecbf, _dgccg := _d.ParseBool(_gefdbb.Value)
			if _dgccg != nil {
				return _dgccg
			}
			_aaefg.CompatModeAttr = &_ecbf
			continue
		}
		if _gefdbb.Name.Local == "\u0065m\u0062e\u0064\u0054\u0072\u0075\u0065T\u0079\u0070e\u0046\u006f\u006e\u0074\u0073" {
			_caca, _fabc := _d.ParseBool(_gefdbb.Value)
			if _fabc != nil {
				return _fabc
			}
			_aaefg.EmbedTrueTypeFontsAttr = &_caca
			continue
		}
		if _gefdbb.Name.Local == "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073" {
			_fffbc, _dgge := _d.ParseBool(_gefdbb.Value)
			if _dgge != nil {
				return _dgge
			}
			_aaefg.AutoCompressPicturesAttr = &_fffbc
			continue
		}
		if _gefdbb.Name.Local == "\u0073h\u006f\u0077\u0053\u0070\u0065\u0063\u0069\u0061\u006c\u0050\u006cs\u004f\u006e\u0054\u0069\u0074\u006c\u0065\u0053\u006c\u0064" {
			_cdaa, _cccb := _d.ParseBool(_gefdbb.Value)
			if _cccb != nil {
				return _cccb
			}
			_aaefg.ShowSpecialPlsOnTitleSldAttr = &_cdaa
			continue
		}
		if _gefdbb.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u005a\u006f\u006f\u006d" {
			_egfg, _dfbg := ParseUnionST_Percentage(_gefdbb.Value)
			if _dfbg != nil {
				return _dfbg
			}
			_aaefg.ServerZoomAttr = &_egfg
			continue
		}
		if _gefdbb.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_aaefg.ConformanceAttr.UnmarshalXMLAttr(_gefdbb)
			continue
		}
		if _gefdbb.Name.Local == "\u0072e\u006d\u006f\u0076\u0065\u0050\u0065\u0072\u0073\u006f\u006e\u0061l\u0049\u006e\u0066\u006f\u004f\u006e\u0053\u0061\u0076\u0065" {
			_ggcf, _bdge := _d.ParseBool(_gefdbb.Value)
			if _bdge != nil {
				return _bdge
			}
			_aaefg.RemovePersonalInfoOnSaveAttr = &_ggcf
			continue
		}
		if _gefdbb.Name.Local == "\u0073a\u0076e\u0053\u0075\u0062\u0073\u0065\u0074\u0046\u006f\u006e\u0074\u0073" {
			_aaabb, _befe := _d.ParseBool(_gefdbb.Value)
			if _befe != nil {
				return _befe
			}
			_aaefg.SaveSubsetFontsAttr = &_aaabb
			continue
		}
		if _gefdbb.Name.Local == "\u0062\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049d\u0053\u0065\u0065\u0064" {
			_ffdge, _gbea := _d.ParseUint(_gefdbb.Value, 10, 32)
			if _gbea != nil {
				return _gbea
			}
			_abae := uint32(_ffdge)
			_aaefg.BookmarkIdSeedAttr = &_abae
			continue
		}
		if _gefdbb.Name.Local == "\u0073\u0074\u0072ic\u0074\u0046\u0069\u0072\u0073\u0074\u0041\u006e\u0064\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072\u0073" {
			_dcbaf, _edbeb := _d.ParseBool(_gefdbb.Value)
			if _edbeb != nil {
				return _edbeb
			}
			_aaefg.StrictFirstAndLastCharsAttr = &_dcbaf
			continue
		}
	}
_baffd:
	for {
		_agfde, _agab := d.Token()
		if _agab != nil {
			return _agab
		}
		switch _bgbda := _agfde.(type) {
		case _g.StartElement:
			switch _bgbda.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}:
				_aaefg.SldMasterIdLst = NewCT_SlideMasterIdList()
				if _ecec := d.DecodeElement(_aaefg.SldMasterIdLst, &_bgbda); _ecec != nil {
					return _ecec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}:
				_aaefg.NotesMasterIdLst = NewCT_NotesMasterIdList()
				if _badea := d.DecodeElement(_aaefg.NotesMasterIdLst, &_bgbda); _badea != nil {
					return _badea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}:
				_aaefg.HandoutMasterIdLst = NewCT_HandoutMasterIdList()
				if _ecccd := d.DecodeElement(_aaefg.HandoutMasterIdLst, &_bgbda); _ecccd != nil {
					return _ecccd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}:
				_aaefg.SldIdLst = NewCT_SlideIdList()
				if _efac := d.DecodeElement(_aaefg.SldIdLst, &_bgbda); _efac != nil {
					return _efac
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}:
				_aaefg.SldSz = NewCT_SlideSize()
				if _cbee := d.DecodeElement(_aaefg.SldSz, &_bgbda); _cbee != nil {
					return _cbee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}:
				if _dfad := d.DecodeElement(_aaefg.NotesSz, &_bgbda); _dfad != nil {
					return _dfad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_aaefg.SmartTags = NewCT_SmartTags()
				if _fcagg := d.DecodeElement(_aaefg.SmartTags, &_bgbda); _fcagg != nil {
					return _fcagg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}:
				_aaefg.EmbeddedFontLst = NewCT_EmbeddedFontList()
				if _bafb := d.DecodeElement(_aaefg.EmbeddedFontLst, &_bgbda); _bafb != nil {
					return _bafb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}:
				_aaefg.CustShowLst = NewCT_CustomShowList()
				if _cdcf := d.DecodeElement(_aaefg.CustShowLst, &_bgbda); _cdcf != nil {
					return _cdcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}:
				_aaefg.PhotoAlbum = NewCT_PhotoAlbum()
				if _dbdc := d.DecodeElement(_aaefg.PhotoAlbum, &_bgbda); _dbdc != nil {
					return _dbdc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_aaefg.CustDataLst = NewCT_CustomerDataList()
				if _egab := d.DecodeElement(_aaefg.CustDataLst, &_bgbda); _egab != nil {
					return _egab
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}:
				_aaefg.Kinsoku = NewCT_Kinsoku()
				if _eaedfe := d.DecodeElement(_aaefg.Kinsoku, &_bgbda); _eaedfe != nil {
					return _eaedfe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_aaefg.DefaultTextStyle = _f.NewCT_TextListStyle()
				if _egce := d.DecodeElement(_aaefg.DefaultTextStyle, &_bgbda); _egce != nil {
					return _egce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}:
				_aaefg.ModifyVerifier = NewCT_ModifyVerifier()
				if _dcce := d.DecodeElement(_aaefg.ModifyVerifier, &_bgbda); _dcce != nil {
					return _dcce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aaefg.ExtLst = NewCT_ExtensionList()
				if _accf := d.DecodeElement(_aaefg.ExtLst, &_bgbda); _accf != nil {
					return _accf
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _bgbda.Name)
				if _bbcaa := d.Skip(); _bbcaa != nil {
					return _bbcaa
				}
			}
		case _g.EndElement:
			break _baffd
		case _g.CharData:
		}
	}
	return nil
}

type ST_TLTimeNodeFillType byte

// ValidateWithPath validates the CT_TLTriggerRuntimeNode and its children, prefixing error messages with path
func (_dccef *CT_TLTriggerRuntimeNode) ValidateWithPath(path string) error {
	if _dccef.ValAttr == ST_TLTriggerRuntimeNodeUnset {
		return _ce.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ggfd := _dccef.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ggfd != nil {
		return _ggfd
	}
	return nil
}

func (_eddcd ST_TLTriggerRuntimeNode) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_eddcd.String(), start)
}

func (_feceg *CT_ShowInfoBrowse) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _feceg.ShowScrollbarAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0063\u0072\u006f\u006c\u006c\u0062\u0061\u0072"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_feceg.ShowScrollbarAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewSldMaster() *SldMaster {
	_fbgbcb := &SldMaster{}
	_fbgbcb.CT_SlideMaster = *NewCT_SlideMaster()
	return _fbgbcb
}

func (_cfdgf *CT_TLAnimVariantStringVal) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cagff := range start.Attr {
		if _cagff.Name.Local == "\u0076\u0061\u006c" {
			_fgddd, _cgab := _cagff.Value, error(nil)
			if _cgab != nil {
				return _cgab
			}
			_cfdgf.ValAttr = _fgddd
			continue
		}
	}
	for {
		_fbffg, _bdfb := d.Token()
		if _bdfb != nil {
			return _ce.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067 \u0043\u0054_\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0053\u0074\u0072\u0069\u006e\u0067\u0056\u0061l\u003a\u0020\u0025\u0073", _bdfb)
		}
		if _gdafe, _afbae := _fbffg.(_g.EndElement); _afbae && _gdafe.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_PhotoAlbumFrameShape byte

func (_gdbd *CT_SlideRelationshipListEntry) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _gdbd.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_WebColorTypeUnset              ST_WebColorType = 0
	ST_WebColorTypeNone               ST_WebColorType = 1
	ST_WebColorTypeBrowser            ST_WebColorType = 2
	ST_WebColorTypePresentationText   ST_WebColorType = 3
	ST_WebColorTypePresentationAccent ST_WebColorType = 4
	ST_WebColorTypeWhiteTextOnBlack   ST_WebColorType = 5
	ST_WebColorTypeBlackTextOnWhite   ST_WebColorType = 6
)

type AG_ChildSlide struct {
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

// ValidateWithPath validates the CT_TLAnimVariantBooleanVal and its children, prefixing error messages with path
func (_bgag *CT_TLAnimVariantBooleanVal) ValidateWithPath(path string) error { return nil }

const (
	ST_PrintColorModeUnset ST_PrintColorMode = 0
	ST_PrintColorModeBw    ST_PrintColorMode = 1
	ST_PrintColorModeGray  ST_PrintColorMode = 2
	ST_PrintColorModeClr   ST_PrintColorMode = 3
)

func (_gbgfd *CT_TLTemplateList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bgbbb:
	for {
		_egge, _abfdc := d.Token()
		if _abfdc != nil {
			return _abfdc
		}
		switch _aadgc := _egge.(type) {
		case _g.StartElement:
			switch _aadgc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0070\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0070\u006c"}:
				_beaaa := NewCT_TLTemplate()
				if _gggeg := d.DecodeElement(_beaaa, &_aadgc); _gggeg != nil {
					return _gggeg
				}
				_gbgfd.Tmpl = append(_gbgfd.Tmpl, _beaaa)
			default:
				_e.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _aadgc.Name)
				if _aebfg := d.Skip(); _aebfg != nil {
					return _aebfg
				}
			}
		case _g.EndElement:
			break _bgbbb
		case _g.CharData:
		}
	}
	return nil
}

func (_fdafa ST_TLCommandType) Validate() error { return _fdafa.ValidateWithPath("") }

func NewCT_CornerDirectionTransition() *CT_CornerDirectionTransition {
	_gfdb := &CT_CornerDirectionTransition{}
	return _gfdb
}

func (_aagcfd ST_PlaceholderSize) String() string {
	switch _aagcfd {
	case 0:
		return ""
	case 1:
		return "\u0066\u0075\u006c\u006c"
	case 2:
		return "\u0068\u0061\u006c\u0066"
	case 3:
		return "\u0071u\u0061\u0072\u0074\u0065\u0072"
	}
	return ""
}

// Validate validates the CT_EightDirectionTransition and its children
func (_bfbf *CT_EightDirectionTransition) Validate() error {
	return _bfbf.ValidateWithPath("C\u0054\u005f\u0045\u0069\u0067\u0068t\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006eT\u0072\u0061\u006es\u0069t\u0069\u006f\u006e")
}

func NewCT_TLTextTargetElement() *CT_TLTextTargetElement {
	_fagfg := &CT_TLTextTargetElement{}
	return _fagfg
}

func (_eeac *CT_TLTimeAnimateValueList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ggbd:
	for {
		_fegaa, _fefeb := d.Token()
		if _fefeb != nil {
			return _fefeb
		}
		switch _eeaf := _fegaa.(type) {
		case _g.StartElement:
			switch _eeaf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0076"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0076"}:
				_cacg := NewCT_TLTimeAnimateValue()
				if _facba := d.DecodeElement(_cacg, &_eeaf); _facba != nil {
					return _facba
				}
				_eeac.Tav = append(_eeac.Tav, _cacg)
			default:
				_e.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u0041\u006ei\u006da\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u004ci\u0073t\u0020\u0025v", _eeaf.Name)
				if _eabdga := d.Skip(); _eabdga != nil {
					return _eabdga
				}
			}
		case _g.EndElement:
			break _ggbd
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ApplicationNonVisualDrawingProps and its children
func (_cce *CT_ApplicationNonVisualDrawingProps) Validate() error {
	return _cce.ValidateWithPath("C\u0054\u005f\u0041\u0070\u0070\u006ci\u0063\u0061\u0074\u0069\u006f\u006eN\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006fp\u0073")
}

func (_dbdg ST_TLBehaviorAccumulateType) ValidateWithPath(path string) error {
	switch _dbdg {
	case 0, 1, 2:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbdg))
	}
	return nil
}

func (_gfagc ST_TLAnimateEffectTransition) Validate() error { return _gfagc.ValidateWithPath("") }

// Validate validates the CT_Placeholder and its children
func (_bdbec *CT_Placeholder) Validate() error {
	return _bdbec.ValidateWithPath("\u0043\u0054\u005f\u0050\u006c\u0061\u0063\u0065\u0068o\u006c\u0064\u0065\u0072")
}

const (
	ST_TLTimeNodeSyncTypeUnset   ST_TLTimeNodeSyncType = 0
	ST_TLTimeNodeSyncTypeCanSlip ST_TLTimeNodeSyncType = 1
	ST_TLTimeNodeSyncTypeLocked  ST_TLTimeNodeSyncType = 2
)

func (_gdabg ST_SlideLayoutType) ValidateWithPath(path string) error {
	switch _gdabg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdabg))
	}
	return nil
}

type CT_HandoutMasterIdList struct {

	// Handout Master ID
	HandoutMasterId *CT_HandoutMasterIdListEntry
}

func (_dbceb ST_WebScreenSize) String() string {
	switch _dbceb {
	case 0:
		return ""
	case 1:
		return "\u00354\u0034\u0078\u0033\u0037\u0036"
	case 2:
		return "\u00364\u0030\u0078\u0034\u0038\u0030"
	case 3:
		return "\u00372\u0030\u0078\u0035\u0031\u0032"
	case 4:
		return "\u00380\u0030\u0078\u0036\u0030\u0030"
	case 5:
		return "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case 6:
		return "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case 7:
		return "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case 8:
		return "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case 9:
		return "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case 10:
		return "\u00318\u0030\u0030\u0078\u0031\u0034\u00300"
	case 11:
		return "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return ""
}

func (_cgbef ST_TransitionEightDirectionType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _cgbef.ST_TransitionSideDirectionType != ST_TransitionSideDirectionTypeUnset {
		e.EncodeToken(_g.CharData(_cgbef.ST_TransitionSideDirectionType.String()))
	}
	if _cgbef.ST_TransitionCornerDirectionType != ST_TransitionCornerDirectionTypeUnset {
		e.EncodeToken(_g.CharData(_cgbef.ST_TransitionCornerDirectionType.String()))
	}
	return e.EncodeToken(_g.EndElement{Name: start.Name})
}

func (_bebee *CT_TLByHslColorTransform) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ggdab := range start.Attr {
		if _ggdab.Name.Local == "\u0068" {
			_fdgfc, _dfab := _d.ParseInt(_ggdab.Value, 10, 32)
			if _dfab != nil {
				return _dfab
			}
			_bebee.HAttr = int32(_fdgfc)
			continue
		}
		if _ggdab.Name.Local == "\u0073" {
			_ageff, _aagf := ParseUnionST_FixedPercentage(_ggdab.Value)
			if _aagf != nil {
				return _aagf
			}
			_bebee.SAttr = _ageff
			continue
		}
		if _ggdab.Name.Local == "\u006c" {
			_gfaae, _gabbg := ParseUnionST_FixedPercentage(_ggdab.Value)
			if _gabbg != nil {
				return _gabbg
			}
			_bebee.LAttr = _gfaae
			continue
		}
	}
	for {
		_efefe, _egbf := d.Token()
		if _egbf != nil {
			return _ce.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LBy\u0048sl\u0043\u006f\u006c\u006f\u0072\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u003a\u0020%\u0073", _egbf)
		}
		if _bddeg, _edfg := _efefe.(_g.EndElement); _edfg && _bddeg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_NotesSlide and its children
func (_ffffg *CT_NotesSlide) Validate() error {
	return _ffffg.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0053\u006c\u0069\u0064\u0065")
}

// Validate validates the CT_SlideRelationshipList and its children
func (_aabcc *CT_SlideRelationshipList) Validate() error {
	return _aabcc.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074i\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074")
}

func (_ebe *AG_TLBuild) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ebe.SpidAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_ebe.SpidAttr)})
	}
	if _ebe.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_ebe.GrpIdAttr)})
	}
	if _ebe.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_ebe.UiExpandAttr))})
	}
	return nil
}

// ValidateWithPath validates the AG_Ole and its children, prefixing error messages with path
func (_ffg *AG_Ole) ValidateWithPath(path string) error {
	if _ffg.ImgWAttr != nil {
		if *_ffg.ImgWAttr < 0 {
			return _ce.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0057\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_ffg.ImgWAttr)
		}
	}
	if _ffg.ImgHAttr != nil {
		if *_ffg.ImgHAttr < 0 {
			return _ce.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0048\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_ffg.ImgHAttr)
		}
	}
	return nil
}

func (_daba *CT_TLCommonTimeNodeData) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _dgbc := range start.Attr {
		if _dgbc.Name.Local == "\u0074\u006d\u0046\u0069\u006c\u0074\u0065\u0072" {
			_ccdbb, _ddfe := _dgbc.Value, error(nil)
			if _ddfe != nil {
				return _ddfe
			}
			_daba.TmFilterAttr = &_ccdbb
			continue
		}
		if _dgbc.Name.Local == "\u0065v\u0074\u0046\u0069\u006c\u0074\u0065r" {
			_bfcbc, _gffdb := _dgbc.Value, error(nil)
			if _gffdb != nil {
				return _gffdb
			}
			_daba.EvtFilterAttr = &_bfcbc
			continue
		}
		if _dgbc.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0074\u0049\u0044" {
			_eabgd, _fdfd := _d.ParseInt(_dgbc.Value, 10, 32)
			if _fdfd != nil {
				return _fdfd
			}
			_aacfb := int32(_eabgd)
			_daba.PresetIDAttr = &_aacfb
			continue
		}
		if _dgbc.Name.Local == "\u0064i\u0073\u0070\u006c\u0061\u0079" {
			_caec, _dfadg := _d.ParseBool(_dgbc.Value)
			if _dfadg != nil {
				return _dfadg
			}
			_daba.DisplayAttr = &_caec
			continue
		}
		if _dgbc.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0074\u0053\u0075\u0062\u0074\u0079\u0070\u0065" {
			_fbac, _cdce := _d.ParseInt(_dgbc.Value, 10, 32)
			if _cdce != nil {
				return _cdce
			}
			_eaff := int32(_fbac)
			_daba.PresetSubtypeAttr = &_eaff
			continue
		}
		if _dgbc.Name.Local == "\u006da\u0073\u0074\u0065\u0072\u0052\u0065l" {
			_daba.MasterRelAttr.UnmarshalXMLAttr(_dgbc)
			continue
		}
		if _dgbc.Name.Local == "r\u0065\u0070\u0065\u0061\u0074\u0043\u006f\u0075\u006e\u0074" {
			_aded, _fceg := ParseUnionST_TLTime(_dgbc.Value)
			if _fceg != nil {
				return _fceg
			}
			_daba.RepeatCountAttr = &_aded
			continue
		}
		if _dgbc.Name.Local == "\u0062\u006c\u0064\u004c\u0076\u006c" {
			_ddbca, _beff := _d.ParseInt(_dgbc.Value, 10, 32)
			if _beff != nil {
				return _beff
			}
			_dcaf := int32(_ddbca)
			_daba.BldLvlAttr = &_dcaf
			continue
		}
		if _dgbc.Name.Local == "\u0073\u0070\u0064" {
			_eddaf, _ddagf := ParseUnionST_Percentage(_dgbc.Value)
			if _ddagf != nil {
				return _ddagf
			}
			_daba.SpdAttr = &_eddaf
			continue
		}
		if _dgbc.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_dfdfd, _ggde := _d.ParseUint(_dgbc.Value, 10, 32)
			if _ggde != nil {
				return _ggde
			}
			_eegbd := uint32(_dfdfd)
			_daba.GrpIdAttr = &_eegbd
			continue
		}
		if _dgbc.Name.Local == "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074" {
			_bcbg, _aeddd := _d.ParseBool(_dgbc.Value)
			if _aeddd != nil {
				return _aeddd
			}
			_daba.AfterEffectAttr = &_bcbg
			continue
		}
		if _dgbc.Name.Local == "\u0069\u0064" {
			_fegfac, _bgaa := _d.ParseUint(_dgbc.Value, 10, 32)
			if _bgaa != nil {
				return _bgaa
			}
			_dfdbd := uint32(_fegfac)
			_daba.IdAttr = &_dfdbd
			continue
		}
		if _dgbc.Name.Local == "\u006e\u006f\u0064\u0065\u0050\u0068" {
			_ceba, _gdfac := _d.ParseBool(_dgbc.Value)
			if _gdfac != nil {
				return _gdfac
			}
			_daba.NodePhAttr = &_ceba
			continue
		}
		if _dgbc.Name.Local == "\u0061\u0063\u0063e\u006c" {
			_bbce, _gedae := ParseUnionST_PositiveFixedPercentage(_dgbc.Value)
			if _gedae != nil {
				return _gedae
			}
			_daba.AccelAttr = &_bbce
			continue
		}
		if _dgbc.Name.Local == "\u0064\u0065\u0063e\u006c" {
			_caefc, _gdeg := ParseUnionST_PositiveFixedPercentage(_dgbc.Value)
			if _gdeg != nil {
				return _gdeg
			}
			_daba.DecelAttr = &_caefc
			continue
		}
		if _dgbc.Name.Local == "\u0072e\u0073\u0074\u0061\u0072\u0074" {
			_daba.RestartAttr.UnmarshalXMLAttr(_dgbc)
			continue
		}
		if _dgbc.Name.Local == "\u006e\u006f\u0064\u0065\u0054\u0079\u0070\u0065" {
			_daba.NodeTypeAttr.UnmarshalXMLAttr(_dgbc)
			continue
		}
		if _dgbc.Name.Local == "p\u0072\u0065\u0073\u0065\u0074\u0043\u006c\u0061\u0073\u0073" {
			_daba.PresetClassAttr.UnmarshalXMLAttr(_dgbc)
			continue
		}
		if _dgbc.Name.Local == "\u0072e\u0070\u0065\u0061\u0074\u0044\u0075r" {
			_ebbbe, _bdffg := ParseUnionST_TLTime(_dgbc.Value)
			if _bdffg != nil {
				return _bdffg
			}
			_daba.RepeatDurAttr = &_ebbbe
			continue
		}
		if _dgbc.Name.Local == "\u0073\u0079\u006ec\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072" {
			_daba.SyncBehaviorAttr.UnmarshalXMLAttr(_dgbc)
			continue
		}
		if _dgbc.Name.Local == "\u0061u\u0074\u006f\u0052\u0065\u0076" {
			_dfgcf, _gafcg := _d.ParseBool(_dgbc.Value)
			if _gafcg != nil {
				return _gafcg
			}
			_daba.AutoRevAttr = &_dfgcf
			continue
		}
		if _dgbc.Name.Local == "\u0066\u0069\u006c\u006c" {
			_daba.FillAttr.UnmarshalXMLAttr(_dgbc)
			continue
		}
		if _dgbc.Name.Local == "\u0064\u0075\u0072" {
			_cgdgc, _adgef := ParseUnionST_TLTime(_dgbc.Value)
			if _adgef != nil {
				return _adgef
			}
			_daba.DurAttr = &_cgdgc
			continue
		}
	}
_fbaae:
	for {
		_afgfc, _gbdbb := d.Token()
		if _gbdbb != nil {
			return _gbdbb
		}
		switch _fefeac := _afgfc.(type) {
		case _g.StartElement:
			switch _fefeac.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073t\u0043\u006f\u006e\u0064\u004c\u0073t"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0043\u006f\u006e\u0064\u004c\u0073t"}:
				_daba.StCondLst = NewCT_TLTimeConditionList()
				if _eegg := d.DecodeElement(_daba.StCondLst, &_fefeac); _eegg != nil {
					return _eegg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}:
				_daba.EndCondLst = NewCT_TLTimeConditionList()
				if _aaccdd := d.DecodeElement(_daba.EndCondLst, &_fefeac); _aaccdd != nil {
					return _aaccdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065n\u0064\u0053\u0079\u006e\u0063"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065n\u0064\u0053\u0079\u006e\u0063"}:
				_daba.EndSync = NewCT_TLTimeCondition()
				if _cbgf := d.DecodeElement(_daba.EndSync, &_fefeac); _cbgf != nil {
					return _cbgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069t\u0065\u0072\u0061\u0074\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069t\u0065\u0072\u0061\u0074\u0065"}:
				_daba.Iterate = NewCT_TLIterateData()
				if _bbdae := d.DecodeElement(_daba.Iterate, &_fefeac); _bbdae != nil {
					return _bbdae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0068\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"}:
				_daba.ChildTnLst = NewCT_TimeNodeList()
				if _bdeda := d.DecodeElement(_daba.ChildTnLst, &_fefeac); _bdeda != nil {
					return _bdeda
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0075\u0062\u0054\u006e\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0075\u0062\u0054\u006e\u004c\u0073\u0074"}:
				_daba.SubTnLst = NewCT_TimeNodeList()
				if _efgeg := d.DecodeElement(_daba.SubTnLst, &_fefeac); _efgeg != nil {
					return _efgeg
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u0054i\u006d\u0065\u004e\u006f\u0064\u0065D\u0061\u0074\u0061 \u0025\u0076", _fefeac.Name)
				if _cfac := d.Skip(); _cfac != nil {
					return _cfac
				}
			}
		case _g.EndElement:
			break _fbaae
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_TLTriggerTimeNodeID() *CT_TLTriggerTimeNodeID {
	_eecf := &CT_TLTriggerTimeNodeID{}
	return _eecf
}

func (_gcfgg ST_TLAnimateMotionBehaviorOrigin) ValidateWithPath(path string) error {
	switch _gcfgg {
	case 0, 1, 2:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcfgg))
	}
	return nil
}

// ValidateWithPath validates the CT_TLGraphicalObjectBuild and its children, prefixing error messages with path
func (_bcdfb *CT_TLGraphicalObjectBuild) ValidateWithPath(path string) error {
	if _bcdfb.BldAsOne != nil {
		if _bceca := _bcdfb.BldAsOne.ValidateWithPath(path + "\u002fB\u006c\u0064\u0041\u0073\u004f\u006ee"); _bceca != nil {
			return _bceca
		}
	}
	if _bcdfb.BldSub != nil {
		if _egefd := _bcdfb.BldSub.ValidateWithPath(path + "\u002fB\u006c\u0064\u0053\u0075\u0062"); _egefd != nil {
			return _egefd
		}
	}
	return nil
}

type CT_TLAnimateEffectBehavior struct {

	// Transition
	TransitionAttr ST_TLAnimateEffectTransition

	// Filter
	FilterAttr *string

	// Property List
	PrLstAttr *string
	CBhvr     *CT_TLCommonBehaviorData

	// Progress
	Progress *CT_TLAnimVariant
}

func (_bdddg *ST_TLBehaviorTransformType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_bdddg = 0
	case "\u0070\u0074":
		*_bdddg = 1
	case "\u0069\u006d\u0067":
		*_bdddg = 2
	}
	return nil
}

type ST_SlideSizeType byte

// Validate validates the CT_Empty and its children
func (_bda *CT_Empty) Validate() error {
	return _bda.ValidateWithPath("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079")
}

func (_egbac ST_TLOleChartBuildType) String() string {
	switch _egbac {
	case 0:
		return ""
	case 1:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case 2:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 3:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 4:
		return "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case 5:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return ""
}

func (_effe ST_TLNextActionType) Validate() error { return _effe.ValidateWithPath("") }

type ST_TLBehaviorAdditiveType byte

func (_bafe *ST_IterateType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bddffd, _ddaef := d.Token()
	if _ddaef != nil {
		return _ddaef
	}
	if _cdfe, _abadc := _bddffd.(_g.EndElement); _abadc && _cdfe.Name == start.Name {
		*_bafe = 1
		return nil
	}
	if _feaga, _fgdf := _bddffd.(_g.CharData); !_fgdf {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bddffd)
	} else {
		switch string(_feaga) {
		case "":
			*_bafe = 0
		case "\u0065\u006c":
			*_bafe = 1
		case "\u0077\u0064":
			*_bafe = 2
		case "\u006c\u0074":
			*_bafe = 3
		}
	}
	_bddffd, _ddaef = d.Token()
	if _ddaef != nil {
		return _ddaef
	}
	if _ecfdfb, _acgfd := _bddffd.(_g.EndElement); _acgfd && _ecfdfb.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bddffd)
}

func NewCT_TLTimeConditionList() *CT_TLTimeConditionList {
	_dbcab := &CT_TLTimeConditionList{}
	return _dbcab
}

func NewCT_TLAnimateEffectBehavior() *CT_TLAnimateEffectBehavior {
	_adee := &CT_TLAnimateEffectBehavior{}
	_adee.CBhvr = NewCT_TLCommonBehaviorData()
	return _adee
}

// ValidateWithPath validates the CT_CommentAuthor and its children, prefixing error messages with path
func (_dbbd *CT_CommentAuthor) ValidateWithPath(path string) error {
	if _dbbd.ExtLst != nil {
		if _abag := _dbbd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abag != nil {
			return _abag
		}
	}
	return nil
}

type CT_TLTemplate struct {

	// Level
	LvlAttr *uint32

	// Time Node List
	TnLst *CT_TimeNodeList
}

func (_aegf ST_TLTimeNodeRestartType) Validate() error { return _aegf.ValidateWithPath("") }

// ValidateWithPath validates the CT_SlideRelationshipListEntry and its children, prefixing error messages with path
func (_cccc *CT_SlideRelationshipListEntry) ValidateWithPath(path string) error { return nil }

func NewCT_TLAnimateColorBehavior() *CT_TLAnimateColorBehavior {
	_cdfba := &CT_TLAnimateColorBehavior{}
	_cdfba.CBhvr = NewCT_TLCommonBehaviorData()
	return _cdfba
}

func (_debeag *EG_SlideListChoice) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bbba:
	for {
		_geebd, _aecfb := d.Token()
		if _aecfb != nil {
			return _aecfb
		}
		switch _gcfb := _geebd.(type) {
		case _g.StartElement:
			switch _gcfb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}:
				_debeag.SldAll = NewCT_Empty()
				if _fbdce := d.DecodeElement(_debeag.SldAll, &_gcfb); _fbdce != nil {
					return _fbdce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}:
				_debeag.SldRg = NewCT_IndexRange()
				if _gcgbdg := d.DecodeElement(_debeag.SldRg, &_gcfb); _gcgbdg != nil {
					return _gcgbdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_debeag.CustShow = NewCT_CustomShowId()
				if _abcf := d.DecodeElement(_debeag.CustShow, &_gcfb); _abcf != nil {
					return _abcf
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u006c\u0069\u0064\u0065\u004ci\u0073\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _gcfb.Name)
				if _ggec := d.Skip(); _ggec != nil {
					return _ggec
				}
			}
		case _g.EndElement:
			break _bbba
		case _g.CharData:
		}
	}
	return nil
}

func (_bbd *CT_BuildList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _bbd.BldP != nil {
		_bdb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0050"}}
		for _, _efe := range _bbd.BldP {
			e.EncodeElement(_efe, _bdb)
		}
	}
	if _bbd.BldDgm != nil {
		_cea := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0044\u0067\u006d"}}
		for _, _ebg := range _bbd.BldDgm {
			e.EncodeElement(_ebg, _cea)
		}
	}
	if _bbd.BldOleChart != nil {
		_feef := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}}
		for _, _fdd := range _bbd.BldOleChart {
			e.EncodeElement(_fdd, _feef)
		}
	}
	if _bbd.BldGraphic != nil {
		_ggd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062l\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}}
		for _, _acdc := range _bbd.BldGraphic {
			e.EncodeElement(_acdc, _ggd)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_GroupShapeNonVisual struct {

	// Non-visual Drawing Properties
	CNvPr *_f.CT_NonVisualDrawingProps

	// Non-Visual Group Shape Drawing Properties
	CNvGrpSpPr *_f.CT_NonVisualGroupDrawingShapeProps

	// Non-Visual Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

func (_ggb *CT_ExtensionList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cgcf:
	for {
		_degg, _gadg := d.Token()
		if _gadg != nil {
			return _gadg
		}
		switch _aaab := _degg.(type) {
		case _g.StartElement:
			switch _aaab.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_fgdc := NewCT_Extension()
				if _agbe := d.DecodeElement(_fgdc, &_aaab); _agbe != nil {
					return _agbe
				}
				_ggb.Ext = append(_ggb.Ext, _fgdc)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _aaab.Name)
				if _ffabe := d.Skip(); _ffabe != nil {
					return _ffabe
				}
			}
		case _g.EndElement:
			break _cgcf
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_TransitionSoundAction() *CT_TransitionSoundAction {
	_ebcfg := &CT_TransitionSoundAction{}
	return _ebcfg
}

func (_ccfb *CT_CommentAuthor) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _ccfb.IdAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _ce.Sprintf("\u0025\u0076", _ccfb.NameAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0073"}, Value: _ce.Sprintf("\u0025\u0076", _ccfb.InitialsAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u006ca\u0073\u0074\u0049\u0064\u0078"}, Value: _ce.Sprintf("\u0025\u0076", _ccfb.LastIdxAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u006c\u0072\u0049\u0064\u0078"}, Value: _ce.Sprintf("\u0025\u0076", _ccfb.ClrIdxAttr)})
	e.EncodeToken(start)
	if _ccfb.ExtLst != nil {
		_debc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ccfb.ExtLst, _debc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the SldMaster and its children
func (_dceed *SldMaster) Validate() error {
	return _dceed.ValidateWithPath("\u0053l\u0064\u004d\u0061\u0073\u0074\u0065r")
}

func (_begfa ST_ViewType) ValidateWithPath(path string) error {
	switch _begfa {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_begfa))
	}
	return nil
}

func (_fdfee ST_TLChartSubelementType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_fdfee.String(), start)
}

func (_edd *CT_BuildList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ecd:
	for {
		_dda, _dfc := d.Token()
		if _dfc != nil {
			return _dfc
		}
		switch _cfcd := _dda.(type) {
		case _g.StartElement:
			switch _cfcd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0050"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0050"}:
				_fgd := NewCT_TLBuildParagraph()
				if _dgea := d.DecodeElement(_fgd, &_cfcd); _dgea != nil {
					return _dgea
				}
				_edd.BldP = append(_edd.BldP, _fgd)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}:
				_cae := NewCT_TLBuildDiagram()
				if _egd := d.DecodeElement(_cae, &_cfcd); _egd != nil {
					return _egd
				}
				_edd.BldDgm = append(_edd.BldDgm, _cae)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "b\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "b\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}:
				_fecf := NewCT_TLOleBuildChart()
				if _eag := d.DecodeElement(_fecf, &_cfcd); _eag != nil {
					return _eag
				}
				_edd.BldOleChart = append(_edd.BldOleChart, _fecf)
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}:
				_dfba := NewCT_TLGraphicalObjectBuild()
				if _aeg := d.DecodeElement(_dfba, &_cfcd); _aeg != nil {
					return _aeg
				}
				_edd.BldGraphic = append(_edd.BldGraphic, _dfba)
			default:
				_e.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_B\u0075\u0069l\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _cfcd.Name)
				if _eagg := d.Skip(); _eagg != nil {
					return _eagg
				}
			}
		case _g.EndElement:
			break _ecd
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_WebProperties and its children
func (_gcgbd *CT_WebProperties) Validate() error {
	return _gcgbd.ValidateWithPath("\u0043\u0054_\u0057\u0065\u0062P\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_TLAnimVariantFloatVal and its children
func (_fggbf *CT_TLAnimVariantFloatVal) Validate() error {
	return _fggbf.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069a\u006e\u0074\u0046\u006c\u006f\u0061\u0074\u0056\u0061\u006c")
}

func (_dcfg ST_SplitterBarState) String() string {
	switch _dcfg {
	case 0:
		return ""
	case 1:
		return "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"
	case 2:
		return "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064"
	case 3:
		return "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d"
	}
	return ""
}

func NewCT_TLBuildParagraph() *CT_TLBuildParagraph { _abcd := &CT_TLBuildParagraph{}; return _abcd }

func (_bgcg ST_OleObjectFollowColorScheme) String() string {
	switch _bgcg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0066\u0075\u006c\u006c"
	case 3:
		return "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064"
	}
	return ""
}

func NewCT_TLSubShapeId() *CT_TLSubShapeId { _bdbfaa := &CT_TLSubShapeId{}; return _bdbfaa }

func (_ebdcd ST_TLCommandType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bfgc := _g.Attr{}
	_bfgc.Name = name
	switch _ebdcd {
	case ST_TLCommandTypeUnset:
		_bfgc.Value = ""
	case ST_TLCommandTypeEvt:
		_bfgc.Value = "\u0065\u0076\u0074"
	case ST_TLCommandTypeCall:
		_bfgc.Value = "\u0063\u0061\u006c\u006c"
	case ST_TLCommandTypeVerb:
		_bfgc.Value = "\u0076\u0065\u0072\u0062"
	}
	return _bfgc, nil
}

type EG_ShowType struct {

	// Presenter Slide Show Mode
	Present *CT_Empty

	// Browse Slide Show Mode
	Browse *CT_ShowInfoBrowse

	// Kiosk Slide Show Mode
	Kiosk *CT_ShowInfoKiosk
}

func (_ggffd ST_TLAnimateEffectTransition) String() string {
	switch _ggffd {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e"
	case 2:
		return "\u006f\u0075\u0074"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

func NewCT_TLAnimateRotationBehavior() *CT_TLAnimateRotationBehavior {
	_cdef := &CT_TLAnimateRotationBehavior{}
	_cdef.CBhvr = NewCT_TLCommonBehaviorData()
	return _cdef
}

func (_cfgg *CT_Guide) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cfgg.OrientAttr != ST_DirectionUnset {
		_bgfd, _fffgg := _cfgg.OrientAttr.MarshalXMLAttr(_g.Name{Local: "\u006f\u0072\u0069\u0065\u006e\u0074"})
		if _fffgg != nil {
			return _fffgg
		}
		start.Attr = append(start.Attr, _bgfd)
	}
	if _cfgg.PosAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0070\u006f\u0073"}, Value: _ce.Sprintf("\u0025\u0076", *_cfgg.PosAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ebggc ST_TLCommandType) String() string {
	switch _ebggc {
	case 0:
		return ""
	case 1:
		return "\u0065\u0076\u0074"
	case 2:
		return "\u0063\u0061\u006c\u006c"
	case 3:
		return "\u0076\u0065\u0072\u0062"
	}
	return ""
}

func NewAG_ChildSlide() *AG_ChildSlide { _fc := &AG_ChildSlide{}; return _fc }

// ValidateWithPath validates the SldSyncPr and its children, prefixing error messages with path
func (_bdgad *SldSyncPr) ValidateWithPath(path string) error {
	if _adeac := _bdgad.CT_SlideSyncProperties.ValidateWithPath(path); _adeac != nil {
		return _adeac
	}
	return nil
}

// Validate validates the CT_SlideMaster and its children
func (_dbge *CT_SlideMaster) Validate() error {
	return _dbge.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004da\u0073\u0074\u0065\u0072")
}

func NewSldSyncPr() *SldSyncPr {
	_deadg := &SldSyncPr{}
	_deadg.CT_SlideSyncProperties = *NewCT_SlideSyncProperties()
	return _deadg
}

func (_fdagf *ST_TLTimeNodeMasterRelation) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bgbcc, _dabae := d.Token()
	if _dabae != nil {
		return _dabae
	}
	if _gecfc, _acbbd := _bgbcc.(_g.EndElement); _acbbd && _gecfc.Name == start.Name {
		*_fdagf = 1
		return nil
	}
	if _eebgf, _gggag := _bgbcc.(_g.CharData); !_gggag {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgbcc)
	} else {
		switch string(_eebgf) {
		case "":
			*_fdagf = 0
		case "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k":
			*_fdagf = 1
		case "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k":
			*_fdagf = 2
		case "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k":
			*_fdagf = 3
		}
	}
	_bgbcc, _dabae = d.Token()
	if _dabae != nil {
		return _dabae
	}
	if _ecgg, _beac := _bgbcc.(_g.EndElement); _beac && _ecgg.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgbcc)
}

func (_ggfac *CT_NormalViewProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ggfac.ShowOutlineIconsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0068o\u0077\u004f\u0075t\u006c\u0069\u006e\u0065\u0049\u0063\u006f\u006e\u0073"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_ggfac.ShowOutlineIconsAttr))})
	}
	if _ggfac.SnapVertSplitterAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u006ea\u0070\u0056\u0065r\u0074\u0053\u0070\u006c\u0069\u0074\u0074\u0065\u0072"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_ggfac.SnapVertSplitterAttr))})
	}
	if _ggfac.VertBarStateAttr != ST_SplitterBarStateUnset {
		_bfac, _gcfe := _ggfac.VertBarStateAttr.MarshalXMLAttr(_g.Name{Local: "\u0076\u0065\u0072t\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065"})
		if _gcfe != nil {
			return _gcfe
		}
		start.Attr = append(start.Attr, _bfac)
	}
	if _ggfac.HorzBarStateAttr != ST_SplitterBarStateUnset {
		_bcae, _ecab := _ggfac.HorzBarStateAttr.MarshalXMLAttr(_g.Name{Local: "\u0068\u006f\u0072z\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065"})
		if _ecab != nil {
			return _ecab
		}
		start.Attr = append(start.Attr, _bcae)
	}
	if _ggfac.PreferSingleViewAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0070\u0072e\u0066\u0065\u0072S\u0069\u006e\u0067\u006c\u0065\u0056\u0069\u0065\u0077"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_ggfac.PreferSingleViewAttr))})
	}
	e.EncodeToken(start)
	_aaabf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0072\u0065\u0073\u0074\u006f\u0072\u0065d\u004c\u0065\u0066\u0074"}}
	e.EncodeElement(_ggfac.RestoredLeft, _aaabf)
	_aaeg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"}}
	e.EncodeElement(_ggfac.RestoredTop, _aaeg)
	if _ggfac.ExtLst != nil {
		_daab := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ggfac.ExtLst, _daab)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_CustomShowId() *CT_CustomShowId { _gece := &CT_CustomShowId{}; return _gece }

func (_abcac ST_TLAnimateBehaviorCalcMode) ValidateWithPath(path string) error {
	switch _abcac {
	case 0, 1, 2, 3:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abcac))
	}
	return nil
}

func (_gffe *ST_PhotoAlbumFrameShape) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dgacf, _aaaga := d.Token()
	if _aaaga != nil {
		return _aaaga
	}
	if _gdce, _afdae := _dgacf.(_g.EndElement); _afdae && _gdce.Name == start.Name {
		*_gffe = 1
		return nil
	}
	if _aedff, _ffaeb := _dgacf.(_g.CharData); !_ffaeb {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgacf)
	} else {
		switch string(_aedff) {
		case "":
			*_gffe = 0
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031":
			*_gffe = 1
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032":
			*_gffe = 2
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033":
			*_gffe = 3
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034":
			*_gffe = 4
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035":
			*_gffe = 5
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036":
			*_gffe = 6
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037":
			*_gffe = 7
		}
	}
	_dgacf, _aaaga = d.Token()
	if _aaaga != nil {
		return _aaaga
	}
	if _cbagf, _cgcb := _dgacf.(_g.EndElement); _cgcb && _cbagf.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgacf)
}

func (_dggbc ST_PhotoAlbumLayout) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bbbcg := _g.Attr{}
	_bbbcg.Name = name
	switch _dggbc {
	case ST_PhotoAlbumLayoutUnset:
		_bbbcg.Value = ""
	case ST_PhotoAlbumLayoutFitToSlide:
		_bbbcg.Value = "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065"
	case ST_PhotoAlbumLayout1pic:
		_bbbcg.Value = "\u0031\u0070\u0069\u0063"
	case ST_PhotoAlbumLayout2pic:
		_bbbcg.Value = "\u0032\u0070\u0069\u0063"
	case ST_PhotoAlbumLayout4pic:
		_bbbcg.Value = "\u0034\u0070\u0069\u0063"
	case ST_PhotoAlbumLayout1picTitle:
		_bbbcg.Value = "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case ST_PhotoAlbumLayout2picTitle:
		_bbbcg.Value = "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case ST_PhotoAlbumLayout4picTitle:
		_bbbcg.Value = "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce"
	}
	return _bbbcg, nil
}

// Validate validates the CT_Kinsoku and its children
func (_eccc *CT_Kinsoku) Validate() error {
	return _eccc.ValidateWithPath("\u0043\u0054\u005f\u004b\u0069\u006e\u0073\u006f\u006b\u0075")
}

func NewCT_TLAnimVariantStringVal() *CT_TLAnimVariantStringVal {
	_cbgea := &CT_TLAnimVariantStringVal{}
	return _cbgea
}

func (_accba *ST_SplitterBarState) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_accba = 0
	case "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d":
		*_accba = 1
	case "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064":
		*_accba = 2
	case "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d":
		*_accba = 3
	}
	return nil
}

func (_bbdgb *ST_TLAnimateColorSpace) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_bbdgb = 0
	case "\u0072\u0067\u0062":
		*_bbdgb = 1
	case "\u0068\u0073\u006c":
		*_bbdgb = 2
	}
	return nil
}

func (_egead *CT_SlideLayoutIdList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _egead.SldLayoutId != nil {
		_gacb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064"}}
		for _, _cddb := range _egead.SldLayoutId {
			e.EncodeElement(_cddb, _gacb)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_EmbeddedFontList and its children
func (_cgbg *CT_EmbeddedFontList) Validate() error {
	return _cgbg.ValidateWithPath("\u0043\u0054\u005f\u0045mb\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0069\u0073\u0074")
}

type CT_Slide struct {

	// Show Slide in Slide Show
	ShowAttr *bool

	// Common slide data for slides
	CSld *CT_CommonSlideData

	// Color Scheme Map Override
	ClrMapOvr *_f.CT_ColorMappingOverride

	// Slide Transition
	Transition *CT_SlideTransition

	// Slide Timing Information for a Slide
	Timing               *CT_SlideTiming
	ExtLst               *CT_ExtensionListModify
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

type CT_CustomShowId struct {

	// Custom Show Identifier
	IdAttr uint32
}

// Validate validates the CT_CornerDirectionTransition and its children
func (_gafe *CT_CornerDirectionTransition) Validate() error {
	return _gafe.ValidateWithPath("\u0043\u0054\u005f\u0043o\u0072\u006e\u0065\u0072\u0044\u0069\u0072\u0065\u0063\u0074i\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e")
}

// Validate validates the CT_TLAnimVariantIntegerVal and its children
func (_aaga *CT_TLAnimVariantIntegerVal) Validate() error {
	return _aaga.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0049\u006e\u0074\u0065\u0067\u0065r\u0056\u0061\u006c")
}

// ValidateWithPath validates the CT_SlideRelationshipList and its children, prefixing error messages with path
func (_cade *CT_SlideRelationshipList) ValidateWithPath(path string) error {
	for _dcegc, _bebe := range _cade.Sld {
		if _dfee := _bebe.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0053\u006c\u0064\u005b\u0025\u0064\u005d", path, _dcegc)); _dfee != nil {
			return _dfee
		}
	}
	return nil
}

// Validate validates the CT_Rel and its children
func (_efeb *CT_Rel) Validate() error {
	return _efeb.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u006c")
}

// Validate validates the CT_TLAnimVariant and its children
func (_eabde *CT_TLAnimVariant) Validate() error {
	return _eabde.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074")
}

func (_fggab ST_TLAnimateBehaviorValueType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_fbgc := _g.Attr{}
	_fbgc.Name = name
	switch _fggab {
	case ST_TLAnimateBehaviorValueTypeUnset:
		_fbgc.Value = ""
	case ST_TLAnimateBehaviorValueTypeStr:
		_fbgc.Value = "\u0073\u0074\u0072"
	case ST_TLAnimateBehaviorValueTypeNum:
		_fbgc.Value = "\u006e\u0075\u006d"
	case ST_TLAnimateBehaviorValueTypeClr:
		_fbgc.Value = "\u0063\u006c\u0072"
	}
	return _fbgc, nil
}

const (
	ST_TLNextActionTypeUnset ST_TLNextActionType = 0
	ST_TLNextActionTypeNone  ST_TLNextActionType = 1
	ST_TLNextActionTypeSeek  ST_TLNextActionType = 2
)

func (_bgce ST_TLTriggerRuntimeNode) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cadcc := _g.Attr{}
	_cadcc.Name = name
	switch _bgce {
	case ST_TLTriggerRuntimeNodeUnset:
		_cadcc.Value = ""
	case ST_TLTriggerRuntimeNodeFirst:
		_cadcc.Value = "\u0066\u0069\u0072s\u0074"
	case ST_TLTriggerRuntimeNodeLast:
		_cadcc.Value = "\u006c\u0061\u0073\u0074"
	case ST_TLTriggerRuntimeNodeAll:
		_cadcc.Value = "\u0061\u006c\u006c"
	}
	return _cadcc, nil
}

// ValidateWithPath validates the CT_PictureNonVisual and its children, prefixing error messages with path
func (_ddce *CT_PictureNonVisual) ValidateWithPath(path string) error {
	if _gafc := _ddce.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _gafc != nil {
		return _gafc
	}
	if _ddfa := _ddce.CNvPicPr.ValidateWithPath(path + "\u002fC\u004e\u0076\u0050\u0069\u0063\u0050r"); _ddfa != nil {
		return _ddfa
	}
	if _dfda := _ddce.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _dfda != nil {
		return _dfda
	}
	return nil
}

// Validate validates the CT_PrintProperties and its children
func (_gdfd *CT_PrintProperties) Validate() error {
	return _gdfd.ValidateWithPath("\u0043T\u005fP\u0072\u0069\u006e\u0074\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}

func (_bgdda ST_TLBehaviorOverrideType) String() string {
	switch _bgdda {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065"
	}
	return ""
}

func (_eebab *CT_ShowProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ggebad := range start.Attr {
		if _ggebad.Name.Local == "\u006c\u006f\u006f\u0070" {
			_dgec, _fead := _d.ParseBool(_ggebad.Value)
			if _fead != nil {
				return _fead
			}
			_eebab.LoopAttr = &_dgec
			continue
		}
		if _ggebad.Name.Local == "\u0073\u0068\u006f\u0077\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e" {
			_ffca, _abgde := _d.ParseBool(_ggebad.Value)
			if _abgde != nil {
				return _abgde
			}
			_eebab.ShowNarrationAttr = &_ffca
			continue
		}
		if _ggebad.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e" {
			_fadb, _bfba := _d.ParseBool(_ggebad.Value)
			if _bfba != nil {
				return _bfba
			}
			_eebab.ShowAnimationAttr = &_fadb
			continue
		}
		if _ggebad.Name.Local == "\u0075\u0073\u0065\u0054\u0069\u006d\u0069\u006e\u0067\u0073" {
			_dbccc, _gcbc := _d.ParseBool(_ggebad.Value)
			if _gcbc != nil {
				return _gcbc
			}
			_eebab.UseTimingsAttr = &_dbccc
			continue
		}
	}
_fdag:
	for {
		_dcge, _aaaa := d.Token()
		if _aaaa != nil {
			return _aaaa
		}
		switch _bgff := _dcge.(type) {
		case _g.StartElement:
			switch _bgff.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}:
				_eebab.Present = NewCT_Empty()
				if _dged := d.DecodeElement(_eebab.Present, &_bgff); _dged != nil {
					return _dged
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}:
				_eebab.Browse = NewCT_ShowInfoBrowse()
				if _gbcgd := d.DecodeElement(_eebab.Browse, &_bgff); _gbcgd != nil {
					return _gbcgd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}:
				_eebab.Kiosk = NewCT_ShowInfoKiosk()
				if _agec := d.DecodeElement(_eebab.Kiosk, &_bgff); _agec != nil {
					return _agec
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}:
				_eebab.SldAll = NewCT_Empty()
				if _cdbdd := d.DecodeElement(_eebab.SldAll, &_bgff); _cdbdd != nil {
					return _cdbdd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}:
				_eebab.SldRg = NewCT_IndexRange()
				if _gcgf := d.DecodeElement(_eebab.SldRg, &_bgff); _gcgf != nil {
					return _gcgf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_eebab.CustShow = NewCT_CustomShowId()
				if _ffabb := d.DecodeElement(_eebab.CustShow, &_bgff); _ffabb != nil {
					return _ffabb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0065\u006e\u0043\u006c\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0065\u006e\u0043\u006c\u0072"}:
				_eebab.PenClr = _f.NewCT_Color()
				if _gagf := d.DecodeElement(_eebab.PenClr, &_bgff); _gagf != nil {
					return _gagf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eebab.ExtLst = NewCT_ExtensionList()
				if _ggga := d.DecodeElement(_eebab.ExtLst, &_bgff); _ggga != nil {
					return _ggga
				}
			default:
				_e.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bgff.Name)
				if _acccag := d.Skip(); _acccag != nil {
					return _acccag
				}
			}
		case _g.EndElement:
			break _fdag
		case _g.CharData:
		}
	}
	return nil
}

func (_aebdd ST_TLTimeNodeRestartType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_ecfaea := _g.Attr{}
	_ecfaea.Name = name
	switch _aebdd {
	case ST_TLTimeNodeRestartTypeUnset:
		_ecfaea.Value = ""
	case ST_TLTimeNodeRestartTypeAlways:
		_ecfaea.Value = "\u0061\u006c\u0077\u0061\u0079\u0073"
	case ST_TLTimeNodeRestartTypeWhenNotActive:
		_ecfaea.Value = "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065"
	case ST_TLTimeNodeRestartTypeNever:
		_ecfaea.Value = "\u006e\u0065\u0076e\u0072"
	}
	return _ecfaea, nil
}

func (_cfcgb *CT_OutlineViewProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cfcgb.CViewPr = NewCT_CommonViewProperties()
_dgggg:
	for {
		_acebc, _aabdb := d.Token()
		if _aabdb != nil {
			return _aabdb
		}
		switch _bbaac := _acebc.(type) {
		case _g.StartElement:
			switch _bbaac.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _eddc := d.DecodeElement(_cfcgb.CViewPr, &_bbaac); _eddc != nil {
					return _eddc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}:
				_cfcgb.SldLst = NewCT_OutlineViewSlideList()
				if _gfad := d.DecodeElement(_cfcgb.SldLst, &_bbaac); _gfad != nil {
					return _gfad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfcgb.ExtLst = NewCT_ExtensionList()
				if _eaga := d.DecodeElement(_cfcgb.ExtLst, &_bbaac); _eaga != nil {
					return _eaga
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _bbaac.Name)
				if _aacc := d.Skip(); _aacc != nil {
					return _aacc
				}
			}
		case _g.EndElement:
			break _dgggg
		case _g.CharData:
		}
	}
	return nil
}

func (_cbag *CT_EmbeddedFontDataId) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _cbag.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_efgb *CT_Guide) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _bdcgb := range start.Attr {
		if _bdcgb.Name.Local == "\u006f\u0072\u0069\u0065\u006e\u0074" {
			_efgb.OrientAttr.UnmarshalXMLAttr(_bdcgb)
			continue
		}
		if _bdcgb.Name.Local == "\u0070\u006f\u0073" {
			_gaeg, _ggge := ParseUnionST_Coordinate32(_bdcgb.Value)
			if _ggge != nil {
				return _ggge
			}
			_efgb.PosAttr = &_gaeg
			continue
		}
	}
	for {
		_bcce, _gca := d.Token()
		if _gca != nil {
			return _ce.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fG\u0075\u0069\u0064\u0065: \u0025\u0073", _gca)
		}
		if _afee, _fegf := _bcce.(_g.EndElement); _fegf && _afee.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Guide and its children, prefixing error messages with path
func (_dbea *CT_Guide) ValidateWithPath(path string) error {
	if _baef := _dbea.OrientAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0065\u006e\u0074\u0041\u0074\u0074\u0072"); _baef != nil {
		return _baef
	}
	if _dbea.PosAttr != nil {
		if _dcfd := _dbea.PosAttr.ValidateWithPath(path + "\u002f\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _dcfd != nil {
			return _dcfd
		}
	}
	return nil
}

type CT_SlideMaster struct {

	// Preserve Slide Master
	PreserveAttr *bool

	// Common slide data for slide masters
	CSld *CT_CommonSlideData

	// Color Scheme Map
	ClrMap *_f.CT_ColorMapping

	// List of Slide Layouts
	SldLayoutIdLst *CT_SlideLayoutIdList

	// Slide Transition for a Slide Master
	Transition *CT_SlideTransition

	// Slide Timing Information for Slide Masters
	Timing *CT_SlideTiming

	// Header/Footer information for a slide master
	Hf *CT_HeaderFooter

	// Slide Master Text Styles
	TxStyles *CT_SlideMasterTextStyles
	ExtLst   *CT_ExtensionListModify
}

func (_bebd *CT_GroupShapeChoice) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bebd.Sp != nil {
		_cgbbd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u0070"}}
		for _, _ggg := range _bebd.Sp {
			e.EncodeElement(_ggg, _cgbbd)
		}
	}
	if _bebd.GrpSp != nil {
		_fgcf := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0067\u0072\u0070\u0053\u0070"}}
		for _, _fbaf := range _bebd.GrpSp {
			e.EncodeElement(_fbaf, _fgcf)
		}
	}
	if _bebd.GraphicFrame != nil {
		_cdda := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u0061\u006d\u0065"}}
		for _, _abe := range _bebd.GraphicFrame {
			e.EncodeElement(_abe, _cdda)
		}
	}
	if _bebd.CxnSp != nil {
		_dadg := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u0078\u006e\u0053\u0070"}}
		for _, _ccdf := range _bebd.CxnSp {
			e.EncodeElement(_ccdf, _dadg)
		}
	}
	if _bebd.Pic != nil {
		_gdccg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0070i\u0063"}}
		for _, _ddbb := range _bebd.Pic {
			e.EncodeElement(_ddbb, _gdccg)
		}
	}
	if _bebd.ContentPart != nil {
		_affe := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}}
		for _, _ddg := range _bebd.ContentPart {
			e.EncodeElement(_ddg, _affe)
		}
	}
	return nil
}

func NewNotes() *Notes {
	_dgbgfb := &Notes{}
	_dgbgfb.CT_NotesSlide = *NewCT_NotesSlide()
	return _dgbgfb
}

type ST_SplitterBarState byte

func (_gagaef *ST_TLBehaviorAccumulateType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_gagaef = 0
	case "\u006e\u006f\u006e\u0065":
		*_gagaef = 1
	case "\u0061\u006c\u0077\u0061\u0079\u0073":
		*_gagaef = 2
	}
	return nil
}

type CT_Shape struct {

	// Use Background Fill
	UseBgFillAttr *bool

	// Non-Visual Properties for a Shape
	NvSpPr *CT_ShapeNonVisual
	SpPr   *_f.CT_ShapeProperties

	// Shape Style
	Style *_f.CT_ShapeStyle

	// Shape Text Body
	TxBody *_f.CT_TextBody
	ExtLst *CT_ExtensionListModify
}

func NewCmAuthorLst() *CmAuthorLst {
	_gafee := &CmAuthorLst{}
	_gafee.CT_CommentAuthorList = *NewCT_CommentAuthorList()
	return _gafee
}

func NewEG_Background() *EG_Background { _cafb := &EG_Background{}; return _cafb }

// Validate validates the CT_TLByRgbColorTransform and its children
func (_cccga *CT_TLByRgbColorTransform) Validate() error {
	return _cccga.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0042\u0079\u0052\u0067\u0062\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}

const (
	ST_PlaceholderTypeUnset    ST_PlaceholderType = 0
	ST_PlaceholderTypeTitle    ST_PlaceholderType = 1
	ST_PlaceholderTypeBody     ST_PlaceholderType = 2
	ST_PlaceholderTypeCtrTitle ST_PlaceholderType = 3
	ST_PlaceholderTypeSubTitle ST_PlaceholderType = 4
	ST_PlaceholderTypeDt       ST_PlaceholderType = 5
	ST_PlaceholderTypeSldNum   ST_PlaceholderType = 6
	ST_PlaceholderTypeFtr      ST_PlaceholderType = 7
	ST_PlaceholderTypeHdr      ST_PlaceholderType = 8
	ST_PlaceholderTypeObj      ST_PlaceholderType = 9
	ST_PlaceholderTypeChart    ST_PlaceholderType = 10
	ST_PlaceholderTypeTbl      ST_PlaceholderType = 11
	ST_PlaceholderTypeClipArt  ST_PlaceholderType = 12
	ST_PlaceholderTypeDgm      ST_PlaceholderType = 13
	ST_PlaceholderTypeMedia    ST_PlaceholderType = 14
	ST_PlaceholderTypeSldImg   ST_PlaceholderType = 15
	ST_PlaceholderTypePic      ST_PlaceholderType = 16
)

const (
	ST_SlideSizeTypeUnset       ST_SlideSizeType = 0
	ST_SlideSizeTypeScreen4x3   ST_SlideSizeType = 1
	ST_SlideSizeTypeLetter      ST_SlideSizeType = 2
	ST_SlideSizeTypeA4          ST_SlideSizeType = 3
	ST_SlideSizeType35mm        ST_SlideSizeType = 4
	ST_SlideSizeTypeOverhead    ST_SlideSizeType = 5
	ST_SlideSizeTypeBanner      ST_SlideSizeType = 6
	ST_SlideSizeTypeCustom      ST_SlideSizeType = 7
	ST_SlideSizeTypeLedger      ST_SlideSizeType = 8
	ST_SlideSizeTypeA3          ST_SlideSizeType = 9
	ST_SlideSizeTypeB4ISO       ST_SlideSizeType = 10
	ST_SlideSizeTypeB5ISO       ST_SlideSizeType = 11
	ST_SlideSizeTypeB4JIS       ST_SlideSizeType = 12
	ST_SlideSizeTypeB5JIS       ST_SlideSizeType = 13
	ST_SlideSizeTypeHagakiCard  ST_SlideSizeType = 14
	ST_SlideSizeTypeScreen16x9  ST_SlideSizeType = 15
	ST_SlideSizeTypeScreen16x10 ST_SlideSizeType = 16
)

func (_dbdad *ST_TLDiagramBuildType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_dbdad = 0
	case "\u0077\u0068\u006fl\u0065":
		*_dbdad = 1
	case "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
		*_dbdad = 2
	case "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068":
		*_dbdad = 3
	case "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
		*_dbdad = 4
	case "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c":
		*_dbdad = 5
	case "\u0063\u0077":
		*_dbdad = 6
	case "\u0063\u0077\u0049\u006e":
		*_dbdad = 7
	case "\u0063\u0077\u004fu\u0074":
		*_dbdad = 8
	case "\u0063\u0063\u0077":
		*_dbdad = 9
	case "\u0063\u0063\u0077I\u006e":
		*_dbdad = 10
	case "\u0063\u0063\u0077\u004f\u0075\u0074":
		*_dbdad = 11
	case "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067":
		*_dbdad = 12
	case "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg":
		*_dbdad = 13
	case "\u0075\u0070":
		*_dbdad = 14
	case "\u0064\u006f\u0077\u006e":
		*_dbdad = 15
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_dbdad = 16
	case "\u0063\u0075\u0073\u0074":
		*_dbdad = 17
	}
	return nil
}

func (_abea *CT_TLAnimateScaleBehavior) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _abea.ZoomContentsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u007a\u006f\u006fm\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_abea.ZoomContentsAttr))})
	}
	e.EncodeToken(start)
	_gedbe := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_abea.CBhvr, _gedbe)
	if _abea.By != nil {
		_begee := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u0079"}}
		e.EncodeElement(_abea.By, _begee)
	}
	if _abea.From != nil {
		_ecee := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0066\u0072\u006f\u006d"}}
		e.EncodeElement(_abea.From, _ecee)
	}
	if _abea.To != nil {
		_fgfge := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_abea.To, _fgfge)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_efcfe *ST_TLAnimateColorSpace) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_geacb, _eeabc := d.Token()
	if _eeabc != nil {
		return _eeabc
	}
	if _cedce, _dcbge := _geacb.(_g.EndElement); _dcbge && _cedce.Name == start.Name {
		*_efcfe = 1
		return nil
	}
	if _dbef, _fecgge := _geacb.(_g.CharData); !_fecgge {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _geacb)
	} else {
		switch string(_dbef) {
		case "":
			*_efcfe = 0
		case "\u0072\u0067\u0062":
			*_efcfe = 1
		case "\u0068\u0073\u006c":
			*_efcfe = 2
		}
	}
	_geacb, _eeabc = d.Token()
	if _eeabc != nil {
		return _eeabc
	}
	if _dgdcf, _gagfda := _geacb.(_g.EndElement); _gagfda && _dgdcf.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _geacb)
}

// Validate validates the EG_Background and its children
func (_ecddg *EG_Background) Validate() error {
	return _ecddg.ValidateWithPath("\u0045\u0047\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064")
}

func NewCT_TLBuildDiagram() *CT_TLBuildDiagram { _efbdc := &CT_TLBuildDiagram{}; return _efbdc }

type CT_BuildList struct {

	// Build Paragraph
	BldP []*CT_TLBuildParagraph

	// Build Diagram
	BldDgm []*CT_TLBuildDiagram

	// Build Embedded Chart
	BldOleChart []*CT_TLOleBuildChart

	// Build Graphics
	BldGraphic []*CT_TLGraphicalObjectBuild
}

const (
	ST_TLTimeNodePresetClassTypeUnset     ST_TLTimeNodePresetClassType = 0
	ST_TLTimeNodePresetClassTypeEntr      ST_TLTimeNodePresetClassType = 1
	ST_TLTimeNodePresetClassTypeExit      ST_TLTimeNodePresetClassType = 2
	ST_TLTimeNodePresetClassTypeEmph      ST_TLTimeNodePresetClassType = 3
	ST_TLTimeNodePresetClassTypePath      ST_TLTimeNodePresetClassType = 4
	ST_TLTimeNodePresetClassTypeVerb      ST_TLTimeNodePresetClassType = 5
	ST_TLTimeNodePresetClassTypeMediacall ST_TLTimeNodePresetClassType = 6
)

// Validate validates the CT_Connector and its children
func (_deec *CT_Connector) Validate() error {
	return _deec.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072")
}

func (_afcec *ST_PrintColorMode) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fagfgd, _ebcdd := d.Token()
	if _ebcdd != nil {
		return _ebcdd
	}
	if _gebg, _gdefg := _fagfgd.(_g.EndElement); _gdefg && _gebg.Name == start.Name {
		*_afcec = 1
		return nil
	}
	if _ecde, _gdgd := _fagfgd.(_g.CharData); !_gdgd {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fagfgd)
	} else {
		switch string(_ecde) {
		case "":
			*_afcec = 0
		case "\u0062\u0077":
			*_afcec = 1
		case "\u0067\u0072\u0061\u0079":
			*_afcec = 2
		case "\u0063\u006c\u0072":
			*_afcec = 3
		}
	}
	_fagfgd, _ebcdd = d.Token()
	if _ebcdd != nil {
		return _ebcdd
	}
	if _bfegf, _cfeba := _fagfgd.(_g.EndElement); _cfeba && _bfegf.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fagfgd)
}

func (_ccdfa ST_TLBehaviorOverrideType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_ccdfa.String(), start)
}

func (_cceab *ST_TLBehaviorOverrideType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cceab = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_cceab = 1
	case "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065":
		*_cceab = 2
	}
	return nil
}

func NewCT_SplitTransition() *CT_SplitTransition { _acdfe := &CT_SplitTransition{}; return _acdfe }

func NewCT_OutlineViewSlideList() *CT_OutlineViewSlideList {
	_cgea := &CT_OutlineViewSlideList{}
	return _cgea
}

const (
	ST_PrintWhatUnset     ST_PrintWhat = 0
	ST_PrintWhatSlides    ST_PrintWhat = 1
	ST_PrintWhatHandouts1 ST_PrintWhat = 2
	ST_PrintWhatHandouts2 ST_PrintWhat = 3
	ST_PrintWhatHandouts3 ST_PrintWhat = 4
	ST_PrintWhatHandouts4 ST_PrintWhat = 5
	ST_PrintWhatHandouts6 ST_PrintWhat = 6
	ST_PrintWhatHandouts9 ST_PrintWhat = 7
	ST_PrintWhatNotes     ST_PrintWhat = 8
	ST_PrintWhatOutline   ST_PrintWhat = 9
)

func (_debed ST_SlideSizeType) ValidateWithPath(path string) error {
	switch _debed {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_debed))
	}
	return nil
}

func NewCT_ViewProperties() *CT_ViewProperties { _ffbg := &CT_ViewProperties{}; return _ffbg }

func NewCT_SlideTransition() *CT_SlideTransition { _cgfec := &CT_SlideTransition{}; return _cgfec }

func ParseStdlibTime(s string) (_b.Time, error) { return _f.ParseStdlibTime(s) }

func (_aeea *CT_OleObjectLink) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _aeea.UpdateAutomaticAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0075p\u0064a\u0074\u0065\u0041\u0075\u0074\u006f\u006d\u0061\u0074\u0069\u0063"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_aeea.UpdateAutomaticAttr))})
	}
	e.EncodeToken(start)
	if _aeea.ExtLst != nil {
		_fcbdc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aeea.ExtLst, _fcbdc)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_InOutTransition and its children, prefixing error messages with path
func (_acee *CT_InOutTransition) ValidateWithPath(path string) error {
	if _bfbcf := _acee.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _bfbcf != nil {
		return _bfbcf
	}
	return nil
}

func (_baccf ST_PlaceholderType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_baccf.String(), start)
}

func (_cggab ST_TLBehaviorAccumulateType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_ggcac := _g.Attr{}
	_ggcac.Name = name
	switch _cggab {
	case ST_TLBehaviorAccumulateTypeUnset:
		_ggcac.Value = ""
	case ST_TLBehaviorAccumulateTypeNone:
		_ggcac.Value = "\u006e\u006f\u006e\u0065"
	case ST_TLBehaviorAccumulateTypeAlways:
		_ggcac.Value = "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return _ggcac, nil
}

// ValidateWithPath validates the CT_OleObjectEmbed and its children, prefixing error messages with path
func (_cgdd *CT_OleObjectEmbed) ValidateWithPath(path string) error {
	if _dcdfg := _cgdd.FollowColorSchemeAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006clo\u0077\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006d\u0065\u0041\u0074t\u0072"); _dcdfg != nil {
		return _dcdfg
	}
	if _cgdd.ExtLst != nil {
		if _gbgaa := _cgdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbgaa != nil {
			return _gbgaa
		}
	}
	return nil
}

type ST_Direction byte

func (_ceded ST_TLTimeNodeSyncType) ValidateWithPath(path string) error {
	switch _ceded {
	case 0, 1, 2:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ceded))
	}
	return nil
}

func NewEG_ShowType() *EG_ShowType { _fdad := &EG_ShowType{}; return _fdad }

func NewCT_TLShapeTargetElement() *CT_TLShapeTargetElement {
	_fcegf := &CT_TLShapeTargetElement{}
	return _fcegf
}

func (_bfacf ST_Direction) String() string {
	switch _bfacf {
	case 0:
		return ""
	case 1:
		return "\u0068\u006f\u0072\u007a"
	case 2:
		return "\u0076\u0065\u0072\u0074"
	}
	return ""
}

type CT_NotesViewProperties struct {

	// Common Slide View Properties
	CSldViewPr *CT_CommonSlideViewProperties
	ExtLst     *CT_ExtensionList
}

func (_aceed ST_TLBehaviorTransformType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_aceed.String(), start)
}

func NewCT_TLTimeAnimateValue() *CT_TLTimeAnimateValue {
	_gbge := &CT_TLTimeAnimateValue{}
	return _gbge
}

func NewCT_GuideList() *CT_GuideList { _gab := &CT_GuideList{}; return _gab }

type SldMaster struct{ CT_SlideMaster }

// Validate validates the CT_TLAnimVariantStringVal and its children
func (_abdef *CT_TLAnimVariantStringVal) Validate() error {
	return _abdef.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072i\u0061n\u0074S\u0074\u0072\u0069\u006e\u0067\u0056\u0061l")
}

func (_fdacd *ST_TLOleChartBuildType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dgegb, _gdbggg := d.Token()
	if _gdbggg != nil {
		return _gdbggg
	}
	if _beggg, _gbfcg := _dgegb.(_g.EndElement); _gbfcg && _beggg.Name == start.Name {
		*_fdacd = 1
		return nil
	}
	if _gaebg, _fdfea := _dgegb.(_g.CharData); !_fdfea {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgegb)
	} else {
		switch string(_gaebg) {
		case "":
			*_fdacd = 0
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_fdacd = 1
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_fdacd = 2
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_fdacd = 3
		case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
			*_fdacd = 4
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
			*_fdacd = 5
		}
	}
	_dgegb, _gdbggg = d.Token()
	if _gdbggg != nil {
		return _gdbggg
	}
	if _bebde, _egfcd := _dgegb.(_g.EndElement); _egfcd && _bebde.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgegb)
}

func (_fbged *CT_TLTimeAnimateValue) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _aagag := range start.Attr {
		if _aagag.Name.Local == "\u0074\u006d" {
			_ebddc, _ecfdg := ParseUnionST_TLTimeAnimateValueTime(_aagag.Value)
			if _ecfdg != nil {
				return _ecfdg
			}
			_fbged.TmAttr = &_ebddc
			continue
		}
		if _aagag.Name.Local == "\u0066\u006d\u006c\u0061" {
			_ecfbb, _fbfff := _aagag.Value, error(nil)
			if _fbfff != nil {
				return _fbfff
			}
			_fbged.FmlaAttr = &_ecfbb
			continue
		}
	}
_fcgf:
	for {
		_fggffg, _bgea := d.Token()
		if _bgea != nil {
			return _bgea
		}
		switch _efacf := _fggffg.(type) {
		case _g.StartElement:
			switch _efacf.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0076\u0061\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c"}:
				_fbged.Val = NewCT_TLAnimVariant()
				if _gefc := d.DecodeElement(_fbged.Val, &_efacf); _gefc != nil {
					return _gefc
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0020\u0025\u0076", _efacf.Name)
				if _efefg := d.Skip(); _efefg != nil {
					return _efefg
				}
			}
		case _g.EndElement:
			break _fcgf
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Slide and its children, prefixing error messages with path
func (_ecfb *CT_Slide) ValidateWithPath(path string) error {
	if _gbcf := _ecfb.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _gbcf != nil {
		return _gbcf
	}
	if _ecfb.ClrMapOvr != nil {
		if _egadc := _ecfb.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _egadc != nil {
			return _egadc
		}
	}
	if _ecfb.Transition != nil {
		if _aafg := _ecfb.Transition.ValidateWithPath(path + "/\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"); _aafg != nil {
			return _aafg
		}
	}
	if _ecfb.Timing != nil {
		if _abgc := _ecfb.Timing.ValidateWithPath(path + "\u002fT\u0069\u006d\u0069\u006e\u0067"); _abgc != nil {
			return _abgc
		}
	}
	if _ecfb.ExtLst != nil {
		if _ddgf := _ecfb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ddgf != nil {
			return _ddgf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLAnimateColorBehavior and its children, prefixing error messages with path
func (_dbac *CT_TLAnimateColorBehavior) ValidateWithPath(path string) error {
	if _cbacc := _dbac.ClrSpcAttr.ValidateWithPath(path + "/\u0043\u006c\u0072\u0053\u0070\u0063\u0041\u0074\u0074\u0072"); _cbacc != nil {
		return _cbacc
	}
	if _dccfa := _dbac.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _dccfa != nil {
		return _dccfa
	}
	if _edcb := _dbac.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _edcb != nil {
		return _edcb
	}
	if _dbac.By != nil {
		if _fdgff := _dbac.By.ValidateWithPath(path + "\u002f\u0042\u0079"); _fdgff != nil {
			return _fdgff
		}
	}
	if _dbac.From != nil {
		if _dbaab := _dbac.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _dbaab != nil {
			return _dbaab
		}
	}
	if _dbac.To != nil {
		if _egbe := _dbac.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _egbe != nil {
			return _egbe
		}
	}
	return nil
}

func ParseUnionST_TransitionEightDirectionType(s string) (ST_TransitionEightDirectionType, error) {
	return ST_TransitionEightDirectionType{}, nil
}

func (_bafg *CT_SlideTransition) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _bafg.SpdAttr != ST_TransitionSpeedUnset {
		_abccf, _acga := _bafg.SpdAttr.MarshalXMLAttr(_g.Name{Local: "\u0073\u0070\u0064"})
		if _acga != nil {
			return _acga
		}
		start.Attr = append(start.Attr, _abccf)
	}
	if _bafg.AdvClickAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u0064\u0076\u0043\u006c\u0069\u0063\u006b"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_bafg.AdvClickAttr))})
	}
	if _bafg.AdvTmAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u0064\u0076T\u006d"}, Value: _ce.Sprintf("\u0025\u0076", *_bafg.AdvTmAttr)})
	}
	e.EncodeToken(start)
	if _bafg.Choice != nil {
		_bafg.Choice.MarshalXML(e, _g.StartElement{})
	}
	if _bafg.SndAc != nil {
		_fbeba := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0073\u006e\u0064\u0041\u0063"}}
		e.EncodeElement(_bafg.SndAc, _fbeba)
	}
	if _bafg.ExtLst != nil {
		_geeb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bafg.ExtLst, _geeb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GroupShapeChoice and its children
func (_aabe *CT_GroupShapeChoice) Validate() error {
	return _aabe.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065")
}

const (
	ST_TLAnimateBehaviorValueTypeUnset ST_TLAnimateBehaviorValueType = 0
	ST_TLAnimateBehaviorValueTypeStr   ST_TLAnimateBehaviorValueType = 1
	ST_TLAnimateBehaviorValueTypeNum   ST_TLAnimateBehaviorValueType = 2
	ST_TLAnimateBehaviorValueTypeClr   ST_TLAnimateBehaviorValueType = 3
)

type ST_TLOleChartBuildType byte

func NewCT_Control() *CT_Control { _face := &CT_Control{}; return _face }

type CT_PhotoAlbum struct {

	// Black and White
	BwAttr *bool

	// Show/Hide Captions
	ShowCaptionsAttr *bool

	// Photo Album Layout
	LayoutAttr ST_PhotoAlbumLayout

	// Frame Type
	FrameAttr ST_PhotoAlbumFrameShape
	ExtLst    *CT_ExtensionList
}

func NewAG_TLBuild() *AG_TLBuild { _fgg := &AG_TLBuild{}; return _fgg }

func (_eaade *EG_Background) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _eaade.BgPr != nil {
		_dfdd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u0067\u0050\u0072"}}
		e.EncodeElement(_eaade.BgPr, _dfdd)
	}
	if _eaade.BgRef != nil {
		_gbbda := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0062\u0067\u0052\u0065\u0066"}}
		e.EncodeElement(_eaade.BgRef, _gbbda)
	}
	return nil
}

// ValidateWithPath validates the CT_WheelTransition and its children, prefixing error messages with path
func (_fbaad *CT_WheelTransition) ValidateWithPath(path string) error { return nil }

type CT_SlideSyncProperties struct {

	// Server's Slide File ID
	ServerSldIdAttr string

	// Server's Slide File's modification date/time
	ServerSldModifiedTimeAttr _b.Time

	// Client Slide Insertion date/time
	ClientInsertedTimeAttr _b.Time
	ExtLst                 *CT_ExtensionList
}

// ValidateWithPath validates the CT_SlideSorterViewProperties and its children, prefixing error messages with path
func (_gcfgd *CT_SlideSorterViewProperties) ValidateWithPath(path string) error {
	if _ccfbe := _gcfgd.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _ccfbe != nil {
		return _ccfbe
	}
	if _gcfgd.ExtLst != nil {
		if _gfaa := _gcfgd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfaa != nil {
			return _gfaa
		}
	}
	return nil
}

// Validate validates the PresentationPr and its children
func (_eacfa *PresentationPr) Validate() error {
	return _eacfa.ValidateWithPath("\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u0050\u0072")
}

func (_cabdc ST_TLAnimateMotionPathEditMode) ValidateWithPath(path string) error {
	switch _cabdc {
	case 0, 1, 2:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cabdc))
	}
	return nil
}

// ValidateWithPath validates the CT_TLAnimVariantFloatVal and its children, prefixing error messages with path
func (_gfage *CT_TLAnimVariantFloatVal) ValidateWithPath(path string) error { return nil }

func NewCT_EightDirectionTransition() *CT_EightDirectionTransition {
	_cabc := &CT_EightDirectionTransition{}
	return _cabc
}

type CT_CommonSlideData struct {

	// Name
	NameAttr *string

	// Slide Background
	Bg *CT_Background

	// Shape Tree
	SpTree *CT_GroupShape

	// Customer Data List
	CustDataLst *CT_CustomerDataList

	// List of controls
	Controls *CT_ControlList
	ExtLst   *CT_ExtensionList
}

func NewCT_HeaderFooter() *CT_HeaderFooter { _ddcb := &CT_HeaderFooter{}; return _ddcb }

func (_dcddg ST_TLAnimateEffectTransition) ValidateWithPath(path string) error {
	switch _dcddg {
	case 0, 1, 2, 3:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcddg))
	}
	return nil
}

// ValidateWithPath validates the CT_GraphicalObjectFrame and its children, prefixing error messages with path
func (_bfcd *CT_GraphicalObjectFrame) ValidateWithPath(path string) error {
	if _fccf := _bfcd.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _fccf != nil {
		return _fccf
	}
	if _dddf := _bfcd.NvGraphicFramePr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"); _dddf != nil {
		return _dddf
	}
	if _gdccf := _bfcd.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _gdccf != nil {
		return _gdccf
	}
	if _eabc := _bfcd.Graphic.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063"); _eabc != nil {
		return _eabc
	}
	if _bfcd.ExtLst != nil {
		if _eca := _bfcd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eca != nil {
			return _eca
		}
	}
	return nil
}

func NewCT_Guide() *CT_Guide { _ecbbf := &CT_Guide{}; return _ecbbf }

func (_eeed *CT_Connector) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_gaeb := _g.StartElement{Name: _g.Name{Local: "p\u003a\u006e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_eeed.NvCxnSpPr, _gaeb)
	_eged := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_eeed.SpPr, _eged)
	if _eeed.Style != nil {
		_adg := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_eeed.Style, _adg)
	}
	if _eeed.ExtLst != nil {
		_gcb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eeed.ExtLst, _gcb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ceee ST_PlaceholderSize) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cbcd := _g.Attr{}
	_cbcd.Name = name
	switch _ceee {
	case ST_PlaceholderSizeUnset:
		_cbcd.Value = ""
	case ST_PlaceholderSizeFull:
		_cbcd.Value = "\u0066\u0075\u006c\u006c"
	case ST_PlaceholderSizeHalf:
		_cbcd.Value = "\u0068\u0061\u006c\u0066"
	case ST_PlaceholderSizeQuarter:
		_cbcd.Value = "\u0071u\u0061\u0072\u0074\u0065\u0072"
	}
	return _cbcd, nil
}

type CT_NotesMaster struct {

	// Common Slide Data
	CSld *CT_CommonSlideData

	// Color Scheme Map
	ClrMap *_f.CT_ColorMapping

	// Header/Footer Information for a Notes Master
	Hf *CT_HeaderFooter

	// Notes Text Style
	NotesStyle *_f.CT_TextListStyle
	ExtLst     *CT_ExtensionListModify
}

// ValidateWithPath validates the CT_ShowInfoKiosk and its children, prefixing error messages with path
func (_gadcf *CT_ShowInfoKiosk) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_OleObject and its children
func (_fcbg *CT_OleObject) Validate() error {
	return _fcbg.ValidateWithPath("\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074")
}

func (_eefd *CT_NormalViewPortion) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gbgg := range start.Attr {
		if _gbgg.Name.Local == "\u0073\u007a" {
			_cedg, _dbfd := ParseUnionST_PositiveFixedPercentage(_gbgg.Value)
			if _dbfd != nil {
				return _dbfd
			}
			_eefd.SzAttr = _cedg
			continue
		}
		if _gbgg.Name.Local == "\u0061\u0075\u0074\u006f\u0041\u0064\u006a\u0075\u0073\u0074" {
			_gdcg, _degce := _d.ParseBool(_gbgg.Value)
			if _degce != nil {
				return _degce
			}
			_eefd.AutoAdjustAttr = &_gdcg
			continue
		}
	}
	for {
		_abcc, _cafcb := d.Token()
		if _cafcb != nil {
			return _ce.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004e\u006f\u0072\u006da\u006cV\u0069\u0065\u0077\u0050\u006f\u0072\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _cafcb)
		}
		if _bebb, _fcbba := _abcc.(_g.EndElement); _fcbba && _bebb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_eccff ST_TLAnimateMotionBehaviorOrigin) Validate() error { return _eccff.ValidateWithPath("") }

func (_deac *CT_Connector) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_deac.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_deac.SpPr = _f.NewCT_ShapeProperties()
_ggce:
	for {
		_egbb, _dbcec := d.Token()
		if _dbcec != nil {
			return _dbcec
		}
		switch _bfcg := _egbb.(type) {
		case _g.StartElement:
			switch _bfcg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}:
				if _efgc := d.DecodeElement(_deac.NvCxnSpPr, &_bfcg); _efgc != nil {
					return _efgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _bcea := d.DecodeElement(_deac.SpPr, &_bfcg); _bcea != nil {
					return _bcea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_deac.Style = _f.NewCT_ShapeStyle()
				if _bef := d.DecodeElement(_deac.Style, &_bfcg); _bef != nil {
					return _bef
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_deac.ExtLst = NewCT_ExtensionListModify()
				if _ebgg := d.DecodeElement(_deac.ExtLst, &_bfcg); _ebgg != nil {
					return _ebgg
				}
			default:
				_e.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006en\u0065\u0063\u0074\u006f\u0072\u0020\u0025\u0076", _bfcg.Name)
				if _efea := d.Skip(); _efea != nil {
					return _efea
				}
			}
		case _g.EndElement:
			break _ggce
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Connector and its children, prefixing error messages with path
func (_egbg *CT_Connector) ValidateWithPath(path string) error {
	if _gdgb := _egbg.NvCxnSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _gdgb != nil {
		return _gdgb
	}
	if _fdda := _egbg.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _fdda != nil {
		return _fdda
	}
	if _egbg.Style != nil {
		if _ade := _egbg.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _ade != nil {
			return _ade
		}
	}
	if _egbg.ExtLst != nil {
		if _bdg := _egbg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bdg != nil {
			return _bdg
		}
	}
	return nil
}

// Validate validates the CT_TLAnimateColorBehavior and its children
func (_ccedce *CT_TLAnimateColorBehavior) Validate() error {
	return _ccedce.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065C\u006fl\u006fr\u0042\u0065\u0068\u0061\u0076\u0069\u006fr")
}

// ValidateWithPath validates the SldMaster and its children, prefixing error messages with path
func (_gbfag *SldMaster) ValidateWithPath(path string) error {
	if _cgba := _gbfag.CT_SlideMaster.ValidateWithPath(path); _cgba != nil {
		return _cgba
	}
	return nil
}

// ValidateWithPath validates the CT_TLAnimateEffectBehavior and its children, prefixing error messages with path
func (_cebdc *CT_TLAnimateEffectBehavior) ValidateWithPath(path string) error {
	if _fcfe := _cebdc.TransitionAttr.ValidateWithPath(path + "\u002fT\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _fcfe != nil {
		return _fcfe
	}
	if _ddfab := _cebdc.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _ddfab != nil {
		return _ddfab
	}
	if _cebdc.Progress != nil {
		if _dbdce := _cebdc.Progress.ValidateWithPath(path + "\u002fP\u0072\u006f\u0067\u0072\u0065\u0073s"); _dbdce != nil {
			return _dbdce
		}
	}
	return nil
}

func (_gbbfa *CT_OleObject) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gbbfa.Choice = NewCT_OleObjectChoice()
	for _, _bebf := range start.Attr {
		if _bebf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bebf.Name.Local == "\u0069\u0064" {
			_bcef, _agfa := _bebf.Value, error(nil)
			if _agfa != nil {
				return _agfa
			}
			_gbbfa.IdAttr = &_bcef
			continue
		}
		if _bebf.Name.Local == "\u0073\u0070\u0069\u0064" {
			_cbbcf, _ecaf := _bebf.Value, error(nil)
			if _ecaf != nil {
				return _ecaf
			}
			_gbbfa.SpidAttr = &_cbbcf
			continue
		}
		if _bebf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gafge, _fafg := _bebf.Value, error(nil)
			if _fafg != nil {
				return _fafg
			}
			_gbbfa.NameAttr = &_gafge
			continue
		}
		if _bebf.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_bdee, _eagec := _d.ParseBool(_bebf.Value)
			if _eagec != nil {
				return _eagec
			}
			_gbbfa.ShowAsIconAttr = &_bdee
			continue
		}
		if _bebf.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_cgec, _fcfc := _bebf.Value, error(nil)
			if _fcfc != nil {
				return _fcfc
			}
			_gbbfa.ProgIdAttr = &_cgec
			continue
		}
		if _bebf.Name.Local == "\u0069\u006d\u0067\u0057" {
			_aedf, _bfbdd := _d.ParseInt(_bebf.Value, 10, 32)
			if _bfbdd != nil {
				return _bfbdd
			}
			_dfbc := int32(_aedf)
			_gbbfa.ImgWAttr = &_dfbc
			continue
		}
		if _bebf.Name.Local == "\u0069\u006d\u0067\u0048" {
			_dcbe, _adad := _d.ParseInt(_bebf.Value, 10, 32)
			if _adad != nil {
				return _adad
			}
			_egaf := int32(_dcbe)
			_gbbfa.ImgHAttr = &_egaf
			continue
		}
	}
_cgg:
	for {
		_efba, _bdfac := d.Token()
		if _bdfac != nil {
			return _bdfac
		}
		switch _ggbb := _efba.(type) {
		case _g.StartElement:
			switch _ggbb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}:
				_gbbfa.Choice = NewCT_OleObjectChoice()
				if _efff := d.DecodeElement(&_gbbfa.Choice.Embed, &_ggbb); _efff != nil {
					return _efff
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}:
				_gbbfa.Choice = NewCT_OleObjectChoice()
				if _agaga := d.DecodeElement(&_gbbfa.Choice.Link, &_ggbb); _agaga != nil {
					return _agaga
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_gbbfa.Pic = NewCT_Picture()
				if _baed := d.DecodeElement(_gbbfa.Pic, &_ggbb); _baed != nil {
					return _baed
				}
			default:
				_e.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_O\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076", _ggbb.Name)
				if _adgc := d.Skip(); _adgc != nil {
					return _adgc
				}
			}
		case _g.EndElement:
			break _cgg
		case _g.CharData:
		}
	}
	return nil
}

func (_dffa ST_TLNextActionType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_dffa.String(), start)
}

func (_fcafb *CT_CustomerDataList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _fcafb.CustData != nil {
		_efee := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061"}}
		for _, _beg := range _fcafb.CustData {
			e.EncodeElement(_beg, _efee)
		}
	}
	if _fcafb.Tags != nil {
		_ged := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0074\u0061\u0067\u0073"}}
		e.EncodeElement(_fcafb.Tags, _ged)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the NotesMaster and its children, prefixing error messages with path
func (_gbcad *NotesMaster) ValidateWithPath(path string) error {
	if _edaab := _gbcad.CT_NotesMaster.ValidateWithPath(path); _edaab != nil {
		return _edaab
	}
	return nil
}

// Validate validates the CT_GraphicalObjectFrame and its children
func (_bfcb *CT_GraphicalObjectFrame) Validate() error {
	return _bfcb.ValidateWithPath("\u0043\u0054\u005fGr\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065")
}

func (_ecgce ST_TLTimeNodePresetClassType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_ecgce.String(), start)
}

type CT_NormalViewProperties struct {

	// Show Outline Icons in Normal View
	ShowOutlineIconsAttr *bool

	// Snap Vertical Splitter
	SnapVertSplitterAttr *bool

	// State of the Vertical Splitter Bar
	VertBarStateAttr ST_SplitterBarState

	// State of the Horizontal Splitter Bar
	HorzBarStateAttr ST_SplitterBarState

	// Prefer Single View
	PreferSingleViewAttr *bool

	// Normal View Restored Left Properties
	RestoredLeft *CT_NormalViewPortion

	// Normal View Restored Top Properties
	RestoredTop *CT_NormalViewPortion
	ExtLst      *CT_ExtensionList
}

func (_cfddg ST_TLTimeNodeFillType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_bgcfd := _g.Attr{}
	_bgcfd.Name = name
	switch _cfddg {
	case ST_TLTimeNodeFillTypeUnset:
		_bgcfd.Value = ""
	case ST_TLTimeNodeFillTypeRemove:
		_bgcfd.Value = "\u0072\u0065\u006d\u006f\u0076\u0065"
	case ST_TLTimeNodeFillTypeFreeze:
		_bgcfd.Value = "\u0066\u0072\u0065\u0065\u007a\u0065"
	case ST_TLTimeNodeFillTypeHold:
		_bgcfd.Value = "\u0068\u006f\u006c\u0064"
	case ST_TLTimeNodeFillTypeTransition:
		_bgcfd.Value = "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"
	}
	return _bgcfd, nil
}

// ValidateWithPath validates the CT_CustomerDataList and its children, prefixing error messages with path
func (_gcc *CT_CustomerDataList) ValidateWithPath(path string) error {
	for _cfaa, _ebee := range _gcc.CustData {
		if _bacac := _ebee.ValidateWithPath(_ce.Sprintf("\u0025s\u002fC\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u005b\u0025\u0064\u005d", path, _cfaa)); _bacac != nil {
			return _bacac
		}
	}
	if _gcc.Tags != nil {
		if _fgbe := _gcc.Tags.ValidateWithPath(path + "\u002f\u0054\u0061g\u0073"); _fgbe != nil {
			return _fgbe
		}
	}
	return nil
}

// Validate validates the CT_SlideTransitionChoice and its children
func (_egfd *CT_SlideTransitionChoice) Validate() error {
	return _egfd.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u0054\u0072\u0061\u006e\u0073i\u0074\u0069\u006f\u006e\u0043\u0068\u006f\u0069\u0063\u0065")
}

func ParseUnionST_Coordinate32(s string) (_f.ST_Coordinate32, error) {
	return _f.ParseUnionST_Coordinate32(s)
}

func (_aaff *CT_NotesMasterIdList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _aaff.NotesMasterId != nil {
		_aggb := _g.StartElement{Name: _g.Name{Local: "\u0070:\u006eo\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}}
		e.EncodeElement(_aaff.NotesMasterId, _aggb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_cgebd ST_TLTimeNodeType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_fddff := _g.Attr{}
	_fddff.Name = name
	switch _cgebd {
	case ST_TLTimeNodeTypeUnset:
		_fddff.Value = ""
	case ST_TLTimeNodeTypeClickEffect:
		_fddff.Value = "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074"
	case ST_TLTimeNodeTypeWithEffect:
		_fddff.Value = "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074"
	case ST_TLTimeNodeTypeAfterEffect:
		_fddff.Value = "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074"
	case ST_TLTimeNodeTypeMainSeq:
		_fddff.Value = "\u006da\u0069\u006e\u0053\u0065\u0071"
	case ST_TLTimeNodeTypeInteractiveSeq:
		_fddff.Value = "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071"
	case ST_TLTimeNodeTypeClickPar:
		_fddff.Value = "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072"
	case ST_TLTimeNodeTypeWithGroup:
		_fddff.Value = "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p"
	case ST_TLTimeNodeTypeAfterGroup:
		_fddff.Value = "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070"
	case ST_TLTimeNodeTypeTmRoot:
		_fddff.Value = "\u0074\u006d\u0052\u006f\u006f\u0074"
	}
	return _fddff, nil
}

func (_ebgbe *CT_TLTriggerTimeNodeID) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0076\u0061\u006c"}, Value: _ce.Sprintf("\u0025\u0076", _ebgbe.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_bccde *Sld) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0073l\u0064"
	return _bccde.CT_Slide.MarshalXML(e, start)
}

func (_ccbge *CT_ExtensionListModify) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _aabd := range start.Attr {
		if _aabd.Name.Local == "\u006d\u006f\u0064" {
			_abc, _gfed := _d.ParseBool(_aabd.Value)
			if _gfed != nil {
				return _gfed
			}
			_ccbge.ModAttr = &_abc
			continue
		}
	}
_fag:
	for {
		_eage, _acge := d.Token()
		if _acge != nil {
			return _acge
		}
		switch _aeag := _eage.(type) {
		case _g.StartElement:
			switch _aeag.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_ggee := NewCT_Extension()
				if _dabb := d.DecodeElement(_ggee, &_aeag); _dabb != nil {
					return _dabb
				}
				_ccbge.Ext = append(_ccbge.Ext, _ggee)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0045\u0078\u0074\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u004d\u006f\u0064\u0069\u0066\u0079\u0020\u0025\u0076", _aeag.Name)
				if _bab := d.Skip(); _bab != nil {
					return _bab
				}
			}
		case _g.EndElement:
			break _fag
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_NormalViewPortion() *CT_NormalViewPortion {
	_eaebf := &CT_NormalViewPortion{}
	return _eaebf
}

func (_aca *CT_Background) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _eg := range start.Attr {
		if _eg.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_aca.BwModeAttr.UnmarshalXMLAttr(_eg)
			continue
		}
	}
_dac:
	for {
		_bdd, _fegg := d.Token()
		if _fegg != nil {
			return _fegg
		}
		switch _fgb := _bdd.(type) {
		case _g.StartElement:
			switch _fgb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}:
				_aca.BgPr = NewCT_BackgroundProperties()
				if _bbg := d.DecodeElement(_aca.BgPr, &_fgb); _bbg != nil {
					return _bbg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}:
				_aca.BgRef = _f.NewCT_StyleMatrixReference()
				if _bbc := d.DecodeElement(_aca.BgRef, &_fgb); _bbc != nil {
					return _bbc
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042a\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064 \u0025\u0076", _fgb.Name)
				if _agb := d.Skip(); _agb != nil {
					return _agb
				}
			}
		case _g.EndElement:
			break _dac
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupShapeNonVisual and its children, prefixing error messages with path
func (_egaa *CT_GroupShapeNonVisual) ValidateWithPath(path string) error {
	if _ddea := _egaa.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _ddea != nil {
		return _ddea
	}
	if _cegd := _egaa.CNvGrpSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _cegd != nil {
		return _cegd
	}
	if _efde := _egaa.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _efde != nil {
		return _efde
	}
	return nil
}

func (_dbebe ST_TLTimeIndefinite) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_dbebe.String(), start)
}

func (_efcgd ST_TLAnimateBehaviorValueType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_efcgd.String(), start)
}

const (
	ST_TLAnimateMotionBehaviorOriginUnset  ST_TLAnimateMotionBehaviorOrigin = 0
	ST_TLAnimateMotionBehaviorOriginParent ST_TLAnimateMotionBehaviorOrigin = 1
	ST_TLAnimateMotionBehaviorOriginLayout ST_TLAnimateMotionBehaviorOrigin = 2
)

func NewCT_TLIterateIntervalPercentage() *CT_TLIterateIntervalPercentage {
	_affd := &CT_TLIterateIntervalPercentage{}
	return _affd
}

func (_bbac *CT_NotesMasterIdListEntry) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _bbac.IdAttr)})
	e.EncodeToken(start)
	if _bbac.ExtLst != nil {
		_gbdbd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bbac.ExtLst, _gbdbd)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TransitionStartSoundAction and its children, prefixing error messages with path
func (_ebgd *CT_TransitionStartSoundAction) ValidateWithPath(path string) error {
	if _bfgg := _ebgd.Snd.ValidateWithPath(path + "\u002f\u0053\u006e\u0064"); _bfgg != nil {
		return _bfgg
	}
	return nil
}

func (_fffdf ST_TLParaBuildType) String() string {
	switch _fffdf {
	case 0:
		return ""
	case 1:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case 2:
		return "\u0070"
	case 3:
		return "\u0063\u0075\u0073\u0074"
	case 4:
		return "\u0077\u0068\u006fl\u0065"
	}
	return ""
}

func (_dddbd *ST_PlaceholderType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gabc, _afdec := d.Token()
	if _afdec != nil {
		return _afdec
	}
	if _gdbge, _fcfgb := _gabc.(_g.EndElement); _fcfgb && _gdbge.Name == start.Name {
		*_dddbd = 1
		return nil
	}
	if _ecfbbe, _bfbabg := _gabc.(_g.CharData); !_bfbabg {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gabc)
	} else {
		switch string(_ecfbbe) {
		case "":
			*_dddbd = 0
		case "\u0074\u0069\u0074l\u0065":
			*_dddbd = 1
		case "\u0062\u006f\u0064\u0079":
			*_dddbd = 2
		case "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065":
			*_dddbd = 3
		case "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065":
			*_dddbd = 4
		case "\u0064\u0074":
			*_dddbd = 5
		case "\u0073\u006c\u0064\u004e\u0075\u006d":
			*_dddbd = 6
		case "\u0066\u0074\u0072":
			*_dddbd = 7
		case "\u0068\u0064\u0072":
			*_dddbd = 8
		case "\u006f\u0062\u006a":
			*_dddbd = 9
		case "\u0063\u0068\u0061r\u0074":
			*_dddbd = 10
		case "\u0074\u0062\u006c":
			*_dddbd = 11
		case "\u0063l\u0069\u0070\u0041\u0072\u0074":
			*_dddbd = 12
		case "\u0064\u0067\u006d":
			*_dddbd = 13
		case "\u006d\u0065\u0064i\u0061":
			*_dddbd = 14
		case "\u0073\u006c\u0064\u0049\u006d\u0067":
			*_dddbd = 15
		case "\u0070\u0069\u0063":
			*_dddbd = 16
		}
	}
	_gabc, _afdec = d.Token()
	if _afdec != nil {
		return _afdec
	}
	if _adfbb, _bcbgd := _gabc.(_g.EndElement); _bcbgd && _adfbb.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gabc)
}

const (
	ST_TLAnimateBehaviorCalcModeUnset    ST_TLAnimateBehaviorCalcMode = 0
	ST_TLAnimateBehaviorCalcModeDiscrete ST_TLAnimateBehaviorCalcMode = 1
	ST_TLAnimateBehaviorCalcModeLin      ST_TLAnimateBehaviorCalcMode = 2
	ST_TLAnimateBehaviorCalcModeFmla     ST_TLAnimateBehaviorCalcMode = 3
)

const (
	ST_TLBehaviorAccumulateTypeUnset  ST_TLBehaviorAccumulateType = 0
	ST_TLBehaviorAccumulateTypeNone   ST_TLBehaviorAccumulateType = 1
	ST_TLBehaviorAccumulateTypeAlways ST_TLBehaviorAccumulateType = 2
)

// ST_TransitionEightDirectionType is a union type
type ST_TransitionEightDirectionType struct {
	ST_TransitionSideDirectionType   ST_TransitionSideDirectionType
	ST_TransitionCornerDirectionType ST_TransitionCornerDirectionType
}

// ValidateWithPath validates the CT_Shape and its children, prefixing error messages with path
func (_accgb *CT_Shape) ValidateWithPath(path string) error {
	if _gfdeb := _accgb.NvSpPr.ValidateWithPath(path + "\u002fN\u0076\u0053\u0070\u0050\u0072"); _gfdeb != nil {
		return _gfdeb
	}
	if _eaec := _accgb.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _eaec != nil {
		return _eaec
	}
	if _accgb.Style != nil {
		if _faeg := _accgb.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _faeg != nil {
			return _faeg
		}
	}
	if _accgb.TxBody != nil {
		if _cgfg := _accgb.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _cgfg != nil {
			return _cgfg
		}
	}
	if _accgb.ExtLst != nil {
		if _gbggc := _accgb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbggc != nil {
			return _gbggc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupShape and its children, prefixing error messages with path
func (_dece *CT_GroupShape) ValidateWithPath(path string) error {
	if _effa := _dece.NvGrpSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _effa != nil {
		return _effa
	}
	if _bfdg := _dece.GrpSpPr.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _bfdg != nil {
		return _bfdg
	}
	for _bcdf, _agaf := range _dece.Choice {
		if _adaa := _agaf.ValidateWithPath(_ce.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _bcdf)); _adaa != nil {
			return _adaa
		}
	}
	if _dece.ExtLst != nil {
		if _gdaf := _dece.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdaf != nil {
			return _gdaf
		}
	}
	return nil
}

type CT_TLMediaNodeVideo struct {

	// Full Screen
	FullScrnAttr *bool

	// Common Media Node Properties
	CMediaNode *CT_TLCommonMediaNodeData
}

func (_cebcb ST_PlaceholderType) ValidateWithPath(path string) error {
	switch _cebcb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cebcb))
	}
	return nil
}

// ValidateWithPath validates the CT_TagsData and its children, prefixing error messages with path
func (_ccabe *CT_TagsData) ValidateWithPath(path string) error { return nil }

func (_gcafe ST_SlideSizeType) String() string {
	switch _gcafe {
	case 0:
		return ""
	case 1:
		return "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783"
	case 2:
		return "\u006c\u0065\u0074\u0074\u0065\u0072"
	case 3:
		return "\u0041\u0034"
	case 4:
		return "\u0033\u0035\u006d\u006d"
	case 5:
		return "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064"
	case 6:
		return "\u0062\u0061\u006e\u006e\u0065\u0072"
	case 7:
		return "\u0063\u0075\u0073\u0074\u006f\u006d"
	case 8:
		return "\u006c\u0065\u0064\u0067\u0065\u0072"
	case 9:
		return "\u0041\u0033"
	case 10:
		return "\u0042\u0034\u0049S\u004f"
	case 11:
		return "\u0042\u0035\u0049S\u004f"
	case 12:
		return "\u0042\u0034\u004aI\u0053"
	case 13:
		return "\u0042\u0035\u004aI\u0053"
	case 14:
		return "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064"
	case 15:
		return "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039"
	case 16:
		return "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030"
	}
	return ""
}

func (_fdbg *CT_OutlineViewProperties) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_bgdd := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_fdbg.CViewPr, _bgdd)
	if _fdbg.SldLst != nil {
		_ecfe := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_fdbg.SldLst, _ecfe)
	}
	if _fdbg.ExtLst != nil {
		_cbdb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fdbg.ExtLst, _cbdb)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_TLTemplateList struct {

	// Template Effects
	Tmpl []*CT_TLTemplate
}

func NewCT_IndexRange() *CT_IndexRange { _cdbe := &CT_IndexRange{}; return _cdbe }

func (_fcadc *ST_PrintWhat) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dgfde, _bdccf := d.Token()
	if _bdccf != nil {
		return _bdccf
	}
	if _dbeec, _cdga := _dgfde.(_g.EndElement); _cdga && _dbeec.Name == start.Name {
		*_fcadc = 1
		return nil
	}
	if _ggdce, _efcaa := _dgfde.(_g.CharData); !_efcaa {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgfde)
	} else {
		switch string(_ggdce) {
		case "":
			*_fcadc = 0
		case "\u0073\u006c\u0069\u0064\u0065\u0073":
			*_fcadc = 1
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731":
			*_fcadc = 2
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732":
			*_fcadc = 3
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733":
			*_fcadc = 4
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734":
			*_fcadc = 5
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736":
			*_fcadc = 6
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739":
			*_fcadc = 7
		case "\u006e\u006f\u0074e\u0073":
			*_fcadc = 8
		case "\u006fu\u0074\u006c\u0069\u006e\u0065":
			*_fcadc = 9
		}
	}
	_dgfde, _bdccf = d.Token()
	if _bdccf != nil {
		return _bdccf
	}
	if _dfdbb, _accee := _dgfde.(_g.EndElement); _accee && _dfdbb.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgfde)
}

func NewSld() *Sld { _afed := &Sld{}; _afed.CT_Slide = *NewCT_Slide(); return _afed }

type CT_SlideMasterIdListEntry struct {

	// Slide Master Identifier
	IdAttr  *uint32
	RIdAttr string
	ExtLst  *CT_ExtensionList
}

type ST_TLAnimateColorSpace byte

func (_ecgde ST_TLAnimateBehaviorValueType) Validate() error { return _ecgde.ValidateWithPath("") }

func (_aeddg ST_TLTriggerEvent) Validate() error { return _aeddg.ValidateWithPath("") }

func (_gcac *CT_NotesViewProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gcac.CSldViewPr = NewCT_CommonSlideViewProperties()
_efbec:
	for {
		_bccbc, _baea := d.Token()
		if _baea != nil {
			return _baea
		}
		switch _efeeb := _bccbc.(type) {
		case _g.StartElement:
			switch _efeeb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}:
				if _fcdg := d.DecodeElement(_gcac.CSldViewPr, &_efeeb); _fcdg != nil {
					return _fcdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcac.ExtLst = NewCT_ExtensionList()
				if _bbf := d.DecodeElement(_gcac.ExtLst, &_efeeb); _bbf != nil {
					return _bbf
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u004e\u006f\u0074\u0065s\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _efeeb.Name)
				if _bccba := d.Skip(); _bccba != nil {
					return _bccba
				}
			}
		case _g.EndElement:
			break _efbec
		case _g.CharData:
		}
	}
	return nil
}

func (_caeff *CT_NotesSlide) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_caeff.CSld = NewCT_CommonSlideData()
	for _, _bfdcd := range start.Attr {
		if _bfdcd.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_ccfg, _cafa := _d.ParseBool(_bfdcd.Value)
			if _cafa != nil {
				return _cafa
			}
			_caeff.ShowMasterSpAttr = &_ccfg
			continue
		}
		if _bfdcd.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_aacg, _ddcf := _d.ParseBool(_bfdcd.Value)
			if _ddcf != nil {
				return _ddcf
			}
			_caeff.ShowMasterPhAnimAttr = &_aacg
			continue
		}
	}
_fbgbc:
	for {
		_cfdc, _cffa := d.Token()
		if _cffa != nil {
			return _cffa
		}
		switch _dbeae := _cfdc.(type) {
		case _g.StartElement:
			switch _dbeae.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _dccd := d.DecodeElement(_caeff.CSld, &_dbeae); _dccd != nil {
					return _dccd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_caeff.ClrMapOvr = _f.NewCT_ColorMappingOverride()
				if _gdafa := d.DecodeElement(_caeff.ClrMapOvr, &_dbeae); _gdafa != nil {
					return _gdafa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_caeff.ExtLst = NewCT_ExtensionListModify()
				if _gbfc := d.DecodeElement(_caeff.ExtLst, &_dbeae); _gbfc != nil {
					return _gbfc
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004eo\u0074\u0065\u0073\u0053\u006c\u0069\u0064\u0065 \u0025\u0076", _dbeae.Name)
				if _cdfd := d.Skip(); _cdfd != nil {
					return _cdfd
				}
			}
		case _g.EndElement:
			break _fbgbc
		case _g.CharData:
		}
	}
	return nil
}

func (_fbggf *ST_TLNextActionType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_bbdbd, _gffff := d.Token()
	if _gffff != nil {
		return _gffff
	}
	if _abecbe, _cgeecg := _bbdbd.(_g.EndElement); _cgeecg && _abecbe.Name == start.Name {
		*_fbggf = 1
		return nil
	}
	if _adcgb, _dfacc := _bbdbd.(_g.CharData); !_dfacc {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbdbd)
	} else {
		switch string(_adcgb) {
		case "":
			*_fbggf = 0
		case "\u006e\u006f\u006e\u0065":
			*_fbggf = 1
		case "\u0073\u0065\u0065\u006b":
			*_fbggf = 2
		}
	}
	_bbdbd, _gffff = d.Token()
	if _gffff != nil {
		return _gffff
	}
	if _aggad, _ffgdf := _bbdbd.(_g.EndElement); _ffgdf && _aggad.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbdbd)
}

// Validate validates the CT_ExtensionListModify and its children
func (_cag *CT_ExtensionListModify) Validate() error {
	return _cag.ValidateWithPath("\u0043\u0054\u005f\u0045xt\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u004d\u006f\u0064\u0069f\u0079")
}

func NewCmLst() *CmLst {
	_efggg := &CmLst{}
	_efggg.CT_CommentList = *NewCT_CommentList()
	return _efggg
}

type CT_BackgroundProperties struct {

	// Shade to Title
	ShadeToTitleAttr *bool
	NoFill           *_f.CT_NoFillProperties
	SolidFill        *_f.CT_SolidColorFillProperties
	GradFill         *_f.CT_GradientFillProperties
	BlipFill         *_f.CT_BlipFillProperties
	PattFill         *_f.CT_PatternFillProperties
	GrpFill          *_f.CT_GroupFillProperties
	EffectLst        *_f.CT_EffectList
	EffectDag        *_f.CT_EffectContainer
	ExtLst           *CT_ExtensionList
}

type CT_TLTimeAnimateValue struct {

	// Time
	TmAttr *ST_TLTimeAnimateValueTime

	// Formula
	FmlaAttr *string

	// Value
	Val *CT_TLAnimVariant
}

func (_gdcfb *ST_TLAnimateMotionPathEditMode) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_gdcfb = 0
	case "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065":
		*_gdcfb = 1
	case "\u0066\u0069\u0078e\u0064":
		*_gdcfb = 2
	}
	return nil
}

func (_cfgb ST_TLTriggerEvent) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_cfgb.String(), start)
}

func (_egafg ST_TransitionSideDirectionType) ValidateWithPath(path string) error {
	switch _egafg {
	case 0, 1, 2, 3, 4:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egafg))
	}
	return nil
}

// ValidateWithPath validates the CT_OleObject and its children, prefixing error messages with path
func (_gfac *CT_OleObject) ValidateWithPath(path string) error {
	if _cdee := _gfac.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _cdee != nil {
		return _cdee
	}
	if _gfac.Pic != nil {
		if _bcge := _gfac.Pic.ValidateWithPath(path + "\u002f\u0050\u0069\u0063"); _bcge != nil {
			return _bcge
		}
	}
	if _gfac.ImgWAttr != nil {
		if *_gfac.ImgWAttr < 0 {
			return _ce.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0057\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_gfac.ImgWAttr)
		}
	}
	if _gfac.ImgHAttr != nil {
		if *_gfac.ImgHAttr < 0 {
			return _ce.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0048\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_gfac.ImgHAttr)
		}
	}
	return nil
}

type ST_TLChartSubelementType byte

func (_cbec *ST_TLNextActionType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_cbec = 0
	case "\u006e\u006f\u006e\u0065":
		*_cbec = 1
	case "\u0073\u0065\u0065\u006b":
		*_cbec = 2
	}
	return nil
}

// Validate validates the CT_ViewProperties and its children
func (_agca *CT_ViewProperties) Validate() error {
	return _agca.ValidateWithPath("\u0043\u0054\u005f\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

func NewCT_Shape() *CT_Shape {
	_eecb := &CT_Shape{}
	_eecb.NvSpPr = NewCT_ShapeNonVisual()
	_eecb.SpPr = _f.NewCT_ShapeProperties()
	return _eecb
}

// Validate validates the CT_PictureNonVisual and its children
func (_ccac *CT_PictureNonVisual) Validate() error {
	return _ccac.ValidateWithPath("\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

func (_efdeg *CT_PictureNonVisual) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_dbgc := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_efdeg.CNvPr, _dbgc)
	_eafgd := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_efdeg.CNvPicPr, _eafgd)
	_gcbbc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_efdeg.NvPr, _gcbbc)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_ShowInfoBrowse() *CT_ShowInfoBrowse { _effd := &CT_ShowInfoBrowse{}; return _effd }

func (_dceeba *ST_PlaceholderSize) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_agdcf, _gbbg := d.Token()
	if _gbbg != nil {
		return _gbbg
	}
	if _agdad, _gbcd := _agdcf.(_g.EndElement); _gbcd && _agdad.Name == start.Name {
		*_dceeba = 1
		return nil
	}
	if _cfgee, _ecffb := _agdcf.(_g.CharData); !_ecffb {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agdcf)
	} else {
		switch string(_cfgee) {
		case "":
			*_dceeba = 0
		case "\u0066\u0075\u006c\u006c":
			*_dceeba = 1
		case "\u0068\u0061\u006c\u0066":
			*_dceeba = 2
		case "\u0071u\u0061\u0072\u0074\u0065\u0072":
			*_dceeba = 3
		}
	}
	_agdcf, _gbbg = d.Token()
	if _gbbg != nil {
		return _gbbg
	}
	if _egeab, _bdegg := _agdcf.(_g.EndElement); _bdegg && _egeab.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agdcf)
}

func (_efaefg *ST_TLParaBuildType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_efaefg = 0
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_efaefg = 1
	case "\u0070":
		*_efaefg = 2
	case "\u0063\u0075\u0073\u0074":
		*_efaefg = 3
	case "\u0077\u0068\u006fl\u0065":
		*_efaefg = 4
	}
	return nil
}

// Validate validates the CT_TLMediaNodeAudio and its children
func (_bgac *CT_TLMediaNodeAudio) Validate() error {
	return _bgac.ValidateWithPath("\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0041\u0075\u0064\u0069\u006f")
}

// ValidateWithPath validates the CT_WebProperties and its children, prefixing error messages with path
func (_ggdb *CT_WebProperties) ValidateWithPath(path string) error {
	if _facfd := _ggdb.ImgSzAttr.ValidateWithPath(path + "\u002f\u0049\u006d\u0067\u0053\u007a\u0041\u0074\u0074\u0072"); _facfd != nil {
		return _facfd
	}
	if _aaceeb := _ggdb.ClrAttr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0041\u0074\u0074\u0072"); _aaceeb != nil {
		return _aaceeb
	}
	if _ggdb.ExtLst != nil {
		if _ceage := _ggdb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ceage != nil {
			return _ceage
		}
	}
	return nil
}

type CT_NotesSlide struct {

	// Common slide data for notes slides
	CSld *CT_CommonSlideData

	// Color Scheme Map Override
	ClrMapOvr            *_f.CT_ColorMappingOverride
	ExtLst               *CT_ExtensionListModify
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

func (_cbead *CmAuthorLst) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074"
	return _cbead.CT_CommentAuthorList.MarshalXML(e, start)
}

type CT_SlideMasterIdList struct {

	// Slide Master ID
	SldMasterId []*CT_SlideMasterIdListEntry
}

type OleObj struct{ CT_OleObject }

// Validate validates the CT_TLPoint and its children
func (_gbbea *CT_TLPoint) Validate() error {
	return _gbbea.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0050\u006f\u0069\u006e\u0074")
}

// ValidateWithPath validates the CT_TLTimeNodeParallel and its children, prefixing error messages with path
func (_geff *CT_TLTimeNodeParallel) ValidateWithPath(path string) error {
	if _gade := _geff.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _gade != nil {
		return _gade
	}
	return nil
}

func (_decbf *CT_Presentation) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _decbf.ServerZoomAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u005a\u006f\u006f\u006d"}, Value: _ce.Sprintf("\u0025\u0076", *_decbf.ServerZoomAttr)})
	}
	if _decbf.FirstSlideNumAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0053\u006c\u0069\u0064\u0065\u004e\u0075\u006d"}, Value: _ce.Sprintf("\u0025\u0076", *_decbf.FirstSlideNumAttr)})
	}
	if _decbf.ShowSpecialPlsOnTitleSldAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073h\u006f\u0077\u0053\u0070\u0065\u0063\u0069\u0061\u006c\u0050\u006cs\u004f\u006e\u0054\u0069\u0074\u006c\u0065\u0053\u006c\u0064"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_decbf.ShowSpecialPlsOnTitleSldAttr))})
	}
	if _decbf.RtlAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072\u0074\u006c"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_decbf.RtlAttr))})
	}
	if _decbf.RemovePersonalInfoOnSaveAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0072e\u006d\u006f\u0076\u0065\u0050\u0065\u0072\u0073\u006f\u006e\u0061l\u0049\u006e\u0066\u006f\u004f\u006e\u0053\u0061\u0076\u0065"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_decbf.RemovePersonalInfoOnSaveAttr))})
	}
	if _decbf.CompatModeAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u006f\u006d\u0070\u0061\u0074\u004d\u006f\u0064\u0065"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_decbf.CompatModeAttr))})
	}
	if _decbf.StrictFirstAndLastCharsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0074\u0072ic\u0074\u0046\u0069\u0072\u0073\u0074\u0041\u006e\u0064\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072\u0073"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_decbf.StrictFirstAndLastCharsAttr))})
	}
	if _decbf.EmbedTrueTypeFontsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0065m\u0062e\u0064\u0054\u0072\u0075\u0065T\u0079\u0070e\u0046\u006f\u006e\u0074\u0073"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_decbf.EmbedTrueTypeFontsAttr))})
	}
	if _decbf.SaveSubsetFontsAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073a\u0076e\u0053\u0075\u0062\u0073\u0065\u0074\u0046\u006f\u006e\u0074\u0073"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_decbf.SaveSubsetFontsAttr))})
	}
	if _decbf.AutoCompressPicturesAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073"}, Value: _ce.Sprintf("\u0025\u0064", _cggec(*_decbf.AutoCompressPicturesAttr))})
	}
	if _decbf.BookmarkIdSeedAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0062\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049d\u0053\u0065\u0065\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_decbf.BookmarkIdSeedAttr)})
	}
	if _decbf.ConformanceAttr != _fg.ST_ConformanceClassUnset {
		_fcdf, _eabdg := _decbf.ConformanceAttr.MarshalXMLAttr(_g.Name{Local: "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065"})
		if _eabdg != nil {
			return _eabdg
		}
		start.Attr = append(start.Attr, _fcdf)
	}
	e.EncodeToken(start)
	if _decbf.SldMasterIdLst != nil {
		_caadb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003as\u006c\u0064\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_decbf.SldMasterIdLst, _caadb)
	}
	if _decbf.NotesMasterIdLst != nil {
		_bggg := _g.StartElement{Name: _g.Name{Local: "\u0070:\u006eo\u0074\u0065\u0073\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_decbf.NotesMasterIdLst, _bggg)
	}
	if _decbf.HandoutMasterIdLst != nil {
		_eggb := _g.StartElement{Name: _g.Name{Local: "p\u003ah\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061s\u0074\u0065\u0072\u0049dL\u0073\u0074"}}
		e.EncodeElement(_decbf.HandoutMasterIdLst, _eggb)
	}
	if _decbf.SldIdLst != nil {
		_gfda := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_decbf.SldIdLst, _gfda)
	}
	if _decbf.SldSz != nil {
		_daeb := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0073\u006c\u0064\u0053\u007a"}}
		e.EncodeElement(_decbf.SldSz, _daeb)
	}
	_bcdg := _g.StartElement{Name: _g.Name{Local: "\u0070:\u006e\u006f\u0074\u0065\u0073\u0053z"}}
	e.EncodeElement(_decbf.NotesSz, _bcdg)
	if _decbf.SmartTags != nil {
		_bdaf := _g.StartElement{Name: _g.Name{Local: "p\u003a\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}}
		e.EncodeElement(_decbf.SmartTags, _bdaf)
	}
	if _decbf.EmbeddedFontLst != nil {
		_dbgb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006fn\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_decbf.EmbeddedFontLst, _dbgb)
	}
	if _decbf.CustShowLst != nil {
		_eedf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}}
		e.EncodeElement(_decbf.CustShowLst, _eedf)
	}
	if _decbf.PhotoAlbum != nil {
		_agdf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0070h\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}}
		e.EncodeElement(_decbf.PhotoAlbum, _agdf)
	}
	if _decbf.CustDataLst != nil {
		_cdcb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}}
		e.EncodeElement(_decbf.CustDataLst, _cdcb)
	}
	if _decbf.Kinsoku != nil {
		_ebegb := _g.StartElement{Name: _g.Name{Local: "\u0070:\u006b\u0069\u006e\u0073\u006f\u006bu"}}
		e.EncodeElement(_decbf.Kinsoku, _ebegb)
	}
	if _decbf.DefaultTextStyle != nil {
		_fffe := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0064e\u0066\u0061\u0075\u006c\u0074T\u0065\u0078t\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_decbf.DefaultTextStyle, _fffe)
	}
	if _decbf.ModifyVerifier != nil {
		_ebeef := _g.StartElement{Name: _g.Name{Local: "\u0070\u003am\u006f\u0064\u0069f\u0079\u0056\u0065\u0072\u0069\u0066\u0069\u0065\u0072"}}
		e.EncodeElement(_decbf.ModifyVerifier, _ebeef)
	}
	if _decbf.ExtLst != nil {
		_feda := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_decbf.ExtLst, _feda)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_TLCommonMediaNodeData struct {

	// Volume
	VolAttr *_f.ST_PositiveFixedPercentage

	// Mute
	MuteAttr *bool

	// Number of Slides
	NumSldAttr *uint32

	// Show When Stopped
	ShowWhenStoppedAttr *bool

	// Common Time Node Properties
	CTn   *CT_TLCommonTimeNodeData
	TgtEl *CT_TLTimeTargetElement
}

// ValidateWithPath validates the CT_NotesMasterIdListEntry and its children, prefixing error messages with path
func (_baecg *CT_NotesMasterIdListEntry) ValidateWithPath(path string) error {
	if _baecg.ExtLst != nil {
		if _bbdcg := _baecg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bbdcg != nil {
			return _bbdcg
		}
	}
	return nil
}

func (_eggfgd *ST_ViewType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dcbga, _acfb := d.Token()
	if _acfb != nil {
		return _acfb
	}
	if _egffg, _eddd := _dcbga.(_g.EndElement); _eddd && _egffg.Name == start.Name {
		*_eggfgd = 1
		return nil
	}
	if _bbaba, _cafda := _dcbga.(_g.CharData); !_cafda {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dcbga)
	} else {
		switch string(_bbaba) {
		case "":
			*_eggfgd = 0
		case "\u0073l\u0064\u0056\u0069\u0065\u0077":
			*_eggfgd = 1
		case "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
			*_eggfgd = 2
		case "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w":
			*_eggfgd = 3
		case "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077":
			*_eggfgd = 4
		case "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
			*_eggfgd = 5
		case "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077":
			*_eggfgd = 6
		case "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
			*_eggfgd = 7
		case "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077":
			*_eggfgd = 8
		}
	}
	_dcbga, _acfb = d.Token()
	if _acfb != nil {
		return _acfb
	}
	if _ccbfb, _debg := _dcbga.(_g.EndElement); _debg && _ccbfb.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dcbga)
}

// ValidateWithPath validates the CT_CommentAuthorList and its children, prefixing error messages with path
func (_aed *CT_CommentAuthorList) ValidateWithPath(path string) error {
	for _degc, _afcf := range _aed.CmAuthor {
		if _cfcc := _afcf.ValidateWithPath(_ce.Sprintf("\u0025s\u002fC\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u005b\u0025\u0064\u005d", path, _degc)); _cfcc != nil {
			return _cfcc
		}
	}
	return nil
}

func (_bbbgc *ST_TLTimeNodePresetClassType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dcdcf, _gccfb := d.Token()
	if _gccfb != nil {
		return _gccfb
	}
	if _cafdc, _gegca := _dcdcf.(_g.EndElement); _gegca && _cafdc.Name == start.Name {
		*_bbbgc = 1
		return nil
	}
	if _bcfec, _cbcbb := _dcdcf.(_g.CharData); !_cbcbb {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dcdcf)
	} else {
		switch string(_bcfec) {
		case "":
			*_bbbgc = 0
		case "\u0065\u006e\u0074\u0072":
			*_bbbgc = 1
		case "\u0065\u0078\u0069\u0074":
			*_bbbgc = 2
		case "\u0065\u006d\u0070\u0068":
			*_bbbgc = 3
		case "\u0070\u0061\u0074\u0068":
			*_bbbgc = 4
		case "\u0076\u0065\u0072\u0062":
			*_bbbgc = 5
		case "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl":
			*_bbbgc = 6
		}
	}
	_dcdcf, _gccfb = d.Token()
	if _gccfb != nil {
		return _gccfb
	}
	if _ccae, _edfb := _dcdcf.(_g.EndElement); _edfb && _ccae.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dcdcf)
}

// Validate validates the CT_CommentList and its children
func (_dgc *CT_CommentList) Validate() error {
	return _dgc.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074")
}

func (_dbeb *CT_NotesMasterIdList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_ebdc:
	for {
		_fgfb, _cdgdd := d.Token()
		if _cdgdd != nil {
			return _cdgdd
		}
		switch _cdff := _fgfb.(type) {
		case _g.StartElement:
			switch _cdff.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}:
				_dbeb.NotesMasterId = NewCT_NotesMasterIdListEntry()
				if _dbbe := d.DecodeElement(_dbeb.NotesMasterId, &_cdff); _dbbe != nil {
					return _dbbe
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _cdff.Name)
				if _gfee := d.Skip(); _gfee != nil {
					return _gfee
				}
			}
		case _g.EndElement:
			break _ebdc
		case _g.CharData:
		}
	}
	return nil
}

func (_ccdb *CT_OrientationTransition) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _ccdb.DirAttr != ST_DirectionUnset {
		_gdfcc, _gdbb := _ccdb.DirAttr.MarshalXMLAttr(_g.Name{Local: "\u0064\u0069\u0072"})
		if _gdbb != nil {
			return _gdbb
		}
		start.Attr = append(start.Attr, _gdfcc)
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_fab *CT_HandoutMaster) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_edf := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_fab.CSld, _edf)
	_bdffe := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_fab.ClrMap, _bdffe)
	if _fab.Hf != nil {
		_fgfg := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_fab.Hf, _fgfg)
	}
	if _fab.ExtLst != nil {
		_gdef := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fab.ExtLst, _gdef)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func (_ggbaa *CT_SlideMasterIdList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_degba:
	for {
		_fgdg, _afega := d.Token()
		if _afega != nil {
			return _afega
		}
		switch _agdfe := _fgdg.(type) {
		case _g.StartElement:
			switch _agdfe.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}:
				_debbb := NewCT_SlideMasterIdListEntry()
				if _eccce := d.DecodeElement(_debbb, &_agdfe); _eccce != nil {
					return _eccce
				}
				_ggbaa.SldMasterId = append(_ggbaa.SldMasterId, _debbb)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _agdfe.Name)
				if _ecff := d.Skip(); _ecff != nil {
					return _ecff
				}
			}
		case _g.EndElement:
			break _degba
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomShowList and its children, prefixing error messages with path
func (_bbgf *CT_CustomShowList) ValidateWithPath(path string) error {
	for _debcg, _agf := range _bbgf.CustShow {
		if _bbec := _agf.ValidateWithPath(_ce.Sprintf("\u0025s\u002fC\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u005b\u0025\u0064\u005d", path, _debcg)); _bbec != nil {
			return _bbec
		}
	}
	return nil
}

func (_afbag *EG_ExtensionList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_bcaee:
	for {
		_ebfeg, _fbffa := d.Token()
		if _fbffa != nil {
			return _fbffa
		}
		switch _cbbg := _ebfeg.(type) {
		case _g.StartElement:
			switch _cbbg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_cddbc := NewCT_Extension()
				if _efcacb := d.DecodeElement(_cddbc, &_cbbg); _efcacb != nil {
					return _efcacb
				}
				_afbag.Ext = append(_afbag.Ext, _cddbc)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _cbbg.Name)
				if _ffcdg := d.Skip(); _ffcdg != nil {
					return _ffcdg
				}
			}
		case _g.EndElement:
			break _bcaee
		case _g.CharData:
		}
	}
	return nil
}

func (_eebec *ST_PlaceholderType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_eebec = 0
	case "\u0074\u0069\u0074l\u0065":
		*_eebec = 1
	case "\u0062\u006f\u0064\u0079":
		*_eebec = 2
	case "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065":
		*_eebec = 3
	case "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065":
		*_eebec = 4
	case "\u0064\u0074":
		*_eebec = 5
	case "\u0073\u006c\u0064\u004e\u0075\u006d":
		*_eebec = 6
	case "\u0066\u0074\u0072":
		*_eebec = 7
	case "\u0068\u0064\u0072":
		*_eebec = 8
	case "\u006f\u0062\u006a":
		*_eebec = 9
	case "\u0063\u0068\u0061r\u0074":
		*_eebec = 10
	case "\u0074\u0062\u006c":
		*_eebec = 11
	case "\u0063l\u0069\u0070\u0041\u0072\u0074":
		*_eebec = 12
	case "\u0064\u0067\u006d":
		*_eebec = 13
	case "\u006d\u0065\u0064i\u0061":
		*_eebec = 14
	case "\u0073\u006c\u0064\u0049\u006d\u0067":
		*_eebec = 15
	case "\u0070\u0069\u0063":
		*_eebec = 16
	}
	return nil
}

func (_acecd *ST_TransitionSpeed) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_acecd = 0
	case "\u0073\u006c\u006f\u0077":
		*_acecd = 1
	case "\u006d\u0065\u0064":
		*_acecd = 2
	case "\u0066\u0061\u0073\u0074":
		*_acecd = 3
	}
	return nil
}

// ValidateWithPath validates the CT_NotesTextViewProperties and its children, prefixing error messages with path
func (_deacb *CT_NotesTextViewProperties) ValidateWithPath(path string) error {
	if _gbaa := _deacb.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _gbaa != nil {
		return _gbaa
	}
	if _deacb.ExtLst != nil {
		if _baegf := _deacb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _baegf != nil {
			return _baegf
		}
	}
	return nil
}

// Validate validates the CT_ShowProperties and its children
func (_ebfbd *CT_ShowProperties) Validate() error {
	return _ebfbd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_ConnectorNonVisual and its children
func (_ggcb *CT_ConnectorNonVisual) Validate() error {
	return _ggcb.ValidateWithPath("C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c")
}

func (_dfbdbb ST_WebScreenSize) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_cebgdd := _g.Attr{}
	_cebgdd.Name = name
	switch _dfbdbb {
	case ST_WebScreenSizeUnset:
		_cebgdd.Value = ""
	case ST_WebScreenSize544x376:
		_cebgdd.Value = "\u00354\u0034\u0078\u0033\u0037\u0036"
	case ST_WebScreenSize640x480:
		_cebgdd.Value = "\u00364\u0030\u0078\u0034\u0038\u0030"
	case ST_WebScreenSize720x512:
		_cebgdd.Value = "\u00372\u0030\u0078\u0035\u0031\u0032"
	case ST_WebScreenSize800x600:
		_cebgdd.Value = "\u00380\u0030\u0078\u0036\u0030\u0030"
	case ST_WebScreenSize1024x768:
		_cebgdd.Value = "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case ST_WebScreenSize1152x882:
		_cebgdd.Value = "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case ST_WebScreenSize1152x900:
		_cebgdd.Value = "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case ST_WebScreenSize1280x1024:
		_cebgdd.Value = "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case ST_WebScreenSize1600x1200:
		_cebgdd.Value = "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case ST_WebScreenSize1800x1400:
		_cebgdd.Value = "\u00318\u0030\u0030\u0078\u0031\u0034\u00300"
	case ST_WebScreenSize1920x1200:
		_cebgdd.Value = "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return _cebgdd, nil
}

func (_ccade ST_SlideLayoutType) String() string {
	switch _ccade {
	case 0:
		return ""
	case 1:
		return "\u0074\u0069\u0074l\u0065"
	case 2:
		return "\u0074\u0078"
	case 3:
		return "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078"
	case 4:
		return "\u0074\u0062\u006c"
	case 5:
		return "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074"
	case 6:
		return "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case 7:
		return "\u0064\u0067\u006d"
	case 8:
		return "\u0063\u0068\u0061r\u0074"
	case 9:
		return "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074"
	case 10:
		return "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case 11:
		return "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy"
	case 12:
		return "\u0062\u006c\u0061n\u006b"
	case 13:
		return "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a"
	case 14:
		return "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case 15:
		return "\u006fb\u006a\u004f\u006e\u006c\u0079"
	case 16:
		return "\u006f\u0062\u006a"
	case 17:
		return "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061"
	case 18:
		return "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078"
	case 19:
		return "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x"
	case 20:
		return "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j"
	case 21:
		return "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case 22:
		return "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case 23:
		return "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078"
	case 24:
		return "\u0066o\u0075\u0072\u004f\u0062\u006a"
	case 25:
		return "\u0076\u0065\u0072\u0074\u0054\u0078"
	case 26:
		return "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078"
	case 27:
		return "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078"
	case 28:
		return "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074"
	case 29:
		return "\u0074\u0077\u006f\u004f\u0062\u006a"
	case 30:
		return "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case 31:
		return "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a"
	case 32:
		return "\u0063\u0075\u0073\u0074"
	case 33:
		return "\u0073e\u0063\u0048\u0065\u0061\u0064"
	case 34:
		return "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a"
	case 35:
		return "\u006f\u0062\u006aT\u0078"
	case 36:
		return "\u0070\u0069\u0063T\u0078"
	}
	return ""
}

func NewCT_OleObjectChoice() *CT_OleObjectChoice { _geea := &CT_OleObjectChoice{}; return _geea }

type CmAuthorLst struct{ CT_CommentAuthorList }

func (_fegb *ST_TLAnimateMotionBehaviorOrigin) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_fegb = 0
	case "\u0070\u0061\u0072\u0065\u006e\u0074":
		*_fegb = 1
	case "\u006c\u0061\u0079\u006f\u0075\u0074":
		*_fegb = 2
	}
	return nil
}

type Notes struct{ CT_NotesSlide }

func NewCT_ExtensionList() *CT_ExtensionList { _fgdb := &CT_ExtensionList{}; return _fgdb }

func (_fece *CT_Picture) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_fece.NvPicPr = NewCT_PictureNonVisual()
	_fece.BlipFill = _f.NewCT_BlipFillProperties()
	_fece.SpPr = _f.NewCT_ShapeProperties()
_efae:
	for {
		_efbc, _agac := d.Token()
		if _agac != nil {
			return _agac
		}
		switch _ebafb := _efbc.(type) {
		case _g.StartElement:
			switch _ebafb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _dcee := d.DecodeElement(_fece.NvPicPr, &_ebafb); _dcee != nil {
					return _dcee
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _acbe := d.DecodeElement(_fece.BlipFill, &_ebafb); _acbe != nil {
					return _acbe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _acaf := d.DecodeElement(_fece.SpPr, &_ebafb); _acaf != nil {
					return _acaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_fece.Style = _f.NewCT_ShapeStyle()
				if _cbfe := d.DecodeElement(_fece.Style, &_ebafb); _cbfe != nil {
					return _cbfe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fece.ExtLst = NewCT_ExtensionListModify()
				if _bdcgf := d.DecodeElement(_fece.ExtLst, &_ebafb); _bdcgf != nil {
					return _bdcgf
				}
			default:
				_e.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0069\u0063\u0074\u0075\u0072\u0065\u0020\u0025\u0076", _ebafb.Name)
				if _ceecb := d.Skip(); _ceecb != nil {
					return _ceecb
				}
			}
		case _g.EndElement:
			break _efae
		case _g.CharData:
		}
	}
	return nil
}

type CT_TagsData struct{ IdAttr string }

type TagLst struct{ CT_TagList }

func (_acce *CT_TLAnimateColorBehavior) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_acce.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _bbbc := range start.Attr {
		if _bbbc.Name.Local == "\u0063\u006c\u0072\u0053\u0070\u0063" {
			_acce.ClrSpcAttr.UnmarshalXMLAttr(_bbbc)
			continue
		}
		if _bbbc.Name.Local == "\u0064\u0069\u0072" {
			_acce.DirAttr.UnmarshalXMLAttr(_bbbc)
			continue
		}
	}
_bgfe:
	for {
		_bfcdd, _gcafb := d.Token()
		if _gcafb != nil {
			return _gcafb
		}
		switch _aggde := _bfcdd.(type) {
		case _g.StartElement:
			switch _aggde.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _cdfa := d.DecodeElement(_acce.CBhvr, &_aggde); _cdfa != nil {
					return _cdfa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0079"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0079"}:
				_acce.By = NewCT_TLByAnimateColorTransform()
				if _gcgfc := d.DecodeElement(_acce.By, &_aggde); _gcgfc != nil {
					return _gcgfc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}:
				_acce.From = _f.NewCT_Color()
				if _ddece := d.DecodeElement(_acce.From, &_aggde); _ddece != nil {
					return _ddece
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_acce.To = _f.NewCT_Color()
				if _geca := d.DecodeElement(_acce.To, &_aggde); _geca != nil {
					return _geca
				}
			default:
				_e.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0043o\u006c\u006f\u0072\u0042\u0065\u0068\u0061\u0076i\u006fr\u0020\u0025v", _aggde.Name)
				if _dbbg := d.Skip(); _dbbg != nil {
					return _dbbg
				}
			}
		case _g.EndElement:
			break _bgfe
		case _g.CharData:
		}
	}
	return nil
}

func (_ggfae ST_WebScreenSize) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_ggfae.String(), start)
}

// Validate validates the CT_TLTimeAnimateValue and its children
func (_dgaee *CT_TLTimeAnimateValue) Validate() error {
	return _dgaee.ValidateWithPath("C\u0054\u005f\u0054\u004cTi\u006de\u0041\u006e\u0069\u006d\u0061t\u0065\u0056\u0061\u006c\u0075\u0065")
}

// ValidateWithPath validates the CT_TLBehaviorAttributeNameList and its children, prefixing error messages with path
func (_cfda *CT_TLBehaviorAttributeNameList) ValidateWithPath(path string) error { return nil }

type CT_CustomShowList struct {

	// Custom Show
	CustShow []*CT_CustomShow
}

func (_badbg *CT_SlideTiming) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _badbg.TnLst != nil {
		_cgefd := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0074\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_badbg.TnLst, _cgefd)
	}
	if _badbg.BldLst != nil {
		_cacdc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_badbg.BldLst, _cacdc)
	}
	if _badbg.ExtLst != nil {
		_bagge := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_badbg.ExtLst, _bagge)
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_StringTag and its children, prefixing error messages with path
func (_defe *CT_StringTag) ValidateWithPath(path string) error { return nil }

type CT_TLIterateIntervalTime struct {

	// Time
	ValAttr ST_TLTime
}

// ValidateWithPath validates the SldLayout and its children, prefixing error messages with path
func (_afdea *SldLayout) ValidateWithPath(path string) error {
	if _fegeg := _afdea.CT_SlideLayout.ValidateWithPath(path); _fegeg != nil {
		return _fegeg
	}
	return nil
}

// Validate validates the AG_TLBuild and its children
func (_bag *AG_TLBuild) Validate() error {
	return _bag.ValidateWithPath("\u0041\u0047\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064")
}

func (_dd *AG_Ole) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ed := range start.Attr {
		if _ed.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ed.Name.Local == "\u0069\u0064" {
			_ga, _gaa := _ed.Value, error(nil)
			if _gaa != nil {
				return _gaa
			}
			_dd.IdAttr = &_ga
			continue
		}
		if _ed.Name.Local == "\u0073\u0070\u0069\u0064" {
			_fe, _aa := _ed.Value, error(nil)
			if _aa != nil {
				return _aa
			}
			_dd.SpidAttr = &_fe
			continue
		}
		if _ed.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gg, _gfg := _ed.Value, error(nil)
			if _gfg != nil {
				return _gfg
			}
			_dd.NameAttr = &_gg
			continue
		}
		if _ed.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_ebb, _ef := _d.ParseBool(_ed.Value)
			if _ef != nil {
				return _ef
			}
			_dd.ShowAsIconAttr = &_ebb
			continue
		}
		if _ed.Name.Local == "\u0069\u006d\u0067\u0057" {
			_ffd, _cd := _d.ParseInt(_ed.Value, 10, 32)
			if _cd != nil {
				return _cd
			}
			_cfe := int32(_ffd)
			_dd.ImgWAttr = &_cfe
			continue
		}
		if _ed.Name.Local == "\u0069\u006d\u0067\u0048" {
			_fee, _gaf := _d.ParseInt(_ed.Value, 10, 32)
			if _gaf != nil {
				return _gaf
			}
			_ec := int32(_fee)
			_dd.ImgHAttr = &_ec
			continue
		}
	}
	for {
		_cc, _gdg := d.Token()
		if _gdg != nil {
			return _ce.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0041G\u005f\u004fl\u0065\u003a\u0020\u0025\u0073", _gdg)
		}
		if _ca, _cef := _cc.(_g.EndElement); _cef && _ca.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the OleObj and its children, prefixing error messages with path
func (_ggef *OleObj) ValidateWithPath(path string) error {
	if _fbcggg := _ggef.CT_OleObject.ValidateWithPath(path); _fbcggg != nil {
		return _fbcggg
	}
	return nil
}

func (_dgde ST_Direction) ValidateWithPath(path string) error {
	switch _dgde {
	case 0, 1, 2:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgde))
	}
	return nil
}

func (_acddb *CT_SlideSorterViewProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_acddb.CViewPr = NewCT_CommonViewProperties()
	for _, _acea := range start.Attr {
		if _acea.Name.Local == "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067" {
			_agebf, _cgef := _d.ParseBool(_acea.Value)
			if _cgef != nil {
				return _cgef
			}
			_acddb.ShowFormattingAttr = &_agebf
			continue
		}
	}
_fabg:
	for {
		_dgcb, _gfecf := d.Token()
		if _gfecf != nil {
			return _gfecf
		}
		switch _gefdg := _dgcb.(type) {
		case _g.StartElement:
			switch _gefdg.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _eacea := d.DecodeElement(_acddb.CViewPr, &_gefdg); _eacea != nil {
					return _eacea
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_acddb.ExtLst = NewCT_ExtensionList()
				if _fbdga := d.DecodeElement(_acddb.ExtLst, &_gefdg); _fbdga != nil {
					return _fbdga
				}
			default:
				_e.Log.Debug("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065w\u0050\u0072op\u0065\u0072\u0074i\u0065\u0073\u0020\u0025\u0076", _gefdg.Name)
				if _deeg := d.Skip(); _deeg != nil {
					return _deeg
				}
			}
		case _g.EndElement:
			break _fabg
		case _g.CharData:
		}
	}
	return nil
}

func (_facb *CT_SlideViewProperties) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_facb.CSldViewPr = NewCT_CommonSlideViewProperties()
_bdca:
	for {
		_dffg, _bfbb := d.Token()
		if _bfbb != nil {
			return _bfbb
		}
		switch _babd := _dffg.(type) {
		case _g.StartElement:
			switch _babd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}:
				if _dceb := d.DecodeElement(_facb.CSldViewPr, &_babd); _dceb != nil {
					return _dceb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_facb.ExtLst = NewCT_ExtensionList()
				if _dagg := d.DecodeElement(_facb.ExtLst, &_babd); _dagg != nil {
					return _dagg
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u006c\u0069\u0064e\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _babd.Name)
				if _faaec := d.Skip(); _faaec != nil {
					return _faaec
				}
			}
		case _g.EndElement:
			break _bdca
		case _g.CharData:
		}
	}
	return nil
}

func (_gcea *CT_SlideRelationshipList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _gcea.Sld != nil {
		_ebggb := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0073l\u0064"}}
		for _, _fecfe := range _gcea.Sld {
			e.EncodeElement(_fecfe, _ebggb)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_HandoutMaster and its children
func (_faced *CT_HandoutMaster) Validate() error {
	return _faced.ValidateWithPath("\u0043\u0054_\u0048\u0061\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072")
}

func (_eedga ST_TLDiagramBuildType) ValidateWithPath(path string) error {
	switch _eedga {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eedga))
	}
	return nil
}

func (_ffagd *PresentationPr) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_ffagd.CT_PresentationProperties = *NewCT_PresentationProperties()
_gfdd:
	for {
		_cbggd, _addbe := d.Token()
		if _addbe != nil {
			return _addbe
		}
		switch _caafd := _cbggd.(type) {
		case _g.StartElement:
			switch _caafd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}:
				_ffagd.HtmlPubPr = NewCT_HtmlPublishProperties()
				if _ggdaf := d.DecodeElement(_ffagd.HtmlPubPr, &_caafd); _ggdaf != nil {
					return _ggdaf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}:
				_ffagd.WebPr = NewCT_WebProperties()
				if _afdbd := d.DecodeElement(_ffagd.WebPr, &_caafd); _afdbd != nil {
					return _afdbd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}:
				_ffagd.PrnPr = NewCT_PrintProperties()
				if _ecbde := d.DecodeElement(_ffagd.PrnPr, &_caafd); _ecbde != nil {
					return _ecbde
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}:
				_ffagd.ShowPr = NewCT_ShowProperties()
				if _degbd := d.DecodeElement(_ffagd.ShowPr, &_caafd); _degbd != nil {
					return _degbd
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}:
				_ffagd.ClrMru = _f.NewCT_ColorMRU()
				if _ebbcb := d.DecodeElement(_ffagd.ClrMru, &_caafd); _ebbcb != nil {
					return _ebbcb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ffagd.ExtLst = NewCT_ExtensionList()
				if _fgge := d.DecodeElement(_ffagd.ExtLst, &_caafd); _fgge != nil {
					return _fgge
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006eP\u0072\u0020\u0025\u0076", _caafd.Name)
				if _eggec := d.Skip(); _eggec != nil {
					return _eggec
				}
			}
		case _g.EndElement:
			break _gfdd
		case _g.CharData:
		}
	}
	return nil
}

func (_gcga *ST_TransitionSideDirectionType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_deefb, _dgege := d.Token()
	if _dgege != nil {
		return _dgege
	}
	if _agbg, _dfbbb := _deefb.(_g.EndElement); _dfbbb && _agbg.Name == start.Name {
		*_gcga = 1
		return nil
	}
	if _agedg, _edcef := _deefb.(_g.CharData); !_edcef {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _deefb)
	} else {
		switch string(_agedg) {
		case "":
			*_gcga = 0
		case "\u006c":
			*_gcga = 1
		case "\u0075":
			*_gcga = 2
		case "\u0072":
			*_gcga = 3
		case "\u0064":
			*_gcga = 4
		}
	}
	_deefb, _dgege = d.Token()
	if _dgege != nil {
		return _dgege
	}
	if _baeac, _faeab := _deefb.(_g.EndElement); _faeab && _baeac.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _deefb)
}

func (_fdga ST_TLBehaviorAdditiveType) String() string {
	switch _fdga {
	case 0:
		return ""
	case 1:
		return "\u0062\u0061\u0073\u0065"
	case 2:
		return "\u0073\u0075\u006d"
	case 3:
		return "\u0072\u0065\u0070\u006c"
	case 4:
		return "\u006d\u0075\u006c\u0074"
	case 5:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

type CT_SplitTransition struct {

	// Orientation
	OrientAttr ST_Direction

	// Direction
	DirAttr ST_TransitionInOutDirectionType
}

func (_bbga ST_TLDiagramBuildType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_daabc := _g.Attr{}
	_daabc.Name = name
	switch _bbga {
	case ST_TLDiagramBuildTypeUnset:
		_daabc.Value = ""
	case ST_TLDiagramBuildTypeWhole:
		_daabc.Value = "\u0077\u0068\u006fl\u0065"
	case ST_TLDiagramBuildTypeDepthByNode:
		_daabc.Value = "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case ST_TLDiagramBuildTypeDepthByBranch:
		_daabc.Value = "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068"
	case ST_TLDiagramBuildTypeBreadthByNode:
		_daabc.Value = "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case ST_TLDiagramBuildTypeBreadthByLvl:
		_daabc.Value = "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c"
	case ST_TLDiagramBuildTypeCw:
		_daabc.Value = "\u0063\u0077"
	case ST_TLDiagramBuildTypeCwIn:
		_daabc.Value = "\u0063\u0077\u0049\u006e"
	case ST_TLDiagramBuildTypeCwOut:
		_daabc.Value = "\u0063\u0077\u004fu\u0074"
	case ST_TLDiagramBuildTypeCcw:
		_daabc.Value = "\u0063\u0063\u0077"
	case ST_TLDiagramBuildTypeCcwIn:
		_daabc.Value = "\u0063\u0063\u0077I\u006e"
	case ST_TLDiagramBuildTypeCcwOut:
		_daabc.Value = "\u0063\u0063\u0077\u004f\u0075\u0074"
	case ST_TLDiagramBuildTypeInByRing:
		_daabc.Value = "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067"
	case ST_TLDiagramBuildTypeOutByRing:
		_daabc.Value = "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg"
	case ST_TLDiagramBuildTypeUp:
		_daabc.Value = "\u0075\u0070"
	case ST_TLDiagramBuildTypeDown:
		_daabc.Value = "\u0064\u006f\u0077\u006e"
	case ST_TLDiagramBuildTypeAllAtOnce:
		_daabc.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case ST_TLDiagramBuildTypeCust:
		_daabc.Value = "\u0063\u0075\u0073\u0074"
	}
	return _daabc, nil
}

// Validate validates the CmLst and its children
func (_gagae *CmLst) Validate() error { return _gagae.ValidateWithPath("\u0043\u006d\u004cs\u0074") }

// Validate validates the EG_ShowType and its children
func (_adbd *EG_ShowType) Validate() error {
	return _adbd.ValidateWithPath("E\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065")
}

func (_edagg ST_TLBehaviorAdditiveType) ValidateWithPath(path string) error {
	switch _edagg {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_edagg))
	}
	return nil
}

func (_acdae ST_TLTimeIndefinite) ValidateWithPath(path string) error {
	switch _acdae {
	case 0, 1:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_acdae))
	}
	return nil
}

func (_fbebf *OleObj) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u006f\u006c\u0065\u004f\u0062\u006a"
	return _fbebf.CT_OleObject.MarshalXML(e, start)
}

type CT_SlideLayout struct {

	// Matching Name
	MatchingNameAttr *string

	// Slide Layout Type
	TypeAttr ST_SlideLayoutType

	// Preserve Slide Layout
	PreserveAttr *bool

	// Is User Drawn
	UserDrawnAttr *bool

	// Common slide data for slide layouts
	CSld *CT_CommonSlideData

	// Color Scheme Map Override
	ClrMapOvr *_f.CT_ColorMappingOverride

	// Slide Transition for a Slide Layout
	Transition *CT_SlideTransition

	// Slide Timing Information for a Slide Layout
	Timing *CT_SlideTiming

	// Header/Footer information for a slide layout
	Hf                   *CT_HeaderFooter
	ExtLst               *CT_ExtensionListModify
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

func (_dabe ST_SlideLayoutType) Validate() error { return _dabe.ValidateWithPath("") }

type CT_TLTimeConditionList struct {

	// Condition
	Cond []*CT_TLTimeCondition
}

func (_gdgag *HandoutMaster) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070:\u0068a\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072"
	return _gdgag.CT_HandoutMaster.MarshalXML(e, start)
}

type CT_TLGraphicalObjectBuild struct {

	// Build As One
	BldAsOne *CT_Empty

	// Build Sub Elements
	BldSub       *_f.CT_AnimationGraphicalObjectBuildProperties
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

func (_gbfgeb ST_TLTimeNodeRestartType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_gbfgeb.String(), start)
}

func NewCT_EmbeddedFontListEntry() *CT_EmbeddedFontListEntry {
	_cbde := &CT_EmbeddedFontListEntry{}
	_cbde.Font = _f.NewCT_TextFont()
	return _cbde
}

// Validate validates the CT_Shape and its children
func (_fgff *CT_Shape) Validate() error {
	return _fgff.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065")
}

// Validate validates the CT_CustomShowId and its children
func (_adcg *CT_CustomShowId) Validate() error {
	return _adcg.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077\u0049\u0064")
}

func (_bddde ST_TLAnimateMotionBehaviorOrigin) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_eebda := _g.Attr{}
	_eebda.Name = name
	switch _bddde {
	case ST_TLAnimateMotionBehaviorOriginUnset:
		_eebda.Value = ""
	case ST_TLAnimateMotionBehaviorOriginParent:
		_eebda.Value = "\u0070\u0061\u0072\u0065\u006e\u0074"
	case ST_TLAnimateMotionBehaviorOriginLayout:
		_eebda.Value = "\u006c\u0061\u0079\u006f\u0075\u0074"
	}
	return _eebda, nil
}

func (_gbd *CT_EmbeddedFontListEntry) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gbd.Font = _f.NewCT_TextFont()
_fcad:
	for {
		_dcd, _deag := d.Token()
		if _deag != nil {
			return _deag
		}
		switch _bfdc := _dcd.(type) {
		case _g.StartElement:
			switch _bfdc.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				if _acaa := d.DecodeElement(_gbd.Font, &_bfdc); _acaa != nil {
					return _acaa
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072e\u0067\u0075\u006c\u0061\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072e\u0067\u0075\u006c\u0061\u0072"}:
				_gbd.Regular = NewCT_EmbeddedFontDataId()
				if _cdbfb := d.DecodeElement(_gbd.Regular, &_bfdc); _cdbfb != nil {
					return _cdbfb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006f\u006c\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u006c\u0064"}:
				_gbd.Bold = NewCT_EmbeddedFontDataId()
				if _aebe := d.DecodeElement(_gbd.Bold, &_bfdc); _aebe != nil {
					return _aebe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u0074\u0061\u006c\u0069\u0063"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0061\u006c\u0069\u0063"}:
				_gbd.Italic = NewCT_EmbeddedFontDataId()
				if _fad := d.DecodeElement(_gbd.Italic, &_bfdc); _fad != nil {
					return _fad
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"}:
				_gbd.BoldItalic = NewCT_EmbeddedFontDataId()
				if _bdfa := d.DecodeElement(_gbd.BoldItalic, &_bfdc); _bdfa != nil {
					return _bdfa
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0069\u0073\u0074E\u006e\u0074\u0072\u0079\u0020%\u0076", _bfdc.Name)
				if _fffb := d.Skip(); _fffb != nil {
					return _fffb
				}
			}
		case _g.EndElement:
			break _fcad
		case _g.CharData:
		}
	}
	return nil
}

func (_ffbea ST_TransitionCornerDirectionType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_ffbea.String(), start)
}

func NewViewPr() *ViewPr {
	_eggd := &ViewPr{}
	_eggd.CT_ViewProperties = *NewCT_ViewProperties()
	return _eggd
}

func (_adbdc ST_PrintWhat) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_adbdc.String(), start)
}

type ST_TLTimeNodeType byte

// ValidateWithPath validates the CT_TLCommonTimeNodeData and its children, prefixing error messages with path
func (_adea *CT_TLCommonTimeNodeData) ValidateWithPath(path string) error {
	if _dgbbe := _adea.PresetClassAttr.ValidateWithPath(path + "\u002f\u0050r\u0065\u0073\u0065t\u0043\u006c\u0061\u0073\u0073\u0041\u0074\u0074\u0072"); _dgbbe != nil {
		return _dgbbe
	}
	if _adea.DurAttr != nil {
		if _gggg := _adea.DurAttr.ValidateWithPath(path + "\u002f\u0044\u0075\u0072\u0041\u0074\u0074\u0072"); _gggg != nil {
			return _gggg
		}
	}
	if _adea.RepeatCountAttr != nil {
		if _fgdgg := _adea.RepeatCountAttr.ValidateWithPath(path + "\u002f\u0052e\u0070\u0065\u0061t\u0043\u006f\u0075\u006e\u0074\u0041\u0074\u0074\u0072"); _fgdgg != nil {
			return _fgdgg
		}
	}
	if _adea.RepeatDurAttr != nil {
		if _bfab := _adea.RepeatDurAttr.ValidateWithPath(path + "\u002f\u0052\u0065\u0070\u0065\u0061\u0074\u0044\u0075r\u0041\u0074\u0074\u0072"); _bfab != nil {
			return _bfab
		}
	}
	if _adea.SpdAttr != nil {
		if _aeeab := _adea.SpdAttr.ValidateWithPath(path + "\u002f\u0053\u0070\u0064\u0041\u0074\u0074\u0072"); _aeeab != nil {
			return _aeeab
		}
	}
	if _adea.AccelAttr != nil {
		if _defcb := _adea.AccelAttr.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006c\u0041\u0074\u0074\u0072"); _defcb != nil {
			return _defcb
		}
	}
	if _adea.DecelAttr != nil {
		if _fdfdd := _adea.DecelAttr.ValidateWithPath(path + "\u002f\u0044\u0065\u0063\u0065\u006c\u0041\u0074\u0074\u0072"); _fdfdd != nil {
			return _fdfdd
		}
	}
	if _afffg := _adea.RestartAttr.ValidateWithPath(path + "\u002f\u0052\u0065s\u0074\u0061\u0072\u0074\u0041\u0074\u0074\u0072"); _afffg != nil {
		return _afffg
	}
	if _eafc := _adea.FillAttr.ValidateWithPath(path + "\u002fF\u0069\u006c\u006c\u0041\u0074\u0074r"); _eafc != nil {
		return _eafc
	}
	if _afdbf := _adea.SyncBehaviorAttr.ValidateWithPath(path + "\u002f\u0053\u0079\u006e\u0063\u0042\u0065\u0068\u0061\u0076\u0069\u006fr\u0041\u0074\u0074\u0072"); _afdbf != nil {
		return _afdbf
	}
	if _gbdca := _adea.MasterRelAttr.ValidateWithPath(path + "\u002f\u004d\u0061\u0073\u0074\u0065\u0072\u0052\u0065l\u0041\u0074\u0074\u0072"); _gbdca != nil {
		return _gbdca
	}
	if _fdagg := _adea.NodeTypeAttr.ValidateWithPath(path + "\u002f\u004e\u006f\u0064\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _fdagg != nil {
		return _fdagg
	}
	if _adea.StCondLst != nil {
		if _ffeb := _adea.StCondLst.ValidateWithPath(path + "\u002f\u0053\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _ffeb != nil {
			return _ffeb
		}
	}
	if _adea.EndCondLst != nil {
		if _faag := _adea.EndCondLst.ValidateWithPath(path + "/\u0045\u006e\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _faag != nil {
			return _faag
		}
	}
	if _adea.EndSync != nil {
		if _dbfga := _adea.EndSync.ValidateWithPath(path + "\u002f\u0045\u006e\u0064\u0053\u0079\u006e\u0063"); _dbfga != nil {
			return _dbfga
		}
	}
	if _adea.Iterate != nil {
		if _cdbbf := _adea.Iterate.ValidateWithPath(path + "\u002f\u0049\u0074\u0065\u0072\u0061\u0074\u0065"); _cdbbf != nil {
			return _cdbbf
		}
	}
	if _adea.ChildTnLst != nil {
		if _bbfd := _adea.ChildTnLst.ValidateWithPath(path + "/\u0043\u0068\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"); _bbfd != nil {
			return _bbfd
		}
	}
	if _adea.SubTnLst != nil {
		if _cbgcf := _adea.SubTnLst.ValidateWithPath(path + "\u002fS\u0075\u0062\u0054\u006e\u004c\u0073t"); _cbgcf != nil {
			return _cbgcf
		}
	}
	return nil
}

func (_acbd *CT_TLAnimVariantBooleanVal) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ecffd := range start.Attr {
		if _ecffd.Name.Local == "\u0076\u0061\u006c" {
			_edae, _ecac := _d.ParseBool(_ecffd.Value)
			if _ecac != nil {
				return _ecac
			}
			_acbd.ValAttr = _edae
			continue
		}
	}
	for {
		_cbcfg, _fcdca := d.Token()
		if _fcdca != nil {
			return _ce.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074B\u006f\u006f\u006c\u0065\u0061n\u0056\u0061l\u003a\u0020\u0025\u0073", _fcdca)
		}
		if _abdd, _bgdec := _cbcfg.(_g.EndElement); _bgdec && _abdd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_babca ST_TLTimeNodeFillType) Validate() error { return _babca.ValidateWithPath("") }

func (_gaeeb ST_TransitionCornerDirectionType) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_daaef := _g.Attr{}
	_daaef.Name = name
	switch _gaeeb {
	case ST_TransitionCornerDirectionTypeUnset:
		_daaef.Value = ""
	case ST_TransitionCornerDirectionTypeLu:
		_daaef.Value = "\u006c\u0075"
	case ST_TransitionCornerDirectionTypeRu:
		_daaef.Value = "\u0072\u0075"
	case ST_TransitionCornerDirectionTypeLd:
		_daaef.Value = "\u006c\u0064"
	case ST_TransitionCornerDirectionTypeRd:
		_daaef.Value = "\u0072\u0064"
	}
	return _daaef, nil
}

func (_fdca *CT_IndexRange) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0074"}, Value: _ce.Sprintf("\u0025\u0076", _fdca.StAttr)})
	start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0065\u006e\u0064"}, Value: _ce.Sprintf("\u0025\u0076", _fdca.EndAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the AG_TLBuild and its children, prefixing error messages with path
func (_ffc *AG_TLBuild) ValidateWithPath(path string) error { return nil }

func (_afce *CT_ConnectorNonVisual) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_afce.CNvPr = _f.NewCT_NonVisualDrawingProps()
	_afce.CNvCxnSpPr = _f.NewCT_NonVisualConnectorProperties()
	_afce.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_gecbb:
	for {
		_geab, _gef := d.Token()
		if _gef != nil {
			return _gef
		}
		switch _afa := _geab.(type) {
		case _g.StartElement:
			switch _afa.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _fgc := d.DecodeElement(_afce.CNvPr, &_afa); _fgc != nil {
					return _fgc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}:
				if _cbc := d.DecodeElement(_afce.CNvCxnSpPr, &_afa); _cbc != nil {
					return _cbc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _ceff := d.DecodeElement(_afce.NvPr, &_afa); _ceff != nil {
					return _ceff
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _afa.Name)
				if _dbe := d.Skip(); _dbe != nil {
					return _dbe
				}
			}
		case _g.EndElement:
			break _gecbb
		case _g.CharData:
		}
	}
	return nil
}

func (_ccbea *CT_SmartTags) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _ccec := range start.Attr {
		if _ccec.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ccec.Name.Local == "\u0069\u0064" || _ccec.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ccec.Name.Local == "\u0069\u0064" {
			_abgbb, _bgdea := _ccec.Value, error(nil)
			if _bgdea != nil {
				return _bgdea
			}
			_ccbea.IdAttr = _abgbb
			continue
		}
	}
	for {
		_afgf, _cagf := d.Token()
		if _cagf != nil {
			return _ce.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u006da\u0072\u0074\u0054\u0061\u0067\u0073\u003a\u0020\u0025\u0073", _cagf)
		}
		if _bfea, _bdfc := _afgf.(_g.EndElement); _bdfc && _bfea.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_CommentAuthorList struct {

	// Comment Author
	CmAuthor []*CT_CommentAuthor
}

func (_aea *CT_ControlList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _aea.Control != nil {
		_ddad := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u006f\u006e\u0074\u0072\u006fl"}}
		for _, _ddc := range _aea.Control {
			e.EncodeElement(_ddc, _ddad)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type CT_OutlineViewProperties struct {

	// Common View Properties
	CViewPr *CT_CommonViewProperties

	// List of Presentation Slides
	SldLst *CT_OutlineViewSlideList
	ExtLst *CT_ExtensionList
}

func (_efed *CT_CommentList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_abf:
	for {
		_gfb, _gaab := d.Token()
		if _gaab != nil {
			return _gaab
		}
		switch _cebb := _gfb.(type) {
		case _g.StartElement:
			switch _cebb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d"}:
				_acgg := NewCT_Comment()
				if _egef := d.DecodeElement(_acgg, &_cebb); _egef != nil {
					return _egef
				}
				_efed.Cm = append(_efed.Cm, _acgg)
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074L\u0069s\u0074\u0020\u0025\u0076", _cebb.Name)
				if _dgfg := d.Skip(); _dgfg != nil {
					return _dgfg
				}
			}
		case _g.EndElement:
			break _abf
		case _g.CharData:
		}
	}
	return nil
}

type ST_TLDiagramBuildType byte

const (
	ST_TransitionSpeedUnset ST_TransitionSpeed = 0
	ST_TransitionSpeedSlow  ST_TransitionSpeed = 1
	ST_TransitionSpeedMed   ST_TransitionSpeed = 2
	ST_TransitionSpeedFast  ST_TransitionSpeed = 3
)

func (_aebde ST_PhotoAlbumLayout) Validate() error { return _aebde.ValidateWithPath("") }

// Validate validates the CT_TLByAnimateColorTransform and its children
func (_gfafef *CT_TLByAnimateColorTransform) Validate() error {
	return _gfafef.ValidateWithPath("\u0043\u0054\u005f\u0054L\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043o\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d")
}

func (_gbcc *CT_CommonSlideData) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gbcc.SpTree = NewCT_GroupShape()
	for _, _adf := range start.Attr {
		if _adf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dgca, _cff := _adf.Value, error(nil)
			if _cff != nil {
				return _cff
			}
			_gbcc.NameAttr = &_dgca
			continue
		}
	}
_dacg:
	for {
		_gbbf, _cfa := d.Token()
		if _cfa != nil {
			return _cfa
		}
		switch _eeb := _gbbf.(type) {
		case _g.StartElement:
			switch _eeb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067"}:
				_gbcc.Bg = NewCT_Background()
				if _cba := d.DecodeElement(_gbcc.Bg, &_eeb); _cba != nil {
					return _cba
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0054\u0072\u0065\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0054\u0072\u0065\u0065"}:
				if _gfce := d.DecodeElement(_gbcc.SpTree, &_eeb); _gfce != nil {
					return _gfce
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_gbcc.CustDataLst = NewCT_CustomerDataList()
				if _bgb := d.DecodeElement(_gbcc.CustDataLst, &_eeb); _bgb != nil {
					return _bgb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_gbcc.Controls = NewCT_ControlList()
				if _fdg := d.DecodeElement(_gbcc.Controls, &_eeb); _fdg != nil {
					return _fdg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbcc.ExtLst = NewCT_ExtensionList()
				if _aae := d.DecodeElement(_gbcc.ExtLst, &_eeb); _aae != nil {
					return _aae
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u006f\u006eS\u006c\u0069\u0064\u0065\u0044\u0061\u0074\u0061\u0020\u0025\u0076", _eeb.Name)
				if _geef := d.Skip(); _geef != nil {
					return _geef
				}
			}
		case _g.EndElement:
			break _dacg
		case _g.CharData:
		}
	}
	return nil
}

const (
	ST_DirectionUnset ST_Direction = 0
	ST_DirectionHorz  ST_Direction = 1
	ST_DirectionVert  ST_Direction = 2
)

func NewCT_ExtensionListModify() *CT_ExtensionListModify {
	_gdfa := &CT_ExtensionListModify{}
	return _gdfa
}

const (
	ST_TransitionCornerDirectionTypeUnset ST_TransitionCornerDirectionType = 0
	ST_TransitionCornerDirectionTypeLu    ST_TransitionCornerDirectionType = 1
	ST_TransitionCornerDirectionTypeRu    ST_TransitionCornerDirectionType = 2
	ST_TransitionCornerDirectionTypeLd    ST_TransitionCornerDirectionType = 3
	ST_TransitionCornerDirectionTypeRd    ST_TransitionCornerDirectionType = 4
)

func (_ceebg *CT_SlideLayoutIdListEntry) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _cabb := range start.Attr {
		if _cabb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cabb.Name.Local == "\u0069\u0064" || _cabb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cabb.Name.Local == "\u0069\u0064" {
			_cdec, _afea := _cabb.Value, error(nil)
			if _afea != nil {
				return _afea
			}
			_ceebg.RIdAttr = _cdec
			continue
		}
		if _cabb.Name.Local == "\u0069\u0064" {
			_dcfe, _bdba := _d.ParseUint(_cabb.Value, 10, 32)
			if _bdba != nil {
				return _bdba
			}
			_efaa := uint32(_dcfe)
			_ceebg.IdAttr = &_efaa
			continue
		}
	}
_ffga:
	for {
		_ecfed, _ddfg := d.Token()
		if _ddfg != nil {
			return _ddfg
		}
		switch _fafb := _ecfed.(type) {
		case _g.StartElement:
			switch _fafb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ceebg.ExtLst = NewCT_ExtensionList()
				if _befdf := d.DecodeElement(_ceebg.ExtLst, &_fafb); _befdf != nil {
					return _befdf
				}
			default:
				_e.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079o\u0075t\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006et\u0072y\u0020\u0025v", _fafb.Name)
				if _eddce := d.Skip(); _eddce != nil {
					return _eddce
				}
			}
		case _g.EndElement:
			break _ffga
		case _g.CharData:
		}
	}
	return nil
}

type CT_IndexRange struct {

	// Start
	StAttr uint32

	// End
	EndAttr uint32
}

func NewCT_ApplicationNonVisualDrawingProps() *CT_ApplicationNonVisualDrawingProps {
	_bg := &CT_ApplicationNonVisualDrawingProps{}
	return _bg
}

// ValidateWithPath validates the CT_TLTimeNodeExclusive and its children, prefixing error messages with path
func (_gebdd *CT_TLTimeNodeExclusive) ValidateWithPath(path string) error {
	if _bcffb := _gebdd.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _bcffb != nil {
		return _bcffb
	}
	return nil
}

func (_afcfe ST_TLParaBuildType) Validate() error { return _afcfe.ValidateWithPath("") }

func (_ecbbd *ST_TLTimeNodeFillType) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_gdabac, _gcdd := d.Token()
	if _gcdd != nil {
		return _gcdd
	}
	if _fbdba, _gacaf := _gdabac.(_g.EndElement); _gacaf && _fbdba.Name == start.Name {
		*_ecbbd = 1
		return nil
	}
	if _gbfbb, _ecgac := _gdabac.(_g.CharData); !_ecgac {
		return _ce.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gdabac)
	} else {
		switch string(_gbfbb) {
		case "":
			*_ecbbd = 0
		case "\u0072\u0065\u006d\u006f\u0076\u0065":
			*_ecbbd = 1
		case "\u0066\u0072\u0065\u0065\u007a\u0065":
			*_ecbbd = 2
		case "\u0068\u006f\u006c\u0064":
			*_ecbbd = 3
		case "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e":
			*_ecbbd = 4
		}
	}
	_gdabac, _gcdd = d.Token()
	if _gcdd != nil {
		return _gcdd
	}
	if _febf, _dgfed := _gdabac.(_g.EndElement); _dgfed && _febf.Name == start.Name {
		return nil
	}
	return _ce.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gdabac)
}

func (_cebe *ST_TLTime) Validate() error { return _cebe.ValidateWithPath("") }

func (_cbaec ST_WebColorType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_cbaec.String(), start)
}

func NewCT_TimeNodeList() *CT_TimeNodeList { _abaea := &CT_TimeNodeList{}; return _abaea }

func (_dedg *CT_Shape) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dedg.NvSpPr = NewCT_ShapeNonVisual()
	_dedg.SpPr = _f.NewCT_ShapeProperties()
	for _, _efage := range start.Attr {
		if _efage.Name.Local == "\u0075s\u0065\u0042\u0067\u0046\u0069\u006cl" {
			_bgdc, _daed := _d.ParseBool(_efage.Value)
			if _daed != nil {
				return _daed
			}
			_dedg.UseBgFillAttr = &_bgdc
			continue
		}
	}
_eeaee:
	for {
		_aaeec, _cgedc := d.Token()
		if _cgedc != nil {
			return _cgedc
		}
		switch _gced := _aaeec.(type) {
		case _g.StartElement:
			switch _gced.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}:
				if _gccg := d.DecodeElement(_dedg.NvSpPr, &_gced); _gccg != nil {
					return _gccg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _faae := d.DecodeElement(_dedg.SpPr, &_gced); _faae != nil {
					return _faae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_dedg.Style = _f.NewCT_ShapeStyle()
				if _cgebg := d.DecodeElement(_dedg.Style, &_gced); _cgebg != nil {
					return _cgebg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				_dedg.TxBody = _f.NewCT_TextBody()
				if _cefb := d.DecodeElement(_dedg.TxBody, &_gced); _cefb != nil {
					return _cefb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dedg.ExtLst = NewCT_ExtensionListModify()
				if _aag := d.DecodeElement(_dedg.ExtLst, &_gced); _aag != nil {
					return _aag
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _gced.Name)
				if _adeg := d.Skip(); _adeg != nil {
					return _adeg
				}
			}
		case _g.EndElement:
			break _eeaee
		case _g.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SlideRelationshipListEntry and its children
func (_afbgg *CT_SlideRelationshipListEntry) Validate() error {
	return _afbgg.ValidateWithPath("\u0043\u0054_\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074\u0045nt\u0072\u0079")
}

func (_egcbd ST_TLTimeNodeMasterRelation) MarshalXMLAttr(name _g.Name) (_g.Attr, error) {
	_fecfgf := _g.Attr{}
	_fecfgf.Name = name
	switch _egcbd {
	case ST_TLTimeNodeMasterRelationUnset:
		_fecfgf.Value = ""
	case ST_TLTimeNodeMasterRelationSameClick:
		_fecfgf.Value = "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k"
	case ST_TLTimeNodeMasterRelationLastClick:
		_fecfgf.Value = "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k"
	case ST_TLTimeNodeMasterRelationNextClick:
		_fecfgf.Value = "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k"
	}
	return _fecfgf, nil
}

// Validate validates the CT_SlideMasterIdList and its children
func (_cebdb *CT_SlideMasterIdList) Validate() error {
	return _cebdb.ValidateWithPath("C\u0054_\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074")
}

func (_cefg *CT_ModifyVerifier) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _cefg.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _ce.Sprintf("\u0025\u0076", *_cefg.AlgorithmNameAttr)})
	}
	if _cefg.HashValueAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _ce.Sprintf("\u0025\u0076", *_cefg.HashValueAttr)})
	}
	if _cefg.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _ce.Sprintf("\u0025\u0076", *_cefg.SaltValueAttr)})
	}
	if _cefg.SpinValueAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073p\u0069\u006e\u0056\u0061\u006c\u0075e"}, Value: _ce.Sprintf("\u0025\u0076", *_cefg.SpinValueAttr)})
	}
	if _cefg.CryptProviderTypeAttr != _fg.ST_CryptProvUnset {
		_dbg, _cfef := _cefg.CryptProviderTypeAttr.MarshalXMLAttr(_g.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065r\u0054\u0079\u0070\u0065"})
		if _cfef != nil {
			return _cfef
		}
		start.Attr = append(start.Attr, _dbg)
	}
	if _cefg.CryptAlgorithmClassAttr != _fg.ST_AlgClassUnset {
		_fadf, _bdcga := _cefg.CryptAlgorithmClassAttr.MarshalXMLAttr(_g.Name{Local: "\u0063\u0072\u0079\u0070tA\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u0043\u006c\u0061\u0073\u0073"})
		if _bdcga != nil {
			return _bdcga
		}
		start.Attr = append(start.Attr, _fadf)
	}
	if _cefg.CryptAlgorithmTypeAttr != _fg.ST_AlgTypeUnset {
		_gbfg, _fffc := _cefg.CryptAlgorithmTypeAttr.MarshalXMLAttr(_g.Name{Local: "\u0063r\u0079p\u0074\u0041\u006c\u0067\u006fr\u0069\u0074h\u006d\u0054\u0079\u0070\u0065"})
		if _fffc != nil {
			return _fffc
		}
		start.Attr = append(start.Attr, _gbfg)
	}
	if _cefg.CryptAlgorithmSidAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074h\u006d\u0053\u0069\u0064"}, Value: _ce.Sprintf("\u0025\u0076", *_cefg.CryptAlgorithmSidAttr)})
	}
	if _cefg.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _ce.Sprintf("\u0025\u0076", *_cefg.SpinCountAttr)})
	}
	if _cefg.SaltDataAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0073\u0061\u006c\u0074\u0044\u0061\u0074\u0061"}, Value: _ce.Sprintf("\u0025\u0076", *_cefg.SaltDataAttr)})
	}
	if _cefg.HashDataAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0068\u0061\u0073\u0068\u0044\u0061\u0074\u0061"}, Value: _ce.Sprintf("\u0025\u0076", *_cefg.HashDataAttr)})
	}
	if _cefg.CryptProviderAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065\u0072"}, Value: _ce.Sprintf("\u0025\u0076", *_cefg.CryptProviderAttr)})
	}
	if _cefg.AlgIdExtAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074"}, Value: _ce.Sprintf("\u0025\u0076", *_cefg.AlgIdExtAttr)})
	}
	if _cefg.AlgIdExtSourceAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074\u0053o\u0075\u0072\u0063\u0065"}, Value: _ce.Sprintf("\u0025\u0076", *_cefg.AlgIdExtSourceAttr)})
	}
	if _cefg.CryptProviderTypeExtAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "c\u0072y\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070eE\u0078\u0074"}, Value: _ce.Sprintf("\u0025\u0076", *_cefg.CryptProviderTypeExtAttr)})
	}
	if _cefg.CryptProviderTypeExtSourceAttr != nil {
		start.Attr = append(start.Attr, _g.Attr{Name: _g.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070\u0065\u0045\u0078\u0074\u0053\u006fu\u0072\u0063\u0065"}, Value: _ce.Sprintf("\u0025\u0076", *_cefg.CryptProviderTypeExtSourceAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type EG_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

// ValidateWithPath validates the CT_TLTriggerTimeNodeID and its children, prefixing error messages with path
func (_badbf *CT_TLTriggerTimeNodeID) ValidateWithPath(path string) error { return nil }

func (_aabad *SldMaster) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_aabad.CT_SlideMaster = *NewCT_SlideMaster()
	for _, _degabb := range start.Attr {
		if _degabb.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_dafc, _bdbed := _d.ParseBool(_degabb.Value)
			if _bdbed != nil {
				return _bdbed
			}
			_aabad.PreserveAttr = &_dafc
			continue
		}
	}
_ebbeb:
	for {
		_adfd, _ccccb := d.Token()
		if _ccccb != nil {
			return _ccccb
		}
		switch _aagfd := _adfd.(type) {
		case _g.StartElement:
			switch _aagfd.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _ecgbf := d.DecodeElement(_aabad.CSld, &_aagfd); _ecgbf != nil {
					return _ecgbf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _bbaed := d.DecodeElement(_aabad.ClrMap, &_aagfd); _bbaed != nil {
					return _bbaed
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}:
				_aabad.SldLayoutIdLst = NewCT_SlideLayoutIdList()
				if _eagc := d.DecodeElement(_aabad.SldLayoutIdLst, &_aagfd); _eagc != nil {
					return _eagc
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_aabad.Transition = NewCT_SlideTransition()
				if _afbb := d.DecodeElement(_aabad.Transition, &_aagfd); _afbb != nil {
					return _afbb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_aabad.Timing = NewCT_SlideTiming()
				if _gbafg := d.DecodeElement(_aabad.Timing, &_aagfd); _gbafg != nil {
					return _gbafg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_aabad.Hf = NewCT_HeaderFooter()
				if _bcgcb := d.DecodeElement(_aabad.Hf, &_aagfd); _bcgcb != nil {
					return _bcgcb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_aabad.TxStyles = NewCT_SlideMasterTextStyles()
				if _efcf := d.DecodeElement(_aabad.TxStyles, &_aagfd); _efcf != nil {
					return _efcf
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aabad.ExtLst = NewCT_ExtensionListModify()
				if _ffdee := d.DecodeElement(_aabad.ExtLst, &_aagfd); _ffdee != nil {
					return _ffdee
				}
			default:
				_e.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0053\u006c\u0064\u004d\u0061\u0073t\u0065\u0072 \u0025\u0076", _aagfd.Name)
				if _bcfe := d.Skip(); _bcfe != nil {
					return _bcfe
				}
			}
		case _g.EndElement:
			break _ebbeb
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PrintProperties and its children, prefixing error messages with path
func (_egea *CT_PrintProperties) ValidateWithPath(path string) error {
	if _fgdcg := _egea.PrnWhatAttr.ValidateWithPath(path + "\u002f\u0050\u0072n\u0057\u0068\u0061\u0074\u0041\u0074\u0074\u0072"); _fgdcg != nil {
		return _fgdcg
	}
	if _fdcb := _egea.ClrModeAttr.ValidateWithPath(path + "\u002f\u0043\u006cr\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _fdcb != nil {
		return _fdcb
	}
	if _egea.ExtLst != nil {
		if _fccbb := _egea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fccbb != nil {
			return _fccbb
		}
	}
	return nil
}

func NewPresentation() *Presentation {
	_ggfb := &Presentation{}
	_ggfb.CT_Presentation = *NewCT_Presentation()
	return _ggfb
}

type CT_Comment struct {

	// Comment Author ID
	AuthorIdAttr uint32

	// Comment Date/Time
	DtAttr *_b.Time

	// Comment Index
	IdxAttr uint32

	// Comment Position
	Pos *_f.CT_Point2D

	// Comment's Text Content
	Text   string
	ExtLst *CT_ExtensionListModify
}

type CT_TLAnimVariantStringVal struct {

	// Value
	ValAttr string
}

type AG_Ole struct {
	SpidAttr       *string
	NameAttr       *string
	ShowAsIconAttr *bool
	IdAttr         *string
	ImgWAttr       *int32
	ImgHAttr       *int32
}

func (_acgefb ST_TransitionInOutDirectionType) String() string {
	switch _acgefb {
	case 0:
		return ""
	case 1:
		return "\u006f\u0075\u0074"
	case 2:
		return "\u0069\u006e"
	}
	return ""
}

// ValidateWithPath validates the CT_SlideSyncProperties and its children, prefixing error messages with path
func (_bgde *CT_SlideSyncProperties) ValidateWithPath(path string) error {
	if _bgde.ExtLst != nil {
		if _bcaf := _bgde.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bcaf != nil {
			return _bcaf
		}
	}
	return nil
}

type CT_Background struct {

	// Black and White Mode
	BwModeAttr _f.ST_BlackWhiteMode

	// Background Properties
	BgPr *CT_BackgroundProperties

	// Background Style Reference
	BgRef *_f.CT_StyleMatrixReference
}

func (_cfdca *CT_TLAnimateMotionBehavior) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_cfdca.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _egabg := range start.Attr {
		if _egabg.Name.Local == "\u006f\u0072\u0069\u0067\u0069\u006e" {
			_cfdca.OriginAttr.UnmarshalXMLAttr(_egabg)
			continue
		}
		if _egabg.Name.Local == "\u0070\u0061\u0074\u0068" {
			_ebeae, _ccfgb := _egabg.Value, error(nil)
			if _ccfgb != nil {
				return _ccfgb
			}
			_cfdca.PathAttr = &_ebeae
			continue
		}
		if _egabg.Name.Local == "\u0070\u0061\u0074h\u0045\u0064\u0069\u0074\u004d\u006f\u0064\u0065" {
			_cfdca.PathEditModeAttr.UnmarshalXMLAttr(_egabg)
			continue
		}
		if _egabg.Name.Local == "\u0072\u0041\u006e\u0067" {
			_dafaa, _fdab := _d.ParseInt(_egabg.Value, 10, 32)
			if _fdab != nil {
				return _fdab
			}
			_daabd := int32(_dafaa)
			_cfdca.RAngAttr = &_daabd
			continue
		}
		if _egabg.Name.Local == "\u0070\u0074\u0073\u0054\u0079\u0070\u0065\u0073" {
			_bede, _ffba := _egabg.Value, error(nil)
			if _ffba != nil {
				return _ffba
			}
			_cfdca.PtsTypesAttr = &_bede
			continue
		}
	}
_abdcd:
	for {
		_dedb, _gbbb := d.Token()
		if _gbbb != nil {
			return _gbbb
		}
		switch _afaa := _dedb.(type) {
		case _g.StartElement:
			switch _afaa.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _bffb := d.DecodeElement(_cfdca.CBhvr, &_afaa); _bffb != nil {
					return _bffb
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0079"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0079"}:
				_cfdca.By = NewCT_TLPoint()
				if _eaebe := d.DecodeElement(_cfdca.By, &_afaa); _eaebe != nil {
					return _eaebe
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}:
				_cfdca.From = NewCT_TLPoint()
				if _fbfae := d.DecodeElement(_cfdca.From, &_afaa); _fbfae != nil {
					return _fbfae
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_cfdca.To = NewCT_TLPoint()
				if _cffg := d.DecodeElement(_cfdca.To, &_afaa); _cffg != nil {
					return _cffg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0043\u0074\u0072"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0043\u0074\u0072"}:
				_cfdca.RCtr = NewCT_TLPoint()
				if _bdgeg := d.DecodeElement(_cfdca.RCtr, &_afaa); _bdgeg != nil {
					return _bdgeg
				}
			default:
				_e.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u004cA\u006e\u0069\u006d\u0061\u0074\u0065\u004d\u006f\u0074\u0069\u006f\u006e\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _afaa.Name)
				if _cbcfa := d.Skip(); _cbcfa != nil {
					return _cbcfa
				}
			}
		case _g.EndElement:
			break _abdcd
		case _g.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NotesMaster and its children, prefixing error messages with path
func (_fgbc *CT_NotesMaster) ValidateWithPath(path string) error {
	if _ebcbc := _fgbc.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _ebcbc != nil {
		return _ebcbc
	}
	if _aceb := _fgbc.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _aceb != nil {
		return _aceb
	}
	if _fgbc.Hf != nil {
		if _cebgd := _fgbc.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _cebgd != nil {
			return _cebgd
		}
	}
	if _fgbc.NotesStyle != nil {
		if _caad := _fgbc.NotesStyle.ValidateWithPath(path + "/\u004e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"); _caad != nil {
			return _caad
		}
	}
	if _fgbc.ExtLst != nil {
		if _afbfb := _fgbc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _afbfb != nil {
			return _afbfb
		}
	}
	return nil
}

func (_fcacd *ST_TLTimeNodeSyncType) UnmarshalXMLAttr(attr _g.Attr) error {
	switch attr.Value {
	case "":
		*_fcacd = 0
	case "\u0063a\u006e\u0053\u006c\u0069\u0070":
		*_fcacd = 1
	case "\u006c\u006f\u0063\u006b\u0065\u0064":
		*_fcacd = 2
	}
	return nil
}

func (_begff *CT_SideDirectionTransition) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	if _begff.DirAttr != ST_TransitionSideDirectionTypeUnset {
		_fccfe, _afgcf := _begff.DirAttr.MarshalXMLAttr(_g.Name{Local: "\u0064\u0069\u0072"})
		if _afgcf != nil {
			return _afgcf
		}
		start.Attr = append(start.Attr, _fccfe)
	}
	e.EncodeToken(start)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

type ST_TLTimeNodeSyncType byte

// ValidateWithPath validates the CT_TLByAnimateColorTransform and its children, prefixing error messages with path
func (_aabde *CT_TLByAnimateColorTransform) ValidateWithPath(path string) error {
	if _aabde.Rgb != nil {
		if _ffdb := _aabde.Rgb.ValidateWithPath(path + "\u002f\u0052\u0067\u0062"); _ffdb != nil {
			return _ffdb
		}
	}
	if _aabde.Hsl != nil {
		if _bfga := _aabde.Hsl.ValidateWithPath(path + "\u002f\u0048\u0073\u006c"); _bfga != nil {
			return _bfga
		}
	}
	return nil
}

func (_bgcec ST_OleObjectFollowColorScheme) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_bgcec.String(), start)
}

func (_geg *CT_CustomShowList) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	if _geg.CustShow != nil {
		_aaba := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		for _, _cad := range _geg.CustShow {
			e.EncodeElement(_cad, _aaba)
		}
	}
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

func NewCT_TLAnimVariantBooleanVal() *CT_TLAnimVariantBooleanVal {
	_fgdd := &CT_TLAnimVariantBooleanVal{}
	return _fgdd
}

func (_beaac ST_TLParaBuildType) ValidateWithPath(path string) error {
	switch _beaac {
	case 0, 1, 2, 3, 4:
	default:
		return _ce.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_beaac))
	}
	return nil
}

func NewCT_SlideRelationshipList() *CT_SlideRelationshipList {
	_gegg := &CT_SlideRelationshipList{}
	return _gegg
}

func (_dgag *CT_SlideIdListEntry) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	_dgag.IdAttr = 256
	for _, _fafcc := range start.Attr {
		if _fafcc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fafcc.Name.Local == "\u0069\u0064" || _fafcc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fafcc.Name.Local == "\u0069\u0064" {
			_dcag, _bgege := _fafcc.Value, error(nil)
			if _bgege != nil {
				return _bgege
			}
			_dgag.RIdAttr = _dcag
			continue
		}
		if _fafcc.Name.Local == "\u0069\u0064" {
			_degab, _cdbga := _d.ParseUint(_fafcc.Value, 10, 32)
			if _cdbga != nil {
				return _cdbga
			}
			_dgag.IdAttr = uint32(_degab)
			continue
		}
	}
_cdfdg:
	for {
		_gdfdg, _gaafc := d.Token()
		if _gaafc != nil {
			return _gaafc
		}
		switch _cbcb := _gdfdg.(type) {
		case _g.StartElement:
			switch _cbcb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dgag.ExtLst = NewCT_ExtensionList()
				if _baedb := d.DecodeElement(_dgag.ExtLst, &_cbcb); _baedb != nil {
					return _baedb
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049\u0064Li\u0073\u0074\u0045\u006e\u0074\u0072\u0079\u0020\u0025\u0076", _cbcb.Name)
				if _cddcb := d.Skip(); _cddcb != nil {
					return _cddcb
				}
			}
		case _g.EndElement:
			break _cdfdg
		case _g.CharData:
		}
	}
	return nil
}

func (_cdcaaa ST_SlideSizeType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_cdcaaa.String(), start)
}

func (_ffabc ST_ViewType) Validate() error { return _ffabc.ValidateWithPath("") }

func (_agfe *CT_GuideList) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_cfff:
	for {
		_efead, _debb := d.Token()
		if _debb != nil {
			return _debb
		}
		switch _feb := _efead.(type) {
		case _g.StartElement:
			switch _feb.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0075\u0069d\u0065"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0075\u0069d\u0065"}:
				_cgac := NewCT_Guide()
				if _bafa := d.DecodeElement(_cgac, &_feb); _bafa != nil {
					return _bafa
				}
				_agfe.Guide = append(_agfe.Guide, _cgac)
			default:
				_e.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_G\u0075\u0069d\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _feb.Name)
				if _abfa := d.Skip(); _abfa != nil {
					return _abfa
				}
			}
		case _g.EndElement:
			break _cfff
		case _g.CharData:
		}
	}
	return nil
}

func NewCT_TLGraphicalObjectBuild() *CT_TLGraphicalObjectBuild {
	_fegfe := &CT_TLGraphicalObjectBuild{}
	return _fegfe
}

// ValidateWithPath validates the CT_SlideMaster and its children, prefixing error messages with path
func (_gbeb *CT_SlideMaster) ValidateWithPath(path string) error {
	if _fddf := _gbeb.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _fddf != nil {
		return _fddf
	}
	if _dfdgd := _gbeb.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _dfdgd != nil {
		return _dfdgd
	}
	if _gbeb.SldLayoutIdLst != nil {
		if _dfbb := _gbeb.SldLayoutIdLst.ValidateWithPath(path + "\u002fS\u006cd\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064\u004c\u0073\u0074"); _dfbb != nil {
			return _dfbb
		}
	}
	if _gbeb.Transition != nil {
		if _cacd := _gbeb.Transition.ValidateWithPath(path + "/\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"); _cacd != nil {
			return _cacd
		}
	}
	if _gbeb.Timing != nil {
		if _dgaf := _gbeb.Timing.ValidateWithPath(path + "\u002fT\u0069\u006d\u0069\u006e\u0067"); _dgaf != nil {
			return _dgaf
		}
	}
	if _gbeb.Hf != nil {
		if _becf := _gbeb.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _becf != nil {
			return _becf
		}
	}
	if _gbeb.TxStyles != nil {
		if _dbagg := _gbeb.TxStyles.ValidateWithPath(path + "\u002fT\u0078\u0053\u0074\u0079\u006c\u0065s"); _dbagg != nil {
			return _dbagg
		}
	}
	if _gbeb.ExtLst != nil {
		if _eebb := _gbeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eebb != nil {
			return _eebb
		}
	}
	return nil
}

// ValidateWithPath validates the EG_Background and its children, prefixing error messages with path
func (_bdbae *EG_Background) ValidateWithPath(path string) error {
	if _bdbae.BgPr != nil {
		if _dffdd := _bdbae.BgPr.ValidateWithPath(path + "\u002f\u0042\u0067P\u0072"); _dffdd != nil {
			return _dffdd
		}
	}
	if _bdbae.BgRef != nil {
		if _faacb := _bdbae.BgRef.ValidateWithPath(path + "\u002f\u0042\u0067\u0052\u0065\u0066"); _faacb != nil {
			return _faacb
		}
	}
	return nil
}

func (_gfbdc ST_PrintColorMode) Validate() error { return _gfbdc.ValidateWithPath("") }

// ValidateWithPath validates the CT_NotesMasterIdList and its children, prefixing error messages with path
func (_bade *CT_NotesMasterIdList) ValidateWithPath(path string) error {
	if _bade.NotesMasterId != nil {
		if _cdca := _bade.NotesMasterId.ValidateWithPath(path + "\u002f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065\u0072\u0049\u0064"); _cdca != nil {
			return _cdca
		}
	}
	return nil
}

func (_ceaae ST_TransitionInOutDirectionType) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	return e.EncodeElement(_ceaae.String(), start)
}

func (_gdbg *CT_GraphicalObjectFrameNonVisual) MarshalXML(e *_g.Encoder, start _g.StartElement) error {
	e.EncodeToken(start)
	_dfdfc := _g.StartElement{Name: _g.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_gdbg.CNvPr, _dfdfc)
	_dddee := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u0063\u004evG\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_gdbg.CNvGraphicFramePr, _dddee)
	_gagc := _g.StartElement{Name: _g.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_gdbg.NvPr, _gagc)
	e.EncodeToken(_g.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TLParaBuildTypeUnset     ST_TLParaBuildType = 0
	ST_TLParaBuildTypeAllAtOnce ST_TLParaBuildType = 1
	ST_TLParaBuildTypeP         ST_TLParaBuildType = 2
	ST_TLParaBuildTypeCust      ST_TLParaBuildType = 3
	ST_TLParaBuildTypeWhole     ST_TLParaBuildType = 4
)

func (_dcaa *CT_SideDirectionTransition) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
	for _, _gefeg := range start.Attr {
		if _gefeg.Name.Local == "\u0064\u0069\u0072" {
			_dcaa.DirAttr.UnmarshalXMLAttr(_gefeg)
			continue
		}
	}
	for {
		_ebgf, _gdbeg := d.Token()
		if _gdbeg != nil {
			return _ce.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0069\u0064\u0065\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006eT\u0072\u0061\u006e\u0073\u0069t\u0069\u006fn\u003a\u0020\u0025\u0073", _gdbeg)
		}
		if _bedf, _caacb := _ebgf.(_g.EndElement); _caacb && _bedf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NotesSlide and its children, prefixing error messages with path
func (_gcba *CT_NotesSlide) ValidateWithPath(path string) error {
	if _cdaf := _gcba.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _cdaf != nil {
		return _cdaf
	}
	if _gcba.ClrMapOvr != nil {
		if _bbdb := _gcba.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _bbdb != nil {
			return _bbdb
		}
	}
	if _gcba.ExtLst != nil {
		if _deedc := _gcba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _deedc != nil {
			return _deedc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_afb *CT_Empty) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_TLTimeNodeExclusive and its children
func (_affdf *CT_TLTimeNodeExclusive) Validate() error {
	return _affdf.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0045\u0078\u0063\u006c\u0075\u0073\u0069v\u0065")
}

type CT_CommonViewProperties struct {

	// Variable Scale
	VarScaleAttr *bool

	// View Scale
	Scale *_f.CT_Scale2D

	// View Origin
	Origin *_f.CT_Point2D
}

func (_aebf *CT_OleObjectChoice) UnmarshalXML(d *_g.Decoder, start _g.StartElement) error {
_dcde:
	for {
		_ffcd, _fbea := d.Token()
		if _fbea != nil {
			return _fbea
		}
		switch _abaa := _ffcd.(type) {
		case _g.StartElement:
			switch _abaa.Name {
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}:
				_aebf.Embed = NewCT_OleObjectEmbed()
				if _gbggg := d.DecodeElement(_aebf.Embed, &_abaa); _gbggg != nil {
					return _gbggg
				}
			case _g.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}, _g.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}:
				_aebf.Link = NewCT_OleObjectLink()
				if _ddddc := d.DecodeElement(_aebf.Link, &_abaa); _ddddc != nil {
					return _ddddc
				}
			default:
				_e.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006ae\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _abaa.Name)
				if _fcca := d.Skip(); _fcca != nil {
					return _fcca
				}
			}
		case _g.EndElement:
			break _dcde
		case _g.CharData:
		}
	}
	return nil
}

type ST_TLAnimateColorDirection byte

type CT_Picture struct {

	// Non-Visual Properties for a Picture
	NvPicPr *CT_PictureNonVisual

	// Picture Fill
	BlipFill *_f.CT_BlipFillProperties
	SpPr     *_f.CT_ShapeProperties
	Style    *_f.CT_ShapeStyle
	ExtLst   *CT_ExtensionListModify
}

type CT_GroupShape struct {

	// Non-Visual Properties for a Group Shape
	NvGrpSpPr *CT_GroupShapeNonVisual

	// Group Shape Properties
	GrpSpPr *_f.CT_GroupShapeProperties
	Choice  []*CT_GroupShapeChoice
	ExtLst  *CT_ExtensionListModify
}

type CT_WheelTransition struct {

	// Spokes
	SpokesAttr *uint32
}

// Validate validates the CT_TLTriggerTimeNodeID and its children
func (_aebb *CT_TLTriggerTimeNodeID) Validate() error {
	return _aebb.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0072\u0069\u0067\u0067\u0065\u0072\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065I\u0044")
}

func (_cfeea ST_TLTimeNodeType) String() string {
	switch _cfeea {
	case 0:
		return ""
	case 1:
		return "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074"
	case 2:
		return "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074"
	case 3:
		return "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074"
	case 4:
		return "\u006da\u0069\u006e\u0053\u0065\u0071"
	case 5:
		return "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071"
	case 6:
		return "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072"
	case 7:
		return "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p"
	case 8:
		return "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070"
	case 9:
		return "\u0074\u006d\u0052\u006f\u006f\u0074"
	}
	return ""
}

func init() {
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0069\u0064\u0065\u0044\u0069\u0072\u0065c\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e", NewCT_SideDirectionTransition)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043o\u0072\u006e\u0065\u0072\u0044\u0069\u0072\u0065\u0063\u0074i\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e", NewCT_CornerDirectionTransition)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0045\u0069\u0067\u0068t\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006eT\u0072\u0061\u006es\u0069t\u0069\u006f\u006e", NewCT_EightDirectionTransition)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004f\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e", NewCT_OrientationTransition)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fI\u006e\u004f\u0075\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_InOutTransition)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004f\u0070\u0074\u0069\u006f\u006e\u0061\u006cB\u006c\u0061\u0063\u006b\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e", NewCT_OptionalBlackTransition)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fS\u0070\u006c\u0069\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_SplitTransition)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fW\u0068\u0065\u0065\u006c\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_WheelTransition)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u0074\u0061\u0072\u0074\u0053\u006f\u0075\u006e\u0064\u0041\u0063ti\u006f\u006e", NewCT_TransitionStartSoundAction)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006eS\u006f\u0075\u006e\u0064\u0041\u0063\u0074\u0069\u006f\u006e", NewCT_TransitionSoundAction)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fS\u006c\u0069\u0064\u0065\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_SlideTransition)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0049n\u0074\u0065\u0072\u0076\u0061\u006c\u0054\u0069\u006d\u0065", NewCT_TLIterateIntervalTime)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061t\u0065\u0049\u006e\u0074\u0065\u0072\u0076a\u006c\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065", NewCT_TLIterateIntervalPercentage)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u004c\u0049t\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061", NewCT_TLIterateData)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u004c\u0053\u0075\u0062\u0053\u0068\u0061\u0070\u0065\u0049\u0064", NewCT_TLSubShapeId)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0065\u0078\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074", NewCT_TLTextTargetElement)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u004f\u006c\u0065\u0043\u0068\u0061r\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074", NewCT_TLOleChartTargetElement)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0053\u0068\u0061\u0070\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074", NewCT_TLShapeTargetElement)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074", NewCT_TLTimeTargetElement)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0072\u0069\u0067\u0067\u0065\u0072\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065I\u0044", NewCT_TLTriggerTimeNodeID)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0054\u0072\u0069\u0067\u0067\u0065\u0072\u0052\u0075\u006e\u0074\u0069\u006d\u0065\u004e\u006f\u0064\u0065", NewCT_TLTriggerRuntimeNode)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u004c\u0054\u0069\u006d\u0065C\u006f\u006ed\u0069\u0074\u0069\u006f\u006e", NewCT_TLTimeCondition)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u004c\u0069s\u0074", NewCT_TLTimeConditionList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_TimeNodeList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061", NewCT_TLCommonTimeNodeData)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0050a\u0072\u0061\u006c\u006c\u0065\u006c", NewCT_TLTimeNodeParallel)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0053e\u0071\u0075\u0065\u006e\u0063\u0065", NewCT_TLTimeNodeSequence)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0045\u0078\u0063\u006c\u0075\u0073\u0069v\u0065", NewCT_TLTimeNodeExclusive)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0042\u0065\u0068\u0061\u0076i\u006f\u0072\u0041\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u004e\u0061\u006d\u0065\u004c\u0069\u0073\u0074", NewCT_TLBehaviorAttributeNameList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0044\u0061\u0074\u0061", NewCT_TLCommonBehaviorData)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0042\u006f\u006f\u006c\u0065\u0061n\u0056\u0061\u006c", NewCT_TLAnimVariantBooleanVal)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0049\u006e\u0074\u0065\u0067\u0065r\u0056\u0061\u006c", NewCT_TLAnimVariantIntegerVal)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069a\u006e\u0074\u0046\u006c\u006f\u0061\u0074\u0056\u0061\u006c", NewCT_TLAnimVariantFloatVal)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072i\u0061n\u0074S\u0074\u0072\u0069\u006e\u0067\u0056\u0061l", NewCT_TLAnimVariantStringVal)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074", NewCT_TLAnimVariant)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u004cTi\u006de\u0041\u006e\u0069\u006d\u0061t\u0065\u0056\u0061\u006c\u0075\u0065", NewCT_TLTimeAnimateValue)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0054i\u006d\u0065\u0041\u006e\u0069m\u0061t\u0065V\u0061\u006c\u0075\u0065\u004c\u0069\u0073t", NewCT_TLTimeAnimateValueList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0042\u0065\u0068\u0061vi\u006f\u0072", NewCT_TLAnimateBehavior)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0042\u0079\u0052\u0067\u0062\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_TLByRgbColorTransform)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0042\u0079\u0048\u0073\u006c\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_TLByHslColorTransform)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054L\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043o\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d", NewCT_TLByAnimateColorTransform)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065C\u006fl\u006fr\u0042\u0065\u0068\u0061\u0076\u0069\u006fr", NewCT_TLAnimateColorBehavior)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0045\u0066\u0066\u0065\u0063\u0074\u0042\u0065\u0068\u0061v\u0069\u006f\u0072", NewCT_TLAnimateEffectBehavior)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0050\u006f\u0069\u006e\u0074", NewCT_TLPoint)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u004d\u006f\u0074\u0069\u006f\u006e\u0042\u0065\u0068\u0061v\u0069\u006f\u0072", NewCT_TLAnimateMotionBehavior)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054L\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0052\u006f\u0074a\u0074i\u006f\u006e\u0042\u0065\u0068\u0061\u0076i\u006f\u0072", NewCT_TLAnimateRotationBehavior)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065S\u0063a\u006ce\u0042\u0065\u0068\u0061\u0076\u0069\u006fr", NewCT_TLAnimateScaleBehavior)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0054\u004c\u0043\u006f\u006d\u006d\u0061\u006ed\u0042\u0065\u0068\u0061vi\u006f\u0072", NewCT_TLCommandBehavior)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u004c\u0053e\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072", NewCT_TLSetBehavior)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u004d\u0065d\u0069\u0061\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061", NewCT_TLCommonMediaNodeData)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0041\u0075\u0064\u0069\u006f", NewCT_TLMediaNodeAudio)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0056\u0069\u0064\u0065\u006f", NewCT_TLMediaNodeVideo)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065", NewCT_TLTemplate)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u004c\u0069\u0073\u0074", NewCT_TLTemplateList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LB\u0075\u0069\u006c\u0064\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068", NewCT_TLBuildParagraph)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u0044\u0069a\u0067\u0072\u0061\u006d", NewCT_TLBuildDiagram)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u004c\u004f\u006c\u0065\u0042u\u0069\u006cd\u0043\u0068\u0061\u0072\u0074", NewCT_TLOleBuildChart)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0047r\u0061\u0070\u0068\u0069\u0063a\u006cO\u0062j\u0065\u0063\u0074\u0042\u0075\u0069\u006cd", NewCT_TLGraphicalObjectBuild)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fB\u0075\u0069\u006c\u0064\u004c\u0069\u0073\u0074", NewCT_BuildList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054i\u006d\u0069\u006e\u0067", NewCT_SlideTiming)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079", NewCT_Empty)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078\u0052\u0061\u006e\u0067\u0065", NewCT_IndexRange)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074\u0045nt\u0072\u0079", NewCT_SlideRelationshipListEntry)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074i\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074", NewCT_SlideRelationshipList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077\u0049\u0064", NewCT_CustomShowId)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061", NewCT_CustomerData)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u0061\u0067\u0073\u0044\u0061\u0074\u0061", NewCT_TagsData)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061\u004c\u0069\u0073\u0074", NewCT_CustomerDataList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e", NewCT_Extension)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewCT_ExtensionList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0045xt\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u004d\u006f\u0064\u0069f\u0079", NewCT_ExtensionListModify)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0043\u006f\u006dm\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072", NewCT_CommentAuthor)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041u\u0074\u0068\u006f\u0072Li\u0073\u0074", NewCT_CommentAuthorList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074", NewCT_Comment)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074", NewCT_CommentList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074E\u006d\u0062\u0065\u0064", NewCT_OleObjectEmbed)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u004f\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u004c\u0069\u006e\u006b", NewCT_OleObjectLink)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074", NewCT_OleObject)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c", NewCT_Control)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006fl\u004c\u0069\u0073\u0074", NewCT_ControlList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053li\u0064\u0065\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079", NewCT_SlideIdListEntry)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049d\u004c\u0069\u0073\u0074", NewCT_SlideIdList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069d\u0065\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y", NewCT_SlideMasterIdListEntry)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074", NewCT_SlideMasterIdList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004e\u006f\u0074e\u0073\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y", NewCT_NotesMasterIdListEntry)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074", NewCT_NotesMasterIdList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049d\u004c\u0069\u0073t\u0045n\u0074\u0072\u0079", NewCT_HandoutMasterIdListEntry)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0048an\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069s\u0074", NewCT_HandoutMasterIdList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0045\u006dbe\u0064d\u0065\u0064\u0046\u006f\u006et\u0044\u0061\u0074\u0061\u0049\u0064", NewCT_EmbeddedFontDataId)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006fn\u0074\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079", NewCT_EmbeddedFontListEntry)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0045mb\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0069\u0073\u0074", NewCT_EmbeddedFontList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073", NewCT_SmartTags)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077", NewCT_CustomShow)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006fw\u004c\u0069\u0073\u0074", NewCT_CustomShowList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d", NewCT_PhotoAlbum)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fS\u006c\u0069\u0064\u0065\u0053\u0069\u007a\u0065", NewCT_SlideSize)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004b\u0069\u006e\u0073\u006f\u006b\u0075", NewCT_Kinsoku)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072", NewCT_ModifyVerifier)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fP\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e", NewCT_Presentation)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u006c\u0069\u0073h\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_HtmlPublishProperties)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0057\u0065\u0062P\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_WebProperties)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fP\u0072\u0069\u006e\u0074\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewCT_PrintProperties)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0049\u006e\u0066\u006f\u0042r\u006f\u0077\u0073\u0065", NewCT_ShowInfoBrowse)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0053\u0068\u006fw\u0049\u006e\u0066\u006f\u004b\u0069\u006f\u0073\u006b", NewCT_ShowInfoKiosk)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_ShowProperties)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074i\u006fn\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s", NewCT_PresentationProperties)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072", NewCT_HeaderFooter)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050\u006c\u0061\u0063\u0065\u0068o\u006c\u0064\u0065\u0072", NewCT_Placeholder)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0041\u0070\u0070\u006ci\u0063\u0061\u0074\u0069\u006f\u006eN\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006fp\u0073", NewCT_ApplicationNonVisualDrawingProps)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c", NewCT_ShapeNonVisual)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065", NewCT_Shape)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_ConnectorNonVisual)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072", NewCT_Connector)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_PictureNonVisual)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065", NewCT_Picture)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006ae\u0063t\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GraphicalObjectFrameNonVisual)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fGr\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065", NewCT_GraphicalObjectFrame)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c", NewCT_GroupShapeNonVisual)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065", NewCT_GroupShape)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u006c", NewCT_Rel)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_BackgroundProperties)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064", NewCT_Background)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fC\u006f\u006d\u006d\u006f\u006eS\u006c\u0069d\u0065\u0044\u0061\u0074\u0061", NewCT_CommonSlideData)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065", NewCT_Slide)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004ca\u0079\u006f\u0075\u0074", NewCT_SlideLayout)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065r\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065\u0073", NewCT_SlideMasterTextStyles)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069d\u0065\u004c\u0061\u0079\u006fu\u0074I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y", NewCT_SlideLayoutIdListEntry)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079o\u0075\u0074\u0049\u0064Li\u0073\u0074", NewCT_SlideLayoutIdList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004da\u0073\u0074\u0065\u0072", NewCT_SlideMaster)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0048\u0061\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072", NewCT_HandoutMaster)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004da\u0073\u0074\u0065\u0072", NewCT_NotesMaster)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0053\u006c\u0069\u0064\u0065", NewCT_NotesSlide)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053li\u0064\u0065\u0053\u0079\u006e\u0063\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_SlideSyncProperties)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fS\u0074\u0072\u0069\u006e\u0067\u0054\u0061\u0067", NewCT_StringTag)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0067\u004c\u0069\u0073\u0074", NewCT_TagList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069e\u0077\u0050\u006f\u0072ti\u006f\u006e", NewCT_NormalViewPortion)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fNo\u0072\u006d\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NormalViewProperties)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fCo\u006d\u006d\u006f\u006e\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_CommonViewProperties)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0054\u0065\u0078t\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_NotesTextViewProperties)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0053\u006c\u0069\u0064\u0065\u0045\u006e\u0074\u0072\u0079", NewCT_OutlineViewSlideEntry)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fOu\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0053\u006c\u0069\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_OutlineViewSlideList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_OutlineViewProperties)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053l\u0069\u0064\u0065\u0053\u006f\u0072\u0074\u0065\u0072\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073", NewCT_SlideSorterViewProperties)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047\u0075\u0069\u0064\u0065", NewCT_Guide)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fG\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_GuideList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043o\u006d\u006d\u006f\u006e\u0053\u006c\u0069\u0064\u0065\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073", NewCT_CommonSlideViewProperties)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053li\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_SlideViewProperties)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004eot\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_NotesViewProperties)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_ViewProperties)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "c\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074", NewCmAuthorLst)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0063\u006d\u004cs\u0074", NewCmLst)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u006f\u006c\u0065\u004f\u0062\u006a", NewOleObj)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0070\u0072\u0065s\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e", NewPresentation)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u0050\u0072", NewPresentationPr)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073\u006c\u0064", NewSld)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073l\u0064\u004c\u0061\u0079\u006f\u0075t", NewSldLayout)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073l\u0064\u004d\u0061\u0073\u0074\u0065r", NewSldMaster)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0068\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072", NewHandoutMaster)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "n\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072", NewNotesMaster)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u006e\u006f\u0074e\u0073", NewNotes)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073l\u0064\u0053\u0079\u006e\u0063\u0050r", NewSldSyncPr)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0074\u0061\u0067\u004c\u0073\u0074", NewTagLst)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0076\u0069\u0065\u0077\u0050\u0072", NewViewPr)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045G\u005fS\u006c\u0069\u0064\u0065\u004ci\u0073\u0074C\u0068\u006f\u0069\u0063\u0065", NewEG_SlideListChoice)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewEG_ExtensionList)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "E\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065", NewEG_ShowType)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047_\u0054\u006f\u0070L\u0065\u0076\u0065\u006c\u0053\u006c\u0069\u0064\u0065", NewEG_TopLevelSlide)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065", NewEG_ChildSlide)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064", NewEG_Background)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0041\u0047\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064", NewAG_TLBuild)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0041\u0047\u005f\u004f\u006c\u0065", NewAG_Ole)
	_eb.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0041\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065", NewAG_ChildSlide)
}
